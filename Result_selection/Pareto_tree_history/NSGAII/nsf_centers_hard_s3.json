{"1": [{"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( DS / RCSe ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "( Max( FirstVNF_CPU,Const ) + ( ARS * FirstVNF_Mem ) )", "choosing": "( ( MLU - MUM ) / ( RMSe / Min( Max( ( ( MLU + RRSe ) / ( RMSe + ( RRSe - ( CS - RRSe ) ) ) ),RCSe ) ,MUR ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_RAM_Server ) + ( ( ( ( ( FirstVNF_CPU_Server - Const ) * BR ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Const ) - FirstVNF_CPU ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUM * ( MLU / MUR ) ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( Min( ARS ,MDR ) / Max( Const,( Const - Min( ARS ,ARS ) ) ) ) - Max( Max( MRS,ARS ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Min( Min( ( RRSe + Min( RMSe ,Min( CS ,RMSe ) ) ) ,MLU ) ,MUC ),MLU ) * MUM ) - ( ( RMSe + MUR ) + ( Max( Max( ( ( MUC - ( MUC / RRSe ) ) * MUR ),MUC ),MUR ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,Max( ( RRS / PN ),Min( ( FirstVNF_Mem / DDR ) ,DDR ) ) ) - Max( ACS,AMS ) )", "choosing": "( ( ( DS * MUM ) * Min( ( ( ( ( Max( MUM,MLU ) * MUR ) + RMSe ) / MUM ) + ( MUC / RMSe ) ) ,MUC ) ) / Min( MUC ,( DS * ( RRSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU / Max( FirstVNF_CPU,ARS ) ) / ( FirstVNF_RAM_Server * BR ) ) / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),Min( MUC ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( Max( DS,DS ) + ( MUM + ( ( Max( RRSe,( RCSe * Max( CS,Min( MLU ,MUM ) ) ) ) / RMSe ) / RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401057}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( RRS * AMS ) ) ),( DDR / ARS ) )", "choosing": "( ( ( RRSe - ( RMSe + MUM ) ) * Max( CS,MUM ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25204731463681707}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( CRS,DDR ) ),Min( ( FirstVNF_RAM / Const ) ,Max( FirstVNF_CPU,DDR ) ) ),( ( ( FirstVNF_RAM / MDR ) * ( DDR * RRS ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - RMSe ) + MUM ),( MUM / Max( MUR,RCSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.2614169448142151}, {"determining": "( Max( ( ( Const * Min( FirstVNF_RAM_Server ,( Min( PN ,DDR ) * CRS ) ) ) * ARS ),( MRS + ( MDR * FirstVNF_Mem ) ) ) - Max( Min( Max( BR,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ),Min( ( CRS / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( FirstVNF_Mem_Server + ( PN + MDR ) ) * Min( BR ,PN ) )", "choosing": "Min( Max( ( MUR * MUC ),( ( RMSe + MLU ) * Max( CS,CS ) ) ) ,Min( RRSe ,CS ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Min( ARS ,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUC + ( RRSe + RMSe ) ),( Max( ( MUM - DS ),( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "( ( RRS - ( CRS - FirstVNF_RAM_Server ) ) / ( BR / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( ( ( RCSe / ( MUR - RMSe ) ) - DS ) * Min( ( RRSe - ( MUR / MUR ) ) ,( MLU * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( DS / RCSe ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "( Max( FirstVNF_CPU,Const ) + ( ARS * FirstVNF_Mem ) )", "choosing": "( ( MLU - MUM ) / ( RMSe / Min( Max( ( ( MLU + RRSe ) / ( RMSe + ( RRSe - ( CS - RRSe ) ) ) ),RCSe ) ,MUR ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_RAM_Server ) + ( ( ( ( ( FirstVNF_CPU_Server - Const ) * BR ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Const ) - FirstVNF_CPU ) )", "choosing": "Min( Min( RMSe ,DS ) ,( MUM * ( MLU / MUR ) ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( Min( ARS ,MDR ) / Max( Const,( Const - Min( ARS ,ARS ) ) ) ) - Max( Max( MRS,ARS ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Min( Min( ( RRSe + Min( RMSe ,Min( CS ,RMSe ) ) ) ,MLU ) ,MUC ),MLU ) * MUM ) - ( ( RMSe + MUR ) + ( Max( Max( ( ( MUC - ( MUC / RRSe ) ) * MUR ),MUC ),MUR ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,Max( ( RRS / PN ),Min( ( FirstVNF_Mem / DDR ) ,DDR ) ) ) - Max( ACS,AMS ) )", "choosing": "( ( ( DS * MUM ) * Min( ( ( ( ( Max( MUM,MLU ) * MUR ) + RMSe ) / MUM ) + ( MUC / RMSe ) ) ,MUC ) ) / Min( MUC ,( DS * ( RRSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU / Max( FirstVNF_CPU,ARS ) ) / ( FirstVNF_RAM_Server * BR ) ) / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),Min( MUC ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( RRS * AMS ) ) ),( DDR / ARS ) )", "choosing": "( ( ( RRSe - ( RMSe + MUM ) ) * Max( CS,MUM ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const * Min( FirstVNF_RAM_Server ,( Min( PN ,DDR ) * CRS ) ) ) * ARS ),( MRS + ( MDR * FirstVNF_Mem ) ) ) - Max( Min( Max( BR,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ),Min( ( CRS / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( FirstVNF_Mem_Server + ( PN + MDR ) ) * Min( BR ,PN ) )", "choosing": "Min( Max( ( MUR * MUC ),( ( RMSe + MLU ) * Max( CS,CS ) ) ) ,Min( RRSe ,CS ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Min( ARS ,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUC + ( RRSe + RMSe ) ),( Max( ( MUM - DS ),( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "( ( RRS - ( CRS - FirstVNF_RAM_Server ) ) / ( BR / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( ( ( RCSe / ( MUR - RMSe ) ) - DS ) * Min( ( RRSe - ( MUR / MUR ) ) ,( MLU * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - ( FirstVNF_CPU_Server - CRS ) ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( Min( MUC ,DS ) - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * DDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( CRS / Max( ACS,ACS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Min( RMSe ,RMSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( Min( ( ( RMSe + DS ) - Min( DS ,DS ) ) ,( MLU + ( MUR + RRSe ) ) ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( Min( ( CRS + ARS ) ,( Max( FirstVNF_RAM,MRS ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - Max( Max( FirstVNF_CPU_Server,( FirstVNF_CPU * Max( FirstVNF_CPU,RRS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( Max( MUM,RMSe ) + Max( ( RRSe - DS ),Max( ( RCSe * MUM ),MUM ) ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) ,Min( Min( Max( MUM,( MUR / RCSe ) ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) )", "obj1": 0.9314775160599572, "obj2": 0.06883972842869668}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),Min( Max( ACS,BR ) ,( PN * CRS ) ) ) - ( Min( Max( FirstVNF_RAM_Server,CRS ) ,( ARS * Const ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( RCSe + RMSe ) / Min( CS ,MUC ) ) ,DS ) * ( MUR / Min( ( ( RCSe - MLU ) + ( RMSe * MLU ) ) ,RMSe ) ) ) - RMSe ) - DS ),( ( CS / CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + ( ( Max( MDR,AMS ) + AMS ) + MDR ) ) * Min( BR ,PN ) )", "choosing": "Min( ( ( MUR * MUC ) + ( ( RMSe + MLU ) * Max( CS,CS ) ) ) ,( MUM - MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( ( ( DDR - FirstVNF_RAM ) / Min( MRS ,DDR ) ) - ( AMS / FirstVNF_RAM ) )", "choosing": "( ( RCSe + RMSe ) * ( RMSe - MUC ) )", "obj1": 0.9421841541755889, "obj2": 0.06637073799145166}, {"determining": "( ( BR + FirstVNF_Mem ) - ( PN / Const ) )", "choosing": "( ( Min( ( CS * RMSe ) ,( ( ( ( CS - RRSe ) + ( CS / DS ) ) + MUR ) - Min( RRSe ,( ( RMSe / MUR ) / CS ) ) ) ) - DS ) * ( RMSe - MUC ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),PN ) )", "choosing": "( ( Max( RCSe,CS ) * ( MUM / ( ( ( CS + RMSe ) + CS ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) ) ) ) - ( Min( Max( MUR,Max( ( ( DS - DS ) / MUC ),RMSe ) ) ,RCSe ) + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - Max( Max( MRS,FirstVNF_Mem ),Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( DS ,( MUR + CS ) ) + MUM ) / DS ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Max( ( DDR / ACS ),( AMS - RRS ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7066381156316917, "obj2": 0.2475060504879198}, {"determining": "( ( RRS / BR ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( RCSe + MUC ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) + ( FirstVNF_RAM + DDR ) )", "choosing": "Min( Min( RMSe ,( ( MUC / RRSe ) + ( CS / CS ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "Max( ( ( CRS - MRS ) + ACS ),( FirstVNF_RAM + DDR ) )", "choosing": "( Max( MUM,RRSe ) + ( CS / CS ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) )", "choosing": "( ( MUC / RRSe ) + ( CS / CS ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,Max( PN,DDR ) ) )", "choosing": "( ( RMSe * ( MLU / ( RCSe + RRSe ) ) ) + Min( RRSe ,MLU ) )", "obj1": 0.683083511777302, "obj2": 0.2628250506060496}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe * ( ( RRSe - RMSe ) / RRSe ) ) + Min( RRSe ,MLU ) )", "obj1": 0.6916488222698073, "obj2": 0.2518374168098402}, {"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( DS / RCSe ) )", "obj1": 0.8029978586723768, "obj2": 0.1789629722916127}, {"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( RCSe - MUR ) / Max( Min( MUC ,CS ),RRSe ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / Min( Min( AMS ,BR ) ,( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / ( CS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,PN ) - ( FirstVNF_CPU_Server / DDR ) ) ,( RRS * MRS ) )", "choosing": "( Max( Min( RMSe ,MUM ),( ( RRSe - MLU ) * CS ) ) * ( ( ( MUM / RMSe ) * MLU ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) - ( BR + AMS ) )", "choosing": "( Min( ( RCSe / RMSe ) ,( MUR / MUC ) ) * ( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( PN * BR ) ) - DDR )", "choosing": "Min( ( MUR + MLU ) ,( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + MRS ) - Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( ( Min( ( ( DS + RRSe ) - Max( RCSe,MLU ) ) ,( ( DS * RRSe ) * Max( CS,MUM ) ) ) / ( ( ( MUR / CS ) / ( CS + MUR ) ) / Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) ) ),( DS / RCSe ) )", "obj1": 0.9293361884368309, "obj2": 0.0737646552347561}, {"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS + RRSe ) - Max( RCSe,MLU ) ) ,( ( DS * RRSe ) * Max( CS,MUM ) ) ) / ( ( ( MUR / CS ) / ( CS + MUR ) ) / Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "Max( ( ( CRS - MRS ) + ACS ),( DDR / ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RRSe ) + ( MUC / RMSe ) )", "obj1": 0.6809421841541756, "obj2": 0.26340553248986937}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( ( Max( PN,FirstVNF_CPU ) * Max( FirstVNF_Mem,ACS ) ) - MDR ) ) * Max( PN,BR ) )", "choosing": "Min( CS ,( Min( ( Max( Max( ( RRSe / RCSe ),( MLU * RRSe ) ),MLU ) / MLU ) ,( MUR / DS ) ) / ( RMSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / RCSe ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,Const ) ) - ( Max( BR,CRS ) * ( RRS * ( MDR / ( DDR * Min( ( BR * AMS ) ,Max( Max( MDR,ACS ),DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RMSe - RMSe ) - RRSe ) * RCSe ) * Max( DS,MLU ) ) ,( ( DS / MLU ) / ( ( RMSe / Min( RMSe ,Max( Min( CS ,RRSe ),Min( MUR ,MUC ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR - FirstVNF_RAM_Server ) ) / ( Min( ( FirstVNF_CPU - PN ) ,FirstVNF_RAM ) * FirstVNF_CPU ) )", "choosing": "( ( DS - DS ) + ( Min( RRSe ,MLU ) + ( CS / Max( Min( MUC ,CS ),RRSe ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.0886006504291134}, {"determining": "( ( Min( MDR ,ACS ) - ( FirstVNF_RAM_Server - CRS ) ) / ( ( Const * Const ) + Const ) )", "choosing": "( ( ( RCSe / RRSe ) - Min( RRSe ,( CS + MLU ) ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Const,DDR ) ,Min( MDR ,ACS ) )", "choosing": "( ( Min( RRSe ,( MUR / MUR ) ) - RMSe ) + ( MUR + MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( FirstVNF_CPU,Min( Const ,Max( CRS,BR ) ) ) )", "choosing": "( ( DS - MUR ) + ( MUR + ( CS / ( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - Min( MRS ,MDR ) )", "choosing": "Min( Max( ( MUR - MUC ),( ( RMSe + MLU ) * Max( CS,CS ) ) ) ,Max( CS,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( ( Max( ( ACS / RRS ),( ( ACS - PN ) / CRS ) ) - ( ( DDR * MRS ) / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ) ) * ( MLU * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( ( MDR * Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( Max( ( Max( ( Max( ( MLU / RRSe ),RCSe ) + MLU ),RCSe ) / ( RRSe / ( RRSe / Max( RMSe,( RRSe - MUR ) ) ) ) ),Max( RMSe,RRSe ) ) - MUR ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "Min( Max( Const,FirstVNF_RAM_Server ) ,( RRS / AMS ) )", "choosing": "( ( ( ( DS - RMSe ) + ( MUR + MUR ) ) + MUC ) / Max( RCSe,RCSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( Min( Max( Const,DDR ) ,Max( RRS,Const ) ) - ( Max( MRS,BR ) + Min( FirstVNF_CPU_Server ,AMS ) ) )", "choosing": "( Max( RRSe,( ( ( CS / RRSe ) * MUR ) / MUR ) ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) * ( FirstVNF_Mem / ARS ) )", "choosing": "Min( ( RCSe - MUR ) ,( Min( RRSe ,MUM ) / ( CS / RMSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "( ( ( ( FirstVNF_Mem - Const ) * ( FirstVNF_Mem / ARS ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( ( RCSe - MUR ) ,( MUC - CS ) ) / ( CS / RMSe ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,RRS ) + ( DDR / Const ) ) ) / ( Max( ( ( Min( ( ( MRS * AMS ) + Min( Const ,ARS ) ) ,FirstVNF_Mem_Server ) - CRS ) + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( CS + RRSe ) + Min( RRSe ,MUM ) ) ),( ( ( MUC + RCSe ) * MUR ) / MUC ) )", "obj1": 0.8201284796573876, "obj2": 0.14398639267229066}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM ) + ( RRS / FirstVNF_CPU_Server ) ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( ( ( DS + DS ) - ( CS - ( MUM * CS ) ) ),RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0068188431368388785}, {"determining": "( ( Const / ( Min( MDR ,( ( ( Max( DDR,BR ) / Max( Const,MRS ) ) - AMS ) * MDR ) ) + ( FirstVNF_RAM_Server - ARS ) ) ) - ( BR - MDR ) )", "choosing": "( ( DS - DS ) - ( CS - ( Min( ( Max( RMSe,Max( Min( RRSe ,RCSe ),( RRSe / DS ) ) ) / Max( MLU,DS ) ) ,( MUC * MUM ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - Max( Const,( ( ( ( FirstVNF_Mem_Server + PN ) / CRS ) / ARS ) - BR ) ) )", "choosing": "( Max( ( RCSe - Max( MUM,RMSe ) ),MUM ) + Max( ( CS * Min( MUC ,Max( DS,RMSe ) ) ),Max( ( RMSe * Min( MUR ,RRSe ) ),( CS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Max( Max( Const,DDR ),( AMS / MRS ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / Min( DS ,DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,( Min( MRS ,Max( PN,RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe - DS ) + ( Min( RRSe ,( ( ( RRSe * CS ) - ( CS - MUM ) ) / ( MLU / ( MUC - Min( ( MLU - RMSe ) ,MUR ) ) ) ) ) * MLU ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( Max( ( MRS + ACS ),( FirstVNF_CPU_Server - CRS ) ) - ( FirstVNF_Mem_Server + PN ) ) / ( ( BR + MRS ) / ( DDR * MDR ) ) )", "choosing": "( ( RCSe - MUR ) / Max( Min( Min( DS ,( ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) - RMSe ) ) ,CS ),RRSe ) )", "obj1": 0.9593147751605996, "obj2": 0.06177526468597517}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS / RCSe ) / ( ( ( MUR / CS ) / ( CS + MUR ) ) / Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.12188964789975715}, {"determining": "( ( AMS + MRS ) - Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( ( Min( ( ( DS + RRSe ) - Max( RCSe,MLU ) ) ,( ( DS * RRSe ) * Max( CS,MUM ) ) ) / ( ( ( MUR / CS ) / ( CS + MUR ) ) / Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) ) ),( DS / RCSe ) )", "obj1": 0.9293361884368309, "obj2": 0.0737646552347561}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.8436830835117773, "obj2": 0.0886006504291134}, {"determining": "( ( ( ( FirstVNF_RAM_Server + RRS ) / Max( RRS,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM ) + ( RRS / FirstVNF_CPU_Server ) ) ) - ( MDR - AMS ) )", "choosing": "( Min( DS ,( ( MLU * MLU ) * MUC ) ) - Max( ( ( DS + DS ) - ( CS - ( RRSe * CS ) ) ),RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0068188431368388785}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server / ( FirstVNF_RAM * DDR ) ) ) ) / ( DDR - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( CS / Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),RRSe ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.1400396628636633}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe - ( RRSe + ( RRSe / Max( RCSe,MLU ) ) ) ) - Max( MUM,RMSe ) ) - Max( ( Min( MUC ,DS ) - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( MUM - RMSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.2039413290737158}, {"determining": "Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) )", "choosing": "( ( RMSe - DS ) + ( Min( RRSe ,MUR ) * MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.16377983088083728}, {"determining": "( Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) - Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,( CRS / AMS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) + ( ( ( CS + MUM ) * ( DS - RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2462609687868499}, {"determining": "( ( Max( ( ACS / RRS ),( ( ACS - PN ) / CRS ) ) - ( ( DDR * MRS ) / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ) ) * ( MLU * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM ) + ( RRS / FirstVNF_CPU_Server ) ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( ( ( DS + DS ) - ( CS - ( MUM * CS ) ) ),RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0068188431368388785}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( ( ( Min( ( ( MRS * AMS ) + Min( Const ,ARS ) ) ,FirstVNF_Mem_Server ) - CRS ) + ARS ),( AMS + RRS ) ) )", "choosing": "( Max( RMSe,( ( RRSe - MLU ) * CS ) ) * Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( CS + RRSe ) + Min( RRSe ,MUM ) ) ),( ( ( MUC + RCSe ) * MUR ) / MUC ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MUC / RRSe ) - ( ( ( Min( RCSe ,MUR ) / ( ( MUR + Max( CS,DS ) ) + ( RCSe / ( MUC - RRSe ) ) ) ) + RCSe ) + RCSe ) )", "obj1": 0.7708779443254818, "obj2": 0.1762722729950855}, {"determining": "( ( ( ( RRS - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server - CRS ) ) ) * Max( Max( ( ( FirstVNF_Mem - ( Const * AMS ) ) - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( RCSe,( ( ( Max( MUM,MUM ) / DS ) + CS ) * MUC ) ) * RRSe ) + CS ) - ( RCSe * CS ) )", "obj1": 0.7601713062098501, "obj2": 0.19463722682513293}, {"determining": "( Max( BR,PN ) * Max( Max( ( ( PN / ARS ) * CRS ),Max( FirstVNF_RAM,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ACS ) ,RRS ) * PN ) ) ) )", "choosing": "( Max( MUR,RMSe ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.7173447537473233, "obj2": 0.22485971680025366}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( RMSe ,( ( MUC / RRSe ) + ( CS / CS ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7173447537473233, "obj2": 0.22485971680025366}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ( ( DDR - FirstVNF_RAM ) / Min( MRS ,DDR ) ) - ( AMS / FirstVNF_RAM ) ) - ( AMS - MDR ) )", "choosing": "( ( ( MUR + RCSe ) * ( ( RCSe + RMSe ) * ( RMSe - MUC ) ) ) / ( MLU - CS ) )", "obj1": 0.9464668094218416, "obj2": 0.062028126963909976}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR - FirstVNF_RAM_Server ) ) / ( Min( ( FirstVNF_CPU - PN ) ,FirstVNF_RAM ) * FirstVNF_CPU ) )", "choosing": "( ( DS - DS ) + ( Min( RRSe ,MLU ) + ( CS / Max( Min( MUC ,CS ),RRSe ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.0886006504291134}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( ( MDR * Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( Max( ( Max( ( Max( ( MLU / RRSe ),RCSe ) + MLU ),RCSe ) / ( RRSe / ( RRSe / Max( RMSe,( RRSe - MUR ) ) ) ) ),Max( RMSe,RRSe ) ) - MUR ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.18346354228891912}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - Max( Max( FirstVNF_CPU_Server,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( FirstVNF_CPU * Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "Min( Max( ( MUR * MUC ),( ( RMSe + MLU ) * Max( CS,CS ) ) ) ,Min( RRSe ,CS ) )", "obj1": 0.9314775160599572, "obj2": 0.06883972842869668}, {"determining": "( ( ( DDR - FirstVNF_RAM ) / Min( MRS ,DDR ) ) - ( AMS / FirstVNF_RAM ) )", "choosing": "( ( RCSe + RMSe ) * ( RMSe - MUC ) )", "obj1": 0.9421841541755889, "obj2": 0.06637073799145166}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe * ( ( RRSe - RMSe ) / RRSe ) ) + Min( RRSe ,MLU ) )", "obj1": 0.6916488222698073, "obj2": 0.2518374168098402}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( ( MDR * Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( Max( ( Max( ( Max( ( MLU / RRSe ),RCSe ) + MLU ),RCSe ) / ( RRSe / ( RRSe / Max( RMSe,( RRSe - MUR ) ) ) ) ),Max( RMSe,RRSe ) ) - MUR ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.18346354228891912}, {"determining": "Max( Min( Max( ( DDR / ACS ),( AMS - RRS ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( Min( ( CS + RRSe ) ,( MUR - MUM ) ) / ( ( MUC / MUC ) / Min( MUC ,CS ) ) ) * ( ( Max( MUR,RRSe ) * ( MUC * RMSe ) ) + ( Max( RCSe,DS ) + ( CS - MUM ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.2565980967064709}, {"determining": "( ( FirstVNF_Mem_Server + ( PN + MDR ) ) * Min( BR ,PN ) )", "choosing": "Min( Max( ( MUR * MUC ),( ( RMSe + MLU ) * Max( CS,CS ) ) ) ,Min( RRSe ,CS ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( ( PN / MRS ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + Max( Max( ( CS / RCSe ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2619677385515473}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe * ( ( RRSe - RMSe ) / RRSe ) ) + Min( RRSe ,MLU ) )", "obj1": 0.6916488222698073, "obj2": 0.2518374168098402}, {"determining": "( ( ( DDR - FirstVNF_RAM ) / Min( MRS ,DDR ) ) - ( AMS / FirstVNF_RAM ) )", "choosing": "Min( Max( ( MUR - MUC ),( ( RMSe + MLU ) * Max( CS,CS ) ) ) ,Max( CS,MUC ) )", "obj1": 0.9421841541755889, "obj2": 0.06637073799145166}, {"determining": "( ( BR + FirstVNF_Mem ) - ( PN / Const ) )", "choosing": "( ( Min( ( CS * RMSe ) ,( ( ( ( CS - RRSe ) + ( CS / DS ) ) + MUR ) - Min( RRSe ,( ( RMSe / MUR ) / CS ) ) ) ) - DS ) * ( RMSe - MUC ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( Max( Min( ( CRS + ARS ) ,( Max( FirstVNF_RAM,MRS ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - Max( Max( FirstVNF_CPU_Server,( FirstVNF_CPU * Max( FirstVNF_CPU,RRS ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( Max( MUM,RMSe ) + Max( ( RRSe - DS ),Max( ( RCSe * MUM ),MUM ) ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) ,Min( Min( Max( MUM,( MUR / RCSe ) ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) )", "obj1": 0.9314775160599572, "obj2": 0.06883972842869668}, {"determining": "( Max( FirstVNF_CPU,Const ) + ( ARS * FirstVNF_Mem ) )", "choosing": "( ( MLU - MUM ) / ( RMSe / Min( Max( ( ( MLU + RRSe ) / ( RMSe + ( RRSe - ( CS - RRSe ) ) ) ),RCSe ) ,MUR ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Const ) + ( RRS * ( FirstVNF_CPU_Server - Const ) ) )", "choosing": "( ( RMSe / MUR ) / Max( ( ( MUC / MLU ) - ( DS - ( DS * MUC ) ) ),RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( FirstVNF_Mem_Server + ( ( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + Max( Max( Min( ACS ,MDR ),( MRS / ACS ) ),Max( ( FirstVNF_CPU_Server * RRS ),Min( ACS ,PN ) ) ) ) + MDR ) ) * Min( BR ,PN ) )", "choosing": "Max( ( RCSe + RRSe ),( RCSe + RMSe ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( ( FirstVNF_Mem_Server + ( PN + MDR ) ) * Min( BR ,PN ) )", "choosing": "Min( Min( Min( Max( MUM,Max( MUR,RCSe ) ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( ( RRSe - DS ),Max( RCSe,MUM ) ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( ( Min( ARS ,MDR ) / Max( Const,( Const - Min( ARS ,ARS ) ) ) ) - Max( Max( MRS,ARS ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Min( Min( ( RRSe + Min( RMSe ,Min( CS ,RMSe ) ) ) ,MLU ) ,MUC ),MLU ) * MUM ) - ( ( RMSe + MUR ) + ( Max( Max( ( ( MUC - ( MUC / RRSe ) ) * MUR ),MUC ),MUR ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,Max( ( RRS / PN ),Min( ( FirstVNF_Mem / DDR ) ,DDR ) ) ) - Max( ACS,AMS ) )", "choosing": "( ( ( DS * MUM ) * Min( ( ( ( ( Max( MUM,MLU ) * MUR ) + RMSe ) / MUM ) + ( MUC / RMSe ) ) ,MUC ) ) / Min( MUC ,( DS * ( RRSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU / Max( FirstVNF_CPU,ARS ) ) / ( FirstVNF_RAM_Server * BR ) ) / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),Min( MUC ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( RRS * AMS ) ) ),( DDR / ARS ) )", "choosing": "( ( ( RRSe - ( RMSe + MUM ) ) * Max( CS,MUM ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const * Min( FirstVNF_RAM_Server ,( Min( PN ,DDR ) * CRS ) ) ) * ARS ),( MRS + ( MDR * FirstVNF_Mem ) ) ) - Max( Min( Max( BR,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ),Min( ( CRS / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( CRS - FirstVNF_RAM_Server ) ) / ( BR / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( ( ( RCSe / ( MUR - RMSe ) ) - DS ) * Min( ( RRSe - ( MUR / MUR ) ) ,( MLU * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * DDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( CRS / Max( ACS,ACS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Min( RMSe ,RMSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),Min( Max( ACS,BR ) ,( PN * CRS ) ) ) - ( Min( Max( FirstVNF_RAM_Server,CRS ) ,( ARS * Const ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( RCSe + RMSe ) / Min( CS ,MUC ) ) ,DS ) * ( MUR / Min( ( ( RCSe - MLU ) + ( RMSe * MLU ) ) ,RMSe ) ) ) - RMSe ) - DS ),( ( CS / CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),PN ) )", "choosing": "( ( Max( RCSe,CS ) * ( MUM / ( ( ( CS + RMSe ) + CS ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) ) ) ) - ( Min( Max( MUR,Max( ( ( DS - DS ) / MUC ),RMSe ) ) ,RCSe ) + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - Max( Max( MRS,FirstVNF_Mem ),Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( DS ,( MUR + CS ) ) + MUM ) / DS ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / BR ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( RCSe + MUC ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / Min( Min( AMS ,BR ) ,( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / ( CS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,PN ) - ( FirstVNF_CPU_Server / DDR ) ) ,( RRS * MRS ) )", "choosing": "( Max( Min( RMSe ,MUM ),( ( RRSe - MLU ) * CS ) ) * ( ( ( MUM / RMSe ) * MLU ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) - ( BR + AMS ) )", "choosing": "( Min( ( RCSe / RMSe ) ,( MUR / MUC ) ) * ( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( PN * BR ) ) - DDR )", "choosing": "Min( ( MUR + MLU ) ,( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( ( Max( PN,FirstVNF_CPU ) * Max( FirstVNF_Mem,ACS ) ) - MDR ) ) * Max( PN,BR ) )", "choosing": "Min( CS ,( Min( ( Max( Max( ( RRSe / RCSe ),( MLU * RRSe ) ),MLU ) / MLU ) ,( MUR / DS ) ) / ( RMSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / RCSe ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,Const ) ) - ( Max( BR,CRS ) * ( RRS * ( MDR / ( DDR * Min( ( BR * AMS ) ,Max( Max( MDR,ACS ),DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RMSe - RMSe ) - RRSe ) * RCSe ) * Max( DS,MLU ) ) ,( ( DS / MLU ) / ( ( RMSe / Min( RMSe ,Max( Min( CS ,RRSe ),Min( MUR ,MUC ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) - ( FirstVNF_RAM_Server - CRS ) ) / ( ( Const * Const ) + Const ) )", "choosing": "( ( ( RCSe / RRSe ) - Min( RRSe ,( CS + MLU ) ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( FirstVNF_CPU,Min( Const ,Max( CRS,BR ) ) ) )", "choosing": "( ( DS - MUR ) + ( MUR + ( CS / ( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,DDR ) ,Max( RRS,Const ) ) - ( Max( MRS,BR ) + Min( FirstVNF_CPU_Server ,AMS ) ) )", "choosing": "( Max( RRSe,( ( ( CS / RRSe ) * MUR ) / MUR ) ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Min( MDR ,( ( ( Max( DDR,BR ) / Max( Const,MRS ) ) - AMS ) * MDR ) ) + ( FirstVNF_RAM_Server - ARS ) ) ) - ( BR - MDR ) )", "choosing": "( ( DS - DS ) - ( CS - ( Min( ( Max( RMSe,Max( Min( RRSe ,RCSe ),( RRSe / DS ) ) ) / Max( MLU,DS ) ) ,( MUC * MUM ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - Max( Const,( ( ( ( FirstVNF_Mem_Server + PN ) / CRS ) / ARS ) - BR ) ) )", "choosing": "( Max( ( RCSe - Max( MUM,RMSe ) ),MUM ) + Max( ( CS * Min( MUC ,Max( DS,RMSe ) ) ),Max( ( RMSe * Min( MUR ,RRSe ) ),( CS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( BR - RRS ) / BR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( RMSe - RRSe ) * Max( MUM,( ( MUM + RMSe ) * ( RMSe * RRSe ) ) ) ) + ( RRSe + CS ) ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / ( ( Const - PN ) / AMS ) ) + FirstVNF_Mem_Server ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( MRS - AMS ) / ( AMS * PN ) ) )", "choosing": "( ( Max( MUC,( RMSe * MUC ) ) * ( RRSe - CS ) ) + ( CS + Min( ( Max( DS,MUR ) * DS ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * Max( FirstVNF_Mem_Server,RRS ) ) + Min( ( CRS + CRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * CRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / ( CS - ( DS * ( ( CS / MUM ) / Max( CS,CS ) ) ) ) ) + ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN * FirstVNF_Mem ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( ( Min( ( AMS - DDR ) ,( CRS - ( ARS + FirstVNF_CPU_Server ) ) ) + BR ) - RRS ) ) - ( ( ARS * AMS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MLU ,CS ) + CS ) + ( ( RRSe - Min( RMSe ,MUC ) ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( Max( Min( ACS ,MDR ),( MRS / ACS ) ) ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( MLU,MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( Min( ARS ,FirstVNF_Mem ),( MRS + BR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) ) / Min( MRS ,DDR ) ) - ( AMS / FirstVNF_RAM ) )", "choosing": "( ( Min( RRSe ,MLU ) * MLU ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( RCSe + RMSe ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) )", "choosing": "( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( RRSe - ( RCSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( Min( ACS ,( PN / FirstVNF_RAM ) ) + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RMSe * MUM ),( DS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Max( MRS,Min( Const ,FirstVNF_CPU ) ) / Min( ( FirstVNF_RAM / BR ) ,( MRS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( Max( MUM,RRSe ),( RCSe * ( ( MUM - MLU ) / MLU ) ) ) - ( RRSe - RCSe ) ),( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ) ) ) - Max( ( ( DS + DS ) - ( CS - ( MUM * CS ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( ( Max( ( Max( CRS,PN ) + CRS ),MRS ) + ( RRS - Max( DDR,RRS ) ) ) / FirstVNF_RAM ) )", "choosing": "Min( Min( Min( ( CS + RRSe ) ,( ( ( ( ( RCSe / RRSe ) - MUR ) / DS ) + ( Min( CS ,Min( RMSe ,MLU ) ) / MLU ) ) * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server / ARS ) ,( PN - Max( ( MRS * ( MDR - ( BR / MDR ) ) ),MDR ) ) ) - Max( ( MRS / BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,( RCSe * Min( ( RCSe - Max( MLU,( MUC - MUM ) ) ) ,MUM ) ) ) / MUR ) + ( ( ( RRSe - ( RRSe / ( MUR / DS ) ) ) / ( RCSe + ( ( RCSe * MUC ) * RMSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MDR ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( PN / MRS ) + ACS ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / BR ) - ( AMS - MDR ) )", "choosing": "Max( Max( ( CS / RCSe ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( ( ( Min( MDR ,ACS ) - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( Max( ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) - ( FirstVNF_RAM_Server - CRS ) ) / Max( MRS,MRS ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ACS / Max( MDR,MRS ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( CRS + PN ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( RRSe ,Min( MLU ,( ( MUC * Max( RCSe,RRSe ) ) - MUR ) ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / Min( RCSe ,MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Max( Max( Const,DDR ),( AMS / MRS ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / Min( DS ,DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR - ARS ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - Const ) ) - ( ( FirstVNF_CPU_Server / AMS ) + ( ARS * MRS ) ) ) )", "choosing": "( ( ( RCSe * RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6702355460385439, "obj2": 0.2744141970915598}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Max( Max( Const,AMS ),( FirstVNF_Mem / FirstVNF_CPU ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU - MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( ( Min( RCSe ,MUM ) * ( MLU + RCSe ) ),RRSe ) )", "obj1": 0.961456102783726, "obj2": 0.03662447678550662}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( AMS - MDR ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7773019271948608, "obj2": 0.11352335094312523}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS / RCSe ) / ( ( ( MUR / ( ( RMSe - DS ) + ( Min( RRSe ,MUR ) * MLU ) ) ) / ( CS + MUR ) ) / Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10192351092791718}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MUC / RRSe ) - ( ( ( Min( RCSe ,MUR ) / ( ( MUR + Max( CS,DS ) ) + ( RCSe / ( MUC - RRSe ) ) ) ) + RCSe ) + RCSe ) )", "obj1": 0.7730192719486081, "obj2": 0.17102489782151517}, {"determining": "( ( DDR - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( Min( RMSe ,MUR ) + ( Max( RMSe,MUR ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23235917983458826}, {"determining": "( ( ( MRS + MDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( DDR + ( Max( ( FirstVNF_RAM * FirstVNF_RAM ),MDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU - ( DDR / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( ( ( ( ( CS / RRSe ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + ( RMSe / MUC ) ),Max( ( ( MUR / Min( MUC ,( MLU + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.20473784223135094}, {"determining": "( ( Max( ( ACS / RRS ),( ( ACS - PN ) / CRS ) ) - ( ( DDR * MRS ) / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ) ) * ( MLU * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe - ( RRSe + ( RRSe / Max( RCSe,MLU ) ) ) ) - Max( MUM,RMSe ) ) - Max( ( Min( MUC ,DS ) - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( MUM - RMSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.2039413290737158}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) + ( Min( FirstVNF_Mem_Server ,ARS ) + ( DDR / Const ) ) ) / ( ( MDR - Max( ARS,FirstVNF_CPU_Server ) ) * ( ( ( FirstVNF_RAM + ACS ) * MDR ) * ( BR / ( AMS - MRS ) ) ) ) )", "choosing": "Max( ( Min( Max( RRSe,RRSe ) ,( Max( ( MLU + Max( ( MUC / RRSe ),RCSe ) ),RCSe ) / ( RRSe / ( RRSe / Max( RRSe,( RRSe - MUR ) ) ) ) ) ) - MUR ),( DS - RRSe ) )", "obj1": 0.7601713062098501, "obj2": 0.18598081027231797}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.8436830835117773, "obj2": 0.0886006504291134}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / DDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / MUC ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.8436830835117773, "obj2": 0.0886006504291134}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.7173447537473233, "obj2": 0.22485971680025366}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe * ( ( RRSe - RMSe ) / RRSe ) ) + Min( RRSe ,MLU ) )", "obj1": 0.6916488222698073, "obj2": 0.2518374168098402}, {"determining": "( Max( BR,PN ) * Max( Max( ( ( PN / ARS ) * CRS ),Max( FirstVNF_RAM,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ACS ) ,RRS ) * PN ) ) ) )", "choosing": "( Max( MUR,RMSe ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RRSe - DS ),Max( MLU,MUM ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( AMS / FirstVNF_RAM ) ) ) ) ) / ( ( MDR * Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( Max( ( Max( ( DS + MLU ),RCSe ) / ( RRSe / ( RRSe / Max( RMSe,( RRSe - MUR ) ) ) ) ),Max( RMSe,RRSe ) ) - MUR ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.1815695014217997}, {"determining": "( ( ( ( FirstVNF_RAM_Server + RRS ) / Max( RRS,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM ) + ( RRS / FirstVNF_CPU_Server ) ) ) - ( MDR - AMS ) )", "choosing": "( Min( DS ,( ( MLU * MLU ) * MUC ) ) - Max( ( ( DS + DS ) - ( CS - ( RRSe * CS ) ) ),RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0068188431368388785}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( RMSe ,( ( MUC / RRSe ) + ( CS / CS ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7173447537473233, "obj2": 0.22485971680025366}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( MUM * CS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "( Max( MRS,Const ) + Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server - ACS ) + ARS ) ) ),DDR ) )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,RRSe ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MUC / RRSe ) - ( ( ( Min( RCSe ,MUR ) / ( ( MUR + Max( CS,DS ) ) + ( RCSe / ( MUC - RRSe ) ) ) ) + RCSe ) + RCSe ) )", "obj1": 0.7708779443254818, "obj2": 0.1762722729950855}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,Max( ( AMS - MDR ),MRS ) ) )", "choosing": "( ( Min( RRSe ,MLU ) * MLU ) + Min( RRSe ,MLU ) )", "obj1": 0.6916488222698073, "obj2": 0.2518374168098402}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,FirstVNF_RAM_Server ) ) - Max( ( MRS + BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC / RRSe ) - ( RCSe + ( ( ( MUC * ( ( Max( MUR,MUC ) + RCSe ) - ( RCSe * ( MUM + MUC ) ) ) ) / RMSe ) + RCSe ) ) )", "obj1": 0.7730192719486081, "obj2": 0.17102489782151517}, {"determining": "( ( FirstVNF_Mem_Server + ( PN + MDR ) ) * Min( BR ,PN ) )", "choosing": "Min( Max( ( MUR * MUC ),( ( RMSe + MLU ) * Max( CS,CS ) ) ) ,Min( RRSe ,CS ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,( Min( MRS ,Max( PN,RRS ) ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe - DS ) + ( Min( RRSe ,( ( ( RRSe * CS ) - ( CS - MUM ) ) / ( MLU / ( MUC - Min( ( MLU - RMSe ) ,MUR ) ) ) ) ) * MLU ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( Min( BR ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) - Max( Max( ( DDR / RRS ),BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + RRSe ) - ( Min( RMSe ,Max( Min( RMSe ,Max( Min( ( CS * MUR ) ,Min( MLU ,RMSe ) ),( RRSe + CS ) ) ),( MLU * MUC ) ) ) + ( MUR * RRSe ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1762722729950855}, {"determining": "Max( Min( Max( ( DDR / ACS ),( AMS - RRS ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( Min( ( CS + RRSe ) ,( MUR - MUM ) ) / ( ( MUC / MUC ) / Min( MUC ,CS ) ) ) * ( ( Max( MUR,RRSe ) * ( MUC * RMSe ) ) + ( Max( RCSe,DS ) + ( CS - MUM ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.2565980967064709}, {"determining": "( ( BR + FirstVNF_Mem ) - ( PN / Const ) )", "choosing": "( ( Min( ( CS * RMSe ) ,( ( ( ( CS - RRSe ) + ( CS / DS ) ) + MUR ) - Min( RRSe ,( ( RMSe / MUR ) / CS ) ) ) ) - DS ) * ( RMSe - MUC ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( ( PN / MRS ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + Max( Max( ( CS / RCSe ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2619677385515473}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM ) + ( RRS / FirstVNF_CPU_Server ) ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( ( ( DS + DS ) - ( CS - ( MUM * CS ) ) ),RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0068188431368388785}, {"determining": "( Max( FirstVNF_CPU,Const ) + ( ARS * FirstVNF_Mem ) )", "choosing": "( ( MLU - MUM ) / ( RMSe / Min( Max( ( ( MLU + RRSe ) / ( RMSe + ( RRSe - ( CS - RRSe ) ) ) ),RCSe ) ,MUR ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( FirstVNF_Mem_Server + ( ( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + Max( Max( Min( ACS ,MDR ),( MRS / ACS ) ),Max( ( FirstVNF_CPU_Server * RRS ),Min( ACS ,PN ) ) ) ) + MDR ) ) * Min( BR ,PN ) )", "choosing": "Max( ( RCSe + RRSe ),( RCSe + RMSe ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "Max( Min( Max( ( DDR / ACS ),( AMS - RRS ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( Min( ( CS + RRSe ) ,( MUR - MUM ) ) / ( ( MUC / MUC ) / Min( MUC ,CS ) ) ) * ( ( Max( MUR,RRSe ) * ( MUC * RMSe ) ) + ( Max( RCSe,DS ) + ( CS - MUM ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.2565980967064709}, {"determining": "Max( ( Min( ( FirstVNF_CPU_Server - CRS ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,Max( MRS,MRS ) ) )", "choosing": "Min( Min( Min( Max( MUM,Max( MUR,RCSe ) ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,Max( Min( MUM ,CS ),( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( ( PN / MRS ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + Max( Max( ( CS / RCSe ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2619677385515473}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,MDR ) / Max( Const,( Const - Min( ARS ,ARS ) ) ) ) - Max( Max( MRS,ARS ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Min( Min( ( RRSe + Min( RMSe ,Min( CS ,RMSe ) ) ) ,MLU ) ,MUC ),MLU ) * MUM ) - ( ( RMSe + MUR ) + ( Max( Max( ( ( MUC - ( MUC / RRSe ) ) * MUR ),MUC ),MUR ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,Max( ( RRS / PN ),Min( ( FirstVNF_Mem / DDR ) ,DDR ) ) ) - Max( ACS,AMS ) )", "choosing": "( ( ( DS * MUM ) * Min( ( ( ( ( Max( MUM,MLU ) * MUR ) + RMSe ) / MUM ) + ( MUC / RMSe ) ) ,MUC ) ) / Min( MUC ,( DS * ( RRSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU / Max( FirstVNF_CPU,ARS ) ) / ( FirstVNF_RAM_Server * BR ) ) / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),Min( MUC ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( RRS * AMS ) ) ),( DDR / ARS ) )", "choosing": "( ( ( RRSe - ( RMSe + MUM ) ) * Max( CS,MUM ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const * Min( FirstVNF_RAM_Server ,( Min( PN ,DDR ) * CRS ) ) ) * ARS ),( MRS + ( MDR * FirstVNF_Mem ) ) ) - Max( Min( Max( BR,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ),Min( ( CRS / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( CRS - FirstVNF_RAM_Server ) ) / ( BR / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( ( ( RCSe / ( MUR - RMSe ) ) - DS ) * Min( ( RRSe - ( MUR / MUR ) ) ,( MLU * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * DDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( CRS / Max( ACS,ACS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Min( RMSe ,RMSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),Min( Max( ACS,BR ) ,( PN * CRS ) ) ) - ( Min( Max( FirstVNF_RAM_Server,CRS ) ,( ARS * Const ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( RCSe + RMSe ) / Min( CS ,MUC ) ) ,DS ) * ( MUR / Min( ( ( RCSe - MLU ) + ( RMSe * MLU ) ) ,RMSe ) ) ) - RMSe ) - DS ),( ( CS / CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),PN ) )", "choosing": "( ( Max( RCSe,CS ) * ( MUM / ( ( ( CS + RMSe ) + CS ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) ) ) ) - ( Min( Max( MUR,Max( ( ( DS - DS ) / MUC ),RMSe ) ) ,RCSe ) + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - Max( Max( MRS,FirstVNF_Mem ),Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( DS ,( MUR + CS ) ) + MUM ) / DS ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / BR ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( RCSe + MUC ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / Min( Min( AMS ,BR ) ,( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / ( CS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,PN ) - ( FirstVNF_CPU_Server / DDR ) ) ,( RRS * MRS ) )", "choosing": "( Max( Min( RMSe ,MUM ),( ( RRSe - MLU ) * CS ) ) * ( ( ( MUM / RMSe ) * MLU ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) - ( BR + AMS ) )", "choosing": "( Min( ( RCSe / RMSe ) ,( MUR / MUC ) ) * ( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( PN * BR ) ) - DDR )", "choosing": "Min( ( MUR + MLU ) ,( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( ( Max( PN,FirstVNF_CPU ) * Max( FirstVNF_Mem,ACS ) ) - MDR ) ) * Max( PN,BR ) )", "choosing": "Min( CS ,( Min( ( Max( Max( ( RRSe / RCSe ),( MLU * RRSe ) ),MLU ) / MLU ) ,( MUR / DS ) ) / ( RMSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / RCSe ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,Const ) ) - ( Max( BR,CRS ) * ( RRS * ( MDR / ( DDR * Min( ( BR * AMS ) ,Max( Max( MDR,ACS ),DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RMSe - RMSe ) - RRSe ) * RCSe ) * Max( DS,MLU ) ) ,( ( DS / MLU ) / ( ( RMSe / Min( RMSe ,Max( Min( CS ,RRSe ),Min( MUR ,MUC ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) - ( FirstVNF_RAM_Server - CRS ) ) / ( ( Const * Const ) + Const ) )", "choosing": "( ( ( RCSe / RRSe ) - Min( RRSe ,( CS + MLU ) ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( FirstVNF_CPU,Min( Const ,Max( CRS,BR ) ) ) )", "choosing": "( ( DS - MUR ) + ( MUR + ( CS / ( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,DDR ) ,Max( RRS,Const ) ) - ( Max( MRS,BR ) + Min( FirstVNF_CPU_Server ,AMS ) ) )", "choosing": "( Max( RRSe,( ( ( CS / RRSe ) * MUR ) / MUR ) ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Min( MDR ,( ( ( Max( DDR,BR ) / Max( Const,MRS ) ) - AMS ) * MDR ) ) + ( FirstVNF_RAM_Server - ARS ) ) ) - ( BR - MDR ) )", "choosing": "( ( DS - DS ) - ( CS - ( Min( ( Max( RMSe,Max( Min( RRSe ,RCSe ),( RRSe / DS ) ) ) / Max( MLU,DS ) ) ,( MUC * MUM ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - Max( Const,( ( ( ( FirstVNF_Mem_Server + PN ) / CRS ) / ARS ) - BR ) ) )", "choosing": "( Max( ( RCSe - Max( MUM,RMSe ) ),MUM ) + Max( ( CS * Min( MUC ,Max( DS,RMSe ) ) ),Max( ( RMSe * Min( MUR ,RRSe ) ),( CS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( BR - RRS ) / BR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( RMSe - RRSe ) * Max( MUM,( ( MUM + RMSe ) * ( RMSe * RRSe ) ) ) ) + ( RRSe + CS ) ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / ( ( Const - PN ) / AMS ) ) + FirstVNF_Mem_Server ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( MRS - AMS ) / ( AMS * PN ) ) )", "choosing": "( ( Max( MUC,( RMSe * MUC ) ) * ( RRSe - CS ) ) + ( CS + Min( ( Max( DS,MUR ) * DS ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * Max( FirstVNF_Mem_Server,RRS ) ) + Min( ( CRS + CRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * CRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / ( CS - ( DS * ( ( CS / MUM ) / Max( CS,CS ) ) ) ) ) + ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN * FirstVNF_Mem ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( ( Min( ( AMS - DDR ) ,( CRS - ( ARS + FirstVNF_CPU_Server ) ) ) + BR ) - RRS ) ) - ( ( ARS * AMS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MLU ,CS ) + CS ) + ( ( RRSe - Min( RMSe ,MUC ) ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( Max( Min( ACS ,MDR ),( MRS / ACS ) ) ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( MLU,MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( Min( ARS ,FirstVNF_Mem ),( MRS + BR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) ) / Min( MRS ,DDR ) ) - ( AMS / FirstVNF_RAM ) )", "choosing": "( ( Min( RRSe ,MLU ) * MLU ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( RCSe + RMSe ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) )", "choosing": "( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( RRSe - ( RCSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( Min( ACS ,( PN / FirstVNF_RAM ) ) + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RMSe * MUM ),( DS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Max( MRS,Min( Const ,FirstVNF_CPU ) ) / Min( ( FirstVNF_RAM / BR ) ,( MRS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( Max( MUM,RRSe ),( RCSe * ( ( MUM - MLU ) / MLU ) ) ) - ( RRSe - RCSe ) ),( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ) ) ) - Max( ( ( DS + DS ) - ( CS - ( MUM * CS ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( ( Max( ( Max( CRS,PN ) + CRS ),MRS ) + ( RRS - Max( DDR,RRS ) ) ) / FirstVNF_RAM ) )", "choosing": "Min( Min( Min( ( CS + RRSe ) ,( ( ( ( ( RCSe / RRSe ) - MUR ) / DS ) + ( Min( CS ,Min( RMSe ,MLU ) ) / MLU ) ) * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server / ARS ) ,( PN - Max( ( MRS * ( MDR - ( BR / MDR ) ) ),MDR ) ) ) - Max( ( MRS / BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,( RCSe * Min( ( RCSe - Max( MLU,( MUC - MUM ) ) ) ,MUM ) ) ) / MUR ) + ( ( ( RRSe - ( RRSe / ( MUR / DS ) ) ) / ( RCSe + ( ( RCSe * MUC ) * RMSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MDR ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( PN / MRS ) + ACS ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Max( ( DDR - ARS ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - Const ) ) - ( ( FirstVNF_CPU_Server / AMS ) + ( ARS * MRS ) ) ) )", "choosing": "( ( ( RCSe * RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6702355460385439, "obj2": 0.2744141970915598}, {"determining": "( Max( Const,( ( ( FirstVNF_Mem / MRS ) + BR ) - ( ARS / FirstVNF_RAM ) ) ) - ( MDR / MRS ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / ( ( DS * CS ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ACS / Max( MDR,MRS ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( CRS + PN ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( RRSe ,Min( MLU ,( ( MUC * Max( RCSe,RRSe ) ) - MUR ) ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / Min( RCSe ,MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.2744141970915598}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( MUC / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9700214132762313, "obj2": 0.014815895324336494}, {"determining": "( ( AMS - MDR ) - ( AMS * MDR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) ) ) ) + ( RRSe + CS ) )", "obj1": 0.7773019271948608, "obj2": 0.11352335094312523}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MUC / RRSe ) - ( ( ( Min( RCSe ,MUR ) / ( ( MUR + Max( CS,DS ) ) + ( RCSe / ( MUC - RRSe ) ) ) ) + RCSe ) + RCSe ) )", "obj1": 0.7730192719486081, "obj2": 0.17102489782151517}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8008565310492506, "obj2": 0.10192351092791718}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,ARS ) + ( DDR / Max( ( DDR * FirstVNF_RAM_Server ),Const ) ) ) + ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) ) / ( ( RRS - Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,Min( ( FirstVNF_RAM * Max( ( ACS * PN ),AMS ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUM / ( DS / MUR ) ) + MUM ) + ( MLU / Max( ( ( Min( CS ,DS ) / ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - ( RCSe * ( RCSe - MLU ) ) ),RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18057949394550385}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6895074946466809, "obj2": 0.24526543339560197}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( Max( ( ACS / RRS ),( ( ACS - PN ) / CRS ) ) - ( ( DDR * MRS ) / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ) ) * ( MLU * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( ( MDR * Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( Max( ( Max( ( Max( ( MLU / RRSe ),RCSe ) + MLU ),RCSe ) / ( RRSe / ( RRSe / Max( RRSe,( RRSe - MUR ) ) ) ) ),Max( RMSe,RRSe ) ) - MUR ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.18680334898470918}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( AMS - MDR ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7794432548179872, "obj2": 0.11226885415763158}, {"determining": "( ( ( MRS + MDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( DDR + ( Max( ( FirstVNF_RAM * FirstVNF_RAM ),MDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU - ( DDR / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( ( ( ( ( CS / RRSe ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + ( RMSe / MUC ) ),Max( ( ( MUR / Min( MUC ,( MLU + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.20473784223135094}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS / RCSe ) / ( ( ( MUR / ( ( RMSe - DS ) + ( Min( RRSe ,MUR ) * MLU ) ) ) / ( CS + MUR ) ) / Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10192351092791718}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.8436830835117773, "obj2": 0.0886006504291134}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / DDR ) ) / ( ( BR + RRS ) / Max( FirstVNF_Mem_Server,Min( ( MRS - FirstVNF_CPU ) ,RRS ) ) ) )", "choosing": "Min( Min( Min( ( CS + RRSe ) ,( ( DS + ( CS * RCSe ) ) * MLU ) ) ,Min( Max( MUR,MUC ) ,Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.0886006504291134}, {"determining": "( ( Min( BR ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) - Max( Max( ( DDR / RRS ),BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + RRSe ) - ( Min( RMSe ,Max( Min( RMSe ,Max( Min( ( CS * MUR ) ,Min( MLU ,RMSe ) ),( RRSe + CS ) ) ),( MLU * MUC ) ) ) + ( MUR * RRSe ) ) )", "obj1": 0.7708779443254818, "obj2": 0.17280781764655317}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6809421841541756, "obj2": 0.2542211061352315}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23235917983458826}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) - ( BR * BR ) ) + MRS ) + ( FirstVNF_RAM + Min( CRS ,( DDR - ACS ) ) ) ) ) + AMS ) - MDR ) - ( Max( MRS,BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,Min( RCSe ,DS ) ) ) + ( ( MUM - MUR ) / RCSe ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ( ( FirstVNF_RAM_Server + RRS ) / Max( RRS,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM ) + ( RRS / FirstVNF_CPU_Server ) ) ) - ( MDR - AMS ) )", "choosing": "( Min( DS ,( ( MLU * MLU ) * MUC ) ) - Max( ( ( DS + DS ) - ( CS - ( RRSe * CS ) ) ),RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0068188431368388785}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe - ( RRSe + ( RRSe / Max( RCSe,MLU ) ) ) ) - Max( MUM,RMSe ) ) - Max( ( Min( MUC ,DS ) - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( MUM - RMSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.22255037531110772}, {"determining": "( DDR + Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) )", "choosing": "( MUM + ( Min( Max( ( MUC + MUM ),Min( ( MUC + MLU ) ,MUC ) ) ,( ( ( RRSe * CS ) - ( CS - MUM ) ) / Max( MLU,( MUC - Min( MUR ,MUM ) ) ) ) ) * MLU ) )", "obj1": 0.6788008565310493, "obj2": 0.26343966942488745}, {"determining": "( Max( BR,PN ) * Max( Max( ( ( PN / ARS ) * CRS ),Max( FirstVNF_RAM,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ACS ) ,RRS ) * PN ) ) ) )", "choosing": "( Max( MUR,RMSe ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ( MRS + MDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( FirstVNF_Mem_Server + ARS ) * ( FirstVNF_CPU - ( DDR / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.20473784223135094}, {"determining": "( ( ( AMS - ARS ) / ACS ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( MRS - MDR ) ) ) ) )", "choosing": "Min( Min( ( RMSe / RCSe ) ,( ( MUC / RRSe ) + Max( CS,RCSe ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.708779443254818, "obj2": 0.23106931377159376}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "( ( Max( ( PN - CRS ),( BR * AMS ) ) / Max( Max( ( ( CRS - FirstVNF_Mem ) * BR ),ARS ),( FirstVNF_CPU_Server - CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,( Min( CRS ,BR ) - DDR ) ) ),Max( Const,DDR ) ) )", "choosing": "( ( ( RCSe / RRSe ) + Max( MUC,( Min( MUC ,MUC ) * ( CS + RRSe ) ) ) ) + ( CS * MUR ) )", "obj1": 0.7237687366167024, "obj2": 0.2210451165202132}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( RMSe ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7130620985010707, "obj2": 0.23076089072395004}, {"determining": "( ( DDR - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( Min( RMSe ,MUR ) + ( Max( RMSe,MUR ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23235917983458826}, {"determining": "( Max( MRS,Const ) + Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server - ACS ) + ARS ) ) ),DDR ) )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,RRSe ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,FirstVNF_RAM_Server ) ) - Max( ( MRS + BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC / RRSe ) - ( RCSe + ( ( ( MUC * ( ( Max( MUR,MUC ) + RCSe ) - ( RCSe * ( MUM + MUC ) ) ) ) / RMSe ) + RCSe ) ) )", "obj1": 0.7730192719486081, "obj2": 0.17102489782151517}, {"determining": "( ( AMS - MDR ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7773019271948608, "obj2": 0.11352335094312523}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM ) + ( RRS / FirstVNF_CPU_Server ) ) ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0068188431368388785}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe - ( RRSe + ( RRSe / Max( RCSe,MLU ) ) ) ) - Max( MUM,RMSe ) ) - Max( ( Min( MUC ,DS ) - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( MUM - RMSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.22255037531110772}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Max( Max( Const,DDR ),( AMS / MRS ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / Min( DS ,DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,MDR ) / Max( Const,( Const - Min( ARS ,ARS ) ) ) ) - Max( Max( MRS,ARS ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Min( Min( ( RRSe + Min( RMSe ,Min( CS ,RMSe ) ) ) ,MLU ) ,MUC ),MLU ) * MUM ) - ( ( RMSe + MUR ) + ( Max( Max( ( ( MUC - ( MUC / RRSe ) ) * MUR ),MUC ),MUR ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,Max( ( RRS / PN ),Min( ( FirstVNF_Mem / DDR ) ,DDR ) ) ) - Max( ACS,AMS ) )", "choosing": "( ( ( DS * MUM ) * Min( ( ( ( ( Max( MUM,MLU ) * MUR ) + RMSe ) / MUM ) + ( MUC / RMSe ) ) ,MUC ) ) / Min( MUC ,( DS * ( RRSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU / Max( FirstVNF_CPU,ARS ) ) / ( FirstVNF_RAM_Server * BR ) ) / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),Min( MUC ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( RRS * AMS ) ) ),( DDR / ARS ) )", "choosing": "( ( ( RRSe - ( RMSe + MUM ) ) * Max( CS,MUM ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const * Min( FirstVNF_RAM_Server ,( Min( PN ,DDR ) * CRS ) ) ) * ARS ),( MRS + ( MDR * FirstVNF_Mem ) ) ) - Max( Min( Max( BR,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ),Min( ( CRS / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( CRS - FirstVNF_RAM_Server ) ) / ( BR / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( ( ( RCSe / ( MUR - RMSe ) ) - DS ) * Min( ( RRSe - ( MUR / MUR ) ) ,( MLU * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * DDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( CRS / Max( ACS,ACS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Min( RMSe ,RMSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),Min( Max( ACS,BR ) ,( PN * CRS ) ) ) - ( Min( Max( FirstVNF_RAM_Server,CRS ) ,( ARS * Const ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( RCSe + RMSe ) / Min( CS ,MUC ) ) ,DS ) * ( MUR / Min( ( ( RCSe - MLU ) + ( RMSe * MLU ) ) ,RMSe ) ) ) - RMSe ) - DS ),( ( CS / CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),PN ) )", "choosing": "( ( Max( RCSe,CS ) * ( MUM / ( ( ( CS + RMSe ) + CS ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) ) ) ) - ( Min( Max( MUR,Max( ( ( DS - DS ) / MUC ),RMSe ) ) ,RCSe ) + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - Max( Max( MRS,FirstVNF_Mem ),Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( DS ,( MUR + CS ) ) + MUM ) / DS ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / BR ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( RCSe + MUC ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / Min( Min( AMS ,BR ) ,( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / ( CS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,PN ) - ( FirstVNF_CPU_Server / DDR ) ) ,( RRS * MRS ) )", "choosing": "( Max( Min( RMSe ,MUM ),( ( RRSe - MLU ) * CS ) ) * ( ( ( MUM / RMSe ) * MLU ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) - ( BR + AMS ) )", "choosing": "( Min( ( RCSe / RMSe ) ,( MUR / MUC ) ) * ( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( PN * BR ) ) - DDR )", "choosing": "Min( ( MUR + MLU ) ,( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( ( Max( PN,FirstVNF_CPU ) * Max( FirstVNF_Mem,ACS ) ) - MDR ) ) * Max( PN,BR ) )", "choosing": "Min( CS ,( Min( ( Max( Max( ( RRSe / RCSe ),( MLU * RRSe ) ),MLU ) / MLU ) ,( MUR / DS ) ) / ( RMSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / RCSe ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,Const ) ) - ( Max( BR,CRS ) * ( RRS * ( MDR / ( DDR * Min( ( BR * AMS ) ,Max( Max( MDR,ACS ),DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RMSe - RMSe ) - RRSe ) * RCSe ) * Max( DS,MLU ) ) ,( ( DS / MLU ) / ( ( RMSe / Min( RMSe ,Max( Min( CS ,RRSe ),Min( MUR ,MUC ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) - ( FirstVNF_RAM_Server - CRS ) ) / ( ( Const * Const ) + Const ) )", "choosing": "( ( ( RCSe / RRSe ) - Min( RRSe ,( CS + MLU ) ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( FirstVNF_CPU,Min( Const ,Max( CRS,BR ) ) ) )", "choosing": "( ( DS - MUR ) + ( MUR + ( CS / ( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,DDR ) ,Max( RRS,Const ) ) - ( Max( MRS,BR ) + Min( FirstVNF_CPU_Server ,AMS ) ) )", "choosing": "( Max( RRSe,( ( ( CS / RRSe ) * MUR ) / MUR ) ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Min( MDR ,( ( ( Max( DDR,BR ) / Max( Const,MRS ) ) - AMS ) * MDR ) ) + ( FirstVNF_RAM_Server - ARS ) ) ) - ( BR - MDR ) )", "choosing": "( ( DS - DS ) - ( CS - ( Min( ( Max( RMSe,Max( Min( RRSe ,RCSe ),( RRSe / DS ) ) ) / Max( MLU,DS ) ) ,( MUC * MUM ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - Max( Const,( ( ( ( FirstVNF_Mem_Server + PN ) / CRS ) / ARS ) - BR ) ) )", "choosing": "( Max( ( RCSe - Max( MUM,RMSe ) ),MUM ) + Max( ( CS * Min( MUC ,Max( DS,RMSe ) ) ),Max( ( RMSe * Min( MUR ,RRSe ) ),( CS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( BR - RRS ) / BR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( RMSe - RRSe ) * Max( MUM,( ( MUM + RMSe ) * ( RMSe * RRSe ) ) ) ) + ( RRSe + CS ) ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / ( ( Const - PN ) / AMS ) ) + FirstVNF_Mem_Server ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( MRS - AMS ) / ( AMS * PN ) ) )", "choosing": "( ( Max( MUC,( RMSe * MUC ) ) * ( RRSe - CS ) ) + ( CS + Min( ( Max( DS,MUR ) * DS ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * Max( FirstVNF_Mem_Server,RRS ) ) + Min( ( CRS + CRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * CRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / ( CS - ( DS * ( ( CS / MUM ) / Max( CS,CS ) ) ) ) ) + ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN * FirstVNF_Mem ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( ( Min( ( AMS - DDR ) ,( CRS - ( ARS + FirstVNF_CPU_Server ) ) ) + BR ) - RRS ) ) - ( ( ARS * AMS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MLU ,CS ) + CS ) + ( ( RRSe - Min( RMSe ,MUC ) ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( Max( Min( ACS ,MDR ),( MRS / ACS ) ) ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( MLU,MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( Min( ARS ,FirstVNF_Mem ),( MRS + BR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) ) / Min( MRS ,DDR ) ) - ( AMS / FirstVNF_RAM ) )", "choosing": "( ( Min( RRSe ,MLU ) * MLU ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( RCSe + RMSe ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) )", "choosing": "( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( RRSe - ( RCSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( Min( ACS ,( PN / FirstVNF_RAM ) ) + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RMSe * MUM ),( DS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Max( MRS,Min( Const ,FirstVNF_CPU ) ) / Min( ( FirstVNF_RAM / BR ) ,( MRS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( Max( MUM,RRSe ),( RCSe * ( ( MUM - MLU ) / MLU ) ) ) - ( RRSe - RCSe ) ),( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ) ) ) - Max( ( ( DS + DS ) - ( CS - ( MUM * CS ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( ( Max( ( Max( CRS,PN ) + CRS ),MRS ) + ( RRS - Max( DDR,RRS ) ) ) / FirstVNF_RAM ) )", "choosing": "Min( Min( Min( ( CS + RRSe ) ,( ( ( ( ( RCSe / RRSe ) - MUR ) / DS ) + ( Min( CS ,Min( RMSe ,MLU ) ) / MLU ) ) * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Max( ( DDR - ARS ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - Const ) ) - ( ( FirstVNF_CPU_Server / AMS ) + ( ARS * MRS ) ) ) )", "choosing": "( ( ( RCSe * RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6702355460385439, "obj2": 0.2744141970915598}, {"determining": "( Max( ACS,ACS ) - Max( Min( Max( AMS,PN ) ,Max( FirstVNF_RAM_Server,CRS ) ),Min( ( CRS / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUM,( MUM / ( DS / MUR ) ) ) + ( RMSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( ( ( FirstVNF_Mem / MRS ) + BR ) - ( ARS / FirstVNF_RAM ) ) ) - ( MDR / MRS ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / ( ( DS * CS ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.2744141970915598}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10064515272465303}, {"determining": "( ( AMS - MDR ) - ( AMS * MDR ) )", "choosing": "( Max( Min( Max( MUM,RMSe ) ,RCSe ),MUM ) + Max( ( CS * Min( MUC ,Max( DS,RMSe ) ) ),Max( ( RMSe * MUM ),( DS * DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11324708612215027}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + ( ( MRS - AMS ) * ( AMS * PN ) ) ) + Const ) )", "choosing": "( ( ( CS * RMSe ) - ( DS / DS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.9314775160599572, "obj2": 0.043168148344580666}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( MUC / RRSe ) - ( ( ( Min( RCSe ,MUR ) / ( ( MUR + Max( CS,DS ) ) + ( RCSe / ( MUC - RRSe ) ) ) ) + RCSe ) + RCSe ) )", "obj1": 0.7730192719486081, "obj2": 0.17102489782151517}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.08860065042911337}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.017361312085003255}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / ( CS - MUM ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( ( DS / Min( MUC ,MUC ) ) * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe / ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( Max( ( ACS / RRS ),( ( ACS - PN ) / CRS ) ) - ( ( DDR * MRS ) / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( RMSe,Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ) ) * ( MLU * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( ( MDR * Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( Max( ( Max( ( Max( ( MLU / RRSe ),RCSe ) + MLU ),RCSe ) / ( RRSe / ( RRSe / Max( RRSe,( RRSe - MUR ) ) ) ) ),Max( RMSe,RRSe ) ) - MUR ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.18680334898470918}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( ( MRS + MDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( DDR + ( Max( ( FirstVNF_RAM * FirstVNF_RAM ),MDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU - ( DDR / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( ( ( ( ( CS / RRSe ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + ( RMSe / MUC ) ),Max( ( ( MUR / Min( MUC ,( MLU + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.20473784223135094}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7837259100642399, "obj2": 0.10950303810610214}, {"determining": "( ( Min( BR ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) - Max( Max( ( DDR / RRS ),BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC + RRSe ) - ( Min( RMSe ,Max( Min( RMSe ,Max( Min( ( CS * MUR ) ,Min( MLU ,RMSe ) ),( RRSe + CS ) ) ),( MLU * MUC ) ) ) + ( MUR * RRSe ) ) )", "obj1": 0.7708779443254818, "obj2": 0.17280781764655317}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / ( Max( ARS,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * CRS ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( DS / RCSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) + ( Min( FirstVNF_Mem_Server ,ARS ) + ( DDR / Const ) ) ) / ( ( MDR - Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_RAM * Max( RRS,( MRS - Const ) ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18057949394550385}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( RMSe * MUC ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6895074946466809, "obj2": 0.24526543339560197}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( MUC / RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( BR + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) ) ) ) - DDR )", "choosing": "Min( ( MUR + MLU ) ,( MLU - ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( RRSe - ( RCSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "Max( ( Max( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server + MDR ) ),FirstVNF_Mem ) + ( FirstVNF_CPU_Server + ( ARS - MDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RCSe ,MUR ) + ( RRSe + MUR ) )", "obj1": 0.6809421841541756, "obj2": 0.2542211061352315}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6895074946466809, "obj2": 0.24526543339560197}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( DDR + Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) )", "choosing": "( MUM + ( Min( Max( ( MUC + MUM ),Min( ( MUC + MLU ) ,MUC ) ) ,( ( ( RRSe * CS ) - ( CS - MUM ) ) / Max( MLU,( MUC - Min( MUR ,MUM ) ) ) ) ) * MLU ) )", "obj1": 0.6788008565310493, "obj2": 0.26343966942488745}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,ARS ) + ( DDR / Max( ( DDR * FirstVNF_RAM_Server ),Const ) ) ) + ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) ) / ( ( RRS - Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,Min( ( FirstVNF_RAM * Max( ( ACS * PN ),AMS ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUM / ( DS / MUR ) ) + MUM ) + ( MLU / Max( ( ( Min( CS ,DS ) / ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - ( RCSe * ( RCSe - MLU ) ) ),RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18057949394550385}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23235917983458826}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ( MRS + MDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( FirstVNF_Mem_Server + ARS ) * ( FirstVNF_CPU - ( DDR / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7408993576017131, "obj2": 0.20473784223135094}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe - ( RRSe + ( RRSe / Max( RCSe,MLU ) ) ) ) - Max( MUM,RMSe ) ) - Max( ( Min( MUC ,DS ) - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( MUM - RMSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.22255037531110772}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Max( MLU,MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.22255037531110772}, {"determining": "( ( Max( DDR,FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "Min( Min( Min( Max( MUR,MUC ) ,Max( MUC,MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( ( ( ( MLU + CS ) + MUM ) + CS ) / Max( MUR,( CS - ( MUR / RRSe ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6809421841541756, "obj2": 0.2542211061352315}, {"determining": "( ( Max( ( PN - CRS ),( BR * AMS ) ) / Max( Max( ( ( CRS - FirstVNF_Mem ) * BR ),ARS ),( FirstVNF_CPU_Server - CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,( Min( CRS ,BR ) - DDR ) ) ),Max( Const,DDR ) ) )", "choosing": "( ( ( RCSe / RRSe ) + Max( MUC,( Min( MUC ,MUC ) * ( CS + RRSe ) ) ) ) + ( CS * MUR ) )", "obj1": 0.7237687366167024, "obj2": 0.2210451165202132}, {"determining": "( Max( MRS,Const ) + Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server - ACS ) + ARS ) ) ),DDR ) )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,RRSe ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23235917983458826}, {"determining": "( ( Const / Max( BR,BR ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( ( Min( MLU ,CS ) * CS ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RMSe ) ) ) ) - Max( Min( Min( RRSe ,CS ) ,MUM ),RRSe ) )", "obj1": 0.9700214132762313, "obj2": 0.014815895324336494}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) - ( BR * BR ) ) + MRS ) + ( FirstVNF_RAM + Min( CRS ,( DDR - ACS ) ) ) ) ) + AMS ) - MDR ) - ( Max( MRS,BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,Min( RCSe ,DS ) ) ) + ( ( MUM - MUR ) / RCSe ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( DDR - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( Min( RMSe ,MUR ) + ( Max( RMSe,MUR ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( Min( ACS ,MDR ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7794432548179872, "obj2": 0.11223017281494968}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9700214132762313, "obj2": 0.014815895324336494}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,FirstVNF_RAM_Server ) ) - Max( ( MRS + BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + CS )", "obj1": 0.7730192719486081, "obj2": 0.17102489782151517}, {"determining": "( Max( BR,PN ) * Max( Max( ( ( PN / ARS ) * CRS ),Max( FirstVNF_RAM,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ACS ) ,RRS ) * PN ) ) ) )", "choosing": "( Max( MUR,RMSe ) + ( MLU / DS ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( ( ( PN - MDR ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_Mem_Server * CRS ) ) ) * Max( Max( ( ( PN / FirstVNF_CPU ) * CRS ),Max( FirstVNF_RAM,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ACS ) ,RRS ) * PN ) ) ) )", "choosing": "( ( MLU / DS ) + ( RCSe / ( ( ( ( RMSe / MUC ) / ( MUM - MUR ) ) / DS ) - CS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),Max( Const,DDR ) ) )", "choosing": "( ( DS + DS ) - ( CS - ( Min( ( Max( Max( ( MUR * RCSe ),( MUR / CS ) ),RCSe ) + MUM ) ,( Max( RMSe,Max( Min( RRSe ,RCSe ),( RRSe / DS ) ) ) / Max( MLU,DS ) ) ) * CS ) ) )", "obj1": 0.7237687366167024, "obj2": 0.2210451165202132}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ACS / Max( MDR,MRS ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( CRS + PN ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( RRSe ,Min( MLU ,( ( MUC * Max( RCSe,RRSe ) ) - MUR ) ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / Min( RCSe ,MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Max( Max( Const,DDR ),( AMS / MRS ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / Min( DS ,DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,MDR ) / Max( Const,( Const - Min( ARS ,ARS ) ) ) ) - Max( Max( MRS,ARS ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Min( Min( ( RRSe + Min( RMSe ,Min( CS ,RMSe ) ) ) ,MLU ) ,MUC ),MLU ) * MUM ) - ( ( RMSe + MUR ) + ( Max( Max( ( ( MUC - ( MUC / RRSe ) ) * MUR ),MUC ),MUR ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,Max( ( RRS / PN ),Min( ( FirstVNF_Mem / DDR ) ,DDR ) ) ) - Max( ACS,AMS ) )", "choosing": "( ( ( DS * MUM ) * Min( ( ( ( ( Max( MUM,MLU ) * MUR ) + RMSe ) / MUM ) + ( MUC / RMSe ) ) ,MUC ) ) / Min( MUC ,( DS * ( RRSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU / Max( FirstVNF_CPU,ARS ) ) / ( FirstVNF_RAM_Server * BR ) ) / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),Min( MUC ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( RRS * AMS ) ) ),( DDR / ARS ) )", "choosing": "( ( ( RRSe - ( RMSe + MUM ) ) * Max( CS,MUM ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const * Min( FirstVNF_RAM_Server ,( Min( PN ,DDR ) * CRS ) ) ) * ARS ),( MRS + ( MDR * FirstVNF_Mem ) ) ) - Max( Min( Max( BR,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ),Min( ( CRS / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( CRS - FirstVNF_RAM_Server ) ) / ( BR / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( ( ( RCSe / ( MUR - RMSe ) ) - DS ) * Min( ( RRSe - ( MUR / MUR ) ) ,( MLU * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * DDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( CRS / Max( ACS,ACS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Min( RMSe ,RMSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),Min( Max( ACS,BR ) ,( PN * CRS ) ) ) - ( Min( Max( FirstVNF_RAM_Server,CRS ) ,( ARS * Const ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( RCSe + RMSe ) / Min( CS ,MUC ) ) ,DS ) * ( MUR / Min( ( ( RCSe - MLU ) + ( RMSe * MLU ) ) ,RMSe ) ) ) - RMSe ) - DS ),( ( CS / CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),PN ) )", "choosing": "( ( Max( RCSe,CS ) * ( MUM / ( ( ( CS + RMSe ) + CS ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) ) ) ) - ( Min( Max( MUR,Max( ( ( DS - DS ) / MUC ),RMSe ) ) ,RCSe ) + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - Max( Max( MRS,FirstVNF_Mem ),Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( DS ,( MUR + CS ) ) + MUM ) / DS ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / BR ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( RCSe + MUC ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / Min( Min( AMS ,BR ) ,( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / ( CS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,PN ) - ( FirstVNF_CPU_Server / DDR ) ) ,( RRS * MRS ) )", "choosing": "( Max( Min( RMSe ,MUM ),( ( RRSe - MLU ) * CS ) ) * ( ( ( MUM / RMSe ) * MLU ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) - ( BR + AMS ) )", "choosing": "( Min( ( RCSe / RMSe ) ,( MUR / MUC ) ) * ( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( PN * BR ) ) - DDR )", "choosing": "Min( ( MUR + MLU ) ,( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( ( Max( PN,FirstVNF_CPU ) * Max( FirstVNF_Mem,ACS ) ) - MDR ) ) * Max( PN,BR ) )", "choosing": "Min( CS ,( Min( ( Max( Max( ( RRSe / RCSe ),( MLU * RRSe ) ),MLU ) / MLU ) ,( MUR / DS ) ) / ( RMSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / RCSe ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,Const ) ) - ( Max( BR,CRS ) * ( RRS * ( MDR / ( DDR * Min( ( BR * AMS ) ,Max( Max( MDR,ACS ),DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RMSe - RMSe ) - RRSe ) * RCSe ) * Max( DS,MLU ) ) ,( ( DS / MLU ) / ( ( RMSe / Min( RMSe ,Max( Min( CS ,RRSe ),Min( MUR ,MUC ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) - ( FirstVNF_RAM_Server - CRS ) ) / ( ( Const * Const ) + Const ) )", "choosing": "( ( ( RCSe / RRSe ) - Min( RRSe ,( CS + MLU ) ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( FirstVNF_CPU,Min( Const ,Max( CRS,BR ) ) ) )", "choosing": "( ( DS - MUR ) + ( MUR + ( CS / ( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,DDR ) ,Max( RRS,Const ) ) - ( Max( MRS,BR ) + Min( FirstVNF_CPU_Server ,AMS ) ) )", "choosing": "( Max( RRSe,( ( ( CS / RRSe ) * MUR ) / MUR ) ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Min( MDR ,( ( ( Max( DDR,BR ) / Max( Const,MRS ) ) - AMS ) * MDR ) ) + ( FirstVNF_RAM_Server - ARS ) ) ) - ( BR - MDR ) )", "choosing": "( ( DS - DS ) - ( CS - ( Min( ( Max( RMSe,Max( Min( RRSe ,RCSe ),( RRSe / DS ) ) ) / Max( MLU,DS ) ) ,( MUC * MUM ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - Max( Const,( ( ( ( FirstVNF_Mem_Server + PN ) / CRS ) / ARS ) - BR ) ) )", "choosing": "( Max( ( RCSe - Max( MUM,RMSe ) ),MUM ) + Max( ( CS * Min( MUC ,Max( DS,RMSe ) ) ),Max( ( RMSe * Min( MUR ,RRSe ) ),( CS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( BR - RRS ) / BR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( RMSe - RRSe ) * Max( MUM,( ( MUM + RMSe ) * ( RMSe * RRSe ) ) ) ) + ( RRSe + CS ) ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / ( ( Const - PN ) / AMS ) ) + FirstVNF_Mem_Server ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( MRS - AMS ) / ( AMS * PN ) ) )", "choosing": "( ( Max( MUC,( RMSe * MUC ) ) * ( RRSe - CS ) ) + ( CS + Min( ( Max( DS,MUR ) * DS ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * Max( FirstVNF_Mem_Server,RRS ) ) + Min( ( CRS + CRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * CRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / ( CS - ( DS * ( ( CS / MUM ) / Max( CS,CS ) ) ) ) ) + ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN * FirstVNF_Mem ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( ( Min( ( AMS - DDR ) ,( CRS - ( ARS + FirstVNF_CPU_Server ) ) ) + BR ) - RRS ) ) - ( ( ARS * AMS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MLU ,CS ) + CS ) + ( ( RRSe - Min( RMSe ,MUC ) ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( Max( Min( ACS ,MDR ),( MRS / ACS ) ) ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( MLU,MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( FirstVNF_CPU,Min( Const ,Max( CRS,BR ) ) ) )", "choosing": "( ( CS / ( CS - ( DS * Min( DS ,( Min( Min( MUR ,RCSe ) ,Min( MUR ,RMSe ) ) * ( ( CS * RMSe ) - ( DS / DS ) ) ) ) ) ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,ACS ) - Max( Min( Max( AMS,PN ) ,Max( FirstVNF_RAM_Server,CRS ) ),Min( ( CRS / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUM,( MUM / ( DS / MUR ) ) ) + ( RMSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( DDR + ( DDR * ( ARS - ARS ) ) ) - ( ( ACS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / MUM ) * Max( MUC,RRSe ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.2707742099583752}, {"determining": "( ( Min( ( MDR - AMS ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( RRS / ( AMS + CRS ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),( Min( Max( ( DS + DS ),MUR ) ,( CS - ( ( DS - RCSe ) - ( MUR * MUR ) ) ) ) - RCSe ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( Min( ( ( ACS - PN ) / CRS ) ,( AMS * FirstVNF_CPU ) ) - Const ) - Max( CRS,Max( FirstVNF_RAM,( AMS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( ( MUC + MLU ),MLU ) - DS ) ),( Max( RRSe,MUC ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9229122055674518, "obj2": 0.040877944745855106}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( MUM / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.867237687366167, "obj2": 0.0657040414634876}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7473233404710921, "obj2": 0.13179620200318712}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( ( MDR * Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( Max( ( Max( ( Max( ( MLU / RRSe ),RCSe ) + MLU ),RCSe ) / ( RRSe / ( RRSe / Max( RRSe,( RRSe - MUR ) ) ) ) ),Max( RMSe,RRSe ) ) - MUR ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.18680334898470918}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( ( MRS + MDR ) - ( ( DDR - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) / ( ( FirstVNF_Mem_Server + ARS ) * ( FirstVNF_CPU - ( DDR / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUM / ( DS / ( ( RRSe - RRSe ) * Max( MUM,CS ) ) ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.2047378422313509}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( Max( Min( Max( Min( ACS ,MDR ),( MRS / ACS ) ) ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.13020270535005288}, {"determining": "Max( ( ( Min( MRS ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * ( ( CRS - MRS ) + ACS ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( ( Max( RCSe,MUM ) * MLU ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( ( ( ( CS * RMSe ) - ( MLU / DS ) ) / Max( RCSe,RCSe ) ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.6873661670235546, "obj2": 0.24027900917809483}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10064515272465303}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10064515272465303}, {"determining": "( ( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_RAM / FirstVNF_CPU ) ) / ( ( BR + RRS ) / ( DDR / MDR ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUM / ( Max( Max( MLU,Max( CS,MLU ) ),Min( RCSe ,( MUC / CS ) ) ) / MUR ) ),MUM ) + ( MLU / Max( ( RMSe + ( ( ( RMSe - ( DS - RRSe ) ) - ( Min( MUM ,MUC ) + ( RMSe * MUR ) ) ) / MUR ) ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( RCSe,MUM ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.017361312085003255}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( ( DS / Min( MUC ,MUC ) ) * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe / ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( ( ( MRS - CRS ) + ( BR * AMS ) ) / Max( Max( Max( Const,( ( FirstVNF_Mem + ( PN - DDR ) ) - ( BR + ( FirstVNF_Mem / MRS ) ) ) ),ARS ),( CRS * FirstVNF_CPU_Server ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / Min( MUM ,MLU ) ) ),MUR ) + ( ( DS * MUM ) * Max( RMSe,Min( ( CS - Max( MLU,( RRSe + ( CS + MLU ) ) ) ) ,( MLU / Min( MUM ,CS ) ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.22904344598366533}, {"determining": "( ( AMS - MDR ) - ( AMS * MDR ) )", "choosing": "( Max( Min( Max( MUM,RMSe ) ,RCSe ),MUM ) + Max( ( CS * Min( MUC ,Max( DS,RMSe ) ) ),Max( ( RMSe * MUM ),( DS * DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11324708612215027}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( ( MDR * Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7430406852248393, "obj2": 0.18680334898470918}, {"determining": "( ( Const - Max( Const,ACS ) ) - ( MDR * AMS ) )", "choosing": "( Max( Min( Max( MUM,RMSe ) ,RCSe ),MUM ) + Max( ( CS * ( MUC - Max( DS,RMSe ) ) ),Max( ( RMSe * ( MUM / RRSe ) ),( DS * DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11324708612215027}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) - MDR ) - DDR )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Min( RMSe ,RMSe ) + CS ) )", "obj1": 0.9657387580299786, "obj2": 0.017361312085003255}, {"determining": "( ( AMS - MDR ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7837259100642399, "obj2": 0.10950303810610214}, {"determining": "Max( ( Max( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server + MDR ) ),FirstVNF_Mem ) + ( FirstVNF_CPU_Server + ( ARS - MDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RCSe ,MUR ) + ( RRSe + MUR ) )", "obj1": 0.6809421841541756, "obj2": 0.2542211061352315}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( MUM,CS ) ) + ( Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) + CS ) )", "obj1": 0.6788008565310493, "obj2": 0.257171487633063}, {"determining": "( Max( MRS,Const ) + Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server - ACS ) + ARS ) ) ),DDR ) )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,RRSe ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / ( CS - MUM ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( Min( Const ,( FirstVNF_RAM + ( ( ( RRS / BR ) - ( AMS - MDR ) ) - ( ( Min( Max( DDR,Const ) ,( FirstVNF_Mem / ARS ) ) * MDR ) / ( RRS - ( ARS / RRS ) ) ) ) ) ) - ( FirstVNF_Mem * PN ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) ) + ( ( ( MUR + ( MUM * MUR ) ) / MUM ) * Min( MUM ,( RRSe - CS ) ) ) ),( RRSe / ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013424654620831549}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7837259100642399, "obj2": 0.10950303810610214}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23235917983458826}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / ( ( RRS * DDR ) + Max( ARS,Const ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUR,( MUC + ( CS / RCSe ) ) ) + Max( RRSe,RMSe ) )", "obj1": 0.6980728051391863, "obj2": 0.23235917983458826}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( Min( ACS ,MDR ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7794432548179872, "obj2": 0.11223017281494968}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6809421841541756, "obj2": 0.2542211061352315}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( RMSe * MUC ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,DDR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ) / RRSe ) )", "obj1": 0.9828693790149893, "obj2": 0.008762676005794364}, {"determining": "( DDR + Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),MDR ) )", "choosing": "( MUM + ( Min( ( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ,( ( ( RRSe * CS ) - ( CS - MUM ) ) / Max( MLU,( MUC - Min( MUR ,MUM ) ) ) ) ) * MLU ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( RMSe * MUC ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( FirstVNF_CPU_Server - AMS ) - ( Max( PN,FirstVNF_CPU ) * ( FirstVNF_Mem - Max( BR,DDR ) ) ) ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( Min( ( RRSe - Min( RMSe ,( MLU + DS ) ) ) ,RRSe ) - MUM ) / MUC ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( MLU * RCSe ) ) - ( Min( MUM ,CS ) + ( RMSe * MUR ) ) ) - Min( MUC ,CS ) ) + RMSe ),Max( ( ( DS / ( ( DS + RRSe ) - MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.007068513165162922}, {"determining": "( ( BR + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( MDR - AMS ) ) ) ) - DDR )", "choosing": "Min( Max( MLU,( ( RCSe - MUC ) + Min( DS ,DS ) ) ) ,( MLU - ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe + RRSe ) ),( RRSe - ( RCSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( ( DDR / AMS ) - MDR ) - ( Max( MRS,BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051116097080947595}, {"determining": "( ( BR + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) ) ) ) - DDR )", "choosing": "Min( ( MUR + MLU ) ,( MLU - ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( RRSe - ( RCSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7473233404710921, "obj2": 0.13179620200318712}, {"determining": "( ( Const / Max( BR,BR ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( ( Min( MLU ,CS ) * CS ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RMSe ) ) ) ) - Max( Min( Min( RRSe ,CS ) ,MUM ),RRSe ) )", "obj1": 0.9700214132762313, "obj2": 0.014815895324336494}, {"determining": "( Max( BR,PN ) * Max( Max( ( ( PN / ARS ) * CRS ),Max( FirstVNF_RAM,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ACS ) ,RRS ) * PN ) ) ) )", "choosing": "( Max( MUR,RMSe ) + ( MLU / DS ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( Max( RMSe,Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ) ) * ( MLU * ( ( DS + DS ) * MUR ) ) ) ),RRSe ) )", "obj1": 0.9700214132762313, "obj2": 0.014815895324336494}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) - ( BR * BR ) ) + MRS ) + ( FirstVNF_RAM + Min( CRS ,( DDR - ACS ) ) ) ) ) + AMS ) - MDR ) - ( Max( MRS,BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,Min( RCSe ,DS ) ) ) + ( ( MUM - MUR ) / RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051116097080947595}, {"determining": "( ( ( ( PN - MDR ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_Mem_Server * CRS ) ) ) * Max( Max( ( ( PN / FirstVNF_CPU ) * CRS ),Max( FirstVNF_RAM,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ACS ) ,RRS ) * PN ) ) ) )", "choosing": "( ( MLU / DS ) + ( RCSe / ( ( ( ( RMSe / MUC ) / ( MUM - MUR ) ) / DS ) - CS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / ( Max( MUM,( Min( MLU ,( MUR / RMSe ) ) + RRSe ) ) + RCSe ) ) / Max( RCSe,CS ) ) - ( Min( MUC ,MUR ) + ( ( ( ( ( DS / CS ) + MUM ) * ( MUC * Max( RCSe,( DS / MUM ) ) ) ) + MUC ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) - ( BR * BR ) ) + MRS ) + ( FirstVNF_RAM + Min( CRS ,( DDR - ACS ) ) ) ) ) + AMS ) - MDR ) - ( Max( MRS,BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,Min( RCSe ,DS ) ) ) + ( ( MUM - MUR ) / RCSe ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / ( Max( ARS,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * CRS ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( DS / RCSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( Max( Const,( ( ( FirstVNF_Mem / MRS ) + BR ) - ( ARS / FirstVNF_RAM ) ) ) - ( MDR / MRS ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / ( ( DS * CS ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ACS / Max( MDR,MRS ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( CRS + PN ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( RRSe ,Min( MLU ,( ( MUC * Max( RCSe,RRSe ) ) - MUR ) ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / Min( RCSe ,MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Max( Max( Const,DDR ),( AMS / MRS ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / Min( DS ,DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,MDR ) / Max( Const,( Const - Min( ARS ,ARS ) ) ) ) - Max( Max( MRS,ARS ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Min( Min( ( RRSe + Min( RMSe ,Min( CS ,RMSe ) ) ) ,MLU ) ,MUC ),MLU ) * MUM ) - ( ( RMSe + MUR ) + ( Max( Max( ( ( MUC - ( MUC / RRSe ) ) * MUR ),MUC ),MUR ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,Max( ( RRS / PN ),Min( ( FirstVNF_Mem / DDR ) ,DDR ) ) ) - Max( ACS,AMS ) )", "choosing": "( ( ( DS * MUM ) * Min( ( ( ( ( Max( MUM,MLU ) * MUR ) + RMSe ) / MUM ) + ( MUC / RMSe ) ) ,MUC ) ) / Min( MUC ,( DS * ( RRSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU / Max( FirstVNF_CPU,ARS ) ) / ( FirstVNF_RAM_Server * BR ) ) / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),Min( MUC ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( RRS * AMS ) ) ),( DDR / ARS ) )", "choosing": "( ( ( RRSe - ( RMSe + MUM ) ) * Max( CS,MUM ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const * Min( FirstVNF_RAM_Server ,( Min( PN ,DDR ) * CRS ) ) ) * ARS ),( MRS + ( MDR * FirstVNF_Mem ) ) ) - Max( Min( Max( BR,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ),Min( ( CRS / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( CRS - FirstVNF_RAM_Server ) ) / ( BR / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( ( ( RCSe / ( MUR - RMSe ) ) - DS ) * Min( ( RRSe - ( MUR / MUR ) ) ,( MLU * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * DDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( CRS / Max( ACS,ACS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Min( RMSe ,RMSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),Min( Max( ACS,BR ) ,( PN * CRS ) ) ) - ( Min( Max( FirstVNF_RAM_Server,CRS ) ,( ARS * Const ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( RCSe + RMSe ) / Min( CS ,MUC ) ) ,DS ) * ( MUR / Min( ( ( RCSe - MLU ) + ( RMSe * MLU ) ) ,RMSe ) ) ) - RMSe ) - DS ),( ( CS / CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),PN ) )", "choosing": "( ( Max( RCSe,CS ) * ( MUM / ( ( ( CS + RMSe ) + CS ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) ) ) ) - ( Min( Max( MUR,Max( ( ( DS - DS ) / MUC ),RMSe ) ) ,RCSe ) + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - Max( Max( MRS,FirstVNF_Mem ),Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( DS ,( MUR + CS ) ) + MUM ) / DS ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / BR ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( RCSe + MUC ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / Min( Min( AMS ,BR ) ,( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / ( CS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,PN ) - ( FirstVNF_CPU_Server / DDR ) ) ,( RRS * MRS ) )", "choosing": "( Max( Min( RMSe ,MUM ),( ( RRSe - MLU ) * CS ) ) * ( ( ( MUM / RMSe ) * MLU ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) - ( BR + AMS ) )", "choosing": "( Min( ( RCSe / RMSe ) ,( MUR / MUC ) ) * ( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( PN * BR ) ) - DDR )", "choosing": "Min( ( MUR + MLU ) ,( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( ( Max( PN,FirstVNF_CPU ) * Max( FirstVNF_Mem,ACS ) ) - MDR ) ) * Max( PN,BR ) )", "choosing": "Min( CS ,( Min( ( Max( Max( ( RRSe / RCSe ),( MLU * RRSe ) ),MLU ) / MLU ) ,( MUR / DS ) ) / ( RMSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / RCSe ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,Const ) ) - ( Max( BR,CRS ) * ( RRS * ( MDR / ( DDR * Min( ( BR * AMS ) ,Max( Max( MDR,ACS ),DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RMSe - RMSe ) - RRSe ) * RCSe ) * Max( DS,MLU ) ) ,( ( DS / MLU ) / ( ( RMSe / Min( RMSe ,Max( Min( CS ,RRSe ),Min( MUR ,MUC ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) - ( FirstVNF_RAM_Server - CRS ) ) / ( ( Const * Const ) + Const ) )", "choosing": "( ( ( RCSe / RRSe ) - Min( RRSe ,( CS + MLU ) ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( FirstVNF_CPU,Min( Const ,Max( CRS,BR ) ) ) )", "choosing": "( ( DS - MUR ) + ( MUR + ( CS / ( CS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,DDR ) ,Max( RRS,Const ) ) - ( Max( MRS,BR ) + Min( FirstVNF_CPU_Server ,AMS ) ) )", "choosing": "( Max( RRSe,( ( ( CS / RRSe ) * MUR ) / MUR ) ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Min( MDR ,( ( ( Max( DDR,BR ) / Max( Const,MRS ) ) - AMS ) * MDR ) ) + ( FirstVNF_RAM_Server - ARS ) ) ) - ( BR - MDR ) )", "choosing": "( ( DS - DS ) - ( CS - ( Min( ( Max( RMSe,Max( Min( RRSe ,RCSe ),( RRSe / DS ) ) ) / Max( MLU,DS ) ) ,( MUC * MUM ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - Max( Const,( ( ( ( FirstVNF_Mem_Server + PN ) / CRS ) / ARS ) - BR ) ) )", "choosing": "( Max( ( RCSe - Max( MUM,RMSe ) ),MUM ) + Max( ( CS * Min( MUC ,Max( DS,RMSe ) ) ),Max( ( RMSe * Min( MUR ,RRSe ) ),( CS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( ARS ,FirstVNF_Mem ),( MDR + ACS ) ),Const ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( DS / MUR ) ),MUM ) + ( MLU / Max( ( RCSe + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( BR - RRS ) / BR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( RMSe - RRSe ) * Max( MUM,( ( MUM + RMSe ) * ( RMSe * RRSe ) ) ) ) + ( RRSe + CS ) ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / ( ( Const - PN ) / AMS ) ) + FirstVNF_Mem_Server ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( MRS - AMS ) / ( AMS * PN ) ) )", "choosing": "( ( Max( MUC,( RMSe * MUC ) ) * ( RRSe - CS ) ) + ( CS + Min( ( Max( DS,MUR ) * DS ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * Max( FirstVNF_Mem_Server,RRS ) ) + Min( ( CRS + CRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * CRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / ( CS - ( DS * ( ( CS / MUM ) / Max( CS,CS ) ) ) ) ) + ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN * FirstVNF_Mem ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( ( Min( ( AMS - DDR ) ,( CRS - ( ARS + FirstVNF_CPU_Server ) ) ) + BR ) - RRS ) ) - ( ( ARS * AMS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MLU ,CS ) + CS ) + ( ( RRSe - Min( RMSe ,MUC ) ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Max( ( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( DDR + ( DDR * ( ARS - ARS ) ) ) - ( ( ACS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / MUM ) * Max( MUC,RRSe ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.2707742099583752}, {"determining": "( ( RRS / BR ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( FirstVNF_CPU,Min( Const ,Max( CRS,BR ) ) ) )", "choosing": "( ( CS / ( CS - ( DS * Min( DS ,( Min( Min( MUR ,RCSe ) ,Min( MUR ,RMSe ) ) * ( ( CS * RMSe ) - ( DS / DS ) ) ) ) ) ) ) + ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6702355460385439, "obj2": 0.2707742099583752}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( ( MDR * Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( Max( ( Max( ( Max( ( MLU / RRSe ),RCSe ) + MLU ),RCSe ) / ( RRSe / ( RRSe / Max( RRSe,( RRSe - MUR ) ) ) ) ),Max( RMSe,RRSe ) ) - MUR ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.18680334898470918}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( MUM / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.7473233404710921, "obj2": 0.13179620200318712}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / FirstVNF_Mem ) ) ) / ( ( MDR * Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ),RRSe ) )", "obj1": 0.7387580299785867, "obj2": 0.19237520002579722}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ACS ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( Max( MUR,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.9036402569593148, "obj2": 0.048130378342485486}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - Min( ( MUM - DS ) ,RMSe ) ) ) / DS ),MUM ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7601713062098501, "obj2": 0.12678609352207576}, {"determining": "( ( ( MRS + MRS ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MLU ,CS ),RCSe ) / ( RCSe * ( ( ( Max( ( MUM * RMSe ),Min( RRSe ,MLU ) ) - MUM ) + MUR ) / CS ) ) ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( Min( ( PN / FirstVNF_Mem ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RMSe - MUC ) / RCSe ) / Max( RRSe,( ( MUR + RCSe ) * ( Min( RRSe ,Min( ( RCSe + MUC ) ,CS ) ) * MLU ) ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10064515272465303}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10064515272465303}, {"determining": "( ( AMS - MDR ) - FirstVNF_Mem )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / Min( RMSe ,DS ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( Min( ( MDR - AMS ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( RRS / ( AMS + CRS ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),( Min( Max( ( DS + DS ),MUR ) ,( CS - ( ( DS - RCSe ) - ( MUR * MUR ) ) ) ) - RCSe ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( ( FirstVNF_CPU_Server + DDR ) - PN ) ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RMSe - ( ( DS / RMSe ) * MUC ) ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - MUM ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( Min( ( ( ACS - PN ) / CRS ) ,( AMS * FirstVNF_CPU ) ) - Const ) - Max( CRS,Max( FirstVNF_RAM,( AMS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( ( MUC + MLU ),MLU ) - DS ) ),( Max( RRSe,MUC ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9229122055674518, "obj2": 0.040877944745855106}, {"determining": "( ( ( ( MRS - CRS ) + ( BR * AMS ) ) / Max( Max( Max( Const,( ( FirstVNF_Mem + ( PN - DDR ) ) - ( BR + ( FirstVNF_Mem / MRS ) ) ) ),ARS ),( CRS * FirstVNF_CPU_Server ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / Min( MUM ,MLU ) ) ),MUR ) + ( ( DS * MUM ) * Max( RMSe,Min( ( CS - Max( MLU,( RRSe + ( CS + MLU ) ) ) ) ,( MLU / Min( MUM ,CS ) ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.22904344598366533}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.24027900917809483}, {"determining": "( ( ( FirstVNF_RAM_Server * DDR ) - RRS ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * ( AMS - MDR ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( RMSe - MUC ) )", "obj1": 0.8501070663811563, "obj2": 0.07764804376625538}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - RRSe ) * Max( MUM,CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07785346820303317}, {"determining": "( ( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_RAM / FirstVNF_CPU ) ) / ( ( BR + RRS ) / ( DDR / MDR ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUM / ( Max( Max( MLU,Max( CS,MLU ) ),Min( RCSe ,( MUC / CS ) ) ) / MUR ) ),MUM ) + ( MLU / Max( ( RMSe + ( ( ( RMSe - ( DS - RRSe ) ) - ( Min( MUM ,MUC ) + ( RMSe * MUR ) ) ) / MUR ) ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( RCSe,MUM ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( Min( ( ( ACS - PN ) / CRS ) ,( AMS * FirstVNF_CPU ) ) - MDR ) - DDR )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9229122055674518, "obj2": 0.040877944745855106}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.8586723768736617, "obj2": 0.07254554467252955}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( Min( RMSe ,MUR ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10950303810610214}, {"determining": "Max( ( Max( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server + MDR ) ),FirstVNF_Mem ) + ( FirstVNF_CPU_Server + ( ARS - MDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RCSe ,MUR ) + ( RRSe + MUR ) )", "obj1": 0.6809421841541756, "obj2": 0.2542211061352315}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( PN / MRS ) - ( AMS / MDR ) )", "choosing": "( ( MLU / DS ) + Max( RCSe,( CS - ( ( ( RMSe / MUC ) / ( ( MUC - ( MUM + RCSe ) ) - MUR ) ) / DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11324708612215027}, {"determining": "( ( AMS - MDR ) - ( AMS * MDR ) )", "choosing": "( Max( Min( Max( MUM,RMSe ) ,RCSe ),MUM ) + Max( ( CS * Min( MUC ,Max( DS,RMSe ) ) ),Max( ( RMSe * MUM ),( DS * DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11324708612215027}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( MUM,CS ) ) + ( Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) + CS ) )", "obj1": 0.6788008565310493, "obj2": 0.257171487633063}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( MDR * AMS ) ) - ( ACS + ( DDR / Const ) ) )", "choosing": "( Min( MUM ,( ( RRSe - ( Max( MUR,( ( RCSe * RCSe ) - ( DS / RMSe ) ) ) + MLU ) ) + RRSe ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.8629550321199143, "obj2": 0.07072645308040224}, {"determining": "( Max( MRS,Const ) + Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server - ACS ) + ARS ) ) ),DDR ) )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,RRSe ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "Max( ( ( Min( MRS ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * ( ( CRS - MRS ) + ACS ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( ( Max( RCSe,MUM ) * MLU ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( ( ( ( CS * RMSe ) - ( MLU / DS ) ) / Max( RCSe,RCSe ) ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.6873661670235546, "obj2": 0.24027900917809483}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - MUM ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12882476625951725}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( AMS - MDR ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7837259100642399, "obj2": 0.10950303810610214}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23235917983458826}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23235917983458826}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * AMS ) ) - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( ( RMSe - MUC ) ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.020000049163248237}, {"determining": "( ( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( ( MDR * Max( ARS,FirstVNF_CPU_Server ) ) * Min( ( ACS - MDR ) ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( Max( ( Max( ( Max( ( MLU / RRSe ),RCSe ) + MLU ),RCSe ) / ( RRSe / ( RRSe / Max( RRSe,( RRSe - MUR ) ) ) ) ),Max( RMSe,RRSe ) ) - MUR ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.18680334898470918}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6809421841541756, "obj2": 0.2542211061352315}, {"determining": "( ( Const / ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.017939174670675084}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( RMSe * MUC ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( DDR + Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),MDR ) )", "choosing": "( MUM + ( Min( ( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ,( ( ( RRSe * CS ) - ( CS - MUM ) ) / Max( MLU,( MUC - Min( MUR ,MUM ) ) ) ) ) * MLU ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Const )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,RRSe ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( Const / ( FirstVNF_RAM + ( ( ( RRS / BR ) - ( AMS - MDR ) ) - ( ( Min( Max( Const,DDR ) ,( FirstVNF_Mem / ARS ) ) * MDR ) / ( RRS - ( ARS / RRS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + ( Min( Max( ( MUC + MUM ),Min( ( MUC + MLU ) ,MUC ) ) ,( Max( MLU,Max( CS,Min( Min( MUC ,CS ) ,MUM ) ) ) / ( ( RRSe * CS ) - ( CS - MUM ) ) ) ) * MLU ) )", "obj1": 0.9721627408993576, "obj2": 0.013424654620831549}, {"determining": "( Min( ( FirstVNF_Mem * ACS ) ,Max( FirstVNF_RAM,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem / DDR ) - AMS ) )", "choosing": "( ( Max( RCSe,RRSe ) + Max( ( ( ( ( Min( MUC ,MLU ) / Max( MUR,CS ) ) - MUR ) / ( DS * DS ) ) + MUM ),( RRSe - ( RCSe - ( MUM * MUM ) ) ) ) ) - ( ( MUC + ( ( MLU - DS ) + MUC ) ) * DS ) )", "obj1": 0.7494646680942184, "obj2": 0.13107027246525454}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( RMSe * MUC ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( Min( Const ,( FirstVNF_RAM + ( ( ( RRS / BR ) - ( AMS - MDR ) ) - ( ( Min( Max( DDR,Const ) ,( FirstVNF_Mem / ARS ) ) * MDR ) / ( RRS - ( ARS / RRS ) ) ) ) ) ) - ( FirstVNF_Mem * PN ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) ) + ( ( ( MUR + ( MUM * MUR ) ) / MUM ) * Min( MUM ,( RRSe - CS ) ) ) ),( RRSe / ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013424654620831549}, {"determining": "( ( ( FirstVNF_CPU_Server - AMS ) - ( Max( PN,FirstVNF_CPU ) * ( FirstVNF_Mem - Max( BR,DDR ) ) ) ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( Min( ( RRSe - Min( RMSe ,( MLU + DS ) ) ) ,RRSe ) - MUM ) / MUC ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( MLU * RCSe ) ) - ( Min( MUM ,CS ) + ( RMSe * MUR ) ) ) - Min( MUC ,CS ) ) + RMSe ),Max( ( ( DS / ( ( DS + RRSe ) - MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.007068513165162922}, {"determining": "( ( Const / ( FirstVNF_RAM + ( Min( Max( ACS,BR ) ,( PN + CRS ) ) - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( CS / CS ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004712342110108615}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,DDR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ) / RRSe ) )", "obj1": 0.9828693790149893, "obj2": 0.008762676005794364}, {"determining": "( ( BR + ( ( PN * FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * DDR ) ) ) - ( FirstVNF_RAM_Server / ( RRS * BR ) ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe + RRSe ) ),( ( ( CS * RCSe ) / MUR ) - MLU ) ) ) - Max( RRSe,RRSe ) ) - ( ( ( DS * Min( DS ,( RRSe / ( MLU + MUC ) ) ) ) / MUR ) / ( Min( ( RRSe / ( RMSe + CS ) ) ,RCSe ) + CS ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( Const / Max( BR,BR ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( ( Min( MLU ,CS ) * CS ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RMSe ) ) ) ) - Max( Min( Min( RRSe ,CS ) ,MUM ),RRSe ) )", "obj1": 0.9700214132762313, "obj2": 0.014815895324336494}, {"determining": "( Max( BR,PN ) * Max( Max( ( ( PN / ARS ) * CRS ),Max( FirstVNF_RAM,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ACS ) ,RRS ) * PN ) ) ) )", "choosing": "( Max( MUR,RMSe ) + ( MLU / DS ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( Min( MDR ,MDR ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) )", "obj1": 0.7794432548179872, "obj2": 0.11223017281494968}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( Min( ACS ,MDR ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7794432548179872, "obj2": 0.11223017281494968}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9700214132762313, "obj2": 0.014815895324336494}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.017361312085003255}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7473233404710921, "obj2": 0.13179620200318712}, {"determining": "( ( Max( FirstVNF_RAM,Const ) - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( ( CS - MUM ) ,Min( RRSe ,MUR ) ) + MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( RMSe ,MUC ) ) )", "obj1": 0.9657387580299786, "obj2": 0.017361312085003255}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) - ( BR * BR ) ) + MRS ) + ( FirstVNF_RAM + Min( CRS ,( DDR - ACS ) ) ) ) ) + AMS ) - MDR ) - ( Max( MRS,BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,Min( RCSe ,DS ) ) ) + ( ( MUM - MUR ) / RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051116097080947595}, {"determining": "( ( ( ( PN - MDR ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_Mem_Server * CRS ) ) ) * Max( Max( ( ( PN / FirstVNF_CPU ) * CRS ),Max( FirstVNF_RAM,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ACS ) ,RRS ) * PN ) ) ) )", "choosing": "( ( MLU / DS ) + ( RCSe / ( ( ( ( RMSe / MUC ) / ( MUM - MUR ) ) / DS ) - CS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( BR + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( MDR - AMS ) ) ) ) - DDR )", "choosing": "Min( Max( MLU,( ( RCSe - MUC ) + Min( DS ,DS ) ) ) ,( MLU - ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe + RRSe ) ),( RRSe - ( RCSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( DDR - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - DDR )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008762676005794364}, {"determining": "( ( ( DDR / AMS ) - MDR ) - ( Max( MRS,BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051116097080947595}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / ( Max( MUM,( Min( MLU ,( MUR / RMSe ) ) + RRSe ) ) + RCSe ) ) / Max( RCSe,CS ) ) - ( Min( MUC ,MUR ) + ( ( ( ( ( DS / CS ) + MUM ) * ( MUC * Max( RCSe,( DS / MUM ) ) ) ) + MUC ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( Max( ACS,ACS ) - Max( Min( Max( AMS,PN ) ,Max( FirstVNF_RAM_Server,CRS ) ),Min( ( CRS / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUM,( MUM / ( DS / MUR ) ) ) + ( RMSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( ( ( FirstVNF_Mem / MRS ) + BR ) - ( ARS / FirstVNF_RAM ) ) ) - ( MDR / MRS ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / ( ( DS * CS ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ACS / Max( MDR,MRS ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( CRS + PN ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( RRSe ,Min( MLU ,( ( MUC * Max( RCSe,RRSe ) ) - MUR ) ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / Min( RCSe ,MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Max( Max( Const,DDR ),( AMS / MRS ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / Min( DS ,DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,MDR ) / Max( Const,( Const - Min( ARS ,ARS ) ) ) ) - Max( Max( MRS,ARS ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Min( Min( ( RRSe + Min( RMSe ,Min( CS ,RMSe ) ) ) ,MLU ) ,MUC ),MLU ) * MUM ) - ( ( RMSe + MUR ) + ( Max( Max( ( ( MUC - ( MUC / RRSe ) ) * MUR ),MUC ),MUR ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,Max( ( RRS / PN ),Min( ( FirstVNF_Mem / DDR ) ,DDR ) ) ) - Max( ACS,AMS ) )", "choosing": "( ( ( DS * MUM ) * Min( ( ( ( ( Max( MUM,MLU ) * MUR ) + RMSe ) / MUM ) + ( MUC / RMSe ) ) ,MUC ) ) / Min( MUC ,( DS * ( RRSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_CPU / Max( FirstVNF_CPU,ARS ) ) / ( FirstVNF_RAM_Server * BR ) ) / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),Min( MUC ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( RRS * AMS ) ) ),( DDR / ARS ) )", "choosing": "( ( ( RRSe - ( RMSe + MUM ) ) * Max( CS,MUM ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const * Min( FirstVNF_RAM_Server ,( Min( PN ,DDR ) * CRS ) ) ) * ARS ),( MRS + ( MDR * FirstVNF_Mem ) ) ) - Max( Min( Max( BR,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ),Min( ( CRS / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( CRS - FirstVNF_RAM_Server ) ) / ( BR / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( ( ( RCSe / ( MUR - RMSe ) ) - DS ) * Min( ( RRSe - ( MUR / MUR ) ) ,( MLU * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * DDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( CRS / Max( ACS,ACS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Min( RMSe ,RMSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ),Min( Max( ACS,BR ) ,( PN * CRS ) ) ) - ( Min( Max( FirstVNF_RAM_Server,CRS ) ,( ARS * Const ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( Min( ( ( RCSe + RMSe ) / Min( CS ,MUC ) ) ,DS ) * ( MUR / Min( ( ( RCSe - MLU ) + ( RMSe * MLU ) ) ,RMSe ) ) ) - RMSe ) - DS ),( ( CS / CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),PN ) )", "choosing": "( ( Max( RCSe,CS ) * ( MUM / ( ( ( CS + RMSe ) + CS ) + ( Max( RCSe,RRSe ) / Min( CS ,MUM ) ) ) ) ) - ( Min( Max( MUR,Max( ( ( DS - DS ) / MUC ),RMSe ) ) ,RCSe ) + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - Max( Max( MRS,FirstVNF_Mem ),Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( DS ,( MUR + CS ) ) + MUM ) / DS ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / BR ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( AMS * ARS ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + ( ( MLU / MUM ) * ( RRSe * Max( ( MUR / RRSe ),( RMSe + MUR ) ) ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( RCSe + MUC ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / Min( Min( AMS ,BR ) ,( FirstVNF_Mem_Server / MRS ) ) ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / ( CS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,DDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Max( ( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( DDR + ( DDR * ( ARS - ARS ) ) ) - ( ( ACS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / MUM ) * Max( MUC,RRSe ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.2707742099583752}, {"determining": "( ( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) * DDR ) - RRS ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / BR ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,DDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( Min( RRSe ,MLU ) * MLU ) ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6702355460385439, "obj2": 0.2707742099583752}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.20967376938129284}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RMSe ) ) ) ) - Max( Min( Min( RRSe ,CS ) ,MUM ),RRSe ) )", "obj1": 0.9486081370449678, "obj2": 0.026490642616066377}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * ( ( ACS - PN ) / CRS ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,CS ) )", "obj1": 0.8179871520342612, "obj2": 0.092561584772987}, {"determining": "( ( AMS - MDR ) - ( Min( Max( ( FirstVNF_CPU_Server + ( ARS - MDR ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( MUM / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.8051391862955032, "obj2": 0.09966786910505451}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8244111349036403, "obj2": 0.0884336165862528}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - MUM ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Max( Min( RRSe ,Min( MLU ,( ( MUC * Max( RCSe,RRSe ) ) - MUR ) ) ),MUM ) ) )", "obj1": 0.7644539614561028, "obj2": 0.12143967044179473}, {"determining": "( ( Min( ( AMS - Const ) ,( AMS * FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( RRS / ACS ) ) * MDR ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( MUR ,RRSe ) ) * MLU ) ),RRSe ) ),( Max( ( MUR - CS ),CS ) / DS ) )", "obj1": 0.9143468950749465, "obj2": 0.0427261741305663}, {"determining": "( ( BR + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Min( Max( MLU,( ( RCSe - MUC ) + Min( DS ,DS ) ) ) ,( ( Max( MUR,CS ) / RMSe ) - Min( ( MUM - DS ) ,RMSe ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035546910873848724}, {"determining": "( ( ( Max( RRS,( ( AMS - MDR ) - DDR ) ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.049208825494954894}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( PN - PN ) / ( ACS - DDR ) ) ,( FirstVNF_RAM / AMS ) ) ),( ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( MUC + CS ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.24857806303828764}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( MDR + PN ) ) * FirstVNF_CPU ),( MRS / RRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( ( CS / ( ( DS - CS ) * ( MUC + CS ) ) ) / MUR ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( ( MRS + DDR ) - ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( DDR / CRS ) / Const ) ) ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( FirstVNF_CPU / ( MRS + MDR ) ) ) ) )", "choosing": "( ( ( RCSe * ( MUC / RCSe ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( ( Max( Min( ( RRSe - DS ) ,MUM ),( Max( RCSe,( MUC / MLU ) ) / MUC ) ) * RMSe ) * RRSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_RAM / FirstVNF_CPU ) ) / ( ( BR + RRS ) / ( DDR / MDR ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUM / ( Max( Max( MLU,Max( CS,MLU ) ),Min( RCSe ,( MUC / CS ) ) ) / MUR ) ),MUM ) + ( MLU / Max( ( RMSe + ( ( ( RMSe - ( DS - RRSe ) ) - ( Min( MUM ,MUC ) + ( RMSe * MUR ) ) ) / MUR ) ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( RCSe,MUM ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.8586723768736617, "obj2": 0.07254554467252955}, {"determining": "( Const * ( AMS * ( FirstVNF_Mem * ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUR / MLU ) / CS ) / RMSe ) - MUR ) + ( MUM / DS ) ) + DS ),( ( RCSe - RRSe ) - RRSe ) ) + ( ( DS * MUM ) * ( MUC + MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.21563736371911155}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( MUM,CS ) ) + ( Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) + CS ) )", "obj1": 0.6788008565310493, "obj2": 0.257171487633063}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9057815845824411, "obj2": 0.046365743576247176}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( BR / BR ) ) )", "choosing": "( ( ( MUR - DS ) * Max( ( MUC / ( RCSe - MLU ) ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * ( AMS - MDR ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( RMSe - MUC ) )", "obj1": 0.8501070663811563, "obj2": 0.07764804376625538}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( MDR * AMS ) ) - ( ACS + ( DDR / Const ) ) )", "choosing": "( Min( MUM ,( ( RRSe - ( Max( MUR,( ( RCSe * RCSe ) - ( DS / RMSe ) ) ) + MLU ) ) + RRSe ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.8629550321199143, "obj2": 0.07072645308040224}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) - Max( ( MRS / BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Max( Max( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ),Min( RCSe ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( Max( MRS,Const ) + Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server - ACS ) + ARS ) ) ),DDR ) )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,RRSe ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "Max( ( MUM / RRSe ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11183731191290418}, {"determining": "Max( ( ( Min( MRS ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * ( ( CRS - MRS ) + ACS ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( ( Max( RCSe,MUM ) * MLU ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( ( ( ( CS * RMSe ) - ( MLU / DS ) ) / Max( RCSe,RCSe ) ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.6873661670235546, "obj2": 0.24027900917809483}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN - FirstVNF_Mem ) ) - ( FirstVNF_CPU * ( MDR - CRS ) ) )", "choosing": "( Max( ( ( DS / RRSe ) / MUM ),MUM ) + ( MLU / Max( ( ( ( RMSe - RCSe ) / RCSe ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,CS ) ) ),RRSe ) ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - RRSe ) * Max( MUM,CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07785346820303317}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( MUR + DS ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - Min( ( MUM - DS ) ,RMSe ) ) ) / DS ),MUM ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7601713062098501, "obj2": 0.12678609352207576}, {"determining": "( ( Min( ( ( ACS - PN ) / CRS ) ,( AMS * FirstVNF_CPU ) ) - Const ) - Max( CRS,Max( FirstVNF_RAM,( AMS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( ( MUC + MLU ),MLU ) - DS ) ),( Max( RRSe,MUC ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9229122055674518, "obj2": 0.040877944745855106}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( Const / ( ( AMS - MDR ) - ( AMS * MDR ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / Min( DS ,DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( ( ( MLU / DS ) + ( RCSe / ( ( ( ( RMSe / MUC ) / ( MUM - MUR ) ) / DS ) - CS ) ) ),RRSe ) )", "obj1": 0.7880085653104925, "obj2": 0.10901450333215103}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( Min( RMSe ,MUR ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11533976151062823}, {"determining": "( ( ( DDR * CRS ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_Mem ,Const ) + ( ( Const / AMS ) / Max( Max( CRS,MDR ),( MRS / ARS ) ) ) ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),( DS * ( ( ( Max( RMSe,MUR ) / RMSe ) - MUM ) / ( ( MUR - MLU ) / Min( ( RRSe - MUC ) ,( MUM / ( MUR + RRSe ) ) ) ) ) ) ) + ( ( ( CS / RMSe ) * MUR ) / ( DS * MUM ) ) )", "obj1": 0.6937901498929336, "obj2": 0.23825405563170293}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( ( FirstVNF_CPU_Server + DDR ) - PN ) ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Max( MRS,FirstVNF_CPU_Server ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RMSe - ( ( DS / RMSe ) * MUC ) ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( MRS,BR ) )", "choosing": "( Max( ( ( DS * DS ) + ( DS / RCSe ) ),MUR ) + ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7044967880085653, "obj2": 0.22714552781171177}, {"determining": "( ( Min( ( PN / FirstVNF_Mem ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RMSe - MUC ) / RCSe ) / Max( RRSe,( ( MUR + RCSe ) * ( Min( RRSe ,Min( ( RCSe + MUC ) ,CS ) ) * MLU ) ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10064515272465303}, {"determining": "( ( Min( ( MDR - AMS ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( RRS / ( AMS + CRS ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),( Min( Max( ( DS + DS ),MUR ) ,( CS - ( ( DS - RCSe ) - ( MUR * MUR ) ) ) ) - RCSe ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( MUM / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.7473233404710921, "obj2": 0.13179620200318712}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.23652666387745647}, {"determining": "( ( Const / ( FirstVNF_RAM + ( Min( Max( ACS,BR ) ,( PN + CRS ) ) - ( ( Min( Max( Const,DDR ) ,( MDR / FirstVNF_Mem_Server ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / Max( RMSe,RRSe ) ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( CS / CS ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.974304068522484, "obj2": 0.012770585219940608}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Max( Min( RRSe ,Min( MLU ,( ( MUC * Max( RCSe,RRSe ) ) - MUR ) ) ),MUM ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / Min( RCSe ,MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( RMSe ,MUM ) ) ),RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12882476625951725}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * AMS ) ) - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( ( RMSe - MUC ) ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.020000049163248237}, {"determining": "( ( AMS - MDR ) - FirstVNF_Mem )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / Min( RMSe ,DS ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( Min( RMSe ,MUR ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11533976151062823}, {"determining": "( ( ( FirstVNF_RAM_Server * DDR ) - RRS ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "Max( ( Max( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server + MDR ) ),FirstVNF_Mem ) + ( FirstVNF_CPU_Server + ( ARS - MDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RCSe ,MUR ) + ( RRSe + MUR ) )", "obj1": 0.6809421841541756, "obj2": 0.2542211061352315}, {"determining": "( ( Min( ( AMS * ( AMS * MDR ) ) ,( AMS - MDR ) ) + MRS ) - ( Min( PN ,RRS ) - ACS ) )", "choosing": "Max( Max( MLU,( MUR + MUR ) ),( RMSe - MUC ) )", "obj1": 0.8501070663811563, "obj2": 0.07764804376625538}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - RRSe ) * Max( MUM,CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07785346820303317}, {"determining": "( ( Min( ( ( ACS - PN ) / CRS ) ,( AMS * FirstVNF_CPU ) ) - MDR ) - DDR )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9229122055674518, "obj2": 0.040877944745855106}, {"determining": "( DDR + Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),MDR ) )", "choosing": "( MUM + ( Min( ( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ,( ( ( RRSe * CS ) - ( CS - MUM ) ) / Max( MLU,( MUC - Min( MUR ,MUM ) ) ) ) ) * MLU ) )", "obj1": 0.6766595289079229, "obj2": 0.26557630037224367}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe - ( RMSe + MUM ) ) * Max( CS,MUM ) ) + ( RRSe + CS ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( AMS - MDR ) - FirstVNF_Mem )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / Min( RMSe ,DS ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10064515272465303}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23235917983458826}, {"determining": "( ( AMS - MDR ) - ( MDR * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),MUM ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7601713062098501, "obj2": 0.12678609352207576}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.24027900917809483}, {"determining": "( ( ( MRS + MRS ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MLU ,CS ),RCSe ) / ( RCSe * ( ( ( Max( ( MUM * RMSe ),Min( RRSe ,MLU ) ) - MUM ) + MUR ) / CS ) ) ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,DDR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ) / RRSe ) )", "obj1": 0.9828693790149893, "obj2": 0.008762676005794364}, {"determining": "( ( BR + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) ) ) ) - DDR )", "choosing": "Min( ( MUR + MLU ) ,( MLU - ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( RRSe - ( RCSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23235917983458826}, {"determining": "( ( Const / Max( BR,BR ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( ( Min( MLU ,CS ) * CS ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RMSe ) ) ) ) - Max( Min( Min( RRSe ,CS ) ,MUM ),RRSe ) )", "obj1": 0.9700214132762313, "obj2": 0.014815895324336494}, {"determining": "( ( AMS - ( ( MRS - Const ) - DDR ) ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( RMSe / ( ( Min( RRSe ,( RCSe + ( CS + MUR ) ) ) / MUM ) * MUM ) ) / Min( MUR ,CS ) ) )", "obj1": 0.7473233404710921, "obj2": 0.13179620200318712}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( ( ( RCSe / MLU ) * ( MUR + CS ) ) * Max( Min( Max( RMSe,( CS / RCSe ) ) ,RRSe ),RRSe ) ) ) * Max( MLU,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6809421841541756, "obj2": 0.2542211061352315}, {"determining": "( Max( BR,PN ) * Max( Max( ( ( PN / ARS ) * CRS ),Max( FirstVNF_RAM,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ACS ) ,RRS ) * PN ) ) ) )", "choosing": "( Max( MUR,RMSe ) + ( MLU / DS ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( AMS - MDR ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7815845824411135, "obj2": 0.11047962685475811}, {"determining": "( ( AMS - MDR ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7837259100642399, "obj2": 0.10950303810610214}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ) ) ) ) - Min( Max( FirstVNF_RAM,AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( Min( MUC ,( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( RMSe / MUC ) )", "obj1": 0.9700214132762313, "obj2": 0.014815895324336494}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.017361312085003255}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( RMSe * MUC ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.017361312085003255}, {"determining": "( ( Const / ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.017939174670675084}, {"determining": "( Min( ( FirstVNF_Mem * ACS ) ,Max( FirstVNF_RAM,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem / DDR ) - AMS ) )", "choosing": "( ( Max( RCSe,RRSe ) + Max( ( ( ( ( Min( MUC ,MLU ) / Max( MUR,CS ) ) - MUR ) / ( DS * DS ) ) + MUM ),( RRSe - ( RCSe - ( MUM * MUM ) ) ) ) ) - ( ( MUC + ( ( MLU - DS ) + MUC ) ) * DS ) )", "obj1": 0.7494646680942184, "obj2": 0.13107027246525454}, {"determining": "( ( Const / ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.017939174670675084}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - MUM ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12882476625951725}, {"determining": "( ( ( DDR / AMS ) - MDR ) - ( Max( MRS,BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( ( MUM - MUR ) / RMSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051116097080947595}, {"determining": "( ( ( FirstVNF_CPU_Server - AMS ) - ( Max( PN,FirstVNF_CPU ) * ( FirstVNF_Mem - Max( BR,DDR ) ) ) ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( Min( ( RRSe - Min( RMSe ,( MLU + DS ) ) ) ,RRSe ) - MUM ) / MUC ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( MLU * RCSe ) ) - ( Min( MUM ,CS ) + ( RMSe * MUR ) ) ) - Min( MUC ,CS ) ) + RMSe ),Max( ( ( DS / ( ( DS + RRSe ) - MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.007068513165162922}, {"determining": "( ( ( ( PN - MDR ) + ( BR * AMS ) ) / Max( Max( ARS,Const ),( FirstVNF_Mem_Server * CRS ) ) ) * ( FirstVNF_CPU_Server * ACS ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( ( MUM - ( DS + ( RMSe + MUM ) ) ) ,MLU ) ) ) / RRSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( BR + ( ( PN * FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * DDR ) ) ) - ( FirstVNF_RAM_Server / ( RRS * BR ) ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe + RRSe ) ),( ( ( CS * RCSe ) / MUR ) - MLU ) ) ) - Max( RRSe,RRSe ) ) - ( ( ( DS * Min( DS ,( RRSe / ( MLU + MUC ) ) ) ) / MUR ) / ( Min( ( RRSe / ( RMSe + CS ) ) ,RCSe ) + CS ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Const )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,RRSe ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ACS ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( Max( MUR,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.9036402569593148, "obj2": 0.048130378342485486}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / ( Max( MUM,( Min( MLU ,( MUR / RMSe ) ) + RRSe ) ) + RCSe ) ) / Max( RCSe,CS ) ) - ( Min( MUC ,MUR ) + ( ( ( ( ( DS / CS ) + MUM ) * ( MUC * Max( RCSe,( DS / MUM ) ) ) ) + MUC ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( Const / ( FirstVNF_RAM + ( Min( Max( ACS,BR ) ,( PN + CRS ) ) - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( CS / CS ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004712342110108615}, {"determining": "( ( Const / ( FirstVNF_RAM + ( ( ( RRS / BR ) - ( AMS - MDR ) ) - ( ( Min( Max( Const,DDR ) ,( FirstVNF_Mem / ARS ) ) * MDR ) / ( RRS - ( ARS / RRS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( ( ( RRSe - ( RMSe + MUM ) ) * Max( CS,MUM ) ) + ( RRSe + CS ) )", "obj1": 0.9721627408993576, "obj2": 0.013424654620831549}, {"determining": "( ( AMS - MDR ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( Min( RMSe ,MUR ) + ( Max( RMSe,MUR ) / RRSe ) ) )", "obj1": 0.7815845824411135, "obj2": 0.11047962685475811}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Min( Const ,AMS ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),CS ) )", "obj1": 0.9036402569593148, "obj2": 0.048130378342485486}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7494646680942184, "obj2": 0.13107027246525454}, {"determining": "( ( Const / ( FirstVNF_RAM + ( ( ( RRS / BR ) - ( AMS - MDR ) ) - ( ( Min( Max( Const,DDR ) ,( FirstVNF_Mem / ARS ) ) * MDR ) / ( RRS - ( ARS / RRS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + ( Min( Max( ( MUC + MUM ),Min( ( MUC + MLU ) ,MUC ) ) ,( Max( MLU,Max( CS,Min( Min( MUC ,CS ) ,MUM ) ) ) / ( ( RRSe * CS ) - ( CS - MUM ) ) ) ) * MLU ) )", "obj1": 0.9721627408993576, "obj2": 0.013424654620831549}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - DDR )", "choosing": "( ( CS / ( CS - ( DS * Min( DS ,( Min( Min( MUR ,RCSe ) ,Min( MUR ,RMSe ) ) * ( ( CS * RMSe ) - ( DS / DS ) ) ) ) ) ) ) + ( RRSe + MLU ) )", "obj1": 0.9828693790149893, "obj2": 0.008762676005794364}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( Min( RMSe ,MUR ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10950303810610214}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) - ( BR * BR ) ) + MRS ) + ( FirstVNF_RAM + Min( CRS ,( DDR - ACS ) ) ) ) ) + AMS ) - MDR ) - ( Max( MRS,BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,Min( RCSe ,DS ) ) ) + ( ( MUM - MUR ) / RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051116097080947595}, {"determining": "( ( MRS + RRS ) - Max( AMS,MDR ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MUC ) * MLU ) ),RRSe ) ),( Min( RRSe ,MUR ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004712342110108615}, {"determining": "( ( ( Max( PN,FirstVNF_CPU ) * Max( FirstVNF_Mem,ACS ) ) - MDR ) - ( FirstVNF_Mem - MRS ) )", "choosing": "( ( ( DS * MUM ) * Min( MUC ,MUM ) ) / Min( MUC ,( DS * ( RRSe * RRSe ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.007068513165162922}], "10": [{"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( DDR + ( DDR * ( ARS - ARS ) ) ) - ( ( ACS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RCSe / MUM ) * Max( MUC,RRSe ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.2707742099583752}, {"determining": "( ( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Min( CRS ,FirstVNF_CPU_Server ) ) * DDR ) - RRS ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,DDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( Min( RRSe ,MLU ) * MLU ) ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6702355460385439, "obj2": 0.2707742099583752}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( ( MUM / RRSe ),Min( RCSe ,MUM ) )", "obj1": 0.7301927194860813, "obj2": 0.1530226939830267}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.20967376938129284}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * ( ( ACS - PN ) / CRS ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,CS ) )", "obj1": 0.8179871520342612, "obj2": 0.092561584772987}, {"determining": "Max( ( ( ( FirstVNF_Mem + MDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2698673624942943}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) - Max( Max( MRS,DDR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( CS / RRSe ) )", "obj1": 0.8501070663811563, "obj2": 0.07518627480368707}, {"determining": "( ( ( ARS - MDR ) - ( MDR * MDR ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),( MUM / ( DS / MUR ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03806614096313133}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( PN - PN ) / ( ACS - DDR ) ) ,( FirstVNF_RAM / AMS ) ) ),( ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( MUC + CS ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.24857806303828764}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7687366167023555, "obj2": 0.11505920140957938}, {"determining": "Max( ( ( FirstVNF_CPU - MRS ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - ARS ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * Max( Min( ( DS / ( ( RMSe + ( CS - MUR ) ) + Min( ( MUC / MUM ) ,MLU ) ) ) ,RRSe ),( RCSe * ( ( ( RCSe * ( MUC + MLU ) ) - CS ) * DS ) ) ) ) + ( RRSe + CS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( AMS * PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS - ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / ( Max( DS,MLU ) / Max( ( RRSe - ( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7644539614561028, "obj2": 0.1201816298896912}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( Min( DDR ,AMS ) - AMS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - CS ) / RMSe ) - MUR ) / MUM ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RMSe ) ) ) ) - Max( Min( Min( RRSe ,CS ) ,MUM ),RRSe ) )", "obj1": 0.9421841541755889, "obj2": 0.029727938984634897}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe + RRSe ) ),( ( ( CS * RCSe ) / MUR ) - MLU ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.9571734475374732, "obj2": 0.020972203709690596}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Min( Const ,AMS ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),CS ) )", "obj1": 0.8029978586723768, "obj2": 0.09847826435109795}, {"determining": "( ( AMS - MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) * RRS ),FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( Max( MUR,CS ) + DS ),( Min( ( MUM + MUM ) ,Min( CS ,DS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.13159541010164097}, {"determining": "( ( AMS - MDR ) - Max( Max( MRS,BR ),( MDR / ( Max( PN,FirstVNF_CPU ) * Max( FirstVNF_Mem,ACS ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - Min( MUC ,( DS * ( RRSe * RRSe ) ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8886509635974305, "obj2": 0.05749371054859514}, {"determining": "( ( AMS - MDR ) - Max( Max( Min( ( BR - Const ) ,Const ),BR ),( ACS / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( RMSe,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),( MUC / Max( MLU,( Max( Min( ( MUC - MUC ) ,Max( RCSe,MLU ) ),RMSe ) + CS ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.24027900917809483}, {"determining": "( ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) * ( BR + PN ) ) ) ) / ( ARS - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( Max( Min( CS ,MLU ),RCSe ) / ( RCSe * ( ( ( Max( ( MUM * RMSe ),Max( RRSe,RRSe ) ) - MUM ) + MUR ) / CS ) ) ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),( ( MLU - MUR ) - ( MLU + RRSe ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.21461479377738069}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "Max( ( MUM / RRSe ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11183731191290418}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9057815845824411, "obj2": 0.046365743576247176}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( Max( RMSe,( MLU * RMSe ) ) - ( RMSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8244111349036403, "obj2": 0.0884336165862528}, {"determining": "( ( Min( ( AMS - MDR ) ,( Const * AMS ) ) + MRS ) - ( AMS - ( FirstVNF_Mem_Server * ( RRS / Min( MRS ,Max( ( FirstVNF_CPU_Server / ARS ),( CRS - DDR ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( Max( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ),MUM ) / RRSe ) ) + ( ( MUM - MUR ) / Max( MLU,Max( ( ( MUM - ( Max( RRSe,RRSe ) * Min( MUC ,RMSe ) ) ) + ( MUC * RCSe ) ),DS ) ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( RCSe ,MUM ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07863092146975731}, {"determining": "( ( AMS - MDR ) - ( Min( ( Min( PN ,ACS ) / FirstVNF_Mem ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( Max( ( Max( MUR,MLU ) + ( ( DS + ( CS * RRSe ) ) * ( ( Min( RMSe ,MUC ) + ( DS * MUM ) ) - ( RCSe / MUR ) ) ) ),( MUC / ( RRSe / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12863481870194657}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / ( FirstVNF_CPU_Server / MDR ) ) * Max( Min( MDR ,AMS ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( Min( ( ( MUM + DS ) + ( RRSe - ( RCSe - RRSe ) ) ) ,Min( DS ,DS ) ) + ( RCSe / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23028187167731257}, {"determining": "( ( Min( ( PN / FirstVNF_Mem ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RMSe - MUC ) / RCSe ) / Max( RRSe,( ( MUR + RCSe ) * ( Min( RRSe ,Min( ( RCSe + MUC ) ,CS ) ) * MLU ) ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10064515272465303}, {"determining": "( ( AMS - MDR ) - Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( DS / MUR ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.974304068522484, "obj2": 0.011276899937040768}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RMSe ) ) ) ) - Max( Min( Min( RRSe ,CS ) ,MUM ),RRSe ) )", "obj1": 0.9486081370449678, "obj2": 0.026490642616066377}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04300558680683754}, {"determining": "( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( Min( Max( ( FirstVNF_CPU_Server + ( ARS - MDR ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( MRS,BR ) )", "choosing": "( Max( ( ( DS * DS ) + ( DS / RCSe ) ),MUR ) + ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7044967880085653, "obj2": 0.22714552781171177}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( ( ( FirstVNF_CPU - DDR ) / ACS ) * ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( RMSe / ( RMSe - RCSe ) ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( ( MUM - RCSe ) - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.9486081370449678, "obj2": 0.026490642616066377}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.12588856809559743}, {"determining": "( ( ( MRS + DDR ) - ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( DDR / CRS ) / Const ) ) ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( FirstVNF_CPU / ( MRS + MDR ) ) ) ) )", "choosing": "( ( ( RCSe * ( MUC / RCSe ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( ( Max( Min( ( RRSe - DS ) ,MUM ),( Max( RCSe,( MUC / MLU ) ) / MUC ) ) * RMSe ) * RRSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS * PN ) ) * Min( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,AMS ) + MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( AMS - MDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2523023165917158}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - RRSe ) * Max( MUM,CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07785346820303317}, {"determining": "( ( Min( ( AMS - Const ) ,( AMS * FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( RRS / ACS ) ) * MDR ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( MUR ,RRSe ) ) * MLU ) ),RRSe ) ),( Max( ( MUR - CS ),CS ) / DS ) )", "obj1": 0.8950749464668094, "obj2": 0.05523268585693196}, {"determining": "( ( Const / ( ( AMS - MDR ) - ( AMS * MDR ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / Min( DS ,DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( ( ( MLU / DS ) + ( RCSe / ( ( ( ( RMSe / MUC ) / ( MUM - MUR ) ) / DS ) - CS ) ) ),RRSe ) )", "obj1": 0.7880085653104925, "obj2": 0.10901450333215103}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8244111349036403, "obj2": 0.0884336165862528}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( BR + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Min( Max( MLU,( ( RCSe - MUC ) + Min( DS ,DS ) ) ) ,( ( Max( MUR,CS ) / RMSe ) - Min( ( MUM - DS ) ,RMSe ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035546910873848724}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * Max( Max( ( FirstVNF_CPU_Server / BR ),AMS ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,RMSe ) + ( MLU / RRSe ) ) - DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7580299785867237, "obj2": 0.1270956512817469}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.8586723768736617, "obj2": 0.07254554467252955}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN - FirstVNF_Mem ) ) - ( FirstVNF_CPU * ( MDR - CRS ) ) )", "choosing": "( Max( ( ( DS / RRSe ) / MUM ),MUM ) + ( MLU / Max( ( ( ( RMSe - RCSe ) / RCSe ) + RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,CS ) ) ),RRSe ) ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( ( MRS + DDR ) - ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / RCSe ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( MDR * AMS ) ) - ( ACS + ( DDR / Const ) ) )", "choosing": "( Min( MUM ,( ( RRSe - ( Max( MUR,( ( RCSe * RCSe ) - ( DS / RMSe ) ) ) + MLU ) ) + RRSe ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.8629550321199143, "obj2": 0.07072645308040224}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) - Max( ( MRS / BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Max( Max( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ),Min( RCSe ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) - ( Max( RCSe,( MUC / Max( MLU,MUM ) ) ) / ( MUM / DS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.20967376938129284}, {"determining": "( ( ( DDR / AMS ) - MDR ) - ( ( ARS - FirstVNF_CPU ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( ( MUM - MUR ) / ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011662372799800611}, {"determining": "( Const * ( AMS * ( FirstVNF_Mem * ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUR / MLU ) / CS ) / RMSe ) - MUR ) + ( MUM / DS ) ) + DS ),( ( RCSe - RRSe ) - RRSe ) ) + ( ( DS * MUM ) * ( MUC + MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.21563736371911155}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.23652666387745647}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( ( MLU + ( RMSe / MUM ) ),MLU ) - DS ) ),( Max( MUR,MUC ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035546910873848724}, {"determining": "( ( ( Max( RRS,( ( AMS - MDR ) - DDR ) ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.049208825494954894}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( ( ( FirstVNF_RAM_Server * DDR ) - RRS ) * MDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) ) ) )", "choosing": "( Min( MUM ,( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) - Max( Min( Min( RRSe ,CS ) ,MUM ),RRSe ) )", "obj1": 0.9678800856531049, "obj2": 0.016585289719231438}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Min( Const ,AMS ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),CS ) )", "obj1": 0.8029978586723768, "obj2": 0.09847826435109795}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( BR / BR ) ) )", "choosing": "( ( ( MUR - DS ) * Max( ( MUC / ( RCSe - MLU ) ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) - ( MDR * MDR ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9143468950749465, "obj2": 0.0427261741305663}, {"determining": "( ( ( DDR * CRS ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_Mem ,Const ) + ( ( Const / AMS ) / Max( Max( CRS,MDR ),( MRS / ARS ) ) ) ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),( DS * ( ( ( Max( RMSe,MUR ) / RMSe ) - MUM ) / ( ( MUR - MLU ) / Min( ( RRSe - MUC ) ,( MUM / ( MUR + RRSe ) ) ) ) ) ) ) + ( ( ( CS / RMSe ) * MUR ) / ( DS * MUM ) ) )", "obj1": 0.6937901498929336, "obj2": 0.23825405563170293}, {"determining": "( ( Min( ( AMS - Const ) ,( AMS * FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( RRS / ACS ) ) * MDR ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( MUR ,RRSe ) ) * MLU ) ),RRSe ) ),( Max( ( MUR - CS ),CS ) / DS ) )", "obj1": 0.8950749464668094, "obj2": 0.05523268585693196}, {"determining": "( ( Min( ( AMS - Const ) ,( AMS * FirstVNF_CPU ) ) - ( ( FirstVNF_Mem + ( RRS / ACS ) ) * MDR ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( MUR ,RRSe ) ) * MLU ) ),RRSe ) ),( Max( ( MUR - CS ),CS ) / DS ) )", "obj1": 0.9143468950749465, "obj2": 0.0427261741305663}, {"determining": "( ( ( Max( RRS,( ( AMS - MDR ) - DDR ) ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.049208825494954894}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.8586723768736617, "obj2": 0.07254554467252955}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / ( Max( MUM,( Min( MLU ,( MUR / RMSe ) ) + RRSe ) ) + RCSe ) ) / Max( RCSe,CS ) ) - ( Min( MUC ,MUR ) + ( ( ( ( ( DS / CS ) + MUM ) * ( MUC * Max( RCSe,( DS / MUM ) ) ) ) + MUC ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( Min( ( FirstVNF_Mem * ACS ) ,Max( FirstVNF_RAM,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem / DDR ) - AMS ) )", "choosing": "( ( Max( RCSe,RRSe ) + Max( ( ( ( ( Min( MUC ,MLU ) / Max( MUR,CS ) ) - MUR ) / ( DS * DS ) ) + MUM ),( RRSe - ( RCSe - ( MUM * MUM ) ) ) ) ) - ( ( MUC + ( ( MLU - DS ) + MUC ) ) * DS ) )", "obj1": 0.7494646680942184, "obj2": 0.13107027246525454}, {"determining": "Max( ( ( Min( MRS ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * ( ( CRS - MRS ) + ACS ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( ( Max( RCSe,MUM ) * MLU ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( ( ( ( CS * RMSe ) - ( MLU / DS ) ) / Max( RCSe,RCSe ) ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.6873661670235546, "obj2": 0.24027900917809483}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU + ( ( ARS - FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( RCSe,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( ( MUR * ( Min( RMSe ,DS ) / MUR ) ),RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / ( AMS * MDR ) ) - ( FirstVNF_CPU + Const ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( ( ( MUR / Min( MUC ,( RMSe + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,( RRSe - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.8629550321199143, "obj2": 0.07072645308040224}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( AMS - MDR ) - ( Min( ( DDR + ( ARS / MDR ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( Max( MUC,RRSe ) * ( RCSe / MUM ) ) - Max( Min( ( ( ( Max( MUC,( MLU * CS ) ) * DS ) * Max( RMSe,MLU ) ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7815845824411135, "obj2": 0.1102616095141616}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,DDR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ) / RRSe ) )", "obj1": 0.9828693790149893, "obj2": 0.008762676005794364}, {"determining": "( ( BR + ( ( PN * FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * DDR ) ) ) - ( FirstVNF_RAM_Server / ( RRS * BR ) ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe + RRSe ) ),( ( ( CS * RCSe ) / MUR ) - MLU ) ) ) - Max( RRSe,RRSe ) ) - ( ( ( DS * Min( DS ,( RRSe / ( MLU + MUC ) ) ) ) / MUR ) / ( Min( ( RRSe / ( RMSe + CS ) ) ,RCSe ) + CS ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( Max( ( RRS + ARS ),( FirstVNF_RAM + ( DDR * ( FirstVNF_Mem_Server * ( DDR * ( ( DDR / PN ) / ( PN + MDR ) ) ) ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Max( ( RCSe - ( MUC / RCSe ) ),MUM ) + ( MLU / Max( ( ( ( DS + RCSe ) / MUR ) - RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.1111191224843405}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * ( Max( ( DDR / FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) / DS ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( ( ACS - FirstVNF_Mem_Server ) - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MLU ) / RCSe ),Max( ( ( RCSe + Min( ( RRSe - Max( CS,MUM ) ) ,RCSe ) ) * ( Min( RRSe ,Min( ( RMSe - MUC ) ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.020000049163248237}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( MDR + PN ) ) * FirstVNF_CPU ),( MRS / RRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( ( CS / ( ( DS - CS ) * ( MUC + CS ) ) ) / MUR ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( Min( Max( AMS,MDR ) ,( AMS * FirstVNF_CPU ) ) + ( ( ACS + Min( FirstVNF_Mem ,FirstVNF_Mem ) ) - RRS ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( Max( Min( ( RCSe * CS ) ,RCSe ),RMSe ) + RCSe ) - ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10064515272465303}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - RRSe ) * Max( MUM,CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07785346820303317}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe - ( RMSe + MUM ) ) * Max( CS,MUM ) ) + ( RRSe + CS ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( Const / ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / Min( FirstVNF_RAM_Server ,BR ) ) + ( ACS - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( Max( ( ( ( ( ( MUM * MUC ) + MLU ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MUM ) - ( ( ( ( MUR + CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01793917467067508}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( MUR + DS ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ( ( MRS - AMS ) * ( AMS * PN ) ) ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.7858672376873662, "obj2": 0.10923376307031561}, {"determining": "( ( Const / ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01793917467067508}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * AMS ) ) - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( ( RMSe - MUC ) ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.020000049163248237}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ACS ) ,RRS ) * FirstVNF_CPU ) ),( FirstVNF_CPU_Server * CRS ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),( RCSe / ( ( ( ( RMSe / MUC ) / ( MUM - MUR ) ) / DS ) - CS ) ) ) + ( ( ( ( ( ( Max( MUR,RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) / RMSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.6937901498929336, "obj2": 0.23825405563170293}, {"determining": "( ( BR + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) ) ) ) - DDR )", "choosing": "Min( ( MUR + MLU ) ,( MLU - ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( RRSe - ( RCSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ACS ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( Max( MUR,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.9036402569593148, "obj2": 0.048130378342485486}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.23652666387745647}, {"determining": "( ( Max( ( DDR / FirstVNF_RAM_Server ),( FirstVNF_RAM / FirstVNF_CPU ) ) / ( ( BR + RRS ) / ( DDR / MDR ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUM / ( Max( Max( MLU,Max( CS,MLU ) ),Min( RCSe ,( MUC / CS ) ) ) / MUR ) ),MUM ) + ( MLU / Max( ( RMSe + ( ( ( RMSe - ( DS - RRSe ) ) - ( Min( MUM ,MUC ) + ( RMSe * MUR ) ) ) / MUR ) ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( RCSe,MUM ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05691804778845452}, {"determining": "( ( Const / ( FirstVNF_RAM + ( Min( Max( ACS,BR ) ,( PN + CRS ) ) - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( CS / CS ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004712342110108615}, {"determining": "( Max( ACS,PN ) - ( ( FirstVNF_RAM_Server / AMS ) - MDR ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * ( DS * MUC ) ) ) + ( MLU / CS ) ),( ( ( Max( RCSe,MUM ) * MLU ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( ( Max( RCSe,MUR ) / ( ( CS * RMSe ) - ( MLU / DS ) ) ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.9892933618843683, "obj2": 0.0051116097080947595}], "11": [{"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( Max( Const,DDR ) ,( ( ACS * ( FirstVNF_RAM_Server * ARS ) ) / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( MDR - DDR ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( ( ( ( CS / ( MUR + Max( RCSe,RMSe ) ) ) + DS ) * Max( RCSe,RMSe ) ) - ( Min( ( ( ( RCSe * DS ) - Min( MUM ,RMSe ) ) - ( Min( RMSe ,MUC ) * Min( CS ,MUM ) ) ) ,MUR ) / RMSe ) ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( ( MUM / RRSe ),Min( RCSe ,MUM ) )", "obj1": 0.7301927194860813, "obj2": 0.1530226939830267}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.20967376938129284}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "( ( ( ARS - MDR ) - ( MDR * MDR ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),( MUM / ( DS / MUR ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03806614096313133}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( Min( ( AMS - MDR ) ,( ( ( Min( ( AMS - MDR ) ,( FirstVNF_RAM_Server - BR ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) * CRS ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),( Max( RRSe,Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( RCSe + RMSe ) ) * ( Min( RRSe ,MLU ) * CS ) ),RRSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8907922912205567, "obj2": 0.054993030650166294}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.815845824411135, "obj2": 0.09369299650996485}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ) ) ) - ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( AMS * PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS - ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / ( Max( DS,MLU ) / Max( ( RRSe - ( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7644539614561028, "obj2": 0.1201816298896912}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9057815845824411, "obj2": 0.046365743576247176}, {"determining": "( ( AMS - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "Max( ( ( Min( MRS ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * ( ( CRS - MRS ) + ACS ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( ( Max( RCSe,MUM ) * MLU ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( ( ( ( CS * RMSe ) - ( MLU / DS ) ) / Max( RCSe,RCSe ) ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.6873661670235546, "obj2": 0.24027900917809483}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Min( MDR ,AMS ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( Max( Min( ( RCSe * CS ) ,RCSe ),RMSe ) + RCSe ) - ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7109207708779444, "obj2": 0.2220763220230718}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ( ( MRS - AMS ) * ( MDR - AMS ) ) ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05808437730861842}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Min( Const ,AMS ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( RMSe / ( RMSe - RCSe ) ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( ( MUM - RCSe ) - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09847826435109795}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( RMSe - MUC ) )", "obj1": 0.9507494646680942, "obj2": 0.0260776966529762}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem_Server ,PN ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / MLU ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09211755193424949}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( PN - PN ) / ( ACS - DDR ) ) ,( FirstVNF_RAM / AMS ) ) ),( ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( MUC + CS ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.24857806303828764}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8244111349036403, "obj2": 0.0884336165862528}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( MUC - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( ( ( RCSe / MLU ) * ( MUR + CS ) ) * Max( Min( Max( RMSe,( CS / RCSe ) ) ,RRSe ),RRSe ) ) ) * Max( MLU,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - MDR )", "choosing": "Max( Max( ( ( RMSe - ( RRSe + CS ) ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07727058166034642}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( RCSe ,MUM ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07863092146975731}, {"determining": "( ( MDR / AMS ) - ( Min( Min( DDR ,AMS ) ,Max( ( FirstVNF_RAM - FirstVNF_CPU ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "Min( Max( MLU,( ( RCSe - MUC ) + Min( DS ,DS ) ) ) ,( ( Min( MLU ,Max( RRSe,( CS - MLU ) ) ) / RMSe ) - Min( ( MUM - DS ) ,RMSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11505654934536826}, {"determining": "( ( Min( ( PN / FirstVNF_Mem ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "Max( ( ( ( RMSe - MUC ) / RCSe ) / Max( RRSe,( ( MUR + RCSe ) * ( Min( RRSe ,Min( ( RCSe + MUC ) ,CS ) ) * MLU ) ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10064515272465303}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9014989293361885, "obj2": 0.048081993796259305}, {"determining": "( ( Const - ( Min( Max( ( FirstVNF_CPU_Server + ( ARS - MDR ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - Min( MRS ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.9421841541755889, "obj2": 0.02827780716707184}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( ( MLU + ( RMSe / MUM ) ),MLU ) - DS ) ),( Max( MUR,MUC ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9014989293361885, "obj2": 0.048081993796259305}, {"determining": "( Min( Max( Const,DDR ) ,FirstVNF_RAM ) - Max( FirstVNF_RAM,MRS ) )", "choosing": "( Min( MUM ,Max( ( RRSe * DS ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( ( Min( Min( RMSe ,RRSe ) ,DS ) * ( Min( RMSe ,DS ) / MUR ) ),RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.06071197599438113}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7708779443254818, "obj2": 0.11426194865883806}, {"determining": "( ( ( Max( AMS,( RRS + FirstVNF_Mem_Server ) ) + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) / ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( Max( RMSe,( MLU * RCSe ) ) - Min( RMSe ,RCSe ) ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( RMSe / ( RMSe - RCSe ) ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( ( MUM - RCSe ) - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Min( ( AMS - MDR ) ,( AMS * AMS ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( ( RMSe - MUC ) ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10843270120790667}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.12588856809559743}, {"determining": "Max( ( ( FirstVNF_CPU - MRS ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - ARS ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * Max( Min( ( DS / ( ( RMSe + ( CS - MUR ) ) + Min( ( MUC / MUM ) ,MLU ) ) ) ,RRSe ),( RCSe * ( ( ( RCSe * ( MUC + MLU ) ) - CS ) * DS ) ) ) ) + ( RRSe + CS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) - Max( Max( MRS,DDR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( MUR ,RRSe ) ) * MLU ) ),RRSe ) ),( Max( ( MUR - CS ),CS ) / DS ) )", "obj1": 0.8501070663811563, "obj2": 0.07518627480368707}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - MDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.0884336165862528}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( Max( MLU,CS ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9400428265524625, "obj2": 0.029893546853174125}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.8586723768736617, "obj2": 0.07254554467252955}, {"determining": "( ( Min( ( AMS - MDR ) ,( Const * AMS ) ) + MRS ) - ( AMS - ( FirstVNF_Mem_Server * ( RRS / Min( MRS ,Max( ( FirstVNF_CPU_Server / ARS ),( CRS - DDR ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( Max( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ),MUM ) / RRSe ) ) + ( ( MUM - MUR ) / Max( MLU,Max( ( ( MUM - ( Max( RRSe,RRSe ) * Min( MUC ,RMSe ) ) ) + ( MUC * RCSe ) ),DS ) ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( MUC - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7880085653104925, "obj2": 0.1042585415718559}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( MDR * AMS ) ) - ( ACS + ( DDR / Const ) ) )", "choosing": "( Min( MUM ,( ( RRSe - ( Max( MUR,( ( RCSe * RCSe ) - ( DS / RMSe ) ) ) + MLU ) ) + RRSe ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.8629550321199143, "obj2": 0.07072645308040224}, {"determining": "( ( AMS - MDR ) - Max( Max( Min( ( BR - Const ) ,Const ),BR ),( ACS / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( RMSe,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),( MUC / Max( MLU,( Max( Min( ( MUC - MUC ) ,Max( RCSe,MLU ) ),RMSe ) + CS ) ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) * ( BR + PN ) ) ) ) / ( ARS - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( Max( Min( CS ,MLU ),RCSe ) / ( RCSe * ( ( ( Max( ( MUM * RMSe ),Max( RRSe,RRSe ) ) - MUM ) + MUR ) / CS ) ) ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),( ( MLU - MUR ) - ( MLU + RRSe ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.21461479377738069}, {"determining": "( ( ( ( MRS / Const ) / FirstVNF_CPU_Server ) * BR ) / ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) / RRSe ) * Max( RCSe,CS ) ) - ( ( ( MUR / Min( MUC ,( RRSe + DS ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ) / RRSe ) )", "obj1": 0.7259100642398287, "obj2": 0.20967376938129284}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - ( ( PN - CRS ) + ( BR * AMS ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.8886509635974305, "obj2": 0.05619537987951128}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.23652666387745647}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23028187167731257}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / ( Max( MUM,( Min( MLU ,( MUR / RMSe ) ) + RRSe ) ) + RCSe ) ) / Max( RCSe,CS ) ) - ( Min( MUC ,MUR ) + ( ( ( ( ( DS / CS ) + MUM ) * ( MUC * Max( RCSe,( DS / MUM ) ) ) ) + MUC ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( Const * ( AMS * ( FirstVNF_Mem * ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUR / MLU ) / CS ) / RMSe ) - MUR ) + ( MUM / DS ) ) + DS ),( ( RCSe - RRSe ) - RRSe ) ) + ( ( DS * MUM ) * ( MUC + MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.21563736371911155}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( MRS,BR ) )", "choosing": "( Max( ( ( DS * DS ) + ( DS / RCSe ) ),MUR ) + ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7044967880085653, "obj2": 0.22714552781171177}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - RRSe ) * Max( MUM,CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07785346820303317}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( AMS - MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) * RRS ),FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( Max( MUR,CS ) + DS ),( Min( ( MUM + MUM ) ,Min( CS ,DS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.13159541010164097}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( AMS * MDR ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.24857806303828764}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) - ( MDR * MDR ) ) - DDR )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( ( MUC + MLU ),MLU ) - DS ) ),( Max( RRSe,MUC ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9143468950749465, "obj2": 0.0427261741305663}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( Min( Max( ( FirstVNF_CPU_Server + ( ARS - MDR ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( ( ( FirstVNF_RAM_Server * DDR ) - RRS ) * MDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) ) ) )", "choosing": "( Min( MUM ,( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) - Max( Min( Min( RRSe ,CS ) ,MUM ),RRSe ) )", "obj1": 0.9678800856531049, "obj2": 0.016585289719231438}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( ( Max( RCSe,( MUC / RCSe ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9571734475374732, "obj2": 0.020972203709690596}, {"determining": "( ( ( DDR * CRS ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_Mem ,Const ) + ( ( Const / AMS ) / Max( Max( CRS,MDR ),( MRS / ARS ) ) ) ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),( DS * ( ( ( Max( RMSe,MUR ) / RMSe ) - MUM ) / ( ( MUR - MLU ) / Min( ( RRSe - MUC ) ,( MUM / ( MUR + RRSe ) ) ) ) ) ) ) + ( ( ( CS / RMSe ) * MUR ) / ( DS * MUM ) ) )", "obj1": 0.6937901498929336, "obj2": 0.23825405563170293}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.13159541010164097}, {"determining": "( Max( RRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem_Server ) ) - ( ( ARS + FirstVNF_Mem_Server ) * ( ARS - ( FirstVNF_CPU / ( Min( Max( ACS,BR ) ,Max( RRS,MDR ) ) + MRS ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MLU ) - Max( Min( ( ( ( MUC * MUR ) + CS ) * Min( ( DS / Max( CS,( MUM * RMSe ) ) ) ,CS ) ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * ( ( ACS - PN ) / ( FirstVNF_CPU + ( ARS - FirstVNF_CPU_Server ) ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * ( RMSe + MUM ) ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( RRSe,CS ) )", "obj1": 0.7537473233404711, "obj2": 0.1282076842004663}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Min( Const ,AMS ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),CS ) )", "obj1": 0.8029978586723768, "obj2": 0.09847826435109795}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) - ( MDR * MDR ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9143468950749465, "obj2": 0.0427261741305663}, {"determining": "( ( AMS - MDR ) - ( Min( ( Min( PN ,ACS ) / FirstVNF_Mem ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( Max( ( Max( MUR,MLU ) + ( ( DS + ( CS * RRSe ) ) * ( ( Min( RMSe ,MUC ) + ( DS * MUM ) ) - ( RCSe / MUR ) ) ) ),( MUC / ( RRSe / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12863481870194657}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe + RRSe ) ),( ( ( CS * RCSe ) / MUR ) - MLU ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.9571734475374732, "obj2": 0.020972203709690596}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( CS / CS ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8586723768736617, "obj2": 0.07254554467252955}, {"determining": "( Min( ( FirstVNF_Mem * ACS ) ,Max( FirstVNF_RAM,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem / DDR ) - AMS ) )", "choosing": "( ( Max( RCSe,RRSe ) + Max( ( ( ( ( Min( MUC ,MLU ) / Max( MUR,CS ) ) - MUR ) / ( DS * DS ) ) + MUM ),( RRSe - ( RCSe - ( MUM * MUM ) ) ) ) ) - ( ( MUC + ( ( MLU - DS ) + MUC ) ) * DS ) )", "obj1": 0.7494646680942184, "obj2": 0.13107027246525454}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "Max( ( MUM / RRSe ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11183731191290418}, {"determining": "( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( Min( Max( ( FirstVNF_CPU_Server + ( ARS - MDR ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,( ( ( PN - CRS ) + ( BR * AMS ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) ) ) * MDR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( ( ( Max( MUR,MUR ) / RMSe ) - MUR ) / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Const / ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( MDR * AMS ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004243981567667423}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - AMS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RMSe ) ) ) ) - Max( Min( Min( RRSe ,CS ) ,MUM ),RRSe ) )", "obj1": 0.9486081370449678, "obj2": 0.026490642616066377}, {"determining": "( ( Const / ( ( ( Const * MRS ) - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) + ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) + ( DDR - MDR ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( RCSe ,( ( RRSe - ( Max( MUR,( ( RCSe * RCSe ) - ( DS / RMSe ) ) ) + MLU ) ) + RRSe ) ) - ( RMSe - ( MUR / MUR ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01793917467067508}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - FirstVNF_CPU )", "choosing": "( Max( ( MUM / ( DS / RRSe ) ),MUM ) + ( ( MUM - MUR ) / ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS * PN ) ) * Min( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,AMS ) + MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( AMS - MDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2523023165917158}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.24027900917809483}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04300558680683754}, {"determining": "( ( Const / ( FirstVNF_RAM + ( Min( Max( ACS,BR ) ,( PN + CRS ) ) - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ) ) ) ) - FirstVNF_CPU )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( ( MUC + ( DS / RCSe ) ) / CS ) ) ) - Max( Min( ( ( ( ( ( RMSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,Min( Max( ( FirstVNF_CPU_Server + ( ARS - MDR ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ),( FirstVNF_CPU_Server * CRS ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( Max( MUR,CS ) / RMSe ) - MUR ) )", "obj1": 0.702355460385439, "obj2": 0.2281009637435136}, {"determining": "( ( AMS - MDR ) - Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( DS / MUR ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.974304068522484, "obj2": 0.011276899937040768}, {"determining": "( ( ( Max( Const,RRS ) / Max( ( MDR * PN ),( Const - PN ) ) ) - Max( Max( MRS,( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( Max( MRS,MDR ) / FirstVNF_CPU ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,DDR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( CS / MLU ) ) - ( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,( Max( MUR,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) ) ) / RRSe ) )", "obj1": 0.9935760171306209, "obj2": 0.002872248368158595}, {"determining": "( ( AMS - MDR ) - ( Const - ( DDR + PN ) ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * ( DS * MUC ) ) ) + ( MLU / CS ) ),( ( Max( RRSe,MUM ) + MUC ) * Min( MUM ,( RCSe / CS ) ) ) ) ) * Max( ( Max( RCSe,MUR ) / ( ( CS * RMSe ) - ( MLU / DS ) ) ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.974304068522484, "obj2": 0.011276899937040768}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ( ( MRS - AMS ) * ( AMS * PN ) ) ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.7837259100642399, "obj2": 0.11007372665546163}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / ( AMS * MDR ) ) - ( FirstVNF_CPU + Const ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( ( ( MUR / Min( MUC ,( RMSe + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,( RRSe - RMSe ) ) ) ) / RRSe ) )", "obj1": 0.8629550321199143, "obj2": 0.07072645308040224}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.9122055674518201, "obj2": 0.04300558680683754}, {"determining": "( Max( ( RRS + ARS ),( FirstVNF_RAM + ( DDR * ( FirstVNF_Mem_Server * ( DDR * ( ( DDR / PN ) / ( PN + MDR ) ) ) ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Max( ( RCSe - ( MUC / RCSe ) ),MUM ) + ( MLU / Max( ( ( ( DS + RCSe ) / MUR ) - RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.1111191224843405}, {"determining": "( ( Const / ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / Min( FirstVNF_RAM_Server ,BR ) ) + ( ACS - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( Max( ( ( ( ( ( MUM * MUC ) + MLU ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MUM ) - ( ( ( ( MUR + CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01793917467067508}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * Max( Max( ( FirstVNF_CPU_Server / BR ),AMS ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,RMSe ) + ( MLU / RRSe ) ) - DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7580299785867237, "obj2": 0.1270956512817469}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * Max( ( ( PN / ARS ) * CRS ),Max( FirstVNF_RAM,AMS ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,RMSe ) + ( MLU / DS ) ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7580299785867237, "obj2": 0.1270956512817469}, {"determining": "( ( ARS - ( BR * FirstVNF_Mem_Server ) ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RCSe / MUM ) * Max( MUC,RRSe ) ) - Max( Min( ( ( ( ( ( MUR + RMSe ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.721627408993576, "obj2": 0.21461479377738069}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( Min( Min( ( FirstVNF_RAM + FirstVNF_Mem ) ,Const ) ,MRS ) - ( FirstVNF_CPU * MDR ) )", "choosing": "Max( Max( Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ),( ( RMSe - MUC ) / RCSe ) ),( Max( RRSe,CS ) / Max( Min( ( RRSe - ( RRSe / MLU ) ) ,( Max( ( MUC + MLU ),MLU ) - DS ) ),( MUC * CS ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10064515272465303}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * AMS ) ) - MDR ) - DDR )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - Max( Min( Min( ( ( ( RMSe - RRSe ) - RMSe ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9593147751605996, "obj2": 0.020000049163248237}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) - Max( Max( MRS,DDR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,CS ) ) - ( CS / RRSe ) )", "obj1": 0.8501070663811563, "obj2": 0.07518627480368707}], "12": [{"determining": "( ( ( ( Min( Max( Const,DDR ) ,( ( ACS * ( FirstVNF_RAM_Server * ARS ) ) / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( MDR - DDR ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( ( ( ( CS / ( MUR + Max( RCSe,RMSe ) ) ) + DS ) * Max( RCSe,RMSe ) ) - ( Min( ( ( ( RCSe * DS ) - Min( MUM ,RMSe ) ) - ( Min( RMSe ,MUC ) * Min( CS ,MUM ) ) ) ,MUR ) / RMSe ) ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( Max( CRS,BR ) - Max( Max( MRS,Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( ( Min( Max( Const,DDR ) ,( ( MRS + ( CRS + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ),MRS ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS + RMSe ) + Min( Min( ( MUC * RMSe ) ,MLU ) ,( RCSe * MUC ) ) ) + ( ( MUR - DS ) * Max( Min( ( MUC + ( ( MUR + ( RCSe + RMSe ) ) * ( Min( RMSe ,MLU ) * CS ) ) ) ,RMSe ),Min( Max( ( MLU - MUM ),CS ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( ( MUM / RRSe ),Min( RCSe ,MUM ) )", "obj1": 0.7301927194860813, "obj2": 0.1530226939830267}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.20967376938129284}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ),CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Min( Const ,AMS ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.8029978586723768, "obj2": 0.09840865379759942}, {"determining": "Max( ( ( Min( MRS ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * ( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem_Server ,PN ),FirstVNF_RAM ) ) * MDR ) ) ) )", "choosing": "( ( ( RRSe - Min( RRSe ,DS ) ) * Max( ( ( ( CS * RMSe ) - ( MLU / DS ) ) / Max( RCSe,RCSe ) ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.815845824411135, "obj2": 0.09314457861046754}, {"determining": "( ( AMS - MDR ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( CS / CS ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07254554467252954}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( RMSe - ( RRSe + CS ) ) / RCSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8972162740899358, "obj2": 0.05312031002221161}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10045408033465371}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( Max( RMSe,( MLU * MUM ) ) - ( RMSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.708779443254818, "obj2": 0.21950327531511443}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.24027900917809483}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( AMS * MDR ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2476488684424534}, {"determining": "( ( Min( ( DDR - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - MDR )", "choosing": "Max( Max( ( ( ( Max( MUR,CS ) / RMSe ) - ( RRSe + CS ) ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9186295503211992, "obj2": 0.04218748802791334}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.23652666387745647}, {"determining": "Max( ( ( FirstVNF_CPU - MRS ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - ARS ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * Max( Min( ( DS / ( ( RMSe + ( CS - MUR ) ) + Min( ( MUC / MUM ) ,MLU ) ) ) ,RRSe ),( RCSe * ( ( ( RCSe * ( MUC + MLU ) ) - CS ) * DS ) ) ) ) + ( RRSe + CS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( RCSe ,MUM ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07863092146975731}, {"determining": "( ( AMS - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( ( DDR * CRS ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_Mem ,Const ) + ( ( Const / AMS ) / Max( Max( CRS,MDR ),( MRS / ARS ) ) ) ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),( DS * ( ( ( Max( RMSe,MUR ) / RMSe ) - MUM ) / ( ( MUR - MLU ) / Min( ( RRSe - MUC ) ,( MUM / ( MUR + RRSe ) ) ) ) ) ) ) + ( ( ( CS / RMSe ) * MUR ) / ( DS * MUM ) ) )", "obj1": 0.6937901498929336, "obj2": 0.23825405563170293}, {"determining": "( ( Const / ( ( ARS * FirstVNF_CPU ) + ( ACS - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( Max( ( ( ( ( ( MUM * MUC ) + MLU ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MUM ) - ( ( ( ( ( Max( MUR,MUR ) / RMSe ) - MUR ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023045945952631746}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "Max( ( MUM / RRSe ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11183731191290418}, {"determining": "( ( MRS + Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * ( CRS * FirstVNF_RAM ) ) )", "choosing": "Max( Max( Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,( ( RRSe + RRSe ) + RMSe ) ) * MLU ) ),RRSe ),( ( RMSe - ( RRSe + CS ) ) + RCSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS * PN ) ) * Min( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,AMS ) + MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( AMS - MDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2523023165917158}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( MRS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) - Max( Max( MRS,DDR ),Min( FirstVNF_RAM_Server ,RRS ) ) ) ) * MDR ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( Min( Min( Min( ( RMSe - MUC ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( ( RMSe - MUC ) ,DS ) ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( Max( MLU,MUR ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10815479317106896}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( ( ( RCSe / MLU ) * ( MUR + CS ) ) * Max( Min( Max( RMSe,( CS / RCSe ) ) ,RRSe ),RRSe ) ) ) * Max( MLU,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( ( ARS - MDR ) - ( MDR * ( AMS - MDR ) ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( Max( MUR,CS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),( MUM / ( DS / MUR ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9464668094218416, "obj2": 0.026339241402270105}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) - Max( Max( MRS,DDR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( MUR ,RRSe ) ) * MLU ) ),RRSe ) ),( Max( ( MUR - CS ),CS ) / DS ) )", "obj1": 0.8501070663811563, "obj2": 0.07518627480368707}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - MDR )", "choosing": "Max( Max( ( ( RMSe - ( RRSe + CS ) ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07727058166034642}, {"determining": "( ( Const - ( Min( Max( ( FirstVNF_CPU_Server + ( ARS - MDR ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - Min( MRS ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.9421841541755889, "obj2": 0.02827780716707184}, {"determining": "( ( AMS * PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS - ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / ( Max( DS,MLU ) / Max( ( RRSe - ( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7644539614561028, "obj2": 0.1201816298896912}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9100642398286938, "obj2": 0.04407034339834027}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - ( RRSe + CS ) ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9014989293361885, "obj2": 0.048081993796259305}, {"determining": "( ( AMS - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( ARS - ( BR * FirstVNF_Mem_Server ) ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RCSe / MUM ) * Max( MUC,RRSe ) ) - Max( Min( ( ( ( ( ( MUR + RMSe ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7237687366167024, "obj2": 0.21193013427678536}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7601713062098501, "obj2": 0.12224045204438469}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * Max( Max( ( FirstVNF_CPU_Server / BR ),AMS ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,RMSe ) + ( MLU / RRSe ) ) - DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7580299785867237, "obj2": 0.1270956512817469}, {"determining": "( Min( ( FirstVNF_Mem * ACS ) ,Max( FirstVNF_RAM,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem / DDR ) - AMS ) )", "choosing": "( ( Max( RCSe,RRSe ) + Max( ( ( ( ( Min( MUC ,MLU ) / Max( MUR,CS ) ) - MUR ) / ( DS * DS ) ) + MUM ),( RRSe - ( RCSe - ( MUM * MUM ) ) ) ) ) - ( ( MUC + ( ( MLU - DS ) + MUC ) ) * DS ) )", "obj1": 0.7494646680942184, "obj2": 0.13107027246525454}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23028187167731257}, {"determining": "( Const * ( AMS * ( FirstVNF_Mem * ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUR / MLU ) / CS ) / RMSe ) - MUR ) + ( MUM / DS ) ) + DS ),( ( RCSe - RRSe ) - RRSe ) ) + ( ( DS * MUM ) * ( MUC + MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.21563736371911155}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( ( Const - PN ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,MUC ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9250535331905781, "obj2": 0.03718555355693407}, {"determining": "( Max( ( FirstVNF_Mem / ( Min( ACS ,FirstVNF_Mem_Server ) + DDR ) ),FirstVNF_RAM_Server ) * Max( Max( ( Min( Max( AMS,AMS ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( Const - RRS ) ) ) ) ),( ( RRS * PN ) + ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MUM / RRSe ) - Min( MUM ,( RRSe / CS ) ) ) ),( ( Max( MUM,MUC ) * MUR ) - ( Max( MUR,RCSe ) / RCSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7044967880085653, "obj2": 0.2268559201697283}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8394004282655246, "obj2": 0.07785346820303317}, {"determining": "( ( AMS - MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) * RRS ),FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( Max( MUR,CS ) + DS ),( Min( ( MUM + MUM ) ,Min( CS ,DS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.13159541010164097}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),( Max( RRSe,Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ( ( MRS - AMS ) * ( MDR - AMS ) ) ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05808437730861842}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8244111349036403, "obj2": 0.0884336165862528}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ) ) ) - ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7516059957173448, "obj2": 0.12850620915460553}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( MUC - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( Max( ( RRS + ARS ),( FirstVNF_RAM + ( DDR * ( FirstVNF_Mem_Server * ( DDR * ( ( DDR / PN ) / ( PN + MDR ) ) ) ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Max( ( RCSe - ( MUC / RCSe ) ),MUM ) + ( MLU / Max( ( ( ( DS + RCSe ) / MUR ) - RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.1111191224843405}, {"determining": "( ( MDR - AMS ) - ( Min( Min( DDR ,AMS ) ,Min( ( DDR * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( ( CS + RMSe ) - ( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,( Max( CS,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) ) ) / RRSe ) )", "obj1": 0.7687366167023555, "obj2": 0.11505654934536826}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( ( Max( RCSe,MUM ) * MLU ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( ( ( ( CS * RMSe ) - ( MLU / DS ) ) / Max( RCSe,RCSe ) ),CS ) ) + ( RRSe + CS ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.13159541010164097}, {"determining": "( ( ( AMS - Min( ( ( PN - PN ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM / AMS ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( ( MUR / MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12759006213964916}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( RMSe - MUC ) )", "obj1": 0.9507494646680942, "obj2": 0.0260776966529762}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( Max( RMSe,( MLU * RMSe ) ) - ( RMSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.8907922912205567, "obj2": 0.054993030650166294}, {"determining": "( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( Min( Max( ( FirstVNF_CPU_Server + ( ARS - MDR ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.9678800856531049, "obj2": 0.0160111954658079}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - AMS ) / ( DDR + ACS ) ) - ACS ) * RRS ) - ( Const * Max( DDR,( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( ( RCSe - RRSe ) - Min( MUM ,( ( Max( MUR,DS ) / Min( MLU ,RMSe ) ) / CS ) ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - Min( ( RRSe + RRSe ) ,( RCSe - RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem_Server ,PN ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / MLU ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09211755193424948}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / ( Max( MUM,( Min( MLU ,( MUR / RMSe ) ) + RRSe ) ) + RCSe ) ) / Max( RCSe,CS ) ) - ( Min( MUC ,MUR ) + ( ( ( ( ( DS / CS ) + MUM ) * ( MUC * Max( RCSe,( DS / MUM ) ) ) ) + MUC ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( Max( RRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem_Server ) ) - ( ( ARS + FirstVNF_Mem_Server ) * ( ARS - ( FirstVNF_CPU / ( Min( Max( ACS,BR ) ,Max( RRS,MDR ) ) + MRS ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MLU ) - Max( Min( ( ( ( MUC * MUR ) + CS ) * Min( ( DS / Max( CS,( MUM * RMSe ) ) ) ,CS ) ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) * ( BR + PN ) ) ) ) / ( ARS - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( Max( Min( CS ,MLU ),RCSe ) / ( RCSe * ( ( ( Max( ( MUM * RMSe ),Max( RRSe,RRSe ) ) - MUM ) + MUR ) / CS ) ) ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),( ( MLU - MUR ) - ( MLU + RRSe ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.21461479377738069}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ( ( MRS - AMS ) * ( MDR - AMS ) ) ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05808437730861842}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( ( MLU * ( Max( RMSe,( ( MUM + RRSe ) * Max( Min( ( MUR / MUC ) ,( MLU + DS ) ),MUC ) ) ) / RRSe ) ) + ( RCSe / DS ) )", "obj1": 0.7708779443254818, "obj2": 0.11426194865883806}, {"determining": "( ( ( ARS - MDR ) - ( MDR * MDR ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),( MUM / ( DS / MUR ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03806614096313133}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9057815845824411, "obj2": 0.046365743576247176}, {"determining": "( ( ( ( MRS / Const ) / FirstVNF_CPU_Server ) * BR ) / ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) / RRSe ) * Max( RCSe,CS ) ) - ( ( ( MUR / Min( MUC ,( RRSe + DS ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ) / RRSe ) )", "obj1": 0.7259100642398287, "obj2": 0.20967376938129284}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( RMSe / ( RMSe - RCSe ) ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( ( MUM - RCSe ) - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10425854157185589}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,Min( Max( ( FirstVNF_CPU_Server + ( ARS - MDR ) ),( ARS * FirstVNF_CPU ) ) ,Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ),( FirstVNF_CPU_Server * CRS ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( Max( MUR,CS ) / RMSe ) - ( ( ( RRSe - RRSe ) * Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) + ( RRSe + CS ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( Const / ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,( ( RRSe - ( Max( MUR,( ( RCSe * RCSe ) - ( DS / RMSe ) ) ) + MLU ) ) + RRSe ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01793917467067508}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) ) + ( ( MUM - MUR ) / DS ) )", "obj1": 0.7644539614561028, "obj2": 0.1201816298896912}, {"determining": "Max( ( ( AMS * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( AMS * MDR ) ) ,AMS ) * MDR ) / Min( Min( AMS ,CRS ) ,( Min( RRS ,MRS ) - CRS ) ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( ( ( ( DS * RCSe ) / ( ( MUR * MUR ) + ( ( MLU - MUM ) * Min( MUM ,MUM ) ) ) ) - ( RMSe * DS ) ),CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.24857806303828764}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - MDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.0884336165862528}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem_Server ,PN ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Max( ( ( DS * DS ) + ( DS / RCSe ) ),MUR ) + ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09211755193424948}, {"determining": "( ( Const / ( ( ( Const * MRS ) - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) + ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) + ( DDR - MDR ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( RCSe ,( ( RRSe - ( Max( MUR,( ( RCSe * RCSe ) - ( DS / RMSe ) ) ) + MLU ) ) + RRSe ) ) - ( RMSe - ( MUR / MUR ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01793917467067508}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ( ( MRS - AMS ) * ( AMS * PN ) ) ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.7837259100642399, "obj2": 0.11007372665546163}, {"determining": "( ( AMS - MDR ) - Min( Max( Const,( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUM ,Max( ( RRSe + ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( ( MUR * ( Min( RMSe ,DS ) / MUR ) ),RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009483549720898075}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( Min( Max( ( FirstVNF_CPU_Server + ( ARS - MDR ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,( ( ( PN - CRS ) + ( BR * AMS ) ) / ( Const / ( FirstVNF_RAM + ( MDR - ARS ) ) ) ) ) ) * MDR ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( Max( ( ( ( Max( MUR,MUR ) / RMSe ) - MUR ) / ( DS / MUR ) ),MUM ),MLU ) ) + ( RRSe + CS ) )", "obj1": 0.9764453961456103, "obj2": 0.010340693167880598}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( MUM * ( Min( RCSe ,MLU ) * RMSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9057815845824411, "obj2": 0.046365743576247176}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9014989293361885, "obj2": 0.048081993796259305}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( Max( MLU,CS ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9400428265524625, "obj2": 0.029893546853174125}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - FirstVNF_CPU )", "choosing": "( Max( ( MUM / ( DS / RRSe ) ),MUM ) + ( ( MUM - MUR ) / ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( ( MRS + DDR ) * ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) ) / ( ( ( MDR / Max( FirstVNF_CPU,DDR ) ) + ARS ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ),Min( RCSe ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - DS ) ) ) ,( RRSe * ( ( ( Min( MLU ,MUC ) * RRSe ) + ( ( RRSe - MUC ) / CS ) ) - MUM ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008308465316202041}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - ( ( PN - CRS ) + ( BR * AMS ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.8886509635974305, "obj2": 0.05619537987951128}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( RMSe / ( RMSe - RCSe ) ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( ( MUM - RCSe ) - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( ( Max( RCSe,( MUC / RCSe ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9571734475374732, "obj2": 0.020972203709690596}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * AMS ) ) - MDR ) - DDR )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - Max( Min( Min( ( ( ( RMSe - RRSe ) - RMSe ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9593147751605996, "obj2": 0.020000049163248237}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) - Max( Max( MRS,DDR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( MUR ,RRSe ) ) * MLU ) ),RRSe ) ),( Max( ( MUR - CS ),CS ) / DS ) )", "obj1": 0.8501070663811563, "obj2": 0.07518627480368707}, {"determining": "( ( AMS - MDR ) - Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( DS / MUR ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.974304068522484, "obj2": 0.011276899937040768}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( PN - PN ) / ( ACS - DDR ) ) ,( FirstVNF_RAM / AMS ) ) ),( ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( MUC + CS ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.24857806303828764}], "13": [{"determining": "( ( ( ( Min( Max( Const,DDR ) ,( ( ACS * ( FirstVNF_RAM_Server * ARS ) ) / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( MDR - DDR ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( ( ( ( CS / ( MUR + Max( RCSe,RMSe ) ) ) + DS ) * Max( RCSe,RMSe ) ) - ( Min( ( ( ( RCSe * DS ) - Min( MUM ,RMSe ) ) - ( Min( RMSe ,MUC ) * Min( CS ,MUM ) ) ) ,MUR ) / RMSe ) ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( Max( MRS,BR ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( ( MUR + ( RCSe + RMSe ) ) * ( Min( RRSe ,MLU ) * CS ) ) ) ,RMSe ),Min( Max( MLU,CS ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,BR ) - Max( Max( MRS,Const ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( ( Min( Max( Const,DDR ) ,( ( MRS + ( CRS + FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ),MRS ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS + RMSe ) + Min( Min( ( MUC * RMSe ) ,MLU ) ,( RCSe * MUC ) ) ) + ( ( MUR - DS ) * Max( Min( ( MUC + ( ( MUR + ( RCSe + RMSe ) ) * ( Min( RMSe ,MLU ) * CS ) ) ) ,RMSe ),Min( Max( ( MLU - MUM ),CS ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( Max( Const,AMS ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * ( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( Min( Max( MRS,( ( PN - ACS ) + FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "( ( ( MUM - RRSe ) * ( RRSe / ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) ) ) + ( ( MUM - ( MUR * Max( MLU,CS ) ) ) / DS ) )", "obj1": 0.728051391862955, "obj2": 0.1508820642688667}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.20967376938129284}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.24027900917809483}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * Max( Max( ( MDR / BR ),AMS ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( Max( ( MUM / RRSe ),Min( RCSe ,MUM ) ) - DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8115631691648822, "obj2": 0.09598555173912487}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) * ACS ) + FirstVNF_CPU_Server ) - ( ( ARS + FirstVNF_Mem_Server ) - MDR ) )", "choosing": "( ( ( ( Max( MUR,CS ) / RMSe ) - ( ( RRSe + RMSe ) * MLU ) ) / ( DS * DS ) ) - ( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,( Max( RCSe,( ( MLU / MUM ) / MUC ) ) / ( CS / MUM ) ) ) ) / RRSe ) )", "obj1": 0.8950749464668094, "obj2": 0.052644887889094}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( RCSe ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( MUM * ( Min( RCSe ,MLU ) * RMSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06899865054579848}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9164882226980728, "obj2": 0.039544572900644476}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUM / ( DS / RRSe ) ),MUM ) + ( ( MUM - MUR ) / ( ( ( ( ( MUC + ( DS / RCSe ) ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07367017648343975}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( ( DS + RRSe ) / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.23652666387745647}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( ( ( RCSe / MLU ) * ( MUR + CS ) ) * Max( Min( Max( RMSe,( CS / RCSe ) ) ,RRSe ),RRSe ) ) ) * Max( MLU,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( Min( ( ARS - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ),( MRS / BR ) ) ) ) ,AMS ) + ( PN * ( ( Const - PN ) - ( ( ( FirstVNF_CPU + ACS ) - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( ( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / DS ) ),MUM ),CS ) ) ) - Max( ( DS - Max( RMSe,RRSe ) ),RRSe ) )", "obj1": 0.8479657387580299, "obj2": 0.07726446747082114}, {"determining": "( ( Min( ( RRS * ARS ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) * DDR ) )", "choosing": "Max( ( MUM / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( ( Min( ( DS / RRSe ) ,MLU ) - ( MUM - MUM ) ) / CS ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8179871520342612, "obj2": 0.0913128593137313}, {"determining": "( ( ( DDR * CRS ) / ( FirstVNF_CPU_Server / ( Min( FirstVNF_Mem ,Const ) + ( ( Const / AMS ) / Max( Max( CRS,MDR ),( MRS / ARS ) ) ) ) ) ) * Const )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),( DS * ( ( ( Max( RMSe,MUR ) / RMSe ) - MUM ) / ( ( MUR - MLU ) / Min( ( RRSe - MUC ) ,( MUM / ( MUR + RRSe ) ) ) ) ) ) ) + ( ( ( CS / RMSe ) * MUR ) / ( DS * MUM ) ) )", "obj1": 0.6937901498929336, "obj2": 0.23825405563170293}, {"determining": "( ( AMS - MDR ) - Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( DS / MUR ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),( ( RRSe / CS ) / ( RCSe + MUM ) ) ) )", "obj1": 0.815845824411135, "obj2": 0.09259371974952163}, {"determining": "( ( AMS - Max( CRS,BR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( RRSe,Min( ( ( ( RRSe * ( MUR - MUC ) ) / RMSe ) - RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( MUR * Max( Min( ( DS / ( ( RMSe + ( CS - MUR ) ) + Min( MLU ,( MUC / MUM ) ) ) ) ,RRSe ),( ( MUR + MLU ) * ( ( ( RCSe * ( MUC + MLU ) ) - CS ) * DS ) ) ) ) + ( RRSe + CS ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS * PN ) ) * Min( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,AMS ) + MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( AMS - MDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2523023165917158}, {"determining": "( ( MRS + Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( ( PN - FirstVNF_RAM_Server ) * Min( ( MRS + Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( MUR + Max( ( MUC + ( DS / RCSe ) ),( Max( ( Max( Max( DS,Max( MUC,DS ) ),RMSe ) / ( ( CS / MUR ) - DS ) ),DS ) * CS ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12628522036059886}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) - Max( Max( MRS,DDR ),Min( FirstVNF_RAM_Server ,RRS ) ) ) ) * MDR ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( Min( Min( Min( ( RMSe - MUC ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( ( RMSe - MUC ) ,DS ) ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( Max( MLU,MUR ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10815479317106896}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7580299785867237, "obj2": 0.12435209227686089}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( AMS * MDR ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2476488684424534}, {"determining": "Max( ( ( FirstVNF_CPU - MRS ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - ARS ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * Max( Min( ( DS / ( ( RMSe + ( CS - MUR ) ) + Min( ( MUC / MUM ) ,MLU ) ) ) ,RRSe ),( RCSe * ( ( ( RCSe * ( MUC + MLU ) ) - CS ) * DS ) ) ) ) + ( RRSe + CS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ),CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ),Max( Const,DDR ) ) ) ) - ( AMS * MDR ) )", "choosing": "( ( ( RRSe - Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) + ( MLU / CS ) ),( ( ( Max( RCSe,MUM ) * MLU ) / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ) ) * Max( ( ( ( CS * RMSe ) - ( MLU / DS ) ) / Max( RCSe,RCSe ) ),CS ) ) + ( RRSe + Min( MUC ,RMSe ) ) )", "obj1": 0.9464668094218416, "obj2": 0.026161872847777896}, {"determining": "( ( Const - ( Min( Max( ( FirstVNF_CPU_Server + ( ARS - ( BR * FirstVNF_Mem_Server ) ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - Min( MRS ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUR + RMSe ) / MUC ) - RMSe ) / RMSe ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.9421841541755889, "obj2": 0.028277807167071834}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Min( Const ,AMS ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.8029978586723768, "obj2": 0.09840865379759942}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( Max( RMSe,( MLU * RMSe ) ) - ( RMSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.8907922912205567, "obj2": 0.054993030650166294}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289543}, {"determining": "( Min( ( FirstVNF_Mem * ACS ) ,Max( FirstVNF_RAM,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem / DDR ) - AMS ) )", "choosing": "( ( Max( RCSe,RRSe ) + Max( ( ( ( ( Min( MUC ,MLU ) / Max( MUR,CS ) ) - MUR ) / ( DS * DS ) ) + MUM ),( RRSe - ( RCSe - ( MUM * MUM ) ) ) ) ) - ( ( MUC + ( ( MLU - DS ) + MUC ) ) * DS ) )", "obj1": 0.7494646680942184, "obj2": 0.13107027246525454}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ( ( MRS - AMS ) * ( AMS * PN ) ) ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * Max( FirstVNF_Mem,Max( Min( FirstVNF_Mem_Server ,PN ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) - Max( Min( ( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - ( RRSe + CS ) ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9014989293361885, "obj2": 0.048081993796259305}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( DS * DS ) + ( DS / RCSe ) ),MUR ) + ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.6980728051391863, "obj2": 0.23028187167731257}, {"determining": "( Const * ( AMS * ( FirstVNF_Mem * ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUR / MLU ) / CS ) / RMSe ) - MUR ) + ( MUM / DS ) ) + DS ),( ( RCSe - RRSe ) - RRSe ) ) + ( ( DS * MUM ) * ( MUC + MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.21563736371911155}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.708779443254818, "obj2": 0.21950327531511443}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,Min( ( AMS - MDR ) ,FirstVNF_CPU ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10141237663827943}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),DDR ) ) - Max( Max( MRS,BR ),( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( MUR / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) )", "obj1": 0.880085653104925, "obj2": 0.06017810593001149}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( MRS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( RCSe ,( ( RRSe - ( Max( MUR,( ( RCSe * RCSe ) - ( DS / RMSe ) ) ) + MLU ) ) + RRSe ) ) - ( RMSe - ( MUR / MUR ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( AMS - MDR ) - Min( Max( Const,( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( AMS - MDR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( Min( MUM ,Max( ( RRSe + ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - MUM )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8394004282655246, "obj2": 0.07785346820303315}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RMSe - MUC ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( ( RMSe - MUC ) ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11279472803562372}, {"determining": "( ( AMS * PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS - ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / ( Max( DS,MLU ) / Max( ( RRSe - ( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7644539614561028, "obj2": 0.1201816298896912}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( ( MLU * ( Max( RMSe,( ( MUM + RRSe ) * Max( Min( ( MUR / MUC ) ,( MLU + DS ) ),MUC ) ) ) / RRSe ) ) + ( RCSe / DS ) )", "obj1": 0.7708779443254818, "obj2": 0.11426194865883806}, {"determining": "( ( AMS - MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) * RRS ),FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( Max( MUR,CS ) + DS ),( Min( ( MUM + MUM ) ,Min( CS ,DS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.13159541010164097}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),( Max( RRSe,Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * AMS ) )", "choosing": "( Min( MUM ,Max( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8244111349036403, "obj2": 0.0884336165862528}, {"determining": "( ( Max( Max( RRS,Const ),Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( ( ( FirstVNF_CPU_Server + AMS ) + AMS ),BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( Max( MLU,MUM ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( MUM * ( Min( ( RCSe - MUC ) ,MLU ) * MUC ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ) ) ) - ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( MRS + Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * ( CRS * FirstVNF_RAM ) ) )", "choosing": "Max( Max( Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,( ( RRSe + RRSe ) + RMSe ) ) * MLU ) ),RRSe ),( ( RMSe - ( RRSe + CS ) ) + RCSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( Max( ( RRS + ARS ),( FirstVNF_RAM + ( DDR * ( FirstVNF_Mem_Server * ( DDR * ( ( DDR / PN ) / ( PN + MDR ) ) ) ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Max( ( RCSe - ( MUC / RCSe ) ),MUM ) + ( MLU / Max( ( ( ( DS + RCSe ) / MUR ) - RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.1111191224843405}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - ( RRSe + CS ) ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9014989293361885, "obj2": 0.048081993796259305}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.13159541010164097}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ),CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( AMS - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9100642398286938, "obj2": 0.04407034339834027}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - ( DDR - MDR ) ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - ( RRSe + CS ) ) / RCSe ),Max( ( ( MUR + ( DS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9207708779443254, "obj2": 0.03912527383255182}, {"determining": "( ( Const / ( ( ARS * FirstVNF_CPU ) + ( ACS - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9528907922912205, "obj2": 0.023045945952631746}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( RMSe / MLU ) * MLU ) ) ) ,( RMSe - MUC ) )", "obj1": 0.9507494646680942, "obj2": 0.0260776966529762}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10045408033465371}, {"determining": "( Max( ( FirstVNF_Mem / ( Min( ACS ,FirstVNF_Mem_Server ) + DDR ) ),FirstVNF_RAM_Server ) * Max( Max( ( Min( Max( AMS,AMS ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( Const - RRS ) ) ) ) ),( ( RRS * PN ) + ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MUM / RRSe ) - Min( MUM ,( RRSe / CS ) ) ) ),( ( Max( MUM,MUC ) * MUR ) - ( Max( MUR,RCSe ) / RCSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7044967880085653, "obj2": 0.2268559201697283}, {"determining": "( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( Min( Max( ( FirstVNF_CPU_Server + ( ARS - MDR ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( MLU - MUR ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.9678800856531049, "obj2": 0.0160111954658079}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9100642398286938, "obj2": 0.04407034339834027}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - AMS ) / ( DDR + ACS ) ) - ACS ) * RRS ) - ( Const * Max( DDR,( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( ( RCSe - RRSe ) - Min( MUM ,( ( Max( MUR,DS ) / Min( MLU ,RMSe ) ) / CS ) ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - Min( ( RRSe + RRSe ) ,( RCSe - RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / ( Max( MUM,( Min( MLU ,( MUR / RMSe ) ) + RRSe ) ) + RCSe ) ) / Max( RCSe,CS ) ) - ( Min( MUC ,MUR ) + ( ( ( ( ( DS / CS ) + MUM ) * ( MUC * Max( RCSe,( DS / MUM ) ) ) ) + MUC ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( Max( RRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem_Server ) ) - ( ( ARS + FirstVNF_Mem_Server ) * ( ARS - ( FirstVNF_CPU / ( Min( Max( ACS,BR ) ,Max( RRS,MDR ) ) + MRS ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MLU ) - Max( Min( ( ( ( MUC * MUR ) + CS ) * Min( ( DS / Max( CS,( MUM * RMSe ) ) ) ,CS ) ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) * ( BR + PN ) ) ) ) / ( ARS - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( Max( Min( CS ,MLU ),RCSe ) / ( RCSe * ( ( ( Max( ( MUM * RMSe ),Max( RRSe,RRSe ) ) - MUM ) + MUR ) / CS ) ) ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),( ( MLU - MUR ) - ( MLU + RRSe ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.21461479377738069}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( RCSe ,MUM ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07863092146975731}, {"determining": "( ( AMS - MDR ) - ( MDR / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) )", "choosing": "( ( ( CS / CS ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * Max( MUM,CS ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06688422254385078}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),DDR ) ) * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( DS * DS ) / RCSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9079229122055674, "obj2": 0.04563393781667424}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * AMS ) ) - MDR ) - DDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( Min( MUM ,( RRSe + RRSe ) ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7880085653104925, "obj2": 0.10425854157185589}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( Max( RMSe,( MLU * MUM ) ) - ( RMSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.708779443254818, "obj2": 0.21950327531511443}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( RRSe + ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( ( MUR * ( Min( RMSe ,DS ) / MUR ) ),RRSe ) )", "obj1": 0.7601713062098501, "obj2": 0.12224045204438469}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ( ( MRS - AMS ) * ( MDR - AMS ) ) ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( ( ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8843683083511777, "obj2": 0.05808437730861842}, {"determining": "( ( Const / ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,( ( RRSe - ( Max( MUR,( ( RCSe * RCSe ) - ( DS / RMSe ) ) ) + MLU ) ) + RRSe ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01793917467067508}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( PN - PN ) / ( ACS - DDR ) ) ,( FirstVNF_RAM / AMS ) ) ),( ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( MUC + CS ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.24857806303828764}, {"determining": "( ( ( Min( FirstVNF_RAM ,( ( AMS - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) - ( DDR / ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / MLU ) * MLU ) ) ) ,( RMSe - MUC ) )", "obj1": 0.9957173447537473, "obj2": 0.0022145649724243325}, {"determining": "( ( Const / ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,( ( RRSe - ( Max( MUR,( ( RCSe * RCSe ) - ( DS / RMSe ) ) ) + MLU ) ) + RRSe ) ) - Max( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / Min( DS ,MUM ) ) + ( ( MLU / MUM ) * Min( MUM ,( CS / RRSe ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ),RRSe ) )", "obj1": 0.9635974304068522, "obj2": 0.01793917467067508}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ( ( MRS - AMS ) * ( AMS * PN ) ) ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.7837259100642399, "obj2": 0.11007372665546163}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Min( ( ( MRS - AMS ) * ( MDR - AMS ) ) ,MDR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05808437730861842}, {"determining": "( ( ( Max( RRS,Const ) / Max( FirstVNF_RAM_Server,( Const - PN ) ) ) - ( ( RRS * Max( AMS,Min( Max( FirstVNF_RAM_Server,MRS ) ,FirstVNF_RAM ) ) ) + ( Min( PN ,PN ) / FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - Max( Min( Min( ( RMSe / ( MUR - Min( Min( CS ,RRSe ) ,RMSe ) ) ) ,MLU ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( RCSe ,MUM ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.07863092146975731}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( Max( MLU,CS ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9400428265524625, "obj2": 0.029893546853174125}, {"determining": "( ( ( MRS + DDR ) - ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) ) / ( Max( ARS,FirstVNF_Mem_Server ) * Min( AMS ,FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,Max( Max( ( ( ( Max( MUR,CS ) / RMSe ) - ( Max( MUC,MUM ) - RCSe ) ) / ( DS * DS ) ),Min( RCSe ,( RRSe - ( ( MUC - CS ) * MUR ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( DS + RCSe ) ),RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( MDR - ( ( PN - CRS ) + ( BR * AMS ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.8886509635974305, "obj2": 0.05619537987951128}, {"determining": "( ( MRS + Max( ( AMS - MDR ),( AMS * FirstVNF_CPU ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU_Server - CRS ) * FirstVNF_RAM_Server ) ) + AMS ) - Min( FirstVNF_CPU_Server ,DDR ) ) / ( ACS - Min( CRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( Max( ( CS * ( MLU + MUM ) ),( ( MUR * DS ) + RMSe ) ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RMSe ) ) ) ) - ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.0884336165862528}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008308465316202041}, {"determining": "( ( ARS - ( BR * FirstVNF_Mem_Server ) ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.7237687366167024, "obj2": 0.21193013427678536}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( ( Max( RCSe,( MUC / RCSe ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9571734475374732, "obj2": 0.020972203709690596}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * AMS ) ) - MDR ) - DDR )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - Max( Min( Min( ( ( ( RMSe - RRSe ) - RMSe ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9593147751605996, "obj2": 0.020000049163248237}], "14": [{"determining": "( ( ( ( Min( Max( Const,DDR ) ,( ( ACS * ( FirstVNF_RAM_Server * ARS ) ) / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( MDR - DDR ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( ( ( ( CS / ( MUR + Max( RCSe,RMSe ) ) ) + DS ) * Max( RCSe,RMSe ) ) - ( Min( ( ( ( RCSe * DS ) - Min( MUM ,RMSe ) ) - ( Min( RMSe ,MUC ) * Min( CS ,MUM ) ) ) ,MUR ) / RMSe ) ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( Max( MRS,BR ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( ( MUR + ( RCSe + RMSe ) ) * ( Min( RRSe ,MLU ) * CS ) ) ) ,RMSe ),Min( Max( MLU,CS ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,BR ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( ( MUR + ( RCSe + RMSe ) ) * ( Min( RRSe ,MLU ) * CS ) ) ) ,RMSe ),Min( Max( MLU,CS ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( ( Const / FirstVNF_CPU ),CRS ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( Min( MUM ,Max( Max( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ),Min( ( MUR * DS ) ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RCSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + FirstVNF_Mem ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( Const + DDR ) * MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) ) + ( ( ( ( CS * MUM ) / RMSe ) - MUR ) / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.15285475048292402}, {"determining": "( ( ARS - ( BR * FirstVNF_Mem_Server ) ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.7237687366167024, "obj2": 0.21193013427678536}, {"determining": "( ( AMS * MDR ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,Max( ( MUC + ( DS / RCSe ) ),MUR ) ) / RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23340343471603722}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) ) * MDR ) )", "choosing": "( Max( ( MUC + ( DS / ( MUC / ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7323340471092077, "obj2": 0.14034613412901537}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,( DS / RCSe ) ) ) + MUM ) / RRSe ) ) + ( ( MUM - MUR ) / DS ) )", "obj1": 0.728051391862955, "obj2": 0.14956365806736024}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( AMS * MDR ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2476488684424534}, {"determining": "( ( AMS - Max( CRS,( MDR * FirstVNF_CPU ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ) - Max( RRSe,Min( ( ( ( RRSe * ( MUR - MUC ) ) / RMSe ) - RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07598522542439089}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - ( DDR - MDR ) ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - ( RRSe + CS ) ) / RCSe ),Max( ( ( MUR + ( DS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9207708779443254, "obj2": 0.03912527383255182}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - ( ( RRSe / CS ) / ( RCSe + MUM ) ) ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7794432548179872, "obj2": 0.1088309770468649}, {"determining": "( ( ( MDR - AMS ) - Max( FirstVNF_RAM_Server,Max( ( ( ( CRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) - ACS ),MDR ) ) ) - ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( Max( MUM,( DS / MLU ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( ( Min( RCSe ,MLU ) * RMSe ) * Max( ( ( MUR + ( CS - RMSe ) ) * ( Max( RRSe,MLU ) * MLU ) ),RRSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9100642398286938, "obj2": 0.042182597862364786}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),DDR ) ) * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( DS * DS ) / RCSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9079229122055674, "obj2": 0.04563393781667424}, {"determining": "( Min( ( FirstVNF_Mem * ACS ) ,Max( FirstVNF_RAM,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem / DDR ) - AMS ) )", "choosing": "( ( Max( RCSe,RRSe ) + Max( ( ( ( ( Min( MUC ,MLU ) / Max( MUR,CS ) ) - MUR ) / ( DS * DS ) ) + MUM ),( RRSe - ( RCSe - ( MUM * MUM ) ) ) ) ) - ( ( MUC + ( ( MLU - DS ) + MUC ) ) * DS ) )", "obj1": 0.7494646680942184, "obj2": 0.13107027246525454}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( PN - ( DDR / Max( Const,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.69593147751606, "obj2": 0.23204361203765886}, {"determining": "( ( Const / ( ( ARS * FirstVNF_CPU ) + ( ACS - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9528907922912205, "obj2": 0.023045945952631746}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) - Max( Max( MRS,DDR ),Min( FirstVNF_RAM_Server ,RRS ) ) ) ) * MDR ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( Min( Min( Min( ( RMSe - MUC ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( ( RMSe - MUC ) ,DS ) ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( Max( MLU,MUR ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10815479317106896}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( ( ( RCSe / MLU ) * ( MUR + CS ) ) * Max( Min( Max( RMSe,( CS / RCSe ) ) ,RRSe ),RRSe ) ) ) * Max( MLU,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( AMS * PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS - ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / ( Max( DS,MLU ) / Max( ( RRSe - ( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7644539614561028, "obj2": 0.1201816298896912}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( RCSe ,MUM ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( MUR * ( MUC - CS ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.961456102783726, "obj2": 0.01719648705599139}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ),CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( Min( ( ( ( ( RMSe / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.8565310492505354, "obj2": 0.0709465964727929}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( PN - PN ) / ( ACS - DDR ) ) ,( FirstVNF_RAM / AMS ) ) ),( ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( MUC + CS ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.24857806303828764}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8993576017130621, "obj2": 0.049740101631168404}, {"determining": "( ( AMS - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( MUR + ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09698243690791908}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( ( ( RCSe / MLU ) * ( MUR + CS ) ) * Max( Min( Max( RMSe,( CS / RCSe ) ) ,RRSe ),RRSe ) ) ) * Max( MLU,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / Max( MUM,CS ) ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813564}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Max( Min( ( ARS * MRS ) ,FirstVNF_Mem ),Max( CRS,BR ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( ( CS * DS ) ,Max( Max( ( Max( ( MUC / ( RRSe / MUC ) ),( RMSe * Max( MUC,RMSe ) ) ) / ( DS * MUR ) ),MUM ),( Max( RMSe,( RMSe / MUC ) ) + Min( MUR ,( RCSe + MLU ) ) ) ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03395123801292318}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289541}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ) ) ) - ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / ( Max( MUM,( Min( MLU ,( MUR / RMSe ) ) + RRSe ) ) + RCSe ) ) / Max( RCSe,CS ) ) - ( Min( MUC ,MUR ) + ( ( ( ( ( DS / CS ) + MUM ) * ( MUC * Max( RCSe,( DS / MUM ) ) ) ) + MUC ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( Const - ( Min( Max( ( PN * FirstVNF_CPU ),( ARS * FirstVNF_CPU ) ) ,( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) ) * MDR ) ) - Min( MRS ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUR + RMSe ) / MUC ) - Max( Max( ( RMSe + MLU ),( Max( MLU,MUR ) + CS ) ),MUR ) ) / DS ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.0257453252573843}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( RRSe + ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( ( MUR * ( Min( RMSe ,DS ) / MUR ) ),RRSe ) )", "obj1": 0.7601713062098501, "obj2": 0.12224045204438469}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Min( Const ,AMS ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.8029978586723768, "obj2": 0.09833931033267909}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / MDR ) - ( Min( Max( Max( MRS,BR ),( MDR * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_RAM + Min( ( FirstVNF_CPU - RRS ) ,ARS ) ) ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - Min( RCSe ,MUM ) ) ,Min( MUM ,RCSe ) ),( Min( MUC ,RMSe ) / Max( RRSe,( MUM * ( Min( MUR ,( DS - DS ) ) * RMSe ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06899865054579847}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,Min( ( AMS - MDR ) ,FirstVNF_CPU ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10127342261986055}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08952079054405525}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.9678800856531049, "obj2": 0.0160111954658079}, {"determining": "( Const * ( AMS * ( FirstVNF_Mem * ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUR / MLU ) / CS ) / RMSe ) - MUR ) + ( MUM / DS ) ) + DS ),( ( RCSe - RRSe ) - RRSe ) ) + ( ( DS * MUM ) * ( MUC + MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.21563736371911155}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( Max( RMSe,( MLU * MUM ) ) - ( RMSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.708779443254818, "obj2": 0.21950327531511443}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.880085653104925, "obj2": 0.059181478587320036}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( AMS - MDR ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( Min( MUM ,( RRSe + RRSe ) ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07785346820303315}, {"determining": "( ( AMS - MDR ) - Max( ( ( FirstVNF_RAM_Server / ACS ) * RRS ),FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( Max( MUR,CS ) + DS ),( Min( ( MUM + MUM ) ,Min( CS ,DS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.13159541010164097}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_RAM_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011477794347134786}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( MUR * Max( Min( ( DS / ( ( RMSe + ( CS - MUR ) ) + Min( MLU ,( MUC / MUM ) ) ) ) ,RRSe ),( ( MUR + MLU ) * ( ( ( RCSe * ( MUC + MLU ) ) - CS ) * DS ) ) ) ) + ( RRSe + CS ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( AMS - MDR ) - Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ),( RRSe - ( DS / MUR ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),( ( RRSe / CS ) / ( RCSe + MUM ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09363019919441877}, {"determining": "( ( Min( ( AMS - ACS ) ,( ( MRS - ( Max( PN,( CRS + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),( ( ( MUM - MUR ) / Max( ( MUM + ( MUR * MUC ) ),( MUC - MUM ) ) ) - ( RMSe * ( RMSe * RCSe ) ) ) ),Max( Min( ( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.974304068522484, "obj2": 0.0129725446475075}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - ( RRSe + CS ) ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9014989293361885, "obj2": 0.048081993796259305}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.13159541010164097}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "( Max( ( RCSe - ( MUC / RCSe ) ),MUM ) + ( MLU / Max( ( ( ( DS + RCSe ) / MUR ) - RMSe ),Max( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( AMS - Max( CRS,BR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( RRSe,Min( ( ( ( RRSe * ( MUR - MUC ) ) / RMSe ) - RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( MUR + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7537473233404711, "obj2": 0.12628522036059886}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7558886509635975, "obj2": 0.12503991975844114}, {"determining": "( Max( ( FirstVNF_Mem / ( Min( ACS ,FirstVNF_Mem_Server ) + DDR ) ),FirstVNF_RAM_Server ) * Max( Max( ( Min( Max( AMS,AMS ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( Const - RRS ) ) ) ) ),( ( RRS * PN ) + ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MUM / RRSe ) - Min( MUM ,( RRSe / CS ) ) ) ),( ( Max( MUM,MUC ) * MUR ) - ( Max( MUR,RCSe ) / RCSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7044967880085653, "obj2": 0.2268559201697283}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( DS * DS ) + ( DS / RCSe ) ),MUR ) + ( ( ( CS / RMSe ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.6980728051391863, "obj2": 0.23028187167731257}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,( ( Min( Max( Const,( AMS * MDR ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,Max( RRSe,CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10006987605679009}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) * ACS ) + FirstVNF_CPU_Server ) - ( ( ARS + FirstVNF_Mem_Server ) - MDR ) )", "choosing": "( ( ( ( Max( MUR,CS ) / RMSe ) - ( ( RRSe + RMSe ) * MLU ) ) / ( DS * DS ) ) - ( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,( Max( RCSe,( ( MLU / MUM ) / MUC ) ) / ( CS / MUM ) ) ) ) / RRSe ) )", "obj1": 0.8950749464668094, "obj2": 0.052644887889094}, {"determining": "( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RRSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - AMS ) / ( DDR + ACS ) ) - ACS ) * RRS ) - ( Const * Max( DDR,( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( ( RCSe - RRSe ) - Min( MUM ,( ( Max( MUR,DS ) / Min( MLU ,RMSe ) ) / CS ) ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - Min( ( RRSe + RRSe ) ,( RCSe - RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( Max( RMSe,( MLU * MUM ) ) - ( RMSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.7580299785867237, "obj2": 0.12327693148928186}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUM / ( DS / RRSe ) ),MUM ) + ( ( MUM - MUR ) / ( ( ( ( ( MUC + ( DS / RCSe ) ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MUR ) ) ) / MUR ) + RMSe ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07367017648343975}, {"determining": "( Max( RRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem_Server ) ) - ( ( ARS + FirstVNF_Mem_Server ) * ( ARS - ( FirstVNF_CPU / ( Min( Max( ACS,BR ) ,Max( RRS,MDR ) ) + MRS ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MLU ) - Max( Min( ( ( ( MUC * MUR ) + CS ) * Min( ( DS / Max( CS,( MUM * RMSe ) ) ) ,CS ) ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) * ( BR + PN ) ) ) ) / ( ARS - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( Max( Min( CS ,MLU ),RCSe ) / ( RCSe * ( ( ( Max( ( MUM * RMSe ),Max( RRSe,RRSe ) ) - MUM ) + MUR ) / CS ) ) ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),( ( MLU - MUR ) - ( MLU + RRSe ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.21461479377738069}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9164882226980728, "obj2": 0.039544572900644476}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8886509635974305, "obj2": 0.05594397475510962}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * Max( Max( ( MDR / BR ),AMS ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( Max( ( MUM / RRSe ),Min( RCSe ,MUM ) ) - DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8115631691648822, "obj2": 0.09598555173912487}, {"determining": "( ( AMS - MDR ) - ( ( ARS + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) - ( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,( Max( RCSe,( MUC / ( MLU / MUM ) ) ) / ( RRSe / MUM ) ) ) ) / RRSe ) )", "obj1": 0.8950749464668094, "obj2": 0.052644887889094}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.8522483940042827, "obj2": 0.07367017648343975}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RMSe - MUC ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( ( RMSe - MUC ) ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11279472803562372}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_Mem ),MRS ) ,AMS ) * MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( AMS - MDR ) + ( ( AMS - MDR ) - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( MUM + MLU ) ),( ( RRSe / CS ) / Max( MLU,( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( Max( MLU,CS ) / RMSe ) - ( ( RMSe + RRSe ) - Min( RMSe ,MUM ) ) ) / ( DS * DS ) ),Min( RCSe ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MUM ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUR,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) * RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7880085653104925, "obj2": 0.10425854157185589}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( RCSe - RRSe ) ) ,RMSe ),Min( ( MUR / Max( ( MUR - Min( RRSe ,RMSe ) ),RMSe ) ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( ( Min( FirstVNF_RAM ,( ( AMS - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) - ( DDR / ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / MLU ) * MLU ) ) ) ,( RMSe - MUC ) )", "obj1": 0.9957173447537473, "obj2": 0.0022145649724243325}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.708779443254818, "obj2": 0.21950327531511443}, {"determining": "( ( ( Min( Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_RAM ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUC,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05744155725315872}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9164882226980728, "obj2": 0.039544572900644476}, {"determining": "( ( ( FirstVNF_CPU * AMS ) - MDR ) - ( MDR - FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + Max( Max( RRSe,Max( DS,CS ) ),( Min( MUM ,( RRSe / ( DS / Max( MUC,CS ) ) ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004175402938934589}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( ( MLU * ( Max( RMSe,( ( MUM + RRSe ) * Max( Min( ( MUR / MUC ) ,( MLU + DS ) ),MUC ) ) ) / RRSe ) ) + ( RCSe / DS ) )", "obj1": 0.7708779443254818, "obj2": 0.11426194865883806}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS * PN ) ) * Min( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,AMS ) + MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( AMS - MDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2523023165917158}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( MUM * ( Min( RCSe ,MLU ) * RMSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( Max( ( FirstVNF_RAM * FirstVNF_CPU ),FirstVNF_RAM_Server ),( BR - Const ) ) ) * MDR ) )", "choosing": "( Max( ( MUR * ( ( Max( RCSe,RCSe ) * MLU ) + ( RRSe * MUR ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7687366167023555, "obj2": 0.11505920140957938}, {"determining": "( ( ( Max( RRS,Const ) / Max( FirstVNF_RAM_Server,( Const - PN ) ) ) - ( ( RRS * Max( AMS,Min( Max( FirstVNF_RAM_Server,MRS ) ,FirstVNF_RAM ) ) ) + ( Min( PN ,PN ) / FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - Max( Min( Min( ( RMSe / ( MUR - Min( Min( CS ,RRSe ) ,RMSe ) ) ) ,MLU ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( Min( ( MRS / ACS ) ,( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS - FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * Max( Min( FirstVNF_Mem ,AMS ),MDR ) ) )", "choosing": "Max( ( Max( RRSe,CS ) / ( ( MUR / ( MUR * RMSe ) ) * CS ) ),Min( RCSe ,MUC ) )", "obj1": 0.7730192719486081, "obj2": 0.11298624251978504}, {"determining": "( ( Const - Min( ( Const / PN ) ,DDR ) ) - Min( MRS ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( MUC * RMSe ) + ( Min( RCSe ,MUM ) + RRSe ) ) + RMSe ) / MUC ) - RMSe ) / RMSe ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.9421841541755889, "obj2": 0.028277807167071834}, {"determining": "( ( ( FirstVNF_RAM + BR ) - ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) ) / ( ( PN + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU + RRSe ) ) + ( Max( Min( MUM ,MLU ),MUR ) * MUC ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * DDR ) )", "choosing": "Max( ( MUM / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8179871520342612, "obj2": 0.0913128593137313}, {"determining": "( ( MRS + Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( ( PN - FirstVNF_RAM_Server ) * Min( ( MRS + Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( MUR + Max( ( MUC + ( DS / RCSe ) ),( Max( ( Max( Max( DS,Max( MUC,DS ) ),RMSe ) / ( ( CS / MUR ) - DS ) ),DS ) * CS ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12628522036059886}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( FirstVNF_RAM_Server - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008308465316202041}], "15": [{"determining": "( ( ( ( Min( Max( Const,DDR ) ,( ( ACS * ( FirstVNF_RAM_Server * ARS ) ) / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( MDR - DDR ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( ( ( ( CS / ( MUR + Max( RCSe,RMSe ) ) ) + DS ) * Max( RCSe,RMSe ) ) - ( Min( ( ( ( RCSe * DS ) - Min( MUM ,RMSe ) ) - ( Min( RMSe ,MUC ) * Min( CS ,MUM ) ) ) ,MUR ) / RMSe ) ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( ( Max( RRS,Const ) / Max( ( FirstVNF_RAM * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( MUM * ( MLU / DS ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,BR ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - DS ) * Max( Min( ( MUC + ( ( MUR + ( RCSe + RMSe ) ) * ( Min( RRSe ,MLU ) * CS ) ) ) ,RMSe ),Min( Max( MLU,CS ) ,MLU ) ) ) + ( MLU / Max( ( ( ( ( ( RRSe / CS ) / ( RCSe + MUM ) ) - ( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / MUR ) + RMSe ),Max( ( ( DS / Min( ( DS + RRSe ) ,MUC ) ) - Max( MUR,Min( Max( MUM,RCSe ) ,MLU ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,( MRS * FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - DDR ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) * Const )", "choosing": "( Min( MUM ,Max( Max( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ),Min( RCSe ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RRSe - RCSe ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( RMSe,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( ARS - ( BR * FirstVNF_Mem_Server ) ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.7237687366167024, "obj2": 0.21193013427678536}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) ) + ( ( MUM - MUR ) / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.15285475048292402}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) ) * MDR ) )", "choosing": "( Max( ( MUC + ( DS / ( MUC / ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7323340471092077, "obj2": 0.14034613412901537}, {"determining": "( ( AMS * MDR ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,Max( ( MUC + ( DS / RCSe ) ),MUR ) ) / RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23340343471603722}, {"determining": "( ( Const / ( ( ARS * FirstVNF_CPU ) + ( ACS - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9528907922912205, "obj2": 0.023045945952631746}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( ( FirstVNF_CPU_Server / RRS ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( Min( RRSe ,Min( Max( ( MUR * MLU ),( RCSe * MLU ) ) ,Max( MUC,( MUR * RMSe ) ) ) ) - ( CS * RRSe ) ) ,( Max( Max( Min( ( Max( CS,MLU ) - DS ) ,( RRSe - ( MUC / MLU ) ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6852248394004282, "obj2": 0.24748689598790316}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( Max( MRS,Max( CRS,ARS ) ),FirstVNF_RAM ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,( ( RMSe - MUC ) / RCSe ) ) ) + MUM ) / RRSe ) ) + ( ( MUM - MUR ) / DS ) )", "obj1": 0.728051391862955, "obj2": 0.14953839079217787}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( ( RRSe / MUM ) ,RMSe ) ) )", "obj1": 0.9186295503211992, "obj2": 0.038378335620664415}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),( Min( MUM ,( RRSe / ( ( CS / RMSe ) - MUR ) ) ) - ( RCSe - RRSe ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06199009889480055}, {"determining": "( ( ( FirstVNF_CPU * AMS ) - ( FirstVNF_Mem_Server * BR ) ) / ( MDR - Max( ( MDR / FirstVNF_RAM ),ARS ) ) )", "choosing": "( ( ( RCSe * ( ( CS + MUR ) / CS ) ) / Max( Min( MLU ,RRSe ),RCSe ) ) - ( ( ( Min( Min( ( RRSe * MUR ) ,MUM ) ,MLU ) * MLU ) * ( MUR + MUM ) ) / ( MUM + MUC ) ) )", "obj1": 0.708779443254818, "obj2": 0.21885305322418647}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - ( ( RRSe / CS ) / ( RCSe + MUM ) ) ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7794432548179872, "obj2": 0.1088309770468649}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( PN - ( DDR / Max( Const,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.69593147751606, "obj2": 0.23204361203765886}, {"determining": "( ( AMS - ( MDR / FirstVNF_Mem_Server ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ) - Max( RRSe,Min( MUM ,( MLU + MUR ) ) ) )", "obj1": 0.8886509635974305, "obj2": 0.0547688439595142}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) - Max( Max( MRS,DDR ),Min( FirstVNF_RAM_Server ,RRS ) ) ) ) * MDR ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( Min( Min( Min( ( RMSe - MUC ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( ( RMSe - MUC ) ,DS ) ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( Max( MLU,MUR ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10815479317106896}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUR * ( ( Max( RCSe,RCSe ) * MLU ) + ( RRSe * MUR ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( MUR * ( MUC - CS ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.961456102783726, "obj2": 0.01719648705599139}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * DDR ) )", "choosing": "Max( ( MUM / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09131285931373129}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( Max( ( ( RMSe - ( RRSe + CS ) ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9014989293361885, "obj2": 0.048081993796259305}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( MUR + ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.03954457290064447}, {"determining": "( Max( ( FirstVNF_Mem / ( Min( ACS ,FirstVNF_Mem_Server ) + DDR ) ),FirstVNF_RAM_Server ) * Max( Max( ( Min( Max( AMS,AMS ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( Const - RRS ) ) ) ) ),( ( RRS * PN ) + ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MUM / RRSe ) - Min( MUM ,( RRSe / CS ) ) ) ),( ( Max( MUM,MUC ) * MUR ) - ( Max( MUR,RCSe ) / RCSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7044967880085653, "obj2": 0.2268559201697283}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),BR ) ) * ( Min( Max( DDR,Const ) ,FirstVNF_RAM ) * MDR ) ) )", "choosing": "( Max( ( MUC + ( ( Max( MUC,CS ) + CS ) / RCSe ) ),RRSe ) + RCSe )", "obj1": 0.7430406852248393, "obj2": 0.13371762635183038}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ) ) ) - ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( PN - PN ) / ( ACS - DDR ) ) ,( FirstVNF_RAM / AMS ) ) ),( ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( MUC + CS ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.24857806303828764}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8993576017130621, "obj2": 0.049740101631168404}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS * PN ) ) * Min( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,AMS ) + MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( AMS - MDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2523023165917158}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RMSe - MUC ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( ( RMSe - MUC ) ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11279472803562372}, {"determining": "( ( ( FirstVNF_CPU * AMS ) - MDR ) - ( MDR - FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + Max( Max( RRSe,Max( DS,CS ) ),( Min( MUM ,( RRSe / ( DS / Max( MUC,CS ) ) ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( ( ( RCSe / MLU ) * ( MUR + CS ) ) * Max( Min( Max( RMSe,( CS / RCSe ) ) ,RRSe ),RRSe ) ) ) * Max( MLU,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( AMS * PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS - ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / ( Max( DS,MLU ) / Max( ( RRSe - ( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7644539614561028, "obj2": 0.1201816298896912}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813554}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( ( FirstVNF_RAM * ( BR / RRS ) ) * BR ) ) )", "choosing": "( ( RCSe - RRSe ) + ( MLU / DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07784606307754015}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( RCSe ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) * ( Min( RCSe ,MLU ) * RMSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9100642398286938, "obj2": 0.042182597862364786}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),DDR ) ) * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( DS * DS ) / RCSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9079229122055674, "obj2": 0.04563393781667424}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,( AMS * FirstVNF_CPU ) ) ) )", "choosing": "( MUR + Max( ( MUC + ( MUC + MLU ) ),MUR ) )", "obj1": 0.7516059957173448, "obj2": 0.12898194153626244}, {"determining": "( ( Const - Min( ( Const / PN ) ,DDR ) ) - Min( MRS ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( MUC * RMSe ) + ( Min( RCSe ,MUM ) + RRSe ) ) + RMSe ) / MUC ) - RMSe ) / RMSe ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.9421841541755889, "obj2": 0.028277807167071834}, {"determining": "( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RRSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( ( PN * AMS ) - ( ( Min( Max( FirstVNF_CPU,AMS ) ,PN ) - FirstVNF_CPU ) / Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( MUR + Max( ( MUC + ( MUC + ( DS / RCSe ) ) ),MUR ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / MDR ) - ( Min( Max( Max( MRS,BR ),( MDR * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_RAM + Min( ( FirstVNF_CPU - RRS ) ,ARS ) ) ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - Min( RCSe ,MUM ) ) ,Min( MUM ,RCSe ) ),( Min( MUC ,RMSe ) / Max( RRSe,( MUM * ( Min( MUR ,( DS - DS ) ) * RMSe ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06899865054579847}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) * ACS ) + FirstVNF_CPU_Server ) - ( ( ARS + FirstVNF_Mem_Server ) - MDR ) )", "choosing": "( ( ( ( Max( MUR,CS ) / RMSe ) - ( ( RRSe + RMSe ) * MLU ) ) / ( DS * DS ) ) - ( ( ( MUR / Min( MUC ,( DS + RRSe ) ) ) - Max( MUR,( Max( RCSe,( ( MLU / MUM ) / MUC ) ) / ( CS / MUM ) ) ) ) / RRSe ) )", "obj1": 0.8950749464668094, "obj2": 0.052644887889094}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,Min( ( AMS - MDR ) ,FirstVNF_CPU ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10127342261986055}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( MUR * ( MUC - CS ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.961456102783726, "obj2": 0.01719648705599139}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.9678800856531049, "obj2": 0.0160111954658079}, {"determining": "( Const * ( AMS * ( FirstVNF_Mem * ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUR / MLU ) / CS ) / RMSe ) - MUR ) + ( MUM / DS ) ) + DS ),( ( RCSe - RRSe ) - RRSe ) ) + ( ( DS * MUM ) * ( MUC + MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.21563736371911155}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( AMS - MDR ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( Min( ( FirstVNF_Mem * ACS ) ,Max( FirstVNF_RAM,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem / DDR ) - AMS ) )", "choosing": "( ( Max( RCSe,RRSe ) + Max( ( ( ( ( Min( MUC ,MLU ) / Max( MUR,CS ) ) - MUR ) / ( DS * DS ) ) + MUM ),( RRSe - ( RCSe - ( MUM * MUM ) ) ) ) ) - ( ( MUC + ( ( MLU - DS ) + MUC ) ) * DS ) )", "obj1": 0.7494646680942184, "obj2": 0.13107027246525454}, {"determining": "( ( Min( ( ( AMS - MDR ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUC + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.9464668094218416, "obj2": 0.026668665351953794}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.8822269807280514, "obj2": 0.05876858374494023}, {"determining": "( Max( RRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem_Server ) ) - ( ( ARS + FirstVNF_Mem_Server ) * ( ARS - ( FirstVNF_CPU / ( Min( Max( ACS,BR ) ,Max( RRS,MDR ) ) + MRS ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MLU ) - Max( Min( ( ( ( MUC * MUR ) + CS ) * Min( ( DS / Max( CS,( MUM * RMSe ) ) ) ,CS ) ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( AMS - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7558886509635975, "obj2": 0.12503991975844114}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( FirstVNF_Mem + FirstVNF_RAM ) ) ),MDR ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( MUC / Min( ( MLU - ( RCSe / DS ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) ) + ( ( MUM - MUR ) / DS ) )", "obj1": 0.8244111349036403, "obj2": 0.0884336165862528}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - AMS ) / ( DDR + ACS ) ) - ACS ) * RRS ) - ( Const * Max( DDR,( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( ( RCSe - RRSe ) - Min( MUM ,( ( Max( MUR,DS ) / Min( MLU ,RMSe ) ) / CS ) ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - Min( ( RRSe + RRSe ) ,( RCSe - RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.854389721627409, "obj2": 0.07303396728558285}, {"determining": "( ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) * ( BR + PN ) ) ) ) / ( ARS - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( Max( Min( CS ,MLU ),RCSe ) / ( RCSe * ( ( ( Max( ( MUM * RMSe ),Max( RRSe,RRSe ) ) - MUM ) + MUR ) / CS ) ) ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),( ( MLU - MUR ) - ( MLU + RRSe ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.21461479377738069}, {"determining": "( ( ( Min( Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_RAM ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUC,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05744155725315872}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( RCSe ,MUM ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Max( Min( ( ARS * MRS ) ,FirstVNF_Mem ),Max( CRS,BR ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( ( CS * DS ) ,Max( Max( ( Max( ( MUC / ( RRSe / MUC ) ),( RMSe * Max( MUC,RMSe ) ) ) / ( DS * MUR ) ),MUM ),( Max( RMSe,( RMSe / MUC ) ) + Min( MUR ,( RCSe + MLU ) ) ) ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03395123801292318}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * Max( Max( ( MDR / BR ),AMS ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( DS * DS ) / ( Max( ( MUM / RRSe ),Min( RCSe ,MUM ) ) - DS ) ) + DS ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8115631691648822, "obj2": 0.09598555173912487}, {"determining": "( ( AMS - MDR ) - Min( Max( ( ARS * Min( Max( ( FirstVNF_CPU * Max( FirstVNF_RAM,RRS ) ),FirstVNF_Mem_Server ) ,( FirstVNF_Mem / ARS ) ) ),MRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Max( Min( ( MLU + RCSe ) ,( MLU - RMSe ) ),( Max( MUM,MLU ) - MUR ) ) - Min( DS ,Max( ( ( ( DS * DS ) / ( Min( Max( MUR,CS ) ,Max( MUR,RCSe ) ) - MUR ) ) + DS ),( RRSe - ( DS / MUR ) ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09363019919441877}, {"determining": "( ( AMS - Max( CRS,( MDR * FirstVNF_CPU ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ) - Max( RRSe,Min( ( ( ( RRSe * ( MUR - MUC ) ) / RMSe ) - RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07598522542439089}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( Max( RMSe,( MLU * MUM ) ) - ( RMSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289541}, {"determining": "( ( AMS * Max( ( Max( Max( RRS,RRS ),( FirstVNF_Mem_Server + Min( Const ,( CRS * PN ) ) ) ) * FirstVNF_CPU ),( MRS / ACS ) ) ) - ( Const - MDR ) )", "choosing": "Max( ( DS + ( ( ( Min( ( RRSe * ( RRSe + MUR ) ) ,RRSe ) + Min( MLU ,( MLU * MUM ) ) ) + MUC ) / DS ) ),( RMSe * Max( RRSe,RCSe ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10425854157185589}, {"determining": "( ( AMS - MDR ) - ( ( ARS + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "Max( Max( ( ( RMSe - ( RRSe + CS ) ) / RCSe ),Max( ( ( MUR + ( DS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8950749464668094, "obj2": 0.052644887889094}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.13159541010164097}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( ( MLU * ( Max( RMSe,( ( MUM + RRSe ) * Max( Min( ( MUR / MUC ) ,( MLU + DS ) ),MUC ) ) ) / RRSe ) ) + ( RCSe / DS ) )", "obj1": 0.7708779443254818, "obj2": 0.11426194865883806}, {"determining": "( ( RRS - MDR ) - ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( ( ( Max( RRS,Const ) / Min( ( CRS / DDR ) ,( FirstVNF_Mem - PN ) ) ) * DDR ) / ( ( BR + RRS ) / ( MDR - DDR ) ) ) ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( ( ( MLU - MUM ) - MLU ) - CS ) + Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.12165350625499835}, {"determining": "( ( AMS - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,MDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / RCSe ),Max( MUR,CS ) )", "obj1": 0.9336188436830836, "obj2": 0.03297818150938453}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( Max( ( FirstVNF_RAM * FirstVNF_CPU ),FirstVNF_RAM_Server ),( BR - Const ) ) ) * MDR ) )", "choosing": "( Max( ( MUR * ( ( Max( RCSe,RCSe ) * MLU ) + ( RRSe * MUR ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7687366167023555, "obj2": 0.11505920140957938}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004175402938934589}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / ( Max( MUM,( Min( MLU ,( MUR / RMSe ) ) + RRSe ) ) + RCSe ) ) / Max( RCSe,CS ) ) - ( Min( MUC ,MUR ) + ( ( ( ( ( DS / CS ) + MUM ) * ( MUC * Max( RCSe,( DS / MUM ) ) ) ) + MUC ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( AMS - Max( CRS,( MDR * FirstVNF_CPU ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ) - Max( RRSe,Min( ( ( ( RRSe * ( MUR - MUC ) ) / RMSe ) - RMSe ) ,( MLU + MUR ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07598522542439089}, {"determining": "( ( ( Max( RRS,Const ) / Max( FirstVNF_RAM_Server,( Const - PN ) ) ) - ( ( RRS * Max( AMS,Min( Max( FirstVNF_RAM_Server,MRS ) ,FirstVNF_RAM ) ) ) + ( Min( PN ,PN ) / FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - Max( Min( Min( ( RMSe / ( MUR - Min( Min( CS ,RRSe ) ,RMSe ) ) ) ,MLU ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ),CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Min( Const ,AMS ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8029978586723768, "obj2": 0.09833931033267909}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + FirstVNF_Mem ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( Const + DDR ) * MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) ) + ( ( ( ( CS * MUM ) / RMSe ) - MUR ) / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.15285475048292402}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ),CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( Min( ( AMS - ACS ) ,( ( MRS - ( Max( PN,( CRS + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),( ( ( MUM - MUR ) / Max( ( MUM + ( MUR * MUC ) ),( MUC - MUM ) ) ) - ( RMSe * ( RMSe * RCSe ) ) ) ),Max( Min( ( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.974304068522484, "obj2": 0.0129725446475075}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( Min( ( MRS / ACS ) ,( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS - FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * Max( Min( FirstVNF_Mem ,AMS ),MDR ) ) )", "choosing": "Max( ( Max( RRSe,CS ) / ( ( MUR / ( MUR * RMSe ) ) * CS ) ),Min( RCSe ,MUC ) )", "obj1": 0.7730192719486081, "obj2": 0.11298624251978504}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( Min( ( MDR + FirstVNF_CPU_Server ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) - Min( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) ,Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( CS / ( ( MUR / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - ( RRSe / ( Min( MUM ,( RRSe / ( RMSe - DS ) ) ) * DS ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004175402938934589}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09698243690791908}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( ( ( MRS * FirstVNF_Mem ) + ACS ) + MDR ) / FirstVNF_CPU ) ) ) - ( MRS + DDR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( ( MUC - CS ) + RMSe ) / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( ( Min( FirstVNF_RAM ,( ( AMS - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) - ( DDR / ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ) ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) - ( AMS * MDR ) )", "choosing": "Min( Min( ( Max( MUR,MUC ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / MLU ) * MLU ) ) ) ,( RMSe - MUC ) )", "obj1": 0.9957173447537473, "obj2": 0.0022145649724243325}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( Min( Min( ( CRS - ( MDR * ARS ) ) ,ACS ) ,FirstVNF_CPU ) - ( DDR / Min( Const ,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( CS ,( RRSe + CS ) ) ) ),Min( RRSe ,Min( Max( DS,CS ) ,MLU ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08952079054405525}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUR * ( ( Max( RCSe,RCSe ) * MLU ) + ( RRSe * MUR ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.9357601713062098, "obj2": 0.03193584362073}, {"determining": "( ( Const - ( Min( Max( ( PN * FirstVNF_CPU ),( ARS * FirstVNF_CPU ) ) ,( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) ) * MDR ) ) - Min( MRS ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUR + RMSe ) / MUC ) - Max( Max( ( RMSe + MLU ),( Max( MLU,MUR ) + CS ) ),MUR ) ) / DS ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.9486081370449678, "obj2": 0.0257453252573843}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * Min( PN ,FirstVNF_Mem ) ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) ) )", "choosing": "( ( ( ( CS / ( ( MUC * RCSe ) / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS / MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7537473233404711, "obj2": 0.12628522036059886}, {"determining": "( ( ARS - ( BR * FirstVNF_Mem_Server ) ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.7237687366167024, "obj2": 0.21193013427678536}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( MUR + ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09698243690791908}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}], "16": [{"determining": "( ( ( ( Min( Max( Const,DDR ) ,( ( ACS * ( FirstVNF_RAM_Server * ARS ) ) / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( MDR - DDR ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( ( ( ( CS / ( MUR + Max( RCSe,RMSe ) ) ) + DS ) * Max( RCSe,RMSe ) ) - ( Min( ( ( ( RCSe * DS ) - Min( MUM ,RMSe ) ) - ( Min( RMSe ,MUC ) * Min( CS ,MUM ) ) ) ,MUR ) / RMSe ) ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( AMS * PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS - ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / ( MUC / ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,Const ) / Max( ( FirstVNF_RAM * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) - Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( MUM * ( MLU / DS ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,Max( RRS,CRS ) ) * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) / ( FirstVNF_RAM - DDR ) ) / Max( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) + ( FirstVNF_CPU * Min( DDR ,RRS ) ) ),( ( FirstVNF_RAM_Server - ARS ) + FirstVNF_RAM ) ) ) * Const )", "choosing": "( Min( MUM ,Max( Min( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) ,Min( RCSe ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( Max( CS,( RRSe + MUM ) ) ,RCSe ),RCSe ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( ARS - ( BR * FirstVNF_Mem_Server ) ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.7237687366167024, "obj2": 0.21193013427678536}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) ) + ( ( MUM - MUR ) / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.15285475048292402}, {"determining": "( ( AMS * MDR ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,Max( ( MUC + ( DS / RCSe ) ),MUR ) ) / RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23340343471603722}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( ( FirstVNF_CPU_Server / RRS ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( Min( RRSe ,Min( Max( ( MUR * MLU ),( RCSe * MLU ) ) ,Max( MUC,( MUR * RMSe ) ) ) ) - ( CS * RRSe ) ) ,( Max( Max( Min( ( Max( CS,MLU ) - DS ) ,( RRSe - ( MUC / MLU ) ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6852248394004282, "obj2": 0.24748689598790316}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.7794432548179872, "obj2": 0.10883097704686485}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.892933618843683, "obj2": 0.05201884430015807}, {"determining": "( ( ( FirstVNF_CPU * AMS ) - ( FirstVNF_Mem_Server * BR ) ) / ( MDR - Max( ( MDR / FirstVNF_RAM ),ARS ) ) )", "choosing": "( ( ( RCSe * ( ( CS + MUR ) / CS ) ) / Max( Min( MLU ,RRSe ),RCSe ) ) - ( ( ( Min( Min( ( RRSe * MUR ) ,MUM ) ,MLU ) * MLU ) * ( MUR + MUM ) ) / ( MUM + MUC ) ) )", "obj1": 0.708779443254818, "obj2": 0.21885305322418647}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.8479657387580299, "obj2": 0.07573633466876611}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / RCSe ),( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) )", "obj1": 0.9571734475374732, "obj2": 0.02108386724587766}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) ) * MDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / ( Max( DS,MLU ) / Max( ( RRSe - ( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7323340471092077, "obj2": 0.14034613412901537}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( AMS - MDR ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.7494646680942184, "obj2": 0.1283615598739812}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7558886509635975, "obj2": 0.12503991975844114}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,Const ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( ( MUM / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10545447007453437}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( ( ( RCSe / MLU ) * ( MUR + CS ) ) * Max( Min( Max( RMSe,( CS / RCSe ) ) ,RRSe ),RRSe ) ) ) * Max( MLU,CS ) ) + ( RRSe + CS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( Max( MRS,Max( CRS,ARS ) ),FirstVNF_RAM ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,( ( RMSe - MUC ) / RCSe ) ) ) + MUM ) / RRSe ) ) + ( ( MUM - MUR ) / DS ) )", "obj1": 0.728051391862955, "obj2": 0.14953839079217787}, {"determining": "( ( AMS - ( MDR / FirstVNF_Mem_Server ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.054768843959514195}, {"determining": "( ( Max( ARS,FirstVNF_CPU_Server ) / BR ) - ( AMS - MDR ) )", "choosing": "( ( ( MUR / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.7451820128479657, "obj2": 0.13094246871059553}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.8822269807280514, "obj2": 0.05876858374494023}, {"determining": "( ( AMS - MDR ) - DDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ) ),RRSe ) ),( Max( ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ),CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.060711975994381114}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ) ) ) - ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( PN - PN ) / ( ACS - DDR ) ) ,( FirstVNF_RAM / AMS ) ) ),( ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( MRS - FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,Max( DDR,ACS ) ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( MUC + CS ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.24857806303828764}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( PN - ( DDR / Max( Const,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.69593147751606, "obj2": 0.23204361203765886}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - Min( Max( ARS,MRS ) ,BR ) )", "choosing": "( MUR + ( RCSe * MLU ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS * PN ) ) * Min( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,AMS ) + MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( AMS - MDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2523023165917158}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,Min( ( AMS - MDR ) ,FirstVNF_CPU ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10127342261986055}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( RMSe - MUC ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( ( RMSe - MUC ) ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.7751605995717344, "obj2": 0.11279472803562372}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) * ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUR * ( ( Max( RCSe,RCSe ) * MLU ) + ( RRSe * MUR ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.6766595289079229, "obj2": 0.2529141764232039}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( FirstVNF_Mem_Server + Min( Const ,( CRS * PN ) ) ) ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.961456102783726, "obj2": 0.01719648705599139}, {"determining": "( ( DDR * ( ( FirstVNF_RAM_Server + PN ) / FirstVNF_CPU ) ) - ( AMS - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( MLU / MUM ) - Min( MUM ,( RRSe + CS ) ) ) + ( ( ( ( MUM - RRSe ) - RMSe ) - MUR ) / ( MUM - Max( ( CS / RMSe ),Min( CS ,RMSe ) ) ) ) ),( Min( MLU ,Min( RRSe ,Max( MUR,MUM ) ) ) - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( RCSe - ( MUM * MUC ) ) ),RRSe ) )", "obj1": 0.7644539614561028, "obj2": 0.12012501587148164}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) ) * MDR ) )", "choosing": "( Max( ( MUC + ( DS / ( MUC / ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7323340471092077, "obj2": 0.14034613412901537}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / MDR ) - ( Min( Max( Max( MRS,BR ),( MDR * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_RAM + Min( ( FirstVNF_CPU - RRS ) ,ARS ) ) ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - Min( RCSe ,MUM ) ) ,Min( MUM ,RCSe ) ),( Min( MUC ,RMSe ) / Max( RRSe,( MUM * ( Min( MUR ,( DS - DS ) ) * RMSe ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06899865054579847}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( MRS,BR ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ),MUR ) + Max( RCSe,MUC ) )", "obj1": 0.8715203426124197, "obj2": 0.0634570094928748}, {"determining": "( ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) * ( BR + PN ) ) ) ) / ( ARS - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( Max( Min( CS ,MLU ),RCSe ) / ( RCSe * ( ( ( Max( ( MUM * RMSe ),Max( RRSe,RRSe ) ) - MUM ) + MUR ) / CS ) ) ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),( ( MLU - MUR ) - ( MLU + RRSe ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.21461479377738069}, {"determining": "( ( Const / ( ( ARS * FirstVNF_CPU ) + ( ACS - ( ( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( ( MUR - RCSe ) / CS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9486081370449678, "obj2": 0.025241825986523175}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813554}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * MDR ) ) + Max( Min( CRS ,( ( AMS - FirstVNF_Mem ) / ARS ) ),BR ) ) - ( Max( DDR,( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( RMSe / RRSe ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),DDR ) ) * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( DS * DS ) / RCSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9079229122055674, "obj2": 0.04563393781667424}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( MUR + ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09364891406925226}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),DDR ) ) * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - Max( Max( ( PN - ACS ),( PN - ( DDR / Max( Const,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( DS * DS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( DS * DS ) / RCSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9357601713062098, "obj2": 0.031829663637183585}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,ACS ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( RRSe - ( MUR * ( MUC - CS ) ) ) ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( Const - Min( ( Const / PN ) ,DDR ) ) - Min( MRS ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( MUC * RMSe ) + ( Min( RCSe ,MUM ) + RRSe ) ) + RMSe ) / MUC ) - RMSe ) / RMSe ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.9421841541755889, "obj2": 0.028277807167071834}, {"determining": "( ( Min( ( ( AMS - MDR ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUC + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.9464668094218416, "obj2": 0.026668665351953794}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + ( CS - RMSe ) ) * ( Min( RRSe ,MLU ) * MLU ) ),RRSe ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08952079054405525}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.9678800856531049, "obj2": 0.0160111954658079}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),BR ) ) * ( Min( Max( DDR,Const ) ,FirstVNF_RAM ) * MDR ) ) )", "choosing": "( Max( ( MUC + ( ( Max( MUC,CS ) + CS ) / RCSe ) ),RRSe ) + RCSe )", "obj1": 0.7430406852248393, "obj2": 0.13371762635183038}, {"determining": "( Const * ( AMS * ( FirstVNF_Mem * ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUR / MLU ) / CS ) / RMSe ) - MUR ) + ( MUM / DS ) ) + DS ),( ( RCSe - RRSe ) - RRSe ) ) + ( ( DS * MUM ) * ( MUC + MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.21563736371911155}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( ( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9143468950749465, "obj2": 0.04158575423868713}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( ( MUC / ( ( ( MUR + RMSe ) / MUC ) - MUR ) ) ,RMSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07172755160375886}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( ( RRSe / CS ) / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.9828693790149893, "obj2": 0.008616381131330347}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( ( FirstVNF_RAM * ( BR / RRS ) ) * BR ) ) )", "choosing": "( ( RCSe - RRSe ) + ( MLU / DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07784606307754015}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}, {"determining": "( ( AMS - ( MDR / FirstVNF_Mem_Server ) ) - Max( Max( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ),BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) ) - Max( RRSe,Min( MUM ,( MLU + MUR ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010419756490058243}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Min( ( AMS - MDR ) ,( AMS * ( BR / ( FirstVNF_CPU_Server * ARS ) ) ) ) ,MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( ( RRSe + CS ) / Min( ( MLU * CS ) ,RMSe ) ) )", "obj1": 0.9100642398286938, "obj2": 0.042182597862364786}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8993576017130621, "obj2": 0.049740101631168404}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( MRS,Max( AMS,RRS ) ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Max( ( CS * DS ),Max( Max( ( MUR / ( ( RCSe * RRSe ) / MUR ) ),MUM ),CS ) ) - Min( MUM ,Min( RCSe ,MUM ) ) )", "obj1": 0.9014989293361885, "obj2": 0.048081993796259305}, {"determining": "( Max( RRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem_Server ) ) - ( ( ARS + FirstVNF_Mem_Server ) * ( ARS - ( FirstVNF_CPU / ( Min( Max( ACS,BR ) ,Max( RRS,MDR ) ) + MRS ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MLU ) - Max( Min( ( ( ( MUC * MUR ) + CS ) * Min( ( DS / Max( CS,( MUM * RMSe ) ) ) ,CS ) ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( Min( Max( DDR,AMS ) ,Max( Max( MRS,Max( CRS,ARS ) ),FirstVNF_RAM ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) )", "choosing": "Min( Min( ( Min( RCSe ,RMSe ) / ( MUC / MLU ) ) ,Min( Max( MUM,RMSe ) ,( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / MLU ) * MUC ) ) ) ,( RMSe - MUC ) )", "obj1": 0.728051391862955, "obj2": 0.14953839079217787}, {"determining": "( ( RRS - MDR ) - ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( ( ( Max( RRS,Const ) / Min( ( CRS / DDR ) ,( FirstVNF_Mem - PN ) ) ) * DDR ) / ( ( BR + RRS ) / ( MDR - DDR ) ) ) ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( ( ( MLU - MUM ) - MLU ) - CS ) + Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.12165350625499835}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( FirstVNF_Mem_Server + ( ACS - ARS ) ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / Min( ( RCSe / ( RCSe + ( MUM * MLU ) ) ) ,Max( MLU,Max( DS,( MUC - RCSe ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / ( Max( MUM,( Min( MLU ,( MUR / RMSe ) ) + RRSe ) ) + RCSe ) ) / Max( RCSe,CS ) ) - ( Min( MUC ,MUR ) + ( ( ( ( ( DS / CS ) + MUM ) * ( MUC * Max( RCSe,( DS / MUM ) ) ) ) + MUC ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.854389721627409, "obj2": 0.07303396728558285}, {"determining": "( Max( ( FirstVNF_Mem / ( Min( ACS ,FirstVNF_Mem_Server ) + DDR ) ),FirstVNF_RAM_Server ) * Max( Max( ( Min( Max( AMS,AMS ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( Const - RRS ) ) ) ) ),( ( RRS * PN ) + ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MUM / RRSe ) - Min( MUM ,( RRSe / CS ) ) ) ),( ( Max( MUM,MUC ) * MUR ) - ( Max( MUR,RCSe ) / RCSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7044967880085653, "obj2": 0.2268559201697283}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / ( ( FirstVNF_CPU_Server * CRS ) * Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( ( ARS / MRS ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Max( MUC,RRSe ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( Max( Max( FirstVNF_RAM_Server,( ( AMS - MDR ) - ( AMS * FirstVNF_CPU ) ) ),FirstVNF_Mem ) * Max( ( CRS / ( Max( FirstVNF_CPU,Min( ( MDR + BR ) ,Min( ARS ,AMS ) ) ) - Min( CRS ,ARS ) ) ),AMS ) ) )", "choosing": "( Min( Min( ( Min( ( RMSe - CS ) ,Max( RCSe,MUR ) ) + DS ) ,MLU ) ,MUM ) - Max( RRSe,Min( MUM ,( MLU + MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - AMS ) / ( DDR + ACS ) ) - ACS ) * RRS ) - ( Const * Max( DDR,( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( ( RCSe - RRSe ) - Min( MUM ,( ( Max( MUR,DS ) / Min( MLU ,RMSe ) ) / CS ) ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - Min( ( RRSe + RRSe ) ,( RCSe - RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( ( Min( Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_RAM ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUC,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05744155725315872}, {"determining": "( ( Min( ( AMS - ACS ) ,( ( MRS - ( Max( PN,( CRS + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),( ( ( MUM - MUR ) / Max( ( MUM + ( MUR * MUC ) ),( MUC - MUM ) ) ) - ( RMSe * ( RMSe * RCSe ) ) ) ),Max( Min( ( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.974304068522484, "obj2": 0.0129725446475075}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( RCSe ,MUM ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Max( Min( ( ARS * MRS ) ,FirstVNF_Mem ),Max( CRS,BR ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( ( CS * DS ) ,Max( Max( ( Max( ( MUC / ( RRSe / MUC ) ),( RMSe * Max( MUC,RMSe ) ) ) / ( DS * MUR ) ),MUM ),( Max( RMSe,( RMSe / MUC ) ) + Min( MUR ,( RCSe + MLU ) ) ) ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03395123801292318}, {"determining": "( ( AMS - MDR ) - Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.815845824411135, "obj2": 0.09259371974952162}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004175402938934589}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( Min( Min( ( CRS - ( MDR * ARS ) ) ,ACS ) ,FirstVNF_CPU ) - ( DDR / Min( Const ,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( CS ,( RRSe + CS ) ) ) ),Min( RRSe ,Min( Max( DS,CS ) ,MLU ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "Min( ( MUR + MLU ) ,( ( Min( MUM ,Max( ( ( MLU / CS ) + ( RMSe * RRSe ) ),( Max( RMSe,( MLU * MUM ) ) - ( RMSe - RCSe ) ) ) ) - Max( RRSe,RRSe ) ) - MLU ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289541}, {"determining": "( ( Const / ( ( ARS * FirstVNF_CPU ) + ( ACS - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9528907922912205, "obj2": 0.023045945952631746}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( ( MLU * ( Max( RMSe,( ( MUM + RRSe ) * Max( Min( ( MUR / MUC ) ,( MLU + DS ) ),MUC ) ) ) / RRSe ) ) + ( RCSe / DS ) )", "obj1": 0.7708779443254818, "obj2": 0.11426194865883806}, {"determining": "( ( Const / ( ( ARS * FirstVNF_CPU ) + ( ACS - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9528907922912205, "obj2": 0.023045945952631746}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) ) * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.12165350625499835}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09698243690791908}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) ) + ( ( MUM - MUR ) / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.15285475048292402}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( ( PN * AMS ) - ( ( Min( Max( FirstVNF_CPU,AMS ) ,PN ) - FirstVNF_CPU ) / Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( BR / RRS ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( MUC + CS ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06199009889480055}, {"determining": "( ( Const / ( ( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) + ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) - ( ( Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004175402938934589}, {"determining": "( ( ( ( PN - ( ( ( FirstVNF_CPU * PN ) + ( ( AMS - MDR ) / FirstVNF_CPU_Server ) ) / ARS ) ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - FirstVNF_Mem_Server ),( ( DDR / Max( Const,( ( ARS / DDR ) - PN ) ) ) - PN ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / CS ) * Min( MUM ,( ( RMSe + MUC ) - ( MUR * CS ) ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.69593147751606, "obj2": 0.23204361203765886}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8051391862955032, "obj2": 0.09707765836720547}, {"determining": "( ( AMS - MDR ) - Max( Max( MRS,PN ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / MUM ),MUM ),CS ) ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( ( ( MRS * FirstVNF_Mem ) + ACS ) + MDR ) / FirstVNF_CPU ) ) ) - ( MRS + DDR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( ( MUC - CS ) + RMSe ) / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( Min( ( MDR - AMS ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( ARS * ( PN * FirstVNF_RAM ) ) / AMS ) ) )", "choosing": "Max( ( MLU / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( Max( MUM,CS ) ,RMSe ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09131285931373129}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * Min( PN ,FirstVNF_Mem ) ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) ) )", "choosing": "( ( ( ( CS / ( ( MUC * RCSe ) / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS / MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7537473233404711, "obj2": 0.12628522036059886}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( MUR * ( MUC - CS ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.961456102783726, "obj2": 0.01719648705599139}, {"determining": "( ( AMS - ( ( ( PN * AMS ) - ( ( Min( Max( FirstVNF_CPU,AMS ) ,PN ) - FirstVNF_CPU ) / Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,Min( ( AMS - MDR ) ,FirstVNF_CPU ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( MUC * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}], "17": [{"determining": "( ( Min( ( ( MRS + MDR ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUC + ( DS / ( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,CS ) / RMSe ) ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( Max( Const,DDR ) ,( ( ACS * ( FirstVNF_RAM_Server * ARS ) ) / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( MDR - DDR ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( ( ( ( CS / ( MUR + Max( RCSe,RMSe ) ) ) + DS ) * Max( RCSe,RMSe ) ) - ( Min( ( ( ( RCSe * DS ) - Min( MUM ,RMSe ) ) - ( Min( RMSe ,MUC ) * Min( CS ,MUM ) ) ) ,MUR ) / RMSe ) ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( AMS * PN ) - ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS - ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / ( MUC / ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,Max( RRS,CRS ) ) * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) / ( FirstVNF_RAM - DDR ) ) / Max( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) + ( FirstVNF_CPU * Min( DDR ,RRS ) ) ),( ( FirstVNF_RAM_Server - ARS ) + FirstVNF_RAM ) ) ) * Const )", "choosing": "( Min( MUM ,Max( Min( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) ,Min( RCSe ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( Max( CS,( RRSe + MUM ) ) ,RCSe ),RCSe ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7237687366167024, "obj2": 0.1433983902628017}, {"determining": "( ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) * ( BR + PN ) ) ) ) / ( ARS - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( ( Max( Min( CS ,MLU ),RCSe ) / ( RCSe * ( ( ( Max( ( MUM * RMSe ),Max( RRSe,RRSe ) ) - MUM ) + MUR ) / CS ) ) ) - Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ),( ( MLU - MUR ) - ( MLU + RRSe ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.21461479377738069}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( ( PN - Min( FirstVNF_CPU_Server ,RRS ) ),BR ) - ( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( ( MRS + Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Max( MUR,DS ),( MUR + Max( ( MUC - ( DS / RCSe ) ),MUR ) ) )", "obj1": 0.8993576017130621, "obj2": 0.047852485292546196}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( FirstVNF_CPU_Server * ARS ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / ( ( RRSe + CS ) / Min( ( MLU * CS ) ,RMSe ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2435483242642565}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "( ( AMS * MDR ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,Max( ( MUC + ( DS / RCSe ) ),MUR ) ) / RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23340343471603722}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / RCSe ) ),MUR ) * ( Min( RCSe ,MLU ) * RMSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.892933618843683, "obj2": 0.05201884430015805}, {"determining": "( ( ( ( PN - CRS ) + ( AMS * FirstVNF_CPU ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( Const - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RCSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.6723768736616702, "obj2": 0.26227608605064323}, {"determining": "( ( ( FirstVNF_CPU * AMS ) - ( FirstVNF_Mem_Server * BR ) ) / ( MDR - Max( ( MDR / FirstVNF_RAM ),ARS ) ) )", "choosing": "( ( ( RCSe * ( ( CS + MUR ) / CS ) ) / Max( Min( MLU ,RRSe ),RCSe ) ) - ( ( ( Min( Min( ( RRSe * MUR ) ,MUM ) ,MLU ) * MLU ) * ( MUR + MUM ) ) / ( MUM + MUC ) ) )", "obj1": 0.708779443254818, "obj2": 0.21885305322418647}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( FirstVNF_RAM,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( ( RRS + ARS ) - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( ( Max( MLU,( MUC / CS ) ) - RCSe ),( Max( RRSe,RMSe ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( CS,RRSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.2554153915046926}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) ) * MDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( ( ( CS / ( Max( DS,MLU ) / Max( ( RRSe - ( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.7323340471092077, "obj2": 0.14034613412901537}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MLU ),MUR ) + ( MLU - DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.7794432548179872, "obj2": 0.10883097704686485}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / ( FirstVNF_Mem + RRS ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( FirstVNF_CPU * ( MRS + Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( RCSe ,MUM ),( Max( RRSe,CS ) / Min( ( Max( MUM,Max( MLU,Min( Min( RMSe ,RCSe ) ,MUM ) ) ) / Min( CS ,( RRSe * MUR ) ) ) ,RMSe ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02096252348619143}, {"determining": "( ( MDR - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( FirstVNF_Mem_Server + Min( Const ,( CRS * PN ) ) ) ) * FirstVNF_CPU ),( ( ( Max( RRS,Const ) / Max( ( MDR / BR ),( MDR - FirstVNF_RAM_Server ) ) ) * DDR ) / ACS ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( Max( ( RRSe - MUR ),Min( MUM ,MUC ) ) / RMSe ) - MUR ) / MUC ) ) / ( Max( CS,MUR ) / MUM ) ) - Max( ( MUC + MUR ),( MUR * RRSe ) ) )", "obj1": 0.9678800856531049, "obj2": 0.01438786674851088}, {"determining": "( ( Const / ( ( ARS * FirstVNF_CPU ) + ( ACS - ( ( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) * MDR ) / Min( ( PN / FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( ( MUR - RCSe ) / CS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9486081370449678, "obj2": 0.02524182598652317}, {"determining": "( ( ( Min( DDR ,AMS ) * ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) - ( AMS - MDR ) )", "choosing": "Max( Min( ( RRSe - ( MUR / Min( RMSe ,Min( DS ,RRSe ) ) ) ) ,( Max( Max( Min( ( MLU - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.13094273579917373}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( ( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9143468950749465, "obj2": 0.04158575423868713}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),DDR ) ) * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( DS * DS ) / RCSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9079229122055674, "obj2": 0.04563393781667424}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ) ) ) - ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS * PN ) ) * Min( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,AMS ) + MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( AMS - MDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2523023165917158}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( PN - ( DDR / Max( Const,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.69593147751606, "obj2": 0.23204361203765886}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( DDR,Max( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),PN ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( FirstVNF_Mem_Server + Min( Const ,( CRS * PN ) ) ) ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.961456102783726, "obj2": 0.01719648705599139}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8051391862955032, "obj2": 0.09707765836720547}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( Max( FirstVNF_RAM_Server,ACS ),Min( ( AMS - MDR ) ,FirstVNF_CPU ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,( MLU / MUM ) ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10124808203307845}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( CRS - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( MLU,MUM ),CS ) ) )", "obj1": 0.8865096359743041, "obj2": 0.055911355994627036}, {"determining": "( ( AMS - ( MRS + ( Const * FirstVNF_CPU_Server ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * BR ),( ACS / MRS ) ) ) )", "choosing": "( Max( ( RMSe * ( Min( RCSe ,Max( Min( ( RRSe * RMSe ) ,MUM ),RCSe ) ) / ( ( CS - Max( ( MUC + CS ),Min( MUC ,RRSe ) ) ) - MUM ) ) ),MUR ) + ( ( ( MUR * ( MUC - CS ) ) - MUR ) / ( DS * MUM ) ) )", "obj1": 0.961456102783726, "obj2": 0.01719648705599139}, {"determining": "( ( DDR * ( ( FirstVNF_RAM_Server + PN ) / FirstVNF_CPU ) ) - ( AMS - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( MLU / MUM ) - Min( MUM ,( RRSe + CS ) ) ) + ( ( ( ( MUM - RRSe ) - RMSe ) - MUR ) / ( MUM - Max( ( CS / RMSe ),Min( CS ,RMSe ) ) ) ) ),( Min( MLU ,Min( RRSe ,Max( MUR,MUM ) ) ) - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( RCSe - ( MUM * MUC ) ) ),RRSe ) )", "obj1": 0.7644539614561028, "obj2": 0.12012501587148164}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10173942082582317}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / MDR ) - ( Min( Max( Max( MRS,BR ),( MDR * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_RAM + Min( ( FirstVNF_CPU - RRS ) ,ARS ) ) ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - Min( RCSe ,MUM ) ) ,Min( MUM ,RCSe ) ),( Min( MUC ,RMSe ) / Max( RRSe,( MUM * ( Min( MUR ,( DS - DS ) ) * RMSe ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06899865054579847}, {"determining": "( ( AMS - MDR ) - Max( Max( MRS,PN ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / MUM ),MUM ),CS ) ) )", "obj1": 0.867237687366167, "obj2": 0.06570404146348759}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( ( MUC / ( ( ( MUR + RMSe ) / MUC ) - MUR ) ) ,RMSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07172755160375886}, {"determining": "( ( Const - Min( ( Const / PN ) ,DDR ) ) - Min( MRS ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( MUC * RMSe ) + ( Min( RCSe ,MUM ) + RRSe ) ) + RMSe ) / MUC ) - RMSe ) / RMSe ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.9421841541755889, "obj2": 0.028277807167071834}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( ( FirstVNF_CPU_Server / RRS ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( Min( RRSe ,Min( Max( ( MUR * MLU ),( RCSe * MLU ) ) ,Max( MUC,( MUR * RMSe ) ) ) ) - ( CS * RRSe ) ) ,( Max( Max( Min( ( Max( CS,MLU ) - DS ) ,( RRSe - ( MUC / MLU ) ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.24814452060267198}, {"determining": "( ( MDR - Const ) - Max( Max( MRS,Max( MRS,MDR ) ),( ( AMS / Const ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / ( Max( MUM,( Min( MLU ,( MUR / RMSe ) ) + RRSe ) ) + RCSe ) ) / Max( RCSe,CS ) ) - ( Min( MUC ,MUR ) + ( ( ( ( ( DS / CS ) + MUM ) * ( MUC * Max( RCSe,( DS / MUM ) ) ) ) + MUC ) / RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007153906475650631}, {"determining": "( ( Min( ( AMS - MDR ) ,( Min( Min( DDR ,AMS ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / RMSe ) - MUR ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07684921343780914}, {"determining": "( Const * ( AMS * ( FirstVNF_Mem * ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUR / MLU ) / CS ) / RMSe ) - MUR ) + ( MUM / DS ) ) + DS ),( ( RCSe - RRSe ) - RRSe ) ) + ( ( DS * MUM ) * ( MUC + MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.21563736371911155}, {"determining": "( ( Min( ( AMS - ACS ) ,( ( MRS - ( Max( PN,( CRS + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - MDR )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),( ( ( MUM - MUR ) / Max( ( MUM + ( MUR * MUC ) ),( MUC - MUM ) ) ) - ( RMSe * ( RMSe * RCSe ) ) ) ),Max( Min( ( ( ( ( Max( RRSe,CS ) / RMSe ) - RMSe ) / RMSe ) - RMSe ) ,( MLU + MUR ) ),RRSe ) )", "obj1": 0.974304068522484, "obj2": 0.0129725446475075}, {"determining": "( ( Max( ARS,FirstVNF_CPU_Server ) / BR ) - ( AMS - MDR ) )", "choosing": "( ( ( MUR / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.7451820128479657, "obj2": 0.13094246871059553}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.7773019271948608, "obj2": 0.11024563720433676}, {"determining": "( ( AMS - MDR ) - Max( Max( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ),PN ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,Const ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( ( MUM / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10545447007453437}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02096252348619143}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),MUR ) )", "obj1": 0.8436830835117773, "obj2": 0.07583244051403508}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - Min( Max( ARS,MRS ) ,BR ) )", "choosing": "( MUR + ( RCSe * MLU ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * MDR ) ) + Max( Min( CRS ,( ( AMS - FirstVNF_Mem ) / ARS ) ),BR ) ) - ( Max( DDR,( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( RMSe / RRSe ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( ( RRSe / MUM ) ,RMSe ) ) )", "obj1": 0.9100642398286938, "obj2": 0.042182597862364786}, {"determining": "( Min( ( ( Max( ( CRS / FirstVNF_Mem_Server ),FirstVNF_CPU ) - Max( Const,ACS ) ) / Const ) ,FirstVNF_Mem ) - ( ( Max( BR,Const ) * FirstVNF_CPU ) * DDR ) )", "choosing": "( ( MUR - RMSe ) - Max( ( ( MUR + RCSe ) * ( Max( RRSe,MLU ) * MLU ) ),( ( MLU - MUR ) - ( RRSe + MLU ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.10545447007453437}, {"determining": "( Max( RRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem_Server ) ) - ( ( ARS + FirstVNF_Mem_Server ) * ( ARS - ( FirstVNF_CPU / ( Min( Max( ACS,BR ) ,Max( RRS,MDR ) ) + MRS ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MLU ) - Max( Min( ( ( ( MUC * MUR ) + CS ) * Min( ( DS / Max( CS,( MUM * RMSe ) ) ) ,CS ) ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( AMS - MDR ) - ( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) + ( MLU / DS ) )", "obj1": 0.8094218415417559, "obj2": 0.09486625596548336}, {"determining": "( ( RRS - MDR ) - ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( ( ( Max( RRS,Const ) / Min( ( CRS / DDR ) ,( FirstVNF_Mem - PN ) ) ) * DDR ) / ( ( BR + RRS ) / ( MDR - DDR ) ) ) ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( ( ( MLU - MUM ) - MLU ) - CS ) + Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.12165350625499835}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( ( FirstVNF_RAM_Server * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUC,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7323340471092077, "obj2": 0.14034613412901537}, {"determining": "( Max( ( FirstVNF_Mem / ( Min( ACS ,FirstVNF_Mem_Server ) + DDR ) ),FirstVNF_RAM_Server ) * Max( Max( ( Min( Max( AMS,AMS ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( Const - RRS ) ) ) ) ),( ( RRS * PN ) + ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MUM / RRSe ) - Min( MUM ,( RRSe / CS ) ) ) ),( ( Max( MUM,MUC ) * MUR ) - ( Max( MUR,RCSe ) / RCSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7044967880085653, "obj2": 0.2268559201697283}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) + ( MLU / DS ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7558886509635975, "obj2": 0.12503991975844114}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.8822269807280514, "obj2": 0.05876858374494023}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - AMS ) / ( DDR + ACS ) ) - ACS ) * RRS ) - ( Const * Max( DDR,( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( ( RCSe - RRSe ) - Min( MUM ,( ( Max( MUR,DS ) / Min( MLU ,RMSe ) ) / CS ) ) ) ) ) - Max( Min( ( ( ( ( ( RRSe + DS ) / MUC ) - Min( ( RRSe + RRSe ) ,( RCSe - RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) - ( Min( ( AMS - MDR ) ,( AMS + FirstVNF_CPU ) ) + MRS ) ) - ( CRS / BR ) )", "choosing": "Max( ( ( ( ( ( ( RCSe / MUM ) / RCSe ) / MUC ) * ( MUR / ( ( ( MLU + DS ) / MUM ) + RRSe ) ) ) + MUM ) / RRSe ),Min( Min( ( RMSe - MUC ) ,Max( RCSe,MUR ) ) ,DS ) )", "obj1": 0.8479657387580299, "obj2": 0.07493815982920175}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),DDR ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( ( ( DS * DS ) / RCSe ) / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) ) + ( ( MUM - MUR ) / DS ) )", "obj1": 0.9314775160599572, "obj2": 0.03368721495125549}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.7494646680942184, "obj2": 0.1283615598739812}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( ( FirstVNF_CPU_Server / RRS ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( Min( RRSe ,Min( Max( ( MUR * MLU ),( RCSe * MLU ) ) ,Max( MUC,( MUR * RMSe ) ) ) ) - ( CS * RRSe ) ) ,( Max( Max( Min( ( Max( CS,MLU ) - DS ) ,( RRSe - ( MUC / MLU ) ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.24814452060267198}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.8501070663811563, "obj2": 0.07477626648183547}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( Const - PN ) ),( MRS / Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( MUC - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RRSe / MUC ) ),( RMSe * Max( MUC,RMSe ) ) ) / ( DS * MUR ) ),MUM ),CS ) ) )", "obj1": 0.815845824411135, "obj2": 0.09242687306549209}, {"determining": "( ( ( AMS - ( Min( ( MRS + Max( CRS,ARS ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( DS / RCSe ),RRSe ) ),( Max( RRSe,CS ) / ( Min( ( MUC + MUM ) ,Min( RMSe ,MLU ) ) * MLU ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06705319605714065}, {"determining": "( ( Min( ( MDR - AMS ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) - ( Min( Max( DDR,AMS ) ,( FirstVNF_Mem + MRS ) ) * DDR ) )", "choosing": "Max( ( MLU / RCSe ),( ( ( ( ( RCSe + ( CS + ( MUR * MUM ) ) ) * Max( MUM,( RCSe / CS ) ) ) / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) )", "obj1": 0.9935760171306209, "obj2": 0.003534256582581461}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07248364942958643}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / ( ( FirstVNF_CPU_Server * CRS ) * Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( ( ARS / MRS ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Max( MUC,RRSe ) - Max( Min( ( ( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( BR * AMS ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / Min( ( MUR + MUR ) ,( CS + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - ( RCSe + ( MLU + MLU ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289541}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( AMS - MDR ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.7494646680942184, "obj2": 0.1283615598739812}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7687366167023555, "obj2": 0.11505920140957938}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,ACS ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.8822269807280514, "obj2": 0.05876858374494023}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( ( ( ACS / ACS ) + ( Const - Const ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - Const ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,RCSe ) / Max( RRSe,( RCSe / ( MUC / MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( DDR / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.0327069371119205}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625605}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( ( ( Max( RRS,Const ) / Max( Const,( Const - AMS ) ) ) * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) ) * MDR ) )", "choosing": "( Max( ( MUC + ( DS / ( MUC / Max( ( MUC / ( RRSe / MUC ) ),( RMSe * Max( MUC,RMSe ) ) ) ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7623126338329764, "obj2": 0.12165350625499835}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7558886509635975, "obj2": 0.12503991975844114}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( AMS - MDR ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( ( PN * AMS ) - ( ( Min( Max( FirstVNF_CPU,AMS ) ,PN ) - FirstVNF_CPU ) / Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,MLU ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( AMS * MDR ) - ( Min( Min( AMS ,DDR ) ,( Max( ( ( ARS * ( FirstVNF_Mem - CRS ) ) + ( Min( MDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * Const ) )", "choosing": "( ( ( RMSe / ( RMSe / RCSe ) ) - MUR ) + ( MLU / Min( RCSe ,( RCSe * Max( MUR,MUR ) ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11415241877453945}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( MRS,BR ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ),MUR ) + Max( RCSe,MUC ) )", "obj1": 0.8715203426124197, "obj2": 0.0634570094928748}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813554}, {"determining": "( ( Min( ( ( AMS - MDR ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUC + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.9464668094218416, "obj2": 0.026668665351953794}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( PN - ( DDR / Max( Const,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) ) + ( ( MUM - MUR ) / DS ) )", "obj1": 0.69593147751606, "obj2": 0.23204361203765886}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( ( ( MRS * FirstVNF_Mem ) + ACS ) + MDR ) / FirstVNF_CPU ) ) ) - ( MRS + DDR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( ( MUC - CS ) + RMSe ) / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( Min( ( ( AMS - MDR ) - PN ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUC + Min( MUM ,( RRSe + CS ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.8758029978586723, "obj2": 0.06169379151584283}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * Min( PN ,FirstVNF_Mem ) ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) ) )", "choosing": "( ( ( ( CS / ( ( MUC * RCSe ) / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS / MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7537473233404711, "obj2": 0.12628522036059886}, {"determining": "( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,Max( Min( ( AMS - Max( FirstVNF_CPU,BR ) ) ,( AMS * FirstVNF_CPU ) ),FirstVNF_RAM_Server ) ) * PN ) )", "choosing": "( ( Min( MLU ,( ( RRSe / Max( ( ( RMSe / MUM ) - RCSe ),Max( MUC,Max( RRSe,MLU ) ) ) ) / Min( RCSe ,Min( MUC ,( ( MLU / MUR ) * ( MUC / MUM ) ) ) ) ) ) - ( ( ( RCSe + MUR ) * MUM ) - RCSe ) ) - Max( RRSe,Min( MUM ,( MLU + MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013149313475361107}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Min( MUM ,Max( ( ( ( ( ( RRSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( MUR + ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09364891406925226}, {"determining": "( ( AMS - MDR ) - ( Const * Min( Max( DDR,Const ) ,( ARS / ( ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - FirstVNF_CPU ) / ARS ) - RRS ) ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / ( ( ( DS * DS ) / ( ( Min( MLU ,RMSe ) / RMSe ) - MUR ) ) + DS ) ),Max( ( ( MUR + RCSe ) * ( ( ( ( RRSe + DS ) / MUC ) - RMSe ) * CS ) ),RRSe ) ),( Max( ( Min( RRSe ,Min( RRSe ,MUR ) ) * MLU ),CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8137044967880086, "obj2": 0.0936301991944188}], "18": [{"determining": "( ( ( ( Min( Max( Const,DDR ) ,( ( ACS * ( FirstVNF_RAM_Server * ARS ) ) / FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,ACS ) ) / ( MDR - DDR ) ) / ( Const / ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( ( ( ( ( ( CS / ( MUR + Max( RCSe,RMSe ) ) ) + DS ) * Max( RCSe,RMSe ) ) - ( Min( ( ( ( RCSe * DS ) - Min( MUM ,RMSe ) ) - ( Min( RMSe ,MUC ) * Min( CS ,MUM ) ) ) ,MUR ) / RMSe ) ) - ( MLU + RRSe ) ) + Max( MUR,( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( ( ( ARS - ( FirstVNF_CPU / ( Min( Max( FirstVNF_RAM,BR ) ,Max( RRS,MDR ) ) + MRS ) ) ) * DDR ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) - Min( MUM ,( RRSe + MUC ) ) ) ),( Min( MLU ,Min( RRSe ,Max( MUR,MUM ) ) ) - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( RCSe - ( MUM * MUC ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( MRS + MDR ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) )", "choosing": "( Max( ( MUC + ( DS / ( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,CS ) / RMSe ) ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,Max( RRS,CRS ) ) * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) / ( FirstVNF_RAM - DDR ) ) / Max( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) / PN ) + ( FirstVNF_CPU * Min( DDR ,RRS ) ) ),( ( FirstVNF_RAM_Server - ARS ) + FirstVNF_RAM ) ) ) * Const )", "choosing": "( Min( MUM ,Max( Min( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) ,Min( RCSe ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( Max( CS,( RRSe + MUM ) ) ,RCSe ),RCSe ) )", "obj1": 0.6659528907922913, "obj2": 0.26246224636762466}, {"determining": "( Const * ( AMS * ( FirstVNF_Mem * ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUR / MLU ) / CS ) / RMSe ) - MUR ) + ( MUM / DS ) ) + DS ),( ( RCSe - RRSe ) - RRSe ) ) + ( ( DS * MUM ) * ( MUC + MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.21563736371911155}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + ( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.7194860813704497, "obj2": 0.1439841087668457}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( Max( Min( RRSe ,( MUR * MUM ) ),MUC ) / RCSe ) ),MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.1380237917660998}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,Max( ARS,ARS ) ) ) * MDR ) ) - ( ( MRS + Min( ( Const * RRS ) ,( ( Min( ( AMS - MDR ) ,( AMS * CRS ) ) + MRS ) * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( MUC + Min( ( ( RCSe * MLU ) - RCSe ) ,( CS + MLU ) ) ),MUR ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,( RRSe + RRSe ) ) - ( Max( MUR,Max( ( Min( Max( MUR,MUM ) ,RRSe ) + ( DS / RCSe ) ),MUR ) ) / RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23340343471603722}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.721627408993576, "obj2": 0.14257325871502063}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08818441656234118}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS * PN ) ) * Min( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,AMS ) + MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( AMS - MDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2523023165917158}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( Const - PN ) ),( MRS / Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( MUC - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RRSe / MUC ) ),( RMSe * Max( MUC,RMSe ) ) ) / ( DS * MUR ) ),MUM ),CS ) ) )", "obj1": 0.815845824411135, "obj2": 0.09242687306549209}, {"determining": "( ( AMS * MDR ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.6680942184154176, "obj2": 0.257987423407772}, {"determining": "( ( ( FirstVNF_CPU * AMS ) - ( FirstVNF_Mem_Server * BR ) ) / ( MDR - Max( ( MDR / FirstVNF_RAM ),ARS ) ) )", "choosing": "( ( ( RCSe * ( ( CS + MUR ) / CS ) ) / Max( Min( MLU ,RRSe ),RCSe ) ) - ( ( ( Min( Min( ( RRSe * MUR ) ,MUM ) ,MLU ) * MLU ) * ( MUR + MUM ) ) / ( MUM + MUC ) ) )", "obj1": 0.708779443254818, "obj2": 0.21885305322418647}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( MRS,BR ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ),MUR ) + Max( RCSe,MUC ) )", "obj1": 0.8715203426124197, "obj2": 0.0634570094928748}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( FirstVNF_CPU_Server * ARS ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / ( ( RRSe + CS ) / Min( ( MLU * CS ) ,RMSe ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2435483242642565}, {"determining": "( ( ( MDR - CRS ) - ( Min( Max( Max( FirstVNF_RAM_Server,BR ),( BR * Min( CRS ,( FirstVNF_RAM_Server + RRS ) ) ) ) ,MDR ) * MDR ) ) - ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( Min( MUM ,Min( MUM ,( MUC + ( DS * ( Min( MLU ,MUM ) + DS ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),DS )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( Max( MRS,DDR ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUC + ( ( MUC + Min( MUM ,( RRSe + CS ) ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.7558886509635975, "obj2": 0.12432617366689114}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS + RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( ( DS * CS ) * ( Min( RCSe ,MLU ) * Max( CS,Min( RMSe ,RCSe ) ) ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06503918912537894}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813554}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625602}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MLU ),MUR ) + ( MLU - DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS + PN ) ) * Min( ( ( MDR + Min( Min( DDR ,FirstVNF_RAM ) ,AMS ) ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( ( RRS - FirstVNF_CPU_Server ) - FirstVNF_Mem ) + ( Max( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),MDR ) / ( ( PN * MRS ) * FirstVNF_RAM_Server ) ),PN ) - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( CS + ( ( RMSe / MUM ) * ( MUM * MUC ) ) ) / Min( RRSe ,MUR ) ) ,MUM ) * ( DS * RCSe ) ) ),( ( RRSe / CS ) / ( MUR + Max( MUR,( MUR / Min( MUM ,DS ) ) ) ) ) )", "obj1": 0.9785867237687366, "obj2": 0.009404486398720428}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS - BR ),FirstVNF_RAM ) ) * FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe + DS ) - ( MUR - ( Max( ( RMSe * ( MUC / MUC ) ),MUC ) - RMSe ) ) ) + Min( ( MUM * CS ) ,Min( RCSe ,RCSe ) ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.0122343160597603}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( FirstVNF_Mem_Server + Min( Const ,( CRS * PN ) ) ) ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - MUR ) ) ) / ( Max( CS,MUC ) / MUM ) ) ,DS ),( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) )", "obj1": 0.9443254817987152, "obj2": 0.025721375462937422}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),DDR ) ) * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( DS * DS ) / RCSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9079229122055674, "obj2": 0.04563393781667424}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ) ) ) - ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( Max( FirstVNF_RAM_Server,ACS ),Min( ( AMS - MDR ) ,FirstVNF_CPU ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,( MLU / MUM ) ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10124808203307845}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / RCSe ) ),MUR ) * ( Min( RCSe ,MLU ) * RMSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.892933618843683, "obj2": 0.05201884430015805}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( Const,( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + MLU ) ),MUR ) )", "obj1": 0.8758029978586723, "obj2": 0.060854111401803135}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / Min( ( CS + DS ) ,( RRSe + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.892933618843683, "obj2": 0.05201884430015805}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( FirstVNF_Mem_Server + Min( Const ,( CRS * PN ) ) ) ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - MUR ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.961456102783726, "obj2": 0.01719648705599139}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7644539614561028, "obj2": 0.11952394310068828}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / MDR ) - ( Min( Max( Max( MRS,BR ),( MDR * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_RAM + Min( ( FirstVNF_CPU - RRS ) ,ARS ) ) ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - Min( RCSe ,MUM ) ) ,Min( MUM ,RCSe ) ),( Min( MUC ,RMSe ) / Max( RRSe,( MUM * ( Min( MUR ,( DS - DS ) ) * RMSe ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06899865054579847}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02096252348619143}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( PN - ( DDR / Max( Const,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.69593147751606, "obj2": 0.23204361203765886}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,( MRS + DDR ) ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10663745650532365}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10173942082582317}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( FirstVNF_RAM,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( ( RRS + ARS ) - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( ( Max( MLU,( MUC / CS ) ) - RCSe ),( Max( RRSe,RMSe ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( CS,RRSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.2554153915046926}, {"determining": "( ( ( Min( ( ARS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,ACS ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.9164882226980728, "obj2": 0.04088952262684528}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( ( FirstVNF_CPU_Server / RRS ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( Min( RRSe ,Min( Max( ( MUR * MLU ),( RCSe * MLU ) ) ,Max( MUC,( MUR * RMSe ) ) ) ) - ( CS * RRSe ) ) ,( Max( Max( Min( ( Max( CS,MLU ) - DS ) ,( RRSe - ( MUC / MLU ) ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.24814452060267198}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( CRS - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.8865096359743041, "obj2": 0.055911355994627036}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( FirstVNF_Mem_Server + Min( Const ,AMS ) ) ) * FirstVNF_CPU ),( ( ( Max( RRS,Const ) / Max( Const,( Const - ACS ) ) ) * DDR ) / ACS ) ) ) )", "choosing": "( ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / ( Max( CS,MUC ) / MUM ) ) - Max( ( MUC + MUR ),( MUR * RRSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006574656737680554}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( MUR + Max( ( MUC + ( DS / RCSe ) ),MUR ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( Min( ( MDR - AMS ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) - ( Min( Max( DDR,AMS ) ,( FirstVNF_Mem + MRS ) ) * DDR ) )", "choosing": "Max( ( MLU / RCSe ),( ( ( ( ( RCSe + ( CS + ( MUR * MUM ) ) ) * Max( MUM,( RCSe / CS ) ) ) / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) )", "obj1": 0.9935760171306209, "obj2": 0.003534256582581461}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "Max( ( MUC - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( BR * AMS ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / Min( ( MUR + MUR ) ,( CS + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - ( RCSe + ( MLU + MLU ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289541}, {"determining": "( ( Max( ARS,FirstVNF_CPU_Server ) / BR ) - ( AMS - MDR ) )", "choosing": "( ( ( MUR / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.7451820128479657, "obj2": 0.13094246871059553}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8051391862955032, "obj2": 0.09707765836720547}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( CRS - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( MLU,MUM ),CS ) ) )", "obj1": 0.8865096359743041, "obj2": 0.055911355994627036}, {"determining": "( ( RRS - MDR ) - ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( ( ( Max( RRS,Const ) / Min( ( CRS / DDR ) ,( FirstVNF_Mem - PN ) ) ) * DDR ) / ( ( BR + RRS ) / ( MDR - DDR ) ) ) ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( ( ( MLU - MUM ) - MLU ) - CS ) + Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) )", "obj1": 0.7623126338329764, "obj2": 0.12165350625499835}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( ( MUR - RCSe ) / CS ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.8779443254817987, "obj2": 0.05947963161586978}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / ( FirstVNF_Mem + RRS ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( FirstVNF_CPU * ( MRS + Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( RCSe ,MUM ),( Max( RRSe,CS ) / Min( ( Max( MUM,Max( MLU,Min( Min( RMSe ,RCSe ) ,MUM ) ) ) / Min( CS ,( RRSe * MUR ) ) ) ,RMSe ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02096252348619143}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( MUR * ( MUC - CS ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.961456102783726, "obj2": 0.01719648705599139}, {"determining": "( Max( RRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem_Server ) ) - ( ( ARS + FirstVNF_Mem_Server ) * ( ARS - ( FirstVNF_CPU / ( Min( Max( ACS,BR ) ,Max( RRS,MDR ) ) + MRS ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MLU ) - Max( Min( ( ( ( MUC * MUR ) + CS ) * Min( ( DS / Max( CS,( MUM * RMSe ) ) ) ,CS ) ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7130620985010707, "obj2": 0.21567488451690264}, {"determining": "( Max( ( FirstVNF_Mem / ( Min( ACS ,FirstVNF_Mem_Server ) + DDR ) ),FirstVNF_RAM_Server ) * Max( Max( ( Min( Max( AMS,AMS ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( Const - RRS ) ) ) ) ),( ( RRS * PN ) + ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MUM / RRSe ) - Min( MUM ,( RRSe / CS ) ) ) ),( ( Max( MUM,MUC ) * MUR ) - ( Max( MUR,RCSe ) / RCSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7044967880085653, "obj2": 0.2268559201697283}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( Max( ( FirstVNF_RAM + BR ),ARS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * RCSe ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.9122055674518201, "obj2": 0.041416986438964805}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) / Max( Const,( Const - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( CS,( RRSe - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23028187167731257}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( FirstVNF_CPU_Server * ARS ) ) )", "choosing": "( ( ( ( ( ( ( MUC * RMSe ) + ( Min( RCSe ,MUM ) + RRSe ) ) + RMSe ) / MUC ) - RMSe ) / RMSe ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.6852248394004282, "obj2": 0.2435483242642565}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.8822269807280514, "obj2": 0.05876858374494023}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( ( MUC / ( ( ( MUR + RMSe ) / MUC ) - MUR ) ) ,RMSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07172755160375886}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),DDR ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "( ( ( RRSe - RRSe ) * ( ( ( ( ( DS * DS ) / RCSe ) / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) ) + ( ( MUM - MUR ) / DS ) )", "obj1": 0.9314775160599572, "obj2": 0.03368721495125549}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( DDR / MDR ) ) ) ) ) - DDR )", "choosing": "( ( ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.0327069371119205}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( RCSe - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7494646680942184, "obj2": 0.1283615598739812}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( Max( DDR,AMS ) ,Max( ( DDR - ACS ),FirstVNF_RAM ) ) * MDR ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( Min( Min( CS ,Max( ( MLU + ( ( ( MUC / MUM ) / DS ) / ( ( MUM - MUC ) / RMSe ) ) ),( ( ( ( CS / MUR ) / ( DS - MUR ) ) - ( RMSe / MUR ) ) / ( ( ( CS * RRSe ) - RCSe ) + Max( ( DS * MUR ),Min( RMSe ,RMSe ) ) ) ) ) ) ,( Min( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.2554153915046926}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( ( FirstVNF_CPU_Server / RRS ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ),MUR ) + Max( RCSe,MUC ) )", "obj1": 0.683083511777302, "obj2": 0.24814452060267198}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( DDR,Max( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),PN ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.13094273579917373}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( ( ( RRS * MDR ) * DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - Max( MLU,Min( ( MUM + ( RMSe * CS ) ) ,MUR ) ) ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07248364942958643}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.7773019271948608, "obj2": 0.11024563720433676}, {"determining": "( ( AMS * MDR ) - ( Min( Min( AMS ,DDR ) ,( Max( ( ( ARS * ( FirstVNF_Mem - CRS ) ) + ( Min( MDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * Const ) )", "choosing": "( ( ( RMSe / ( RMSe / RCSe ) ) - MUR ) + ( MLU / Min( RCSe ,( RCSe * Max( MUR,MUR ) ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11415241877453945}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8051391862955032, "obj2": 0.09707765836720547}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.7494646680942184, "obj2": 0.1283615598739812}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * Min( PN ,FirstVNF_Mem ) ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) ) )", "choosing": "( ( ( ( CS / ( ( MUC * RCSe ) / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS / MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7537473233404711, "obj2": 0.12628522036059886}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Max( RRSe,( ( RRSe - RCSe ) / RMSe ) ) / Min( ( RRSe / MUM ) ,RMSe ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7687366167023555, "obj2": 0.11505920140957938}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,( AMS * CRS ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.042182597862364786}, {"determining": "( ( ( Min( DDR ,AMS ) * ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) - ( AMS - MDR ) )", "choosing": "Max( Min( ( RRSe - ( MUR / Min( RMSe ,Min( DS ,RRSe ) ) ) ) ,( Max( Max( Min( ( MLU - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.13094273579917373}, {"determining": "( ( CRS - ARS ) - ( MDR * FirstVNF_RAM ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUM + ( DS / RCSe ) ) ,Min( Max( RRSe,MUM ) ,Max( DS,RCSe ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( ( MLU / ( Min( CS ,( MUR - MUC ) ) - ( ( RMSe / RRSe ) / CS ) ) ) * ( RMSe * Min( RCSe ,MLU ) ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10277590027072037}, {"determining": "( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( CS * DS ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.7794432548179872, "obj2": 0.10883097704686485}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( RMSe - MUC ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.7773019271948608, "obj2": 0.11024563720433676}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( ( ( MRS * FirstVNF_Mem ) + ACS ) + MDR ) / FirstVNF_CPU ) ) ) - ( MRS + DDR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( ( MUC - CS ) + RMSe ) / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( DDR / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.0327069371119205}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,Max( Const,RRS ) ),( MDR / FirstVNF_CPU ) ),( MRS / ACS ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( CS * Max( MLU,Max( MUC,RRSe ) ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / ( RMSe / MUC ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MLU ),MUR ) + ( MLU - DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / ( Min( ( FirstVNF_CPU - ARS ) ,MDR ) + MRS ) ) ) ) ) - Min( CRS ,Max( ACS,FirstVNF_CPU ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,( ( MUR + RMSe ) / MUC ) ) ) - Min( Max( RMSe,DS ) ,Max( ( ( ( ( MUC * ( MUC + DS ) ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe / CS ) ) ) ),( RRSe / ( MUR + ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09364891406925224}, {"determining": "( ( AMS - MDR ) - ( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( ( ( ( RMSe + RMSe ) / MUC ) - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) + ( MLU / DS ) )", "obj1": 0.8094218415417559, "obj2": 0.09486625596548336}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),Min( Max( MRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) + ( MLU / DS ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( MLU,MUM ),CS ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( Min( ( AMS - MDR ) ,( Min( Min( DDR ,AMS ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * AMS ) ) * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / RMSe ) - MUR ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07684921343780914}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,( MLU / MUM ) ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07583244051403508}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( ( ( Max( RRS,Const ) / Max( Const,( Const - AMS ) ) ) * DDR ) / ( ( BR + RRS ) / ( DDR - MDR ) ) ) ) * MDR ) )", "choosing": "( ( ( MUR / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.7623126338329764, "obj2": 0.12165350625499835}, {"determining": "( ( AMS - MDR ) - Max( Max( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ),PN ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( ( ( ACS / ACS ) + ( Const - Const ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - Const ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,RCSe ) / Max( RRSe,( RCSe / ( MUC / MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( ( AMS - ACS ) ,( ( MRS - ( Max( PN,( CRS + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - MDR )", "choosing": "Max( Min( Min( MUM ,Min( RCSe ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( MUM * ( Min( MUR ,( DS - DS ) ) * RMSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}], "19": [{"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,Max( DDR,ACS ) ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( MRS,BR ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - Const ) ) ) ) ) ) )", "choosing": "( Min( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ) ,MUR ) + ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - ( FirstVNF_CPU / ( Min( Max( FirstVNF_RAM,BR ) ,Max( RRS,MDR ) ) + MRS ) ) ) * DDR ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) - Min( MUM ,( RRSe + MUC ) ) ) ),( Min( MLU ,Min( RRSe ,Max( MUR,MUM ) ) ) - ( RCSe - RRSe ) ) ) ) - Max( Min( ( MLU - RMSe ) ,( RCSe - ( MUM * MUC ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( ( Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem - FirstVNF_Mem_Server ) ) / ( ARS - DDR ) ) / FirstVNF_CPU_Server ) / MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - ( MRS - FirstVNF_CPU ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( Max( RCSe,MLU ) ,( MLU + DS ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( Max( ( ( Min( ( MUM * DS ) ,Min( MLU ,RMSe ) ) + ( RCSe / RCSe ) ) * Max( RRSe,MUR ) ),CS ),CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.6573875802997858, "obj2": 0.2587271037529673}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Min( ( MRS - RRS ) ,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + ( Max( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ),( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.14920545442259164}, {"determining": "( Max( RRS,FirstVNF_CPU ) / ( ( FirstVNF_RAM + ( DDR - FirstVNF_Mem_Server ) ) - ( ( ARS + FirstVNF_Mem_Server ) * ( ARS - ( FirstVNF_CPU / ( Min( Max( ACS,BR ) ,Max( RRS,MDR ) ) + MRS ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ,MLU ) - Max( Min( ( ( ( MUC * MUR ) + CS ) * Min( ( DS / Max( CS,( MUM * RMSe ) ) ) ,CS ) ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MLU - MUM ) - MLU ) - CS ) + Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.23340343471603722}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MLU - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( ( MUR - RCSe ) / CS ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.8865096359743041, "obj2": 0.0556453965508857}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( Max( Min( RRSe ,( MUR * MUM ) ),MUC ) / RCSe ) ),MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.1380237917660998}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),DDR ) ) * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( DS * DS ) / RCSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9079229122055674, "obj2": 0.04563393781667424}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS * PN ) ) * Min( ( ( Min( Min( DDR ,FirstVNF_RAM ) ,AMS ) + MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( AMS - MDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2523023165917158}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( ( Min( Max( Min( MUR ,( MUC + MUR ) ),RRSe ) ,Min( CS ,Max( RCSe,MUM ) ) ) - MUC ) / RCSe ),Max( ( DS / RCSe ),RRSe ) ),( ( Min( ( MUC + MUM ) ,Min( RMSe ,MLU ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.7173447537473233, "obj2": 0.1450298454203045}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,( MRS + DDR ) ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10649850248690478}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,Max( ARS,ARS ) ) ) * MDR ) ) - ( ( MRS + Min( ( Const * RRS ) ,( ( Min( ( AMS - MDR ) ,( AMS * CRS ) ) + MRS ) * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( MUC + Min( ( ( RCSe * MLU ) - RCSe ) ,( CS + MLU ) ) ),MUR ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( MRS,BR ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ),MUR ) + Max( RCSe,MUC ) )", "obj1": 0.8715203426124197, "obj2": 0.0634570094928748}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( FirstVNF_CPU_Server * ARS ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / ( ( RRSe + CS ) / Min( ( MLU * CS ) ,RMSe ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2435483242642565}, {"determining": "( ( Min( Min( DDR ,FirstVNF_CPU_Server ) ,( AMS - MDR ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,AMS ) ) * MDR ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( MLU / RCSe ) ) ,MUM ) ) ,( RRSe - ( Max( Min( MUR ,( MUC + MUR ) ),RRSe ) / MLU ) ) ),( ( ( ( ( ( MUM + ( MUC / MUC ) ) + MUR ) * RMSe ) / ( CS - MUR ) ) / MLU ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.14083359361060438}, {"determining": "( ( ( Max( RRS,Const ) / Max( Const,( Const - PN ) ) ) - Max( Max( MRS,BR ),DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08660847339625602}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) * ( ( MRS / ACS ) * ( AMS * PN ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Max( MRS,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),Max( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ACS ),FirstVNF_RAM ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - CS ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( DS + Min( Max( DS,( CS + DS ) ) ,DS ) ) - RMSe ) ) + DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.8822269807280514, "obj2": 0.05876858374494023}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) - ( ( MRS * Min( ( FirstVNF_CPU - Min( Min( DDR ,AMS ) ,( ( FirstVNF_CPU * RRS ) - ( ACS - AMS ) ) ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RMSe - Max( RCSe,( MLU * DS ) ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),DS )", "obj1": 0.9571734475374732, "obj2": 0.01909010994787109}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS - BR ),FirstVNF_RAM ) ) * FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe + DS ) - ( MUR - ( Max( ( RMSe * ( MUC / MUC ) ),MUC ) - RMSe ) ) ) + Min( ( MUM * CS ) ,Min( RCSe ,RCSe ) ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.0122343160597603}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( Max( FirstVNF_RAM_Server,ACS ),Min( ( AMS - MDR ) ,FirstVNF_CPU ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,( MLU / MUM ) ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10124808203307845}, {"determining": "( Max( ( FirstVNF_Mem / ( Min( ACS ,FirstVNF_Mem_Server ) + DDR ) ),FirstVNF_RAM_Server ) * Max( Max( ( Min( Max( AMS,AMS ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / Max( Const,( Const - RRS ) ) ) ) ),( ( RRS * PN ) + ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RCSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MUM / RRSe ) - Min( MUM ,( RRSe / CS ) ) ) ),( ( Max( MUM,MUC ) * MUR ) - ( Max( MUR,RCSe ) / RCSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7044967880085653, "obj2": 0.2268559201697283}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( MDR / FirstVNF_RAM_Server ) ),( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ) ) ) - ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RCSe / MUC ) ),( Max( MUC,RMSe ) * CS ) ) / Max( MUM,( ( MUR - RCSe ) / CS ) ) ),MUM ),CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ) ) - ( ( Const * Max( ( MDR / FirstVNF_Mem ),Min( ( FirstVNF_RAM_Server + ARS ) ,FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( ( MUC / ( ( ( MUR + RMSe ) / MUC ) - MUR ) ) ,( ( ( ( MUR / RCSe ) / CS ) / RMSe ) - MUR ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12260550016712479}, {"determining": "( ( AMS * MDR ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.6680942184154176, "obj2": 0.257987423407772}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813554}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) * ( Min( RCSe ,MLU ) * RMSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13125330583231626}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8029978586723768, "obj2": 0.09801386513636563}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.09020267173836691}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / MDR ) - ( Min( Max( Max( MRS,BR ),( MDR * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_RAM + Min( ( FirstVNF_CPU - RRS ) ,ARS ) ) ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - Min( RCSe ,MUM ) ) ,Min( MUM ,RCSe ) ),( Min( MUC ,RMSe ) / Max( RRSe,( MUM * ( Min( MUR ,( DS - DS ) ) * RMSe ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06899865054579847}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),( PN - ( DDR / Max( Const,( ( ARS / DDR ) - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.69593147751606, "obj2": 0.23204361203765886}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( ( DS - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) + ( MLU / DS ) )", "obj1": 0.8051391862955032, "obj2": 0.09570032521270755}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( MLU,MUM ),CS ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( ( FirstVNF_CPU_Server / RRS ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( Min( RRSe ,Min( Max( ( MUR * MLU ),( RCSe * MLU ) ) ,Max( MUC,( MUR * RMSe ) ) ) ) - ( CS * RRSe ) ) ,( Max( Max( Min( ( Max( CS,MLU ) - DS ) ,( RRSe - ( MUC / MLU ) ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.24814452060267198}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06503918912537894}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( ( MLU - MUM ) - MLU ) - CS ) + Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.12203939959107482}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.721627408993576, "obj2": 0.14257325871502063}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( ( CS * DS ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( Min( RRSe ,MUR ) / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.974304068522484, "obj2": 0.011276899937040768}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / ( DS / RCSe ) ) - MUR ) + ( MLU / DS ) )", "obj1": 0.9785867237687366, "obj2": 0.009383277045161066}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( ( ( ACS / ACS ) + ( Const - ACS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - Const ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,RCSe ) / Max( RRSe,( RCSe / ( MUC / ( Min( RMSe ,CS ) * ( CS * RRSe ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ( AMS * MDR ) - ( Min( Max( ( MRS / Max( MRS,( FirstVNF_RAM_Server + PN ) ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + ( Max( MRS,FirstVNF_CPU_Server ) - AMS ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_RAM + AMS ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( RMSe ,( MUM / ( MUC * RRSe ) ) ) ) ,( RRSe - ( MUR / ( RRSe * DS ) ) ) ),( Max( RRSe,( ( Min( RCSe ,RCSe ) * Max( CS,Min( RMSe ,RCSe ) ) ) * ( DS * CS ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / MUR ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07664347009962375}, {"determining": "( ( CRS - ARS ) - ( MDR * FirstVNF_RAM ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUM + ( DS / RCSe ) ) ,Min( Max( RRSe,MUM ) ,Max( DS,RCSe ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( ( MLU / ( Min( CS ,( MUR - MUC ) ) - ( ( RMSe / RRSe ) / CS ) ) ) * ( RMSe * Min( RCSe ,MLU ) ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10277590027072037}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,( AMS * CRS ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.042182597862364786}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,Max( RRS,CRS ) ) * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) / ( FirstVNF_RAM - DDR ) ) / ( Const / ( Max( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),PN ) + ( FirstVNF_RAM_Server - ARS ) ) ) ) * Const )", "choosing": "( Min( MUM ,Max( Min( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) ,Min( RCSe ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ) ) - Max( Min( ( ( MUM / RMSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.6723768736616702, "obj2": 0.2570467962953702}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,( MLU / MUM ) ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07583244051403508}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( FirstVNF_Mem_Server + Min( Const ,( CRS * PN ) ) ) ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - MUR ) ) ) / ( Max( CS,MUC ) / MUM ) ) ,DS ),( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) )", "obj1": 0.9443254817987152, "obj2": 0.025721375462937422}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( ( ( RRS * MDR ) * DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - Max( MLU,Min( ( MUM + ( RMSe * CS ) ) ,MUR ) ) ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07248364942958643}, {"determining": "( ( BR * AMS ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / Min( ( MUR + MUR ) ,( CS + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - ( RCSe + ( MLU + MLU ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289541}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7751605995717344, "obj2": 0.11218898976904372}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * MRS ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - ( ( MUR * MUR ) * MUR ) ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( ( MUR - RCSe ) / CS ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - MUC ) ) )", "obj1": 0.8779443254817987, "obj2": 0.05947963161586977}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7687366167023555, "obj2": 0.11505920140957938}, {"determining": "( ( AMS - MDR ) - ( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU ),( AMS - MDR ) ) * MDR ) )", "choosing": "( ( DS / RCSe ) + ( MLU / DS ) )", "obj1": 0.8094218415417559, "obj2": 0.09475863638562569}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + Min( MUM ,( RRSe + CS ) ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.892933618843683, "obj2": 0.05201884430015805}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / RCSe ) ),MUR ) * ( Min( RCSe ,MLU ) * RMSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.892933618843683, "obj2": 0.05201884430015805}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7644539614561028, "obj2": 0.11896883619689214}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07248364942958643}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( Const - PN ) ),( MRS / Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( MUC - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RRSe / MUC ) ),( RMSe * Max( MUC,RMSe ) ) ) / ( DS * MUR ) ),MUM ),CS ) ) )", "obj1": 0.815845824411135, "obj2": 0.09242687306549209}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( Max( Const,DDR ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( FirstVNF_CPU_Server * ARS ) ) )", "choosing": "( ( ( ( ( ( ( MUC * RMSe ) + ( Min( RCSe ,MUM ) + RRSe ) ) + RMSe ) / MUC ) - RMSe ) / RMSe ) - ( Max( MUR,CS ) / RMSe ) )", "obj1": 0.6852248394004282, "obj2": 0.2435483242642565}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813554}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) / Max( Const,( Const - PN ) ) ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( MUM ,Max( CS,( RRSe - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.6980728051391863, "obj2": 0.23028187167731257}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( Max( ( FirstVNF_RAM + BR ),ARS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * RCSe ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.9122055674518201, "obj2": 0.041416986438964805}, {"determining": "( Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server + ( RRS * DDR ) ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( ( DS / RCSe ) + MUC ) ,MUM ) ) ,( RRSe - ( Max( DS,( MUR - MUC ) ) / MUC ) ) ),DS )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( FirstVNF_Mem_Server + Min( Const ,( CRS * PN ) ) ) ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - MUR ) ) ) / ( Max( CS,MUC ) / MUM ) ) ,DS ),( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) )", "obj1": 0.9443254817987152, "obj2": 0.025721375462937422}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( ( MUC / ( ( ( MUR + RMSe ) / MUC ) - MUR ) ) ,RMSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07172755160375886}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( Const / ( FirstVNF_RAM_Server + ARS ) ) ) ) ) ) - ( MDR * MRS ) )", "choosing": "Max( Min( ( DS - Max( MUM,MLU ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( RCSe * ( ( MLU - DS ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10173942082582317}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( DDR / MDR ) ) ) ) ) - DDR )", "choosing": "( ( ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.0327069371119205}, {"determining": "( ( ( Min( DDR ,AMS ) / ( Max( ( ( ARS * MRS ) + ( Min( DDR ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * ( Min( ( AMS / MRS ) ,DDR ) - FirstVNF_CPU ) ) - ( AMS - MDR ) )", "choosing": "( ( MUR - ( Max( ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ),( RRSe / MUC ) ) / ( RCSe * MUR ) ) ) + ( MLU / RCSe ) )", "obj1": 0.7473233404710921, "obj2": 0.1299626032839079}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + Min( ( ( Min( ( FirstVNF_CPU_Server / RRS ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( ( MUR - RCSe ) / CS ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.24814452060267198}, {"determining": "( ( ( Min( ( ARS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,ACS ) ) * MDR ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.9164882226980728, "obj2": 0.04088952262684528}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,( MRS + MDR ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) + ( ( RMSe - MUC ) - Max( ( ( RCSe - CS ) - ( MLU / RRSe ) ),( MUC + CS ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.1437226893540649}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( MUR + Max( ( MUC + ( DS / RCSe ) ),MUR ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7815845824411135, "obj2": 0.1081030677610439}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS + RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( ( DS * CS ) * ( Min( RCSe ,MLU ) * Max( CS,Min( RMSe ,RCSe ) ) ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8972162740899358, "obj2": 0.05014494740490263}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( ( Min( Max( AMS,AMS ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,MLU ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.8179871520342612, "obj2": 0.09198416193240759}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10277590027072037}, {"determining": "( ( AMS - MDR ) - ( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( MUR * ( MUC - CS ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( CS / RCSe ) ),MUR ) )", "obj1": 0.7516059957173448, "obj2": 0.12766634371695804}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * Min( PN ,FirstVNF_Mem ) ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,DDR ) ) ) )", "choosing": "( ( ( ( CS / ( ( MUC * RCSe ) / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS / MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.7537473233404711, "obj2": 0.12628522036059886}, {"determining": "( ( AMS * MDR ) - ( Min( Min( AMS ,DDR ) ,( Max( ( ( ARS * ( FirstVNF_Mem - CRS ) ) + ( Min( MDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * Const ) )", "choosing": "( ( ( RMSe / ( RMSe / RCSe ) ) - MUR ) + ( MLU / Min( RCSe ,( RCSe * Max( MUR,MUR ) ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11415241877453945}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02096252348619143}, {"determining": "( ( ( MDR - CRS ) - ( Min( Max( Max( FirstVNF_RAM_Server,BR ),( BR * Min( CRS ,( FirstVNF_RAM_Server + RRS ) ) ) ) ,MDR ) * MDR ) ) - ( AMS - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( Min( MUM ,Min( MUM ,( MUC + ( DS * ( Min( MLU ,MUM ) + DS ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),DS )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "Max( ( ( ( CRS / ( ( ACS * Const ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * ( AMS * PN ) ) * Min( ( ( Min( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ,AMS ) + MDR ) / ( DDR - FirstVNF_RAM_Server ) ) ,( MRS * AMS ) ) ),( ( ( AMS - MDR ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * CS ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02096252348619143}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,( MLU / MUM ) ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07583244051403508}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( FirstVNF_RAM - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.2554153915046926}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08818441656234118}, {"determining": "Max( ( ( FirstVNF_RAM_Server * ( AMS * PN ) ) * Min( ( ( Min( Max( FirstVNF_RAM,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( ( RRS + ARS ) - DDR ) ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( ( Max( MLU,( MUC / CS ) ) - RCSe ),( Max( RRSe,RMSe ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( CS,RRSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.2554153915046926}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( Const,( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + MLU ) ),MUR ) )", "obj1": 0.8758029978586723, "obj2": 0.060854111401803135}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( ( ( MRS * FirstVNF_Mem ) + ACS ) + MDR ) / FirstVNF_CPU ) ) ) - ( MRS + DDR ) ) / ( ( ARS + FirstVNF_Mem_Server ) * ( FirstVNF_CPU - ( ( MRS + MDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( ( MUC - CS ) + RMSe ) / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.7066381156316917, "obj2": 0.22387255156849714}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( DDR / MDR ) ) ) ) ) - DDR )", "choosing": "( ( ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.0327069371119205}, {"determining": "( ( ( AMS - MDR ) - ( CRS * Max( Max( Max( MRS,Max( Const,RRS ) ),( MDR / FirstVNF_CPU ) ),( MRS / ACS ) ) ) ) - ( FirstVNF_Mem / ( ( FirstVNF_Mem_Server + AMS ) + ( Min( ACS ,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( ( CS - ( CS / MUM ) ) * RMSe ) + ( DS / RCSe ) ),MUR ) + ( MUM + RRSe ) )", "obj1": 0.9293361884368309, "obj2": 0.035429321111753606}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( CS * MLU ),MUR ) + ( MLU - DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( ( FirstVNF_CPU_Server * CRS ),Max( ARS,ARS ) ) ) * Max( Max( ( PN - ACS ),Min( Max( MRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( ( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) + ( MLU / DS ) )", "obj1": 0.7002141327623126, "obj2": 0.22906960451821715}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "Max( ( MUC - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}], "20": [{"determining": "( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,Max( DDR,ACS ) ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( MRS,BR ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - Const ) ) ) ) ) ) )", "choosing": "( Min( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ) ,MUR ) + ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( ( Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem - FirstVNF_Mem_Server ) ) / ( ARS - DDR ) ) / FirstVNF_CPU_Server ) / MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - ( MRS - FirstVNF_CPU ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( Max( RCSe,MLU ) ,( MLU + DS ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( Max( ( ( Min( ( MUM * DS ) ,Min( MLU ,RMSe ) ) + ( RCSe / RCSe ) ) * Max( RRSe,MUR ) ),CS ),CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.6573875802997858, "obj2": 0.2587271037529673}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6702355460385439, "obj2": 0.1869634161696089}, {"determining": "( ( AMS * MDR ) / ( ( ( AMS / CRS ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.6680942184154176, "obj2": 0.257987423407772}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Min( ( MRS - RRS ) ,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + ( Max( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ),( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.14920545442259164}, {"determining": "( ( ( AMS * MDR ) - ( Min( Max( ( MRS / Max( MRS,( FirstVNF_RAM_Server + PN ) ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + ( Max( MRS,FirstVNF_CPU_Server ) - AMS ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_RAM + AMS ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( RMSe ,( MUM / ( MUC * RRSe ) ) ) ) ,( RRSe - ( MUR / ( RRSe * DS ) ) ) ),( Max( RRSe,( ( Min( RCSe ,RCSe ) * Max( CS,Min( RMSe ,RCSe ) ) ) * ( DS * CS ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7751605995717344, "obj2": 0.11218898976904372}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( MRS,BR ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ),MUR ) + Max( RCSe,MUC ) )", "obj1": 0.8715203426124197, "obj2": 0.0634570094928748}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13758564010516594}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7494646680942184, "obj2": 0.12572227318411633}, {"determining": "( ( ( RRS / Const ) * BR ) - ( MRS / Max( Max( Max( RRS,ARS ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( MUC ,MUR ) + Max( ( MUC + ( Max( ( DS * RMSe ),CS ) / RCSe ) ),( CS * RCSe ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03475480642286755}, {"determining": "( ( ( Min( DDR ,AMS ) / ( Max( ( ( ARS * MRS ) + ( Min( DDR ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * ( Min( ( AMS / MRS ) ,DDR ) - FirstVNF_CPU ) ) - ( AMS - MDR ) )", "choosing": "( ( MUR - ( Max( ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ),( RRSe / MUC ) ) / ( RCSe * MUR ) ) ) + ( MLU / RCSe ) )", "obj1": 0.7473233404710921, "obj2": 0.1299626032839079}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7644539614561028, "obj2": 0.11896883619689214}, {"determining": "( ( AMS - MDR ) - ( Max( FirstVNF_Mem,Max( Max( FirstVNF_RAM_Server,ACS ),Min( ( AMS - MDR ) ,FirstVNF_CPU ) ) ) * MDR ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,( MLU / MUM ) ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.10124808203307845}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,Min( Min( RCSe ,( MUC / DS ) ) ,RRSe ) ),( Max( RRSe,( Max( ( ( DS / MUC ) + MUC ),MUR ) * ( Min( RCSe ,RMSe ) * RMSe ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13125330583231626}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) / MDR ) ) ) ) ) - DDR )", "choosing": "( ( ( ( CS / ( RMSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9250535331905781, "obj2": 0.03718555355693408}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( ( MLU - MUM ) - MLU ) - CS ) + Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.12203939959107482}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),DDR ) ) * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - DDR )", "choosing": "( Min( MUM ,Max( ( ( ( ( Max( MUR,CS ) / RMSe ) - MUR ) / ( DS * DS ) ) + DS ),( RRSe - ( Max( ( ( RMSe / MUC ) - ( MLU + RCSe ) ),( MUC + RMSe ) ) - ( MLU / MUM ) ) ) ) ) - Max( Min( ( ( ( DS * DS ) / RCSe ) - RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9079229122055674, "obj2": 0.04563393781667424}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * Max( Const,DDR ) ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( ( DS - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) + ( MLU / MUM ) )", "obj1": 0.8265524625267666, "obj2": 0.08597829039481855}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( MDR - AMS ) - ( Min( Min( DDR ,AMS ) ,Max( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_RAM ) ) * ( MRS - BR ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + ( ( CS + ( Max( ( Max( RMSe,( MUM - MUC ) ) * MUR ),MLU ) - Max( CS,( MUC + ( RRSe / ( RCSe - MUC ) ) ) ) ) ) / DS ) )", "obj1": 0.8244111349036403, "obj2": 0.08696388940102237}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / ( AMS / PN ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - AMS ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - ( MUM * DS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8972162740899358, "obj2": 0.05014494740490261}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( Const,( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + MLU ) ),MUR ) )", "obj1": 0.8758029978586723, "obj2": 0.060854111401803135}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,( MRS + DDR ) ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10649850248690478}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( ( ( RRS * MDR ) * DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - Max( MLU,Min( ( MUM + ( RMSe * CS ) ) ,MUR ) ) ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07248364942958643}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,Min( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9571734475374732, "obj2": 0.01909010994787109}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,Min( AMS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) * Max( ( Max( ( FirstVNF_Mem * ( ARS + FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / MDR ) ) ) ) )", "choosing": "( ( ( MUC + ( DS / RCSe ) ) / MUR ) + Max( Max( Min( ( Min( RMSe ,Min( ( MUC + MUC ) ,Min( RCSe ,RMSe ) ) ) - ( ( RRSe / ( MUM - RRSe ) ) + ( Max( MUC,MUR ) / ( MLU * RMSe ) ) ) ) ,CS ),( RRSe - ( RCSe - RRSe ) ) ),( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07046611638370316}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.880085653104925, "obj2": 0.058020769457027506}, {"determining": "( ( BR + CRS ) - Min( MRS ,( FirstVNF_Mem - ( ( Const - ( FirstVNF_CPU / Const ) ) - ACS ) ) ) )", "choosing": "( Min( MUM ,( ( MUM - ( MUC - MUR ) ) + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / MUC ) ,RMSe ) ,( Max( ( ( MUC - MLU ) - RRSe ),RMSe ) * ( ( RCSe - RMSe ) * RMSe ) ) ),RRSe ) )", "obj1": 0.7366167023554604, "obj2": 0.13493519043892455}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ) ) - ( ( Const * Max( ( MDR / FirstVNF_Mem ),Min( ( FirstVNF_RAM_Server + ARS ) ,FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( ( MUC / ( ( ( MUR + RMSe ) / MUC ) - MUR ) ) ,( ( ( ( MUR / RCSe ) / CS ) / RMSe ) - MUR ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12371159016552048}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9164882226980728, "obj2": 0.03954457290064448}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03190437195428894}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06503918912537894}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS - Const ) ) - ( ( Min( Max( FirstVNF_RAM,( DDR / FirstVNF_RAM_Server ) ) ,AMS ) * MDR ) / ( ( RRS + ARS ) / DDR ) ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,( ( ( Min( MUM ,( MLU / CS ) ) * CS ) - ( ( MUR + MLU ) - CS ) ) / MUC ) ) / MLU ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 0.734475374732334, "obj2": 0.1360118684754407}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,( AMS * CRS ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.042182597862364786}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( ( ( MDR / ACS ) + Max( ACS,( MDR / Min( MDR ,MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( FirstVNF_CPU * ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - Const ) ) ) ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,RCSe ) - Max( RRSe,( RCSe / ( MUC / ( Min( ( MUR - CS ) ,CS ) * ( CS * RRSe ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / MDR ) - ( Min( Max( Max( MRS,BR ),( MDR * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_RAM + Min( ( FirstVNF_CPU - RRS ) ,ARS ) ) ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - Min( RCSe ,MUM ) ) ,Min( MUM ,RCSe ) ),( Min( MUC ,RMSe ) / Max( RRSe,( MUM * ( Min( MUR ,( DS - DS ) ) * RMSe ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06899865054579847}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) - ( ( MRS * Min( ( FirstVNF_CPU - Min( Min( DDR ,AMS ) ,( ( FirstVNF_CPU * RRS ) - ( ACS - AMS ) ) ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RMSe - Max( RCSe,( MLU * DS ) ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),DS )", "obj1": 0.9571734475374732, "obj2": 0.01909010994787109}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( ( MUC - CS ) + RMSe ) / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.8436830835117773, "obj2": 0.07583244051403508}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / RMSe ) )", "obj1": 0.9421841541755889, "obj2": 0.02827300482940974}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),Min( ( FirstVNF_CPU_Server / RRS ) ,AMS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUM - ( ( MUR - RCSe ) / CS ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.056269234022362044}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * MRS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( ( ( MUR - MLU ) * ( MUR / RCSe ) ),( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.7880085653104925, "obj2": 0.10425854157185589}, {"determining": "( ( BR * AMS ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / Min( ( MUR + MUR ) ,( CS + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - ( RCSe + ( MLU + MLU ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289541}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.892933618843683, "obj2": 0.05201884430015805}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + Min( MUM ,( RRSe + CS ) ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.892933618843683, "obj2": 0.05201884430015805}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( CRS * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( AMS / Max( FirstVNF_CPU,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( Max( Min( RRSe ,MLU ),( RRSe - MUR ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ,MUM ) - ( ( RCSe - RRSe ) - Min( MUM ,( RRSe / CS ) ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07248364942958643}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ) ) - ( ( Const * Max( ( MDR / FirstVNF_Mem ),Min( ( FirstVNF_RAM_Server + ARS ) ,( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) ) * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( RCSe ,MUM ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12258526171310548}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7815845824411135, "obj2": 0.1081030677610439}, {"determining": "( ( Min( ( MDR - AMS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( Const * ( AMS + ( ( BR / PN ) * AMS ) ) ) )", "choosing": "( Min( Max( ( MUC * RMSe ),( RRSe - ( RCSe - RRSe ) ) ) ,MLU ) - Max( Min( ( ( ( MUC * MUR ) + CS ) * Min( ( DS / ( CS * ( MUM * RMSe ) ) ) ,CS ) ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7109207708779444, "obj2": 0.14790005706084017}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),DS )", "obj1": 0.7173447537473233, "obj2": 0.14502058821174288}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * MRS ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - ( ( MUR * MUR ) * MUR ) ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( ( MUR - RCSe ) / CS ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - MUC ) ) )", "obj1": 0.8779443254817987, "obj2": 0.05947963161586977}, {"determining": "( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / RRS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + Const ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( ( ( ( MLU * MLU ) * RRSe ) - ( DS * ( MUM * CS ) ) ) * ( CS - DS ) ) - RMSe ) ) + DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10173942082582317}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.721627408993576, "obj2": 0.14257325871502063}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS - BR ),FirstVNF_RAM ) ) * FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe + DS ) - ( MUR - ( Max( ( RMSe * ( MUC / MUC ) ),MUC ) - RMSe ) ) ) + Min( ( MUM * CS ) ,Min( RCSe ,RCSe ) ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.0122343160597603}, {"determining": "( ( AMS - MDR ) - ( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU ),( AMS - MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09475863638562569}, {"determining": "( ( ( Min( ( AMS / MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ARS - FirstVNF_Mem ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( Max( RMSe,DS ) - ( MUM / MUC ) ) / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.9443254817987152, "obj2": 0.025721375462937422}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MUM ,Max( CS,( RRSe - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7815845824411135, "obj2": 0.1081030677610439}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( DDR / MDR ) ) ) ) ) - DDR )", "choosing": "( ( ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.0327069371119205}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( AMS - MDR ) - ( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU ),( AMS - MDR ) ) * MDR ) )", "choosing": "( ( DS / RCSe ) + ( MLU / DS ) )", "obj1": 0.8094218415417559, "obj2": 0.09475863638562569}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09570032521270755}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "Max( Max( ( ( CS * DS ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( Min( RRSe ,MUR ) / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.8865096359743041, "obj2": 0.0556453965508857}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * Min( Max( MRS,Max( ( Min( Max( AMS,AMS ) ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.8179871520342612, "obj2": 0.09198416193240758}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( ( ( ACS / ACS ) + ( Const - ACS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - Const ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,RCSe ) / Max( RRSe,( RCSe / ( MUC / ( Min( RMSe ,CS ) * ( CS * RRSe ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( AMS * MDR ) - ( Min( Min( AMS ,DDR ) ,( Max( ( ( ARS * ( FirstVNF_Mem - CRS ) ) + ( Min( MDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * Const ) )", "choosing": "( ( ( RMSe / ( RMSe / RCSe ) ) - MUR ) + ( MLU / Min( RCSe ,( RCSe * Max( MUR,MUR ) ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11415241877453945}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( Const - PN ) ),( MRS / Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( MUC - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RRSe / MUC ) ),( RMSe * Max( MUC,RMSe ) ) ) / ( DS * MUR ) ),MUM ),CS ) ) )", "obj1": 0.815845824411135, "obj2": 0.09242687306549209}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MLU - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( ( MUR - RCSe ) / CS ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.8865096359743041, "obj2": 0.0556453965508857}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MUM + RRSe ) + ( Max( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ),( RCSe / ( ( MUR * ( MUC - CS ) ) / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021617593104921364}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( Max( Min( Max( Const,( DDR / FirstVNF_RAM_Server ) ) ,AMS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ) ) / ( RRSe / MUM ) ) - Max( Min( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008468279629560255}, {"determining": "( ( ACS - ( Max( MRS,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( Min( ( RCSe + MLU ) ,Min( MUR ,RMSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( RRSe / Max( ( MUR - MLU ),( MUC / MUM ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.09020267173836691}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( CS,( RRSe - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7237687366167024, "obj2": 0.14113588216500245}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( DS ,DS ) ,( MLU / MUM ) ) ,MUR ) - Min( RMSe ,DS ) ) / Max( RCSe,CS ) ) - ( Min( RMSe ,RRSe ) + ( Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) / RRSe ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07583244051403508}, {"determining": "( ( Min( Min( DDR ,FirstVNF_CPU_Server ) ,( AMS - MDR ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,AMS ) ) * MDR ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( MLU / RCSe ) ) ,MUM ) ) ,( RRSe - ( Max( Min( MUR ,( MUC + MUR ) ),RRSe ) / MLU ) ) ),( ( ( ( ( ( MUM + ( MUC / MUC ) ) + MUR ) * RMSe ) / ( CS - MUR ) ) / MLU ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.14083359361060438}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.09020267173836691}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8029978586723768, "obj2": 0.09801386513636563}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ) ) - ( ( Const * Max( ( MDR / Max( MRS,BR ) ),Min( ( FirstVNF_RAM_Server + ARS ) ,FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( ( MUC / ( ( ( MUR + RMSe ) / MUC ) - MUR ) ) ,( ( ( ( MUR / RCSe ) / CS ) / Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ) - MUR ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10414941415528092}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813554}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( Max( Min( MUR ,( MUC + MUR ) ),RRSe ) / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14502058821174288}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Min( ( MRS - RRS ) ,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + ( Max( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ),( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14790005706084017}, {"determining": "( Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server + ( RRS * DDR ) ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( ( DS / RCSe ) + MUC ) ,MUM ) ) ,( RRSe - ( Max( DS,( MUR - MUC ) ) / MUC ) ) ),DS )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( FirstVNF_Mem_Server + Min( Const ,( CRS * PN ) ) ) ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - MUR ) ) ) / ( Max( CS,MUC ) / MUM ) ) ,DS ),( ( ( MUC / Min( ( MLU - Min( RMSe ,MLU ) ) ,Min( MUR ,DS ) ) ) + MUM ) / RRSe ) )", "obj1": 0.9443254817987152, "obj2": 0.025721375462937422}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.0122343160597603}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( MLU,MUM ),CS ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7708779443254818, "obj2": 0.11426194865883807}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / MUR ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07664347009962375}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( Max( ( FirstVNF_RAM + BR ),ARS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 0.9122055674518201, "obj2": 0.041416986438964805}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( ACS,DDR ) / MDR ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( MUC - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RRSe / MUC ) ),( RMSe * Max( MUC,RMSe ) ) ) / ( DS * MUR ) ),MUM ),CS ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( ( MRS - FirstVNF_RAM ) * FirstVNF_RAM ) ) - ( AMS * MDR ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( ( RMSe * MUC ) / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.815845824411135, "obj2": 0.09242687306549209}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8029978586723768, "obj2": 0.09801386513636563}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02096252348619143}], "21": [{"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,Max( DDR,ACS ) ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( MRS,BR ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - Const ) ) ) ) ) ) )", "choosing": "( Min( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ) ,MUR ) + ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( ( Max( Max( FirstVNF_CPU_Server,BR ),( FirstVNF_Mem - FirstVNF_Mem_Server ) ) / ( ARS - DDR ) ) / FirstVNF_CPU_Server ) / MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - ( MRS - FirstVNF_CPU ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( Max( RCSe,MLU ) ,( MLU + DS ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( Max( ( ( Min( ( MUM * DS ) ,Min( MLU ,RMSe ) ) + ( RCSe / RCSe ) ) * Max( RRSe,MUR ) ),CS ),CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.6573875802997858, "obj2": 0.2587271037529673}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6702355460385439, "obj2": 0.1869634161696089}, {"determining": "( ( AMS * MDR ) / ( ( ( AMS / Max( MRS,BR ) ) + FirstVNF_Mem_Server ) * ( Min( ( DDR + FirstVNF_RAM_Server ) ,FirstVNF_RAM ) - ( ( MRS + MDR ) / FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( ( MUC / MUM ),MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.6680942184154176, "obj2": 0.2578387495320958}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_Mem ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( Min( BR ,RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,( ( FirstVNF_CPU * RRS ) - ( ACS - AMS ) ) ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RMSe - Max( ( RRSe / ( MUC / DS ) ),MUC ) ) ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MLU ) ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.17716384265172747}, {"determining": "( ( ( FirstVNF_RAM / MDR ) - FirstVNF_Mem_Server ) - ( MDR * Min( Max( MRS,Max( CRS,BR ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( Min( DS ,RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.708779443254818, "obj2": 0.1489662277284358}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13758564010516594}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( FirstVNF_CPU_Server * DDR ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / MUR ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RRSe ,( MUR * MUM ) ),( MLU * ( CS + RMSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06284297108215953}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * ( AMS + ACS ) ) ) + MRS ) * CRS ) )", "choosing": "( Max( ( ( ( MUC + ( RRSe / MUM ) ) / RCSe ) + MUR ),MUR ) + Max( Max( Min( ( RRSe - ( ( ( MUM * MLU ) - MUC ) / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.9057815845824411, "obj2": 0.04496459897478361}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.734475374732334, "obj2": 0.1328478113337989}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13073945753304816}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( ( AMS - MDR ) - ( ( ( ( MRS - DDR ) / Max( ( FirstVNF_CPU_Server - FirstVNF_RAM ),( FirstVNF_RAM + ( PN / ARS ) ) ) ) + MDR ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( MLU ,MUC ) * ( DS - RCSe ) ) ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06503918912537893}, {"determining": "( ( AMS - MDR ) - ( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU ),MDR ) * MDR ) )", "choosing": "( ( DS / RCSe ) + MUR )", "obj1": 0.8094218415417559, "obj2": 0.09475863638562568}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( RRSe - ( MUR / MLU ) ) * DS ),( RMSe - MUC ) ) )", "obj1": 0.8758029978586723, "obj2": 0.05891504589898881}, {"determining": "( ( BR * AMS ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / Min( ( MUR + MUR ) ,( CS + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - ( RCSe + ( MLU + MLU ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289541}, {"determining": "( ( ( Min( DDR ,AMS ) / ( Max( ( ( ARS * MRS ) + ( Min( DDR ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * ( Min( ( AMS / MRS ) ,DDR ) - FirstVNF_CPU ) ) - ( AMS - MDR ) )", "choosing": "( ( MUR - ( Max( ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ),( RRSe / MUC ) ) / ( RCSe * MUR ) ) ) + ( MLU / RCSe ) )", "obj1": 0.7473233404710921, "obj2": 0.1299626032839079}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7623126338329764, "obj2": 0.11852738298659117}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( ( ARS * Max( Const,DDR ) ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Min( Max( MUM,DS ) ,MUM ),MUR ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10119289682657155}, {"determining": "( ( ( AMS - Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,Min( Max( Min( FirstVNF_RAM_Server ,MDR ),( MRS - FirstVNF_Mem ) ) ,( Min( MDR ,AMS ) * FirstVNF_Mem_Server ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( MUC - RMSe ) - ( ( Max( RRSe,CS ) / ( MUM - RCSe ) ) - MUR ) )", "obj1": 0.9229122055674518, "obj2": 0.035298145332118495}, {"determining": "( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / RRS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + Const ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( ( ( ( MLU * MLU ) * RRSe ) - ( DS * ( MUM * CS ) ) ) * ( CS - DS ) ) - RMSe ) ) + DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( ( ( RRS * MDR ) * DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - Max( MLU,Min( ( MUM + ( RMSe * CS ) ) ,MUR ) ) ) ) )", "obj1": 0.8522483940042827, "obj2": 0.07248364942958643}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Min( ( MRS - RRS ) ,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + ( Max( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ),( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.14080267490302273}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( DS - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) + ( MLU / MUM ) )", "obj1": 0.9571734475374732, "obj2": 0.01909010994787109}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,Min( AMS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) * Max( ( Max( ( FirstVNF_Mem * ( ARS + FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / MDR ) ) ) ) )", "choosing": "( ( ( MUC + ( DS / RCSe ) ) / MUR ) + Max( Max( Min( ( Min( RMSe ,Min( ( MUC + MUC ) ,Min( RCSe ,RMSe ) ) ) - ( ( RRSe / ( MUM - RRSe ) ) + ( Max( MUC,MUR ) / ( MLU * RMSe ) ) ) ) ,CS ),( RRSe - ( RCSe - RRSe ) ) ),( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07046611638370316}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * MRS ) * ( Min( DDR ,( FirstVNF_RAM + DDR ) ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( MLU ,RCSe ) ,MUM ),Max( RRSe,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09570032521270753}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( MUR / MLU ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08805548783625188}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( MLU,MUM ),CS ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9164882226980728, "obj2": 0.03954457290064448}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( Const - PN ) ),( MRS / Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,( AMS - MDR ) ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( MUC - Max( ( CS * DS ),Max( Max( MUC,MUM ),CS ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09017238876226769}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / MDR ) - ( Min( Max( Max( MRS,BR ),( MDR * FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_RAM + Min( ( FirstVNF_CPU - RRS ) ,ARS ) ) ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - Min( RCSe ,MUM ) ) ,Min( MUM ,RCSe ) ),( Min( MUC ,RMSe ) / Max( RRSe,( MUM * ( Min( MUR ,( DS - DS ) ) * RMSe ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06899865054579847}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,Min( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9571734475374732, "obj2": 0.01909010994787109}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,( ( ( Min( MUM ,( MLU / CS ) ) * CS ) - ( ( MUR + MLU ) - CS ) ) / MUC ) ) / MLU ) )", "obj1": 0.8436830835117773, "obj2": 0.07583244051403508}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026428774999610216}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),Min( ( FirstVNF_CPU_Server / RRS ) ,AMS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUM - ( ( MUR - RCSe ) / CS ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05626923402236204}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( Max( MUM,DS ),CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.828693790149893, "obj2": 0.08338162035323135}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( Const - PN ) ),( MRS / Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( MUC - Max( ( CS * DS ),Max( Max( ( Max( ( MUC / ( RRSe / MUC ) ),( RMSe * Max( MUC,RMSe ) ) ) / ( DS * MUR ) ),MUM ),CS ) ) )", "obj1": 0.815845824411135, "obj2": 0.09242687306549209}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + Min( MUM ,( MUC + ( DS / RCSe ) ) ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.892933618843683, "obj2": 0.05201884430015805}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * Max( Const,DDR ) ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08597829039481852}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7794432548179872, "obj2": 0.10883097704686488}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( ( MLU - MUM ) - MLU ) - CS ) + Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.12203939959107482}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.892933618843683, "obj2": 0.05201884430015805}, {"determining": "( ( Min( AMS ,MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( ARS ,( FirstVNF_CPU_Server + Min( DDR ,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( DS * MUR ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11162767728073276}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( DDR * RRS ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),DS )", "obj1": 0.8522483940042827, "obj2": 0.07248364942958643}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813554}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7494646680942184, "obj2": 0.12572227318411633}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,AMS ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( DDR / MDR ) ) ) ) ) - DDR )", "choosing": "( ( ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) / ( DS * MUM ) ) + Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.0327069371119205}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8029978586723768, "obj2": 0.09801386513636563}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / ( AMS / PN ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - AMS ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - ( MUM * DS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8972162740899358, "obj2": 0.05014494740490261}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( ARS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( MUR + RMSe ),( RRSe - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.715203426124197, "obj2": 0.14565039171161095}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Min( ( FirstVNF_CPU - RRS ) ,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),Min( ( CS + DS ) ,( RRSe + CS ) ) ) ,MLU ) - Max( Min( ( ( ( MUC * MUR ) + CS ) * Min( ( DS / Max( CS,( MUM * RMSe ) ) ) ,CS ) ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.7130620985010707, "obj2": 0.14706288497929876}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( ( Max( MUR,CS ) / RMSe ) - MUR ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.8865096359743041, "obj2": 0.0556453965508857}, {"determining": "( ( Min( ( AMS - MDR ) ,( ARS / BR ) ) + ( PN - ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM,( AMS * Max( Max( MRS,BR ),( MRS / ( MRS / ACS ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( RCSe + DS ) ,( RRSe + CS ) ) ) ) ,( RRSe - Min( RCSe ,MLU ) ) ),DS )", "obj1": 0.7194860813704497, "obj2": 0.14359837508679774}, {"determining": "( ( ( AMS - MDR ) - ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ) ) - ( ( Const * Max( ( MDR / FirstVNF_Mem ),Min( ( FirstVNF_RAM_Server + ARS ) ,FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "Max( MLU,( Max( RRSe,CS ) / Min( ( MUC / ( ( ( MUR + RMSe ) / MUC ) - MUR ) ) ,( ( ( ( MUR / RCSe ) / CS ) / RMSe ) - MUR ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12365169946927927}, {"determining": "( ( ( BR * ( DDR + Const ) ) + ( ( AMS - MDR ) + ( AMS * FirstVNF_CPU ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( ( Min( RRSe ,( MUR * Max( MUR,MUR ) ) ) + MUC ) / RCSe ) ),( CS * RRSe ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03475480642286755}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,( AMS * CRS ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11353199092940984}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( Const * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( CS + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.1247459410208035}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),DS )", "obj1": 0.7173447537473233, "obj2": 0.14478327182202794}, {"determining": "( ( ( RRS / Const ) * BR ) - ( MRS / Max( Max( Max( RRS,ARS ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( MUC ,MUR ) + Max( ( MUC + ( Max( ( DS * RMSe ),CS ) / RCSe ) ),( CS * RCSe ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03475480642286755}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "Max( Max( ( ( CS * DS ) / RCSe ),Max( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * ( MUC + ( Min( RRSe ,MUR ) / RCSe ) ) ) ),RRSe ) ),Max( MUR,CS ) )", "obj1": 0.8865096359743041, "obj2": 0.0556453965508857}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MUM + RRSe ) + ( Max( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ),( RCSe / ( ( MUR * ( MUC - CS ) ) / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021617593104921357}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( AMS * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( CS,RRSe ) ,MUM ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( ( ( ACS / ACS ) + ( Const - ( BR * FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - Const ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RMSe ),( Min( RMSe ,RCSe ) / Max( RRSe,( RCSe / ( MUC / ( ( ( MUR * RCSe ) + RRSe ) * ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( ( ( MDR / ACS ) + Max( ACS,( MDR / Min( MDR ,MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( FirstVNF_CPU * ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - Const ) ) ) ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,RCSe ) - Max( RRSe,( RCSe / ( MUC / ( Min( ( MUR - CS ) ,CS ) * ( CS * RRSe ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ACS - ( Max( MRS,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) - ( ( FirstVNF_Mem + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( Min( ( RCSe + MLU ) ,Min( MUR ,RMSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( RRSe / Max( ( MUR - MLU ),( MUC / MUM ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) - ( ( MRS + AMS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ) ),DS )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + ( ( CS / ( RCSe / ( MLU / MUC ) ) ) - MUR ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( CS,( RRSe - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7237687366167024, "obj2": 0.14113588216500245}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.880085653104925, "obj2": 0.058020769457027506}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( ( MUC - CS ) + RMSe ) / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.8436830835117773, "obj2": 0.07583244051403508}, {"determining": "( ( Min( ( AMS - MDR ) ,( BR * AMS ) ) + MRS ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10649850248690478}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8029978586723768, "obj2": 0.09801386513636563}, {"determining": "( ( ( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ) / DDR ) * FirstVNF_CPU ) - ( Min( Max( FirstVNF_RAM,( FirstVNF_CPU_Server - ( ARS * CRS ) ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( MUC + RMSe ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server + ( RRS * DDR ) ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( ( DS / RCSe ) + MUC ) ,MUM ) ) ,( RRSe - ( Max( DS,( MUR - MUC ) ) / MUC ) ) ),DS )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / RRSe ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( ( ( CS - Max( CS,RMSe ) ) - ( RCSe / ( RCSe + RCSe ) ) ) * DS ) ) )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( ( Min( ( AMS / MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ARS - FirstVNF_Mem ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( Max( RMSe,DS ) - ( MUM / MUC ) ) / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.9443254817987152, "obj2": 0.025721375462937422}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.0122343160597603}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.9700214132762313, "obj2": 0.01345165997935071}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + ( MLU / DS ) )", "obj1": 0.9100642398286938, "obj2": 0.042182597862364786}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( PN - ( MDR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) - Min( Min( ARS ,FirstVNF_RAM_Server ) ,( BR * Max( ( RRS * FirstVNF_CPU ),FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( RCSe * RCSe ) * ( CS * Max( Max( ( CS - RMSe ),RRSe ),DS ) ) ) ,Max( Max( Max( MUC,( ( RRSe * Min( MLU ,DS ) ) / Min( MUR ,RMSe ) ) ),MLU ),DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12258526171310548}, {"determining": "( ( ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( ( FirstVNF_Mem + PN ) + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( AMS - ( Min( ( MRS - Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) ) - ( DDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( MUM * MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10173942082582317}, {"determining": "( ( MDR - AMS ) - ( Min( Min( DDR ,AMS ) ,Max( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_RAM ) ) * ( MRS - BR ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + ( ( CS + ( Max( ( Max( RMSe,( MUM - MUC ) ) * MUR ),MLU ) - Max( CS,( MUC + ( RRSe / ( RCSe - MUC ) ) ) ) ) ) / DS ) )", "obj1": 0.8244111349036403, "obj2": 0.08696388940102237}, {"determining": "( ( ( AMS * MDR ) - ( Min( Max( ( MRS / Max( MRS,( FirstVNF_RAM_Server + PN ) ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + ( Max( MRS,FirstVNF_CPU_Server ) - AMS ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_RAM + AMS ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( RMSe ,( MUM / ( MUC * RRSe ) ) ) ) ,( RRSe - ( MUR / ( RRSe * DS ) ) ) ),( Max( RRSe,( ( Min( RCSe ,RCSe ) * Max( CS,Min( RMSe ,RCSe ) ) ) * ( DS * CS ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.058020769457027506}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / MUR ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07664347009962375}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( ( AMS * MDR ) * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.03190437195428894}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( Max( ( FirstVNF_RAM + Min( DDR ,DDR ) ),ARS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.041416986438964805}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,( AMS * CRS ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.042182597862364786}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * Max( ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) + Max( ( ( ( MRS / ACS ) * ( Max( ACS,DDR ) / MDR ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( Max( Max( MLU,MUM ),( MUR / MLU ) ) / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( ( RRSe / CS ) / Min( CS ,RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( RRS * BR ),Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),MDR ) ) ) * DDR ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7708779443254818, "obj2": 0.11426194865883807}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( Const - PN ) ),( MRS / Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( Max( Max( MLU,MUM ),CS ) / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.815845824411135, "obj2": 0.09242687306549209}, {"determining": "( ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( MRS,( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( FirstVNF_Mem_Server + Min( Const ,( CRS * PN ) ) ) ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ),( RRSe - ( RCSe - RRSe ) ) ),( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.025721375462937422}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( DS / RCSe ) + ( MLU / DS ) )", "obj1": 0.9528907922912205, "obj2": 0.02096252348619143}], "22": [{"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,Max( DDR,ACS ) ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( MRS,BR ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - Const ) ) ) ) ) ) )", "choosing": "( Min( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ) ,MUR ) + ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,Max( DDR,ACS ) ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( MRS,BR ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - Const ) ) ) ) ) ) )", "choosing": "( Min( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ) ,MUR ) + ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( ( AMS - MDR ) - MDR ) ,( AMS * CRS ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Max( MUM,( ( CS + MUC ) + MUR ) ) ) ) )", "obj1": 0.6573875802997858, "obj2": 0.25206063652246474}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) ) ),MUR ) )", "obj1": 0.6638115631691649, "obj2": 0.19648946881192772}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_Mem ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( Min( BR ,RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,( ( FirstVNF_CPU * RRS ) - ( ACS - AMS ) ) ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RMSe - Max( ( RRSe / ( MUC / DS ) ),MUC ) ) ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MLU ) ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.17716384265172747}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( RCSe,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ARS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( MUR + RMSe ),( RRSe - ( RCSe - RRSe ) ) ) ) + DS )", "obj1": 0.6873661670235546, "obj2": 0.17943651207256292}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6702355460385439, "obj2": 0.1869634161696089}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_RAM * Const ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( RRSe - Max( MUM,MUC ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) + ( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) - MUR ) )", "obj1": 0.8522483940042827, "obj2": 0.07187407155063141}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6702355460385439, "obj2": 0.1869634161696089}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * Max( Const,DDR ) ) + MDR ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09160925307579174}, {"determining": "( ( ( Min( DDR ,AMS ) / ( Max( ( ( ARS * MRS ) + ( Min( DDR ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * ( Min( ( AMS / MRS ) ,DDR ) - FirstVNF_CPU ) ) - ( AMS - MDR ) )", "choosing": "( ( MUR - ( Max( ( Min( RRSe ,MLU ) * ( MUC + ( DS / RCSe ) ) ),( RRSe / MUC ) ) / ( RCSe * MUR ) ) ) + ( MLU / RCSe ) )", "obj1": 0.7473233404710921, "obj2": 0.1299626032839079}, {"determining": "( ( ( ACS + ARS ) - ( Min( Min( AMS ,BR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( PN + ( BR / ARS ) ) )", "choosing": "Max( MLU,( Min( RMSe ,( RRSe - MUM ) ) / ( ( Max( MUC,CS ) + CS ) + MLU ) ) )", "obj1": 0.9336188436830836, "obj2": 0.030965654509138803}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) )", "obj1": 0.8072805139186295, "obj2": 0.0940032978835875}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - Min( MDR ,FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) / MRS ) ,Min( CRS ,Max( FirstVNF_RAM,CRS ) ) ) ) ) )", "choosing": "( Min( ( ( MUC / MUR ) / ( Min( MUR ,MLU ) - ( ( RCSe + DS ) * DS ) ) ) ,MUM ) - ( CS - MUC ) )", "obj1": 0.961456102783726, "obj2": 0.01721248925615285}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.9057815845824411, "obj2": 0.0449645989747836}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,( ARS + ( FirstVNF_Mem_Server - BR ) ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,Max( FirstVNF_CPU_Server,DDR ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( ( ( RMSe / RCSe ) + RMSe ) / MUR ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RRSe ,( MUR * MUM ) ),( MLU * ( MUM + RMSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.06284297108215951}, {"determining": "( ( ( AMS - MDR ) - Min( ACS ,( ( PN / DDR ) * Min( FirstVNF_RAM ,Const ) ) ) ) - ( ( Min( Max( ( ( ARS - Min( FirstVNF_RAM_Server ,MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( ( RRSe * MUC ) / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MLU ,RMSe ) ) ),MLU ) )", "obj1": 0.880085653104925, "obj2": 0.0580207694570275}, {"determining": "( ( ( AMS - ( Min( ( MRS + Max( FirstVNF_Mem_Server,Min( RRS ,CRS ) ) ) ,( MRS + Const ) ) * MDR ) ) - ( ( Max( AMS,DDR ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( MUC - Min( Max( Min( ( CS + DS ) ,( RRSe + CS ) ),RRSe ) ,Min( CS ,Max( ( RMSe + MUC ),RCSe ) ) ) ) / RCSe ),Max( ( DS / RCSe ),RRSe ) ),( ( Min( Max( MUC,MUM ) ,Min( RMSe ,MLU ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.7987152034261242, "obj2": 0.09915028553139306}, {"determining": "( ( ( AMS - FirstVNF_CPU ) - ( Min( Max( ( BR / MRS ),( FirstVNF_Mem_Server / MDR ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( ( BR * MDR ) * ( ARS + Min( ( ACS + RRS ) ,MRS ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_RAM * AMS ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS + RCSe ) ) ,MUM ) ) ,( RRSe - ( ( ( ( CS - Min( MUM ,MUR ) ) * RRSe ) + Max( ( Max( MUM,MLU ) + ( MLU + RRSe ) ),( RMSe - MUC ) ) ) / MLU ) ) ),( MUC / Min( MUC ,RMSe ) ) )", "obj1": 0.9293361884368309, "obj2": 0.032297461542303035}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * MRS ) * ( Min( DDR ,( FirstVNF_RAM + DDR ) ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( MLU ,RCSe ) ,MUM ),Max( RRSe,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09570032521270753}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( ARS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.1405402191560264}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem_Server * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( RRSe * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8008565310492506, "obj2": 0.09764550877682136}, {"determining": "( ( BR * AMS ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / Min( ( MUR + MUR ) ,( CS + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - ( RCSe + ( MLU + MLU ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289541}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813554}, {"determining": "( ( ( AMS + MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( ( AMS + ACS ) - ( AMS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - Min( Min( Min( FirstVNF_RAM_Server ,AMS ) ,ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,Min( RRSe ,( MUR * MUM ) ) ),Min( Max( RRSe,Max( RRSe,CS ) ) ,Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.8907922912205567, "obj2": 0.053102820599731204}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,Min( AMS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) * Max( ( Max( ( FirstVNF_Mem * ( ARS + FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / MDR ) ) ) ) )", "choosing": "( ( ( MUC + ( DS / RCSe ) ) / MUR ) + Max( Max( Min( ( Min( RMSe ,Min( ( MUC + MUC ) ,Min( RCSe ,RMSe ) ) ) - ( ( RRSe / ( MUM - RRSe ) ) + ( Max( MUC,MUR ) / ( MLU * RMSe ) ) ) ) ,CS ),( RRSe - ( RCSe - RRSe ) ) ),( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07046611638370316}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( MUR / MLU ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08805548783625188}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13073945753304816}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ( MDR / FirstVNF_Mem_Server ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( RRSe + MUC ) * Max( CS,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.055283574833693054}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13758564010516594}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( MLU,MUM ),CS ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( MUR / MLU ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( ( ( MUR / RCSe ) / CS ) / RMSe ) )", "obj1": 0.7901498929336188, "obj2": 0.10422759855501136}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * ( MRS / Const ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9164882226980728, "obj2": 0.03954457290064447}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.9271948608137045, "obj2": 0.034754806422867546}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( ( Max( ( MUC * MUC ),( DS * MUC ) ) - RMSe ) * ( ( Min( CS ,DS ) / ( RCSe - RCSe ) ) - RCSe ) ) + MUM ) ,MUM ),MUR ) + Max( Max( RRSe,Max( ( MLU / Min( CS ,MUC ) ),( Max( MUC,( MLU - MUC ) ) - MLU ) ) ),( Max( DS,( MUC - RMSe ) ) / ( MUC + MUM ) ) ) )", "obj1": 0.9036402569593148, "obj2": 0.047577559522207206}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( AMS * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( MRS - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( CS,Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) ) ,MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( PN - ( MDR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) - Min( Min( ARS ,FirstVNF_RAM_Server ) ,( BR * Max( ( RRS * FirstVNF_CPU ),FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( RCSe * RCSe ) * ( CS * Max( Max( ( CS - RMSe ),RRSe ),DS ) ) ) ,Max( Max( Max( MUC,( ( RRSe * Min( MLU ,DS ) ) / Min( MUR ,RMSe ) ) ),MLU ),DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12258526171310548}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) ) )", "obj1": 0.9421841541755889, "obj2": 0.026428774999610216}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8436830835117773, "obj2": 0.07583244051403508}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.8758029978586723, "obj2": 0.05891504589898881}, {"determining": "( ( AMS - MDR ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( MUC / MLU ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.7858672376873662, "obj2": 0.1058445173175155}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8693790149892934, "obj2": 0.06345650123064393}, {"determining": "( ( MDR - AMS ) - ( Min( Min( DDR ,AMS ) ,Max( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_RAM ) ) * ( MRS - BR ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + ( ( CS + ( Max( ( Max( RMSe,( MUM - MUC ) ) * MUR ),MLU ) - Max( CS,( MUC + ( RRSe / ( RCSe - MUC ) ) ) ) ) ) / DS ) )", "obj1": 0.8244111349036403, "obj2": 0.08696388940102237}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( Max( ( Min( ( FirstVNF_CPU / MDR ) ,FirstVNF_RAM_Server ) * MDR ),MDR ),( RRS * BR ) ) ) * RRS ) )", "choosing": "( Min( ( RCSe * Max( MLU,DS ) ) ,RCSe ) + Max( ( MUC + ( MLU / RCSe ) ),MUM ) )", "obj1": 0.7687366167023555, "obj2": 0.11512854487449972}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.734475374732334, "obj2": 0.1328478113337989}, {"determining": "( ( ( AMS - Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) )", "obj1": 0.9229122055674518, "obj2": 0.03529814533211849}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - MRS ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06503918912537893}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( ( MUC / MUM ),MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7301927194860813, "obj2": 0.13758564010516594}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * MDR ) ) - Min( Min( RRS ,MRS ) ,ACS ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,( MUC + ( DS / RCSe ) ) ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( Max( DS,RMSe ),( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7494646680942184, "obj2": 0.12572227318411633}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * ( MRS * RRS ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Max( MRS,DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,CS ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( ( RCSe / CS ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10277590027072035}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + ( Max( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ),( RCSe / ( MUC / MUM ) ) ) / ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) ) )", "obj1": 0.721627408993576, "obj2": 0.14294524434631561}, {"determining": "( ( Min( ( AMS - MDR ) ,( BR * AMS ) ) + MRS ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10649850248690478}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,( ( ( Min( MUM ,( MLU / CS ) ) * CS ) - ( ( MUR + MLU ) - CS ) ) / MUC ) ) / MLU ) )", "obj1": 0.8436830835117773, "obj2": 0.07583244051403508}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7815845824411135, "obj2": 0.10827295099027942}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / ( AMS / PN ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - AMS ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - ( MUM * DS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8972162740899358, "obj2": 0.05014494740490261}, {"determining": "( ( AMS - MDR ) - ( Min( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,ACS ) / FirstVNF_CPU_Server ) ),( AMS / FirstVNF_Mem_Server ) ) * AMS ) ,Min( DDR ,AMS ) ) * MDR ) )", "choosing": "( ( ( Max( Max( Min( ( ( DS / MLU ) - RRSe ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7623126338329764, "obj2": 0.11852738298659117}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( FirstVNF_RAM * AMS ) ) + MDR ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,RRSe ),MUR ) + Max( MUR,Min( MUR ,MLU ) ) )", "obj1": 0.7601713062098501, "obj2": 0.12074194795901554}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * Max( Max( Max( MRS,BR ),( Const - PN ) ),( MRS / Max( Max( MRS,BR ),Min( FirstVNF_Mem_Server ,( AMS - MDR ) ) ) ) ) ) ) - ( AMS * MDR ) )", "choosing": "( MUC - Max( ( CS * DS ),Max( Max( MUC,MUM ),CS ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09017238876226769}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,( RCSe / CS ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13236884859939108}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11306633265487406}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),DS )", "obj1": 0.7173447537473233, "obj2": 0.14478327182202794}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ),BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( RCSe / RCSe ) + ( MLU / DS ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7109207708779444, "obj2": 0.14800881160571625}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( ( ( ACS / ACS ) + ( Const - ACS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - Const ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,RCSe ) / Max( RRSe,( RCSe / ( MUC / ( Min( RMSe ,CS ) * ( CS * RRSe ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( DS - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) + ( MLU / MUM ) )", "obj1": 0.9571734475374732, "obj2": 0.01909010994787109}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( ( ( ACS / ACS ) + ( Const - ( BR * FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - Const ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( MUC - RMSe ),( Min( RMSe ,RCSe ) / Max( RRSe,( RCSe / ( MUC / ( ( ( MUR * RCSe ) + RRSe ) * ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( AMS * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( CS,RRSe ) ,MUM ) )", "obj1": 0.9764453961456103, "obj2": 0.010319483814321236}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUM ,Min( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9571734475374732, "obj2": 0.01909010994787109}, {"determining": "( ( Min( ( AMS - MDR ) ,( ARS / BR ) ) + ( PN - ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM,( AMS * Max( Max( MRS,BR ),( MRS / ( MRS / ACS ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( RCSe + DS ) ,( RRSe + CS ) ) ) ) ,( RRSe - Min( RCSe ,MLU ) ) ),DS )", "obj1": 0.7194860813704497, "obj2": 0.14359837508679774}, {"determining": "( ( ( AMS - ( Min( ( MRS - Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06866109463917162}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ),RRSe ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / RRS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + Const ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( ( ( ( MLU * MLU ) * RRSe ) - ( DS * ( MUM * CS ) ) ) * ( CS - DS ) ) - RMSe ) ) + DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( ( MUC - CS ) + RMSe ) / CS ) ) - ( ( MUM - ( ( MUR - RCSe ) / CS ) ) - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( Max( Min( RRSe ,( MUR * MUM ) ),MUC ) / RCSe ) ),( CS * RRSe ) ) )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( ( Min( ( AMS / MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ARS - FirstVNF_Mem ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( Max( RMSe,DS ) - ( MUM / MUC ) ) / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.9443254817987152, "obj2": 0.025721375462937422}, {"determining": "( Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server + ( RRS * DDR ) ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( ( DS / RCSe ) + MUC ) ,MUM ) ) ,( RRSe - ( Max( DS,( MUR - MUC ) ) / MUC ) ) ),DS )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( ( MUC / MUM ),MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7794432548179872, "obj2": 0.10883097704686488}, {"determining": "( ( Min( AMS ,MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( ARS ,( FirstVNF_CPU_Server + Min( DDR ,FirstVNF_Mem ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( DS * MUR ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11162767728073276}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / RMSe ) - Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.9721627408993576, "obj2": 0.0122343160597603}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.9700214132762313, "obj2": 0.01345165997935071}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + ( MLU / DS ) )", "obj1": 0.9100642398286938, "obj2": 0.042182597862364786}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( PN / ( Const + FirstVNF_RAM ) ) ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + Min( MUM ,( MUC + ( DS / RCSe ) ) ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.892933618843683, "obj2": 0.05201884430015805}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( Max( Max( MLU,MUM ),CS ) / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10173942082582317}, {"determining": "( ( AMS * Max( ( MRS / FirstVNF_CPU_Server ),( MRS / ACS ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) * Max( Max( ( MUC / DS ),DS ),CS ) ) + Max( Max( CS,( ( ( MLU - MUR ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.828693790149893, "obj2": 0.08338162035323135}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * Max( Const,DDR ) ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08597829039481852}, {"determining": "( ( ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( ( FirstVNF_Mem + PN ) + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( AMS - ( Min( ( MRS - Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) ) - ( DDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( MUM * MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10173942082582317}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),Min( ( FirstVNF_CPU_Server / RRS ) ,AMS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUM - ( ( MUR - RCSe ) / CS ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.8843683083511777, "obj2": 0.05626923402236204}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) - ( ( MRS + AMS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ) ),DS )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( RRSe - ( MUR / MLU ) ) * DS ),( RMSe - MUC ) ) )", "obj1": 0.8758029978586723, "obj2": 0.05891504589898881}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / MUR ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07664347009962375}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * Max( ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) + Max( ( ( ( MRS / ACS ) * ( Max( ACS,DDR ) / MDR ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( Max( Max( MLU,MUM ),( MUR / MLU ) ) / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( ( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ) / DDR ) * FirstVNF_CPU ) - ( Min( Max( FirstVNF_RAM,( FirstVNF_CPU_Server - ( ARS * CRS ) ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,RCSe ) ) ),( MUC + RMSe ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}], "23": [{"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( ( AMS - MDR ) - MDR ) ,( AMS * CRS ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Max( MUM,( ( CS + MUC ) + MUR ) ) ) ) )", "obj1": 0.6573875802997858, "obj2": 0.25206063652246474}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,Max( DDR,ACS ) ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( DDR,ACS ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( MUC + ( DS / Max( CS,( CS / MUC ) ) ) ) ,MUR ) + ( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,Max( DDR,ACS ) ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( MRS,BR ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - Const ) ) ) ) ) ) )", "choosing": "( Min( ( MUC + ( DS / Max( CS,( ( DS / Max( RRSe,RCSe ) ) - RMSe ) ) ) ) ,MUR ) + ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( ( AMS - MDR ) - MDR ) ,( AMS * CRS ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Max( MUM,( ( CS + MUC ) + MUR ) ) ) ) )", "obj1": 0.6573875802997858, "obj2": 0.25206063652246474}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,Min( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.17169510512231662}, {"determining": "( Max( Const,FirstVNF_RAM ) - Max( Min( ( AMS - FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ),( PN / ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),( MRS / BR ) ) ,Max( FirstVNF_RAM_Server,( ARS * Min( ARS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),Max( ( Min( Min( MUM ,( DS - MUC ) ) ,RCSe ) * DS ),( MUC * ( MUM / Min( ( CS / MLU ) ,MUM ) ) ) ) ) ) + DS )", "obj1": 0.6873661670235546, "obj2": 0.1794365120725629}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * MDR ) ) - Min( Min( RRS ,MRS ) ,ACS ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,( MUC + ( DS / RCSe ) ) ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( Max( DS,RMSe ),( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.16144262940100665}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6702355460385439, "obj2": 0.1869634161696089}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( Min( DDR ,ACS ) - ( MDR * ( Min( ( DDR + AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( FirstVNF_RAM ,Max( Const,DDR ) ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,( MUC + ( DS / RCSe ) ) ) + Max( MUR,( Max( Min( Min( Min( Max( MUR,MUM ) ,Min( RRSe ,MUM ) ) ,RCSe ) ,MUC ),MUR ) + Max( Max( DS,RMSe ),( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.16144262940100665}, {"determining": "( ( ( AMS - ( DDR - FirstVNF_Mem_Server ) ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( DDR,AMS ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) + Max( Min( Max( RMSe,RCSe ) ,MUM ),( MUM / ( ( MUM + MLU ) - MUM ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.13205055858305756}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.7473233404710921, "obj2": 0.12978326728599326}, {"determining": "( ( ( AMS - ( Min( Max( MRS,( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13049858762302954}, {"determining": "( ( Min( ( AMS - ARS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / Max( ACS,FirstVNF_RAM_Server ) ) ) - ( Min( Max( MRS,( FirstVNF_CPU / Const ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "Max( ( ( RCSe / Min( ( MUR / MUR ) ,( CS + ( ( MUM / CS ) + Max( CS,MUR ) ) ) ) ) * MUC ),( RRSe * RRSe ) )", "obj1": 0.7259100642398287, "obj2": 0.14054021915602638}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6702355460385439, "obj2": 0.1869634161696089}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( RRSe - ( MUR / MLU ) ) * DS ),( RMSe - MUC ) ) )", "obj1": 0.8758029978586723, "obj2": 0.058915045898988806}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7751605995717344, "obj2": 0.1110936464408167}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( Min( Max( MRS,BR ) ,DDR ) / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - MRS ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( ( MUM - MUC ) ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07553135343595538}, {"determining": "( ( ( AMS - Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) )", "obj1": 0.9229122055674518, "obj2": 0.03529814533211849}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / Max( Min( RMSe ,MLU ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) ) ),MUR ) )", "obj1": 0.6659528907922913, "obj2": 0.18987065718837162}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( Max( Max( ( Min( ( FirstVNF_CPU / MDR ) ,FirstVNF_RAM_Server ) * MDR ),MDR ),( RRS * BR ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( Max( MLU,DS ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.8715203426124197, "obj2": 0.06226812787001669}, {"determining": "( Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server + ( RRS * DDR ) ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( ( DS / RCSe ) + MUC ) ,MUM ) ) ,( RRSe - ( Max( DS,( MUR - MUC ) ) / MUC ) ) ),DS )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),Min( ( FirstVNF_CPU_Server / RRS ) ,( ARS - ( AMS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08748932875278537}, {"determining": "( ( BR * AMS ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / Min( ( MUR + MUR ) ,( CS + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - ( RCSe + ( MLU + MLU ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289541}, {"determining": "( ( ( Max( RRS,FirstVNF_CPU ) - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) ) ) ,( RRSe - ( MUR / MUR ) ) ),( Min( MUC ,RMSe ) / Max( ( RMSe * ( ( ( RMSe / MLU ) * MUM ) + Max( MUM,RCSe ) ) ),( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.815845824411135, "obj2": 0.08978501555120039}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13758564010516594}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * MRS ) * ( Min( DDR ,( FirstVNF_RAM + DDR ) ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( MLU ,RCSe ) ,MUM ),Max( RRSe,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09570032521270753}, {"determining": "( ( ( AMS - ( Min( ( MRS + Max( FirstVNF_Mem_Server,RRS ) ) ,( MRS / Const ) ) * MDR ) ) - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( Min( Max( Min( ( CS + DS ) ,( RRSe + CS ) ),RRSe ) ,Min( CS ,Max( RCSe,MUM ) ) ) - MUC ) / RCSe ),Max( ( DS / RCSe ),RRSe ) ),( ( Min( ( MUC + MUM ) ,Min( RMSe ,MLU ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.7944325481798715, "obj2": 0.1011229717454504}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS + Max( BR,Min( PN ,CRS ) ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) + ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( ( Min( ( MUC / MUM ) ,Min( MLU ,RMSe ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06801061217986017}, {"determining": "( ( ( Min( ( AMS / MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ARS - FirstVNF_Mem ) )", "choosing": "( Min( MUM ,Max( ( Max( MUM,CS ) + DS ),( Min( MUM ,( ( Max( RMSe,DS ) - ( MUM / MUC ) ) / CS ) ) - ( RCSe - RRSe ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.9443254817987152, "obj2": 0.025721375462937422}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.7494646680942184, "obj2": 0.12569161106187784}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( DS - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) + ( MLU / MUM ) )", "obj1": 0.9571734475374732, "obj2": 0.01909010994787109}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem_Server * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( RRSe * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.8008565310492506, "obj2": 0.09764550877682136}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7708779443254818, "obj2": 0.11306633265487406}, {"determining": "( ( ( AMS + MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( ( AMS + ACS ) - ( AMS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - Min( Min( Min( FirstVNF_RAM_Server ,AMS ) ,ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,Min( RRSe ,( MUR * MUM ) ) ),Min( Max( RRSe,Max( RRSe,CS ) ) ,Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.8907922912205567, "obj2": 0.053102820599731204}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,Min( AMS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) * Max( ( Max( ( FirstVNF_Mem * ( ARS + FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / MDR ) ) ) ) )", "choosing": "( ( ( MUC + ( DS / RCSe ) ) / MUR ) + Max( Max( Min( ( Min( RMSe ,Min( ( MUC + MUC ) ,Min( RCSe ,RMSe ) ) ) - ( ( RRSe / ( MUM - RRSe ) ) + ( Max( MUC,MUR ) / ( MLU * RMSe ) ) ) ) ,CS ),( RRSe - ( RCSe - RRSe ) ) ),( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07046611638370316}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS - MDR ),FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( Max( Max( MUM,MUM ),CS ) / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10374251257677586}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( ( ( ( Max( MUR,CS ) / ( MUM - RRSe ) ) - MUR ) / ( DS * DS ) ) ,DS ),( RRSe - ( MUM - ( MLU / MUM ) ) ) ) ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.9271948608137045, "obj2": 0.034754806422867546}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * ( Max( ( FirstVNF_RAM * BR ),DDR ) * FirstVNF_CPU ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + ( Max( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( DS ,RRSe ),CS ) - MUC ) ),CS ),( RCSe / ( MUC / MUM ) ) ) / ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) ) )", "obj1": 0.721627408993576, "obj2": 0.1428449716705786}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RMSe - Max( ( RRSe / ( MUC / DS ) ),MUC ) ) ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MLU ) ) ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10883097704686485}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,Max( MRS,FirstVNF_CPU_Server ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( MUR,( Min( RRSe ,( MLU * ( Max( CS,RRSe ) + MUM ) ) ) + RMSe ) ) ) - Max( ( CS * DS ),( RMSe - MUC ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04218259786236478}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) - ( ( MRS + AMS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Max( ( ( ( ( MLU + MLU ) / RMSe ) - ( ( RMSe + RRSe ) - Min( MUM ,RMSe ) ) ) / ( DS * DS ) ),Min( MUR ,( RRSe - ( MUR * ( MUC - CS ) ) ) ) ) ),DS )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( AMS - MDR ) - Max( Max( Min( Max( CRS,( DDR + FirstVNF_CPU_Server ) ) ,ACS ),Min( RRS ,( ARS - ( ( FirstVNF_Mem / AMS ) + CRS ) ) ) ),MDR ) ) - ( ( Min( Max( DDR,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Min( ( MUR + ( ( RRSe - Min( ( ( MUR + MUM ) / MUM ) ,RRSe ) ) - MUC ) ) ,MUR ) + Max( Max( Min( ( ( Max( MUM,MUM ) / RCSe ) - ( Min( Min( RRSe ,RMSe ) ,( RCSe * RMSe ) ) / MLU ) ) ,( Max( CS,MLU ) - RMSe ) ),( Max( Min( MUM ,Min( RMSe ,RCSe ) ),MUR ) / Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ),MLU ) )", "obj1": 0.9700214132762313, "obj2": 0.013191732182479831}, {"determining": "( ( ( AMS - MDR ) - ( Const / ( DDR / ( AMS + FirstVNF_Mem ) ) ) ) - ( ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( MUC + RRSe ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + Max( ( MLU + RRSe ),( ( MLU * ( RRSe + RRSe ) ) + CS ) ) ) ),MUR ) )", "obj1": 0.8693790149892934, "obj2": 0.06345650123064392}, {"determining": "( ( AMS - MDR ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( MUC / MLU ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.7858672376873662, "obj2": 0.1058445173175155}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS + FirstVNF_CPU ) ) + MRS ) * Max( FirstVNF_RAM,( BR * AMS ) ) ) )", "choosing": "Max( ( ( RRSe - ( MUR / MLU ) ) - ( Max( Max( MUC,( Max( RRSe,( CS / RRSe ) ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( ( DS / RCSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086219}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.04211928893240071}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.01909010994787109}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( Max( Min( RRSe ,( MUR * MUM ) ),MUC ) / RCSe ) ),( CS * RRSe ) ) )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( AMS / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( MDR - AMS ) ) - FirstVNF_RAM ),DDR ) ,( AMS + FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,CS ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.8522483940042827, "obj2": 0.07187407155063141}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * Max( Const,DDR ) ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08597829039481852}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813554}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * Max( Const,DDR ) ) + MDR ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09160925307579174}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) )", "obj1": 0.8072805139186295, "obj2": 0.0940032978835875}, {"determining": "( ( ( AMS - Min( AMS ,CRS ) ) - ( ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) * Min( Max( DDR,AMS ) ,DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( Min( MLU ,MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( ( MUC / MUM ),MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( MUC + RMSe ) * Max( CS,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.11440416626642913}, {"determining": "( ( MDR - AMS ) - ( Min( Min( DDR ,AMS ) ,Max( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_RAM ) ) * ( MRS - BR ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + ( ( CS + ( Max( ( Max( RMSe,( MUM - MUC ) ) * MUR ),MLU ) - Max( CS,( MUC + ( RRSe / ( RCSe - MUC ) ) ) ) ) ) / DS ) )", "obj1": 0.8244111349036403, "obj2": 0.08696388940102237}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - MRS ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06503918912537893}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( RRSe + MUC ) * Max( CS,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13758564010516594}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * ( MRS * RRS ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Max( MRS,DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,CS ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( ( RCSe / CS ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10277590027072035}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Min( ( FirstVNF_RAM * AMS ) ,DDR ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( ( FirstVNF_Mem + ( FirstVNF_RAM - FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / Min( CS ,DS ) ) ) + MUR ) + Max( MLU,Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.9057815845824411, "obj2": 0.0449645989747836}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( ( Max( ( MUC * MUC ),( DS * MUC ) ) - RMSe ) * ( ( Min( CS ,DS ) / ( RCSe - RCSe ) ) - RCSe ) ) + MUM ) ,MUM ),MUR ) + Max( Max( RRSe,Max( ( MLU / Min( CS ,MUC ) ),( Max( MUC,( MLU - MUC ) ) - MLU ) ) ),( Max( DS,( MUC - RMSe ) ) / ( MUC + MUM ) ) ) )", "obj1": 0.9036402569593148, "obj2": 0.047577559522207206}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( MRS + DDR ) * ( AMS * MDR ) ) ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,RCSe ) ) - ( MUR / MLU ) ) * DS ),( RMSe - MUC ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10812852221108503}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / ( AMS / PN ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - AMS ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - ( MUM * DS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8972162740899358, "obj2": 0.05014494740490261}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,( MRS + ( Min( Const ,MRS ) * MRS ) ) ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( MUR,( Min( MUC ,( Max( MUC,( MLU / RRSe ) ) + Max( Min( ( Max( MUR,CS ) / CS ) ,( RMSe * RCSe ) ),MLU ) ) ) / Max( RRSe,( MUM * MUM ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10649094951943155}, {"determining": "( ( PN - ( MDR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) - Min( Min( ARS ,FirstVNF_RAM_Server ) ,( BR * Max( ( RRS * FirstVNF_CPU ),FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( RCSe * RCSe ) * ( CS * Max( Max( ( CS - RMSe ),RRSe ),DS ) ) ) ,Max( Max( Max( MUC,( ( RRSe * Min( MLU ,DS ) ) / Min( MUR ,RMSe ) ) ),MLU ),DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12258526171310548}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7623126338329764, "obj2": 0.11852738298659117}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),ARS ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( Min( RRSe ,MUR ) + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7130620985010707, "obj2": 0.14689352542398457}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( ( ( AMS * FirstVNF_CPU ) - ( MDR - AMS ) ) + MRS ) - ( Max( ( ( FirstVNF_CPU - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( ACS ,( Max( ACS,DDR ) / MDR ) ) - Max( ACS,FirstVNF_CPU ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - ( RRSe + Min( Min( ( ( ( DS * Min( MUC ,CS ) ) + ( RRSe / RCSe ) ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ) ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - Min( MDR ,FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) / MRS ) ,Min( CRS ,Max( FirstVNF_RAM,CRS ) ) ) ) ) )", "choosing": "( Min( ( ( MUC / MUR ) / ( Min( MUR ,MLU ) - ( ( RCSe + DS ) * DS ) ) ) ,MUM ) - ( CS - MUC ) )", "obj1": 0.961456102783726, "obj2": 0.01721248925615285}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Min( DDR ,AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7516059957173448, "obj2": 0.12470095082920492}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ( MDR / FirstVNF_Mem_Server ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( RRSe + MUC ) * Max( CS,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.055283574833693054}, {"determining": "( ( ( ( Max( CRS,ARS ) * FirstVNF_Mem_Server ) - BR ) - ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ) ) - ( Min( ARS ,FirstVNF_RAM_Server ) * ( BR * Max( ( RRS * FirstVNF_CPU ),FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / MUR ) - MUC ) ) ) / ( DS / MUM ) ) - Max( Min( RRSe ,( Min( RRSe ,( MUR / CS ) ) * MUM ) ),( MLU * ( RMSe + CS ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12350676149520749}, {"determining": "( ( ( AMS - ACS ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( RRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,MUC ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,( CS + ( RCSe * MUM ) ) ) ) ),( MUC + RMSe ) )", "obj1": 0.715203426124197, "obj2": 0.1458151888982731}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7109207708779444, "obj2": 0.14800881160571625}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( FirstVNF_Mem * ( ARS + PN ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,( RRSe - RRSe ) ),DS )", "obj1": 0.7194860813704497, "obj2": 0.14353067483774018}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( ( ( Min( MUM ,( MLU / CS ) ) * CS ) - ( ( MUR + MLU ) - CS ) ),RRSe ) ,MUM ) )", "obj1": 0.974304068522484, "obj2": 0.011255690583481406}, {"determining": "( ( ( AMS - MDR ) - Min( ACS ,( ( PN / DDR ) * Min( FirstVNF_RAM ,Const ) ) ) ) - ( ( Min( Max( ( ( ARS - Min( FirstVNF_RAM_Server ,MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( ( RRSe * MUC ) / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MLU ,RMSe ) ) ),MLU ) )", "obj1": 0.880085653104925, "obj2": 0.0580207694570275}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( ( ( ACS / ACS ) + ( Const - ACS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - Const ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,RCSe ) / Max( RRSe,( RCSe / ( MUC / ( Min( RMSe ,CS ) * ( CS * RRSe ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( ( MRS / Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.961456102783726, "obj2": 0.01721248925615285}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( Min( ( ( ACS / ACS ) + ( Const - ACS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - Const ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( MUC * RMSe ),( Min( RMSe ,RCSe ) / Max( RRSe,( RCSe / ( MUC / ( Min( RMSe ,CS ) * ( CS * RRSe ) ) ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( AMS * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( ( FirstVNF_RAM * AMS ) * BR ) - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) ) + Min( Max( CS,RRSe ) ,MUM ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( CS / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7580299785867237, "obj2": 0.1212396762133901}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( FirstVNF_CPU_Server ,( Max( ACS,DDR ) / MDR ) ) - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( AMS / MDR ) ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) )", "obj1": 0.9657387580299786, "obj2": 0.015021727013681447}, {"determining": "( ( ( AMS - ( Min( ( MRS - Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06866109463917162}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.9421841541755889, "obj2": 0.026428774999610216}, {"determining": "( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / RRS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + Const ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( ( ( ( MLU * MLU ) * RRSe ) - ( DS * ( MUM * CS ) ) ) * ( CS - DS ) ) - RMSe ) ) + DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( ( AMS - ( Min( ( MRS + Max( FirstVNF_Mem_Server,Min( RRS ,CRS ) ) ) ,( MRS + Const ) ) * MDR ) ) - ( ( Max( AMS,DDR ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( MUC - Min( Max( Min( ( CS + DS ) ,( RRSe + CS ) ),RRSe ) ,Min( CS ,Max( ( RMSe + MUC ),RCSe ) ) ) ) / RCSe ),Max( ( DS / RCSe ),RRSe ) ),( ( Min( Max( MUC,MUM ) ,Min( RMSe ,MLU ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.7987152034261242, "obj2": 0.09915028553139306}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_RAM * Const ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( RRSe - Max( MUM,MUC ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) + ( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) - MUR ) )", "obj1": 0.8522483940042827, "obj2": 0.07187407155063141}, {"determining": "( ( MRS * MDR ) - ( FirstVNF_CPU * ( Max( ( FirstVNF_CPU_Server - MDR ),( PN * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( ( Min( ( RRSe + Max( MUR,( CS - MLU ) ) ) ,CS ) / ( Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) / RMSe ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.03190186127829897}, {"determining": "( ( MRS + Min( ( AMS - MDR ) ,( Min( BR ,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) - ( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_Mem_Server ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( DS,Min( Min( Max( CS,( Max( RCSe,MUC ) * RCSe ) ) ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + RCSe ) ) ) ) ,( RRSe - ( ( MUC / MUM ) / MLU ) ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( AMS - MDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.030965654509138796}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.9057815845824411, "obj2": 0.0449645989747836}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * ( MRS / Const ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9164882226980728, "obj2": 0.03954457290064447}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( ( CS * DS ),Max( Max( MLU,MUM ),CS ) ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}], "24": [{"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( ( ( AMS * FirstVNF_CPU ) - ( MDR - AMS ) ) + MRS ) - ( Max( ( ( FirstVNF_CPU - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( ACS ,( Max( ACS,DDR ) / MDR ) ) - Max( ACS,FirstVNF_CPU ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - ( RRSe + Min( Min( ( ( ( DS * Min( MUC ,CS ) ) + ( RRSe / RCSe ) ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( MRS + DDR ) - ( Min( ( ARS - FirstVNF_Mem ) ,Max( DDR,ACS ) ) + ( ( ( FirstVNF_Mem_Server - MDR ) - Min( Max( DDR,ACS ) ,DDR ) ) * ( Min( RRS ,( Max( FirstVNF_Mem_Server,MDR ) / MDR ) ) - ( ( AMS / MDR ) - ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( MUC + ( DS / Max( CS,( CS / MUC ) ) ) ) ,MUR ) + ( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + PN ) ) ) - ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * ( ACS + Max( BR,DDR ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( MRS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + DDR ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe / MUR ) ),Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - ( ( RRSe - Max( Max( MLU,( RCSe * MUR ) ),( RMSe / Min( DS ,MLU ) ) ) ) / MLU ) ) ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,Min( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( Max( Const,FirstVNF_RAM ) - Max( Min( ( AMS - FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ),( PN / ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),( MRS / BR ) ) ,Max( FirstVNF_RAM_Server,( ARS * Min( ARS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),Max( ( Min( Min( MUM ,( DS - MUC ) ) ,RCSe ) * DS ),( MUC * ( MUM / Min( ( CS / MLU ) ,MUM ) ) ) ) ) ) + DS )", "obj1": 0.6873661670235546, "obj2": 0.1794365120725629}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( DDR ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * DS ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.18333565278158867}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * MDR ) ) - Min( Min( RRS ,MRS ) ,ACS ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - Min( ( CS + DS ) ,( RRSe + CS ) ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.7002141327623126, "obj2": 0.16865970940034958}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( ( PN * FirstVNF_RAM_Server ) * ( ( MRS + FirstVNF_RAM ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( RMSe / ( Min( MUM ,( ( RCSe + ( ( MUR * MUR ) + CS ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / Min( MUC ,( RMSe * MUC ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.17169510512231662}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * MDR ) ) - Min( Min( RRS ,MRS ) ,ACS ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,( MUC + ( DS / RCSe ) ) ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( Max( DS,RMSe ),( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.16144262940100665}, {"determining": "( ( ( AMS - ( DDR - FirstVNF_Mem_Server ) ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( DDR,AMS ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) + Max( Min( Max( RMSe,RCSe ) ,MUM ),( MUM / ( ( MUM + MLU ) - MUM ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.13205055858305756}, {"determining": "( ( AMS - Min( Max( Max( MRS,BR ),Min( ( FirstVNF_CPU_Server / RRS ) ,( ARS - ( AMS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + ( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) - MUC ) ) )", "obj1": 0.702355460385439, "obj2": 0.16457641707317838}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07586008360213645}, {"determining": "( ( ( AMS + MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( ( AMS + ACS ) - ( AMS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - Min( Min( Min( FirstVNF_RAM_Server ,AMS ) ,ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,Min( RRSe ,( MUR * MUM ) ) ),Min( Max( RRSe,Max( RRSe,CS ) ) ,Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.8907922912205567, "obj2": 0.053102820599731204}, {"determining": "( ( ( AMS - Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) )", "obj1": 0.9229122055674518, "obj2": 0.03529814533211849}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6745182012847966, "obj2": 0.18683778325579542}, {"determining": "( ( ( RRS - Min( FirstVNF_CPU ,CRS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( ( ARS * FirstVNF_RAM_Server ),AMS ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( DS - DS ),Max( ( DS / RCSe ),RRSe ) ),( Min( MUM ,( RCSe * MUM ) ) - Max( ( CS * DS ),( Max( MUM,RRSe ) - MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.0857450221730328}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( Min( DDR ,( Min( Const ,DDR ) - MRS ) ) + ( ( Max( ACS,FirstVNF_CPU_Server ) + DDR ) - ( MRS / CRS ) ) ) * Max( CRS,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - Min( Min( Min( ( MUC * ( ( CS + DS ) * ( Max( MUR,MUM ) + ( MUR + MUR ) ) ) ) ,MUM ) ,CS ) ,RRSe ) )", "obj1": 0.9271948608137045, "obj2": 0.034395916317138564}, {"determining": "( ( ( AMS - ( Min( Max( MRS,( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13049858762302954}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13758564010516594}, {"determining": "( ( BR * AMS ) - ( AMS - MDR ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUR / Min( ( MUR + MUR ) ,( CS + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - ( RCSe + ( MLU + MLU ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11623463487289541}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MDR ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MLU ) ) ) ) ) + Max( ( MUC + ( Max( Min( RRSe ,( MUR * MUM ) ),MUC ) / RCSe ) ),( CS * RRSe ) ) )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * ( MRS / Const ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9164882226980728, "obj2": 0.03954457290064447}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * MRS ) * ( Min( DDR ,( FirstVNF_RAM + DDR ) ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( MLU ,RCSe ) ,MUM ),Max( RRSe,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09570032521270753}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ) ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUR - MLU ),MUR ) + Max( Max( Min( ( RRSe - Min( ( CS + DS ) ,( RRSe + CS ) ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.860813704496788, "obj2": 0.06748017811916955}, {"determining": "( ( ( AMS - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ) * MDR ) ) + ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC + Min( ( Max( Min( Max( RRSe,DS ) ,Max( MLU,DS ) ),( ( RRSe + MUC ) * Max( RCSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.7580299785867237, "obj2": 0.12063461780145501}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( ( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.9336188436830836, "obj2": 0.030454739226681127}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( AMS - MDR ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * ( ARS - ( AMS - MDR ) ) ) )", "choosing": "( ( ( MUC / MLU ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( Max( RRSe,CS ) - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.7473233404710921, "obj2": 0.12871650271624285}, {"determining": "( ( Min( ( AMS - MDR ) ,( ( MRS - ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem_Server - MDR ) - Max( Max( MRS,BR ),( MDR / FirstVNF_CPU ) ) ) ) - ( ( AMS * Max( Min( ACS ,( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * MDR ) ),( MRS / ACS ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9400428265524625, "obj2": 0.029728525523813554}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( DS - ( Max( MUM,RMSe ) + Max( MUM,DS ) ) ) + ( MLU / MUM ) )", "obj1": 0.9571734475374732, "obj2": 0.01909010994787109}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Min( ACS ,ACS ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( Min( MDR ,FirstVNF_CPU ) / PN ) / Min( DDR ,AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( RRSe + MUR ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) * ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7430406852248393, "obj2": 0.12904730267571352}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.815845824411135, "obj2": 0.08978501555120036}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( ( Max( ( MUC * MUC ),( DS * MUC ) ) - RMSe ) * ( ( Min( CS ,DS ) / ( RCSe - RCSe ) ) - RCSe ) ) + MUM ) ,MUM ),MUR ) + Max( Max( RRSe,Max( ( MLU / Min( CS ,MUC ) ),( Max( MUC,( MLU - MUC ) ) - MLU ) ) ),( Max( DS,( MUC - RMSe ) ) / ( MUC + MUM ) ) ) )", "obj1": 0.9036402569593148, "obj2": 0.047577559522207206}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( ( DS / RCSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( ( AMS - ( Min( ( MRS + Max( FirstVNF_Mem_Server,RRS ) ) ,( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( AMS * FirstVNF_CPU ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( Min( Max( Min( MUR ,( MUC + MUR ) ),RRSe ) ,Min( CS ,Max( RCSe,MUM ) ) ) - MUC ) / RCSe ),Max( ( DS / RCSe ),RRSe ) ),( ( ( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) ) * MLU ) / Max( RRSe,CS ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / ( ARS - FirstVNF_Mem ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( ( MUC + RRSe ) ,RMSe ) ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06304179096575929}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.9122055674518201, "obj2": 0.0421192889324007}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.01909010994787109}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / ( AMS / PN ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - AMS ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - ( MUM * DS ) ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8972162740899358, "obj2": 0.05014494740490261}, {"determining": "( ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( Min( ( Const - ARS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.6638115631691649, "obj2": 0.18868601211864267}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( Min( Max( MRS,BR ) ,DDR ) / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - MRS ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( ( MUM - MUC ) ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.07553135343595538}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,CS ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06016052898707803}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.974304068522484, "obj2": 0.011255690583481406}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( MDR - MDR ) ) ) ,Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) * MDR ) ) - ( ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( MUC + RRSe ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,( CS + CS ) ) ) ) + CS ) ),MUR ) )", "obj1": 0.8865096359743041, "obj2": 0.05515387998612631}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * MDR ) ) - Min( Min( RRS ,MRS ) ,ACS ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUR,( MUC + ( DS / RCSe ) ) ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( Max( DS,RMSe ),( MUR / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.16144262940100665}, {"determining": "( ( MDR - AMS ) - ( Min( Min( DDR ,AMS ) ,Max( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_RAM ) ) * ( MRS - BR ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + ( ( CS + ( Max( ( Max( RMSe,( MUM - MUC ) ) * MUR ),MLU ) - Max( CS,( MUC + ( RRSe / ( RCSe - MUC ) ) ) ) ) ) / DS ) )", "obj1": 0.8244111349036403, "obj2": 0.08696388940102237}, {"determining": "( ( Min( ( MDR - AMS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - Min( MDR ,Min( Max( MRS,Max( ( ( ACS / FirstVNF_CPU_Server ) * MRS ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + ( ( Max( RCSe,Max( MLU,RMSe ) ) * ( ( DS - CS ) / MLU ) ) - RMSe ) ) + Max( ( MUC + ( MUM / RRSe ) ),MUR ) )", "obj1": 0.6680942184154176, "obj2": 0.1882070603770871}, {"determining": "( ( ( AMS - ( Min( ( MRS - Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( Min( ( ( RMSe - MUR ) - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.06866109463917162}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( RRSe + MUC ) * Max( CS,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13758564010516594}, {"determining": "( ( Min( ( AMS - ARS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / Max( ACS,FirstVNF_RAM_Server ) ) ) - ( Min( Max( MRS,( FirstVNF_CPU / Const ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "Max( ( ( RCSe / Min( ( MUR / MUR ) ,( CS + ( ( MUM / CS ) + Max( CS,MUR ) ) ) ) ) * MUC ),( RRSe * RRSe ) )", "obj1": 0.7259100642398287, "obj2": 0.14054021915602638}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( RRSe ,( RRSe * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.7558886509635975, "obj2": 0.12210627242905175}, {"determining": "( ( ( Min( Min( AMS ,DDR ) ,Max( DDR,FirstVNF_RAM ) ) * MDR ) - ( AMS - MDR ) ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * Min( BR ,FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( ( Min( Min( RMSe ,RCSe ) ,MUM ) / Max( MUM,( ( CS * MUC ) + MUR ) ) ) / ( ( ( ( MUC * RCSe ) + RMSe ) + MUM ) - MLU ) ) )", "obj1": 0.9464668094218416, "obj2": 0.025270757818814573}, {"determining": "( ( ( CRS + AMS ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,CRS ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( ( ( Max( ( RRSe + RCSe ),MUM ) / RCSe ) + ( DS - ( ( DS / CS ) * MUC ) ) ) * CS ) / Max( CS,Min( MUR ,( DS / MUR ) ) ) ) / CS ),( Max( RRSe,( RCSe / ( MUC / MUM ) ) ) / Min( RMSe ,RCSe ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10477899202167303}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( ( ( Min( MUM ,( MLU / CS ) ) * CS ) - ( ( MUR + MLU ) - CS ) ),RRSe ) ,MUM ) )", "obj1": 0.974304068522484, "obj2": 0.011255690583481406}, {"determining": "( ( ( AMS - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( Min( ( MUM - Min( RMSe ,RCSe ) ) ,MUC ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.0922767967122098}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.9057815845824411, "obj2": 0.0449645989747836}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) * ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( ( MUR * RRSe ) + Max( MUM,DS ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) / Max( RRSe,( MUC * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09038015618648229}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ARS ) * ( AMS * PN ) ) * Min( ( FirstVNF_RAM * AMS ) ,( PN / FirstVNF_Mem_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( Max( RCSe,DS ) ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( ( MUC + ( ( MUC + ( RRSe / CS ) ) / RCSe ) ),MUR ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - MRS ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06503918912537893}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem_Server * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( CS / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.09858171554598154}, {"determining": "( Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server + ( RRS * DDR ) ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( ( DS / RCSe ) + MUC ) ,MUM ) ) ,( RRSe - ( Max( DS,( MUR - MUC ) ) / MUC ) ) ),DS )", "obj1": 0.9486081370449678, "obj2": 0.02287735573163049}, {"determining": "( ( MRS + Min( ( AMS - MDR ) ,( Min( BR ,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) - ( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_Mem_Server ),DDR ) * FirstVNF_CPU ) )", "choosing": "Max( DS,Min( Min( Max( CS,( Max( RCSe,MUC ) * RCSe ) ) ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + RCSe ) ) ) ) ,( RRSe - ( ( MUC / MUM ) / MLU ) ) ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( FirstVNF_Mem * ( ARS + PN ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.1447398220473415}, {"determining": "( ( AMS - MDR ) - ( FirstVNF_CPU * Max( Min( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),( MRS / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RMSe - Max( ( RRSe / ( MUC / DS ) ),MUC ) ) ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MLU ) ) ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10883097704686485}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( Max( PN,( MRS * FirstVNF_RAM ) ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( ( MUC / MUM ),MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( RRSe + MUC ) * Max( CS,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.14054021915602638}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),Min( ( FirstVNF_CPU_Server / RRS ) ,( ARS - ( AMS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( RMSe ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08748932875278537}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7623126338329764, "obj2": 0.11852738298659117}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( Max( MRS,BR ) + ( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( FirstVNF_RAM / MRS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( MUC + Min( RRSe ,MUM ) ) / RCSe ) + MUC ),MUR ) + Min( RCSe ,RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.0718740715506314}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,( MRS + ( Min( Const ,MRS ) * MRS ) ) ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( MUR,( Min( MUC ,( Max( MUC,( MLU / RRSe ) ) + Max( Min( ( Max( MUR,CS ) / CS ) ,( RMSe * RCSe ) ),MLU ) ) ) / Max( RRSe,( MUM * MUM ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10649094951943155}, {"determining": "( Max( MRS,Max( MDR,FirstVNF_RAM_Server ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11047019295438112}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),ARS ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( Min( RRSe ,MUR ) + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7130620985010707, "obj2": 0.14689352542398457}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( ( ( Min( MUM ,( MLU / CS ) ) * CS ) - ( ( MUR + MLU ) - CS ) ),Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9635974304068522, "obj2": 0.016021561843519702}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Min( DDR ,AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7516059957173448, "obj2": 0.12359512791938741}, {"determining": "( ( ( AMS - ACS ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( RRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,( Min( ( ( ( Min( RMSe ,MUC ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) ,MUM ) * Max( DS,( CS + ( RCSe * MUM ) ) ) ) ),( MUC + RMSe ) )", "obj1": 0.715203426124197, "obj2": 0.1458151888982731}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,Min( AMS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) * Max( ( Max( ( FirstVNF_Mem * ( ARS + FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / MDR ) ) ) ) )", "choosing": "( ( ( MUC + ( DS / RCSe ) ) / MUR ) + Max( Max( Min( ( Min( RMSe ,Min( ( MUC + MUC ) ,Min( RCSe ,RMSe ) ) ) - ( ( RRSe / ( MUM - RRSe ) ) + ( Max( MUC,MUR ) / ( MLU * RMSe ) ) ) ) ,CS ),( RRSe - ( RCSe - RRSe ) ) ),( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07046611638370316}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7623126338329764, "obj2": 0.11852738298659117}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7109207708779444, "obj2": 0.14800881160571625}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + FirstVNF_RAM_Server ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - MRS ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,DS ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8886509635974305, "obj2": 0.05421107436929998}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / RCSe ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10300054182686866}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - MRS ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06503918912537893}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.1120298532099769}, {"determining": "( ( ( AMS - MDR ) - Max( Max( Min( Max( CRS,( DDR + FirstVNF_CPU_Server ) ) ,ACS ),Min( RRS ,( ARS - ( ( FirstVNF_Mem / AMS ) + CRS ) ) ) ),MDR ) ) - ( ( Min( Max( DDR,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Min( ( MUR + ( ( RRSe - Min( ( ( MUR + MUM ) / MUM ) ,RRSe ) ) - MUC ) ) ,MUR ) + Max( Max( Min( ( ( Max( MUM,MUM ) / RCSe ) - ( Min( Min( RRSe ,RMSe ) ,( RCSe * RMSe ) ) / MLU ) ) ,( Max( CS,MLU ) - RMSe ) ),( Max( Min( MUM ,Min( RMSe ,RCSe ) ),MUR ) / Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ),MLU ) )", "obj1": 0.9700214132762313, "obj2": 0.013191732182479831}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) + ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( AMS * MDR ) * FirstVNF_RAM ) ) ) ) ) ) - Max( Min( AMS ,FirstVNF_Mem_Server ),ARS ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / Max( Max( CS,MUM ),RMSe ) ) ) + RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.9421841541755889, "obj2": 0.026428774999610206}, {"determining": "( ( ( AMS - MDR ) - Min( ACS ,( ( PN / DDR ) * Min( FirstVNF_RAM ,Const ) ) ) ) - ( ( Min( Max( ( ( ARS - Min( FirstVNF_RAM_Server ,MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( ( RRSe * MUC ) / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MLU ,RMSe ) ) ),MLU ) )", "obj1": 0.880085653104925, "obj2": 0.0580207694570275}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( FirstVNF_Mem * ( ARS + PN ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( RMSe ,RCSe ) ),DS )", "obj1": 0.7194860813704497, "obj2": 0.14346106428424166}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( AMS * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( ( FirstVNF_RAM * AMS ) * BR ) - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) ) + Min( Max( CS,RRSe ) ,MUM ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( ( Min( Min( DDR ,AMS ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( ( MRS / Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.0037448270766406817}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ),MLU ) )", "obj1": 0.9700214132762313, "obj2": 0.013191732182479831}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + Max( ( MLU + RRSe ),( ( MLU * ( RRSe + RRSe ) ) + CS ) ) ) ),MUR ) )", "obj1": 0.8094218415417559, "obj2": 0.09306709111442735}, {"determining": "( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / RRS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + Const ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( ( ( ( MLU * MLU ) * RRSe ) - ( DS * ( MUM * CS ) ) ) * ( CS - DS ) ) - RMSe ) ) + DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( AMS - MDR ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( MUC / MLU ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.7858672376873662, "obj2": 0.1058445173175155}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.17169510512231662}, {"determining": "( ( Const - ARS ) - Min( MDR ,( Min( Min( AMS ,DDR ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "Max( MLU,( Max( RRSe,( ( RCSe * Max( DS,Max( ( MLU * RRSe ),MLU ) ) ) + CS ) ) / ( MUC / Max( MUM,( MUR + ( CS + MUC ) ) ) ) ) )", "obj1": 0.7494646680942184, "obj2": 0.12569161106187784}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( ARS + PN ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),DDR ) ,( RRS * AMS ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / RMSe ) ,RMSe ) ,( MLU + Max( ( Max( ( MUR + RMSe ),MUR ) + ( ( MUC - MUC ) / ( RMSe - MUR ) ) ),DS ) ) ),RRSe ) )", "obj1": 0.8972162740899358, "obj2": 0.05014494740490261}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,( RRSe - RRSe ) ),DS )", "obj1": 0.7751605995717344, "obj2": 0.111092003224954}, {"determining": "( ( MRS * MDR ) - ( FirstVNF_CPU * ( Max( ( FirstVNF_CPU_Server - MDR ),( PN * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( ( Min( ( RRSe + Max( MUR,( CS - MLU ) ) ) ,CS ) / ( Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) / RMSe ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.03190186127829897}], "25": [{"determining": "( ( ( AMS - MDR ) - Max( Max( Min( Max( CRS,( DDR + FirstVNF_CPU_Server ) ) ,ACS ),Min( RRS ,( ARS - ( ( FirstVNF_Mem / AMS ) + CRS ) ) ) ),MDR ) ) - ( ( Min( Max( DDR,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Min( ( MUR + ( ( RRSe - Min( ( ( MUR + MUM ) / MUM ) ,RRSe ) ) - MUC ) ) ,MUR ) + Max( Max( Min( ( ( Max( MUM,MUM ) / RCSe ) - ( Min( Min( RRSe ,RMSe ) ,( RCSe * RMSe ) ) / MLU ) ) ,( Max( CS,MLU ) - RMSe ) ),( Max( Min( MUM ,Min( RMSe ,RCSe ) ),MUR ) / Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS - FirstVNF_Mem ) ,( ( ( ( AMS * FirstVNF_CPU ) - ( MDR - AMS ) ) + MRS ) - ( Max( ( ( FirstVNF_CPU - FirstVNF_CPU ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) ) ) + ( PN * ( Min( ACS ,( Max( ACS,DDR ) / MDR ) ) - Max( ACS,FirstVNF_CPU ) ) ) ) - ( AMS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,( MUC + RRSe ) ) - ( RRSe + Min( Min( ( ( ( DS * Min( MUC ,CS ) ) + ( RRSe / RCSe ) ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server + ACS ) + ( FirstVNF_CPU * Max( Const,( BR - BR ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * AMS ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( Max( ( ( CS - RCSe ) / MUC ),( MUM * RCSe ) ) / Min( MUC ,RMSe ) ),( MUC + MUM ) )", "obj1": 0.6466809421841542, "obj2": 0.23197016216346375}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,Min( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( MDR * Min( Max( MRS,( ( ( AMS * FirstVNF_Mem_Server ) * AMS ) - ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,Min( ( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( ( RRSe - ( CS + MUM ) ),( MUR / Min( MUM ,MLU ) ) ) ) ,MUM ) ) - Max( Max( Max( ( MUR + Max( Max( MUR,RRSe ),MUR ) ),MUM ),CS ),( CS * DS ) ) ) + Max( ( MUC + ( RRSe / CS ) ),MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.15804659635002893}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + PN ) ) ) - ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * ( ACS + Max( BR,DDR ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( MRS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + DDR ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe / MUR ) ),Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - ( ( RRSe - Max( Max( MLU,( RCSe * MUR ) ),( RMSe / Min( DS ,MLU ) ) ) ) / MLU ) ) ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( Max( Const,FirstVNF_RAM ) - Max( Min( ( AMS - FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ),( PN / ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),( MRS / BR ) ) ,Max( FirstVNF_RAM_Server,( ARS * Min( ARS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),Max( ( Min( Min( MUM ,( DS - MUC ) ) ,RCSe ) * DS ),( MUC * ( MUM / Min( ( CS / MLU ) ,MUM ) ) ) ) ) ) + DS )", "obj1": 0.6873661670235546, "obj2": 0.1794365120725629}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( ( ARS - ( MDR - MDR ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / ( MUR / MUR ) ) )", "obj1": 0.6488222698072805, "obj2": 0.22806314969700764}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( ( PN * FirstVNF_RAM_Server ) * ( ( MRS + FirstVNF_RAM ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( RMSe / ( Min( MUM ,( ( RCSe + ( ( MUR * MUR ) + CS ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / Min( MUC ,( RMSe * MUC ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.17169510512231662}, {"determining": "( ( ( AMS - ( MDR * Min( ( FirstVNF_Mem_Server / Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,ACS ) ) ,Max( AMS,FirstVNF_RAM ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( ARS + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_RAM ,CRS ) )", "choosing": "Max( ( DS / ( Min( ( DS * MUM ) ,( ( ( CS + ( MUM * MUR ) ) + MUC ) * Max( MUM,Max( RCSe,( RMSe * RRSe ) ) ) ) ) - Max( Max( RMSe,( ( MUR - MUM ) + ( ( RMSe / DS ) * RRSe ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.17169510512231662}, {"determining": "( ( ( AMS - ( DDR - FirstVNF_Mem_Server ) ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( DDR,AMS ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) + Max( Min( Max( RMSe,RCSe ) ,MUM ),( MUM / ( ( MUM + MLU ) - MUM ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.13205055858305756}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( ( AMS - MDR ) ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( ( MRS / BR ),( MDR / ( BR * MDR ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( MUC + ( Max( MUM,RCSe ) / RCSe ) ),( Min( MUM ,( MUC + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ),RRSe ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,Min( DDR ,FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,Min( BR ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( MDR ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ,( RMSe / RRSe ) ),DS )", "obj1": 0.7665952890792291, "obj2": 0.1155478158213051}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ARS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06280568032503132}, {"determining": "( Max( ( ( PN - Max( AMS,( RRS - FirstVNF_CPU_Server ) ) ) * DDR ),BR ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( ( MUM - RCSe ) / Max( MUR,CS ) ) + ( RCSe / RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18522860997058052}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Min( ACS ,ACS ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( Min( MDR ,FirstVNF_CPU ) / PN ) / Min( DDR ,AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( RRSe + MUR ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) * ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7430406852248393, "obj2": 0.12904730267571352}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06016052898707803}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ) + DDR ) * Min( ( FirstVNF_RAM * AMS ) ,( PN / FirstVNF_Mem_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( Max( RCSe,DS ) ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( ( MUC + ( ( MUC + ( RRSe / CS ) ) / ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ) ) ),MUR ) )", "obj1": 0.8479657387580299, "obj2": 0.07275286350932976}, {"determining": "( ( ( AMS - Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) )", "obj1": 0.9229122055674518, "obj2": 0.03529814533211849}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * MRS ) * ( Min( DDR ,( FirstVNF_RAM + DDR ) ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( MLU ,RCSe ) ,MUM ),Max( RRSe,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09570032521270753}, {"determining": "( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / RRS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + Const ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( ( ( ( MLU * MLU ) * RRSe ) - ( DS * ( MUM * CS ) ) ) * ( CS - DS ) ) - RMSe ) ) + DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( AMS * FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( MUM + RRSe ) + ( MLU / MUM ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13758564010516594}, {"determining": "( ( MRS * MDR ) - ( FirstVNF_CPU * ( Max( ( FirstVNF_CPU_Server - MDR ),( PN * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( ( Min( ( RRSe + Max( MUR,( CS - MLU ) ) ) ,CS ) / ( Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) / RMSe ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.03190186127829897}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MUM ,( RRSe / CS ) ) - ( RCSe - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( RRSe - ( MUC / MLU ) ) ),MUR ) + Max( MUR,( Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09998748791681572}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( MUR,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - ( MUR + RMSe ) ) + ( MLU / DS ) )", "obj1": 0.9122055674518201, "obj2": 0.04211928893240069}, {"determining": "( ( ( AMS + MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( ( AMS + ACS ) - ( AMS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - Min( Min( Min( FirstVNF_RAM_Server ,AMS ) ,ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,Min( RRSe ,( MUR * MUM ) ) ),Min( Max( RRSe,Max( RRSe,CS ) ) ,Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.8907922912205567, "obj2": 0.053102820599731204}, {"determining": "( ( ( Min( Min( AMS ,DDR ) ,Max( DDR,FirstVNF_RAM ) ) * MDR ) - ( AMS - MDR ) ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * Min( BR ,FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( ( Min( Min( RMSe ,RCSe ) ,MUM ) / Max( MUM,( ( CS * MUC ) + MUR ) ) ) / ( ( ( ( MUC * RCSe ) + RMSe ) + MUM ) - MLU ) ) )", "obj1": 0.9464668094218416, "obj2": 0.025270757818814573}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( ( ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) + AMS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( ( ARS / MRS ) ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM * CS ) ,( RRSe - ( ( ( ( DS / MLU ) / RMSe ) + CS ) / MLU ) ) ),( Max( RRSe,( ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) / Max( ( MUC + ( DS / RCSe ) ),MUR ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12632456081137952}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( Min( Max( MRS,Max( ARS,CRS ) ) ,Max( ( ( FirstVNF_CPU_Server - BR ) - DDR ),FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / ( PN / PN ) ) / ( FirstVNF_RAM - ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( RCSe * MUR ) ) - Max( ( CS / ( Min( DS ,MLU ) - ( MUR - CS ) ) ),CS ) ) ),Min( ( RCSe - ( ( ( RRSe / RCSe ) - Max( RMSe,MLU ) ) * Min( ( CS / MLU ) ,( CS * MUR ) ) ) ) ,MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.18333565278158867}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),FirstVNF_RAM ) ) * ( Min( Max( Const,DDR ) ,Min( AMS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) * Max( ( Max( ( FirstVNF_Mem * ( ARS + FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / MDR ) ) ) ) )", "choosing": "( ( ( MUC + ( DS / RCSe ) ) / MUR ) + Max( Max( Min( ( Min( RMSe ,Min( ( MUC + MUC ) ,Min( RCSe ,RMSe ) ) ) - ( ( RRSe / ( MUM - RRSe ) ) + ( Max( MUC,MUR ) / ( MLU * RMSe ) ) ) ) ,CS ),( RRSe - ( RCSe - RRSe ) ) ),( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8565310492505354, "obj2": 0.07046611638370316}, {"determining": "( ( ( AMS - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ) * MDR ) ) + ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC + Min( ( Max( Min( Max( RRSe,DS ) ,Max( MLU,DS ) ),( ( RRSe + MUC ) * Max( RCSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.7580299785867237, "obj2": 0.12063461780145501}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07586008360213645}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,MDR ) * MDR ) ) - Min( ( MRS + Min( ( FirstVNF_CPU - Const ) ,Max( FirstVNF_CPU_Server,( MDR / ARS ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / ( MUM / MLU ) ) ) ) ) + ( MUM / RMSe ) )", "obj1": 0.9507494646680942, "obj2": 0.021811185064034882}, {"determining": "( Max( Const,FirstVNF_RAM ) - Max( Min( ( AMS - FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ),( PN / ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),( MRS / BR ) ) ,Max( FirstVNF_RAM_Server,( ARS * Min( ARS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),Max( ( Min( Min( MUM ,( DS - MUC ) ) ,RCSe ) * DS ),( MUC * ( MUM / Min( ( CS / MLU ) ,MUM ) ) ) ) ) ) + DS )", "obj1": 0.9400428265524625, "obj2": 0.029450083309819467}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( Max( FirstVNF_RAM_Server,MRS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR * RCSe ) ) + Max( ( MLU + ( MUM / CS ) ),( ( MLU * ( RRSe + RCSe ) ) + CS ) ) ) ),MUR ) )", "obj1": 0.7922912205567452, "obj2": 0.10234370932641683}, {"determining": "( ( ( AMS * ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( ACS - FirstVNF_CPU_Server ) / ( ( MDR / FirstVNF_Mem_Server ) * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * DS ) ) ) * Max( MUM,Min( RCSe ,( DS * RRSe ) ) ) ) ) - Max( ( CS / ( ( RCSe - MLU ) - CS ) ),CS ) ) ),( Max( RRSe,( RCSe * Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6702355460385439, "obj2": 0.18762521082213238}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( MDR - MDR ) ) ) ,Max( ( FirstVNF_CPU * Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),DDR ) ),DDR ) ) * MDR ) ) - ( ( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,( MRS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,( CS + CS ) ) ) ) ) ) ,( Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.8950749464668094, "obj2": 0.05057538958252228}, {"determining": "( ( Min( ( AMS - ARS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / Max( ACS,FirstVNF_RAM_Server ) ) ) - ( Min( Max( MRS,( FirstVNF_CPU / Const ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) )", "choosing": "Max( ( ( RCSe / Min( ( MUR / MUR ) ,( CS + ( ( MUM / CS ) + Max( CS,MUR ) ) ) ) ) * MUC ),( RRSe * RRSe ) )", "obj1": 0.7259100642398287, "obj2": 0.14054021915602638}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( ( Max( ( MUC * MUC ),( DS * MUC ) ) - RMSe ) * ( ( Min( CS ,DS ) / ( RCSe - RCSe ) ) - RCSe ) ) + MUM ) ,MUM ),MUR ) + Max( Max( RRSe,Max( ( MLU / Min( CS ,MUC ) ),( Max( MUC,( MLU - MUC ) ) - MLU ) ) ),( Max( DS,( MUC - RMSe ) ) / ( MUC + MUM ) ) ) )", "obj1": 0.9036402569593148, "obj2": 0.047577559522207206}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * ( AMS - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( ( ( Min( MUM ,( MLU / CS ) ) * CS ) - ( ( MUR + MLU ) - ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ),Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9550321199143469, "obj2": 0.01980880762727911}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( DDR ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * DS ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.18333565278158867}, {"determining": "( ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( Min( ( Const - ARS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.6638115631691649, "obj2": 0.18868601211864267}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),Min( ( FirstVNF_CPU_Server / RRS ) ,( ARS - ( ARS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,( MUC / ( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( ( MUC + ( DS / RCSe ) ) ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.08312235811683465}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( Max( RRSe,CS ) + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( DS - Max( DS,( MUR / MUC ) ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.8779443254817987, "obj2": 0.05878709299695214}, {"determining": "( ( ( AMS - MDR ) - Max( Max( Min( Max( CRS,( DDR + FirstVNF_CPU_Server ) ) ,ACS ),Min( RRS ,( ARS - ( ( FirstVNF_Mem / AMS ) + CRS ) ) ) ),MDR ) ) - ( ( Min( Max( DDR,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Min( ( MUR + ( ( RRSe - Min( ( ( MUR + MUM ) / MUM ) ,RRSe ) ) - MUC ) ) ,MUR ) + Max( Max( Min( ( ( Max( MUM,MUM ) / RCSe ) - ( Min( Min( RRSe ,RMSe ) ,( RCSe * RMSe ) ) / MLU ) ) ,( Max( CS,MLU ) - RMSe ) ),( Max( Min( MUM ,Min( RMSe ,RCSe ) ),MUR ) / Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ),MLU ) )", "obj1": 0.9700214132762313, "obj2": 0.013191732182479831}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),( RMSe - MUC ) ) )", "obj1": 0.974304068522484, "obj2": 0.011255690583481406}, {"determining": "( ( MDR - AMS ) - ( Min( Min( DDR ,AMS ) ,Max( Max( ( ( ARS * MRS ) + ( Min( DDR ,AMS ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_RAM ) ) * ( MRS - BR ) ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + ( ( CS + ( Max( ( Max( RMSe,( MUM - MUC ) ) * MUR ),MLU ) - Max( CS,( MUC + ( RRSe / ( RCSe - MUC ) ) ) ) ) ) / DS ) )", "obj1": 0.8244111349036403, "obj2": 0.08696388940102237}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.9421841541755889, "obj2": 0.026428774999610206}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7623126338329764, "obj2": 0.11852738298659117}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( ( CS - RCSe ),( ( RRSe + MUC ) * Max( CS,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13758564010516594}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( Max( PN,( MRS * FirstVNF_RAM ) ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MUR / Min( ( MUR / MUR ) ,( CS + CS ) ) ) - MUC ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7259100642398287, "obj2": 0.14054021915602638}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),( ( RMSe - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.9336188436830836, "obj2": 0.030454739226681127}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( ( MUM - MUC ) ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013191732182479831}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + ( ( ( Min( RMSe ,CS ) * ( CS * RRSe ) ) + CS ) / Min( RRSe ,MUR ) ) )", "obj1": 0.961456102783726, "obj2": 0.01721769640955075}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MUR ) ) ,DS ) ,MLU ) ,MUR ) - Min( RRSe ,DS ) ) / Max( RCSe,CS ) ) - Max( ( MUC + ( DS / RCSe ) ),MUR ) )", "obj1": 0.974304068522484, "obj2": 0.011255690583481406}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07586008360213645}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( ( ( Min( MUM ,( MLU / CS ) ) * CS ) - ( ( MUR + MLU ) - CS ) ),Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9635974304068522, "obj2": 0.016021561843519702}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( MRS + Min( DDR ,( AMS * FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem,Min( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) - Min( Min( RMSe ,RCSe ) ,MUM ) )", "obj1": 0.9100642398286938, "obj2": 0.04329931000597574}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem_Server * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( CS / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.09858171554598154}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ARS ) * ( AMS * PN ) ) * Min( ( FirstVNF_RAM * AMS ) ,( PN / FirstVNF_Mem_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( ( RMSe - DS ) - DS ) ),( Max( RRSe,Max( RRSe,CS ) ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( Min( DDR ,( Min( Const ,DDR ) - MRS ) ) + ( ( Max( ACS,FirstVNF_CPU_Server ) + DDR ) - ( MRS / CRS ) ) ) * Max( CRS,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - Min( Min( Min( ( MUC * ( ( CS + DS ) * ( Max( MUR,MUM ) + ( MUR + MUR ) ) ) ) ,MUM ) ,CS ) ,RRSe ) )", "obj1": 0.9271948608137045, "obj2": 0.034395916317138564}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) * ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( ( MUR * RRSe ) + Max( MUM,DS ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) / Max( RRSe,( MUC * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09038015618648229}, {"determining": "( ( Min( ( AMS - MDR ) ,( Max( Max( ARS,( FirstVNF_CPU_Server - BR ) ),MDR ) * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,( MRS + ( Max( Const,MRS ) * MRS ) ) ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( MUR,( Min( MUC ,( Max( MUC,( MLU / RRSe ) ) + Max( Min( ( Max( DS,CS ) / CS ) ,( RMSe * RCSe ) ),MLU ) ) ) / Max( MLU,( MUM * MUM ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10649094951943153}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( MRS + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,Min( AMS ,( Const / MDR ) ) ) ) ,Max( ( AMS * Max( Max( MRS,Max( CRS,ARS ) ),ARS ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( ( Min( RCSe ,( RMSe * RRSe ) ) + ( ( MLU / MUM ) * Max( MUC,Min( MUR ,Min( RRSe ,MUM ) ) ) ) ),( Min( DS ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ,MUM ) + ( MLU / DS ) )", "obj1": 0.715203426124197, "obj2": 0.1457425877459534}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + ( CS + ( MUR * DS ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ),( ( DS / RCSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06586788130007176}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( FirstVNF_RAM_Server * Max( Max( MRS,BR ),( FirstVNF_Mem * ( ARS + PN ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( RRSe,( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14346106428424166}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),Min( ( FirstVNF_CPU_Server / RRS ) ,( ARS - ( AMS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( RMSe ,RCSe ) ),DS )", "obj1": 0.8201284796573876, "obj2": 0.08748932875278537}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),ARS ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.7173447537473233, "obj2": 0.1444371903842019}, {"determining": "( Max( MRS,Max( MDR,FirstVNF_RAM_Server ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11047019295438112}, {"determining": "( ( AMS - MDR ) - ( Min( Min( DDR ,AMS ) ,( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) ) * MDR ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7623126338329764, "obj2": 0.11852738298659117}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11202985320997687}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Max( ( MRS + FirstVNF_Mem ),MRS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( ( DS / RCSe ) + MUC ) ,MUR ) ) ,( RRSe - ( MUR / MLU ) ) ),( ( MUM - ( ( ( MUR - ( MLU - RCSe ) ) - ( MLU + RMSe ) ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12196451954733904}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( ( DS / RCSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( ( AMS - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( MRS,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( MRS + Max( FirstVNF_RAM,MDR ) ) / ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( ( RRSe - Max( ( RCSe - MLU ),Min( DS ,MLU ) ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.018833074078532044}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( AMS * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( ( FirstVNF_RAM * AMS ) * BR ) - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( RRSe / Max( ( MLU * CS ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) ) + Min( Max( CS,RRSe ) ,MUM ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( AMS - MDR ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( ( ( MUC / MLU ) / Max( RRSe,CS ) ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ),MUR ) )", "obj1": 0.7858672376873662, "obj2": 0.1058445173175155}, {"determining": "( ( ( AMS - ( Min( Max( MRS,ACS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( MDR ,FirstVNF_CPU ) ) / Min( DDR ,AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) - Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) ) + ( MLU / DS ) )", "obj1": 0.8029978586723768, "obj2": 0.0974326449697961}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( ( ARS - ( MDR - MDR ) ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( MLU / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.9079229122055674, "obj2": 0.044715147565794734}, {"determining": "( ( ( AMS - ( Min( Max( MRS,( ( BR + ACS ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( ( Min( MUM ,DS ) / ( MUC / ( DS + Max( ( ( RRSe + MUR ) + ( CS / MLU ) ),RRSe ) ) ) ),Max( ( ( ( ( ( MUM - MUR ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13049858762302954}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( FirstVNF_Mem * ( ARS + PN ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( RMSe ,RCSe ) ),DS )", "obj1": 0.7194860813704497, "obj2": 0.14346106428424166}, {"determining": "( ( ( AMS - ( Min( Max( MRS,( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * MUM ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13049858762302954}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( ( ( Min( MUM ,( MLU / CS ) ) * CS ) - ( ( MUR + MLU ) - CS ) ),Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9635974304068522, "obj2": 0.016021561843519702}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( Max( MRS,BR ) + ( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( FirstVNF_RAM / MRS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( MUC + Min( RRSe ,MUM ) ) / RCSe ) + MUC ),MUR ) + Min( RCSe ,RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.0718740715506314}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ARS ) * ( AMS * PN ) ) * Min( ( FirstVNF_RAM * AMS ) ,( PN / FirstVNF_Mem_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( Max( RCSe,DS ) ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( ( MUC + ( ( MUC + ( RRSe / CS ) ) / RCSe ) ),MUR ) )", "obj1": 0.8372591006423983, "obj2": 0.0786309214697573}, {"determining": "( ( ( AMS - ( Min( Max( Min( ARS ,Min( FirstVNF_RAM_Server ,AMS ) ),Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( PN,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / AMS ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( ( MUR + ( ( RRSe - Min( ( ( MUR + MUM ) / MUM ) ,RRSe ) ) - MUC ) ) ,MUR ) + Max( Max( Min( ( RRSe - ( Min( ( RCSe * RMSe ) ,Min( RRSe ,RMSe ) ) / MLU ) ) ,( ( RCSe * Max( MUM,RMSe ) ) - RMSe ) ),( Max( ( MUM + Min( RMSe ,RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ),MLU ) )", "obj1": 0.7558886509635975, "obj2": 0.12164043512411372}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09306709111442735}, {"determining": "( ( ( RRS - Min( FirstVNF_CPU ,CRS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( ( ARS * FirstVNF_RAM_Server ),AMS ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( DS - DS ),Max( ( DS / RCSe ),RRSe ) ),( Min( MUM ,( RCSe * MUM ) ) - Max( ( CS * DS ),( Max( MUM,RRSe ) - MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.0857450221730328}, {"determining": "( ( ( MDR - AMS ) - ( Max( ( ( MRS - ACS ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - RRS ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( ( RRSe * Max( MLU,MUC ) ) / MUM ) ) / RCSe ) ),MUR ) + Max( Min( ( Max( RRSe,CS ) / Min( MLU ,RMSe ) ) ,Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ) ),MLU ) )", "obj1": 0.9057815845824411, "obj2": 0.0449645989747836}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * ( MRS / Const ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9164882226980728, "obj2": 0.03954457290064447}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * PN ) ) * ( MRS / Const ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9164882226980728, "obj2": 0.03954457290064447}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + MUR ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09743294475773445}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / Min( ( MUR / MUR ) ,( CS + CS ) ) ) * MUC ),( RRSe * RRSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11306633265487406}, {"determining": "( ( ( Min( Max( DDR,AMS ) ,DDR ) * ( ( Max( PN,FirstVNF_CPU ) + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( FirstVNF_Mem_Server - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( Max( Min( MUC ,RRSe ),RRSe ) ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS * DS ) ,( RRSe + CS ) ) ) ) ,( RRSe - RRSe ) ),DS )", "obj1": 0.7708779443254818, "obj2": 0.11306633265487406}, {"determining": "( ( Min( ( Const - MDR ) ,Max( AMS,FirstVNF_CPU ) ) + ( CRS * ACS ) ) - ( FirstVNF_CPU * Max( ( FirstVNF_RAM - ( ARS + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ),DDR ) ) )", "choosing": "( Max( ( MUC + Min( CS ,CS ) ),MUR ) + ( MUC * MLU ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}], "26": [{"determining": "( Max( MDR,Max( PN,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,( PN / ( FirstVNF_CPU_Server + MDR ) ) ) ) )", "choosing": "Max( ( Max( RMSe,RRSe ) - ( MLU / Max( RRSe,( Max( ( MUM * RCSe ),DS ) * RRSe ) ) ) ),( Min( MLU ,( Max( RRSe,CS ) / Min( MUR ,( ( MUR + DS ) - Max( ( CS * CS ),DS ) ) ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - MDR ) - Max( Max( Min( Max( CRS,( DDR + FirstVNF_CPU_Server ) ) ,ACS ),Min( RRS ,( ARS - ( ( FirstVNF_Mem / AMS ) + CRS ) ) ) ),MDR ) ) - ( ( Min( Max( DDR,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Min( ( MUR + ( ( RRSe - Min( ( ( MUR + MUM ) / MUM ) ,RRSe ) ) - MUC ) ) ,MUR ) + Max( Max( Min( ( ( Max( MUM,MUM ) / RCSe ) - ( Min( Min( RRSe ,RMSe ) ,( RCSe * RMSe ) ) / MLU ) ) ,( Max( CS,MLU ) - RMSe ) ),( Max( Min( MUM ,Min( RMSe ,RCSe ) ),MUR ) / Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( MUR + Max( ( MUC + ( Max( MUM,RCSe ) / RCSe ) ),MUR ) )", "obj1": 0.6466809421841542, "obj2": 0.22748971125036443}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + PN ) ) ) - ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * ( ACS + Max( BR,DDR ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( MRS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + DDR ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe / MUR ) ),Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - ( ( RRSe - Max( Max( MLU,( RCSe * MUR ) ),( RMSe / Min( DS ,MLU ) ) ) ) / MLU ) ) ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - CRS ) ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,CRS ) ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / Max( Const,DDR ) ) ) - ( MDR * Min( Max( MRS,Max( Max( CRS,ARS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6895074946466809, "obj2": 0.16613569454867144}, {"determining": "( Max( Const,FirstVNF_RAM ) - Max( Min( ( AMS - FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ),( PN / ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),( MRS / BR ) ) ,Max( FirstVNF_RAM_Server,( ARS * Min( ARS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),Max( ( Min( Min( MUM ,( DS - MUC ) ) ,RCSe ) * DS ),( MUC * ( MUM / Min( ( CS / MLU ) ,MUM ) ) ) ) ) ) + DS )", "obj1": 0.6873661670235546, "obj2": 0.1794365120725629}, {"determining": "( ( Min( ( AMS - MDR ) ,( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM_Server / MRS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) + ( PN / Max( Const,MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( ( Max( Min( ( DS + RCSe ) ,MUM ),MUR ) + Max( CS,( MUR / Min( MUM ,MLU ) ) ) ) ,MUM ) ,MUM ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / Min( RMSe ,MLU ) ) ),MUM ),CS ) ) ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.7044967880085653, "obj2": 0.15796947077786547}, {"determining": "( ( ( AMS + MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( ( AMS + ACS ) - ( AMS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - Min( Min( Min( FirstVNF_RAM_Server ,AMS ) ,ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,Min( RRSe ,( MUR * MUM ) ) ),Min( Max( RRSe,Max( RRSe,CS ) ) ,Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.8907922912205567, "obj2": 0.053102820599731204}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * ( DDR + Max( FirstVNF_CPU,ARS ) ) ) )", "choosing": "( Max( ( MUC + Min( RMSe ,( RRSe + Max( DS,RMSe ) ) ) ),MUR ) + Max( MUR,( Max( MUR,( MUR / ( MUM * ( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ) ) + Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ARS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06280568032503132}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( ( AMS - MDR ) ,Const ) )", "choosing": "( ( MUM + RRSe ) + ( MLU / MUM ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / Max( Const,DDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / Max( Min( RMSe ,MLU ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) ) ),MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.15804659635002893}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS - ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( DDR + FirstVNF_Mem_Server ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( RRSe - RCSe ) * ( ( RMSe - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.8950749464668094, "obj2": 0.04982147616081579}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( Max( Const,DDR ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / ( MUC + ( RRSe / RCSe ) ) ) ),MUR ) )", "obj1": 0.6659528907922913, "obj2": 0.18532733761822837}, {"determining": "( Max( ( ( PN - Max( AMS,( RRS - FirstVNF_CPU_Server ) ) ) * DDR ),BR ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( ( MUM - RCSe ) / Max( MUR,CS ) ) + ( RCSe / RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18522860997058052}, {"determining": "( ( ( Min( Min( AMS ,DDR ) ,Max( DDR,FirstVNF_RAM ) ) * MDR ) - ( AMS - MDR ) ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * Min( BR ,FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( ( Min( Min( RMSe ,RCSe ) ,MUM ) / Max( MUM,( ( CS * MUC ) + MUR ) ) ) / ( ( ( ( MUC * RCSe ) + RMSe ) + MUM ) - MLU ) ) )", "obj1": 0.9464668094218416, "obj2": 0.025270757818814573}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_CPU,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10225949982888288}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * MRS ) * ( Min( DDR ,( FirstVNF_RAM + DDR ) ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( MLU ,RCSe ) ,MUM ),Max( RRSe,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09570032521270753}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ) + DDR ) * Min( ( FirstVNF_RAM * AMS ) ,( PN / FirstVNF_Mem_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( Max( RCSe,DS ) ,( MUR * MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( ( MUC + ( ( MUC + ( RRSe / CS ) ) / ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ) ) ),MUR ) )", "obj1": 0.8479657387580299, "obj2": 0.07275286350932976}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( DDR ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * DS ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.18165834092558267}, {"determining": "( ( AMS * MDR ) - ( ARS - ( ( PN / PN ) * Min( Min( ACS ,( ARS / MDR ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / ( ( ( ( MLU * MUR ) + RCSe ) - ( MUM + RMSe ) ) + DS ) ),( MLU + MUR ) ) * RMSe ) + ( Max( DS,( Min( RCSe ,MLU ) / MUC ) ) / MUR ) )", "obj1": 0.9850107066381156, "obj2": 0.00695356718752917}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,Min( DDR ,FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,Min( BR ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( MDR ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ,( RMSe / RRSe ) ),DS )", "obj1": 0.7665952890792291, "obj2": 0.1155478158213051}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( Min( DDR ,( Min( Const ,DDR ) - MRS ) ) + ( ( Max( ACS,FirstVNF_CPU_Server ) + DDR ) - ( MRS / CRS ) ) ) * Max( CRS,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - Min( Min( Min( ( MUC * ( ( CS + DS ) * ( Max( MUR,MUM ) + ( MUR + MUR ) ) ) ) ,MUM ) ,CS ) ,RRSe ) )", "obj1": 0.9271948608137045, "obj2": 0.034395916317138564}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / RCSe ) ),MUR ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12298384151222433}, {"determining": "( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / RRS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + Const ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( ( ( ( MLU * MLU ) * RRSe ) - ( DS * ( MUM * CS ) ) ) * ( CS - DS ) ) - RMSe ) ) + DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( Min( Min( ACS ,FirstVNF_CPU ) ,( AMS * FirstVNF_CPU ) ) + ( FirstVNF_CPU * ( MRS + FirstVNF_RAM ) ) ) - Max( MDR,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) * ( RRSe - RMSe ) ),DS )", "obj1": 0.7323340471092077, "obj2": 0.1370261510064774}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN - ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Max( FirstVNF_Mem_Server,( RRS + PN ) ) )", "choosing": "Max( ( DS - Min( MUM ,CS ) ),( ( MUC / RMSe ) / Max( RRSe,( DS * ( Max( MUR,CS ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13890502027515994}, {"determining": "( ( MRS * MDR ) - ( FirstVNF_CPU * ( Max( ( FirstVNF_CPU_Server - MDR ),( PN * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( ( Min( ( RRSe + Max( MUR,( CS - MLU ) ) ) ,CS ) / ( Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) / RMSe ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.03190186127829897}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.734475374732334, "obj2": 0.13205055858305756}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Min( ACS ,ACS ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( Min( MDR ,FirstVNF_CPU ) / PN ) / Min( DDR ,AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( RRSe + MUR ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) * ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7430406852248393, "obj2": 0.12904730267571352}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) * ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( ( MUR * RRSe ) + Max( MUM,DS ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) / Max( RRSe,( MUC * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09038015618648229}, {"determining": "( ( Min( ( Const - MDR ) ,Max( AMS,FirstVNF_CPU ) ) + ( CRS * ACS ) ) - ( FirstVNF_CPU * Max( ( FirstVNF_RAM - ( ARS + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ),DDR ) ) )", "choosing": "( Max( ( MUC + Min( CS ,CS ) ),MUR ) + ( MUC * MLU ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( ( AMS - ( Min( ( FirstVNF_RAM * AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),Max( ( ( ( ( ( MUM - RRSe ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RRSe ,RCSe ) ,RRSe ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10455342171360332}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe * ( ( RRSe / MUR ) - Min( DS ,( MLU * DS ) ) ) ) ),MUR ) )", "obj1": 0.8629550321199143, "obj2": 0.06586788130007176}, {"determining": "( Max( MRS,Max( MDR,FirstVNF_RAM_Server ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11047019295438112}, {"determining": "( ( Min( ( AMS - MDR ) ,( Max( Max( ARS,( FirstVNF_CPU_Server - BR ) ),MDR ) * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,( MRS + ( Max( Const,MRS ) * MRS ) ) ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( MUR,( Min( MUC ,( Max( MUC,( MLU / RRSe ) ) + Max( Min( ( Max( DS,CS ) / CS ) ,( RMSe * RCSe ) ),MLU ) ) ) / Max( MLU,( MUM * MUM ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10649094951943153}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + ( CS + ( MUR * DS ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ),( ( DS / RCSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06586788130007176}, {"determining": "( Max( Const,FirstVNF_RAM ) - Max( Min( ( AMS - FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ),( PN / ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),( MRS / BR ) ) ,Max( FirstVNF_RAM_Server,( ARS * Min( ARS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),Max( ( Min( Min( MUM ,( DS - MUC ) ) ,RCSe ) * DS ),( MUC * ( MUM / Min( ( CS / MLU ) ,MUM ) ) ) ) ) ) + DS )", "obj1": 0.9400428265524625, "obj2": 0.029450083309819467}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( DDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( ( RRSe - ( MUC / MLU ) ),Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.014106729598080639}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( ( Max( ( MUC * MUC ),( DS * MUC ) ) - RMSe ) * ( ( Min( CS ,DS ) / ( RCSe - RCSe ) ) - RCSe ) ) + MUM ) ,MUM ),MUR ) + Max( Max( RRSe,Max( ( MLU / Min( CS ,MUC ) ),( Max( MUC,( MLU - MUC ) ) - MLU ) ) ),( Max( DS,( MUC - RMSe ) ) / ( MUC + MUM ) ) ) )", "obj1": 0.9036402569593148, "obj2": 0.047577559522207206}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,Min( DS ,( MLU * DS ) ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09720291424691457}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( MDR * Min( Max( MRS,( ( ( AMS * FirstVNF_Mem_Server ) * AMS ) - ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,Min( ( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( ( RRSe - ( CS + MUM ) ),( MUR / Min( MUM ,MLU ) ) ) ) ,MUM ) ) - Max( Max( Max( ( MUR + Max( Max( MUR,RRSe ),MUR ) ),MUM ),CS ),( CS * DS ) ) ) + Max( ( MUC + ( RRSe / CS ) ),MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.15804659635002893}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( ( AMS - MDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( ( FirstVNF_RAM * AMS ) * BR ) - PN ) ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( Max( CS,( ( ( MUR - MLU ) * ( MUR / RCSe ) ) + CS ) ) + Min( Max( CS,RRSe ) ,MUM ) )", "obj1": 0.9785867237687366, "obj2": 0.010540153219128856}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.8394004282655246, "obj2": 0.07762531347296887}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( AMS - MDR ),( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - RMSe ) ),( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7580299785867237, "obj2": 0.11960774286909646}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( MUR,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - ( MUR + RMSe ) ) + ( MLU / DS ) )", "obj1": 0.8565310492505354, "obj2": 0.06920675624342842}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,DDR ),ARS ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( RCSe,CS ) + RRSe ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.7237687366167024, "obj2": 0.1415462320388026}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / ( ( RRSe - Min( ( ( MUR + MUM ) / MUM ) ,RRSe ) ) - MUC ) ) - MUR ) + ( MLU / DS ) )", "obj1": 0.974304068522484, "obj2": 0.011234481229922042}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MDR ) * MDR ) ) - ( FirstVNF_CPU * ( MRS + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( ( ACS + BR ) * MDR ) ) ) ) ) )", "choosing": "( ( MUC + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021811185064034882}, {"determining": "( ( ( ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) + AMS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( ( ARS / MRS ) ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM * CS ) ,( RRSe - ( ( ( ( DS / MLU ) / RMSe ) + CS ) / MLU ) ) ),( Max( RRSe,( ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) / Max( ( MUC + ( DS / RCSe ) ),MUR ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12632456081137952}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( ( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( RRSe,CS ) - DS ) ),( Max( MUR,CS ) / Min( MUR ,RMSe ) ) ),( RRSe / MUC ) ) / RMSe ) - ( MUR + RMSe ) ) + ( MLU / DS ) )", "obj1": 0.8565310492505354, "obj2": 0.06920675624342842}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,Min( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),Min( ( FirstVNF_CPU_Server / RRS ) ,( ARS - ( AMS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( MUC + Min( RRSe ,MUM ) ) / RCSe ) + MUC ),MUR ) + Min( RCSe ,RMSe ) )", "obj1": 0.8222698072805139, "obj2": 0.08655312198362522}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07586008360213645}, {"determining": "( ( ( AMS - Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + ( ( CS + ( Max( ( Max( RMSe,( MUM - MUC ) ) * MUR ),MLU ) - Max( CS,( MUC + ( RRSe / ( RCSe - MUC ) ) ) ) ) ) / DS ) )", "obj1": 0.9229122055674518, "obj2": 0.03529814533211849}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( ( ( Min( MUM ,( MLU / CS ) ) * CS ) - ( ( MUR + MLU ) - CS ) ),Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9421841541755889, "obj2": 0.026428774999610206}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( ( DS / RCSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( MDR - MDR ) ) ) ,Max( ( FirstVNF_CPU * Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),DDR ) ),Max( FirstVNF_Mem,( ( PN * FirstVNF_RAM ) + FirstVNF_RAM ) ) ) ) * MDR ) ) - ( ( Min( Max( Max( MRS,BR ),( MDR / BR ) ) ,( MRS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) + Min( Max( CS,( CS + ( ( MUR - Max( ( MLU - MUC ),MLU ) ) * ( MUR / Min( ( MUR / MUR ) ,( CS + CS ) ) ) ) ) ) ,( DS + Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( DS,( RCSe - CS ) ) ) + RCSe ) ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11820905121763406}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9336188436830836, "obj2": 0.030454739226681127}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( MRS + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,Min( AMS ,( Const / MDR ) ) ) ) ,Max( ( AMS * Max( Max( MRS,Max( CRS,ARS ) ),ARS ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( ( Min( RCSe ,( RMSe * RRSe ) ) + ( ( MLU / MUM ) * Max( MUC,Min( MUR ,Min( RRSe ,MUM ) ) ) ) ),( Min( DS ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ,MUM ) + ( MLU / DS ) )", "obj1": 0.715203426124197, "obj2": 0.1457425877459534}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem_Server * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( CS / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.09858171554598154}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12632456081137952}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09306709111442735}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( Max( MRS,BR ) + ( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( FirstVNF_RAM / MRS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( ( ( MUC + Min( RRSe ,MUM ) ) / RCSe ) + MUC ),MUR ) + Min( RCSe ,RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.0718740715506314}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( Max( RRSe,CS ) + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( DS - Max( DS,( MUR / MUC ) ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.8779443254817987, "obj2": 0.05878709299695214}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06016052898707803}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09306709111442735}, {"determining": "( ( ( RRS - Min( FirstVNF_CPU ,CRS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( ( ARS * FirstVNF_RAM_Server ),AMS ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( DS - DS ),Max( ( DS / RCSe ),RRSe ) ),( Min( MUM ,( RCSe * MUM ) ) - Max( ( CS * DS ),( Max( MUM,RRSe ) - MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.0857450221730328}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,MDR ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) * MUC ),( RRSe * RRSe ) )", "obj1": 0.7558886509635975, "obj2": 0.121270458625124}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( FirstVNF_RAM_Server * Max( Max( MRS,BR ),( FirstVNF_Mem * ( ARS + PN ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( RRSe,( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14432527552427038}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( ( MRS / BR ),( MDR / ( BR * MDR ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( ( RMSe - DS ) - DS ) ),( Max( RRSe,Max( RRSe,CS ) ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( BR ,FirstVNF_Mem_Server ) - CRS ) ) - ( ( MRS + Min( ( AMS * FirstVNF_CPU ) ,( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( ( MUR / RMSe ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),MUR ) ) ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) - ( ( ( ARS * Min( MDR ,FirstVNF_RAM_Server ) ) + ( AMS - MDR ) ) * ( AMS - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) ) ) - ( Max( MRS,Min( ( FirstVNF_CPU - ( PN - ( FirstVNF_RAM_Server * ( BR * FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( ( Max( RMSe,MUC ) - ( ( MUR + MLU ) - ( Min( RCSe ,MLU ) * ( DS / DS ) ) ) ),Max( ( ( MUR / ( MUR + ( MUC + MUR ) ) ) + MUC ),MUR ) ) ,MUM ) )", "obj1": 0.9550321199143469, "obj2": 0.01980880762727911}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,MDR ) * MDR ) ) - Min( ( MRS + Min( ( FirstVNF_CPU - Const ) ,Max( FirstVNF_CPU_Server,( MDR / ARS ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / ( MUM / MLU ) ) ) ) ) + ( MUM / RMSe ) )", "obj1": 0.9507494646680942, "obj2": 0.021811185064034882}, {"determining": "( ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( Min( ( Const - ARS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.6638115631691649, "obj2": 0.18868601211864267}, {"determining": "( ( AMS - MDR ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),( ( RMSe - DS ) - ( RMSe - ( DS - MUM ) ) ) ) ) + DS )", "obj1": 0.7858672376873662, "obj2": 0.10560529062335963}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) * Max( Max( MRS,Max( CRS,ARS ) ),ARS ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( Min( RCSe ,( RMSe * RRSe ) ) + ( ( MLU / MUM ) * Min( MUM ,( Min( RRSe ,MUR ) + CS ) ) ) ),( ( RMSe / DS ) * RRSe ) ) ) + ( MLU / DS ) )", "obj1": 0.721627408993576, "obj2": 0.14253140163420636}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( AMS * Max( ( Max( ( Max( ( MRS * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) + Max( Max( CS,( ( ( MLU - MUR ) * ( MUR / RCSe ) ) + Max( Max( ( ( MLU - MUM ) - Max( MUC,RCSe ) ),MUR ),( ( MLU * ( RRSe + RCSe ) ) + CS ) ) ) ),MUR ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( ( RRSe * RRSe ) / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MLU ,RMSe ) ) ),MLU ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( Max( ( MRS / BR ),( MDR / ( BR * MDR ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( FirstVNF_CPU - Const ) ,( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( MUC + ( Max( MUM,RCSe ) / RCSe ) ),( Min( MUM ,( MUC + RRSe ) ) - Max( Min( Min( ( ( MUR - RCSe ) / RMSe ) ,RMSe ) ,( MLU + RCSe ) ),RRSe ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( AMS - ( ( Max( DDR,AMS ) / Max( ( ( MRS / ACS ) * ( AMS * PN ) ),FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( ( CS + MUC ) + MUR ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( ( RRSe - ( MUR / MLU ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012693260731326617}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( MRS,Max( CRS,ARS ) ),ARS ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,Max( ( Min( RCSe ,( RMSe * RRSe ) ) + ( ( MLU / MUM ) * Min( MUM ,( Min( RRSe ,MUR ) + CS ) ) ) ),( Min( MLU ,Min( Max( MUR,MUM ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.715203426124197, "obj2": 0.1457425877459534}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.8436830835117773, "obj2": 0.07586008360213645}, {"determining": "( ( ( FirstVNF_RAM_Server - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Max( ( MRS + FirstVNF_Mem ),MRS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( ( DS / RCSe ) + MUC ) ,MUR ) ) ,( RRSe - ( MUR / MLU ) ) ),( ( MUM - ( ( ( MUR - ( ( DS * DS ) * RCSe ) ) - ( MLU + RMSe ) ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10875467321997369}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( Min( Max( MRS,Max( ARS,CRS ) ) ,Max( ( ( FirstVNF_CPU_Server - BR ) - DDR ),FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / ( PN / PN ) ) / ( FirstVNF_RAM - ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( RCSe * MUR ) ) - Max( ( CS / ( Min( DS ,MLU ) - ( MUR - CS ) ) ),CS ) ) ),Min( ( RCSe - ( ( ( RRSe / RCSe ) - Max( RMSe,MLU ) ) * Min( ( CS / MLU ) ,( CS * MUR ) ) ) ) ,MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.18333565278158867}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( ( ARS - ( MDR - MDR ) ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( MLU / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.9079229122055674, "obj2": 0.044715147565794734}, {"determining": "( ( AMS - MDR ) - ( ( ARS - FirstVNF_CPU ) * ( ( Max( ( Max( Max( FirstVNF_RAM_Server,MRS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ) / ( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR * RCSe ) ) + Max( ( MLU + ( MUM / CS ) ),( ( MLU * ( DS + RCSe ) ) + CS ) ) ) ),RRSe ) )", "obj1": 0.815845824411135, "obj2": 0.08968873486288152}, {"determining": "( ( ( AMS - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( MRS,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( MRS + Max( FirstVNF_RAM,MDR ) ) / ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( ( RRSe - Max( ( RCSe - MLU ),Min( DS ,MLU ) ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.018833074078532044}, {"determining": "( ( ( AMS - ( Max( PN,( MRS * FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( MDR ,FirstVNF_CPU ) ) / Min( DDR ,AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) - Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) ) + ( MLU / Min( Min( RRSe ,RCSe ) ,MUM ) ) )", "obj1": 0.7408993576017131, "obj2": 0.1299024093950731}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( AMS - MDR ) ),DDR ) * FirstVNF_CPU ) ,( AMS - Max( ( Min( MRS ,FirstVNF_RAM ) / Max( FirstVNF_RAM_Server,MDR ) ),( FirstVNF_Mem_Server / ACS ) ) ) ) * ( AMS - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) ) ) - ( ( MRS + Min( ( ( ( FirstVNF_RAM_Server * BR ) - PN ) - FirstVNF_CPU ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( ( ( CS * RMSe ) * ( ( RCSe - RMSe ) + ( ( ( ( RCSe * RCSe ) * RCSe ) * MUM ) - DS ) ) ) ,( MUR * RRSe ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013106894768242382}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( RRSe - ( MUC / MLU ) ) ),MUR ) + Max( MUR,( Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09998748791681572}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8779443254817987, "obj2": 0.05878709299695214}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06016052898707803}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),Min( ( FirstVNF_CPU_Server / Max( DDR,AMS ) ) ,( ARS - ( ARS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUC / ( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( Min( ( MUC + ( DS / RCSe ) ) ,MUR ),( MUR * RRSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.08312235811683465}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( ( RRSe * MUC ) / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MLU ,RMSe ) ) ),MLU ) )", "obj1": 0.9057815845824411, "obj2": 0.0449645989747836}], "27": [{"determining": "( ( AMS - MDR ) - ( AMS * Max( AMS,( MRS / ACS ) ) ) )", "choosing": "( Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) - Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( CS / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,Max( PN,( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,( PN / ( FirstVNF_CPU_Server + MDR ) ) ) ) )", "choosing": "Max( ( Max( RMSe,RRSe ) - ( MLU / Max( RRSe,( Max( ( MUM * RCSe ),DS ) * RRSe ) ) ) ),( Min( MLU ,( Max( RRSe,CS ) / Min( MUR ,( ( MUR + DS ) - Max( ( CS * CS ),DS ) ) ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( MUR + Max( ( MUC + ( Max( MUM,RCSe ) / RCSe ) ),MUR ) )", "obj1": 0.6466809421841542, "obj2": 0.22748971125036443}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + PN ) ) ) - ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * ( ACS + Max( BR,DDR ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( MRS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + DDR ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe / MUR ) ),Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - ( ( RRSe - Max( Max( MLU,( RCSe * MUR ) ),( RMSe / Min( DS ,MLU ) ) ) ) / MLU ) ) ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MLU ,RCSe ) ,MUM ),Max( RRSe,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / Max( Const,DDR ) ) ) - ( MDR * Min( Max( MRS,Max( Max( CRS,ARS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6895074946466809, "obj2": 0.16613569454867144}, {"determining": "( Max( Const,FirstVNF_RAM ) - Max( Min( ( AMS - FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ),( PN / ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),( MRS / BR ) ) ,Max( FirstVNF_RAM_Server,( ARS * Min( ARS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),Max( ( Min( Min( MUM ,( DS - MUC ) ) ,RCSe ) * DS ),( MUC * ( MUM / Min( ( CS / MLU ) ,MUM ) ) ) ) ) ) + DS )", "obj1": 0.6873661670235546, "obj2": 0.1794365120725629}, {"determining": "( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / RRS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + Const ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( ( ( ( MLU * MLU ) * RRSe ) - ( DS * ( MUM * CS ) ) ) * ( CS - DS ) ) - RMSe ) ) + DS ) )", "obj1": 0.9186295503211992, "obj2": 0.03837833562066441}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.715203426124197, "obj2": 0.14280932638495986}, {"determining": "( ( ( AMS - ( AMS - MDR ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( ( RRSe / Max( Min( RMSe ,MLU ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) ) - ( MUR / MLU ) ) ),( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05212346958646308}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ,Min( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,MUM ) ) - Max( ( CS * DS ),Max( Max( ( MUR / ( DS / MUR ) ),MUM ),CS ) ) ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6937901498929336, "obj2": 0.15844501605939487}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( FirstVNF_Mem + CRS ),Max( CRS,ARS ) ) ) + MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( MDR / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS * ( ( ( ( CS - MUR ) - ( ( MLU + CS ) / DS ) ) * RMSe ) * RRSe ) ) - ( ( RMSe + CS ) + RMSe ) ) + ( MLU / DS ) )", "obj1": 0.8565310492505354, "obj2": 0.06920675624342841}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( DDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( Max( ( RRSe - ( MUC / MLU ) ),Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9678800856531049, "obj2": 0.014106729598080639}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( ( AMS - MDR ) ,Const ) )", "choosing": "( Max( ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,Min( RRSe ,( MUR * MUM ) ) ),Min( Max( RRSe,Max( RRSe,CS ) ) ,Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.734475374732334, "obj2": 0.13205055858305756}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * DDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,CS ) + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) + ( MLU / DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07552266336047608}, {"determining": "( ( Min( ( AMS - MDR ) ,( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) + ( PN / Max( Const,DDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7066381156316917, "obj2": 0.15377824286948646}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( Max( Const,DDR ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / ( MUC + ( RRSe / RCSe ) ) ) ),MUR ) )", "obj1": 0.6659528907922913, "obj2": 0.18532733761822837}, {"determining": "( ( Min( ( AMS - MDR ) ,( Min( ( AMS / DDR ) ,CRS ) * FirstVNF_CPU ) ) - ( PN / Max( Const,DDR ) ) ) - ( MDR * Min( Max( MRS,FirstVNF_RAM ) ,Max( MRS,Max( Max( CRS,ARS ),ARS ) ) ) ) )", "choosing": "( Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) + Max( MUR,( RMSe + CS ) ) )", "obj1": 0.7044967880085653, "obj2": 0.15658830017973283}, {"determining": "( Max( ( ( PN - Max( AMS,( RRS - FirstVNF_CPU_Server ) ) ) * DDR ),BR ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( ( MUM - RCSe ) / Max( MUR,CS ) ) + ( RCSe / RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18522860997058052}, {"determining": "( ( ( Min( Min( AMS ,DDR ) ,Max( DDR,FirstVNF_RAM ) ) * MDR ) - ( AMS - MDR ) ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * Min( BR ,FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( ( Min( Min( RMSe ,RCSe ) ,MUM ) / Max( MUM,( ( CS * MUC ) + MUR ) ) ) / ( ( ( ( MUC * RCSe ) + RMSe ) + MUM ) - MLU ) ) )", "obj1": 0.9464668094218416, "obj2": 0.025270757818814573}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS - ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( DDR + FirstVNF_Mem_Server ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( RRSe - RCSe ) * ( ( RMSe - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.8950749464668094, "obj2": 0.04982147616081579}, {"determining": "( ( ( AMS - ( Min( Max( Const,( ARS * PN ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * ( Min( PN ,BR ) * ARS ) ) ) - ( Min( MDR ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( ( MUC + ( DS / ( DS * ( Max( RMSe,RRSe ) / Min( MUM ,CS ) ) ) ) ) ,Min( ( DS + CS ) ,( MUM + CS ) ) ) ),DS )", "obj1": 0.7708779443254818, "obj2": 0.11376181250928308}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,( DS / RCSe ) ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9400428265524625, "obj2": 0.027104108716701786}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( DDR ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * DS ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.18165834092558267}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( Max( MRS,BR ) + ( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( ACS / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * MDR ) ) - ( FirstVNF_RAM_Server * AMS ) )", "choosing": "( ( ( Max( RMSe,Max( CS,RCSe ) ) + ( RMSe + RMSe ) ) + RCSe ) + Min( RCSe ,RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.07187407155063139}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_CPU * AMS ) ) + ( Max( FirstVNF_CPU_Server,Const ) / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MUR * RMSe ) ) - Min( Max( RMSe,MUC ) ,MUC ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( MLU,( Min( Max( RRSe,( RCSe - CS ) ) ,( RRSe + ( MLU / MLU ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( Min( DDR ,( Min( Const ,DDR ) - MRS ) ) + ( ( Max( ACS,FirstVNF_CPU_Server ) + DDR ) - ( MRS / CRS ) ) ) * Max( CRS,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - Min( Min( Min( ( MUC * ( ( CS + DS ) * ( Max( MUR,MUM ) + ( MUR + MUR ) ) ) ) ,MUM ) ,CS ) ,RRSe ) )", "obj1": 0.9271948608137045, "obj2": 0.034395916317138564}, {"determining": "( ( MRS * MDR ) - ( FirstVNF_CPU * ( Max( ( FirstVNF_CPU_Server - MDR ),( PN * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( ( Min( ( RRSe + Max( MUR,( CS - MLU ) ) ) ,CS ) / ( Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) / RMSe ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.03190186127829897}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( FirstVNF_RAM_Server * ( Max( MRS,BR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( RRSe,( Max( RRSe,( Max( ( RCSe + CS ),MUR ) / ( Max( ( ( MUC - CS ) + RMSe ),CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.721627408993576, "obj2": 0.14226176940315516}, {"determining": "( ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( Min( ( Const - ARS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.6638115631691649, "obj2": 0.18868601211864267}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( Min( Min( ACS ,FirstVNF_CPU ) ,( AMS * FirstVNF_CPU ) ) + ( FirstVNF_CPU * ( MRS + FirstVNF_RAM ) ) ) - Max( MDR,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) * ( RRSe - RMSe ) ),DS )", "obj1": 0.7323340471092077, "obj2": 0.1370261510064774}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( ( ARS - ( MDR - MDR ) ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( MLU / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.9079229122055674, "obj2": 0.044715147565794734}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( Min( Max( MRS,Max( ARS,CRS ) ) ,Max( ( ( FirstVNF_CPU_Server - BR ) - DDR ),FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / ( PN / PN ) ) / ( FirstVNF_RAM - ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( RCSe * MUR ) ) - Max( ( CS / ( Min( DS ,MLU ) - ( MUR - CS ) ) ),CS ) ) ),Min( ( RCSe - ( ( ( RRSe / RCSe ) - Max( RMSe,MLU ) ) * Min( ( CS / MLU ) ,( CS * MUR ) ) ) ) ,MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.18333565278158867}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Min( ACS ,ACS ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( Min( MDR ,FirstVNF_CPU ) / PN ) / Min( DDR ,AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( RRSe + MUR ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) * ( RCSe - RRSe ) ) ) ) + ( MLU / DS ) )", "obj1": 0.7430406852248393, "obj2": 0.12904730267571352}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * ( DDR + Max( FirstVNF_CPU,ARS ) ) ) )", "choosing": "( Max( ( MUC + Min( RMSe ,( RRSe + Max( DS,RMSe ) ) ) ),MUR ) + Max( MUR,( Max( MUR,( MUR / ( MUM * ( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ) ) ) + Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) * ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( ( MUR * RRSe ) + Max( MUM,DS ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) / Max( RRSe,( MUC * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09038015618648229}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( MDR - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( ( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) + ( RMSe * ( ( RRSe / MUR ) - Min( DS ,( MLU * DS ) ) ) ) ),MUR ) )", "obj1": 0.8629550321199143, "obj2": 0.06586788130007176}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( Min( ( AMS - MDR ) ,( Max( Max( ARS,( FirstVNF_CPU_Server - BR ) ),MDR ) * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,( MRS + ( Max( Const,MRS ) * MRS ) ) ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( MUR,( Min( MUC ,( Max( MUC,( MLU / RRSe ) ) + Max( Min( ( Max( DS,CS ) / CS ) ,( RMSe * RCSe ) ),MLU ) ) ) / Max( MLU,( MUM * MUM ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10649094951943153}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_CPU * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( RRSe - ( MUC / MLU ) ) ),MUR ) + Max( MUR,( Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,( Max( RRSe,CS ) / Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08665527788848265}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe * ( ( RRSe / MUR ) - Min( DS ,( MLU * DS ) ) ) ) ),MUR ) )", "obj1": 0.8629550321199143, "obj2": 0.06586788130007176}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( ( ARS - ( MDR - MDR ) ) * FirstVNF_CPU ),DDR ) * MDR ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( MLU / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.9079229122055674, "obj2": 0.044715147565794734}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( ( Max( ( MUC * MUC ),( DS * MUC ) ) - RMSe ) * ( ( Min( CS ,DS ) / ( RCSe - RCSe ) ) - RCSe ) ) + MUM ) ,MUM ),MUR ) + Max( Max( RRSe,Max( ( MLU / Min( CS ,MUC ) ),( Max( MUC,( MLU - MUC ) ) - MLU ) ) ),( Max( DS,( MUC - RMSe ) ) / ( MUC + MUM ) ) ) )", "obj1": 0.9036402569593148, "obj2": 0.047577559522207206}, {"determining": "( ( Min( ( AMS - MDR ) ,Max( ARS,DDR ) ) + ( ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) / PN ) ) - ( MDR * Max( Max( MRS,Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - CRS ) ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,CRS ) ),ARS ) ),Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,( MUM - ( Max( ( RCSe + DS ),Min( MUM ,( MUM * ( CS / DS ) ) ) ) / MUR ) ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.69593147751606, "obj2": 0.1571603198003584}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ARS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06280568032503132}, {"determining": "( ( ( AMS - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( ( RRSe - ( MUR / MLU ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.018833074078532044}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8779443254817987, "obj2": 0.05878709299695213}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( RRSe - ( MUR / MLU ) ) ,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( ( DS / RCSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13073945753304816}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MDR ) * MDR ) ) - ( FirstVNF_CPU * ( MRS + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( ( ACS + BR ) * MDR ) ) ) ) ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021811185064034882}, {"determining": "( ( ACS / FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * DS ) ) + ( Min( MUM ,( RRSe + CS ) ) * ( MLU / MUM ) ) ),Max( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ),Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) ) + ( ( DS / RCSe ) / Min( Min( ( ( ( Min( MUM ,MUR ) / RRSe ) / Min( ( MLU * RCSe ) ,DS ) ) + MUC ) ,RCSe ) ,MUM ) ) )", "obj1": 0.7237687366167024, "obj2": 0.14035145776583047}, {"determining": "( ( ( AMS - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( MRS,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( MRS + Max( FirstVNF_RAM,MDR ) ) / ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( ( RRSe - Max( ( RCSe - MLU ),Min( DS ,MLU ) ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.018833074078532044}, {"determining": "( ( ( ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) + AMS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( ( ARS / MRS ) ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM * CS ) ,( RRSe - ( ( ( ( DS / MLU ) / RMSe ) + CS ) / MLU ) ) ),( Max( RRSe,( ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) / Max( ( MUC + ( DS / RCSe ) ),MUR ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12632456081137952}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,AMS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( FirstVNF_Mem * ( ARS + PN ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.728051391862955, "obj2": 0.13885988320211587}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - CRS ) ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,CRS ) ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( Max( MRS,Max( MDR,FirstVNF_RAM_Server ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11047019295438112}, {"determining": "( ( ( AMS - Min( ( ( ARS / ACS ) - ( FirstVNF_Mem_Server * Min( ACS ,FirstVNF_CPU ) ) ) ,( AMS * FirstVNF_CPU ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / PN ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,RCSe ),Max( ( ( ( ( ( RRSe - MUM ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RRSe ,RCSe ) ,RRSe ) ,RRSe ) ) - Max( CS,DS ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03529814533211849}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ARS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06280568032503132}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9336188436830836, "obj2": 0.030454739226681127}, {"determining": "( ( Min( ( MDR - AMS ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( ( ARS - ( FirstVNF_CPU_Server - MDR ) ) - FirstVNF_RAM ) + DDR ) * Min( ( FirstVNF_RAM - AMS ) ,( PN / FirstVNF_Mem_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( CS / ( RCSe / Max( Min( Max( RCSe,DS ) ,Min( MUR ,MUM ) ),MUC ) ) ) - MUR ) / Max( RRSe,CS ) ) + Max( ( MUC + ( ( MUC + ( RRSe / CS ) ) / ( Max( MUR,MUR ) + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ) ) ),MUR ) )", "obj1": 0.8479657387580299, "obj2": 0.07275286350932976}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( FirstVNF_Mem - MRS ),( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * DDR ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( RCSe + Max( CS,RMSe ) ) + RRSe ) + Max( ( MUC + ( RRSe / Max( Min( RMSe ,MLU ),( DS * Min( MUM ,( RMSe + MUR ) ) ) ) ) ),MUR ) )", "obj1": 0.7473233404710921, "obj2": 0.12632456081137952}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( ( ARS - ( AMS - ACS ) ),FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + CS ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.880085653104925, "obj2": 0.05789452935505486}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( MDR - MDR ) ) ) ,Max( ( FirstVNF_CPU * Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),DDR ) ),Max( FirstVNF_Mem,( ( PN * FirstVNF_RAM ) + FirstVNF_RAM ) ) ) ) * MDR ) ) - ( ( Min( Max( Max( MRS,BR ),( MDR / BR ) ) ,( MRS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) + Min( Max( CS,( CS + ( ( MUR - Max( ( MLU - MUC ),MLU ) ) * ( MUR / Min( ( MUR / MUR ) ,( CS + CS ) ) ) ) ) ) ,( DS + Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( DS,( RCSe - CS ) ) ) + RCSe ) ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11820905121763406}, {"determining": "( ( FirstVNF_RAM_Server - Min( FirstVNF_Mem_Server ,( PN * FirstVNF_RAM_Server ) ) ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,Max( DS,( Max( MUC,MUM ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06016052898707803}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( Min( ( FirstVNF_RAM_Server * RRS ) ,BR ),BR ),Min( ( FirstVNF_CPU_Server / Max( DDR,Const ) ) ,( ARS - ( ARS - MDR ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( FirstVNF_RAM * ( AMS * MDR ) ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( ( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) - MUC ) / MUC ) ) / ( RRSe / MUM ) ) - Max( Min( ( MUC + ( DS / RCSe ) ) ,( ( ( RCSe + MUC ) - MUR ) - ( MUC - DS ) ) ),( MUR * RRSe ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09539993318561112}, {"determining": "( ( ( RRS - Min( FirstVNF_CPU ,CRS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( ( ARS * FirstVNF_RAM_Server ),AMS ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( DS - DS ),Max( ( DS / RCSe ),RRSe ) ),( Min( MUM ,( RCSe * MUM ) ) - Max( ( CS * DS ),( Max( MUM,RRSe ) - MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.0857450221730328}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( ( AMS - ( Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ARS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - MUC ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.8329764453961456, "obj2": 0.0807736650387343}, {"determining": "( ( Min( ( Const - MDR ) ,Max( AMS,FirstVNF_CPU ) ) + ( CRS * ACS ) ) - ( FirstVNF_CPU * Max( ( FirstVNF_RAM - ( ARS + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ),DDR ) ) )", "choosing": "( Max( ( MUC + Min( CS ,CS ) ),MUR ) + ( MUC * MLU ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09306709111442735}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( AMS - MDR ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * ( AMS - ( ( ( AMS * FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) ) ) - ( ( MRS + Min( ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( MUR + Min( ( ( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) / Min( MUM ,MUC ) ) ,MUM ) )", "obj1": 0.987152034261242, "obj2": 0.005617240614961023}, {"determining": "( ( AMS - MDR ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),( ( RMSe - DS ) - ( RMSe - ( DS - MUM ) ) ) ) ) + DS )", "obj1": 0.7858672376873662, "obj2": 0.10560529062335963}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),DDR ) * ( AMS - MDR ) ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( MUR,( Max( Min( Min( Min( RRSe ,RCSe ) ,MUM ) ,MUM ),MUR ) + Max( MUR,Min( DS ,( MLU * DS ) ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10332233480269572}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( AMS - MDR ),( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - RMSe ) ),( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7580299785867237, "obj2": 0.11960774286909646}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / RCSe ) ),MUR ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07762531347296887}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.8394004282655246, "obj2": 0.07762531347296887}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * CRS ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) ) ) - Max( ( CS / ( Min( CS ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( MUM - RRSe ) ,RMSe ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * ( FirstVNF_RAM * ( AMS * MDR ) ) ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( ( DS / RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10140750255725667}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MDR ) * MDR ) ) - ( FirstVNF_CPU * ( MRS + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( ( ACS + BR ) * MDR ) ) ) ) ) )", "choosing": "( ( MUC + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021811185064034882}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9336188436830836, "obj2": 0.030454739226681127}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.7516059957173448, "obj2": 0.12298384151222433}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem - AMS ),DDR ) * ( MRS + FirstVNF_Mem ) ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / MUR ) ),( RRSe - MUR ) ) + Max( MUR,( Max( Min( Min( RMSe ,RRSe ) ,MUM ),MUR ) + Max( MUR,( CS / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10207505625388054}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( MRS + Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( AMS * MDR ) ) ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( RMSe ,Min( ( Min( RMSe ,Min( ( MUC + MUC ) ,Min( RCSe ,RMSe ) ) ) - ( ( RRSe / ( MUM - RRSe ) ) + ( Max( MUC,MUR ) / ( MLU * RMSe ) ) ) ) ,CS ) ) ),DS )", "obj1": 0.7773019271948608, "obj2": 0.11047019295438112}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MDR ) * MDR ) ) - ( FirstVNF_CPU - ( ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),Max( MRS,BR ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( Min( ACS ,( DDR - FirstVNF_CPU ) ) * MDR ) ) ) ) ) )", "choosing": "( ( MUC + DS ) + Min( Max( ( RMSe - DS ),( CS + ( ( ( CS + MUR ) - MLU ) * ( MUR / Min( ( MUM / MUR ) ,( CS + CS ) ) ) ) ) ) ,( Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012364279958195739}, {"determining": "( ( ( AMS - ( Min( Max( DDR,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( MDR ,DDR ) * ( ( DDR / MRS ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MUM * ( Min( ( MLU + ( ( ( MLU + RCSe ) * ( RRSe * MLU ) ) - Max( ( RMSe - MUR ),MUC ) ) ) ,( RCSe / MUR ) ) * MUM ) ),DS )", "obj1": 0.7687366167023555, "obj2": 0.11459039969858556}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Max( ( MRS + FirstVNF_Mem ),MRS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( ( DS / RCSe ) + MUC ) ,MUR ) ) ,( RRSe - ( MUR / MLU ) ) ),( ( MUM - ( ( ( MUR - ( MLU - RCSe ) ) - ( MLU + RMSe ) ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10875467321997369}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( AMS - MDR ),( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - RMSe ) ),( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12182257493009897}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,MDR ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / ( Min( RCSe ,RRSe ) * ( DS / RCSe ) ) ) * MUC ),( RRSe * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298916389368438}, {"determining": "( ( AMS - MDR ) - ( ( ARS - FirstVNF_CPU ) * ( ( Max( ( Max( Max( FirstVNF_RAM_Server,MRS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ) / ( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR * RCSe ) ) + Max( ( MLU + ( MUM / CS ) ),( ( MLU * ( DS + RCSe ) ) + CS ) ) ) ),RRSe ) )", "obj1": 0.815845824411135, "obj2": 0.08968873486288152}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_RAM ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( ( ( RRSe - ( MUR / MLU ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ) - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Max( MUR,CS ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09653996629097993}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06016052898707803}, {"determining": "( ( AMS * MDR ) - ( ARS - ( ( PN / PN ) * Min( Min( ACS ,( ARS / MDR ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU / ( ( ( ( MLU * MUR ) + RCSe ) - ( MUM + RMSe ) ) + DS ) ),( MLU + MUR ) ) * RMSe ) + ( Max( DS,( Min( RCSe ,MLU ) / MUC ) ) / MUR ) )", "obj1": 0.9850107066381156, "obj2": 0.00695356718752917}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09306709111442735}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( MDR ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ),DS )", "obj1": 0.7665952890792291, "obj2": 0.1155478158213051}, {"determining": "( ( ( ARS - MDR ) - ( BR - Max( PN,( FirstVNF_RAM * ARS ) ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUC / ( ( MUM - ( ( RRSe - MUC ) / ( MUM + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( ( MUR * RRSe ),( ( MUC + ( Max( RMSe,Max( ( MLU + MUC ),Min( RMSe ,RMSe ) ) ) / RCSe ) ) + MUR ) ) )", "obj1": 0.828693790149893, "obj2": 0.08312235811683465}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( DDR,( FirstVNF_RAM * AMS ) ) * MRS ),DDR ) * MDR ) ) - ( ( PN - FirstVNF_CPU_Server ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( ( RRSe * Min( MUC ,RMSe ) ) / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / ( MLU / RMSe ) ) ),MLU ) )", "obj1": 0.9057815845824411, "obj2": 0.0449645989747836}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / RCSe ) ),MUR ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12298384151222433}, {"determining": "( ( AMS - MDR ) - ( Max( Max( ( ( ARS * MRS ) * ( Min( DDR ,( FirstVNF_RAM + DDR ) ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU ),FirstVNF_Mem ) * MDR ) )", "choosing": "( Max( Min( Min( MLU ,RCSe ) ,MUM ),Max( RRSe,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09570032521270753}], "28": [{"determining": "( ( MRS * MDR ) - ( FirstVNF_CPU * ( Max( ( FirstVNF_CPU_Server - MDR ),( PN * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( ( Min( ( RRSe + Max( MUR,( CS - MLU ) ) ) ,CS ) / ( Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) / RMSe ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( AMS,( MRS / ACS ) ) ) )", "choosing": "( Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ) - Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) + Max( MUR,( Max( Min( Min( RMSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( CS / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( MUR + Max( ( MUC + ( Max( MUM,RCSe ) / RCSe ) ),MUR ) )", "obj1": 0.6466809421841542, "obj2": 0.22748971125036443}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + PN ) ) ) - ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * ( ACS + Max( BR,DDR ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( MRS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + DDR ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe / MUR ) ),Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - ( ( RRSe - Max( Max( MLU,( RCSe * MUR ) ),( RMSe / Min( DS ,MLU ) ) ) ) / MLU ) ) ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / Max( Const,DDR ) ) ) - ( MDR * Min( Max( MRS,Max( Max( CRS,ARS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6895074946466809, "obj2": 0.16613569454867144}, {"determining": "( Max( Const,FirstVNF_RAM ) - Max( Min( ( AMS - FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ),( PN / ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),( MRS / BR ) ) ,Max( FirstVNF_RAM_Server,( ARS * Min( ARS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),Max( ( Min( Min( MUM ,( DS - MUC ) ) ,RCSe ) * DS ),( MUC * ( MUM / Min( ( CS / MLU ) ,MUM ) ) ) ) ) ) + DS )", "obj1": 0.6873661670235546, "obj2": 0.1794365120725629}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( MRS / CRS ) + ( AMS - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ),DDR ) * FirstVNF_CPU ) - ( Min( ( AMS - MDR ) ,( FirstVNF_RAM * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + ( ( CS / ( CS + ( Min( RRSe ,MUC ) - ( MUM * RRSe ) ) ) ) * Max( Max( MUM,CS ),Min( ( CS - Max( CS,Max( ( RCSe * MUR ),Min( RCSe ,DS ) ) ) ) ,( DS * RMSe ) ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.03790622028812498}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( DDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( MRS / Const ) )", "choosing": "( MUR + Min( Max( ( ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) - ( MUC / MLU ) ),Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9057815845824411, "obj2": 0.04381906982087469}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_RAM ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( ( ( RRSe - ( MUR / MLU ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ) - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Max( MUR,CS ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09653996629097993}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * ( FirstVNF_RAM * ( AMS * MDR ) ) ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( ( DS / RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10140750255725667}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( ( AMS - MDR ) ,Const ) )", "choosing": "( Max( ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,Min( RRSe ,( MUR * MUM ) ) ),Min( Max( RRSe,Max( RRSe,CS ) ) ,Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( ( AMS - Min( ( ( ARS / ACS ) - ( FirstVNF_Mem_Server * Min( ACS ,FirstVNF_CPU ) ) ) ,( AMS * FirstVNF_CPU ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / PN ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,RCSe ),Max( ( ( ( ( ( RRSe - MUM ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RRSe ,RCSe ) ,RRSe ) ,RRSe ) ) - Max( CS,DS ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03529814533211849}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( Max( Const,DDR ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / ( MUC + ( RRSe / RCSe ) ) ) ),MUR ) )", "obj1": 0.6659528907922913, "obj2": 0.18532733761822837}, {"determining": "( ( ( ( Min( Max( MRS,Max( PN,( MDR * FirstVNF_CPU ) ) ) ,Max( FirstVNF_RAM_Server,RRS ) ) * MDR ) - ( BR * Const ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( MUR - RCSe ) / Max( ( ( MUR - Min( ( RMSe / RMSe ) ,( MUC - CS ) ) ) - RMSe ),CS ) ) ,( Max( ( MUC + ( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( ( DS / RCSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11712637634761133}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.715203426124197, "obj2": 0.14280932638495986}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - MUC ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15844501605939487}, {"determining": "( ( Min( ( AMS - MDR ) ,( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) + ( PN / Max( Const,DDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7066381156316917, "obj2": 0.15377824286948646}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ARS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.0628056803250313}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( Min( DDR ,( Min( Const ,DDR ) - MRS ) ) + ( ( Max( ACS,FirstVNF_CPU_Server ) + DDR ) - ( MRS / CRS ) ) ) * Max( CRS,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - Min( Min( Min( ( MUC * ( ( CS + DS ) * ( Max( MUR,MUM ) + ( MUR + MUR ) ) ) ) ,MUM ) ,CS ) ,RRSe ) )", "obj1": 0.9271948608137045, "obj2": 0.034395916317138564}, {"determining": "( ( Min( Min( ACS ,FirstVNF_CPU ) ,( AMS * FirstVNF_CPU ) ) + ( FirstVNF_CPU * ( MRS + FirstVNF_RAM ) ) ) - Max( MDR,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) * ( RRSe - RMSe ) ),DS )", "obj1": 0.7323340471092077, "obj2": 0.1370261510064774}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( ( ( Max( ( MUC * MUC ),( DS * MUC ) ) - RMSe ) * ( ( Min( CS ,DS ) / ( RCSe - RCSe ) ) - RCSe ) ) + MUM ) ,MUM ),MUR ) + Max( Max( RRSe,Max( ( MLU / Min( CS ,MUC ) ),( Max( MUC,( MLU - MUC ) ) - MLU ) ) ),( Max( DS,( MUC - RMSe ) ) / ( MUC + MUM ) ) ) )", "obj1": 0.9036402569593148, "obj2": 0.047577559522207206}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Max( ( MRS + FirstVNF_Mem ),MRS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) ) ) - Max( ( CS / ( Min( CS ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( MUM - RRSe ) ,RMSe ) )", "obj1": 0.7794432548179872, "obj2": 0.10851279446160672}, {"determining": "( ( MRS * MDR ) - ( FirstVNF_CPU * ( Max( ( FirstVNF_CPU_Server - MDR ),( PN * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( ( Min( ( RRSe + Max( MUR,( CS - MLU ) ) ) ,CS ) / ( Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) / RMSe ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.03190186127829897}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( FirstVNF_RAM_Server * ( Max( MRS,BR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( RRSe,( Max( RRSe,( Max( ( RCSe + CS ),MUR ) / ( Max( ( ( MUC - CS ) + RMSe ),CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.721627408993576, "obj2": 0.14226176940315516}, {"determining": "( ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( Min( ( Const - ARS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.6638115631691649, "obj2": 0.18868601211864267}, {"determining": "( Max( Const,( ARS * PN ) ) - ( Min( ( AMS - FirstVNF_RAM_Server ) ,Min( AMS ,FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + FirstVNF_Mem_Server ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MUM + Max( Max( RRSe,CS ),( ( RMSe - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.9635974304068522, "obj2": 0.01597914313640098}, {"determining": "( ( AMS - MDR ) - ( ( ARS - FirstVNF_CPU ) * ( ( Max( ( Max( Max( FirstVNF_RAM_Server,MRS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ) / ( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) + Max( Max( CS,( ( ( MUR - MLU ) * ( MUR * RCSe ) ) + Max( ( MLU + ( MUM / CS ) ),( ( MLU * ( DS + RCSe ) ) + CS ) ) ) ),RRSe ) )", "obj1": 0.815845824411135, "obj2": 0.08968873486288152}, {"determining": "( ( ( AMS - ( AMS - MDR ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( ( RRSe / Max( Min( RMSe ,MLU ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) ) - ( MUR / MLU ) ) ),( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05212346958646308}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,Min( RCSe ,MUC ) ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.734475374732334, "obj2": 0.13205055858305756}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( Min( Max( MRS,Max( ARS,CRS ) ) ,Max( ( ( FirstVNF_CPU_Server - BR ) - DDR ),FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / ( PN / PN ) ) / ( FirstVNF_RAM - ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( RCSe * MUR ) ) - Max( ( CS / ( Min( DS ,MLU ) - ( MUR - CS ) ) ),CS ) ) ),Min( ( RCSe - ( ( ( RRSe / RCSe ) - Max( RMSe,MLU ) ) * Min( ( CS / MLU ) ,( CS * MUR ) ) ) ) ,MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.18333565278158867}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,MDR ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / Min( CS ,CS ) ) * MUC ),( RRSe * RRSe ) )", "obj1": 0.7430406852248393, "obj2": 0.12895053126442152}, {"determining": "( ( ( Min( Min( AMS ,DDR ) ,Max( DDR,FirstVNF_RAM ) ) * MDR ) - ( AMS - MDR ) ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * Min( BR ,FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( ( Min( Min( RMSe ,RCSe ) ,MUM ) / Max( MUM,( ( CS * MUC ) + MUR ) ) ) / ( ( ( ( MUC * RCSe ) + RMSe ) + MUM ) - MLU ) ) )", "obj1": 0.9464668094218416, "obj2": 0.025270757818814573}, {"determining": "( ( Min( Min( AMS ,MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( Const * FirstVNF_Mem ) - ( ( AMS * ARS ) + MDR ) ),BR ) ) - ( CRS * Min( ( PN + ACS ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( MLU,( ( ( RRSe + ( MLU / RRSe ) ) + Max( ( MUR / MLU ),( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( ACS / FirstVNF_RAM ) - Min( MDR ,FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( ( ( CS / RMSe ) - MUR ) / ( DS * DS ) ) + ( Min( MUM ,( RRSe + CS ) ) * ( MLU / MUM ) ) ),Max( Min( MLU ,Min( Min( Min( RMSe ,RCSe ) ,RRSe ) ,RRSe ) ),Max( Min( RRSe ,( MUR * MUM ) ),MUC ) ) ) ) + ( ( DS / RCSe ) / Min( Min( ( ( ( Min( MUM ,MUR ) / RRSe ) / Min( ( MLU * RCSe ) ,DS ) ) + MUC ) ,RCSe ) ,MUM ) ) )", "obj1": 0.7237687366167024, "obj2": 0.14035145776583047}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) * ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( ( MUR * RRSe ) + Max( MUM,DS ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) / Max( RRSe,( MUC * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09038015618648229}, {"determining": "( ( ( AMS - MDR ) - ( MDR * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUC / ( ( MUM - ( ( RRSe - MUC ) / ( MUM + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( ( MUR * RRSe ),Min( ( MUC + ( DS / RCSe ) ) ,MUR ) ) )", "obj1": 0.9379014989293362, "obj2": 0.029698514597504888}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * ( ARS - ( AMS - MDR ) ) ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe * ( ( RRSe / Max( RMSe,Max( CS,RCSe ) ) ) - Min( DS ,( MLU * DS ) ) ) ) ),MUR ) )", "obj1": 0.860813704496788, "obj2": 0.06798217359675911}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * CRS ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) ) ) - Max( ( CS / ( Min( CS ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( MUM - RRSe ) ,RMSe ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( Max( ( ( PN - Max( AMS,( RRS - FirstVNF_CPU_Server ) ) ) * DDR ),BR ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( ( MUM - RCSe ) / Max( MUR,CS ) ) + ( RCSe / RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18522860997058052}, {"determining": "( ( FirstVNF_Mem * Max( ( Min( MRS ,AMS ) + CRS ),MDR ) ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( FirstVNF_CPU * Max( ( Max( ( FirstVNF_RAM * ARS ),DDR ) * FirstVNF_CPU ),DDR ) ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( Min( ( Max( MUM,MLU ) - MUM ) ,CS ),( ( RMSe - DS ) / ( MLU - ( DS - ( DS / MUM ) ) ) ) ) ) + DS )", "obj1": 0.7858672376873662, "obj2": 0.10550501794762263}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) - ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MDR ) * MDR ) ) - ( ( ( MDR * ( CRS + ( Max( PN,RRS ) * FirstVNF_RAM ) ) ) + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( BR * MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( Max( ( MLU / ( ( ( ( MLU * MUR ) + RCSe ) - ( MUM + RMSe ) ) + DS ) ),( MLU + MUR ) ) * RMSe ) + ( Max( CS,( ( ( MUM - MLU ) * ( MUR * RCSe ) ) + Max( ( MLU + ( MUM / CS ) ),( ( ( MUR - MLU ) * ( RRSe + RCSe ) ) + CS ) ) ) ) / MUR ) )", "obj1": 0.9721627408993576, "obj2": 0.012364279958195739}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( Min( ( FirstVNF_RAM_Server * RRS ) ,BR ),BR ),Min( ( FirstVNF_CPU_Server / Max( DDR,Const ) ) ,AMS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( FirstVNF_RAM * ( AMS * MDR ) ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( ( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) - MUC ) / MUC ) ) / ( ( ( DS / RCSe ) / Min( MUC ,RMSe ) ) / MUM ) ) - Max( Min( ( MUC + ( DS / RCSe ) ) ,( ( ( RCSe + MUC ) - MUR ) - ( MUC - DS ) ) ),( MUR * RRSe ) ) )", "obj1": 0.867237687366167, "obj2": 0.06494270334209021}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_CPU * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( PN,( MRS * MDR ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( RCSe ,Max( ( RMSe - ( Max( ( MUC * CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) ),( ( RMSe - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.8201284796573876, "obj2": 0.08665527788848264}, {"determining": "( ( Min( ( AMS - MDR ) ,( Max( Max( ARS,( FirstVNF_CPU_Server - BR ) ),MDR ) * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,( MRS + ( Max( Const,MRS ) * MRS ) ) ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( MUR,( Min( MUC ,( Max( MUC,( MLU / RRSe ) ) + Max( Min( ( Max( DS,CS ) / CS ) ,( RMSe * RCSe ) ),MLU ) ) ) / Max( MLU,( MUM * MUM ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10649094951943153}, {"determining": "( ( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS + ( Min( ( CRS / BR ) ,Const ) / ( AMS / PN ) ) ) - ( ( ( FirstVNF_RAM * ARS ) / ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) * CRS ) ) ) ) - ( MDR - FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( Min( Min( RCSe ,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( ( MUM + MUR ),( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MLU - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,RMSe ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( DDR,( FirstVNF_RAM * AMS ) ) * MRS ),DDR ) * MDR ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( ( ARS * FirstVNF_RAM_Server ),AMS ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( ( RRSe * Min( MUC ,MUM ) ) / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / ( MLU / RMSe ) ) ),MLU ) )", "obj1": 0.9914346895074947, "obj2": 0.0037448270766406817}, {"determining": "( ( AMS - MDR ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( FirstVNF_CPU / ( Const + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),RRSe ) ) + DS )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( RRS - Min( FirstVNF_CPU ,CRS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( ( ARS * FirstVNF_RAM_Server ),AMS ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( DS - DS ),Max( ( DS / RCSe ),RRSe ) ),( Min( MUM ,( RCSe * MUM ) ) - Max( ( CS * DS ),( Max( MUM,RRSe ) - MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.0857450221730328}, {"determining": "( ( ( AMS - ( AMS - MDR ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( ( RRSe / Max( Min( RMSe ,MLU ),( DS * ( MUM - ( RMSe + MUR ) ) ) ) ) - ( MUR / MLU ) ) ),( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05212346958646308}, {"determining": "( ( ( AMS - MDR ) - Min( Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( MLU / MUM ) ) / RCSe ) ),MUR ) + Max( ( MUM + ( RMSe * ( ( RRSe / MUR ) - Min( DS ,( MLU * DS ) ) ) ) ),MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.020845354865918698}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( Min( Min( RMSe ,RCSe ) ,MUM ) / Max( MUM,( ( CS + MUC ) + MUR ) ) ) ) )", "obj1": 0.9400428265524625, "obj2": 0.027104108716701786}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM_Server ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( FirstVNF_RAM_Server * Max( Max( MRS,BR ),( ( AMS - MDR ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( RRSe,( Max( RRSe,( ( ( ( MUR + ( MUC * RCSe ) ) - MUC ) / ( MUM + CS ) ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) / RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14675404773164435}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * CRS ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( MUC + DS ) + Min( Max( ( RMSe - DS ),( CS + ( ( ( CS + MUR ) - MLU ) * ( MUR / Min( ( MUM / MUR ) ,( CS + CS ) ) ) ) ) ) ,( Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MDR ) * MDR ) ) - ( FirstVNF_CPU - ( ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),Max( MRS,BR ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( Min( ACS ,( DDR - FirstVNF_CPU ) ) * MDR ) ) ) ) ) )", "choosing": "( ( MUC + DS ) + Min( Max( ( RMSe - DS ),( CS + ( ( ( CS + MUR ) - MLU ) * ( MUR / Min( ( MUM / MUR ) ,( CS + CS ) ) ) ) ) ) ,( Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012364279958195739}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8779443254817987, "obj2": 0.05878709299695213}, {"determining": "( ( ( ARS - MDR ) - ( BR - Max( PN,( FirstVNF_RAM * ARS ) ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUC / ( ( MUM - ( ( RRSe - MUC ) / ( MUM + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( ( MUR * RRSe ),( ( MUC + ( Max( RMSe,Max( ( MLU + MUC ),Min( RMSe ,RMSe ) ) ) / RCSe ) ) + MUR ) ) )", "obj1": 0.828693790149893, "obj2": 0.08312235811683465}, {"determining": "( ( ( ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) + AMS ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( ( ARS / MRS ) ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( MUM * CS ) ,( RRSe - ( ( ( ( DS / MLU ) / RMSe ) + CS ) / MLU ) ) ),( Max( RRSe,( ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) / Max( ( MUC + ( DS / RCSe ) ),MUR ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12632456081137952}, {"determining": "( Max( MRS,Max( MDR,FirstVNF_RAM_Server ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11047019295438112}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( Min( MLU ,RCSe ) ,MUM ),Max( RRSe,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( DDR ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( ( ARS - ( MDR - MDR ) ) ,Const ) )", "choosing": "Max( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * DS ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.18165834092558267}, {"determining": "( ( ( ( Min( Max( MRS,Max( ( AMS - MDR ),( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) - AMS ) - ( Min( Max( RRS,AMS ) ,DDR ) * Max( Max( Const,Min( PN ,ACS ) ),FirstVNF_Mem ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( RRSe ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - RMSe ) ),( Min( ( MUC + Max( Min( Max( RRSe,CS ) ,MUC ),Min( MUC ,( CS / MUR ) ) ) ) ,MLU ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7580299785867237, "obj2": 0.11960774286909646}, {"determining": "( Max( DDR,Min( FirstVNF_Mem ,BR ) ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ) + DDR ) * Min( ( FirstVNF_RAM * AMS ) ,( PN / FirstVNF_Mem_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,( DS - ( RCSe * RCSe ) ) ) - ( ( DS / CS ) + ( CS / ( DS / Min( MLU ,Min( RRSe ,MLU ) ) ) ) ) ) / MUC ) + Max( Max( Min( ( MUC - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MLU ,RMSe ) ) ),MLU ) )", "obj1": 0.8479657387580299, "obj2": 0.07275286350932976}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * DDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,CS ) + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) + ( MLU / DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07552266336047608}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( Max( MRS,BR ) + ( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( ACS / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * MDR ) ) - ( FirstVNF_RAM_Server * AMS ) )", "choosing": "( ( ( Max( RMSe,Max( CS,RCSe ) ) + ( RMSe + RMSe ) ) + RCSe ) + Min( RCSe ,RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.07187407155063139}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( BR / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / Min( AMS ,( PN * MDR ) ) ) ) )", "choosing": "( ( ( Max( Max( ( Max( MUR,CS ) / Min( MUR ,RMSe ) ),Min( ( MUR - ( MUC / MUR ) ) ,( Max( RRSe,CS ) - DS ) ) ),( RRSe / MUC ) ) / RMSe ) - ( MUR + RMSe ) ) + ( MLU / DS ) )", "obj1": 0.8565310492505354, "obj2": 0.06920675624342841}, {"determining": "( ( ( AMS - ( Min( Max( Max( FirstVNF_RAM,ARS ),( MDR * RRS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( MDR / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( ( MUR * MUC ),RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06016052898707803}, {"determining": "( ( ( AMS - ( Min( ( DDR + CRS ) ,( FirstVNF_RAM_Server * Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - Max( MLU,CS ) )", "obj1": 0.7473233404710921, "obj2": 0.12632456081137952}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( ( Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / Max( Min( RMSe ,MLU ),( DS * ( Min( RCSe ,MUM ) - ( RMSe + MUR ) ) ) ) ) ),MUR ) )", "obj1": 0.7665952890792291, "obj2": 0.11501722325666999}, {"determining": "( ( Min( ( Const - MDR ) ,Max( AMS,FirstVNF_CPU ) ) + ( CRS * ACS ) ) - ( FirstVNF_CPU * Max( ( FirstVNF_RAM - ( ARS + ( Max( MDR,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ),DDR ) ) )", "choosing": "( Max( ( MUC + Min( CS ,CS ) ),MUR ) + ( MUC * MLU ) )", "obj1": 0.8308351177730193, "obj2": 0.08210440717519137}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * Max( ( Const * AMS ),ARS ) ),DDR ) ,Min( RRS ,CRS ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( ( RMSe / RCSe ) ,RMSe ) - RRSe ) + ( DS + ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.021434195642178043}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09306709111442735}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + FirstVNF_Mem_Server ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( RRSe - ( MUC / MLU ) ) ),MUR ) + Max( MUR,( Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,( Max( RRSe,CS ) / Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04982147616081579}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / RCSe ) ),MUR ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12115037640516406}, {"determining": "( ( ( Max( MRS,MDR ) - ( Min( Max( MRS,Max( PN,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( MRS,MDR ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( FirstVNF_RAM + ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Min( MLU ,( RMSe / RMSe ) ) / RRSe ) ,Min( ( DS + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe * CS ) ) ) ),Min( MLU ,RCSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11376181250928308}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - CRS ) ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,CRS ) ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.15537595970419915}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.8394004282655246, "obj2": 0.07762531347296887}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( MLU / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.8629550321199143, "obj2": 0.06586788130007176}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / RCSe ) ),MUR ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07762531347296887}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * DDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,CS ) + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) + ( MLU / DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07552266336047608}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MDR ) * MDR ) ) - ( FirstVNF_CPU * ( MRS + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( ( ACS + BR ) * MDR ) ) ) ) ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021811185064034882}, {"determining": "( ( ( AMS - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( MRS,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( MRS + Max( FirstVNF_RAM,MDR ) ) / ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( ( RRSe - Max( ( RCSe - MLU ),Min( DS ,MLU ) ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.018833074078532044}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS - ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( DDR + FirstVNF_Mem_Server ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( RRSe - RCSe ) * ( ( RMSe - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.8950749464668094, "obj2": 0.04982147616081579}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * Const ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_Mem_Server * MDR ) ) ) ) ) ) - ( MDR * AMS ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / Max( MUR,RMSe ) ) ),MUR ) / ( ( ( ( RCSe / MUR ) - ( MUM / CS ) ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12298384151222433}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem - AMS ),DDR ) * ( MRS + FirstVNF_Mem ) ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / MUR ) ),( RRSe - MUR ) ) + Max( MUR,( Max( Min( Min( RMSe ,RRSe ) ,MUM ),MUR ) + Max( MUR,( CS / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10207505625388054}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( MRS + Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( AMS * MDR ) ) ) ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( RRSe + MUM ) ,RMSe ) / ( RMSe / Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.7773019271948608, "obj2": 0.11047019295438112}, {"determining": "( ( ( AMS - ( Min( Max( Const,( ARS * PN ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * ( Min( PN ,BR ) * ARS ) ) ) - ( Min( MDR ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( ( MUC + ( DS / ( DS * ( Max( RMSe,RRSe ) / Min( MUM ,CS ) ) ) ) ) ,Min( ( DS + CS ) ,( MUM + CS ) ) ) ),DS )", "obj1": 0.7708779443254818, "obj2": 0.11376181250928308}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - Min( AMS ,( MRS / FirstVNF_RAM_Server ) ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + ( ARS - ACS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MRS ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( Max( RRSe,( MUC - CS ) ) + ( MLU / DS ) )", "obj1": 0.9978586723768736, "obj2": 0.0010364794448971786}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( Max( MRS,BR ) ,( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( Max( DDR,Const ) * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( CS + MUC ) + MUR ) - MUC ) / ( ( MUC * MUR ) - RMSe ) ) + DS ) + ( ( MUM + RMSe ) - RRSe ) )", "obj1": 0.9657387580299786, "obj2": 0.015064145720800172}, {"determining": "( ( Min( ( MDR - AMS ) ,( AMS * FirstVNF_CPU ) ) + ( FirstVNF_CPU / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,AMS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( FirstVNF_Mem * ( FirstVNF_RAM + MRS ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + CS ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.13809798741352258}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( Min( Min( RMSe ,RCSe ) ,MUM ) / Max( MUM,( ( CS + MUC ) + MUR ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.025270757818814573}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - CRS ) ) / Max( DDR,( FirstVNF_RAM * AMS ) ) ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MLU / RMSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.1562029036776389}, {"determining": "( ( ( AMS - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( ( RRSe - ( MUR / MLU ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.018833074078532044}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9336188436830836, "obj2": 0.030454739226681127}, {"determining": "( ( FirstVNF_RAM_Server - Min( FirstVNF_Mem_Server ,( PN * FirstVNF_RAM_Server ) ) ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,Max( DS,( Max( MUC,MUM ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06016052898707803}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09306709111442735}], "29": [{"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( MUR + Max( ( MUC + ( Max( MUM,RCSe ) / RCSe ) ),MUR ) )", "obj1": 0.6466809421841542, "obj2": 0.22748971125036443}, {"determining": "( Max( BR,( ( PN - Max( AMS,( RRS - FirstVNF_CPU_Server ) ) ) + DDR ) ) - ( Min( ( AMS - MDR ) ,( ( ARS / ( MDR / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( ( RRSe - ( DS + RMSe ) ) - ( ( ( MUC - RCSe ) / Max( MUR,CS ) ) + ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MDR ) - ( FirstVNF_CPU * ( Max( ( FirstVNF_CPU_Server - MDR ),( PN * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( ( Min( ( RRSe + Max( MUR,( CS - MLU ) ) ) ,CS ) / ( Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) / RMSe ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( MUR + Max( ( MUC - ( MUM - CS ) ),MUR ) )", "obj1": 0.6466809421841542, "obj2": 0.22748971125036443}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + PN ) ) ) - ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * ( ACS + Max( BR,DDR ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( MRS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + DDR ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe / MUR ) ),Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - ( ( RRSe - Max( Max( MLU,( RCSe * MUR ) ),( RMSe / Min( DS ,MLU ) ) ) ) / MLU ) ) ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / Max( Const,DDR ) ) ) - ( MDR * Min( Max( MRS,Max( Max( CRS,ARS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) + Max( ( MUC + ( RRSe / RCSe ) ),MUR ) )", "obj1": 0.6895074946466809, "obj2": 0.16613569454867144}, {"determining": "( Max( Const,FirstVNF_RAM ) - Max( Min( ( AMS - FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ),( PN / ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),( MRS / BR ) ) ,Max( FirstVNF_RAM_Server,( ARS * Min( ARS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),Max( ( Min( Min( MUM ,( DS - MUC ) ) ,RCSe ) * DS ),( MUC * ( MUM / Min( ( CS / MLU ) ,MUM ) ) ) ) ) ) + DS )", "obj1": 0.6873661670235546, "obj2": 0.1794365120725629}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( DDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( MRS / Const ) )", "choosing": "( MUR + Min( Max( ( ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) - ( MUC / MLU ) ),Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9057815845824411, "obj2": 0.043819069820874676}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,Min( RCSe ,MUC ) ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.734475374732334, "obj2": 0.13205055858305756}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09296681843869034}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem - AMS ),DDR ) * ( MRS + FirstVNF_Mem ) ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( ( MUC + ( DS / MUR ) ),( RRSe - MUR ) ) + Max( MUR,( Max( Min( Min( RMSe ,RRSe ) ,MUM ),MUR ) + Max( MUR,( CS / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10108770550193623}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( AMS - MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( ( MUR / MLU ) - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9464668094218416, "obj2": 0.02428523465677728}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - CRS ) ) / Max( DDR,( FirstVNF_RAM * AMS ) ) ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MLU / RMSe ) ) )", "obj1": 0.7044967880085653, "obj2": 0.15325070956213627}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( RRSe,( Max( RRSe,( ( ( RRSe - MUC ) / ( MUM + CS ) ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7473233404710921, "obj2": 0.1251464752838524}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) - ( Max( ( FirstVNF_RAM - ( ARS + ( AMS - ( Min( DDR ,DDR ) + FirstVNF_Mem ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.8907922912205567, "obj2": 0.05072770608432338}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( ( AMS - MDR ) ,Const ) )", "choosing": "( Max( ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,Min( RRSe ,( MUR * MUM ) ) ),Min( Max( RRSe,Max( RRSe,CS ) ) ,Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( Min( Min( RMSe ,RCSe ) ,MUM ) / Max( MUM,( ( CS + MUC ) + MUR ) ) ) ) )", "obj1": 0.9400428265524625, "obj2": 0.027104108716701786}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( ( ( Max( ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ),( RRSe / MUC ) ) / RMSe ) - ( MUR + RMSe ) ) + ( MLU / DS ) )", "obj1": 0.8843683083511777, "obj2": 0.05440516922303126}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * DDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server + ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * AMS ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( DS - ( DS + MLU ) ) / MLU ) + ( MLU / DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07552266336047607}, {"determining": "( Max( ( ( PN - Max( AMS,( RRS - FirstVNF_CPU_Server ) ) ) * DDR ),BR ) - ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( Min( MUM ,Min( RCSe ,MUM ) ) - ( ( ( MUM - RCSe ) / Max( MUR,CS ) ) + ( RCSe / RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18522860997058052}, {"determining": "( ( Min( ( AMS - MDR ) ,Max( FirstVNF_Mem_Server,( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Min( MRS ,FirstVNF_Mem_Server ) ) ) ) - MRS ) - ( Max( ( FirstVNF_RAM - ( ARS + ( ( RRS - BR ) - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( DS + Min( MUM ,Min( RMSe ,RRSe ) ) )", "obj1": 0.9164882226980728, "obj2": 0.03790622028812498}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( MRS / CRS ) + ( AMS - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ),DDR ) * FirstVNF_CPU ) - ( Min( ( AMS - MDR ) ,( FirstVNF_RAM * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + ( ( CS / ( CS + ( Min( RRSe ,MUC ) - ( MUM * RRSe ) ) ) ) * Max( Max( MUM,CS ),Min( ( CS - Max( CS,Max( ( RCSe * MUR ),Min( RCSe ,DS ) ) ) ) ,( DS * RMSe ) ) ) ) )", "obj1": 0.9164882226980728, "obj2": 0.03790622028812498}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,MDR ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / Min( CS ,CS ) ) * MUC ),( RRSe * RRSe ) )", "obj1": 0.7430406852248393, "obj2": 0.12895053126442152}, {"determining": "( ( ( RRS - Min( FirstVNF_CPU ,CRS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( ( ARS * FirstVNF_RAM_Server ),AMS ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( DS - DS ),Max( ( DS / RCSe ),RRSe ) ),( Min( MUM ,( RCSe * MUM ) ) - Max( ( CS * DS ),( Max( MUM,RRSe ) - MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.0857450221730328}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( Max( MRS,BR ) ,( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( Max( DDR,Const ) * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( CS + MUC ) + MUR ) - MUC ) / ( ( MUC * MUR ) - RMSe ) ) + DS ) + ( ( MUM + RMSe ) - RRSe ) )", "obj1": 0.9657387580299786, "obj2": 0.015064145720800172}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_RAM ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( ( ( RRSe - ( MUR / MLU ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ) - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Max( MUR,CS ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09653996629097993}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15844501605939487}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( Max( MRS,BR ) + ( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( ACS / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * MDR ) ) - ( FirstVNF_RAM_Server * AMS ) )", "choosing": "( ( ( Max( RMSe,Max( CS,RCSe ) ) + ( RMSe + RMSe ) ) + RCSe ) + Min( RCSe ,RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.07187407155063139}, {"determining": "( ( ( PN / MDR ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MRS / BR ),( MDR / ( BR * Max( DDR,PN ) ) ) ) ) * MDR ) ) - ( ( ( MDR * ( FirstVNF_CPU_Server - Max( CRS,ARS ) ) ) + Min( ( FirstVNF_CPU_Server - ( Const - RRS ) ) ,( ( Min( ( FirstVNF_CPU * MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) ) ) * RRS ) )", "choosing": "( MUR + Max( ( MUM + ( RMSe + ( ( MUC - ( ( MUC - MLU ) + MUM ) ) + Min( CS ,RCSe ) ) ) ),RMSe ) )", "obj1": 0.8993576017130621, "obj2": 0.04785248529254618}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ARS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.0628056803250313}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( Min( DDR ,( Min( Const ,DDR ) - MRS ) ) + ( ( Max( ACS,FirstVNF_CPU_Server ) + DDR ) - ( MRS / CRS ) ) ) * Max( CRS,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - Min( Min( Min( ( MUC * ( ( CS + DS ) * ( Max( MUR,MUM ) + ( MUR + MUR ) ) ) ) ,MUM ) ,CS ) ,RRSe ) )", "obj1": 0.9271948608137045, "obj2": 0.034395916317138564}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( Max( Const,DDR ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / ( MUC + ( RRSe / RCSe ) ) ) ),MUR ) )", "obj1": 0.6659528907922913, "obj2": 0.18532733761822837}, {"determining": "( ( Min( ( MDR - AMS ) ,( AMS * FirstVNF_CPU ) ) + ( FirstVNF_CPU / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,AMS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( FirstVNF_Mem * ( FirstVNF_RAM + MRS ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + CS ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.13809798741352258}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_RAM ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09653996629097993}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_CPU * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( PN,( MRS * MDR ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( RCSe ,Max( ( RMSe - ( Max( ( MUC * CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) ),( ( RMSe - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.8201284796573876, "obj2": 0.08665527788848264}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MDR ) * MDR ) ) - ( ( ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),Max( MRS,BR ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( BR * MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.9721627408993576, "obj2": 0.012364279958195739}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( MRS + Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( AMS * MDR ) ) ) ) ) - Max( ( FirstVNF_Mem / AMS ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( RRSe + MUM ) ,RMSe ) / ( RMSe / Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.9036402569593148, "obj2": 0.04633280112079899}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Max( ( MRS + FirstVNF_Mem ),MRS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) ) ) - Max( ( CS / ( Min( CS ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( MUM - RRSe ) ,RMSe ) )", "obj1": 0.7794432548179872, "obj2": 0.10851279446160672}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ),DS )", "obj1": 0.715203426124197, "obj2": 0.14280932638495986}, {"determining": "( ( MRS * MDR ) - ( FirstVNF_CPU * ( Max( ( FirstVNF_CPU_Server - MDR ),( PN * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( ( Min( ( RRSe + Max( MUR,( CS - MLU ) ) ) ,CS ) / ( Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) / RMSe ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.03190186127829897}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) - ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MDR ) * MDR ) ) - ( ( ( MDR * ( CRS + ( Max( PN,RRS ) * FirstVNF_RAM ) ) ) + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( BR * MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( Max( ( MLU / ( ( ( ( MLU * MUR ) + RCSe ) - ( MUM + RMSe ) ) + DS ) ),( MLU + MUR ) ) * RMSe ) + ( Max( CS,( ( ( MUM - MLU ) * ( MUR * RCSe ) ) + Max( ( MLU + ( MUM / CS ) ),( ( ( MUR - MLU ) * ( RRSe + RCSe ) ) + CS ) ) ) ) / MUR ) )", "obj1": 0.9721627408993576, "obj2": 0.012364279958195739}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( FirstVNF_RAM_Server * ( Max( MRS,BR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( RRSe,( Max( RRSe,( Max( ( RCSe + CS ),MUR ) / ( Max( ( ( MUC - CS ) + RMSe ),CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.721627408993576, "obj2": 0.14226176940315516}, {"determining": "( ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( Min( ( Const - ARS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.6638115631691649, "obj2": 0.18868601211864267}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8779443254817987, "obj2": 0.05878709299695213}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( Min( Max( MRS,Max( ARS,CRS ) ) ,Max( ( ( FirstVNF_CPU_Server - BR ) - DDR ),FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / ( PN / PN ) ) / ( FirstVNF_RAM - ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS / ( Min( MUM ,( RCSe * MUR ) ) - Max( ( CS / ( Min( DS ,MLU ) - ( MUR - CS ) ) ),CS ) ) ),Min( ( RCSe - ( ( ( RRSe / RCSe ) - Max( RMSe,MLU ) ) * Min( ( CS / MLU ) ,( CS * MUR ) ) ) ) ,MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.18333565278158867}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( FirstVNF_RAM,DDR ) * Max( ( FirstVNF_RAM * AMS ),ARS ) ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - ( ( RRSe - MUC ) / ( MUM + CS ) ) ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RRSe ) - RMSe ) ) + DS ) )", "obj1": 0.9571734475374732, "obj2": 0.019410608851862906}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * CRS ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) ) ) - Max( ( CS / ( Min( ( RCSe - RCSe ) ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( MUM - RRSe ) ,RMSe ) )", "obj1": 0.9593147751605996, "obj2": 0.01787276602828068}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem - AMS ),DDR ) * ( MRS + FirstVNF_Mem ) ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / ( MUR / RMSe ) ) ),MUR ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10309230429187585}, {"determining": "( ( FirstVNF_Mem * Max( ( Min( MRS ,AMS ) + CRS ),MDR ) ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( FirstVNF_CPU * Max( ( Max( ( FirstVNF_RAM * ARS ),DDR ) * FirstVNF_CPU ),DDR ) ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( Min( ( Max( MUM,MLU ) - MUM ) ,CS ),( ( RMSe - DS ) / ( MLU - ( DS - ( DS / MUM ) ) ) ) ) ) + DS )", "obj1": 0.7858672376873662, "obj2": 0.10550501794762263}, {"determining": "( ( CRS + PN ) - ( DDR * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( MLU / MUM ) ) / RCSe ) ),MUC ) + Max( Max( MLU,RRSe ),MUR ) )", "obj1": 0.7558886509635975, "obj2": 0.12091114971100819}, {"determining": "( ( ( Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( Min( ( Max( MUM,MLU ) - MUM ) ,CS ),( ( RMSe - DS ) / ( MLU - ( DS - ( DS / MUM ) ) ) ) ) ) + DS )", "obj1": 0.7665952890792291, "obj2": 0.11501722325666996}, {"determining": "( ( ( AMS - MDR ) - ( MDR * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUC / ( ( MUM - ( ( RRSe - MUC ) / ( MUM + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( ( MUR * RRSe ),Min( ( MUC + ( DS / RCSe ) ) ,MUR ) ) )", "obj1": 0.9379014989293362, "obj2": 0.029698514597504885}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( ( FirstVNF_RAM * ARS ),FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ARS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( Max( ( MLU + MUC ),Min( RMSe ,RMSe ) ),MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.860813704496788, "obj2": 0.06654160800032245}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * ACS ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( ( ( RRSe - ( MUR / MLU ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ) - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Max( MUR,CS ) * Max( MUM,MLU ) ) ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11218062407957202}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) * ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( ( MUR * RRSe ) + Max( MUM,DS ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) / Max( RRSe,( MUC * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09038015618648229}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * CRS ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) ) ) - Max( ( CS / ( Min( CS ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( MUM - RRSe ) ,RMSe ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( ( AMS - MDR ) - ( Max( ( Max( DDR,( FirstVNF_RAM * AMS ) ) * MRS ),DDR ) * MDR ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( ( ARS * FirstVNF_RAM_Server ),AMS ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( ( RRSe * Min( MUC ,MUM ) ) / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / ( MLU / RMSe ) ) ),MLU ) )", "obj1": 0.9914346895074947, "obj2": 0.0037448270766406817}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM_Server ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( FirstVNF_RAM_Server * Max( Max( MRS,BR ),( ( AMS - MDR ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( RRSe,( Max( RRSe,( ( ( ( MUR + ( MUC * RCSe ) ) - MUC ) / ( MUM + CS ) ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) / RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14675404773164435}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * CRS ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( Min( ( RRSe + MUM ) ,RMSe ) / ( RMSe / Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.9807280513918629, "obj2": 0.008447070276000895}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( AMS - MDR ),( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / FirstVNF_RAM ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( RRSe / RCSe ) ,MUM ) ) ,( RRSe - RMSe ) ),( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11867153609993629}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),Max( ( MUC + ( CS / Min( ( MUC + MUM ) ,( RMSe / RCSe ) ) ) ),( Min( MLU ,Min( Min( Min( RRSe ,RCSe ) ,RRSe ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.08289157085448914}, {"determining": "( ( Min( Min( ACS ,FirstVNF_CPU ) ,( AMS * FirstVNF_CPU ) ) + ( FirstVNF_CPU * ( MRS + FirstVNF_RAM ) ) ) - Max( MDR,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) * ( RRSe - RMSe ) ),DS )", "obj1": 0.7323340471092077, "obj2": 0.1370261510064774}, {"determining": "( ( ( AMS - ( Max( PN,( MRS * FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,( FirstVNF_RAM + Const ) ) ,DDR ) * ( ( Min( MDR ,ACS ) + DDR ) - ( Max( ( PN / Min( MDR ,BR ) ),Min( ACS ,( FirstVNF_Mem_Server * AMS ) ) ) * FirstVNF_Mem_Server ) ) ) ) - ( ARS * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( Min( ( ( DS * RMSe ) + RRSe ) ,RRSe ) + ( ( RMSe * MUR ) * ( Min( MLU ,RMSe ) / ( MLU / MUM ) ) ) ) - RMSe ),( ( RMSe - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.7237687366167024, "obj2": 0.14035145776583047}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,MDR ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / Min( CS ,CS ) ) * MUC ),( RRSe * RRSe ) )", "obj1": 0.7430406852248393, "obj2": 0.12895053126442152}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( DDR ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( ( ARS - ( MDR - MDR ) ) ,Const ) )", "choosing": "Max( ( Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * DS ) ) ) * Max( MUM,Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - Max( ( CS / ( Min( CS ,MLU ) - ( MUR - MUM ) ) ),CS ) ) ),( Max( RRSe,( MUM * RCSe ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.6809421841541756, "obj2": 0.18165834092558267}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( FirstVNF_CPU_Server / AMS ),( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / PN ) / Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) - ( RRS * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / ( MUR / RMSe ) ) ),( ( RRSe / MUR ) - Min( DS ,( MLU * DS ) ) ) ) / ( ( ( MUR * Min( MUR ,CS ) ) + ( RMSe * ( MLU / MUM ) ) ) * RMSe ) ) ) / ( ( CS + MUR ) - MUC ) ) )", "obj1": 0.8179871520342612, "obj2": 0.08868878508174295}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ) + DDR ) * Min( ( FirstVNF_RAM * AMS ) ,( PN / FirstVNF_Mem_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + Min( CS ,CS ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / ( RMSe - MUM ) ) ),MLU ) )", "obj1": 0.8479657387580299, "obj2": 0.07275286350932976}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( ( RRSe + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( ( Min( ( RRSe + ( MLU / RRSe ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ),MLU ) + DS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06920675624342841}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( BR / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / Min( AMS ,( PN * MDR ) ) ) ) )", "choosing": "( ( ( Max( Max( ( Max( MUR,CS ) / Min( MUR ,RMSe ) ),Min( ( MUR - ( MUC / MUR ) ) ,( Max( RRSe,CS ) - DS ) ) ),( RRSe / MUC ) ) / RMSe ) - ( MUR + RMSe ) ) + ( MLU / DS ) )", "obj1": 0.8565310492505354, "obj2": 0.06920675624342841}, {"determining": "( ( ( AMS - Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MUM ) - Min( Min( Min( ( DS / RCSe ) ,( MUC + ( CS / Min( ( MUC + MUM ) ,( RMSe / RCSe ) ) ) ) ) ,CS ) ,MUM ) )", "obj1": 0.9229122055674518, "obj2": 0.03529814533211849}, {"determining": "( ( ( AMS - ( ( DDR - FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) - ( Min( Max( ( ( FirstVNF_RAM_Server * BR ) - PN ),DDR ) ,Max( FirstVNF_RAM_Server,( ( PN * FirstVNF_Mem ) * ( PN + CRS ) ) ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,DS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( ( Max( MUR,( MUM + ( DS - RCSe ) ) ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * Min( RRSe ,RCSe ) ) ),RRSe ) / Min( ( DS + RMSe ) ,MUC ) ) )", "obj1": 0.8329764453961456, "obj2": 0.08200707589728705}, {"determining": "( ( ( AMS - Min( ( ( ARS / ACS ) - ( FirstVNF_Mem_Server * Min( ACS ,FirstVNF_CPU ) ) ) ,( AMS * FirstVNF_CPU ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / PN ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,RCSe ),Max( ( ( ( ( ( RRSe - MUM ) / RMSe ) - MUR ) / ( DS * DS ) ) + ( ( MLU / MUM ) * Min( MUM ,( RRSe + CS ) ) ) ),( Min( MLU ,Min( Min( Min( RRSe ,RCSe ) ,RRSe ) ,RRSe ) ) - Max( CS,DS ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.9229122055674518, "obj2": 0.03529814533211849}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( MDR * FirstVNF_CPU ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( CRS * ( ( PN / ( MRS / FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( RRSe + RRSe ) + Max( ( CS + ( RRSe / Max( ( ( MUM - Max( MUC,RCSe ) ) / Min( ( MUC + MUC ) ,RCSe ) ),Min( RMSe ,MLU ) ) ) ),MUR ) )", "obj1": 0.69593147751606, "obj2": 0.1562767940881343}, {"determining": "( ( Min( Min( AMS ,MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( Const * FirstVNF_Mem ) - ( ( AMS * ARS ) + MDR ) ),BR ) ) - ( CRS * Min( ( PN + ACS ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( MLU,( ( ( RRSe + ( MLU / RRSe ) ) + Max( ( MUR / MLU ),( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - MUC ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15844501605939487}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_Mem_Server * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( ( MUC + ( DS / ( DS * ( Max( RMSe,RRSe ) / MLU ) ) ) ) ,Min( ( DS + CS ) ,( RRSe + CS ) ) ) ),DS )", "obj1": 0.7516059957173448, "obj2": 0.12298384151222433}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( Min( ( FirstVNF_RAM_Server * RRS ) ,BR ),BR ),Min( ( FirstVNF_CPU_Server / Max( DDR,Const ) ) ,AMS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( ( FirstVNF_RAM * ( AMS * MDR ) ) ,( MDR * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( ( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) - MUC ) / MUC ) ) / ( ( ( DS / RCSe ) / Min( MUC ,RMSe ) ) / MUM ) ) - Max( Min( ( MUC + ( DS / RCSe ) ) ,( ( ( RCSe + MUC ) - MUR ) - ( MUC - DS ) ) ),( MUR * RRSe ) ) )", "obj1": 0.867237687366167, "obj2": 0.06494270334209021}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Min( ( MDR * MRS ) ,Min( ( ( RRS - ACS ) + ( MDR + BR ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - ( ( ( RRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( MDR + FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( CS / CS ) + ( ( Max( ( CS + MUM ),MLU ) + ( DS * Min( CS ,( RMSe * RMSe ) ) ) ) * Max( MUR,RRSe ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07762531347296887}, {"determining": "( ( ( ( Min( Max( MRS,Max( PN,( MDR * FirstVNF_CPU ) ) ) ,Max( FirstVNF_RAM_Server,RRS ) ) * MDR ) - ( BR * Const ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( MUR - RCSe ) / Max( ( ( MUR - Min( ( RMSe / RMSe ) ,( MUC - CS ) ) ) - RMSe ),CS ) ) ,( Max( ( MUC + ( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( ( DS / RCSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11712637634761133}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / RMSe ) - MUR ) + ( MLU / DS ) )", "obj1": 0.8394004282655246, "obj2": 0.07762531347296887}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * Const ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_Mem_Server * MDR ) ) ) ) ) ) - ( MDR * AMS ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / Max( MUR,RMSe ) ) ),MUR ) / ( ( ( ( RCSe / MUR ) - ( MUM / CS ) ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12298384151222433}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + FirstVNF_Mem_Server ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( RRSe - ( MUC / MLU ) ) ),MUR ) + Max( MUR,( Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,( Max( RRSe,CS ) / Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04982147616081579}, {"determining": "( Max( MRS,Max( MDR,FirstVNF_RAM_Server ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.11047019295438112}, {"determining": "( ( ( AMS - ( ( Max( DDR,AMS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * DDR ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( ( RRSe - Max( ( RCSe - MLU ),Min( DS ,MLU ) ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( ( ( MUC + ( RRSe / MUM ) ) / RCSe ) * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( AMS - MDR ) - ( MDR * FirstVNF_RAM ) ) - ( ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUC / ( ( MUM - ( ( RRSe - MUC ) / Max( MUM,RCSe ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( ( MUR * RRSe ),Min( ( MUC + ( DS / RCSe ) ) ,MUR ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( ( Max( MRS,MDR ) - ( Min( Max( MRS,Max( PN,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( MRS,MDR ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( FirstVNF_RAM + ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Min( MLU ,( RMSe / RMSe ) ) / RRSe ) ,Min( ( DS + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe * CS ) ) ) ),Min( MLU ,RCSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11376181250928308}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.9336188436830836, "obj2": 0.030454739226681127}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( ( MDR / FirstVNF_Mem_Server ) / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( MLU / MUM ) ) / RCSe ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( ( MUC + ( MLU / MUM ) ),MLU ) - DS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.8758029978586723, "obj2": 0.05976694289337521}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,CS ) + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) + ( MLU / DS ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( FirstVNF_RAM_Server - Min( FirstVNF_Mem_Server ,( PN * FirstVNF_RAM_Server ) ) ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,Max( DS,( Max( MUC,MUM ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06016052898707803}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,MDR ) * MDR ) ) - ( FirstVNF_CPU * ( MRS + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( ( ACS + BR ) * MDR ) ) ) ) ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021811185064034882}, {"determining": "( ( Min( ( AMS - MDR ) ,( Max( Max( ARS,( FirstVNF_CPU_Server - BR ) ),MDR ) * FirstVNF_CPU ) ) + MRS ) - ( ( Max( FirstVNF_Mem_Server,( MRS + ( Max( Const,MRS ) * MRS ) ) ) * FirstVNF_CPU ) * DDR ) )", "choosing": "Max( MUR,( Min( MUC ,( Max( MUC,( MLU / RRSe ) ) + Max( Min( ( Max( DS,CS ) / CS ) ,( RMSe * RCSe ) ),MLU ) ) ) / Max( MLU,( MUM * MUM ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.10649094951943153}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - CRS ) ) / Max( DDR,( FirstVNF_RAM * AMS ) ) ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MLU / RMSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.1562029036776389}, {"determining": "( ( AMS - MDR ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( FirstVNF_CPU / ( Const + FirstVNF_RAM ) ) ) ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( Min( Max( ( MLU - ( MUM * RRSe ) ),( Min( ( RMSe + MUM ) ,MLU ) + CS ) ) ,CS ),RRSe ) ) + DS )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS + ( Min( ( CRS / BR ) ,Const ) / ( AMS / PN ) ) ) - ( ( ( FirstVNF_RAM * ARS ) / ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) * CRS ) ) ) ) - ( MDR - FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( Min( Min( RCSe ,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( ( MUM + MUR ),( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MLU - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,RMSe ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}], "30": [{"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( MUR + Max( ( MUC + ( Max( MUM,RCSe ) / RCSe ) ),MUR ) )", "obj1": 0.6466809421841542, "obj2": 0.22748971125036443}, {"determining": "( ( Min( ( FirstVNF_CPU_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * Max( MRS,FirstVNF_RAM ) ) ) ) ,( AMS - MDR ) ) + MRS ) - ( ( ( CRS + FirstVNF_Mem ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( MUM / ( MUC + ( RRSe / MUM ) ) ) ),MUR ) + Max( Max( MUM,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),( RMSe - ( MUM / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( PN - Max( AMS,( RRS - FirstVNF_CPU_Server ) ) ) + DDR ) ) - ( Min( ( AMS - MDR ) ,( ( ARS / ( MDR / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( ( RRSe - ( DS + RMSe ) ) - ( ( ( MUC - RCSe ) / Max( MUR,CS ) ) + ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( MUR + Max( ( MUC + ( Max( MUM,RCSe ) / RCSe ) ),MUR ) )", "obj1": 0.6466809421841542, "obj2": 0.22748971125036443}, {"determining": "( ( ( AMS - ( Min( ( MRS + Max( ( AMS * FirstVNF_CPU ),ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,( MRS + Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) )", "choosing": "( MUR + Max( Max( ( DS / MUR ),( Min( ( DS / RCSe ) ,( RCSe / MLU ) ) / MUR ) ),MUR ) )", "obj1": 0.6573875802997858, "obj2": 0.2063699340242944}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( ( Const - RRS ) ,Max( DDR,Const ) ) * MDR ) ) ) - ( MDR * Min( ( MRS * Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( Max( RRSe,MUR ) / Min( CS ,( CS / Max( MUM,MUC ) ) ) ) - Min( ( RMSe + MUC ) ,RCSe ) ) * DS ),Max( MUM,( CS / DS ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16360833928874724}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( DDR ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( ( ARS - ( MDR - MDR ) ) ,Const ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUM + ( DS / RCSe ) ),MUR ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.6873661670235546, "obj2": 0.17714924365169168}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + PN ) ) ) - ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * ( ACS + Max( BR,DDR ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( MRS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + DDR ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe / MUR ) ),Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - ( ( RRSe - Max( Max( MLU,( RCSe * MUR ) ),( RMSe / Min( DS ,MLU ) ) ) ) / MLU ) ) ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( Max( Const,DDR ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / ( MUC + ( RRSe / RCSe ) ) ) ),MUR ) )", "obj1": 0.6659528907922913, "obj2": 0.18532733761822837}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( AMS - MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( AMS * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / ( MLU / RMSe ) ) ),MLU ) )", "obj1": 0.9721627408993576, "obj2": 0.012213106706200938}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) - ( Max( ( FirstVNF_RAM - ( ARS + ( AMS - ( Min( DDR ,DDR ) + AMS ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( MUM + CS ) + Max( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.8993576017130621, "obj2": 0.04600752084174604}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( Max( Const,DDR ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17885027374018111}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MDR - MDR ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM + Min( DDR ,FirstVNF_Mem ) ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( ( Max( RRSe,RMSe ) * ( ( MUR - MUR ) * RRSe ) ) / Max( ( Max( RRSe,CS ) + Min( RMSe ,MUC ) ),MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.1792404907396716}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09296681843869034}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,Min( RCSe ,MUC ) ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.734475374732334, "obj2": 0.13205055858305756}, {"determining": "( ( ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( AMS - ( ( ( MDR / ( ( ARS / FirstVNF_Mem ) * ( Const + Const ) ) ) - FirstVNF_Mem ) - MRS ) ) ) - ( MDR - FirstVNF_CPU ) )", "choosing": "Max( ( MUR / CS ),CS )", "obj1": 0.7130620985010707, "obj2": 0.14479386084656432}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_RAM ) ) ) ) ) ) ) - ( MDR * ( MRS + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( ( ACS + BR ) * MDR ) ) ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10094685625773073}, {"determining": "( ( ( AMS - ( MDR * Min( Max( MRS,( FirstVNF_RAM + ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) - ( ( AMS * FirstVNF_CPU ) * Min( ( BR * ( CRS / BR ) ) ,FirstVNF_Mem ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( ( DS / RCSe ) + MUC ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),DS ) / ( ( ( Max( CS,DS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( Max( ( MLU + MUC ),Min( RMSe ,RMSe ) ),MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09747617306014011}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) * ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( ( MUR * RRSe ) + Max( MUM,DS ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) / Max( RRSe,( MUC * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09038015618648229}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( AMS - MDR ),( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / FirstVNF_RAM ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( RRSe / RCSe ) ,MUM ) ) ,( RRSe - RMSe ) ),( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11867153609993629}, {"determining": "( ( ( RRS - Min( FirstVNF_CPU ,CRS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( ( ARS * FirstVNF_RAM_Server ),AMS ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( DS - DS ),Max( ( DS / RCSe ),RRSe ) ),( Min( MUM ,( RCSe * MUM ) ) - Max( ( CS * DS ),( Max( MUM,RRSe ) - MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.0857450221730328}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ) + DDR ) * Min( ( FirstVNF_RAM * AMS ) ,( PN / FirstVNF_Mem_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + Min( CS ,CS ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / ( RMSe - MUM ) ) ),MLU ) )", "obj1": 0.8479657387580299, "obj2": 0.07275286350932976}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( Max( MRS,BR ) + ( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( ACS / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * MDR ) ) - ( FirstVNF_RAM_Server * AMS ) )", "choosing": "( ( ( Max( RMSe,Max( CS,RCSe ) ) + ( RMSe + RMSe ) ) + RCSe ) + Min( RCSe ,RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.07187407155063139}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( Min( DDR ,( Min( Const ,DDR ) - MRS ) ) + ( ( Max( ACS,FirstVNF_CPU_Server ) + DDR ) - ( MRS / CRS ) ) ) * Max( CRS,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - Min( Min( Min( ( MUC * ( ( CS + DS ) * ( Max( MUR,MUM ) + ( MUR + MUR ) ) ) ) ,MUM ) ,CS ) ,RRSe ) )", "obj1": 0.9271948608137045, "obj2": 0.034395916317138564}, {"determining": "( ( Min( Min( ACS ,FirstVNF_CPU ) ,( AMS * FirstVNF_CPU ) ) + ( FirstVNF_CPU * ( MRS + FirstVNF_RAM ) ) ) - Max( MDR,( FirstVNF_RAM_Server / BR ) ) )", "choosing": "Max( ( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) * ( RRSe - RMSe ) ),DS )", "obj1": 0.7323340471092077, "obj2": 0.1370261510064774}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,MDR ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) ) ) - Max( ( CS / ( Min( CS ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( MUM - RRSe ) ,RMSe ) )", "obj1": 0.7387580299785867, "obj2": 0.13069483018352174}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( ( AMS - MDR ) ,Const ) )", "choosing": "( Max( ( MUC + Max( ( Max( DS,RMSe ) * RMSe ),MUM ) ),MUR ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,Min( RRSe ,( MUR * MUM ) ) ),Min( Max( RRSe,Max( RRSe,CS ) ) ,Min( MUC ,RMSe ) ) ),MLU ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - MDR ) - ( MRS / Const ) )", "choosing": "( MUR + Min( Max( ( ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) - ( MUC / MLU ) ),( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * RMSe ) ) ,MUM ) )", "obj1": 0.9143468950749465, "obj2": 0.042268492341919345}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) - ( Max( ( FirstVNF_RAM - FirstVNF_CPU_Server ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( RMSe / MUR ) ),MUR ) + Max( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.860813704496788, "obj2": 0.06621348372604592}, {"determining": "( ( MRS * MDR ) - ( FirstVNF_CPU * ( Max( ( FirstVNF_CPU_Server - MDR ),( PN * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( ( Min( ( RRSe + Max( MUR,( CS - MLU ) ) ) ,CS ) / ( Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) / RMSe ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.03190186127829897}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * ACS ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( ( ( RRSe - ( MUR / MLU ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ) - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Max( MUR,CS ) * Max( MUM,MLU ) ) ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11218062407957202}, {"determining": "( ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( Min( ( Const - ARS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.6638115631691649, "obj2": 0.18868601211864267}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,MDR ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / ( FirstVNF_Mem * CRS ) ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR - MUM ) / Min( CS ,CS ) ) * MUC ),( RRSe * RRSe ) )", "obj1": 0.7430406852248393, "obj2": 0.128780648035186}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( MRS + Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( AMS * MDR ) ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "Max( ( Min( ( RRSe + MUM ) ,RMSe ) / ( RMSe / Min( ( ( CS / Max( MUM,Min( MLU ,RCSe ) ) ) + ( MUC + RRSe ) ) ,RCSe ) ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.053704517866251515}, {"determining": "( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) - ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( Min( ( Max( MUM,MLU ) - MUM ) ,CS ),( MLU / ( MLU - ( DS - ( DS / MUM ) ) ) ) ) ) + DS )", "obj1": 0.7773019271948608, "obj2": 0.10991720412915235}, {"determining": "( ( ( ( Min( Max( MRS,Max( PN,( MDR * FirstVNF_CPU ) ) ) ,Max( FirstVNF_RAM_Server,RRS ) ) * MDR ) - ( BR * Const ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( MUR - RCSe ) / Max( ( ( MUR - Min( ( RMSe / RMSe ) ,( MUC - CS ) ) ) - RMSe ),CS ) ) ,( Max( ( MUC + ( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( ( DS / RCSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11712637634761133}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( CRS,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_CPU * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( ( MRS + AMS ),( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( ( FirstVNF_CPU / BR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( RRSe - MLU ) / RMSe ) - RMSe ),( ( CS - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.8779443254817987, "obj2": 0.057966469452620406}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( FirstVNF_Mem - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_RAM ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( ( ( RRSe - ( MUR / MLU ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ) - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Max( MUR,CS ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09618336574747412}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Max( ( MRS + FirstVNF_Mem ),MRS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) ) ) - Max( ( CS / ( Min( CS ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( MUM - RRSe ) ,RMSe ) )", "obj1": 0.7794432548179872, "obj2": 0.10851279446160672}, {"determining": "( ( CRS + PN ) - ( DDR * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( MLU / MUM ) ) / RCSe ) ),MUC ) + Max( Max( MLU,RRSe ),MUR ) )", "obj1": 0.7558886509635975, "obj2": 0.12091114971100819}, {"determining": "( ( FirstVNF_RAM_Server - Min( FirstVNF_Mem_Server ,( PN * FirstVNF_RAM_Server ) ) ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,Max( DS,( Max( MUC,MUM ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06016052898707803}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),Max( ( MUC + ( CS / Min( ( MUC + MUM ) ,( RMSe / RCSe ) ) ) ),( Min( MLU ,Min( Min( Min( RRSe ,RCSe ) ,RRSe ) ,MUM ) ) - ( RCSe - RRSe ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.043789351922334}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - CRS ) ) / Max( DDR,( FirstVNF_RAM * AMS ) ) ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MLU / RMSe ) ) )", "obj1": 0.7002141327623126, "obj2": 0.15529300632969215}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( MDR * FirstVNF_CPU ),ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( MUC + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.7066381156316917, "obj2": 0.15265589242980762}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( Max( MRS,BR ) ,( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( Max( DDR,Const ) * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( CS + MUC ) + MUR ) - MUC ) / ( ( MUC * MUR ) - RMSe ) ) + DS ) + ( ( MUM + RMSe ) - RRSe ) )", "obj1": 0.9657387580299786, "obj2": 0.015064145720800172}, {"determining": "( ( ( AMS - ( ( Max( DDR,AMS ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( FirstVNF_CPU + MRS ) ) ) - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( RRSe - ( MUR / MLU ) ) ),( Min( Max( ( ( RRSe - Max( ( RRSe - MLU ),Min( DS ,MLU ) ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ),CS ) ,RMSe ) / Max( RRSe,( ( Min( MUC ,( RRSe / MUM ) ) / RCSe ) * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.9421841541755889, "obj2": 0.02564355733199228}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( ( ( CS + MUC ) + MUR ) - MUC ) / ( ( Max( Max( RMSe,( DS / RCSe ) ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9657387580299786, "obj2": 0.015064145720800172}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( Min( Min( RMSe ,RCSe ) ,MUM ) / Max( MUM,( ( CS + MUC ) + MUR ) ) ) ) )", "obj1": 0.9400428265524625, "obj2": 0.027104108716701786}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) - ( Max( ( FirstVNF_RAM - ( ARS + ( AMS - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( CS / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.9186295503211992, "obj2": 0.03697001351896481}, {"determining": "( ( ( AMS - ( Max( PN,( MRS * FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,( FirstVNF_RAM + Const ) ) ,DDR ) * ( ( Min( MDR ,ACS ) + DDR ) - ( Max( ( PN / Min( MDR ,BR ) ),Min( ACS ,( FirstVNF_Mem_Server * AMS ) ) ) * FirstVNF_Mem_Server ) ) ) ) - ( ARS * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( Min( ( ( DS * RMSe ) + RRSe ) ,RRSe ) + ( ( RMSe * MUR ) * ( Min( MLU ,RMSe ) / ( MLU / MUM ) ) ) ) - RMSe ),( ( RMSe - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.7237687366167024, "obj2": 0.14035145776583047}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + FirstVNF_Mem_Server ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( RRSe - ( MUC / MLU ) ) ),MUR ) + Max( MUR,( Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,( Max( RRSe,CS ) / Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04982147616081579}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - MUC ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15844501605939487}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,MDR ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( AMS * Max( Max( FirstVNF_RAM,BR ),( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Const ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / Min( CS ,CS ) ) * Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) ),( RRSe * RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.12698746256972596}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,AMS ) ) ,Max( ( AMS * Max( Max( MRS,BR ),( FirstVNF_Mem * ( ARS + PN ) ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - MUC ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.728051391862955, "obj2": 0.13885988320211587}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( ( MUR + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.9336188436830836, "obj2": 0.030454739226681127}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( DDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( MRS / Const ) )", "choosing": "( MUR + Min( Max( ( ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) - ( MUC / MLU ) ),Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9057815845824411, "obj2": 0.043819069820874676}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,ACS ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_CPU * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,( RMSe + Min( ( Min( RMSe ,Min( Min( RCSe ,RMSe ) ,( MUC + MLU ) ) ) - ( ( RRSe + ( MUM - RRSe ) ) + ( Max( MUC,MUR ) / ( MLU * MLU ) ) ) ) ,CS ) ) ) + DS )", "obj1": 0.8201284796573876, "obj2": 0.08665527788848264}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( ( RRSe + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( ( Min( ( RRSe + ( MLU / RRSe ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ),MLU ) + DS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06920675624342841}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) - ( Max( ( FirstVNF_RAM - ( ARS + ( AMS - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.9164882226980728, "obj2": 0.03790622028812498}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) - ( Max( ( FirstVNF_RAM - ( ARS + ( AMS - ( Min( DDR ,DDR ) + FirstVNF_Mem ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05072770608432338}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ),DS )", "obj1": 0.715203426124197, "obj2": 0.14280932638495986}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * CRS ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.01787276602828068}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.721627408993576, "obj2": 0.14129653626986602}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( ( AMS - ( Min( ( MRS - Max( FirstVNF_Mem_Server,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( MUC / ( ( MUC - MUC ) + ( ( MUM - MUM ) / Min( ( MUC + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.7173447537473233, "obj2": 0.14187311961579968}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),Max( ( MUC + ( CS / Min( ( MUC + MUM ) ,( RMSe / RCSe ) ) ) ),( Min( MLU ,Min( Min( Min( RRSe ,RCSe ) ,RRSe ) ,RRSe ) ) - ( RCSe - RRSe ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.08289157085448914}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * DDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server + ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * AMS ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( DS - ( DS + MLU ) ) / MLU ) + ( MLU / DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07552266336047607}, {"determining": "( ( ( Max( MRS,MDR ) - ( Min( Max( MRS,Max( PN,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( MRS,MDR ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( FirstVNF_RAM + ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Min( MLU ,( RMSe / RMSe ) ) / RRSe ) ,Min( ( DS + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe * CS ) ) ) ),Min( MLU ,RCSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11376181250928308}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( ( RRSe + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( ( Min( ( RRSe + ( MLU / RRSe ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ),MLU ) + DS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06920675624342841}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / ( BR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( Min( Min( MLU ,RCSe ) ,MUM ) + ( DS / ( MUR / RMSe ) ) ),( ( RRSe / MUR ) - Min( DS ,( MLU * DS ) ) ) ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.8650963597430407, "obj2": 0.06620465697325817}, {"determining": "( ( ( AMS - MDR ) - ( MDR * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUC / ( ( MUM - ( ( RRSe - MUC ) / ( MUM + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( ( MUR * RRSe ),Min( ( MUC + ( DS / RCSe ) ) ,MUR ) ) )", "obj1": 0.9379014989293362, "obj2": 0.029698514597504885}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( AMS - MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( ( MUR / MLU ) - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9464668094218416, "obj2": 0.02428523465677728}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( ( ( Max( ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ),( RRSe / MUC ) ) / RMSe ) - ( MUR + RMSe ) ) + ( MLU / DS ) )", "obj1": 0.8843683083511777, "obj2": 0.05440516922303126}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem - AMS ),DDR ) * ( MRS + AMS ) ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "( Max( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ),( RRSe - MUR ) ) + Max( MUR,( Max( Min( Min( RMSe ,RRSe ) ,MUM ),MUR ) + Max( MUR,( CS / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10425854157185589}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_Mem * Max( ( Min( MRS ,AMS ) + CRS ),MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( ( ( CS + MUC ) + MUR ) - MUC ) / ( ( Max( Max( RMSe,( DS / RCSe ) ),Max( ( MLU / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9785867237687366, "obj2": 0.009404486398720428}, {"determining": "( ( ( AMS - ( ( DDR - FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) - ( Min( Max( ( ( FirstVNF_RAM_Server * BR ) - PN ),DDR ) ,Max( FirstVNF_RAM_Server,( ( PN * FirstVNF_Mem ) * ( PN + CRS ) ) ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,DS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( ( Max( MUR,( MUM + ( DS - RCSe ) ) ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * Min( RRSe ,RCSe ) ) ),RRSe ) / Min( ( DS + RMSe ) ,MUC ) ) )", "obj1": 0.8329764453961456, "obj2": 0.08200707589728705}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem - AMS ),DDR ) * ( MRS + FirstVNF_Mem ) ),DDR ) * FirstVNF_CPU ),( MRS / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( CS + ( DS / MUR ) ),( RRSe - MUR ) ) + Max( MUR,( Max( Min( Min( RMSe ,RRSe ) ,MUM ),MUR ) + Max( MUR,( CS / Min( MUM ,MUC ) ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10309230429187584}, {"determining": "( ( FirstVNF_Mem * Max( ( Min( MRS ,AMS ) + CRS ),MDR ) ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( FirstVNF_CPU * Max( ( Max( ( FirstVNF_RAM * ARS ),DDR ) * FirstVNF_CPU ),DDR ) ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( Min( ( Max( MUM,MLU ) - MUM ) ,CS ),( ( RMSe - DS ) / ( MLU - ( DS - ( DS / MUM ) ) ) ) ) ) + DS )", "obj1": 0.7858672376873662, "obj2": 0.10550501794762263}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( ( MDR / FirstVNF_Mem_Server ) / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( Min( ( Max( MUM,MLU ) - MUM ) ,CS ),( ( RMSe - DS ) / ( MLU - ( DS - ( DS / MUM ) ) ) ) ) ) + DS )", "obj1": 0.8758029978586723, "obj2": 0.059766942893375204}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15844501605939487}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,( FirstVNF_CPU - Const ) ) ) / ( FirstVNF_RAM * ( FirstVNF_Mem_Server * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( ( MUC + ( DS / ( DS * ( Max( RMSe,RRSe ) / MLU ) ) ) ) ,Min( ( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ,( RRSe + CS ) ) ) ),DS )", "obj1": 0.7494646680942184, "obj2": 0.12503736293176426}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_Mem - AMS ),DDR ) * ( MRS + Max( AMS,FirstVNF_RAM ) ) ),DDR ) * FirstVNF_CPU ),( MRS / ACS ) ) ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / ( MUR / RMSe ) ) ),( RCSe * MLU ) ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10202391227109642}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ARS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.0628056803250313}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,CS ) + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ) + ( MLU / DS ) )", "obj1": 0.8394004282655246, "obj2": 0.07762531347296887}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( Min( ( MDR * MRS ) ,Min( ( ( RRS - ACS ) + ( MDR + BR ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - ( ( ( RRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( MDR + FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( CS / CS ) + ( ( Max( ( CS + MUM ),MLU ) + ( DS * Min( CS ,( RMSe * RMSe ) ) ) ) * Max( MUR,RRSe ) ) )", "obj1": 0.8394004282655246, "obj2": 0.07762531347296887}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * DDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( MUC + ( Max( MUM,RCSe ) / RCSe ) ),MUR ) )", "obj1": 0.8436830835117773, "obj2": 0.07552266336047607}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_Mem_Server * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Min( MLU ,( RMSe / RMSe ) ) / RRSe ) ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe * CS ) ) ) ),DS )", "obj1": 0.7537473233404711, "obj2": 0.12204790183164235}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( FirstVNF_CPU_Server / AMS ),( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / PN ) / Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) - ( RRS * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / ( MUR / RMSe ) ) ),( ( RRSe / MUR ) - Min( DS ,( MLU * DS ) ) ) ) / ( ( ( MUR * Min( MUR ,CS ) ) + ( RMSe * ( MLU / MUM ) ) ) * RMSe ) ) ) / ( ( CS + MUR ) - MUC ) ) )", "obj1": 0.8179871520342612, "obj2": 0.08868878508174295}, {"determining": "( ( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ARS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS + ( Min( ( CRS / BR ) ,Const ) / ( AMS / PN ) ) ) - ( ( ( FirstVNF_RAM * ARS ) / ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) * CRS ) ) ) ) - ( MDR - FirstVNF_Mem ) )", "choosing": "Max( Min( Min( ( Min( Min( RCSe ,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( ( MUM + MUR ),( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MLU - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,RMSe ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.006553447384121194}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.6616702355460385, "obj2": 0.19049766795863232}, {"determining": "( ( Min( ( PN - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,( ( ARS + BR ) - DDR ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ARS,( Const + FirstVNF_RAM ) ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ),( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( MUM / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( ( MUR - DS ) / RCSe ) ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.1792404907396716}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( ( AMS - Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MUM ) - Min( Min( Min( ( DS / RCSe ) ,( MUC + ( CS / Min( ( MUC + MUM ) ,( RMSe / RCSe ) ) ) ) ) ,CS ) ,MUM ) )", "obj1": 0.9229122055674518, "obj2": 0.03529814533211849}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server + PN ) ) - ( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) * MDR ) ) - ( ( ( Min( Max( ( MDR / FirstVNF_Mem_Server ),Max( MRS,BR ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( BR * MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( MUM ,( Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) * ( RRSe * MUM ) ) ),MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.9550321199143469, "obj2": 0.019896352818595822}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( AMS - MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * Max( ( FirstVNF_Mem * CRS ),FirstVNF_RAM_Server ) ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( ( MUR / MLU ) - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - Max( ( CS / ( Min( CS ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ) + DS ) )", "obj1": 0.9785867237687366, "obj2": 0.009404486398720428}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * CRS ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) ) ) - Max( ( CS / ( Min( ( RCSe - RCSe ) ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( MUM - RRSe ) ,RMSe ) )", "obj1": 0.9593147751605996, "obj2": 0.01787276602828068}], "31": [{"determining": "( ( ( RRS - Min( FirstVNF_CPU ,CRS ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( ( ARS * FirstVNF_RAM_Server ),AMS ) ) * MDR ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( ( DS - DS ),Max( ( DS / RCSe ),RRSe ) ),( Min( MUM ,( RCSe * MUM ) ) - Max( ( CS * DS ),( Max( MUM,RRSe ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * Max( MRS,FirstVNF_RAM ) ) ) ) ,( AMS - MDR ) ) + MRS ) - ( ( ( CRS + FirstVNF_Mem ) + FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( MUM / ( MUC + ( RRSe / MUM ) ) ) ),MUR ) + Max( Max( MUM,( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),( RMSe - ( MUM / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,Max( MRS,BR ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( MUR + Max( ( MUC + ( Max( ( RMSe + RMSe ),RCSe ) / RCSe ) ),MUR ) )", "obj1": 0.6445396145610278, "obj2": 0.2264932225822993}, {"determining": "( ( ( AMS - ( Min( ( MRS + Max( ( AMS * FirstVNF_CPU ),ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,( MRS + Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) )", "choosing": "( MUR + Max( Max( ( DS / MUR ),( Min( ( DS / RCSe ) ,( RCSe / MLU ) ) / MUR ) ),MUR ) )", "obj1": 0.6573875802997858, "obj2": 0.2063699340242944}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * ( AMS * FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,( ( RMSe + Min( RRSe ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.6616702355460385, "obj2": 0.18988709810992635}, {"determining": "( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( AMS * FirstVNF_CPU ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ) ,Min( ( MUC + ( ( RRSe - MUM ) / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ),DS )", "obj1": 0.6873661670235546, "obj2": 0.16460405897197736}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( Max( Const,DDR ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "Max( MLU,( Min( ( RRSe - MUM ) ,RMSe ) / ( MUC / Min( ( Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) + MLU ) ,RCSe ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17885027374018111}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + PN ) ) ) - ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * ( ACS + Max( BR,DDR ) ) ) ) - ( Min( Max( DDR,AMS ) ,Max( MRS,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server + DDR ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( ( ( MUR - RMSe ) + ( RMSe / MUR ) ),Min( RCSe ,( RMSe * RRSe ) ) ) ) ) - ( ( RRSe - Max( Max( MLU,( RCSe * MUR ) ),( RMSe / Min( DS ,MLU ) ) ) ) / MLU ) ) ),Min( ( RRSe - MUM ) ,RMSe ) )", "obj1": 0.6552462526766595, "obj2": 0.220207717601067}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( Max( Const,DDR ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( MUC + ( RRSe / ( MUC + ( RRSe / RCSe ) ) ) ),MUR ) )", "obj1": 0.6659528907922913, "obj2": 0.18532733761822837}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( ( ( Max( RMSe,Max( CS,RCSe ) ) + ( RMSe + RMSe ) ) + RCSe ) + Min( RCSe ,RMSe ) )", "obj1": 0.6531049250535332, "obj2": 0.22260863118776114}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( Max( ( Max( ( FirstVNF_Mem - AMS ),DDR ) * ( MRS + AMS ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / ( CS / Min( MUM ,MUC ) ) ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.728051391862955, "obj2": 0.13552300669581713}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Max( ( Max( ( FirstVNF_Mem - AMS ),DDR ) * ( MRS + AMS ) ),DDR ) * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,MUC ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ) ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ),DS )", "obj1": 0.702355460385439, "obj2": 0.14950153319723938}, {"determining": "( ( ( ( Min( Max( MRS,Max( PN,( MDR * FirstVNF_CPU ) ) ) ,Max( FirstVNF_RAM_Server,RRS ) ) * MDR ) - ( BR * Const ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( MUR - RCSe ) / Max( ( ( MUR - Min( ( RMSe / RMSe ) ,( MUC - CS ) ) ) - RMSe ),CS ) ) ,( Max( ( MUC + ( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),MLU ) - DS ) ),( ( DS / RCSe ) / Min( MUC ,RMSe ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11712637634761133}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( AMS * FirstVNF_CPU ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( ( Max( RRSe,CS ) / Min( MUC ,RMSe ) ),MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.1792404907396716}, {"determining": "( ( AMS - MDR ) - ( AMS * Max( ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * FirstVNF_CPU ),( ( ARS - ( AMS - MDR ) ) / ACS ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8094218415417559, "obj2": 0.09296681843869034}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Max( Max( Max( MRS,BR ),( DDR / FirstVNF_Mem_Server ) ),DDR ) * FirstVNF_CPU ) ,( AMS - MDR ) ) * FirstVNF_CPU ) ) - ( MRS / Const ) )", "choosing": "( MUR + Min( Max( ( ( ( Max( MUR,CS ) / ( MUM - RCSe ) ) - MUR ) - ( MUC / MLU ) ),Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9057815845824411, "obj2": 0.043819069820874676}, {"determining": "( ( ( Max( MRS,MDR ) - ( Min( Max( MRS,Max( PN,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( MRS,MDR ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - ( FirstVNF_RAM + ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Min( MLU ,( RMSe / RMSe ) ) / RRSe ) ,Min( ( DS + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe * CS ) ) ) ),Min( MLU ,RCSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11376181250928308}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * Max( ( Const + FirstVNF_RAM ),ARS ) ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( ( DS / RCSe ) / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.6895074946466809, "obj2": 0.16282518223396697}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( AMS ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( ( AMS - FirstVNF_RAM_Server ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( AMS * ( BR - FirstVNF_CPU ) ) ) * Min( ( BR - RRS ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( MRS + FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,PN ) ) - ( Min( ( AMS - MDR ) ,( AMS * ( Const + FirstVNF_Mem_Server ) ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( ( MUC + ( RRSe - ( MUC / MLU ) ) ),MUR ) + Max( MUR,( Max( Min( Min( RRSe ,RCSe ) ,MUM ),MUR ) + Max( MUR,( MUR / Min( MUM ,( Max( RRSe,CS ) / Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.04982147616081579}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,( CRS - FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) * ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( ( MUR * RRSe ) + Max( MUM,DS ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) / Max( RRSe,( MUC * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09038015618648229}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( Max( ( MLU + MUC ),Min( RMSe ,RMSe ) ),MUM ) ,MLU ) * ( DS / RCSe ) ) ) ),DS )", "obj1": 0.8394004282655246, "obj2": 0.07642091731424118}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( AMS - MDR ),( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / FirstVNF_RAM ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( RRSe / RCSe ) ,MUM ) ) ,( RRSe - RMSe ) ),( ( MUM - ( ( MUR - RCSe ) / Max( MUM,CS ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11867153609993629}, {"determining": "( ( ( AMS - ( Min( ( Min( Min( ACS ,FirstVNF_CPU ) ,( AMS * FirstVNF_CPU ) ) + ( FirstVNF_CPU * ( MRS + FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( Min( ( CS + DS ) ,( RRSe + CS ) ),Min( RCSe ,( RMSe * MLU ) ) ) ) ) - Max( ( CS / ( Min( CS ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( MUM - RRSe ) ,RMSe ) )", "obj1": 0.7451820128479657, "obj2": 0.12674232612395964}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( Max( MRS,BR ) + ( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( ACS / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * MDR ) ) - ( FirstVNF_RAM_Server * AMS ) )", "choosing": "( ( ( Max( RMSe,Max( CS,RCSe ) ) + ( RMSe + RMSe ) ) + RCSe ) + Min( RCSe ,RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.07187407155063139}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( ( Min( DDR ,( Min( Const ,DDR ) - MRS ) ) + ( ( Max( ACS,FirstVNF_CPU_Server ) + DDR ) - ( MRS / CRS ) ) ) * Max( CRS,Min( ( MRS / Min( FirstVNF_RAM_Server ,MRS ) ) ,( Max( FirstVNF_CPU,DDR ) / AMS ) ) ) ) )", "choosing": "( Min( MLU ,MUM ) - Min( Min( Min( ( MUC * ( ( CS + DS ) * ( Max( MUR,MUM ) + ( MUR + MUR ) ) ) ) ,MUM ) ,CS ) ,RRSe ) )", "obj1": 0.9271948608137045, "obj2": 0.034395916317138564}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( AMS - MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( AMS * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + Max( Max( Min( ( RRSe - ( MUC / MLU ) ) ,( Max( CS,MLU ) - DS ) ),( Max( RRSe,CS ) / ( MLU / RMSe ) ) ),MLU ) )", "obj1": 0.9721627408993576, "obj2": 0.012213106706200938}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - CRS ) ) / Max( DDR,( FirstVNF_RAM * AMS ) ) ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MLU / RMSe ) ) )", "obj1": 0.7002141327623126, "obj2": 0.15529300632969215}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,MDR ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / ( FirstVNF_Mem * CRS ) ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe / Min( CS ,CS ) ) * MUC ),( RRSe * RRSe ) )", "obj1": 0.7259100642398287, "obj2": 0.13918158831761704}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( MRS / ACS ) * ( Max( DDR,ACS ) / MDR ) ) / Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM / AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - FirstVNF_CPU ) - FirstVNF_RAM ),( Const + FirstVNF_Mem ) ) * ( AMS - RRS ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( RCSe / Max( Max( MLU,RCSe ),CS ) ) ) ,MUM ) ) ,( RRSe - Max( ( ( Max( MUC,( RCSe + RMSe ) ) * ( MLU - ( MLU + DS ) ) ) * ( ( Min( RRSe ,RRSe ) - MUR ) - ( ( RRSe + MUR ) / RMSe ) ) ),RCSe ) ) ),( MUC - RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.07974823612013705}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "( MUR + Max( ( ( ( MUR + RMSe ) - RRSe ) + ( Max( MUM,( MUC + MUC ) ) / RCSe ) ),MUR ) )", "obj1": 0.7408993576017131, "obj2": 0.12866420308602755}, {"determining": "( ( MRS * MDR ) - ( FirstVNF_CPU * ( Max( ( FirstVNF_CPU_Server - MDR ),( PN * FirstVNF_CPU ) ) + MRS ) ) )", "choosing": "Max( ( Min( ( RRSe + Max( MUR,( CS - MLU ) ) ) ,CS ) / ( Min( ( ( CS / Max( MUM,MUC ) ) + ( MUC + RRSe ) ) ,RCSe ) / RMSe ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.03190186127829897}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) - ( Max( ( FirstVNF_RAM - ( ARS + ( AMS - ( Min( DDR ,DDR ) + AMS ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( MUM + CS ) + Max( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.8993576017130621, "obj2": 0.04600752084174604}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),Max( ( MUC + ( CS / Min( ( MUC + MUM ) ,( RMSe / RCSe ) ) ) ),( Min( MLU ,Min( Min( Min( RRSe ,RCSe ) ,RRSe ) ,MUM ) ) - ( RCSe - RRSe ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.043789351922334}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_CPU * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( ( MRS + AMS ),( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM + ( DS - RCSe ) ) + DS )", "obj1": 0.8693790149892934, "obj2": 0.06242290564453458}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) - ( Max( ( FirstVNF_RAM - ( FirstVNF_CPU + ( AMS - ( Min( DDR ,DDR ) + FirstVNF_Mem ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Min( Min( ( DS / RCSe ) ,( MUC + ( CS / Min( ( MUC + MUM ) ,( RMSe / RCSe ) ) ) ) ) ,CS ) )", "obj1": 0.8779443254817987, "obj2": 0.05749609872041789}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_CPU ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,MUM ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.7987152034261242, "obj2": 0.09774259709129998}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) * MDR ) ) - ( ( ( MDR * Min( Max( ( AMS - ( AMS * FirstVNF_CPU ) ),Max( MRS,BR ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( BR * MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( MUR * MLU ) ) ) ) ),MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.021811185064034882}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( MUM - MUM ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8265524625267666, "obj2": 0.08555493438177998}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,MDR ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / ( FirstVNF_Mem * CRS ) ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ),DS )", "obj1": 0.7387580299785867, "obj2": 0.13069154375179626}, {"determining": "( ( CRS + PN ) - ( DDR * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( MLU / MUM ) ) / RCSe ) ),MUC ) + Max( Max( MLU,RRSe ),MUR ) )", "obj1": 0.7558886509635975, "obj2": 0.12091114971100819}, {"determining": "( ( FirstVNF_Mem * Max( ( Min( MRS ,AMS ) + CRS ),MDR ) ) - ( ( Max( ( ( ARS * MRS ) + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ),FirstVNF_CPU_Server ) * AMS ) * Max( ( FirstVNF_CPU * Max( ( Max( ( FirstVNF_RAM * ARS ),DDR ) * FirstVNF_CPU ),DDR ) ),( MRS / ACS ) ) ) )", "choosing": "( Min( MUM ,Max( Min( ( Max( MUM,MLU ) - MUM ) ,CS ),( ( RMSe - DS ) / ( MLU - ( DS - ( DS / MUM ) ) ) ) ) ) + DS )", "obj1": 0.7858672376873662, "obj2": 0.10550501794762263}, {"determining": "( ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( Min( ( Const - ARS ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) ) ) )", "choosing": "( ( MUM + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.6638115631691649, "obj2": 0.18868601211864267}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MDR - MDR ),AMS ) ) * Max( ( FirstVNF_RAM * AMS ),DDR ) ) ) ) - ( MDR * Min( Max( MRS,Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - ( MUC - RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.15619778128794723}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Max( ( MRS + FirstVNF_Mem ),MRS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),Max( ( MUC + ( CS / Min( ( MUC + MUM ) ,( RMSe / RCSe ) ) ) ),( Min( MLU ,Min( Min( Min( RRSe ,RCSe ) ,RRSe ) ,MUM ) ) - ( RCSe - RRSe ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10747631501670954}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Const + FirstVNF_RAM ) ) ) - ( MDR * Min( Max( MRS,Max( CRS,ARS ) ) ,Max( ( AMS * Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( MLU,( Min( ( RRSe + ( MLU / MLU ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ) ) + DS ) ) )", "obj1": 0.708779443254818, "obj2": 0.14896622772843576}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( Max( MRS,BR ) ,( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( Max( DDR,Const ) * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( CS + MUC ) + MUR ) - MUC ) / ( ( MUC * MUR ) - RMSe ) ) + DS ) + ( ( MUM + RMSe ) - RRSe ) )", "obj1": 0.9657387580299786, "obj2": 0.015064145720800172}, {"determining": "( ( ( AMS - ( AMS * FirstVNF_CPU ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM * ARS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( Max( ( ( ( MUR - MUM ) / Min( CS ,CS ) ) * MUC ),( RRSe * RRSe ) ) + RRSe ) + Max( ( CS + ( RRSe / Max( Min( RMSe ,MLU ),( ( MUM - MUM ) / Min( ( RMSe + MUC ) ,RCSe ) ) ) ) ),MUR ) )", "obj1": 0.9914346895074947, "obj2": 0.0037448270766406817}, {"determining": "( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( AMS * MDR ) ) ) ) ) - ( Max( ( FirstVNF_RAM - ( ARS + ( AMS - ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( CS / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / ( Max( MUM,RCSe ) / RCSe ) ) ),MLU ) )", "obj1": 0.9421841541755889, "obj2": 0.025468466949358858}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_RAM * ( AMS * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( ( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ),( Min( ( RRSe - MUM ) ,RMSe ) / ( Min( Min( RMSe ,RCSe ) ,MUM ) / Max( MUM,( ( CS + MUC ) + MUR ) ) ) ) )", "obj1": 0.987152034261242, "obj2": 0.005638449968520384}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( MUR + Max( ( MUC + ( Max( MUM,( MUC + MUC ) ) / RCSe ) ),MUR ) )", "obj1": 0.9657387580299786, "obj2": 0.015064145720800172}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),DDR ) * ( MRS + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),MUC ),MLU ) )", "obj1": 0.7109207708779444, "obj2": 0.1461055400338948}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( Max( MRS,BR ),( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * MDR ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( Min( ( Max( MUM,MLU ) - MUM ) ,CS ),( MLU / ( MLU - ( DS - ( DS / MUM ) ) ) ) ) ) + DS )", "obj1": 0.9400428265524625, "obj2": 0.027104108716701783}, {"determining": "( ( FirstVNF_RAM_Server - Min( FirstVNF_Mem_Server ,( PN * FirstVNF_RAM_Server ) ) ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( RRSe - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,Max( DS,( Max( MUC,MUM ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.06016052898707803}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,ACS ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_CPU * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( ( Min( MRS ,AMS ) + CRS ),MDR ) ) ) * ( Min( Max( Const,DDR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,( RMSe + Min( ( Min( RMSe ,Min( Min( RCSe ,RMSe ) ,( MUC + MLU ) ) ) - ( ( RCSe + ( MUM - RRSe ) ) + ( Max( MUC,MUR ) / ( MLU * MLU ) ) ) ) ,CS ) ) ) + DS )", "obj1": 0.8650963597430407, "obj2": 0.0643281109956104}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( MUR,( MUM + ( DS - RCSe ) ) ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * Min( RRSe ,RCSe ) ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.734475374732334, "obj2": 0.13205055858305756}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( MDR * FirstVNF_CPU ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( MUR,( MUM + ( DS - RCSe ) ) ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * Min( RRSe ,RCSe ) ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.721627408993576, "obj2": 0.13980696143047336}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * CRS ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.01787276602828068}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( FirstVNF_Mem - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_RAM ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( ( ( RRSe - ( MUR / MLU ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ) - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Max( MUR,CS ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.09618336574747412}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * ACS ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - ( ( ( RRSe - ( MUR / MLU ) ) + ( Max( Min( CS ,RRSe ),CS ) - MUC ) ) - ( DS - ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) ) ) ) ,( RRSe - ( MUR / MLU ) ) ),( Min( MUC ,RMSe ) / Max( RRSe,( DS * ( Max( MUR,CS ) * Max( MUM,MLU ) ) ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.11218062407957202}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15844501605939487}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) - ( Max( ( FirstVNF_RAM - ( ARS + ( AMS - ( MDR * FirstVNF_CPU ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( MUM + CS ) + Max( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Min( MLU ,( RMSe / RMSe ) ) / RRSe ) ),MLU ) )", "obj1": 0.860813704496788, "obj2": 0.06621348372604592}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( ( RRSe + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( ( Min( ( RRSe + ( MLU / RRSe ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ),MLU ) + DS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06920675624342841}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_Mem_Server * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( Min( Min( RMSe ,RCSe ) ,MUM ),Max( ( MUC + ( CS / Min( ( MUC + MUM ) ,( RMSe / RCSe ) ) ) ),( Min( MLU ,Min( Min( Min( RRSe ,RCSe ) ,RRSe ) ,MUM ) ) - ( RCSe - RRSe ) ) ) ) + Max( MUR,( ( Max( ( MUC + ( DS / RCSe ) ),MUR ) + Max( Max( MUM,CS ),( MUR / Min( MUM ,MUC ) ) ) ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12298145653659144}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) - ( Max( ( FirstVNF_RAM - ( ARS + ( AMS - ( Min( DDR ,DDR ) + FirstVNF_Mem ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.05072770608432338}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) ) - ( ( MRS + Min( ( ( Max( ( FirstVNF_Mem * CRS ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Const ) ,( AMS * FirstVNF_CPU ) ) ) * FirstVNF_CPU ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.9593147751605996, "obj2": 0.01787276602828068}, {"determining": "( ( ( AMS - ( Max( PN,( MRS * FirstVNF_RAM ) ) * MDR ) ) - Min( Max( MRS,Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( ( ( Max( Max( RMSe,CS ),Max( ( MUC / CS ),RRSe ) ) / RMSe ) - RMSe ),( ( RMSe - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.9828693790149893, "obj2": 0.00829183555917743}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ) + DDR ) * Min( ( FirstVNF_RAM * AMS ) ,( PN / FirstVNF_Mem_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( CS / RCSe ) ),MUR ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.8479657387580299, "obj2": 0.07275286350932976}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * DDR ) ) - ( Min( Max( DDR,( ( FirstVNF_RAM_Server * BR ) - PN ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU + DDR ) - ( FirstVNF_Mem_Server + ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * AMS ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( DS - ( DS + MLU ) ) / MLU ) + ( MLU / DS ) )", "obj1": 0.8436830835117773, "obj2": 0.07552266336047607}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( MRS * FirstVNF_RAM ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( ( MUR + RMSe ) - RRSe ) + ( ( ( CS - MUC ) / ( ( Max( Max( RMSe,Min( RCSe ,MUC ) ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.734475374732334, "obj2": 0.13205055858305756}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( ( RRSe + Min( MLU ,( RCSe - ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ) ) ) ) + Min( Max( CS,( CS + ( ( MUR - MLU ) * ( MUR / Min( ( MUR / MUR ) ,Min( CS ,CS ) ) ) ) ) ) ,( Max( ( Min( ( RRSe + ( MLU / RRSe ) ) ,Max( RRSe,( RCSe - CS ) ) ) + RCSe ),MLU ) + DS ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06920675624342841}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( ( MDR / FirstVNF_Mem_Server ) / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( Min( MUM ,Max( Min( ( Max( MUM,MLU ) - MUM ) ,CS ),( ( RMSe - DS ) / ( MLU - ( DS - ( DS / MUM ) ) ) ) ) ) + DS )", "obj1": 0.8758029978586723, "obj2": 0.059766942893375204}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,( RMSe + Min( ( Min( RMSe ,Min( Min( RCSe ,RMSe ) ,( MUC + MLU ) ) ) - ( ( RRSe + ( MUM - RRSe ) ) + ( Max( MUC,MUR ) / ( MLU * MLU ) ) ) ) ,CS ) ) ) + DS )", "obj1": 0.828693790149893, "obj2": 0.08289157085448914}, {"determining": "( ( ( AMS - ( Min( ( MRS + Max( ( AMS * FirstVNF_CPU ),ARS ) ) ,Max( AMS,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + Min( DDR ,AMS ) ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,( MRS + Max( Max( BR,FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) )", "choosing": "( MUR + Max( Max( ( DS / MUR ),( Min( ( DS / RCSe ) ,( RCSe / MLU ) ) / MUR ) ),MUR ) )", "obj1": 0.9379014989293362, "obj2": 0.02961085500550248}, {"determining": "( ( ( AMS - MDR ) - ( Min( ( AMS - MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_CPU * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUM ) + ( MUR + MUR ) ) + ( ( ( ( MUR / MLU ) - MUC ) / ( ( Max( Max( RMSe,CS ),Max( ( MUR / CS ),RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.9486081370449678, "obj2": 0.023339600763280316}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + Max( ( ( AMS - MDR ) * Min( ( FirstVNF_RAM * AMS ) ,( PN / FirstVNF_Mem_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) ) - ( Max( ( ( ARS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - FirstVNF_RAM ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( MUM,( ( CS + MUC ) + MUR ) ) + Max( Max( ( ( RRSe / Min( MUC ,RMSe ) ) + Min( RCSe ,RRSe ) ),( Max( RRSe,( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / ( RMSe - MUM ) ) ),MLU ) )", "obj1": 0.8222698072805139, "obj2": 0.08632703900587292}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( FirstVNF_RAM * MDR ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,DDR ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Max( ( MRS + FirstVNF_Mem ),MRS ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( Min( MUM ,( ( RCSe + ( CS + ( MUR * MUR ) ) ) * Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) ) ) - Max( ( CS / ( Min( CS ,MUC ) - ( MUR - MUM ) ) ),CS ) ) ),Min( ( MUM - RRSe ) ,RMSe ) )", "obj1": 0.7794432548179872, "obj2": 0.10851279446160672}, {"determining": "( ( ( AMS - MDR ) - ( FirstVNF_Mem_Server * MDR ) ) - ( ( Min( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) ,FirstVNF_CPU ) + MRS ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( ( MUR + ( ( MUC + ( RRSe / MUC ) ) / RCSe ) ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.9764453961456103, "obj2": 0.010662720548650985}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( CRS,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( CRS,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_CPU * MDR ) ) ) ) ) ) ) - ( MDR * ( Min( Min( DDR ,AMS ) ,Max( ( BR - RRS ),Max( MRS,Max( ( MRS + AMS ),( MRS * FirstVNF_RAM ) ) ) ) ) * ( Min( ( FirstVNF_CPU / BR ) ,FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),( MDR / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Min( MUM ,Max( ( ( ( RRSe - MLU ) / RMSe ) - RMSe ),( ( CS - RRSe ) - RRSe ) ) ) + DS )", "obj1": 0.9143468950749465, "obj2": 0.0400000472963521}, {"determining": "( ( ( Max( MRS,( ARS * Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) ) - ( Min( Max( MRS,Max( Max( FirstVNF_RAM,BR ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Min( Max( DDR,AMS ) ,Max( ACS,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * ( BR / ( Min( DDR ,CRS ) + ACS ) ) ) )", "choosing": "( ( ( Max( ( Min( RMSe ,Max( RCSe,MUC ) ) / ( Min( Max( MLU,MUR ) ,( MLU * RMSe ) ) - Min( RCSe ,RCSe ) ) ),( RRSe / MUC ) ) / RMSe ) - ( MUR + RMSe ) ) + ( MLU / DS ) )", "obj1": 0.8843683083511777, "obj2": 0.05440516922303126}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( FirstVNF_RAM * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( Min( MLU ,( RMSe / RMSe ) ) / RRSe ) ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe * CS ) ) ) ),Min( ( MUC + MUM ) ,( RMSe / RCSe ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10283691927619364}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,MDR ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( AMS * Max( Max( FirstVNF_RAM,BR ),( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Const ) ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( MDR * MDR ) ) ) ) ) ) ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / Min( CS ,CS ) ) * Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) ),( ( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) * RRSe ) )", "obj1": 0.7751605995717344, "obj2": 0.11070333085871246}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( DDR,AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( Const + FirstVNF_RAM ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - MUC ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.6937901498929336, "obj2": 0.15844501605939487}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) - ( Max( ( FirstVNF_RAM - ( ARS + ( AMS - ( Min( DDR ,DDR ) + AMS ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( ( MUM + CS ) + Max( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.8993576017130621, "obj2": 0.04600752084174604}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( ( MUC + ( RRSe / MUM ) ) / RCSe ) ),MUR ) + Max( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.7194860813704497, "obj2": 0.1412681948241306}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( PN,( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( PN / Min( FirstVNF_RAM ,( FirstVNF_CPU - Const ) ) ) / ( FirstVNF_RAM * ( FirstVNF_Mem_Server * MDR ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,Min( ( CS + DS ) ,( RRSe + CS ) ) ) ) ,Min( ( MUC + ( DS / ( DS * ( Max( RMSe,RRSe ) / MLU ) ) ) ) ,Min( ( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ,( RRSe + CS ) ) ) ),DS )", "obj1": 0.7494646680942184, "obj2": 0.12503736293176426}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( ( FirstVNF_CPU_Server / AMS ),( Const * FirstVNF_RAM ) ) ) ,Max( FirstVNF_RAM_Server,Min( PN ,( CRS - FirstVNF_RAM_Server ) ) ) ) * MDR ) ) - ( ( MRS + DDR ) - ( Max( ( Max( ( FirstVNF_RAM * AMS ),DDR ) * FirstVNF_CPU ),DDR ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / PN ) / Max( ( BR / Min( DDR ,FirstVNF_CPU ) ),( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) - ( RRS * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / ( MUR / RMSe ) ) ),( ( RRSe / MUR ) - Min( DS ,( MLU * DS ) ) ) ) / ( ( ( MUR * Min( MUR ,CS ) ) + ( RMSe * ( MLU / MUM ) ) ) * RMSe ) ) ) / ( ( CS + MUR ) - MUC ) ) )", "obj1": 0.8179871520342612, "obj2": 0.08868878508174295}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server + PN ) ) - ( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) * MDR ) ) - ( ( ( Min( Max( ( MDR / FirstVNF_Mem_Server ),Max( MRS,BR ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( BR * MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( Min( Max( Min( MUM ,( Max( MUM,Min( RCSe ,( RMSe * MLU ) ) ) * ( RRSe * MUM ) ) ),MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) )", "obj1": 0.9550321199143469, "obj2": 0.019896352818595822}, {"determining": "( ( ( FirstVNF_RAM_Server - MDR ) - ( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( AMS * FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem / AMS ),FirstVNF_RAM ) ) * MDR ) * MDR ) ) - ( ( ( MDR * Min( Max( ( MDR / FirstVNF_Mem_Server ),Max( MRS,BR ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( BR * MDR ) ) ) ) * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( Min( Max( RCSe,MUM ) ,Min( Min( MLU ,RCSe ) ,MUM ) ) + Max( MUR,( MUR / Min( MUM ,MUC ) ) ) ) ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( ( MUM + MUR ),( Max( ( MUC + ( DS / MUC ) ),MUR ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( CS,MUM ) ,RMSe ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.9550321199143469, "obj2": 0.019896352818595822}, {"determining": "( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( Max( ( FirstVNF_RAM - ( ARS + ( AMS - ( Min( DDR ,DDR ) + FirstVNF_Mem ) ) ) ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ) - Max( ( ( ( DS / Max( RRSe,MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.06385800891154117}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_RAM ) ) ) ) ) ) ) - ( MDR * ( MRS + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( ( ACS + BR ) * MDR ) ) ) ) ) )", "choosing": "Max( Min( Min( MUM ,CS ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / ( MUR / RMSe ) ) ),( ( RRSe / MUR ) - Min( DS ,( MLU * DS ) ) ) ) / ( ( ( ( MUC - RCSe ) + RMSe ) / CS ) * RMSe ) ) ) / Min( ( CS + MUR ) ,MUC ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10194118183982719}, {"determining": "( ( Min( ( AMS - MDR ) ,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) + MRS ) - ( Max( ( FirstVNF_RAM - FirstVNF_CPU_Server ),DDR ) * FirstVNF_CPU ) )", "choosing": "( Max( ( MUC + ( RMSe / MUR ) ),MUR ) + Max( Max( ( ( RMSe + MUM ) + Min( RCSe ,RRSe ) ),( Max( Max( MUC,( Max( RRSe,CS ) / Min( MUR ,RMSe ) ) ),( ( RMSe + Min( MUM ,DS ) ) * RMSe ) ) / Min( MUM ,RMSe ) ) ),MLU ) )", "obj1": 0.860813704496788, "obj2": 0.06621348372604592}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( FirstVNF_RAM / Const ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_RAM ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUM ,Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ) ,( RRSe - ( MUR / MLU ) ) ),( Max( RRSe,( Max( ( MUC + ( DS / MUC ) ),MUM ) / ( ( ( ( MUC - CS ) + RMSe ) / CS ) * RMSe ) ) ) / ( DS * ( Min( Max( Max( ( MLU + MUC ),Min( RMSe ,RMSe ) ),MUM ) ,MLU ) * ( DS / RCSe ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0018724135383203408}, {"determining": "( ( ( AMS - MDR ) - ( MDR * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - MDR ) ) - FirstVNF_RAM ),DDR ) ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) * FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUC / ( ( MUM - RCSe ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( ( MUR * RRSe ),Min( ( MUC + ( DS / RCSe ) ) ,MUR ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( AMS - MDR ) - ( Min( Min( Max( MRS,BR ) ,( ARS - ( AMS - MDR ) ) ) ,( Min( Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) ,MDR ) * Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) ) * FirstVNF_RAM ) ) - ( ( Min( Max( ( ( ARS - ( AMS - FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,AMS ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( CS + MUC ) + MUR ) - MUC ) / ( MUM - RMSe ) ) + DS ) + ( ( MUM + RMSe ) - RRSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028086203074805115}, {"determining": "( ( ( AMS - ( Min( Max( MRS,Max( FirstVNF_RAM,ARS ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * MDR ) ) - ( ( AMS * FirstVNF_CPU ) * ( ( MRS + AMS ) - ( FirstVNF_Mem_Server * ( ( PN / ( MRS / Const ) ) / ( FirstVNF_RAM * ( AMS * FirstVNF_RAM ) ) ) ) ) ) ) - ( MDR * ( MRS + Min( ( FirstVNF_CPU - Const ) ,( MDR / ( ( ACS + BR ) * MDR ) ) ) ) ) )", "choosing": "Max( Min( ( Max( MUM,MLU ) - DS ) ,( Min( Min( Min( ( MLU + DS ) ,Max( RCSe,MLU ) ) ,DS ) ,MLU ) - ( MUR / MLU ) ) ),( Min( MUC ,Max( Min( MLU ,MUM ),( ( RRSe + MUC ) * Max( RMSe,RRSe ) ) ) ) / Max( RRSe,( DS * ( Min( RCSe ,MLU ) * ( DS / RCSe ) ) ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10094685625773073}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( Max( Const,DDR ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM * AMS ),( MRS / Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( RRSe,( MUC / ( ( MUM - ( ( RRSe - MUC ) / ( MUM + CS ) ) ) - MUC ) ) ) / ( RRSe / MUM ) ) - Max( ( MUR * RRSe ),Min( ( MUC + ( DS / RCSe ) ) ,MUR ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17885027374018111}, {"determining": "( ( Min( ( AMS - MDR ) ,( AMS * FirstVNF_CPU ) ) + ( PN / ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,Max( ( MDR - MDR ),AMS ) ) * MDR ) ) ) - ( MDR * Min( Max( MRS,Max( ( FirstVNF_RAM + Min( DDR ,FirstVNF_Mem ) ),ARS ) ) ,Max( MRS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( MUC + ( DS / RCSe ) ) ,MUM ) ,Min( RCSe ,MUM ) ) - Max( ( ( ( ( Max( RRSe,RMSe ) * ( ( MUR - MUR ) * RRSe ) ) / Max( ( Max( RRSe,CS ) + Min( RMSe ,MUC ) ),MUR ) ) - ( MUR / MLU ) ) * DS ),Max( MUM,Max( CS,DS ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.1792404907396716}, {"determining": "( ( ( AMS - MDR ) - ( Min( Max( ( BR / MRS ),( MDR / FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem * ( AMS * FirstVNF_CPU ) ) * MDR ) ) ) - ( ( Min( Max( ( ( ARS - ( AMS - ACS ) ) - FirstVNF_RAM ),DDR ) ,( AMS * FirstVNF_CPU ) ) + MRS ) * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) - RRSe ) + ( ( ( Max( Max( MUM,( ( CS + MUC ) + MUR ) ),( DS - Max( DS,( MUR / MUC ) ) ) ) / ( RCSe / MUR ) ) / ( ( ( MLU * ( Max( RCSe,CS ) + RRSe ) ) / RMSe ) - RMSe ) ) + DS ) )", "obj1": 0.8822269807280514, "obj2": 0.05612077145086218}, {"determining": "( ( ( AMS - Min( ( ( FirstVNF_RAM_Server / ACS ) - MDR ) ,( AMS * FirstVNF_CPU ) ) ) - ( Min( Max( DDR,AMS ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * ( ( MRS + DDR ) - ( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * ( AMS * MDR ) ) ) ) ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MUM ) - Min( Min( Min( ( DS / RCSe ) ,( MUC + ( CS / Min( ( MUC + MUM ) ,( RMSe / RCSe ) ) ) ) ) ,CS ) ,MUM ) )", "obj1": 0.9229122055674518, "obj2": 0.03529814533211849}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( ( PN / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( MRS + Min( Max( Const,DDR ) ,( ARS / FirstVNF_Mem ) ) ) * ( AMS * MDR ) ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "Max( ( Min( ( RRSe + MUM ) ,RMSe ) / ( RMSe / Min( ( ( CS / Max( MUM,Min( MLU ,RCSe ) ) ) + ( MUC + RRSe ) ) ,RCSe ) ) ),( ( ( MUM / RMSe ) + RRSe ) - RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.053704517866251515}]}