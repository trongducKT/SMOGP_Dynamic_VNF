{"1": [{"determining": "Max( ( BR - AMS ),( FirstVNF_CPU_Server + CRS ) )", "choosing": "( ( RCSe * MUM ) + ( MUM * RMSe ) )", "obj1": 0.3346938775510204, "obj2": 0.6590364702896296}, {"determining": "Min( ( DDR - ARS ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( MLU / MUM ) - ( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.5938775510204082, "obj2": 0.39206415828148433}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.9163265306122449, "obj2": 0.0918525508331584}, {"determining": "( Min( DDR ,CRS ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) )", "choosing": "( Max( DS,RCSe ) * ( RMSe + MUC ) )", "obj1": 0.3306122448979592, "obj2": 0.6751470585309194}, {"determining": "( ( FirstVNF_Mem / AMS ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( ( RCSe + MUM ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,Min( ( FirstVNF_RAM_Server / ARS ) ,CRS ) )", "choosing": "Max( ( MUR / MUC ),( MUM + ( MUM / ( CS * ( ( RCSe - ( ( MUM * MUR ) / MLU ) ) - ( ( MUC * DS ) - ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Max( ( DS - MLU ),Min( CS ,DS ) )", "obj1": 0.4448979591836735, "obj2": 0.5406150177557627}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( CRS * MRS ) )", "choosing": "Max( ( DS + MUC ),( CS - MUC ) )", "obj1": 0.3979591836734694, "obj2": 0.5978008491290548}, {"determining": "( ( FirstVNF_Mem + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( FirstVNF_CPU / RRS ) )", "choosing": "( ( DS / MUM ) / Max( MUR,( ( MUM - RCSe ) / CS ) ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) - Min( AMS ,ACS ) )", "choosing": "( ( MUR - CS ) * Max( MUR,RCSe ) )", "obj1": 0.32448979591836735, "obj2": 0.6780586609594048}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( MLU * CS ) )", "obj1": 0.3693877551020408, "obj2": 0.6218162603270385}, {"determining": "( ( Min( MDR ,RRS ) * MRS ) - Max( ACS,MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) * DS ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) - Max( RRS,PN ) )", "choosing": "Min( ( MUC / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( ARS / MDR ),( FirstVNF_CPU_Server + ARS ) ),( ( ( AMS / FirstVNF_CPU_Server ) / FirstVNF_CPU ) - ( RRS - ACS ) ) )", "choosing": "( Min( RRSe ,Max( RMSe,( ( MUR + ( Min( MUC ,MUC ) + RRSe ) ) + ( RRSe / CS ) ) ) ) + ( ( MUM * RCSe ) + RMSe ) )", "obj1": 0.336734693877551, "obj2": 0.654787881252262}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( ( RCSe / MUM ) + ( CS - MUC ) ) )", "obj1": 0.10204081632653061, "obj2": 0.892233646563153}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( CS - MUC ) / Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( ARS + Max( FirstVNF_CPU,AMS ) ) - ( ( ACS * PN ) / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( ( ( RMSe - RRSe ) * RCSe ) * ( ( MUM + MUR ) + RMSe ) )", "obj1": 0.3816326530612245, "obj2": 0.6200424044294783}, {"determining": "( ( Max( FirstVNF_RAM_Server,CRS ) - ( ARS - MRS ) ) * ( Min( AMS ,FirstVNF_RAM ) / ( RRS + MRS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( DS / RCSe ) ) + Min( Max( RCSe,RMSe ) ,Min( MUC ,MUM ) ) )", "obj1": 0.3081632653061224, "obj2": 0.6847460463123091}, {"determining": "Min( Min( Const ,BR ) ,( MDR / DDR ) )", "choosing": "Max( ( ( MUM - DS ) / ( CS * RRSe ) ),( ( MUM + RRSe ) + Max( DS,DS ) ) )", "obj1": 0.3836734693877551, "obj2": 0.605812773292718}, {"determining": "( ( Max( DDR,ARS ) - ( BR * AMS ) ) * ( ( FirstVNF_CPU + PN ) / Max( DDR,BR ) ) )", "choosing": "( ( ( MUR - DS ) * MUR ) + Max( ( MLU - CS ),( MUM / DS ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8421238237539921}, {"determining": "( ( Max( ARS,MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( Max( CRS,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Min( Min( RRSe ,RRSe ) ,Max( MUR,CS ) ) ,( ( RMSe / MUR ) / Max( MLU,DS ) ) )", "obj1": 0.673469387755102, "obj2": 0.33316883288870697}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR + RCSe ),( RCSe - RCSe ) ) + Min( Max( RCSe,RMSe ) ,( RRSe - RRSe ) ) )", "obj1": 0.6959183673469388, "obj2": 0.31072656104893676}, {"determining": "( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) )", "choosing": "( Max( Min( MLU ,MLU ),( RCSe + RCSe ) ) + ( Max( RRSe,DS ) / ( MUM - MUC ) ) )", "obj1": 0.8693877551020408, "obj2": 0.1479573419009412}, {"determining": "( ( BR - FirstVNF_Mem ) / ( Min( PN ,FirstVNF_RAM ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( Max( RCSe,( MUR * RMSe ) ) ,( ( CS * RCSe ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( MLU,( RCSe / MUR ) ) + ( ( CS * DS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ARS,( ( BR / ACS ) + FirstVNF_RAM ) ),Max( ACS,MDR ) )", "choosing": "( ( ( MLU + MUC ) + ( ( RCSe * RRSe ) * CS ) ) / ( ( MLU - MUM ) + Min( MUC ,CS ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6991426287800024}, {"determining": "( ( ( Min( FirstVNF_Mem ,ACS ) - ( DDR * FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( Max( ( MRS - ACS ),( RRS * MRS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - Max( Const,( ( AMS * AMS ) - ( ( FirstVNF_RAM * RRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Min( Min( ( ( RRSe * ( RMSe - ( MUR / ( ( RCSe - MUR ) / CS ) ) ) ) / Min( DS ,CS ) ) ,( Max( MUC,RMSe ) + Min( CS ,RRSe ) ) ) ,( ( ( MUC - RCSe ) - ( RRSe - RCSe ) ) / ( Max( MLU,DS ) + Max( MUM,MUC ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.6469579654834131}, {"determining": "Min( ( FirstVNF_CPU_Server * MRS ) ,( PN * ARS ) )", "choosing": "( ( ( Max( CS,MUM ) + Min( DS ,MUC ) ) * ( Min( MUC ,MLU ) + ( CS - MUR ) ) ) * ( ( Min( RRSe ,MLU ) / Min( RCSe ,MLU ) ) / ( Min( RCSe ,RMSe ) - ( MUC / RRSe ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7954630799142633}, {"determining": "( Max( Max( DDR,DDR ),FirstVNF_Mem ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( Const + ACS ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) + ( RCSe + MUM ) ) + ( Min( RCSe ,MUC ) / ( RRSe / CS ) ) ) + ( ( ( MUM * CS ) - Max( RMSe,MUM ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.8448979591836735, "obj2": 0.19211472606195126}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,( ( CRS - ACS ) / Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( MUR / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,ARS ) - Max( ARS,Const ) ) * Max( ( FirstVNF_Mem_Server * MRS ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * Max( Min( Min( BR ,FirstVNF_RAM_Server ) ,( BR - FirstVNF_Mem ) ),( ( PN * FirstVNF_Mem_Server ) + ( ACS + CRS ) ) ) )", "choosing": "( Max( MUM,DS ) * ( ( MUM / MUM ) - RCSe ) )", "obj1": 0.2571428571428571, "obj2": 0.7508351436360865}, {"determining": "( ( ( ( CRS - RRS ) - ( ACS * AMS ) ) * Max( ( FirstVNF_Mem / BR ),( MDR / Max( MRS,ARS ) ) ) ) - Max( ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + CRS ) ),Min( ( Const / BR ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe - RMSe ) + Max( RMSe,MUR ) ) + ( Min( CS ,MLU ) * ( MUM - MUC ) ) ) * ( RRSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( DDR - Const ) ,( Const - RRS ) ) ) - Max( Min( ( PN * AMS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),Min( ( CRS - PN ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RCSe ,Min( DS ,CS ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.09504996407024868}, {"determining": "( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ) * ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) * ( Max( CS,CS ) + ( RMSe / MUR ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.6203261845314427}, {"determining": "( ( ( ( PN - RRS ) * ( ACS * MRS ) ) - ( Max( CRS,MRS ) - ( ARS + FirstVNF_CPU ) ) ) - ( ( Max( MDR,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * AMS ) ) - ( ( RRS / MDR ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( RRSe + RMSe ),( MUM - MLU ) ) + ( ( MLU - MUC ) / ( MLU + RCSe ) ) ) + ( ( Max( MUR,MUM ) + Max( MUM,MUR ) ) + ( ( RCSe * RCSe ) * ( ( ( Max( RRSe,RRSe ) * ( RCSe * Min( MUM ,RCSe ) ) ) / CS ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( RRS * FirstVNF_Mem ) ,( AMS + AMS ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( Min( Min( Max( AMS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.04663263611104716}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR - FirstVNF_CPU_Server ) / ( BR + PN ) ) * ( ( ACS * CRS ) / ( ( FirstVNF_CPU - ARS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( RCSe,( MUR + RCSe ) ) / CS ) ,( Min( Min( MUM ,MUR ) ,( CS - MUR ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,ARS ) ,Min( ( MRS / ( DDR - RRS ) ) ,ACS ) )", "choosing": "Max( ( ( ( MUC - MUC ) * DS ) - ( MLU * RRSe ) ),Max( RRSe,MLU ) )", "obj1": 0.2163265306122449, "obj2": 0.7806826677402376}, {"determining": "( ( ARS / ACS ) * Max( MDR,( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MLU / MUC ) + ( RMSe * DS ) ) ) * ( ( Max( MUR,MLU ) / Min( MUR ,MUM ) ) + Max( ( ( ( RRSe + DS ) + RRSe ) * CS ),( MUC + RRSe ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6237292227112601}, {"determining": "( ( ( FirstVNF_Mem - ( Min( ( ( CRS / ARS ) - MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( Max( Max( RRSe,( MUC * RCSe ) ),DS ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.09592332498085666}, {"determining": "Min( Max( ( ( RRS * BR ) * Min( ACS ,AMS ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * ( ( FirstVNF_Mem_Server - BR ) - ( ACS / DDR ) ) ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ACS ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.1934200375120312}, {"determining": "( Max( DDR,RRS ) / ( ( RRS / BR ) * MDR ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}], "2": [{"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM * ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( ( RCSe / MUM ) + ( CS - MUC ) ) )", "obj1": 0.10204081632653061, "obj2": 0.892233646563153}, {"determining": "Min( Min( DDR ,CRS ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( ( RCSe * MLU ) * ( RCSe + ( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( MLU / MUM ) - ( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) + ( ( Const - FirstVNF_RAM ) * ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.10204081632653061, "obj2": 0.892233646563153}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * CS ) )", "obj1": 0.7, "obj2": 0.2529388974916861}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.6448979591836734, "obj2": 0.2972015754703844}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8405915528601242}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.5938775510204082, "obj2": 0.39206415828148433}, {"determining": "( ( AMS + MRS ) * ( ( ( AMS * PN ) + ( Const - FirstVNF_RAM ) ) + MRS ) )", "choosing": "( ( CS + MUM ) / Max( Max( DS,RRSe ),RMSe ) )", "obj1": 0.5346938775510204, "obj2": 0.46830937156951846}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.6285714285714286, "obj2": 0.3579549951110172}, {"determining": "( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) + Min( Max( RCSe,RMSe ) ,( RRSe - RRSe ) ) )", "obj1": 0.7673469387755102, "obj2": 0.23404074969986033}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( BR,CRS ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUM * RMSe ) + Max( RMSe,MUM ) )", "obj1": 0.9816326530612245, "obj2": 0.008289971673011083}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( AMS - ACS ) / Max( FirstVNF_RAM,MDR ) )", "choosing": "( ( Min( ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.17479632753605853}, {"determining": "( ( AMS - ACS ) / Max( FirstVNF_RAM,DDR ) )", "choosing": "( ( Min( ( MUR + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.1934200375120312}, {"determining": "Max( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / Max( CRS,( ( FirstVNF_RAM + AMS ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7902710168418643}, {"determining": "( ( ACS - ACS ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) )", "choosing": "( ( RCSe - ( DS - RMSe ) ) * MUC )", "obj1": 0.8591836734693877, "obj2": 0.16053128499161176}, {"determining": "( ( FirstVNF_RAM + AMS ) / ( ( CRS * DDR ) * Min( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( ( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.763450346876002}, {"determining": "( ( ( AMS * MRS ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Min( CS ,MUR ),Max( MUM,RRSe ) ),( Max( RRSe,MUC ) + ( ( ( RRSe / Max( RRSe,Max( RCSe,RMSe ) ) ) * DS ) + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 0.4, "obj2": 0.5688550143459145}, {"determining": "( ( BR * CRS ) - ( MRS - MRS ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / MUR ) / ( MLU / Max( ( ( MUM * MUR ) * ( MUC * ( MUM / ( MUC / MLU ) ) ) ),Max( MUR,( MUR / MUM ) ) ) ) ) )", "obj1": 0.45510204081632655, "obj2": 0.5013160034157592}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) - Const ) ,( Const - RRS ) ) ) - Max( Min( ( PN * AMS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),Min( ( CRS - PN ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.9408163265306122, "obj2": 0.05966042837897562}, {"determining": "( ( Min( ACS ,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( CRS + BR ) )", "choosing": "( ( RRSe + ( ( MLU + RRSe ) - ( MUC * MLU ) ) ) * ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) * ( Max( CS,RCSe ) + ( MUR / RMSe ) ) ) )", "obj1": 0.7857142857142857, "obj2": 0.22663555924965778}, {"determining": "( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) )", "choosing": "( Max( Min( MLU ,MLU ),( RCSe + RCSe ) ) + ( Max( RRSe,DS ) / ( MUM - MUC ) ) )", "obj1": 0.8693877551020408, "obj2": 0.1479573419009412}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.9142857142857143, "obj2": 0.08264582922657213}, {"determining": "( ( FirstVNF_Mem + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( FirstVNF_CPU / RRS ) )", "choosing": "( ( DS / MUM ) / Max( MUR,( ( MUM - RCSe ) / CS ) ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem + MDR ) ) ,( FirstVNF_CPU * BR ) )", "choosing": "( ( MLU * RMSe ) - ( ( MUC + RMSe ) - Min( RCSe ,DS ) ) )", "obj1": 0.8836734693877552, "obj2": 0.11823789918558794}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( ( RCSe / MUM ) + ( CS - MUC ) ) )", "obj1": 0.4897959183673469, "obj2": 0.4881759672016312}, {"determining": "( Max( DDR,RRS ) / ( ( RRS / BR ) * MDR ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6920569950663137}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( ( ( RRSe + DS ) + ( RCSe + MUM ) ) + ( Min( RCSe ,MUC ) / ( RRSe / CS ) ) ) + ( ( ( MUM * CS ) - Max( RMSe,MUM ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5968612961515788}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.6081632653061224, "obj2": 0.37836935361980806}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( PN ,( FirstVNF_Mem + MDR ) ) )", "choosing": "Min( ( MLU * Min( RMSe ,MLU ) ) ,( MUC * RRSe ) )", "obj1": 0.5061224489795918, "obj2": 0.48112029342266993}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC * RRSe ) + ( ( ( MUM * CS ) - Max( RMSe,MUM ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.44693877551020406, "obj2": 0.5167704521799485}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "Min( Max( ( ( Const * BR ) * Min( ACS ,AMS ) ),( MDR * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * BR ) ) ) ) ,RRS )", "choosing": "( ( Max( DS,( DS / ( ( RRSe * ( MUR + MUC ) ) * RRSe ) ) ) - CS ) / Min( RRSe ,RMSe ) )", "obj1": 0.30612244897959184, "obj2": 0.6660206105262444}, {"determining": "Max( ( Min( ( RRS * FirstVNF_Mem ) ,( AMS + AMS ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( Min( Min( Max( AMS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.04663263611104716}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( CS + MUM ) / Max( MUC,RMSe ) )", "obj1": 0.5326530612244897, "obj2": 0.4684045131799062}, {"determining": "( ( MRS * CRS ) + Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / MDR ) ) )", "choosing": "Max( ( Max( RRSe,MUR ) - ( MUC * RRSe ) ),( Min( MUC ,RRSe ) + ( CS / CS ) ) )", "obj1": 0.3326530612244898, "obj2": 0.6632161371076013}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,Min( Const ,CRS ) )", "choosing": "Max( ( MUR / MUC ),Max( DS,MUM ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.4346938775510204, "obj2": 0.5417448806919962}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( MUR ,MLU ) ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5996673364169379}, {"determining": "Max( ( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),( Max( DDR,Const ) - Max( DDR,ARS ) ) )", "choosing": "Max( ( RRSe - ( CS / MUM ) ),( ( ( ( CS + RMSe ) / Max( DS,MUM ) ) * ( ( MUR * MUC ) * ( CS * RRSe ) ) ) + ( Max( Min( MLU ,DS ),( MUR / RMSe ) ) / ( ( MLU + MUC ) - Max( MLU,MUR ) ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.11495270994191145}, {"determining": "Max( Max( ( ARS / MDR ),Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),( ( RRS - BR ) + ( Max( Const,FirstVNF_CPU_Server ) + AMS ) ) ) ),( ( RRS - ACS ) - ( ARS / FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( MUC * RCSe ) ) * ( ( Max( MUR,MLU ) / Min( MUR ,MUM ) ) + Max( ( MLU * DS ),( MUC + RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.6307660962387454}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Max( ( DS - MLU ),Min( CS ,DS ) )", "obj1": 0.4448979591836735, "obj2": 0.5406150177557627}, {"determining": "( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ) * ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) * ( Max( CS,CS ) + ( RMSe / MUR ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.6203261845314427}, {"determining": "( ( ARS / AMS ) + ( MRS / ACS ) )", "choosing": "( ( RMSe / MLU ) / ( MLU / MLU ) )", "obj1": 0.25510204081632654, "obj2": 0.7419785657516429}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( Max( RMSe,MLU ) * ( DS + MUR ) ) )", "obj1": 0.9510204081632653, "obj2": 0.04815050482229915}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( Min( ( Min( MLU ,MUM ) + Max( DS,MUC ) ) ,Max( MUM,( MUR - RMSe ) ) ) * ( ( MUM / ( MUR - Max( ( CS / ( ( RMSe + MLU ) - MUC ) ),MUM ) ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}, {"determining": "( Min( DDR ,CRS ) + ( MDR * MRS ) )", "choosing": "Min( Min( ( ( Max( DS,RCSe ) * ( RMSe + MUR ) ) / ( DS * RMSe ) ) ,( ( RMSe / RCSe ) / ( RMSe + MUR ) ) ) ,( ( Max( DS,CS ) + ( MUC - RCSe ) ) / Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.7480252614827331}, {"determining": "( ( FirstVNF_RAM + AMS ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.642449616027766}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RMSe ,MLU ) * Min( MLU ,MUM ) ) - ( ( MUC + RMSe ) - Min( RCSe ,DS ) ) )", "obj1": 0.9040816326530612, "obj2": 0.10118634817399753}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,Min( ( FirstVNF_RAM_Server / ARS ) ,CRS ) )", "choosing": "Max( ( MUR / MUC ),( MUM + ( MUM / ( CS * ( ( RCSe - ( ( MUM * MUR ) / MLU ) ) - ( ( MUC * DS ) - ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( DS / MUM ) ) * ( ( MUC - RMSe ) / ( MUC / RRSe ) ) ) * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.04663263611104716}, {"determining": "( ( ( ( AMS + MRS ) * ( BR + MRS ) ) * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( RMSe / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.773469387755102, "obj2": 0.2310875208059936}, {"determining": "Max( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / Max( CRS,( Max( ( MRS / CRS ),MDR ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,( ( RCSe - ( DS - RMSe ) ) * ( MUC / MUR ) ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6234348040398631}, {"determining": "( ( ( AMS / CRS ) + Max( FirstVNF_Mem,CRS ) ) - ( ( ACS * MRS ) / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( Max( RRSe,MUC ),RCSe ) * ( ( MUM + ( MLU / RMSe ) ) + RMSe ) )", "obj1": 0.3346938775510204, "obj2": 0.6541632285129461}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + CRS ) ) )", "choosing": "Min( ( ( ( RMSe - RMSe ) + Max( RMSe,MUR ) ) * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.49795918367346936, "obj2": 0.4835799944698017}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe * RRSe ) + ( MLU / ( CS / RCSe ) ) )", "obj1": 0.3020408163265306, "obj2": 0.6791497111842605}, {"determining": "( Max( DDR,RRS ) / ( ( RRS / BR ) * MDR ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}, {"determining": "( ( ( Min( FirstVNF_Mem ,ACS ) - ( DDR * FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( Max( ( MRS - ACS ),( RRS * MRS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - Max( Const,( ( AMS * AMS ) - ( ( FirstVNF_RAM * RRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Min( Min( ( ( RRSe * ( RMSe - ( MUR / ( ( RCSe - MUR ) / CS ) ) ) ) / Min( DS ,CS ) ) ,( Max( MUC,RMSe ) + Min( CS ,RRSe ) ) ) ,( ( ( MUC - RCSe ) - ( RRSe - RCSe ) ) / ( Max( MLU,DS ) + Max( MUM,MUC ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.6469579654834131}, {"determining": "( ( AMS * PN ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,RMSe ) / ( MUC / ( MLU + MLU ) ) )", "obj1": 0.5979591836734693, "obj2": 0.3846484555989445}, {"determining": "( ( Min( AMS ,Const ) + Const ) + ( Max( Const,FirstVNF_Mem ) * CRS ) )", "choosing": "Min( Min( ( ( RRSe * RMSe ) / Min( DS ,CS ) ) ,( Max( MUC,RMSe ) + Min( CS ,RRSe ) ) ) ,( ( ( MUC - RCSe ) - ( RRSe - RCSe ) ) / ( ( MLU + DS ) + Max( MUM,MUC ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7468304106402575}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe * RRSe ) + ( MLU / ( CS / RCSe ) ) )", "obj1": 0.3020408163265306, "obj2": 0.6791497111842605}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "Max( ( RCSe * MLU ),( MUC + RRSe ) )", "obj1": 0.6, "obj2": 0.379901130532487}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( MLU * CS ) )", "obj1": 0.3693877551020408, "obj2": 0.6218162603270385}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( DDR - Const ) ,( Const - RRS ) ) ) - Max( Min( ( PN * AMS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),Min( ( CRS - PN ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RCSe ,Min( DS ,CS ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.09504996407024868}, {"determining": "( Max( CRS,CRS ) / ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( ( FirstVNF_RAM + AMS ),CRS ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MLU * MUM ) / MUR ) * MUR ) * ( ( RCSe * MLU ) * CS ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.09712582253336509}, {"determining": "( ( ( FirstVNF_Mem - ( Min( ( ( CRS / ARS ) - MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( Max( Max( RRSe,( MUC * RCSe ) ),DS ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.09592332498085666}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Max( ( DS - MLU ),Min( CS ,DS ) )", "obj1": 0.4448979591836735, "obj2": 0.5406150177557627}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( DDR - Const ) ,( Const - RRS ) ) ) - Max( Min( ( PN * AMS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),Min( ( CRS - PN ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RCSe ,Min( DS ,CS ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.09504996407024868}, {"determining": "( ( FirstVNF_Mem / AMS ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Min( ( RCSe + MUM ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) * MRS ) - Max( ACS,MRS ) )", "choosing": "Max( ( ( RCSe + RRSe ) * DS ),( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - FirstVNF_RAM_Server ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( DS / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) - Max( RRS,PN ) )", "choosing": "Min( ( MUC / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( MRS - DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ACS - FirstVNF_RAM_Server ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MUC ) * ( CS * MUR ) ) * ( ( CS - MUC ) / Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) / ( Min( PN ,FirstVNF_RAM ) / ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( Max( RCSe,( MUR * RMSe ) ) ,( ( CS * RCSe ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) )", "choosing": "( Max( MLU,( RCSe / MUR ) ) + ( ( CS * DS ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( DDR,DDR ),FirstVNF_Mem ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,( ( CRS - ACS ) / Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( MUR / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - RRS ) - ( ACS * AMS ) ) * Max( ( FirstVNF_Mem / BR ),( MDR / Max( MRS,ARS ) ) ) ) - Max( ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + CRS ) ),Min( ( Const / BR ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe - RMSe ) + Max( RMSe,MUR ) ) + ( Min( CS ,MLU ) * ( MUM - MUC ) ) ) * ( RRSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - RRS ) * ( ACS * MRS ) ) - ( Max( CRS,MRS ) - ( ARS + FirstVNF_CPU ) ) ) - ( ( Max( MDR,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * AMS ) ) - ( ( RRS / MDR ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( RRSe + RMSe ),( MUM - MLU ) ) + ( ( MLU - MUC ) / ( MLU + RCSe ) ) ) + ( ( Max( MUR,MUM ) + Max( MUM,MUR ) ) + ( ( RCSe * RCSe ) * ( ( ( Max( RRSe,RRSe ) * ( RCSe * Min( MUM ,RCSe ) ) ) / CS ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - ACS ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MRS ) * ( FirstVNF_CPU_Server - MDR ) ) ) * ( ( ( BR - FirstVNF_CPU_Server ) / ( BR + PN ) ) * ( ( ACS * CRS ) / ( ( FirstVNF_CPU - ARS ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( RCSe,( MUR + RCSe ) ) / CS ) ,( Min( Min( MUM ,MUR ) ,( CS - MUR ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * BR ) * Min( ACS ,AMS ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,( Max( Min( MDR ,FirstVNF_Mem ),Max( DDR,ARS ) ) * ( ( FirstVNF_Mem_Server - BR ) - ( ACS / DDR ) ) ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( MLU / MUM ) - ( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,MRS ) - Min( BR ,( FirstVNF_RAM_Server * RRS ) ) )", "choosing": "Max( ( Max( ( ( MUR - MUR ) - MUM ),MLU ) * CS ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,MRS ) - Max( ACS,MRS ) )", "choosing": "Max( ( CS * DS ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,MRS ) - Max( ACS,MRS ) )", "choosing": "Max( ( CS * DS ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - Max( ( DDR + FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ARS * ( CRS / RRS ) ),DDR ),FirstVNF_Mem ) - ( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Min( DS ,RMSe ) ,Min( MUR ,MLU ) ) * ( ( MUC / MLU ) + ( RMSe * ( DS * CS ) ) ) ) * ( ( Max( MUR,MUR ) / Min( MUR ,MUM ) ) + Max( ( MLU * DS ),( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,Min( ( Max( DDR,ARS ) - ( BR * AMS ) ) ,CRS ) )", "choosing": "( ( MLU - CS ) - ( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( RRS * CRS ) ) ,Min( Const ,CRS ) )", "choosing": "( ( MLU / ( RCSe * Max( DS,MUM ) ) ) - ( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,CRS ) - Max( RRS,PN ) )", "choosing": "Min( ( MUC / MUM ) ,( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / BR ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( ( ( RMSe / RMSe ) * ( MUM - Min( CS ,RCSe ) ) ),DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( BR * ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe + MUC ) ,Max( DS,DS ) ) / ( ( MUC - CS ) / ( RRSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( Max( RRSe,MUC ) + ( RCSe + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( DDR,DDR ),FirstVNF_Mem ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( AMS * Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ,Min( ( Min( ACS ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,( Min( ( DDR - ARS ) ,Min( FirstVNF_RAM_Server ,CRS ) ) / Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( ( ( MLU / MUM ) - ( MLU / MUC ) ) + MUC ) ) + ( ( RCSe * DS ) + ( MUR / DS ) ) ) / ( Max( ( DS * Min( CS ,( DS - ( Max( RRSe,MUR ) + RMSe ) ) ) ),Min( RMSe ,DS ) ) / Max( ( MUC + RCSe ),( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,Min( ( ACS - ACS ) ,CRS ) )", "choosing": "( ( MLU / MUM ) - Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ARS ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( Max( Max( MUM,RMSe ),( DS + MUC ) ) + ( ( RCSe * DS ) + ( MUR / DS ) ) ) / ( Max( ( RRSe - MLU ),Min( DS ,RMSe ) ) / Max( ( MUC + RCSe ),( MUC - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,( ( CRS - ACS ) / Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU / MUM ) - ( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - Max( ( DDR + FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,CRS ) ,( MRS - DDR ) )", "choosing": "( ( RMSe - DS ) / ( ( RCSe * MLU ) * ( RCSe + ( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( RRS - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,( ( MUR + MUC ) - ( Min( MLU ,( ( Max( DS,DS ) * MUC ) + RMSe ) ) + DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8905746612722424}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.5326530612244897, "obj2": 0.4200599574534396}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.6448979591836734, "obj2": 0.2972015754703844}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( ( ( AMS - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - MDR ) ) * ( RRS + Min( Const ,( MRS - MDR ) ) ) ) ,PN ) + AMS ) ,( CRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC / MUM ) ,( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) / ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( ( ( Min( MLU ,MUM ) / MUM ) * CS ) / RMSe ) * ( MUC / CS ) ) ) ) )", "obj1": 0.48775510204081635, "obj2": 0.4755694618843871}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.6285714285714286, "obj2": 0.3579549951110172}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( MUR * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.7877551020408163, "obj2": 0.15458753618627807}, {"determining": "( ( AMS - ACS ) / ( ( BR * CRS ) - ( MRS - MRS ) ) )", "choosing": "( ( Min( ( ( Min( MUM ,DS ) + ( MUR * ( MUM * MUR ) ) ) + MUR ) ,( RMSe + MUR ) ) - Min( ( MUR * DS ) ,( MUC - RRSe ) ) ) - Min( ( Min( RRSe ,MUR ) - Min( RCSe ,DS ) ) ,( Max( RRSe,MUM ) * Max( MUM,MUM ) ) ) )", "obj1": 0.7693877551020408, "obj2": 0.20501907859450777}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.8326530612244898, "obj2": 0.1082752356850979}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.5938775510204082, "obj2": 0.39206415828148433}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8365870400124407}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.736734693877551, "obj2": 0.21395854138775086}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RMSe ,MLU ) * Min( MLU ,MUM ) ) - ( ( MUC + RMSe ) - Min( RCSe ,DS ) ) )", "obj1": 0.9040816326530612, "obj2": 0.10118634817399753}, {"determining": "Max( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / Max( CRS,( ( FirstVNF_RAM + AMS ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7902710168418643}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( DS / MUM ) ) * ( ( MUC - RMSe ) / ( MUC / RRSe ) ) ) * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7142857142857143, "obj2": 0.24018070953300807}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( BR,CRS ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUM * RMSe ) + Max( RMSe,MUM ) )", "obj1": 0.9816326530612245, "obj2": 0.008289971673011083}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * CS ) )", "obj1": 0.7, "obj2": 0.2529388974916861}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * CS ) )", "obj1": 0.7, "obj2": 0.2529388974916861}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC * RRSe ) + ( CS / CS ) )", "obj1": 0.46938775510204084, "obj2": 0.4914433293935204}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe * RRSe ) + ( MLU / ( CS / Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( ( RCSe / MUM ) + ( CS - MUC ) ) ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8680814566720377}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.8020408163265306, "obj2": 0.12732782008807805}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * CS ) )", "obj1": 0.9693877551020408, "obj2": 0.03721439906442645}, {"determining": "( ( FirstVNF_Mem + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( FirstVNF_CPU / RRS ) )", "choosing": "( ( DS / MUM ) / Max( MUR,( ( MUM - RCSe ) / CS ) ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( MUM / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.22653061224489796, "obj2": 0.7509165061698968}, {"determining": "( ( FirstVNF_RAM + AMS ) / ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) * ( CRS / FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU / RCSe ) / DS ) / ( Min( Max( MLU,MLU ) ,MLU ) * ( Max( ( CS * DS ),( MUM - MUR ) ) * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8629472965757183}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) - ( Const / ( RRS * RRS ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) * Min( CS ,MUR ) ),( Max( RCSe,RMSe ) + ( MUC * RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 0.4, "obj2": 0.5688550143459145}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( ( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.763450346876002}, {"determining": "( ( AMS * ( MDR / DDR ) ) + ( MRS - ( DDR / MDR ) ) )", "choosing": "( ( MUR / ( Min( DS ,MUC ) - ( CS / ( MUM / MUR ) ) ) ) + Max( DS,RRSe ) )", "obj1": 0.610204081632653, "obj2": 0.3755311918608722}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,Min( ( FirstVNF_RAM_Server / ARS ) ,CRS ) )", "choosing": "Max( ( MUR / MUC ),( MUM + ( MUM / ( CS * ( ( RCSe - ( ( MUM * MUR ) / MLU ) ) - ( ( MUC * DS ) - ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "Max( Max( ( ARS / MDR ),Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ),( ( RRS - BR ) + ( Max( Const,FirstVNF_CPU_Server ) + AMS ) ) ) ),( ( RRS - ACS ) - ( ARS / FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( MUC * RCSe ) ) * ( ( Max( MUR,MLU ) / Min( MUR ,MUM ) ) + Max( ( MLU * DS ),( MUC + RRSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.6307660962387454}, {"determining": "( ( Min( ACS ,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( CRS + BR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8031186920215881}, {"determining": "( ( BR * CRS ) - ( MRS - MRS ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / MUR ) / ( MLU / Max( ( ( MUM * MUR ) * ( MUC * ( MUM / ( MUC / MLU ) ) ) ),Max( MUR,( MUR / MUM ) ) ) ) ) )", "obj1": 0.45510204081632655, "obj2": 0.5013160034157592}, {"determining": "( ( FirstVNF_RAM + AMS ) / ( ( CRS * DDR ) * Min( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( ( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.763450346876002}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Max( ( DS - MLU ),Min( CS ,DS ) )", "obj1": 0.4448979591836735, "obj2": 0.5406150177557627}, {"determining": "Max( ( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ),Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Max( ( RRSe - ( CS / MUM ) ),( ( DS - MLU ) + ( Max( Min( MLU ,DS ),( MUR / RMSe ) ) / ( ( MLU + MUC ) - Max( MLU,MUR ) ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6888431462480467}, {"determining": "Min( Min( FirstVNF_Mem ,( FirstVNF_RAM - ( PN + MRS ) ) ) ,Min( Const ,CRS ) )", "choosing": "Max( ( MUR / MUC ),CS )", "obj1": 0.3020408163265306, "obj2": 0.6683456332596377}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8031186920215881}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7986696446525715}, {"determining": "Max( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / Max( CRS,( Max( ( MRS / CRS ),MDR ) - Max( MRS,ARS ) ) ) ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,( ( RCSe - ( DS - RMSe ) ) * ( MUC / MUR ) ) ) ) + ( Min( RCSe ,( ( RMSe - RMSe ) + Max( RMSe,MUR ) ) ) * Max( MUR,RMSe ) ) )", "obj1": 0.373469387755102, "obj2": 0.6068131833304611}, {"determining": "( Min( FirstVNF_Mem ,MRS ) - Min( BR ,( FirstVNF_RAM_Server * RRS ) ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RRSe ) )", "obj1": 0.3346938775510204, "obj2": 0.6506973474147728}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( ( ( RRSe + DS ) + ( RCSe + MUM ) ) + ( Min( RCSe ,MUC ) / ( RRSe / CS ) ) ) + ( ( ( MUM * CS ) - Max( RMSe,MUM ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5968612961515788}, {"determining": "( ( ( AMS * MRS ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Min( CS ,MUR ),Max( MUM,RRSe ) ),( Max( RRSe,MUC ) + ( ( ( RRSe / Max( RRSe,Max( RCSe,RMSe ) ) ) * DS ) + RCSe ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RCSe / RMSe ) ) ) )", "obj1": 0.4, "obj2": 0.5688550143459145}, {"determining": "( Min( DDR ,CRS ) + ( MDR * MRS ) )", "choosing": "Min( Min( ( ( Max( DS,RCSe ) * ( RMSe + MUR ) ) / ( DS * RMSe ) ) ,( ( RMSe / RCSe ) / ( RMSe + MUR ) ) ) ,( ( Max( DS,CS ) + ( MUC - RCSe ) ) / Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.7480252614827331}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC * RRSe ) + ( ( ( MUM * CS ) - Max( RMSe,MUM ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.44693877551020406, "obj2": 0.5167704521799485}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RMSe ) )", "obj1": 0.42857142857142855, "obj2": 0.5483241654188318}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,Min( Const ,CRS ) )", "choosing": "Max( ( MUR / MUC ),Max( DS,MUM ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "Max( ( Min( ( AMS + AMS ) ,Max( RRS,FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( DDR * BR ) ,Const ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( MUM + MLU ) ) / ( ( DS - MUC ) / ( MUR / CS ) ) ) - Min( Min( MUM ,MUR ) ,Min( Max( ( ( MLU / Min( ( MLU + MLU ) ,( RCSe + DS ) ) ) * Max( DS,( MUM + Max( CS,RCSe ) ) ) ),MUM ) ,RRSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.07901603916828999}, {"determining": "Max( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / Max( CRS,( Max( ( MRS / CRS ),MDR ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,( ( RCSe - ( DS - RMSe ) ) * ( MUC / MUR ) ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.3224489795918367, "obj2": 0.65900337503724}, {"determining": "Max( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / Max( CRS,( Max( ( MRS / CRS ),MDR ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,( ( RCSe - ( DS - RMSe ) ) * ( MUC / MUR ) ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6234348040398631}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( Min( ( Min( MLU ,MUM ) + Max( DS,MUC ) ) ,Max( MUM,( MUR - RMSe ) ) ) * ( ( MUM / ( MUR - Max( ( CS / ( ( RMSe + MLU ) - MUC ) ),MUM ) ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}, {"determining": "Min( Max( ( ( Const * BR ) * Min( ACS ,AMS ) ),( MDR * ( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * BR ) ) ) ) ,RRS )", "choosing": "( ( Max( DS,( DS / ( ( RRSe * ( MUR + MUC ) ) * RRSe ) ) ) - CS ) / Min( RRSe ,RMSe ) )", "obj1": 0.30612244897959184, "obj2": 0.6660206105262444}, {"determining": "( ( Min( AMS ,Const ) + Const ) + ( Max( Const,FirstVNF_Mem ) * CRS ) )", "choosing": "Min( Min( ( ( RRSe * RMSe ) / Min( DS ,CS ) ) ,( Max( MUC,RMSe ) + Min( CS ,RRSe ) ) ) ,( ( ( MUC - RCSe ) - ( RRSe - RCSe ) ) / ( ( MLU + DS ) + Max( MUM,MUC ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7468304106402575}, {"determining": "( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.4346938775510204, "obj2": 0.5417448806919962}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / MUR ) / ( MLU / MLU ) ) )", "obj1": 0.45102040816326533, "obj2": 0.5081165926654604}, {"determining": "( Max( DDR,RRS ) / ( ( RRS / BR ) * MDR ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6920569950663137}, {"determining": "( ( FirstVNF_RAM + AMS ) / ( Min( Max( Min( Min( FirstVNF_Mem ,RRS ) ,( ACS - ACS ) ),( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( BR * MDR ) ) ) ,Min( ( Min( PN ,FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ,( ( CRS - ACS ) / Max( ARS,FirstVNF_CPU ) ) ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( DS + MUR ) / MUM ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.32040816326530613, "obj2": 0.6617433643386829}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( MLU * CS ) )", "obj1": 0.3693877551020408, "obj2": 0.6218162603270385}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) - Const ) ,( Const - RRS ) ) ) - Max( Min( ( PN * AMS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),Min( ( CRS - PN ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( ( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( CS * MLU ) ) + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.9306122448979591, "obj2": 0.07338079770126346}, {"determining": "Max( ( Min( ( ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_Mem ) ) + FirstVNF_RAM ) * FirstVNF_Mem ) ,( AMS + AMS ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ),Min( ( Min( Min( Max( AMS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( Min( ( CS * Min( RCSe ,( RCSe * MLU ) ) ) ,MUR ) + DS ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7310004858233291}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.8163265306122449, "obj2": 0.12269350447324485}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.8122448979591836, "obj2": 0.12653233483242252}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MLU + MUC ) - Max( MLU,MUR ) ) ) + Max( RMSe,MUR ) ) * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.9612244897959183, "obj2": 0.03799141503907586}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.8163265306122449, "obj2": 0.12269350447324485}, {"determining": "Min( ( MRS + BR ) ,( CRS / FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}, {"determining": "( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6920569950663137}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,CRS ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( MUM * ( Max( RMSe,MLU ) * ( DS + MUR ) ) )", "obj1": 0.9510204081632653, "obj2": 0.045200174803541694}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - ( ( CRS * DDR ) * Min( RRS ,BR ) ) ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( Max( RMSe,MLU ) * ( DS + ( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.05346367911640508}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( DDR - Const ) ,( Const - RRS ) ) ) - Max( Min( ( PN * AMS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),Min( ( CRS - PN ) ,ACS ) ) )", "choosing": "Max( Min( RCSe ,Min( DS ,CS ) ),( ( MUR - MLU ) - ( MUM - MUR ) ) )", "obj1": 0.9122448979591836, "obj2": 0.09273179195140446}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Min( ACS ,FirstVNF_Mem_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * RMSe ) * ( ( MUC - RMSe ) / ( MUC / RRSe ) ) ) * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.04366955354276716}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe / MLU ) / ( MLU / MLU ) )", "obj1": 0.9346938775510204, "obj2": 0.06479553446663903}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "Max( ( RCSe * MLU ),( MUC + RRSe ) )", "obj1": 0.6, "obj2": 0.379901130532487}, {"determining": "Max( ( FirstVNF_RAM * ARS ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( ( AMS / FirstVNF_RAM ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,ARS ) ) ) )", "choosing": "( CS * ( ( ( ( MUM * RCSe ) / ( RCSe / ( Min( Max( MLU,RMSe ) ,MUC ) - MUR ) ) ) + ( ( ( MUR * RMSe ) * MUC ) - CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.08264582922657213}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( MUR ,MLU ) ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5996673364169379}, {"determining": "( ( FirstVNF_RAM + AMS ) / ( ( CRS * DDR ) * Min( ACS ,Min( MRS ,Max( Const,PN ) ) ) ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) + ( Max( MUR,RMSe ) + Min( RCSe ,RMSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.642449616027766}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.6081632653061224, "obj2": 0.37836935361980806}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) - Const ) ,( Const - RRS ) ) ) - Max( Min( ( PN * AMS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),Min( ( CRS - PN ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.0548791636210192}, {"determining": "( ( FirstVNF_RAM + AMS ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.642449616027766}, {"determining": "( ( Min( ACS ,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( CRS + BR ) )", "choosing": "( ( RRSe + ( ( MLU + RRSe ) - ( MUC * MLU ) ) ) * ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) * ( Max( CS,RCSe ) + ( MUR / RMSe ) ) ) )", "obj1": 0.38571428571428573, "obj2": 0.5971229467430844}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( MLU * MUM ) / MUR ) * MUR ) * ( ( RCSe * MLU ) * CS ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.06876466956690253}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - FirstVNF_CPU ) / ( CRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU * RMSe ) ,( ( ( ( RRSe + DS ) + ( RCSe + MUM ) ) + ( Min( RCSe ,MUC ) / ( RRSe / CS ) ) ) + ( ( ( MUM * CS ) - Max( RMSe,MUM ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5968612961515788}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) - Const ) ,( Const - RRS ) ) ) - Max( Min( ( PN * AMS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),Min( ( CRS - PN ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.9408163265306122, "obj2": 0.05966042837897562}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC * RRSe ) + ( ( ( MUM * CS ) - Max( RMSe,MUM ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.44693877551020406, "obj2": 0.5167704521799485}, {"determining": "( ( ( Min( FirstVNF_Mem ,ACS ) - ( DDR * FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_CPU_Server / AMS ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( Max( ( MRS - ACS ),( RRS * MRS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - Max( Const,( ( AMS * AMS ) - ( ( FirstVNF_RAM * RRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Min( Min( ( ( RRSe * ( RMSe - ( MUR / ( ( RCSe - MUR ) / CS ) ) ) ) / Min( DS ,CS ) ) ,( Max( MUC,RMSe ) + Min( CS ,RRSe ) ) ) ,( ( ( MUC - RCSe ) - ( RRSe - RCSe ) ) / ( Max( MLU,DS ) + Max( MUM,MUC ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.6469579654834131}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,RMSe ) / ( MUM / MUC ) )", "obj1": 0.5979591836734693, "obj2": 0.3846484555989445}, {"determining": "( ( AMS * PN ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,RMSe ) / ( MUC / ( MLU + MLU ) ) )", "obj1": 0.5979591836734693, "obj2": 0.3846484555989445}, {"determining": "( ( ( FirstVNF_Mem - ( Min( ( ( CRS / ARS ) - MRS ) ,FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( Max( Max( RRSe,( MUC * RCSe ) ),DS ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.09592332498085666}, {"determining": "( ( ( PN / FirstVNF_Mem_Server ) / ( MRS - BR ) ) + Min( RRS ,( FirstVNF_RAM + PN ) ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.9061224489795918, "obj2": 0.09936625843372815}, {"determining": "Max( ( Min( ( RRS * FirstVNF_Mem ) ,( AMS + AMS ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( Min( Min( Max( AMS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7310004858233291}, {"determining": "( Max( CRS,CRS ) / ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( ( FirstVNF_RAM + AMS ),CRS ) ) ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MLU * MUM ) / MUR ) * MUR ) * ( ( RCSe * MLU ) * CS ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.09712582253336509}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( ( ( ( Min( PN ,FirstVNF_RAM ) / ( MDR + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) - Const ) ,( Const - RRS ) ) ) - Max( Min( ( PN * AMS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),Min( ( CRS - PN ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( MUR * RMSe ) )", "obj1": 0.9408163265306122, "obj2": 0.05966042837897562}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( MUR ,MLU ) ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5996673364169379}, {"determining": "( ( ( Min( FirstVNF_Mem ,ACS ) - ( DDR * FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_RAM_Server + BR ) ) ) - Min( Max( ( ACS - MRS ),( RRS * MRS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - Max( Const,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( ( RRSe * RMSe ) / Min( DS ,CS ) ) ,( Max( MUC,RMSe ) + Min( CS ,RRSe ) ) ) ,( ( ( MUC - RCSe ) - ( RRSe - RCSe ) ) / ( ( MLU + DS ) + Max( MUM,MUC ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.6469579654834131}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RRSe ,MLU ),( MLU * CS ) )", "obj1": 0.3693877551020408, "obj2": 0.6218162603270385}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.9142857142857143, "obj2": 0.08264582922657213}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( ARS / AMS ) + ( MRS / ACS ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8012164573536997}, {"determining": "( ( ( ( PN - RRS ) * ( ACS * MRS ) ) - ( Max( CRS,MRS ) - ( ARS + FirstVNF_CPU ) ) ) - ( ( Max( MDR,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * AMS ) ) - ( ( RRS / MDR ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( ( RRSe * RMSe ) / Min( DS ,CS ) ) ,( Max( MUC,RMSe ) + Min( CS ,RRSe ) ) ) ,( ( ( MUC - RCSe ) - ( RRSe - RCSe ) ) / ( ( MLU + DS ) + Max( MUM,MUC ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7468304106402575}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "Max( ( DS - MLU ),Min( CS ,DS ) )", "obj1": 0.4448979591836735, "obj2": 0.5406150177557627}, {"determining": "Min( ( DDR - ARS ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( MLU / MUM ) - ( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( BR * CRS ) - ( FirstVNF_CPU_Server - MRS ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / MUR ) / ( MLU / Max( ( ( MUM * MUR ) * ( MUC * ( MUM / ( MUC / MLU ) ) ) ),Min( RMSe ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - Max( ( DDR + FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( RRS - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,( ( MUR + MUC ) - ( Min( MLU ,( ( Max( DS,DS ) * MUC ) + RMSe ) ) + DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8905746612722424}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7755102040816326, "obj2": 0.14065821751636645}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.18924540824415473}, {"determining": "Min( Max( Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( DS * MLU ) )", "obj1": 0.8551020408163266, "obj2": 0.08964224579489331}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),MDR ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * ( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.32900851938030523}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.6448979591836734, "obj2": 0.2972015754703844}, {"determining": "( ( AMS * MRS ) - Max( MDR,Max( Max( ( FirstVNF_RAM_Server / ( MDR / ( ( FirstVNF_CPU_Server / Const ) / FirstVNF_CPU ) ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * RCSe ) * Max( CS,( ( MUM / MUR ) * RMSe ) ) )", "obj1": 0.6877551020408164, "obj2": 0.23599570945904125}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) - ( RCSe + RCSe ) )", "obj1": 0.5326530612244897, "obj2": 0.4071585800598348}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( ( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) ) ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( RRSe + ( ( MLU + RRSe ) - ( MUC * MLU ) ) ) * ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) * ( Max( CS,RCSe ) + ( MUR / RMSe ) ) ) )", "obj1": 0.5612244897959183, "obj2": 0.4019991485394116}, {"determining": "( ( AMS * PN ) + ( Max( Min( Const ,( ( AMS / RRS ) - CRS ) ),CRS ) + MRS ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,( ( RCSe - MUR ) * Min( MUM ,MLU ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.5183673469387755, "obj2": 0.44226714498043646}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( DDR - Const ) ,( Const - RRS ) ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( MLU * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.6591836734693878, "obj2": 0.2766070752942631}, {"determining": "( ( ( ( Const / DDR ) - Max( MDR,Max( Max( Max( ( RRS + ACS ),( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7204081632653061, "obj2": 0.21596426789597029}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( BR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,RMSe ) * ( CS * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.6795918367346939, "obj2": 0.2586446020789277}, {"determining": "Max( ( FirstVNF_RAM * ARS ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( ( AMS / FirstVNF_RAM ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,ARS ) ) ) )", "choosing": "( CS * ( ( ( ( MUM * RCSe ) / ( RCSe / ( Min( Max( MLU,RMSe ) ,MUC ) - MUR ) ) ) + ( ( ( MUR * RMSe ) * MUC ) - CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.08264582922657213}, {"determining": "Max( Max( AMS,Max( Const,FirstVNF_Mem ) ),( Max( CRS,( ( FirstVNF_RAM + AMS ) / ( ( AMS / DDR ) * ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem + Min( RRS ,( ( Max( MDR,AMS ) * ACS ) - ARS ) ) ) ) )", "choosing": "( ( MUC + MUR ) + ( RRSe - ( ( MUM + MUM ) * ( MUC * ( CS + Max( ( ( MLU * DS ) / Max( DS,MUM ) ),MUC ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7823636585236952}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( ( ( MUR / RRSe ) + Max( DS,RRSe ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC * RRSe ) + ( CS / CS ) )", "obj1": 0.46938775510204084, "obj2": 0.4914433293935204}, {"determining": "( ( Const + Min( Max( FirstVNF_CPU,( ( MRS * FirstVNF_CPU_Server ) + ARS ) ) ,BR ) ) + ( AMS * PN ) )", "choosing": "( ( CS - MUR ) / ( ( RMSe / MUM ) * MUM ) )", "obj1": 0.5897959183673469, "obj2": 0.38471094232510133}, {"determining": "Max( Min( ( Const + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / ( ARS + Const ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( MLU ,MLU ) * ( Min( MUM ,CS ) * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7885954498039875}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - Const ) ) ) )", "choosing": "( ( CS + DS ) + ( ( ( MUM * CS ) - Max( RMSe,MUM ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.4536483308962193}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS - MLU ),Min( CS ,DS ) )", "obj1": 0.9673469387755103, "obj2": 0.0317366229464556}, {"determining": "( ( RRS - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) - Min( ( AMS * PN ) ,( ACS * ARS ) ) )", "choosing": "( Min( RRSe ,( CS / DS ) ) + ( MLU / Max( CS,Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( ( RCSe / MUM ) + ( CS - MUC ) ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8778856038591117}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe / MLU ) / ( MLU / MLU ) )", "obj1": 0.3877551020408163, "obj2": 0.574378248685384}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( ( ( AMS - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - MDR ) ) * ( RRS + Min( Const ,( MRS - MDR ) ) ) ) ,PN ) + AMS ) ,( CRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC / MUM ) ,( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) / ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( ( ( Min( MLU ,MUM ) / MUM ) * CS ) / RMSe ) * ( MUC / CS ) ) ) ) )", "obj1": 0.48775510204081635, "obj2": 0.4755694618843871}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.6224489795918368, "obj2": 0.36214446984703264}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - CS ) / Min( RRSe ,RMSe ) )", "obj1": 0.4, "obj2": 0.5608468715473772}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8365870400124407}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.8367346938775511, "obj2": 0.1034093149828456}, {"determining": "( ( FirstVNF_RAM + AMS ) / ( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU / RCSe ) / DS ) / ( Min( Max( MLU,MLU ) ,MLU ) * ( Max( ( CS * DS ),( MUM - MUR ) ) * MLU ) ) )", "obj1": 0.1326530612244898, "obj2": 0.846842653302097}, {"determining": "( ( DDR / Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ARS * ( AMS * FirstVNF_CPU ) ) ) ) - Max( Const,FirstVNF_CPU ) ) ) ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - Max( CS,( ( ( RMSe / RMSe ) + RCSe ) - DS ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Max( RRSe,MUC ) + Max( MLU,RRSe ) ) ) )", "obj1": 0.8, "obj2": 0.12855271838316717}, {"determining": "( Min( ( MDR - MRS ) ,PN ) + ( MDR * MRS ) )", "choosing": "Min( ( Max( MUC,MLU ) / ( RCSe - RRSe ) ) ,( ( Max( DS,CS ) + ( MUC - RCSe ) ) / Min( Min( ( MUM + ( CS - RMSe ) ) ,( ( MUR + Max( CS,( MUM / CS ) ) ) / Max( MLU,( RCSe * ( RCSe * RMSe ) ) ) ) ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.23265306122448978, "obj2": 0.7446039066418291}, {"determining": "( Min( ( Min( CRS ,( BR / RRS ) ) + AMS ) ,( CRS + RRS ) ) - Min( ( ( DDR + MRS ) / FirstVNF_Mem_Server ) ,CRS ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,( MLU * MUC ) ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / ( ( MUR - ( Max( ( MUR + ( RMSe + MUM ) ),CS ) - Max( DS,DS ) ) ) + ( MUM / ( DS / ( MUR * ( RRSe / CS ) ) ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.46400684002469383}, {"determining": "( ( FirstVNF_RAM + AMS ) / ( ( CRS * ( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) ) ) * Min( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( Min( RRSe ,MLU ) * RMSe ) ) )", "obj1": 0.3306122448979592, "obj2": 0.6443949159523092}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUM - ( Max( MUR,MUM ) / ( MLU - MLU ) ) ) + ( ( ( DS + RCSe ) + ( CS - RCSe ) ) + ( ( RRSe + MUM ) - ( RCSe + MUR ) ) ) )", "obj1": 0.9816326530612245, "obj2": 0.008289971673011083}, {"determining": "( ( ( MDR / FirstVNF_RAM_Server ) * PN ) * ( Max( ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU - ( FirstVNF_CPU / MDR ) ) ) + PN ),Min( BR ,PN ) ) / ( ( MDR - Const ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / MUR ) + ( MLU / Max( Max( MUR,( MUR / MUM ) ),Min( CS ,( CS / ( ( MUC / MUR ) / Max( MLU,RCSe ) ) ) ) ) ) ) )", "obj1": 0.38571428571428573, "obj2": 0.5955735187654245}, {"determining": "( ( BR * CRS ) - ( MRS - MRS ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / MUR ) / ( MLU / Max( ( ( MUM * MUR ) * ( MUC * ( MUM / ( MUC / MLU ) ) ) ),Max( MUR,( MUR / MUM ) ) ) ) ) )", "obj1": 0.45510204081632655, "obj2": 0.5013160034157592}, {"determining": "Min( Min( FirstVNF_Mem_Server ,DDR ) ,( ARS + FirstVNF_RAM_Server ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( ( ( ( Max( DS,RMSe ) * MUM ) * MUR ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.16326530612244897, "obj2": 0.8057913386959418}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / RRS ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,( RCSe - RCSe ) ) * ( MUR * RMSe ) ) )", "obj1": 0.27755102040816326, "obj2": 0.7017760604516889}, {"determining": "Max( ( Min( ( RRS * FirstVNF_Mem ) ,( AMS + AMS ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( Min( Min( Max( AMS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( ( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.7360458432949539}, {"determining": "( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( ( ( FirstVNF_RAM + AMS ) / ( ( CRS * DDR ) * Min( ACS ,Min( MRS ,Max( Const,PN ) ) ) ) ),CRS ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.5208967817857754}, {"determining": "Min( Max( RRS,( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( MUR - CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.7062929231205873}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MUM,( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( DS,MUC ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.21314096611509958}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "Max( ( DS - RCSe ),Min( CS ,DS ) )", "obj1": 0.43673469387755104, "obj2": 0.5396684453465463}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,( ( RCSe - ( DS - RMSe ) ) * ( MUC / MUR ) ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6359704327027329}, {"determining": "( ( ARS / AMS ) + ( MRS / ACS ) )", "choosing": "( ( Max( DS,( DS / ( ( RRSe * ( MUR + MUC ) ) * RRSe ) ) ) - CS ) / Min( RRSe ,RMSe ) )", "obj1": 0.3653061224489796, "obj2": 0.6137034343462232}, {"determining": "Max( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / Max( CRS,( Max( AMS,MDR ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,( ( RCSe - ( DS - RMSe ) ) * RRSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.3551020408163265, "obj2": 0.6171178705111484}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.7503619824908474}, {"determining": "Max( ( Min( ( AMS + AMS ) ,Max( RRS,FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( DDR * BR ) ,Const ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( ( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.763450346876002}, {"determining": "( ( ( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) ) * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) + Max( DS,RRSe ) )", "obj1": 0.41020408163265304, "obj2": 0.5542711797496362}, {"determining": "( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( Max( RCSe,MLU ) * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.42857142857142855, "obj2": 0.5459068906218983}, {"determining": "( ( FirstVNF_Mem + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( FirstVNF_CPU / RRS ) )", "choosing": "( ( DS / MUM ) / Max( MUR,( ( MUM - RCSe ) / CS ) ) )", "obj1": 0.41836734693877553, "obj2": 0.552221933488188}, {"determining": "Max( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / Max( CRS,( Max( ( MRS / CRS ),MDR ) - Max( MRS,ARS ) ) ) ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,( ( RCSe - ( DS - RMSe ) ) * ( MUC / MUR ) ) ) ) + ( Min( RCSe ,( ( RMSe - RMSe ) + Max( RMSe,MUR ) ) ) * Max( MUR,RMSe ) ) )", "obj1": 0.373469387755102, "obj2": 0.6068131833304611}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.6163265306122448, "obj2": 0.36341261036512784}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( Min( ( Min( MLU ,MUM ) + Max( DS,MUC ) ) ,Max( MUM,( MUR - RMSe ) ) ) * ( ( MUM / ( MUR - Max( ( CS / ( ( RMSe + MLU ) - MUC ) ),MUM ) ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}, {"determining": "Min( Min( Max( ( Min( ( RRS - FirstVNF_Mem ) ,Max( MDR,FirstVNF_CPU_Server ) ) + Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( BR + PN ) ) ),Min( ( Min( Min( Max( ARS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) ) ,( FirstVNF_RAM - ( PN + MRS ) ) ) ,Min( Const ,CRS ) )", "choosing": "Max( ( MUR / MUC ),( Min( RRSe ,MUC ) * ( Min( ( ( RCSe * MUR ) / ( MUC / ( MUR / Min( MUM ,MUM ) ) ) ) ,Max( CS,DS ) ) - Max( ( DS / RMSe ),( DS + CS ) ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.678577374253208}, {"determining": "( ( Min( ACS ,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( CRS + BR ) )", "choosing": "Max( ( RRSe - ( CS / MUM ) ),( ( DS - MLU ) + ( Max( Min( MLU ,DS ),( MUR / RMSe ) ) / ( ( MLU + MUC ) - Max( MLU,MUR ) ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6562323534413822}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / MUR ) / ( MLU / MLU ) ) )", "obj1": 0.45102040816326533, "obj2": 0.5081165926654604}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.826530612244898, "obj2": 0.11056963650270665}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.736734693877551, "obj2": 0.21395854138775086}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( ( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) ) - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Min( MUC ,MUR ) ) )", "obj1": 0.9306122448979591, "obj2": 0.06625754435966559}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( PN * FirstVNF_Mem ) ) - ( RRS - ACS ) ),( AMS * AMS ) )", "choosing": "( ( MUR - MLU ) / ( CS - ( ( Max( Max( DS,( ( CS + RRSe ) * ( RRSe * RMSe ) ) ),Min( ( MLU + MLU ) ,RCSe ) ) * MUR ) - RMSe ) ) )", "obj1": 0.9224489795918367, "obj2": 0.07525547544594248}, {"determining": "( ( Const / DDR ) - Max( MDR,Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( MUR ,MLU ) ) / MUR ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.6271988445586956}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.8204081632653061, "obj2": 0.11922383846166074}, {"determining": "( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6619984261185771}, {"determining": "( Max( DDR,RRS ) / ( ( RRS / BR ) * MDR ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6920569950663137}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( BR,CRS ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUM * RMSe ) + Max( RMSe,MUM ) )", "obj1": 0.9816326530612245, "obj2": 0.008289971673011083}, {"determining": "Min( Max( ( DDR - MRS ),RRS ) ,( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) - ( CS * RCSe ) ) * Max( RCSe,( Min( MLU ,( RCSe - MUM ) ) * ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) ) ) )", "obj1": 0.8122448979591836, "obj2": 0.12323510164357124}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - ( ( CRS * DDR ) * Min( RRS ,BR ) ) ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( Max( RMSe,MLU ) * ( DS + ( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.05346367911640508}, {"determining": "Min( Min( FirstVNF_Mem ,( AMS * PN ) ) ,Min( Const ,CRS ) )", "choosing": "Max( ( MUR / MUC ),Max( MUR,MUM ) )", "obj1": 0.2938775510204082, "obj2": 0.6849934060448986}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.8020408163265306, "obj2": 0.12732782008807805}, {"determining": "Max( ( Min( Min( RRS ,BR ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - ( MLU * RCSe ) ) )", "obj1": 0.9571428571428572, "obj2": 0.04195223394313232}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.8326530612244898, "obj2": 0.1082752356850979}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( ( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.763450346876002}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( ( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.3489795918367347, "obj2": 0.6337716987654042}, {"determining": "Max( ( Min( ( ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_Mem ) ) + FirstVNF_RAM ) * FirstVNF_Mem ) ,( AMS + AMS ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ),Min( ( Min( Min( Max( AMS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( Min( ( CS * Min( RCSe ,( RCSe * MLU ) ) ) ,MUR ) + DS ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7310004858233291}, {"determining": "( ( Min( ACS ,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + ( CRS + ( CRS + RRS ) ) )", "choosing": "( ( RRSe + ( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) ) * ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) * ( Max( CS,RCSe ) + ( MUR / RMSe ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.6583710783963462}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( MUR ,MLU ) ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5996673364169379}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( BR,CRS ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUM * RMSe ) + Max( RMSe,MUM ) )", "obj1": 0.9938775510204082, "obj2": 0.002896105048399942}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,CRS ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( MUM * ( Max( RMSe,MLU ) * ( DS + MUR ) ) )", "obj1": 0.9510204081632653, "obj2": 0.045200174803541694}, {"determining": "Min( Max( DDR,MRS ) ,( CRS * FirstVNF_RAM ) )", "choosing": "Max( ( MUR / MUC ),CS )", "obj1": 0.3020408163265306, "obj2": 0.6683456332596377}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) - Const ) ,( Const - RRS ) ) ) - Max( Min( ( PN * AMS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ),Min( ( CRS - PN ) ,Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.0548791636210192}, {"determining": "( ( AMS * ( MDR / DDR ) ) + ( MRS - ( DDR / MDR ) ) )", "choosing": "( ( MUR / ( Min( DS ,MUC ) - ( CS / ( MUM / MUR ) ) ) ) + Max( DS,RRSe ) )", "obj1": 0.610204081632653, "obj2": 0.3755311918608722}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.7503619824908474}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe / MLU ) / ( MLU / MLU ) )", "obj1": 0.9346938775510204, "obj2": 0.06439759820638732}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.6, "obj2": 0.379901130532487}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,RMSe ) / ( MUM / MUC ) )", "obj1": 0.5979591836734693, "obj2": 0.3846484555989445}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUC * RRSe ) + ( ( ( MUM * CS ) - Max( RMSe,MUM ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.44693877551020406, "obj2": 0.5167704521799485}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * BR ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6660206105262444}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,Min( ( FirstVNF_RAM_Server / ARS ) ,CRS ) )", "choosing": "Max( ( MUR / MUC ),( MUM + ( MUM / ( CS * ( ( RCSe - ( ( MUM * MUR ) / MLU ) ) - ( ( MUC * DS ) - ( MUR - MUR ) ) ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.706009053494686}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7986696446525715}, {"determining": "( ( FirstVNF_RAM + AMS ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6920569950663137}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( Max( MUR,MUM ) + ( ( ( DS + RCSe ) + ( CS - RCSe ) ) + ( ( RRSe + RCSe ) - ( RCSe + MUR ) ) ) )", "obj1": 0.9938775510204082, "obj2": 0.002896105048399942}, {"determining": "Max( ( Min( ( RRS * FirstVNF_Mem ) ,( AMS + AMS ) ) - Min( ( BR + PN ) ,Max( Max( FirstVNF_Mem_Server,DDR ),Max( ARS,FirstVNF_RAM ) ) ) ),Min( ( Min( Min( Max( AMS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( RCSe * ( Min( Max( ( MLU + ( MUM - MLU ) ),( ( MUM / MUC ) - DS ) ) ,Max( RCSe,( Min( RMSe ,DS ) * ( MLU / MLU ) ) ) ) * ( Min( RMSe ,RMSe ) + MUR ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7310004858233291}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.6081632653061224, "obj2": 0.37836935361980806}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MLU + MUC ) - Max( MLU,MUR ) ) ) + Max( RMSe,MUR ) ) * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.9612244897959183, "obj2": 0.03799141503907586}, {"determining": "Min( ( MRS + BR ) ,( CRS / FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MLU + MUC ) - Max( MLU,MUR ) ) ) + Max( RMSe,MUR ) ) * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.9612244897959183, "obj2": 0.03799141503907586}], "5": [{"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - Max( ( DDR + FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * CRS ) - ( FirstVNF_CPU_Server - MRS ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / MUR ) / ( MLU / Max( ( ( MUM * MUR ) * ( MUC * ( MUM / ( MUC / MLU ) ) ) ),Min( RMSe ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) - ( RRS - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,( ( MUR + MUC ) - ( Min( MLU ,( ( Max( DS,DS ) * MUC ) + RMSe ) ) + DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8905746612722424}, {"determining": "( ( ( ( MDR - ( FirstVNF_CPU_Server - ( Const + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,RRS ) ) ) ) + ( Const * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUR ) ),( ( MUC / MLU ) + Max( RRSe,( Max( DS,( MUR + ( MLU * CS ) ) ) - RMSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.42448979591836733, "obj2": 0.5167882373484904}, {"determining": "( ( ( ( ( FirstVNF_Mem - Min( ( BR - ( ARS * FirstVNF_RAM_Server ) ) ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) ) * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / ( Max( MLU,DS ) + RRSe ) ) + Max( RRSe,DS ) )", "obj1": 0.39387755102040817, "obj2": 0.5503623458311926}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.6448979591836734, "obj2": 0.2972015754703844}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( ( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) ) ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( RRSe + ( ( MLU + RRSe ) - ( MUC * MLU ) ) ) * ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) * ( Max( CS,RCSe ) + ( MUR / RMSe ) ) ) )", "obj1": 0.5612244897959183, "obj2": 0.4019991485394116}, {"determining": "( Min( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_CPU ) ) ,( ( ( Const / DDR ) - ( ( DDR * ARS ) + FirstVNF_Mem_Server ) ) - ACS ) ) ,DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe * ( MUC * ( MUC - DS ) ) ) / MUC ) - Max( Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ),( ( MUM - RMSe ) * ( MLU / MLU ) ) ) )", "obj1": 0.8795918367346939, "obj2": 0.0759440003080843}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ( ARS / FirstVNF_CPU ) ) ),( BR + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * RCSe ) * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( Max( DS,DS ) + DS ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.3295478972040373}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUC * RCSe ) * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.47166403303474747}, {"determining": "Min( Max( Min( FirstVNF_Mem ,DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( BR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( MLU * ( CS * MLU ) )", "obj1": 0.6244897959183674, "obj2": 0.32400088646708025}, {"determining": "( Min( BR ,( Max( ACS,Min( CRS ,FirstVNF_Mem_Server ) ) + ACS ) ) - Min( ( Min( AMS ,( FirstVNF_CPU - ( ( CRS * DDR ) * Min( RRS ,BR ) ) ) ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( Max( ( ( ( ( RRSe * MUR ) - ( MLU + DS ) ) + ( MUM / MUM ) ) * RCSe ),CS ) ,MUR ) / ( ( MUM / RMSe ) * ( MUC / ( RCSe + RMSe ) ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.43175218635107193}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( PN * FirstVNF_Mem ) ) - ( RRS - ACS ) ),( AMS * AMS ) )", "choosing": "( ( MUR - MLU ) / ( CS - ( ( Max( Max( DS,( ( CS + RRSe ) * ( RRSe * RMSe ) ) ),Min( ( MLU + MLU ) ,RCSe ) ) * MUR ) - RMSe ) ) )", "obj1": 0.9224489795918367, "obj2": 0.07525547544594248}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( Max( ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_Mem_Server ,ACS ) ),Min( ( DDR - Const ) ,( Const - RRS ) ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( MLU * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.6591836734693878, "obj2": 0.2766070752942631}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( DS + RCSe ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.1632522770178582}, {"determining": "( ( AMS * ( MDR / DDR ) ) + ( MRS - ( DDR / MDR ) ) )", "choosing": "( ( MUR / ( Min( DS ,MUC ) - ( CS / ( MUM / MUR ) ) ) ) + Max( DS,RRSe ) )", "obj1": 0.610204081632653, "obj2": 0.3755311918608722}, {"determining": "( ( Const + Min( Max( FirstVNF_CPU,( ( MRS * FirstVNF_CPU_Server ) + ARS ) ) ,BR ) ) + ( AMS * PN ) )", "choosing": "( ( CS - MUR ) / ( ( RMSe / MUM ) * MUM ) )", "obj1": 0.5897959183673469, "obj2": 0.38471094232510133}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe / MLU ) / ( MLU / MLU ) )", "obj1": 0.3877551020408163, "obj2": 0.574378248685384}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.5326530612244897, "obj2": 0.4071585800598348}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( RMSe ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8667917239734033}, {"determining": "( Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.0446550498192166}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.8367346938775511, "obj2": 0.1034093149828456}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( ( ( MUR / RRSe ) + Max( DS,RRSe ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MLU + MUC ) - Max( MLU,MUR ) ) ) + Max( RMSe,MUR ) ) * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.4448979591836735, "obj2": 0.5032265277227013}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7547384430050275}, {"determining": "Min( RRS ,( FirstVNF_Mem - ( ( ARS * FirstVNF_Mem ) + ( PN + BR ) ) ) )", "choosing": "( ( MUR - ( DS / ( DS / RRSe ) ) ) / ( ( RCSe * ( DS / RRSe ) ) / ( MUM - RMSe ) ) )", "obj1": 0.7489795918367347, "obj2": 0.17840674410993632}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) )", "obj1": 0.9734693877551021, "obj2": 0.020451470024391478}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.45714285714285713, "obj2": 0.4947220423637833}, {"determining": "( Min( Max( ACS,BR ) ,CRS ) + ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,Min( ( MUC - Min( Max( MUR,CS ) ,MLU ) ) ,MUC ) ) / ( RCSe - RRSe ) ) ,( ( Max( DS,CS ) + ( MUC + RCSe ) ) / Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.28775510204081634, "obj2": 0.6800705623885833}, {"determining": "Max( ( Min( ( AMS + AMS ) ,( RRS * FirstVNF_Mem ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ),Min( ( ( ARS + RRS ) / ( ( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) ) - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Min( MUC ,MUR ) ) )", "obj1": 0.9306122448979591, "obj2": 0.06625754435966559}, {"determining": "Min( Max( ( CRS * Max( FirstVNF_CPU_Server,BR ) ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - ( ( ( ACS * AMS ) + CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RCSe,( ( ( Max( RMSe,RMSe ) - MUR ) - CS ) * Min( MLU ,Min( Max( MLU,Min( ( MLU + DS ) ,( RMSe - RMSe ) ) ) ,RRSe ) ) ) ) * ( ( Max( RCSe,MUM ) / ( MUR - MUM ) ) * ( CS * RCSe ) ) )", "obj1": 0.9469387755102041, "obj2": 0.03330931417996619}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1326530612244898, "obj2": 0.843694098678344}, {"determining": "( Min( ( Min( CRS ,( BR / RRS ) ) + AMS ) ,( CRS + RRS ) ) - Min( ( ( DDR + MRS ) / FirstVNF_Mem_Server ) ,CRS ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,( MLU * MUC ) ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / ( ( MUR - ( Max( ( MUR + ( RMSe + MUM ) ),CS ) - Max( DS,DS ) ) ) + ( MUM / ( DS / ( MUR * ( RRSe / CS ) ) ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.46400684002469383}, {"determining": "Min( Max( ( DDR - MRS ),RRS ) ,( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,MDR ) ,ACS ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) - ( CS * RCSe ) ) * Max( RCSe,( ( MUR - CS ) / Min( RRSe ,RMSe ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.02623672782447623}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7714285714285715, "obj2": 0.1443321941684285}, {"determining": "Min( Min( FirstVNF_Mem_Server ,DDR ) ,( ARS + FirstVNF_RAM_Server ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( ( ( ( Max( DS,RMSe ) * MUM ) * MUR ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.16326530612244897, "obj2": 0.8057913386959418}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) + ( ( ( DS + RCSe ) + ( CS - RCSe ) ) + ( ( RRSe + RCSe ) - ( RCSe + MUR ) ) ) )", "obj1": 0.6714285714285714, "obj2": 0.2634666212549453}, {"determining": "Min( Max( Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) - ( AMS / FirstVNF_RAM ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( DS * MLU ) )", "obj1": 0.8551020408163266, "obj2": 0.08964224579489331}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,( ( PN + ( DDR - BR ) ) * FirstVNF_CPU_Server ) ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.44604019697692826}, {"determining": "Min( Max( ( DDR - MRS ),RRS ) ,( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) - ( CS * RCSe ) ) * Max( RCSe,( Min( MLU ,( RCSe - MUM ) ) * ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) ) ) )", "obj1": 0.7, "obj2": 0.2236625431787698}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.736734693877551, "obj2": 0.21395854138775086}, {"determining": "( ( CRS / PN ) / ( ( CRS * DDR ) * Min( ( Min( Min( Max( AMS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU_Server / RRS ) ) ,RRS ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - ( ( MUM * CS ) * RRSe ) ) * Max( MLU,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MLU * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7828998661528014}, {"determining": "( ( ( MDR / FirstVNF_RAM_Server ) * PN ) * ( Max( ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU - ( FirstVNF_CPU / MDR ) ) ) + PN ),Min( BR ,PN ) ) / ( ( MDR - Const ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / MUR ) + ( MLU / Max( Max( MUR,( MUR / MUM ) ),Min( CS ,( CS / ( ( MUC / MUR ) / Max( MLU,RCSe ) ) ) ) ) ) ) )", "obj1": 0.38571428571428573, "obj2": 0.5955735187654245}, {"determining": "( ( ( ( Const / DDR ) - Max( MDR,Max( Max( Max( ( RRS + ACS ),( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7204081632653061, "obj2": 0.21596426789597029}, {"determining": "Min( Min( ( AMS / FirstVNF_CPU_Server ) ,BR ) ,( ( ( ( CRS + AMS ) / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( MUR - Max( ( RCSe / Max( Max( DS,MUM ),MUR ) ),MUM ) ),Min( CS ,DS ) )", "obj1": 0.8612244897959184, "obj2": 0.08476904796565912}, {"determining": "Max( Max( AMS,Max( Const,FirstVNF_Mem ) ),( Max( CRS,( ( FirstVNF_RAM + AMS ) / ( ( AMS / DDR ) * ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem + Min( RRS ,( ( Max( MDR,AMS ) * ACS ) - ARS ) ) ) ) )", "choosing": "( ( MUC + MUR ) + ( RRSe - ( ( MUM + MUM ) * ( MUC * ( CS + Max( ( ( MLU * DS ) / Max( DS,MUM ) ),MUC ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7823636585236952}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - MLU ) - RCSe ) )", "obj1": 0.7408163265306122, "obj2": 0.19950960865722653}, {"determining": "Max( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / Max( CRS,( ( FirstVNF_RAM + AMS ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7885954498039875}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) * ( RRS - BR ) ) / Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Max( MUR,RRSe ) / ( Max( ( RCSe * CS ),MUC ) * ( ( ( ( ( MUM * DS ) * ( MUR - Max( RCSe,RMSe ) ) ) / ( Max( Max( CS,MUM ),MUC ) / RRSe ) ) + ( Min( Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.14081632653061224, "obj2": 0.829357200499099}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.18924540824415473}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),MDR ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( RMSe / MLU ) / ( MLU / MLU ) ) * Max( MUR,RMSe ) ) )", "obj1": 0.6816326530612244, "obj2": 0.24574666995377473}, {"determining": "( ( FirstVNF_CPU - ( ACS * FirstVNF_CPU ) ) / ( ( ( MDR - RRS ) + ( AMS + FirstVNF_Mem ) ) * Min( ( FirstVNF_Mem_Server * Max( ( MDR * ARS ),MDR ) ) ,BR ) ) )", "choosing": "( ( ( MUC + Min( ( RCSe * MLU ) ,RCSe ) ) - Max( CS,Max( CS,RRSe ) ) ) / ( Min( ( ( CS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( ( Const / DDR ) - ( MDR / Max( Min( DDR ,ARS ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MUM,( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( DS,MUC ) ) ) * ( ( Max( MUM,MLU ) / Max( MUC,RRSe ) ) / Max( ( MUC + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.7081632653061225, "obj2": 0.2192549601564518}, {"determining": "( ( AMS * MRS ) - Max( MDR,Max( Max( ( FirstVNF_RAM_Server / ( MDR / ( ( FirstVNF_CPU_Server / Const ) / FirstVNF_CPU ) ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * RCSe ) * Max( CS,( ( MUM / MUR ) * RMSe ) ) )", "obj1": 0.6877551020408164, "obj2": 0.23599570945904125}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUM - Max( ( CS - Min( MLU ,MLU ) ),CS ) ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.7062929231205873}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.8122448979591836, "obj2": 0.12276340166956436}, {"determining": "( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6619984261185771}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / RRS ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,( RCSe - RCSe ) ) * ( MUR * RMSe ) ) )", "obj1": 0.27755102040816326, "obj2": 0.7017760604516889}, {"determining": "( ( Const / DDR ) - ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( MUR ,MLU ) ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6521216587135368}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - Max( ( DS - MLU ),Min( CS ,DS ) ) ) - RCSe ) )", "obj1": 0.8244897959183674, "obj2": 0.108061476492489}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( Min( ( Min( MLU ,MUM ) + Max( DS,MUC ) ) ,Max( MUM,( MUR - RMSe ) ) ) * ( ( MUM / ( MUR - Max( ( CS / ( ( RMSe + MLU ) - MUC ) ),MUM ) ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7250194702455812}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) - ( RCSe + RCSe ) )", "obj1": 0.5326530612244897, "obj2": 0.4071585800598348}, {"determining": "Max( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / Max( CRS,( Max( AMS,MDR ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,( ( RCSe - ( DS - RMSe ) ) * RRSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.3551020408163265, "obj2": 0.6171178705111484}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.789795918367347, "obj2": 0.13543038462981047}, {"determining": "Max( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ),( Max( BR,ACS ) / Max( CRS,( Max( ( MRS / CRS ),MDR ) - Max( MRS,ARS ) ) ) ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,( ( RCSe - ( DS - RMSe ) ) * ( MUC / MUR ) ) ) ) + ( Min( RCSe ,( ( RMSe - RMSe ) + Max( RMSe,MUR ) ) ) * Max( MUR,RMSe ) ) )", "obj1": 0.373469387755102, "obj2": 0.6068131833304611}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( BR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,RMSe ) * ( CS * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.6795918367346939, "obj2": 0.2586446020789277}, {"determining": "( ( FirstVNF_RAM + AMS ) / ( ( CRS * ( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) ) ) * Min( Min( ( BR + DDR ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( Min( RRSe ,MLU ) * RMSe ) ) )", "obj1": 0.3306122448979592, "obj2": 0.6443949159523092}, {"determining": "( ( BR * CRS ) - ( MRS - MRS ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / MUR ) / ( MLU / Max( ( ( MUM * MUR ) * ( MUC * ( MUM / ( MUC / MLU ) ) ) ),Max( MUR,( MUR / MUM ) ) ) ) ) )", "obj1": 0.45510204081632655, "obj2": 0.5013160034157592}, {"determining": "Min( Min( ( AMS * PN ) ,FirstVNF_Mem ) ,Min( ACS ,Max( BR,BR ) ) )", "choosing": "Max( Min( ( RRSe * MUM ) ,RMSe ),Max( ( CS - DS ),MUM ) )", "obj1": 0.3408163265306122, "obj2": 0.6396893852813773}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * BR ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6660206105262444}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.008525666848612086}, {"determining": "( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( ( FirstVNF_CPU_Server * ACS ),FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( CS * RMSe ) ) )", "obj1": 0.32857142857142857, "obj2": 0.648505253824512}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.46400684002469383}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( ( ( BR / BR ) - ACS ) / ( RRS + DDR ) ) ) - MRS )", "choosing": "( ( DS / MUM ) / Max( MUR,( ( MUM - ( ( MUC - DS ) + MUR ) ) / CS ) ) )", "obj1": 0.9816326530612245, "obj2": 0.00817036351888393}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( Min( ( MDR - MRS ) ,PN ) + ( MDR * MRS ) )", "choosing": "Min( ( Max( MUC,MLU ) / ( RCSe - RRSe ) ) ,( ( Max( DS,CS ) + ( MUC - RCSe ) ) / Min( Min( ( MUM + ( CS - RMSe ) ) ,( ( MUR + Max( CS,( MUM / CS ) ) ) / Max( MLU,( RCSe * ( RCSe * RMSe ) ) ) ) ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.23265306122448978, "obj2": 0.7446039066418291}, {"determining": "Max( Max( AMS,Max( Const,FirstVNF_Mem ) ),( Max( BR,ACS ) / Max( CRS,( ( FirstVNF_RAM + AMS ) / ( ( CRS / DDR ) * AMS ) ) ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7394291766732617}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * ( CS * MLU ) )", "obj1": 0.8204081632653061, "obj2": 0.11922383846166074}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.7503619824908474}, {"determining": "Min( Min( Max( ( Min( ( RRS - FirstVNF_Mem ) ,Max( MDR,FirstVNF_CPU_Server ) ) + Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( BR + PN ) ) ),Min( ( Min( Min( Max( ARS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) ) ,( FirstVNF_RAM - ( PN + MRS ) ) ) ,Min( Const ,CRS ) )", "choosing": "Max( ( MUR / MUC ),( Min( RRSe ,MUC ) * ( Min( ( ( RCSe * MUR ) / ( MUC / ( MUR / Min( MUM ,MUM ) ) ) ) ,Max( CS,DS ) ) - Max( ( DS / RMSe ),( DS + CS ) ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.678577374253208}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.8020408163265306, "obj2": 0.12732782008807805}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7755102040816326, "obj2": 0.14065821751636645}, {"determining": "( ( ARS / AMS ) + ( MRS / ACS ) )", "choosing": "( ( Max( DS,( DS / ( ( RRSe * ( MUR + MUC ) ) * RRSe ) ) ) - CS ) / Min( RRSe ,RMSe ) )", "obj1": 0.3653061224489796, "obj2": 0.6137034343462232}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7918367346938775, "obj2": 0.13394374306943216}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7986696446525715}, {"determining": "Min( Min( FirstVNF_Mem ,( AMS * PN ) ) ,Min( Const ,CRS ) )", "choosing": "( ( ( DS + MUR ) / Min( CS ,( ( RCSe - ( DS - RMSe ) ) * ( MUC / MUR ) ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.3469387755102041, "obj2": 0.6316856265489138}, {"determining": "( ( DDR / Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ARS * ( AMS * FirstVNF_CPU ) ) ) ) - Max( Const,FirstVNF_CPU ) ) ) ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - Max( CS,( ( ( RMSe / RMSe ) + RCSe ) - DS ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Max( RRSe,MUC ) + Max( MLU,RRSe ) ) ) )", "obj1": 0.8, "obj2": 0.12855271838316717}, {"determining": "Max( ( ( ( MDR - Min( FirstVNF_Mem_Server ,ARS ) ) * FirstVNF_Mem ) / Max( ( ( ( CRS * DDR ) * Min( ACS ,Min( MDR ,Min( PN ,ARS ) ) ) ) / ( FirstVNF_RAM + AMS ) ),CRS ) ),( CRS * ACS ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC / ( ( ( ( RMSe - DS ) + MUC ) - Max( ( CS - RMSe ),RRSe ) ) * MLU ) ) ) / ( Min( CS ,MLU ) * ( MUR * MUR ) ) ) + ( Min( MLU ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7900771799174173}, {"determining": "Max( ( Min( ( ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_Mem ) ) + FirstVNF_RAM ) * FirstVNF_Mem ) ,( AMS + AMS ) ) - Min( ( BR + PN ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ),Min( ( Min( Min( Max( AMS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( Min( ( CS * Min( RCSe ,( RCSe * MLU ) ) ) ,MUR ) + DS ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7310004858233291}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.7503619824908474}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ( ARS / FirstVNF_CPU ) ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6857142857142857, "obj2": 0.23639680619698525}, {"determining": "( ( Const / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( MUR ,MLU ) ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5996673364169379}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MLU + MUC ) - Max( MLU,MUR ) ) ) + Max( RMSe,MUR ) ) * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.8224489795918367, "obj2": 0.11427389277613126}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( CRS ,( BR / RRS ) ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / ( ( MUR + ( Max( ( MUR + ( RMSe + MUM ) ),CS ) - Max( DS,DS ) ) ) + ( MUM / ( DS / ( MUR * ( RRSe / CS ) ) ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.44103611762515005}, {"determining": "( ( ( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,( Max( RCSe,MLU ) / DS ) ) * ( ( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.3673469387755102, "obj2": 0.611991145603336}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,RMSe ) / ( MUM / MUC ) )", "obj1": 0.5979591836734693, "obj2": 0.3846484555989445}, {"determining": "( ( AMS * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / RRSe ) + Max( DS,RRSe ) )", "obj1": 0.6061224489795919, "obj2": 0.3760233038026716}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( BR,CRS ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUM * RMSe ) + Max( RMSe,MUM ) )", "obj1": 0.9938775510204082, "obj2": 0.002896105048399942}, {"determining": "Min( Max( DDR,MRS ) ,( CRS - Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "Max( CS,( MUR / ( MUM - Min( ( CS + RRSe ) ,RRSe ) ) ) )", "obj1": 0.3020408163265306, "obj2": 0.6683456332596377}, {"determining": "( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( ( ( ( DS + MUR ) / Min( CS ,MUR ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.35306122448979593, "obj2": 0.6248255184901724}], "6": [{"determining": "( ( Const - FirstVNF_Mem ) - ( RRS - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,( ( MUR + MUC ) - ( Min( MLU ,( ( Max( DS,DS ) * MUC ) + RMSe ) ) + DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8905746612722424}, {"determining": "( ( ( Min( MDR ,RRS ) + ( DDR * FirstVNF_Mem ) ) - RRS ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( ( BR / Max( ARS,FirstVNF_Mem ) ) - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( CS + MUR ) / Max( MLU,RRSe ) ) ) - ( MUR / Min( DS ,Max( ( ( RMSe * RRSe ) * MLU ),( MLU / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - Max( ( DDR + FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.09795918367346938, "obj2": 0.8905746612722424}, {"determining": "( ( Const + Min( Max( FirstVNF_CPU,( ( MRS * FirstVNF_CPU_Server ) + ARS ) ) ,BR ) ) + ( AMS * PN ) )", "choosing": "( ( CS - MUR ) / ( ( RMSe / MUM ) * MUM ) )", "obj1": 0.5897959183673469, "obj2": 0.38471094232510133}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.6285714285714286, "obj2": 0.28898808103800294}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5918367346938775, "obj2": 0.3351562209360711}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( ( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) ) ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( RRSe + ( ( MLU + RRSe ) - ( MUC * MLU ) ) ) * ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) * ( Max( CS,RCSe ) + ( MUR / RMSe ) ) ) )", "obj1": 0.5612244897959183, "obj2": 0.4019991485394116}, {"determining": "Min( Max( ( FirstVNF_Mem_Server + ( Max( ( FirstVNF_Mem_Server / MRS ),( RRS / FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server / CRS ) ) ),RRS ) ,( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) - ( RRS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUM / ( ( RRSe - RMSe ) / MUR ) ) - MUC ),MLU ) - MUR ) / ( ( RRSe * RCSe ) / ( MUR - RMSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.2756976905808768}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3795918367346939, "obj2": 0.5722069360955676}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) )", "choosing": "( ( Min( RCSe ,MUC ) - ( CS * RCSe ) ) * Min( ( RCSe + RCSe ) ,( Min( RRSe ,RMSe ) / ( MUR - CS ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.738848132860603}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) - FirstVNF_RAM ) + ( ( Max( CRS,CRS ) / ( FirstVNF_RAM_Server - DDR ) ) * Min( ( MRS * BR ) ,CRS ) ) )", "choosing": "( ( MUR / ( ( DS - RRSe ) / Max( RRSe,( RMSe + ( MUC / DS ) ) ) ) ) + ( MLU / DS ) )", "obj1": 0.2530612244897959, "obj2": 0.7156872526894794}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ARS / MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( PN + RRS ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - RRS ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( ( MUC - MLU ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) / ( MUR * RMSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6001700203378623}, {"determining": "( ( ( ( ( FirstVNF_Mem - Min( ( BR - ( ARS * FirstVNF_RAM_Server ) ) ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) ) * PN ) + ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR / ( Max( MLU,DS ) + RRSe ) ) + Max( RRSe,DS ) )", "obj1": 0.39387755102040817, "obj2": 0.5503623458311926}, {"determining": "Min( ( AMS / ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - ( Min( MLU ,MUM ) + Max( DS,MUC ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.5996494367537797}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) )", "obj1": 0.926530612244898, "obj2": 0.043773436539652065}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUC * RCSe ) * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.47166403303474747}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * Min( FirstVNF_RAM_Server ,MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( MRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( ( MUC / CS ) + RRSe ) ) ) ) / ( Min( ( MLU + MUR ) ,Max( RRSe,MUM ) ) - Min( Max( MUR,MLU ) ,( MLU / RCSe ) ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5395579896545467}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * ( Const * FirstVNF_RAM ) ) ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * RMSe ) / ( RCSe + MUR ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8420288952139668}, {"determining": "Min( Min( ( AMS * PN ) ,FirstVNF_Mem ) ,Min( ACS ,Max( BR,BR ) ) )", "choosing": "Max( Min( ( RRSe * MUM ) ,RMSe ),Max( ( CS - DS ),MUM ) )", "obj1": 0.3408163265306122, "obj2": 0.6396893852813773}, {"determining": "Min( Max( Min( FirstVNF_Mem ,DDR ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( BR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( MLU * ( CS * MLU ) )", "obj1": 0.6244897959183674, "obj2": 0.32400088646708025}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( RMSe ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8667917239734033}, {"determining": "Min( Max( ( DDR - Min( ( Min( Max( ( PN / Const ),FirstVNF_CPU_Server ) ,AMS ) - ( AMS / FirstVNF_RAM ) ) ,( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUR - Max( ( ( RRSe + MLU ) - RCSe ),Min( CS ,Min( DS ,RMSe ) ) ) ) - RCSe ),Max( ( MUR + RCSe ),( RCSe - RCSe ) ) )", "obj1": 0.9, "obj2": 0.05105720465017854}, {"determining": "Min( RRS ,( FirstVNF_Mem - ( ( ARS * FirstVNF_Mem ) + ( PN + BR ) ) ) )", "choosing": "( ( MUR - ( DS / ( DS / RRSe ) ) ) / ( ( RCSe * ( DS / RRSe ) ) / ( MUM - RMSe ) ) )", "obj1": 0.7489795918367347, "obj2": 0.17840674410993632}, {"determining": "( ( Const / PN ) - Max( MDR,Max( ( BR * Const ),Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ) ) ) )", "choosing": "Min( ( MUC / ( MUR / MLU ) ) ,( ( MUR / CS ) + ( MLU / Max( Max( MUR,( RRSe / MUM ) ),Min( MUM ,MLU ) ) ) ) )", "obj1": 0.6122448979591837, "obj2": 0.3254397717753526}, {"determining": "( Min( CRS ,BR ) - Min( ( Min( ( FirstVNF_RAM / Const ) ,PN ) + AMS ) ,( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / FirstVNF_RAM ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUR / ( ( ( MUR * CS ) / MUR ) / ( DS + MUC ) ) ) - ( ( ( CS - RRSe ) / ( MLU * MUC ) ) / Max( MUR,MLU ) ) )", "obj1": 0.5326530612244897, "obj2": 0.4071585800598348}, {"determining": "( Min( Max( ACS,BR ) ,CRS ) + ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,Min( ( MUC - Min( Max( MUR,CS ) ,MLU ) ) ,MUC ) ) / ( RCSe - RRSe ) ) ,( ( Max( DS,CS ) + ( MUC + RCSe ) ) / Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.28775510204081634, "obj2": 0.6800705623885833}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / RRS ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,( RCSe - RCSe ) ) * ( MUR * RMSe ) ) )", "obj1": 0.27755102040816326, "obj2": 0.7017760604516889}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( DS + RCSe ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.45714285714285713, "obj2": 0.48636745158995853}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.726530612244898, "obj2": 0.1981572993271694}, {"determining": "( ( ( ( Const / DDR ) - Max( MDR,Max( Max( Max( ( RRS + ACS ),( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7204081632653061, "obj2": 0.21596426789597029}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7714285714285715, "obj2": 0.1443321941684285}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7547384430050275}, {"determining": "Min( Min( FirstVNF_Mem_Server ,DDR ) ,( ARS + FirstVNF_RAM_Server ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( ( ( ( Max( DS,RMSe ) * MUM ) * MUR ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.16326530612244897, "obj2": 0.8057913386959418}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.10011104145282451}, {"determining": "( ( DDR / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( ( BR / MRS ) / ( ARS / FirstVNF_CPU ) ) ),( AMS + ACS ) ),( Min( BR ,( AMS - DDR ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) / Max( Min( DS ,( ( Min( ( DS / MUM ) ,RRSe ) * MUM ) + Max( ( ( MUM - MUM ) / MUR ),RMSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.25285470005752186}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe / ( MUR * RMSe ) ) / ( MLU / MLU ) )", "obj1": 0.4346938775510204, "obj2": 0.5154523660865596}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.4204081632653061, "obj2": 0.5220047268744789}, {"determining": "( Min( ( Min( CRS ,( BR / RRS ) ) + AMS ) ,( CRS + RRS ) ) - Min( ( ( DDR + MRS ) / FirstVNF_Mem_Server ) ,CRS ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,( MLU * MUC ) ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / ( ( MUR - ( Max( ( MUR + ( RMSe + MUM ) ),CS ) - Max( DS,DS ) ) ) + ( MUM / ( DS / ( MUR * ( RRSe / CS ) ) ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.46400684002469383}, {"determining": "( Min( BR ,MDR ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.5244897959183673, "obj2": 0.4217415967204263}, {"determining": "( Min( BR ,( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.6816326530612244, "obj2": 0.24027013995467353}, {"determining": "( Min( CRS ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( Max( ( DDR * ARS ),AMS ) + RRS ) ) )", "choosing": "( ( Min( CS ,RRSe ) / RMSe ) / ( MLU / MLU ) )", "obj1": 0.49795918367346936, "obj2": 0.4537865290135955}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) - Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( Min( Max( ( RMSe - MUR ),RCSe ) ,( MLU * MLU ) ) * Max( RCSe,( Min( MLU ,( RCSe - MUM ) ) * ( Min( Max( RCSe,RMSe ) ,RRSe ) - CS ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.12417503758820543}, {"determining": "Max( Max( AMS,Max( Const,FirstVNF_Mem ) ),( Max( CRS,( ( FirstVNF_RAM + AMS ) / ( ( AMS / DDR ) * ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem + Min( RRS ,( ( Max( MDR,AMS ) * ACS ) - ARS ) ) ) ) )", "choosing": "( ( MUC + MUR ) + ( RRSe - ( ( MUM + MUM ) * ( MUC * ( CS + Max( ( ( MLU * DS ) / Max( DS,MUM ) ),MUC ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7823636585236952}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ( ( Const + Min( ACS ,BR ) ) + ( AMS * PN ) ) ) )", "choosing": "Max( ( DS - MUR ),Min( CS ,DS ) )", "obj1": 0.8510204081632653, "obj2": 0.09565600079721547}, {"determining": "Min( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) ) ,Min( Const ,CRS ) )", "choosing": "Max( ( MUR / MUC ),( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + ( Min( RCSe ,MUC ) / MUC ) ) ) ) ) )", "obj1": 0.8959183673469387, "obj2": 0.0676356164586899}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( DS + RCSe ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.1632522770178582}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUM - Max( ( CS - Min( MLU ,MLU ) ),CS ) ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.7062929231205873}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( DS + RCSe ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.1632522770178582}, {"determining": "Min( Max( ( CRS * Max( FirstVNF_CPU_Server,BR ) ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - ( ( ( ACS * AMS ) + CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RCSe,( ( ( Max( RMSe,RMSe ) - MUR ) - CS ) * Min( MLU ,Min( Max( MLU,Min( ( MLU + DS ) ,( RMSe - RMSe ) ) ) ,RRSe ) ) ) ) * ( ( Max( RCSe,MUM ) / ( MUR - MUM ) ) * ( CS * RCSe ) ) )", "obj1": 0.9469387755102041, "obj2": 0.03330931417996619}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ( ARS / FirstVNF_CPU ) ) ),( BR + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * RCSe ) * ( ( ( DS / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( Max( DS,DS ) + DS ) ) ) )", "obj1": 0.863265306122449, "obj2": 0.08157534463616571}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( ( Max( MDR,ARS ) - FirstVNF_CPU ),( MDR / ARS ) ),( AMS / ACS ) ),( AMS + DDR ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( RMSe / MLU ) / Min( ( MUM + ( RCSe + DS ) ) ,MLU ) ) * Max( MUR,RMSe ) ) )", "obj1": 0.6714285714285714, "obj2": 0.25268912169795194}, {"determining": "( Min( BR ,CRS ) - Min( ( ( Max( BR,ACS ) / Max( CRS,( Max( AMS,MDR ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.4366212371260316}, {"determining": "Min( Max( ( DDR - MRS ),Min( FirstVNF_Mem_Server ,Max( Max( ( ARS + Max( Const,FirstVNF_RAM ) ),PN ),( FirstVNF_Mem - RRS ) ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,( ( MUR - MUC ) - ( Min( ( ( Max( DS,DS ) * MUC ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) ) )", "obj1": 0.7387755102040816, "obj2": 0.1874316640400013}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( ( ( MUR / RRSe ) + Max( DS,RRSe ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,DS ),( MLU * ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.8122448979591836, "obj2": 0.12276340166956436}, {"determining": "( ( Min( Max( ( MRS - DDR ),( ( MRS / BR ) - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( PN,FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( RRSe / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( Min( ( MLU + Min( RRSe ,CS ) ) ,( MLU / Min( MUM ,RCSe ) ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6735032888689121}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( BR,CRS ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUM * RMSe ) + Max( RMSe,MUM ) )", "obj1": 0.9938775510204082, "obj2": 0.002896105048399942}, {"determining": "( Min( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_CPU ) ) ,( ( ( Const / DDR ) - ( ( DDR * ARS ) + FirstVNF_Mem_Server ) ) - ACS ) ) ,DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe * ( MUC * ( MUC - DS ) ) ) / MUC ) - Max( Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ),( ( MUM - RMSe ) * ( MLU / MLU ) ) ) )", "obj1": 0.8795918367346939, "obj2": 0.0759440003080843}, {"determining": "Min( Max( ( DDR - MRS ),( DDR + RRS ) ) ,( ( ( Const / DDR ) - ( ( ( AMS - RRS ) + ( ( CRS / CRS ) / ( ( RRS * FirstVNF_RAM ) * Min( FirstVNF_CPU ,BR ) ) ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( CS * ( ( ( DS / CS ) / ( RMSe / CS ) ) - Min( RCSe ,Min( RMSe ,MUM ) ) ) )", "obj1": 0.6938775510204082, "obj2": 0.2303951770011235}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8244897959183674, "obj2": 0.10464523231524163}, {"determining": "( ( BR * CRS ) - ( MRS - MRS ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / MUR ) / ( MLU / Max( ( ( MUM * MUR ) * ( MUC * ( MUM / ( MUC / MLU ) ) ) ),Max( MUR,( MUR / MUM ) ) ) ) ) )", "obj1": 0.45510204081632655, "obj2": 0.5013160034157592}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,( ( PN + ( DDR - BR ) ) * FirstVNF_CPU_Server ) ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.44604019697692826}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6434198594094833}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7346938775510204, "obj2": 0.19055659172113415}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) * ( RRS - BR ) ) / Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Max( MUR,RRSe ) / ( Max( ( RCSe * CS ),MUC ) * ( ( ( ( ( MUM * DS ) * ( MUR - Max( RCSe,RMSe ) ) ) / ( Max( Max( CS,MUM ),MUC ) / RRSe ) ) + ( Min( Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.14081632653061224, "obj2": 0.829357200499099}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MLU + MUC ) - Max( MLU,MUR ) ) ) + Max( RMSe,MUR ) ) * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.8224489795918367, "obj2": 0.11427389277613126}, {"determining": "( ( ( Max( RRS,( FirstVNF_CPU - PN ) ) - MDR ) / PN ) + ( MDR * MRS ) )", "choosing": "( ( RRSe - MUC ) * ( ( ( ( MUC / ( RCSe / DS ) ) * RCSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7881942349599875}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / MUC ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.8795918367346939, "obj2": 0.0759440003080843}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,BR ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.7503619824908474}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.008525666848612086}, {"determining": "( ( FirstVNF_CPU - ( ACS * FirstVNF_CPU ) ) / ( ( ( MDR - RRS ) + ( AMS + FirstVNF_Mem ) ) * Min( ( FirstVNF_Mem_Server * Max( ( MDR * ARS ),MDR ) ) ,BR ) ) )", "choosing": "( ( ( MUC + Min( ( RCSe * MLU ) ,RCSe ) ) - Max( CS,Max( CS,RRSe ) ) ) / ( Min( ( ( CS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) )", "obj1": 0.9734693877551021, "obj2": 0.020451470024391478}, {"determining": "( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) )", "choosing": "Min( MLU ,( ( Max( DS,CS ) + ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( MLU - Max( RMSe,RCSe ) ) * MUR ) ) ) ) / Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7869569002385148}, {"determining": "( ( ( ( MDR - ( FirstVNF_CPU_Server - ( Const + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,RRS ) ) ) ) + ( Const * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUR ) ),( ( MUC / MLU ) + Max( RRSe,( Max( DS,( MUR + ( MLU * CS ) ) ) - RMSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.42448979591836733, "obj2": 0.5167882373484904}, {"determining": "( ( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),FirstVNF_CPU ) ) ) - ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( MUR ,MLU ) ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,Min( ( ( DS + MUR ) / ( MUR + RCSe ) ) ,MLU ) ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.06479418062005636}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * BR ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6660206105262444}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - Max( ( DS - MLU ),Min( CS ,DS ) ) ) - RCSe ) )", "obj1": 0.5204081632653061, "obj2": 0.425775432126445}, {"determining": "( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6619984261185771}, {"determining": "Min( Min( Max( Min( ( Min( Min( ( PN * FirstVNF_RAM_Server ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / AMS ) ) ),( Min( ( RRS * FirstVNF_Mem ) ,( AMS + AMS ) ) + Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( BR + PN ) ) ) ) ,( FirstVNF_RAM - ( PN + MRS ) ) ) ,Min( Const ,CRS ) )", "choosing": "Max( ( MUR / MUC ),( Min( RRSe ,MUC ) * ( Min( ( ( RCSe * MUR ) / ( MUC / ( MUR / Min( MUM ,RRSe ) ) ) ) ,Max( CS,DS ) ) - Max( Max( RRSe,Max( MUM,RMSe ) ),( DS + CS ) ) ) ) )", "obj1": 0.3326530612244898, "obj2": 0.6431018467641999}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( ( ( MUR / RRSe ) + Max( DS,RRSe ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7986696446525715}, {"determining": "( ( ( Min( ( CRS / FirstVNF_RAM ) ,CRS ) + Max( FirstVNF_RAM_Server,ACS ) ) - AMS ) / ( ACS + ( PN + MDR ) ) )", "choosing": "( ( ( ( MUM - MUM ) * RCSe ) / ( MUC * MUR ) ) / ( ( ( ( MUC + CS ) + ( Min( Min( ( MUR + RMSe ) ,( RRSe - RCSe ) ) ,RMSe ) * Max( MUR,RMSe ) ) ) / RMSe ) * Min( CS ,MLU ) ) )", "obj1": 0.14081632653061224, "obj2": 0.829357200499099}, {"determining": "( AMS / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( MUM * RMSe ) + Max( RMSe,MUM ) ) * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.8163265306122449, "obj2": 0.11848520927784029}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) )", "obj1": 0.9469387755102041, "obj2": 0.03330931417996619}, {"determining": "Min( Max( ( DDR - MRS ),( RRS - FirstVNF_CPU ) ) ,( ( ( Const / DDR ) - ( ( MDR / ARS ) + ( PN * FirstVNF_CPU ) ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( Min( Min( ( MUM - MUR ) ,Max( MUM,Min( Min( MLU ,( RCSe * ( MLU + MLU ) ) ) ,MUR ) ) ) ,( MUR / MUM ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( RRSe * ( RCSe - ( RCSe - MLU ) ) ) ) )", "obj1": 0.7918367346938775, "obj2": 0.13257500514489154}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MUM,( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( DS,MUC ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.7081632653061225, "obj2": 0.2192549601564518}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * DDR ) ) - ( ( FirstVNF_Mem * MRS ) * ( MRS / FirstVNF_CPU_Server ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( Min( AMS ,Const ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MLU + MUC ) - ( RCSe + DS ) ) ) + Max( MUR,MUR ) ) * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.4448979591836735, "obj2": 0.5032265277227013}, {"determining": "Min( Min( RRS ,BR ) ,( ( ( DDR / Const ) / ( ( MDR / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( MUR - ( MLU * ( ( MUC + DS ) + RCSe ) ) ),Min( CS ,DS ) )", "obj1": 0.8612244897959184, "obj2": 0.08476904796565908}, {"determining": "( Min( BR ,( Max( ACS,Min( CRS ,FirstVNF_Mem_Server ) ) + ACS ) ) - Min( ( Min( AMS ,( FirstVNF_CPU - ( ( CRS * DDR ) * Min( RRS ,BR ) ) ) ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( Max( ( ( ( ( RRSe * MUR ) - ( MLU + DS ) ) + ( MUM / MUM ) ) * RCSe ),CS ) ,MUR ) / ( ( MUM / RMSe ) * ( MUC / ( RCSe + RMSe ) ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.43175218635107193}, {"determining": "( Max( Const,FirstVNF_RAM ) - ( ( BR - RRS ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( MUR ,MLU ) ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,Min( ( MUC - ( ( MUM - RRSe ) - ( MUM - MUC ) ) ) ,CS ) ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6521216587135368}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.46400684002469383}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7836734693877551, "obj2": 0.13688040058841314}, {"determining": "Min( Max( ( DDR - MRS ),RRS ) ,( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) - ( CS * RCSe ) ) * Max( RCSe,( Min( MLU ,( RCSe - MUM ) ) * ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) ) ) )", "obj1": 0.7, "obj2": 0.2236625431787698}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( RCSe,( ( ( Max( RMSe,RMSe ) - MUR ) - CS ) * Min( MLU ,Min( Max( MLU,( ( MLU + DS ) * ( RMSe - RMSe ) ) ) ,RRSe ) ) ) ) * ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.022236506678070544}, {"determining": "( ( AMS * MRS ) - Max( MDR,Max( Max( ( FirstVNF_RAM_Server / ( MDR / ( ( FirstVNF_CPU_Server / Const ) / FirstVNF_CPU ) ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * RCSe ) * Max( CS,( ( MUM / MUR ) * RMSe ) ) )", "obj1": 0.6877551020408164, "obj2": 0.23599570945904125}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) ) + ( MRS / ACS ) )", "choosing": "( ( Max( DS,( Min( RCSe ,MUC ) * ( CS * RCSe ) ) ) - CS ) / Min( RRSe ,RMSe ) )", "obj1": 0.9714285714285714, "obj2": 0.021308268734709267}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.5326530612244897, "obj2": 0.4071585800598348}], "7": [{"determining": "( ( Const - FirstVNF_Mem ) - ( RRS - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,( ( MUR + MUC ) - ( Min( MLU ,( ( Max( DS,DS ) * MUC ) + RMSe ) ) + DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8905746612722424}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) - FirstVNF_RAM ) + ( ( Max( CRS,CRS ) / ( FirstVNF_RAM_Server - DDR ) ) * PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,RRS ) + ( DDR * FirstVNF_Mem ) ) - RRS ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( ( BR / Max( ARS,FirstVNF_Mem ) ) - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( CS + MUR ) / Max( MLU,RRSe ) ) ) - ( MUR / Min( DS ,Max( ( ( RMSe * RRSe ) * MLU ),( MLU / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.09795918367346938, "obj2": 0.8905746612722424}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.32040816326530613, "obj2": 0.6093471073501523}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5822958726287639}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( CRS ,( CRS + ( DDR / Const ) ) ) + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( RMSe,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.4252067902124707}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe / ( MUR * RMSe ) ) / ( MLU / MLU ) )", "obj1": 0.3795918367346939, "obj2": 0.5641171751654138}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5918367346938775, "obj2": 0.3351562209360711}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.6285714285714286, "obj2": 0.28898808103800294}, {"determining": "( Max( Const,FirstVNF_RAM ) - ( ( BR - RRS ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( MUR ,MLU ) ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,Min( ( MUC - ( ( MUM - RRSe ) - ( MUM - MUC ) ) ) ,CS ) ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6521216587135368}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * ( Const * FirstVNF_RAM ) ) ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * RMSe ) / ( RCSe + MUR ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8420288952139668}, {"determining": "Min( Max( ( FirstVNF_Mem_Server + ( Max( ( FirstVNF_Mem_Server / MRS ),( RRS / FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server / CRS ) ) ),RRS ) ,( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) - ( RRS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUM / ( ( RRSe - RMSe ) / MUR ) ) - MUC ),MLU ) - MUR ) / ( ( RRSe * RCSe ) / ( MUR - RMSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.2756976905808768}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2943573987226581}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - Max( ( DS - MLU ),Min( CS ,DS ) ) ) - RCSe ) )", "obj1": 0.8591836734693877, "obj2": 0.08088155207535205}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( Const / DDR ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,( ( MUR + MUC ) - ( Min( MLU ,( ( Max( DS,DS ) * MUC ) + Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) ) + DS ) ) ) )", "obj1": 0.5775510204081633, "obj2": 0.3637173168030206}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,( MDR * RRS ) ) ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * ( ( MLU + DS ) * Min( RCSe ,( ( ( Max( Max( MUR,RRSe ),MLU ) / ( Min( MUR ,RMSe ) * MLU ) ) / RRSe ) + MLU ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6873979515539371}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( RMSe ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8667917239734033}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,( CRS - FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUM - Max( ( CS - Min( MLU ,MLU ) ),CS ) ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.7062929231205873}, {"determining": "Min( Max( ( FirstVNF_RAM * Const ),( FirstVNF_CPU + RRS ) ) ,( ( ( DDR / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( Max( ACS,BR ) ,CRS ) ) )", "choosing": "( CS * ( ( Max( ( ( RRSe + MUR ) / RMSe ),MUM ) + RRSe ) - ( RCSe - RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.3871331430854516}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / DDR ) )", "choosing": "( ( MUR + CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) ) ) )", "obj1": 0.8469387755102041, "obj2": 0.08621991735155105}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.4764420004597811}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.1563966429661016}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * DDR ) ) - ( ( FirstVNF_Mem * MRS ) * ( MRS / FirstVNF_CPU_Server ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( Min( AMS ,Const ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MLU + MUC ) - ( RCSe + DS ) ) ) + Max( MUR,MUR ) ) * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.4448979591836735, "obj2": 0.5032265277227013}, {"determining": "Min( Min( FirstVNF_Mem_Server ,DDR ) ,( ARS + FirstVNF_RAM_Server ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( ( ( ( Max( DS,RMSe ) * MUM ) * MUR ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.16326530612244897, "obj2": 0.8057913386959418}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( Min( RRSe ,RMSe ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8755102040816326, "obj2": 0.06322418867747653}, {"determining": "( ( Const / PN ) - Max( MDR,Max( ( BR * Const ),Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ) ) ) )", "choosing": "Min( ( MUC / ( MUR / MLU ) ) ,( ( MUR / CS ) + ( MLU / Max( Max( MUR,( RRSe / MUM ) ),Min( MUM ,MLU ) ) ) ) )", "obj1": 0.6122448979591837, "obj2": 0.3254397717753526}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7547384430050275}, {"determining": "( Min( ( Min( CRS ,( BR / RRS ) ) + AMS ) ,( CRS + RRS ) ) - Min( ( ( DDR + MRS ) / FirstVNF_Mem_Server ) ,CRS ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,( MLU * MUC ) ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / ( ( MUR - ( Max( ( MUR + ( RMSe + MUM ) ),CS ) - Max( DS,DS ) ) ) + ( MUM / ( DS / ( MUR * ( RRSe / CS ) ) ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.46400684002469383}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( AMS / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.10011104145282451}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) - FirstVNF_RAM ) + ( ( Max( CRS,CRS ) / ( FirstVNF_RAM_Server - DDR ) ) * Min( ( MRS * BR ) ,CRS ) ) )", "choosing": "( ( MUR / ( ( DS - RRSe ) / Max( RRSe,( RMSe + ( MUC / DS ) ) ) ) ) + ( MLU / DS ) )", "obj1": 0.2530612244897959, "obj2": 0.7156872526894794}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ARS / MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( PN + RRS ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - RRS ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( ( MUC - MLU ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) / ( MUR * RMSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6001700203378623}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.45714285714285713, "obj2": 0.4707606242229759}, {"determining": "Min( ( Max( DDR,CRS ) * CRS ) ,Min( Const ,RRS ) )", "choosing": "Max( ( MUR / MUC ),( Min( RRSe ,( RMSe + Min( CS ,Max( ( Max( RMSe,RCSe ) * MUM ),( RRSe / ( MUM - DS ) ) ) ) ) ) * CS ) )", "obj1": 0.24897959183673468, "obj2": 0.7322588193995597}, {"determining": "( Min( BR ,CRS ) - Min( ( FirstVNF_RAM / ( FirstVNF_CPU + ( Const * BR ) ) ) ,( CRS + FirstVNF_Mem ) ) )", "choosing": "( CS * Min( MUR ,RRSe ) )", "obj1": 0.4775510204081633, "obj2": 0.46518588133203315}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * Min( FirstVNF_RAM_Server ,MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( MRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( ( MUC / CS ) + RRSe ) ) ) ) / ( Min( ( MLU + MUR ) ,Max( RRSe,MUM ) ) - Min( Max( MUR,MLU ) ,( MLU / RCSe ) ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5395579896545467}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,( MUR - Max( ( MUR * RMSe ),MUM ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3695624881940065}, {"determining": "( ( DDR / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( ( BR / MRS ) / ( ARS / FirstVNF_CPU ) ) ),( AMS + ACS ) ),( Min( BR ,( AMS - DDR ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) / Max( Min( DS ,( ( Min( ( DS / MUM ) ,RRSe ) * MUM ) + Max( ( ( MUM - MUM ) / MUR ),RMSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.25285470005752186}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( ( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) ) ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( RRSe + ( ( MLU + RRSe ) - ( MUC * MLU ) ) ) * ( ( Min( MUM ,DS ) + ( MUR * RRSe ) ) * ( Max( CS,RCSe ) + ( MUR / RMSe ) ) ) )", "obj1": 0.5612244897959183, "obj2": 0.4019991485394116}, {"determining": "Min( Min( ( AMS * PN ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7472658675211663}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( FirstVNF_RAM_Server + PN ),Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe / ( MUR * RMSe ) ) / ( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) ) )", "obj1": 0.5408163265306123, "obj2": 0.4056717179193564}, {"determining": "Max( Max( AMS,Max( Const,FirstVNF_Mem ) ),( Max( CRS,( ( FirstVNF_RAM + AMS ) / ( ( AMS / DDR ) * ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem + Min( RRS ,( ( Max( MDR,AMS ) * ACS ) - ARS ) ) ) ) )", "choosing": "( ( MUC + MUR ) + ( RRSe - ( ( MUM + MUM ) * ( MUC * ( CS + Max( ( ( MLU * DS ) / Max( DS,MUM ) ),MUC ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7823636585236952}, {"determining": "Min( ( FirstVNF_Mem_Server / AMS ) ,Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) )", "choosing": "( ( Min( RCSe ,MUC ) - ( CS * RCSe ) ) * Min( ( RCSe + RCSe ) ,( Min( RRSe ,RMSe ) / ( MUR - CS ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.738848132860603}, {"determining": "( ( Min( Max( ( Max( Const,FirstVNF_CPU ) - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( MUR,Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7510204081632653, "obj2": 0.16857409938586101}, {"determining": "( Min( Max( ACS,BR ) ,CRS ) + ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,Min( ( MUC - Min( Max( MUR,CS ) ,MLU ) ) ,MUC ) ) / ( RCSe - RRSe ) ) ,( ( Max( DS,CS ) + ( MUC + RCSe ) ) / Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.28775510204081634, "obj2": 0.6800705623885833}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) - Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( Min( Max( ( RMSe - MUR ),RCSe ) ,( MLU * MLU ) ) * Max( RCSe,( Min( MLU ,( RCSe - MUM ) ) * ( Min( Max( RCSe,RMSe ) ,RRSe ) - CS ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.12417503758820543}, {"determining": "Min( RRS ,( FirstVNF_Mem - ( ( ARS * FirstVNF_Mem ) + ( PN + BR ) ) ) )", "choosing": "( ( MUR - ( DS / ( DS / RRSe ) ) ) / ( ( RCSe * ( DS / RRSe ) ) / ( MUM - RMSe ) ) )", "obj1": 0.7489795918367347, "obj2": 0.17840674410993632}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Max( MLU,RRSe ) ) ) )", "obj1": 0.8816326530612245, "obj2": 0.06042441024854651}, {"determining": "( Min( BR ,CRS ) - Min( ( ( Max( BR,ACS ) / Max( CRS,( Min( ( AMS * PN ) ,FirstVNF_Mem ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / Max( Min( RMSe ,( DS * MUM ) ),Max( MUR,MUM ) ) ) )", "obj1": 0.5183673469387755, "obj2": 0.4247299715183218}, {"determining": "( ( ( ( Const / DDR ) - Max( MDR,Max( Max( Max( ( RRS + ACS ),( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7204081632653061, "obj2": 0.21596426789597029}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,CRS ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( RCSe,( ( ( Max( RMSe,RMSe ) - MUR ) - CS ) * Min( MLU ,Min( Max( MLU,( ( MLU + DS ) * ( RMSe - RMSe ) ) ) ,RRSe ) ) ) ) * ( Min( RCSe ,MUC ) * ( ( Max( MLU,DS ) + RRSe ) * RCSe ) ) )", "obj1": 0.610204081632653, "obj2": 0.3323582270683671}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.9326530612244898, "obj2": 0.037605543251782565}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7986696446525715}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( AMS,MDR ) ) ),MRS ) )", "choosing": "( CS * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7368927911320835}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - Max( ( DS - MLU ),Min( CS ,Min( DS ,RMSe ) ) ) ) - RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.04577250603286266}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.4204081632653061, "obj2": 0.5220047268744789}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ( Const - MDR ) / ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RCSe,( ( MLU - DS ) * Min( Min( Max( MLU,Min( ( MLU + DS ) ,( RMSe - RMSe ) ) ) ,RRSe ) ,MLU ) ) ) * ( ( Max( RCSe,MUC ) / ( MUR - MUM ) ) * ( CS * RCSe ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5516990092769448}, {"determining": "Min( ( ARS + DDR ) ,( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const - DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( Max( ( CS - ( MLU / DS ) ),CS ) - MUM ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.054789268535345194}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MUM,( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( DS,MUC ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.7081632653061225, "obj2": 0.2192549601564518}, {"determining": "( ( ( MDR - MRS ) + PN ) + ( ( Const + ( AMS - FirstVNF_RAM ) ) * MRS ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( CS + RRSe ) * Max( MUR,MLU ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7885954498039875}, {"determining": "( ( ( ( MDR - ( FirstVNF_CPU_Server - ( Const + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,RRS ) ) ) ) + ( Const * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUR ) ),( ( MUC / MLU ) + Max( RRSe,( Max( DS,( MUR + ( MLU * CS ) ) ) - RMSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.42448979591836733, "obj2": 0.5167882373484904}, {"determining": "Min( Max( ( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) * Max( FirstVNF_CPU_Server,BR ) ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - ( ( ( ACS * AMS ) + CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RCSe,( ( ( Max( RMSe,RMSe ) - MUR ) - CS ) * Min( Min( MLU ,( RCSe - MUM ) ) ,Min( Max( MLU,Min( ( MLU + DS ) ,( RMSe - RMSe ) ) ) ,RRSe ) ) ) ) * ( ( Max( RCSe,MUM ) / ( MUR - MUM ) ) * ( CS * RCSe ) ) )", "obj1": 0.9510204081632653, "obj2": 0.03133605804170097}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( ( ( MUR / RRSe ) + Max( DS,RRSe ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( ARS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( Min( RCSe ,( Max( RMSe,( MUR - MLU ) ) * ( RRSe * MUM ) ) ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.726530612244898, "obj2": 0.1981572993271694}, {"determining": "( Min( BR ,( Max( ACS,Min( CRS ,FirstVNF_Mem_Server ) ) + ACS ) ) - Min( ( Min( AMS ,( FirstVNF_CPU - ( ( CRS * DDR ) * Min( RRS ,BR ) ) ) ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( Max( ( ( ( ( RRSe * MUR ) - ( MLU + DS ) ) + ( MUM / MUM ) ) * RCSe ),CS ) ,MUR ) / ( ( MUM / RMSe ) * ( MUC / ( RCSe + RMSe ) ) ) ) )", "obj1": 0.4326530612244898, "obj2": 0.5033877524561985}, {"determining": "( ( ( ( Const / DDR ) - Max( MDR,Max( Max( Max( ( RRS + ACS ),( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7, "obj2": 0.22246499964950484}, {"determining": "Min( Max( ( DDR - MRS ),( RRS - FirstVNF_CPU ) ) ,( ( ( Const / DDR ) - ( ( MDR / ARS ) + ( PN * FirstVNF_CPU ) ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( Min( Min( ( MUM - MUR ) ,Max( MUM,Min( Min( MLU ,( RCSe * ( MLU + MLU ) ) ) ,MUR ) ) ) ,( MUR / MUM ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( RRSe * ( RCSe - ( RCSe - MLU ) ) ) ) )", "obj1": 0.7918367346938775, "obj2": 0.13257500514489154}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + ARS ) - Max( Max( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + MUC ) / ( Min( RRSe ,MUC ) - ( CS * ( ( ( RMSe / DS ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( Max( ( Min( ( ( ( DS - RCSe ) / ( RCSe + DS ) ) - CS ) ,Min( CS ,CS ) ) / MUR ),DS ),Min( Max( RRSe,MUC ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.11071293705989192}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) / ( ( ( ( ( ACS - MDR ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RMSe,MUC ) * ( MUC * ( MUC - DS ) ) ) / DS ) - Max( Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ),( ( MUM - RMSe ) * ( MLU / MLU ) ) ) )", "obj1": 0.9448979591836735, "obj2": 0.03221882155277739}, {"determining": "( Min( Max( ACS,BR ) ,CRS ) + ( MDR * FirstVNF_CPU ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "Min( Min( ( Min( Max( RRS,Const ) ,FirstVNF_Mem_Server ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Max( ACS,( FirstVNF_Mem * DDR ) ) )", "choosing": "Max( Min( RMSe ,Max( ( MUC / ( DS - Max( RCSe,( Max( MUR,MLU ) / CS ) ) ) ),( CS + DS ) ) ),Max( MUR,MUM ) )", "obj1": 0.8122448979591836, "obj2": 0.12129728837355074}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( ( MDR * MRS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( RMSe + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.5265306122448979, "obj2": 0.4127859141281748}, {"determining": "Min( Max( ( DDR - MRS ),Min( FirstVNF_Mem_Server ,Max( Max( ( ARS + Max( Const,FirstVNF_RAM ) ),PN ),( FirstVNF_Mem - RRS ) ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,( ( MUR - MUC ) - ( Min( ( ( Max( DS,DS ) * MUC ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) ) )", "obj1": 0.7387755102040816, "obj2": 0.1874316640400013}, {"determining": "( ( ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) * FirstVNF_Mem ) / Max( CRS,CRS ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6619984261185771}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) * ( RRS - BR ) ) / Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Max( MUR,RRSe ) / ( Max( ( RCSe * CS ),MUC ) * ( ( ( ( ( MUM * DS ) * ( MUR - Max( RCSe,RMSe ) ) ) / ( Max( Max( CS,MUM ),MUC ) / RRSe ) ) + ( Min( Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.14081632653061224, "obj2": 0.829357200499099}, {"determining": "( ( ( Max( RRS,( FirstVNF_CPU - PN ) ) - MDR ) / PN ) + ( MDR * MRS ) )", "choosing": "( ( RRSe - MUC ) * ( ( ( ( MUC / ( RCSe / DS ) ) * RCSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7881942349599875}, {"determining": "Min( Max( ( DDR - MRS ),RRS ) ,( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.2756976905808768}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) )", "obj1": 0.926530612244898, "obj2": 0.043773436539652065}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.6658469491160559}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( ( ( MUR / RRSe ) + Max( DS,RRSe ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( RCSe,( ( ( Max( RMSe,RMSe ) - MUR ) - CS ) * Min( MLU ,Min( Max( MLU,( ( MLU + DS ) * ( RMSe - RMSe ) ) ) ,RRSe ) ) ) ) * ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.022236506678070544}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( BR,CRS ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUM * RMSe ) + Max( RMSe,MUM ) )", "obj1": 0.9938775510204082, "obj2": 0.002896105048399942}, {"determining": "( ( ( Min( ( CRS / FirstVNF_RAM ) ,CRS ) + Max( FirstVNF_RAM_Server,ACS ) ) - AMS ) / ( ACS + ( PN + MDR ) ) )", "choosing": "( ( ( ( MUM - MUM ) * RCSe ) / ( MUC * MUR ) ) / ( ( ( ( MUC + CS ) + ( Min( Min( ( MUR + RMSe ) ,( RRSe - RCSe ) ) ,RMSe ) * Max( MUR,RMSe ) ) ) / RMSe ) * Min( CS ,MLU ) ) )", "obj1": 0.14081632653061224, "obj2": 0.829357200499099}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( RRSe / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( DS + RCSe ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6735032888689121}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,( ( PN + ( DDR - BR ) ) * FirstVNF_CPU_Server ) ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.39591836734693875, "obj2": 0.5500447973099671}, {"determining": "( Min( BR ,( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.6816326530612244, "obj2": 0.24027013995467353}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7714285714285715, "obj2": 0.1443321941684285}, {"determining": "( ( Min( Min( Max( ACS,BR ) ,CRS ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( RRSe / ( Min( DS ,MUC ) - ( ( MUC - Min( Max( MUR,CS ) ,MLU ) ) - MUC ) ) ) - Max( ( DS + RCSe ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.9714285714285714, "obj2": 0.020792690347265278}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6001700203378623}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.4142857142857143, "obj2": 0.5395579896545467}, {"determining": "( Min( BR ,MDR ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.5244897959183673, "obj2": 0.4217415967204263}, {"determining": "Min( Min( Max( ( Min( ( RRS * FirstVNF_Mem ) ,( AMS + AMS ) ) + Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( BR + PN ) ) ),Min( ( Min( Min( Max( ARS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) ) ,( FirstVNF_RAM - ( PN + MRS ) ) ) ,Min( Const ,CRS ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.6658469491160559}, {"determining": "( ( AMS * MRS ) - Max( MDR,Max( Max( ( FirstVNF_RAM_Server / ( MDR / ( ( FirstVNF_CPU_Server / Const ) / FirstVNF_CPU ) ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * RCSe ) * Max( CS,( ( MUM / MUR ) * RMSe ) ) )", "obj1": 0.6877551020408164, "obj2": 0.23599570945904125}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7714285714285715, "obj2": 0.1443321941684285}, {"determining": "Min( Max( ( DDR - MRS ),( DDR + RRS ) ) ,( ( ( Const / DDR ) - ( ( ( AMS - RRS ) + ( ( CRS / CRS ) / ( ( RRS * FirstVNF_RAM ) * Min( FirstVNF_CPU ,BR ) ) ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Min( CS ,( ( ( DS / CS ) / ( RMSe / CS ) ) - Min( RCSe ,Min( RMSe ,MUM ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.012086938016555372}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) / DDR ) + ( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) ) ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( RCSe,( ( ( Max( RMSe,RMSe ) - MUR ) - CS ) * Min( MLU ,Min( Max( MLU,( ( MLU + DS ) * ( RMSe - RMSe ) ) ) ,RRSe ) ) ) ) * MLU )", "obj1": 0.9734693877551021, "obj2": 0.016788286401716635}, {"determining": "( ( Max( PN,MDR ) * AMS ) + ( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) / PN ) )", "choosing": "( ( MUR / ( ( RRSe - RMSe ) / ( MUR / CS ) ) ) + ( MUR / DS ) )", "obj1": 0.20408163265306123, "obj2": 0.7834356779254897}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MLU + MUC ) - Max( MLU,MUR ) ) ) + Max( RMSe,MUR ) ) * RMSe ) ,( MUC * RRSe ) )", "obj1": 0.8142857142857143, "obj2": 0.1190810145957922}], "8": [{"determining": "( ( Const - FirstVNF_Mem ) - ( RRS - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,( ( MUR + MUC ) - ( Min( MLU ,( ( Max( DS,DS ) * MUC ) + RMSe ) ) + DS ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8905746612722424}, {"determining": "Min( RRS ,( ( ( FirstVNF_Mem / MDR ) * Max( ACS,Const ) ) - ( ( ARS * FirstVNF_Mem ) + ( MRS + BR ) ) ) )", "choosing": "Min( ( DS + MUM ) ,( ( CS / MUR ) * ( MLU / Max( Min( MUM ,MLU ),Max( MUR,( ( MUR * MLU ) / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) - FirstVNF_RAM ) + ( ( Max( CRS,CRS ) / ( FirstVNF_RAM_Server - DDR ) ) * PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.09795918367346938, "obj2": 0.8905746612722424}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( CRS ,( CRS + ( DDR / Const ) ) ) + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( RMSe,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.4252067902124707}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( Max( ACS,BR ) ,CRS ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.45714285714285713, "obj2": 0.4633864858184054}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "Min( Max( ( DDR - MRS ),( RRS + FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MDR / DDR ) * ( ARS - FirstVNF_CPU ) ) ) - Max( ( ( ARS - PN ) / FirstVNF_CPU_Server ),( Const / BR ) ) ) )", "choosing": "( ( ( MUM * DS ) * Max( DS,MUC ) ) - Max( MUC,Min( RRSe ,RMSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.4976515521580328}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.4105209753372274}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.4764420004597811}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( FirstVNF_Mem_Server ,DDR ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe / ( MUR * RMSe ) ) / ( MLU / MLU ) )", "obj1": 0.3795918367346939, "obj2": 0.5641171751654138}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,( ( ( DDR + BR ) + PN ) * FirstVNF_CPU_Server ) ) + ( Max( AMS,PN ) / Const ) ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( DS - MUC ) ) - ( MLU - Min( DS ,Min( MUC ,CS ) ) ) )", "obj1": 0.39591836734693875, "obj2": 0.5471216577343662}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2943573987226581}, {"determining": "( ( ( ( DDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,( ( ( DS / CS ) / ( RMSe / CS ) ) - Min( RCSe ,Min( RMSe ,MUM ) ) ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.5693877551020409, "obj2": 0.3675819051192935}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3142857142857143, "obj2": 0.6250932971765492}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.8591836734693877, "obj2": 0.0758546719455066}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUC ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.6877551020408164, "obj2": 0.22184483955825796}, {"determining": "( ( ( ( Const / DDR ) - Max( MDR,Max( Max( Max( ( RRS + ACS ),( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7204081632653061, "obj2": 0.21596426789597029}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / DS ) )", "obj1": 0.29591836734693877, "obj2": 0.6507375096407826}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.3, "obj2": 0.6374118995548833}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_Mem / Min( ( BR / RRS ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR / ( ( DS * CS ) / CS ) ) - ( Min( ( ( DS + MUR ) / Min( DS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6551020408163265, "obj2": 0.2820944793573579}, {"determining": "( ( DDR / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( ( BR / MRS ) / ( ARS / FirstVNF_CPU ) ) ),( AMS + ACS ) ),( Min( BR ,( AMS - DDR ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) / Max( Min( DS ,( ( Min( ( DS / MUM ) ,RRSe ) * MUM ) + Max( ( ( MUM - MUM ) / MUR ),RMSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.25285470005752186}, {"determining": "( ( Const / PN ) - Max( MDR,Max( ( BR * Const ),Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ) ) ) )", "choosing": "Min( ( MUC / ( MUR / MLU ) ) ,( ( MUR / CS ) + ( MLU / Max( Max( MUR,( RRSe / MUM ) ),Min( MUM ,MLU ) ) ) ) )", "obj1": 0.6122448979591837, "obj2": 0.3254397717753526}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( Min( Max( ACS,BR ) ,CRS ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe / ( Min( DS ,MUC ) - ( ( MUC - Min( Max( MUR,CS ) ,MLU ) ) - MUC ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5306122448979592, "obj2": 0.398550047480403}, {"determining": "( Min( BR ,( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( Min( Min( ( MUR - MUM ) ,( DS * RMSe ) ) ,( Max( DS,DS ) + Min( MLU ,MUM ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / ( Max( MUC,DS ) - ( RCSe - RCSe ) ) ) )", "obj1": 0.6816326530612244, "obj2": 0.24027013995467353}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7728065641215996}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * ( Const * FirstVNF_RAM ) ) ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * RMSe ) / ( RCSe + MUR ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8420288952139668}, {"determining": "Min( Max( ( FirstVNF_RAM * Const ),( FirstVNF_CPU + RRS ) ) ,( ( ( DDR / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( Max( ACS,BR ) ,CRS ) ) )", "choosing": "( CS * ( ( Max( ( ( RRSe + MUR ) / RMSe ),MUM ) + RRSe ) - ( RCSe - RCSe ) ) )", "obj1": 0.5653061224489796, "obj2": 0.3871331430854516}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5822958726287639}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( RRSe / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( DS + RCSe ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6735032888689121}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6991128337730439}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.5775510204081633, "obj2": 0.3497379678382782}, {"determining": "( ( ( ( Const / DDR ) - ( AMS + ACS ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * ( Max( DS,RMSe ) / ( RMSe / CS ) ) ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.726530612244898, "obj2": 0.1930167452902819}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - Max( ( DS - MLU ),Min( CS ,Min( DS ,RMSe ) ) ) ) - RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.04577250603286266}, {"determining": "Min( ( ARS + DDR ) ,( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const - DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU + CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( Max( ( CS - ( MLU / DS ) ),CS ) - MUM ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.054789268535345194}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ARS / MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( PN + RRS ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - RRS ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( ( MUC - MLU ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) / ( MUR * RMSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6001700203378623}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / ( ( ( MUC / ( RRSe / RCSe ) ) - RCSe ) / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.871033296691264}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7547384430050275}, {"determining": "Min( Min( FirstVNF_Mem_Server ,DDR ) ,( ARS + FirstVNF_RAM_Server ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( ( ( ( Max( DS,RMSe ) * MUM ) * MUR ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.16326530612244897, "obj2": 0.8057913386959418}, {"determining": "( ( ( MDR - MRS ) + PN ) + ( ( Const + ( AMS - FirstVNF_RAM ) ) * MRS ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( CS + RRSe ) * Max( MUR,MLU ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7885954498039875}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.32040816326530613, "obj2": 0.6093471073501523}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5748649954408234}, {"determining": "( ( ( ( Const / DDR ) - ( ( ( FirstVNF_RAM * DDR ) / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( CRS + DDR ) ) ) - ( PN - ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU * ( DS + RRSe ) ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * Min( MUR ,RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.6285714285714286, "obj2": 0.28898808103800294}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) - Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( Min( Max( ( RMSe - MUR ),RCSe ) ,( MLU * MLU ) ) * Max( RCSe,( Min( MLU ,( RCSe - MUM ) ) * ( Min( Max( RCSe,RMSe ) ,RRSe ) - CS ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.12417503758820543}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6050303264170301}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + Max( ( RRS + ACS ),( MDR / ARS ) ) ) ),FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC / MUM ) ,( ( CS / Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) + ( MLU / Max( Max( MUR,( MUR / MUM ) ),Min( MUM ,MLU ) ) ) ) )", "obj1": 0.6081632653061224, "obj2": 0.32995539778760774}, {"determining": "Min( Min( ( AMS * PN ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7472658675211663}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,CRS ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8176964233124043}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.9326530612244898, "obj2": 0.03760554325178256}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) - FirstVNF_RAM ) + ( ( Max( CRS,CRS ) / ( FirstVNF_RAM_Server - DDR ) ) * Min( ( MRS * BR ) ,CRS ) ) )", "choosing": "( ( MUR / ( ( DS - RRSe ) / Max( RRSe,( RMSe + ( MUC / DS ) ) ) ) ) + ( MLU / DS ) )", "obj1": 0.2530612244897959, "obj2": 0.7156872526894794}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7986696446525715}, {"determining": "Min( Min( Max( ( Min( ( RRS * FirstVNF_Mem ) ,( AMS + AMS ) ) + Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( BR + PN ) ) ),Min( ( Min( Min( Max( ARS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) ) ,( FirstVNF_RAM - ( PN + MRS ) ) ) ,Min( Const ,CRS ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Max( ( ( MUM - MUM ) / MUR ),RMSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8537251164567792}, {"determining": "Min( RRS ,( ( ( Const / PN ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( ( BR * ARS ),( DDR * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( ( RCSe * RMSe ) ,MUC ) ) - ( ( ( MLU * DS ) / ( RRSe - CS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS / MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.0645138560646315}, {"determining": "Min( ( Max( DDR,CRS ) * CRS ) ,Min( Const ,RRS ) )", "choosing": "Max( ( MUR / MUC ),( Min( RRSe ,( RMSe + Min( CS ,Max( ( Max( RMSe,RCSe ) * MUM ),( RRSe / ( MUM - DS ) ) ) ) ) ) * CS ) )", "obj1": 0.24897959183673468, "obj2": 0.7322588193995597}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + ARS ) - Max( Max( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + MUC ) / ( Min( RRSe ,MUC ) - ( CS * ( ( ( RMSe / DS ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( Max( ( Min( ( ( ( DS - RCSe ) / ( RCSe + DS ) ) - CS ) ,Min( CS ,CS ) ) / MUR ),DS ),Min( Max( RRSe,MUC ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.11071293705989192}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ( Const - MDR ) / ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RCSe,( ( MLU - DS ) * Min( Min( Max( MLU,Min( ( MLU + DS ) ,( RMSe - RMSe ) ) ) ,RRSe ) ,MLU ) ) ) * ( ( Max( RCSe,MUC ) / ( MUR - MUM ) ) * ( CS * RCSe ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5516990092769448}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / DDR ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.8346938775510204, "obj2": 0.0971090088672503}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5918367346938775, "obj2": 0.3351562209360711}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7758979044629366}, {"determining": "Min( Max( ( FirstVNF_Mem_Server + ( Max( ( FirstVNF_Mem_Server / MRS ),( RRS / FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server / CRS ) ) ),RRS ) ,( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) - ( RRS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUM / ( ( RRSe - RMSe ) / MUR ) ) - MUC ),MLU ) - MUR ) / ( ( RRSe * RCSe ) / ( MUR - RMSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.2756976905808768}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7820748956464395}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.1029392914978612}, {"determining": "( ( ( ( AMS / DDR ) - Max( MDR,Max( Max( Max( ( RRS + ACS ),( MDR / ARS ) ),( AMS + ACS ) ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) / DDR ) - Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( Max( MUR,MLU ) / DS ) / ( Min( Max( MUM,( DS * MLU ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.2515692964554189}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( FirstVNF_CPU_Server + Max( ARS,Min( RRS ,BR ) ) ) ) ) ,( ARS * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( MUC * RCSe ) ) * Max( ( MLU + DS ),Min( ( MLU + ( ( CS / RMSe ) + ( RRSe * CS ) ) ) ,RCSe ) ) )", "obj1": 0.25510204081632654, "obj2": 0.7086615233646092}, {"determining": "( ( ( ( Const / DDR ) - Max( MDR,( Max( Max( ( RRS + ACS ),( MDR / ARS ) ),( AMS + ACS ) ) / ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ) / DDR ) - ( FirstVNF_Mem_Server - MDR ) )", "choosing": "( ( Min( Min( MUM ,CS ) ,MUC ) * CS ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7448979591836735, "obj2": 0.17923150594008427}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) / ( ( ( ( ( ACS - MDR ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RMSe,MUC ) * ( MUC * ( MUC - DS ) ) ) / DS ) - Max( Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ),( ( MUM - RMSe ) * ( MLU / MLU ) ) ) )", "obj1": 0.9448979591836735, "obj2": 0.03221882155277739}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( RRSe / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( DS + RCSe ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7346938775510204, "obj2": 0.18273919902407937}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( RRS - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * ( MUC * ( MUC - DS ) ) ) / MUC ) - Max( Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ),( ( MUM - RMSe ) * ( MLU / MLU ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.38963658940256085}, {"determining": "Min( Max( ( DDR - MRS ),( RRS - FirstVNF_CPU ) ) ,( ( ( Const / DDR ) - ( ( MDR / ARS ) + ( PN * FirstVNF_CPU ) ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( Min( Min( ( MUM - MUR ) ,Max( MUM,Min( Min( MLU ,( RCSe * ( MLU + MLU ) ) ) ,MUR ) ) ) ,( MUR / MUM ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( RRSe * ( RCSe - ( RCSe - MLU ) ) ) ) )", "obj1": 0.7918367346938775, "obj2": 0.13257500514489154}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MUM,( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( DS,MUC ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.7081632653061225, "obj2": 0.2192549601564518}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.1380244640470702}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) ) )", "choosing": "( ( MUR + CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUM - Max( ( ( MLU * DS ) - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) ) ) )", "obj1": 0.8469387755102041, "obj2": 0.08621991735155105}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( Const / DDR ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.5877551020408164, "obj2": 0.3487786924989303}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( AMS,MDR ) ) ),BR ) )", "choosing": "( ( RRSe * RCSe ) * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7409991156106389}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / DDR ) )", "choosing": "( ( MUR + CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) ) ) )", "obj1": 0.8469387755102041, "obj2": 0.08621991735155105}, {"determining": "( Min( Max( ACS,BR ) ,CRS ) + ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,Min( ( MUC - Min( Max( MUR,CS ) ,MLU ) ) ,MUC ) ) / ( RCSe - RRSe ) ) ,( ( Max( DS,CS ) + ( MUC + RCSe ) ) / Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.28775510204081634, "obj2": 0.6800705623885833}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) * ( RRS - BR ) ) / Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Max( MUR,RRSe ) / ( Max( ( RCSe * CS ),MUC ) * ( ( ( ( ( MUM * DS ) * ( MUR - Max( RCSe,RMSe ) ) ) / ( Max( Max( CS,MUM ),MUC ) / RRSe ) ) + ( Min( Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ,RMSe ) * Max( MUR,RMSe ) ) ) * RMSe ) ) )", "obj1": 0.14081632653061224, "obj2": 0.829357200499099}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "Min( ( Max( DS,Min( ( MUC - Min( Max( MUR,CS ) ,MLU ) ) ,MUC ) ) / ( RCSe - RRSe ) ) ,( ( Max( DS,CS ) + ( MUC + RCSe ) ) / Min( ( MUR + RMSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6876364241210339}, {"determining": "Min( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) ) ,Min( Const ,CRS ) )", "choosing": "( ( MUR + CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUM - Max( ( CS - Min( MLU ,MLU ) ),CS ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.05809296490368368}, {"determining": "( ( ( MRS / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) + ( MRS * ( Const + ( Min( MDR ,MDR ) - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( MLU,RCSe ),Max( RRSe,Min( ( ( RMSe + RRSe ) * ( MUM - DS ) ) ,MUM ) ) ) + ( ( CS + RRSe ) * Max( MUR,MLU ) ) )", "obj1": 0.5428571428571428, "obj2": 0.3978150071482363}, {"determining": "Min( Min( Max( ( Min( ( RRS * FirstVNF_Mem ) ,( AMS + AMS ) ) + Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( BR + PN ) ) ),Min( ( Min( Min( Max( ARS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) ) ,( FirstVNF_RAM - ( PN + MRS ) ) ) ,Min( Const ,CRS ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.685789089193012}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.6285714285714286, "obj2": 0.28898808103800294}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RMSe * ( MUC * ( MUC - DS ) ) ) / MUC ) - Max( Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ),( ( MUM - RMSe ) * ( MLU / MLU ) ) ) )", "obj1": 0.7795918367346939, "obj2": 0.14379633031400252}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7653061224489796, "obj2": 0.15498369646305749}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Max( MLU,RRSe ) ) ) )", "obj1": 0.8816326530612245, "obj2": 0.06042441024854651}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * BR ) / ( Max( ( BR * BR ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) ) / Max( Const,MDR ) ) / FirstVNF_CPU_Server ) - ACS ) )", "choosing": "( Max( RCSe,( ( ( Max( RMSe,( Max( MLU,DS ) * ( MUC * MUM ) ) ) - MUR ) - CS ) * Min( MLU ,Min( Max( MLU,( ( RMSe - RMSe ) * Max( MUR,CS ) ) ) ,RRSe ) ) ) ) * ( Min( RCSe ,MUC ) * ( CS * RCSe ) ) )", "obj1": 0.9591836734693877, "obj2": 0.026086804245884342}, {"determining": "Min( Min( ( AMS * PN ) ,( ( Const / DDR ) - ( ( MDR / ARS ) + ( PN * FirstVNF_CPU ) ) ) ) ,Min( ACS ,ACS ) )", "choosing": "( CS * ( Max( MUM,Min( Min( MLU ,( RCSe * ( MLU + MLU ) ) ) ,MUR ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7357265683010815}, {"determining": "( ( ( Min( ( CRS / FirstVNF_RAM ) ,CRS ) + Max( FirstVNF_RAM_Server,ACS ) ) - AMS ) / ( ACS + ( PN + MDR ) ) )", "choosing": "( ( ( ( MUM - MUM ) * RCSe ) / ( MUC * MUR ) ) / ( ( ( ( MUC + CS ) + ( Min( Min( ( MUR + RMSe ) ,( RRSe - RCSe ) ) ,RMSe ) * Max( MUR,RMSe ) ) ) / RMSe ) * Min( CS ,MLU ) ) )", "obj1": 0.14081632653061224, "obj2": 0.829357200499099}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7714285714285715, "obj2": 0.1443321941684285}, {"determining": "( ( ( ( Const / DDR ) - Max( MDR,Max( Max( Max( ( RRS + ACS ),( MDR / ARS ) ),( AMS + ACS ) ),( Max( Const,FirstVNF_CPU ) + FirstVNF_RAM ) ) ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( ( MLU * MLU ) + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7326530612244898, "obj2": 0.191486725378855}, {"determining": "Min( Min( ( Min( Max( RRS,Const ) ,FirstVNF_Mem_Server ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Max( ACS,( FirstVNF_Mem * DDR ) ) )", "choosing": "Max( Min( RMSe ,Max( ( MUC / ( DS - Max( RCSe,( Max( MUR,MLU ) / CS ) ) ) ),( CS + DS ) ) ),Max( MUR,MUM ) )", "obj1": 0.8122448979591836, "obj2": 0.12129728837355074}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,( MUR - Max( ( MUR * RMSe ),MUM ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.5469387755102041, "obj2": 0.39314615861592683}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ( ARS + Min( FirstVNF_Mem_Server ,BR ) ) / ( MRS / ( RRS * PN ) ) ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUR ) ) * ( ( ( ( RCSe * DS ) / RCSe ) / MUM ) / ( RRSe + RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( AMS ,( ( PN + ( DDR - BR ) ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( CS * ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) )", "obj1": 0.5897959183673469, "obj2": 0.3392605842811401}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "Min( Max( ( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) * Max( FirstVNF_CPU_Server,BR ) ),( RRS * AMS ) ) ,( ( ( Const / DDR ) - ( Min( Max( RRS,( FirstVNF_CPU - PN ) ) ,MDR ) / PN ) ) - ( ( ( AMS * ACS ) + CRS ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RCSe,( ( ( Max( RMSe,RMSe ) - MUR ) - CS ) * ( Min( MLU ,( RCSe - MUM ) ) / Min( Max( MLU,Min( ( MLU + DS ) ,( RMSe - RMSe ) ) ) ,RRSe ) ) ) ) * Min( RRSe ,MUR ) )", "obj1": 0.9918367346938776, "obj2": 0.003186403281747339}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( DDR * CRS ) * ( RRS / ( BR - ACS ) ) ) )", "choosing": "( ( RRSe / ( Min( DS ,MUC ) - ( ( ( ( ( MLU * RCSe ) - RRSe ) + ( RCSe - ( RCSe * MUC ) ) ) - Min( Max( MUR,CS ) ,MLU ) ) - MUC ) ) ) - Max( ( DS + RCSe ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.746938775510204, "obj2": 0.1698242067457401}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) )", "obj1": 0.926530612244898, "obj2": 0.043773436539652065}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.1563966429661016}], "9": [{"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - Max( ( ( MDR + AMS ) / ( ARS - Max( AMS,MDR ) ) ),BR ) )", "choosing": "Max( ( ( RRSe * RCSe ) * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ),Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( RRS ,( ( ( FirstVNF_Mem / MDR ) * Max( ACS,Const ) ) - ( ( ARS * FirstVNF_Mem ) + ( MRS + BR ) ) ) )", "choosing": "Min( ( DS + MUM ) ,( ( CS / MUR ) * ( MLU / Max( Min( MUM ,MLU ),Max( MUR,( ( MUR * MLU ) / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( PN + FirstVNF_Mem_Server ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( Min( Max( RMSe,RMSe ) ,RRSe ),RRSe ) )", "obj1": 0.09183673469387756, "obj2": 0.897216303254678}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "Min( Max( ( DDR - MRS ),( RRS + FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem_Server / DDR ) - ( ( MDR / DDR ) * ( ARS - FirstVNF_CPU ) ) ) - Max( ( ( ARS - PN ) / FirstVNF_CPU_Server ),( Const / BR ) ) ) )", "choosing": "( ( ( MUM * DS ) * Max( DS,MUC ) ) - Max( MUC,Min( RRSe ,RMSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.4976515521580328}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Max( AMS,( CRS / Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,BR ) ) ) ) / Min( FirstVNF_Mem ,DDR ) ) ) - Max( ( AMS - ( CRS / FirstVNF_CPU_Server ) ),( PN - ARS ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.5387755102040817, "obj2": 0.3687590470567974}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,( Max( MRS,ACS ) - ACS ) ) + AMS ) ,( CRS - RRS ) ) )", "choosing": "( CS * ( ( ( RMSe / DS ) / ( RMSe / CS ) ) - ( Max( RRSe,RRSe ) * CS ) ) )", "obj1": 0.4775510204081633, "obj2": 0.4605163384864453}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7296341739067057}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( Min( Max( ACS,BR ) ,CRS ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( RRSe / ( Min( DS ,MUC ) - ( ( MUC - Min( Max( MUR,CS ) ,MLU ) ) - MUC ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5306122448979592, "obj2": 0.398550047480403}, {"determining": "( ( DDR / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( ( BR / MRS ) / ( ARS / FirstVNF_CPU ) ) ),( AMS + ACS ) ),( Min( BR ,( AMS - DDR ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) / Max( Min( DS ,( ( Min( ( DS / MUM ) ,RRSe ) * MUM ) + Max( ( ( MUM - MUM ) / MUR ),RMSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.25285470005752186}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( CS * ( ( RRSe - CS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.24693877551020407, "obj2": 0.7266233443388125}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - ( MDR / DDR ) ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) * RMSe ) ) )", "obj1": 0.3693877551020408, "obj2": 0.5632277722000515}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,( ( ( DDR + BR ) + PN ) * FirstVNF_CPU_Server ) ) + ( Max( AMS,PN ) / Const ) ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( DS - MUC ) ) - ( MLU - Min( DS ,Min( MUC ,CS ) ) ) )", "obj1": 0.39591836734693875, "obj2": 0.5471216577343662}, {"determining": "( ( Max( FirstVNF_CPU_Server,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( ( ( Max( BR,BR ) - CRS ) + FirstVNF_CPU ) - MRS ) ) * ( AMS / MDR ) ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( MLU ,CS ) * ( MUR * Min( CS ,DS ) ) ) - MUC ) ) / ( CS / CS ) ) ) + ( RMSe / Max( MUM,Min( ( DS - MUC ) ,MUC ) ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6750944529032328}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUC ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.6755102040816326, "obj2": 0.22744751889545486}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.33877551020408164, "obj2": 0.5848807472709594}, {"determining": "( ( ( ( DDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * Max( RRSe,MUM ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,( ( ( DS / CS ) / ( RMSe / CS ) ) - Min( RCSe ,Min( RMSe ,MUM ) ) ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.5693877551020409, "obj2": 0.3675819051192935}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7676765191625567}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( MLU - Max( RMSe,RCSe ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.4252067902124707}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2943573987226581}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.7326530612244898, "obj2": 0.17057299154040276}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_Mem / Min( ( BR / RRS ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR / ( ( DS * CS ) / CS ) ) - ( Min( ( ( DS + MUR ) / Min( DS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6551020408163265, "obj2": 0.2820944793573579}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / ( ( ( MUC / ( RRSe / RCSe ) ) - RCSe ) / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.871033296691264}, {"determining": "( ( Const / DDR ) - Max( MDR,Max( Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Max( MUM,( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( DS,MUC ) ) ) * ( ( Max( MUM,MLU ) / ( RCSe - RRSe ) ) / Max( ( MLU + RRSe ),( MLU + DS ) ) ) )", "obj1": 0.7081632653061225, "obj2": 0.2192549601564518}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ( Const - MDR ) / ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RCSe,( ( MLU - DS ) * Min( Min( Max( MLU,Min( ( MLU + DS ) ,( RMSe - RMSe ) ) ) ,RRSe ) ,MLU ) ) ) * ( ( Max( RCSe,MUC ) / ( MUR - MUM ) ) * ( CS * RCSe ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5516990092769448}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * Min( RMSe ,Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.7142857142857143, "obj2": 0.19709097829943717}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6991128337730439}, {"determining": "Min( Max( ( FirstVNF_Mem_Server + ( Max( ( FirstVNF_Mem_Server / MRS ),( RRS / FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server / CRS ) ) ),RRS ) ,( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) - ( RRS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUM / ( ( RRSe - RMSe ) / MUR ) ) - MUC ),MLU ) - MUR ) / ( ( RRSe * RCSe ) / ( MUR - RMSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.2756976905808768}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUC ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.6877551020408164, "obj2": 0.22184483955825796}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.746938775510204, "obj2": 0.16815483450339638}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3142857142857143, "obj2": 0.6250932971765492}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / DS ) )", "obj1": 0.29591836734693877, "obj2": 0.6507375096407826}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.4219275038148484}, {"determining": "Min( Max( ( MRS - FirstVNF_Mem ),( FirstVNF_CPU + Min( AMS ,DDR ) ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,Max( Min( DS ,RMSe ),( DS + CS ) ) ) - ( CS * RCSe ) ) * ( ( ( CS + MUM ) + MUC ) * MLU ) )", "obj1": 0.20612244897959184, "obj2": 0.7584483864599723}, {"determining": "( ( Const / PN ) - Max( MDR,Max( ( BR * Const ),Max( Max( FirstVNF_RAM_Server,( MDR / ARS ) ),( AMS + ACS ) ) ) ) )", "choosing": "Min( ( MUC / ( MUR / MLU ) ) ,( ( MUR / CS ) + ( MLU / Max( Max( MUR,( RRSe / MUM ) ),Min( MUM ,MLU ) ) ) ) )", "obj1": 0.6122448979591837, "obj2": 0.3254397717753526}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7547384430050275}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7986696446525715}, {"determining": "Min( ( PN + CRS ) ,( ( ( ( MDR / DDR ) + ( ( MDR / DDR ) * FirstVNF_Mem_Server ) ) - ( Const / DDR ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ),( ( MUR - ( ( DS - MLU ) / Min( Min( ( RCSe + MLU ) ,RMSe ) ,CS ) ) ) - RCSe ) )", "obj1": 0.8959183673469387, "obj2": 0.053581696612106204}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - Max( ( DS - MLU ),Min( CS ,Min( DS ,RMSe ) ) ) ) - RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.04577250603286266}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( MLU + ( DS - MLU ) ) ,RCSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7085625712949661}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.8591836734693877, "obj2": 0.0758546719455066}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.6285714285714286, "obj2": 0.28898808103800294}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) - Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( Min( Max( ( RMSe - MUR ),RCSe ) ,( MLU * MLU ) ) * Max( RCSe,( Min( MLU ,( RCSe - MUM ) ) * ( Min( Max( RCSe,RMSe ) ,RRSe ) - CS ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.12417503758820543}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.1563966429661016}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.4764420004597811}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + ( ( ( FirstVNF_RAM_Server - ( ACS / Min( FirstVNF_Mem_Server ,AMS ) ) ) / MRS ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * ( ( RMSe - RRSe ) / MLU ) ) ) / ( Min( CS ,MLU ) * ( MUR * RCSe ) ) ) + ( Max( MUR,RMSe ) * Min( RCSe ,RMSe ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7838795428401623}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( RRSe / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( DS + RCSe ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6735032888689121}, {"determining": "( ( ( ( Const / DDR ) - ( AMS + ACS ) ) / DDR ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * ( Max( DS,RMSe ) / ( RMSe / CS ) ) ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.726530612244898, "obj2": 0.1930167452902819}, {"determining": "( Min( ( BR - AMS ) ,DDR ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( Max( Min( RCSe ,MUC ),( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( ( MLU + MUC ) + Max( MUR,RCSe ) ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.4764420004597811}, {"determining": "( ( ( MDR - MRS ) + PN ) + ( ( Const + ( AMS - FirstVNF_RAM ) ) * MRS ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( CS + RRSe ) * Max( MUR,MLU ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7885954498039875}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( ( ( MUR / RRSe ) + Max( DS,RRSe ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.9551020408163265, "obj2": 0.025926863084071338}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.5775510204081633, "obj2": 0.3497379678382782}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.4105209753372274}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.2938775510204082, "obj2": 0.6682912639298778}, {"determining": "Min( Min( ( Min( Max( RRS,Const ) ,FirstVNF_Mem_Server ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Max( ACS,( FirstVNF_Mem * DDR ) ) )", "choosing": "Max( Min( RMSe ,Max( ( MUC / ( DS - Max( RCSe,( Max( MUR,MLU ) / CS ) ) ) ),( CS + DS ) ) ),Max( MUR,MUM ) )", "obj1": 0.8122448979591836, "obj2": 0.12129728837355074}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.3, "obj2": 0.6374118995548833}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - CRS ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,CS ) * ( MUR * RMSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6341355551851133}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6050303264170301}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( BR * MRS ) / ( Const / ( Max( FirstVNF_CPU_Server,Const ) + ( ( ( BR - AMS ) - DDR ) - CRS ) ) ) ) / MRS ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,( ( ( MLU * RMSe ) - Max( RMSe,MLU ) ) - Max( RMSe,( MUC * MUM ) ) ) ),DS ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( RMSe,( CS + DS ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.57795371759185}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( ( ( MUR / RRSe ) + Max( DS,RRSe ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.805006324322285}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) / DDR ) + FirstVNF_Mem_Server ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * ( Max( DS,RMSe ) / ( RMSe / CS ) ) ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.025926863084071338}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( Max( ACS,BR ) ,CRS ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.45714285714285713, "obj2": 0.4633864858184054}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.4105209753372274}, {"determining": "Min( Max( ( DDR - MRS ),( RRS - FirstVNF_CPU ) ) ,( ( ( Const / DDR ) - ( ( MDR / ARS ) + ( PN * FirstVNF_CPU ) ) ) - Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( Min( Min( ( MUM - MUR ) ,Max( MUM,Min( Min( MLU ,( RCSe * ( MLU + MLU ) ) ) ,MUR ) ) ) ,( MUR / MUM ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( RRSe * ( RCSe - ( RCSe - MLU ) ) ) ) )", "obj1": 0.7918367346938775, "obj2": 0.13257500514489154}, {"determining": "Min( Min( Max( ( Min( ( RRS * FirstVNF_Mem ) ,( AMS + AMS ) ) + Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( BR + PN ) ) ),Min( ( Min( Min( Max( ARS,MRS ) ,MDR ) ,DDR ) / ( FirstVNF_CPU - PN ) ) ,( Min( ARS ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) ) ,( FirstVNF_RAM - ( PN + MRS ) ) ) ,Min( Const ,CRS ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Max( ( ( MUM - MUM ) / MUR ),RMSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8537251164567792}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ( ARS + Min( FirstVNF_Mem_Server ,BR ) ) / ( MRS / ( RRS * PN ) ) ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUR ) ) * ( ( ( ( RCSe * DS ) / RCSe ) / MUM ) / ( RRSe + RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "( ( ( Const / DDR ) - ( FirstVNF_Mem_Server + ( MDR / DDR ) ) ) + ( ( Const + ( AMS - Min( ( CRS * FirstVNF_Mem ) ,( FirstVNF_RAM_Server - CRS ) ) ) ) - MRS ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,DS ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.45918367346938777, "obj2": 0.46217209139467025}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( Const / DDR ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.5877551020408164, "obj2": 0.3487786924989303}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,PN ) ) )", "choosing": "( Min( ( CS + RRSe ) ,Min( RRSe ,( ( RMSe * RMSe ) * MLU ) ) ) - ( MUR / Min( ( DS - MUC ) ,( CS / MUR ) ) ) )", "obj1": 0.8816326530612245, "obj2": 0.05881541864439911}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / DDR ) )", "choosing": "( ( MUR + CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) ) ) )", "obj1": 0.8571428571428571, "obj2": 0.08030867831191911}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.32040816326530613, "obj2": 0.6093471073501523}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + ARS ) - Max( Max( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + MUC ) / ( Min( RRSe ,MUC ) - ( CS * ( ( ( RMSe / DS ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( Max( ( Min( ( ( ( DS - RCSe ) / ( RCSe + DS ) ) - CS ) ,Min( CS ,CS ) ) / MUR ),DS ),Min( Max( RRSe,MUC ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.11071293705989192}, {"determining": "Min( ( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * ( Const * FirstVNF_RAM ) ) ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( MUR * RMSe ) ,RCSe ) ) )", "obj1": 0.25918367346938775, "obj2": 0.706556560825466}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( RRS - PN ) / Const ) + FirstVNF_Mem_Server ) ) - Max( ( ( ACS * AMS ) + CRS ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * ( MUC * ( MUC - DS ) ) ) / MUC ) - Max( Min( Max( RRSe,MUC ) ,Max( MLU,Max( ( DS - MLU ),Min( CS ,Min( DS ,RMSe ) ) ) ) ),( ( MUM - RMSe ) * ( MLU / MLU ) ) ) )", "obj1": 0.6, "obj2": 0.33220237956931176}, {"determining": "( ( ( ( Const / DDR ) - ( ( ( FirstVNF_RAM * DDR ) / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( CRS + DDR ) ) ) - ( PN - ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU * ( DS + RRSe ) ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * Min( MUR ,RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.6285714285714286, "obj2": 0.28898808103800294}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( MDR - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) * ( Const * FirstVNF_RAM ) ) ) + ( AMS * FirstVNF_Mem ) ) * Min( RRS ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * RMSe ) / ( RCSe + MUR ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8420288952139668}, {"determining": "( ( RRS - ( PN + MRS ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( DS / ( CS + MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8835424200717373}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) )", "obj1": 0.926530612244898, "obj2": 0.043773436539652065}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.8306122448979592, "obj2": 0.09702328473113132}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7653061224489796, "obj2": 0.15498369646305749}, {"determining": "Min( RRS ,( ( ( Const / PN ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( ( BR * ARS ),( DDR * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( ( RCSe * RMSe ) ,MUC ) ) - ( ( ( MLU * DS ) / ( RRSe - CS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS / MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.0645138560646315}, {"determining": "( Min( Max( ACS,BR ) ,CRS ) + ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.09591836734693877, "obj2": 0.8853452699751119}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( DS - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.0645138560646315}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8204081632653061, "obj2": 0.10760317561555809}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,CRS ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8400685384691654}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5748649954408234}, {"determining": "Min( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,( Min( ( ( DDR - MRS ) - ( FirstVNF_CPU + Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( CRS * ARS ) ) ) ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / DDR ) )", "choosing": "( ( ( ( ( MUM + Max( DS,RCSe ) ) + CS ) / MUC ) / ( Max( ( ( ( RMSe - MUC ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.8387755102040816, "obj2": 0.09505064258788769}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( AMS ,( ( PN + ( DDR - BR ) ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( CS * ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) )", "obj1": 0.5897959183673469, "obj2": 0.3392605842811401}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( CRS ,( CRS + ( DDR / Const ) ) ) + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( RMSe,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.4252067902124707}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5748649954408234}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5918367346938775, "obj2": 0.3351562209360711}, {"determining": "Min( Min( FirstVNF_Mem ,Const ) ,( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) ) )", "choosing": "( ( MUR + CS ) / ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUM - Max( ( ( MLU * DS ) - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) ) ) )", "obj1": 0.8408163265306122, "obj2": 0.08943128604064525}, {"determining": "( ( ( Min( ( CRS / FirstVNF_RAM ) ,CRS ) + Max( FirstVNF_RAM_Server,ACS ) ) - AMS ) / ( ACS + ( PN + MDR ) ) )", "choosing": "( ( ( ( MUM - MUM ) * RCSe ) / ( MUC * MUR ) ) / ( ( ( ( MUC + CS ) + ( Min( Min( ( MUR + RMSe ) ,( RRSe - RCSe ) ) ,RMSe ) * Max( MUR,RMSe ) ) ) / RMSe ) * Min( CS ,MLU ) ) )", "obj1": 0.14081632653061224, "obj2": 0.829357200499099}, {"determining": "( Max( Max( Max( FirstVNF_RAM,( ( ( PN * ( AMS * MRS ) ) / FirstVNF_Mem_Server ) / ARS ) ),Min( Const ,( Max( ( ACS * Max( ARS,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) - MDR ) ) ),( ( MDR / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Min( ( MLU + MUC ) ,MUR ) / ( Min( ( ( MUM + Min( ( MUC + Max( RMSe,MLU ) ) ,( ( RCSe - RRSe ) - MUC ) ) ) / Min( ( MUM * ( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( CS,MUC ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8124349669754508}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7693877551020408, "obj2": 0.14649469303114385}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.6050303264170301}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( Min( DS ,MUC ) - ( MUR - MUC ) ) ) - Max( ( DS + RCSe ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7244897959183674, "obj2": 0.19337674114740777}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( Max( CRS,DDR ) * Max( Const,MRS ) ) )", "choosing": "( ( MUC + RRSe ) / ( Min( CS ,MLU ) * ( ( DS - MUC ) / ( CS / DS ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.045574526777445855}], "10": [{"determining": "( ( Min( Max( ACS,BR ) ,CRS ) - ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ( Const - MDR ) / ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RCSe,( ( MLU - DS ) * Min( Min( Max( MLU,Min( ( MLU + DS ) ,( RMSe - RMSe ) ) ) ,RRSe ) ,MLU ) ) ) * ( ( ( MUC - Min( Max( MUR,CS ) ,MLU ) ) - MUC ) * ( CS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - Max( ( ( MDR + AMS ) / ( ARS - Max( AMS,MDR ) ) ),BR ) )", "choosing": "Max( ( ( RRSe * RCSe ) * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ),Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( FirstVNF_CPU ,BR ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Max( ( ( MUM - MUM ) / MUR ),RMSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8973389905587966}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / ARS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,FirstVNF_RAM ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( RMSe * MLU ) / ( ( CS - MUC ) / ( CS / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4892894587312355}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7296341739067057}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + Max( ARS,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5265306122448979, "obj2": 0.3945827193549305}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,( ( ( DDR + BR ) + PN ) * FirstVNF_CPU_Server ) ) + ( Max( AMS,PN ) / Const ) ) ,( CRS + RRS ) ) )", "choosing": "( ( MUR / ( DS - MUC ) ) - ( MLU - Min( DS ,Min( MUC ,CS ) ) ) )", "obj1": 0.39591836734693875, "obj2": 0.5471216577343662}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.5979591836734693, "obj2": 0.3004936321044636}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Max( AMS,( CRS / Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,BR ) ) ) ) / Min( FirstVNF_Mem ,DDR ) ) ) - Max( ( AMS - ( CRS / FirstVNF_CPU_Server ) ),( PN - ARS ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.5387755102040817, "obj2": 0.3687590470567974}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( CS * ( ( RRSe - CS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.24693877551020407, "obj2": 0.7266233443388125}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.2816326530612245, "obj2": 0.6566924243662103}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUC ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.6755102040816326, "obj2": 0.22744751889545486}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( BR * MRS ) / ( Const / ( Max( FirstVNF_CPU_Server,Const ) + ( ( ( BR - AMS ) - DDR ) - CRS ) ) ) ) / MRS ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,( ( ( MLU * RMSe ) - Max( RMSe,MLU ) ) - Max( RMSe,( MUC * MUM ) ) ) ),DS ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( Min( BR ,( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( ( ( MUR * RMSe ) / ( RCSe + MUR ) ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.6653061224489796, "obj2": 0.25214367461268145}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - ( MDR / DDR ) ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) * RMSe ) ) )", "obj1": 0.3693877551020408, "obj2": 0.5632277722000515}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUC ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.6877551020408164, "obj2": 0.22184483955825796}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5857142857142857, "obj2": 0.32905697487013713}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * Min( RMSe ,Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.7020408163265306, "obj2": 0.20338495157496134}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.9326530612244898, "obj2": 0.0314476423349831}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_Mem / Min( ( BR / RRS ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR / ( ( DS * CS ) / CS ) ) - ( Min( ( ( DS + MUR ) / Min( DS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6551020408163265, "obj2": 0.2820944793573579}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / ( ( ( MUC / ( RRSe / RCSe ) ) - RCSe ) / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.871033296691264}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) * RMSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.5511994757220077}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.4816326530612245, "obj2": 0.44438169479253525}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3142857142857143, "obj2": 0.6250932971765492}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - ( MDR / DDR ) ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.2938775510204082, "obj2": 0.6456730025857382}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.5775510204081633, "obj2": 0.3497379678382782}, {"determining": "Min( Max( ( DDR - MRS ),CRS ) ,( ( ( Const / DDR ) - ( ( ( MRS * FirstVNF_Mem_Server ) / DDR ) + FirstVNF_Mem_Server ) ) - ( ( ( ACS * AMS ) + CRS ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Max( ( MUR * RRSe ),( ( MUR + RCSe ) * RCSe ) ) * ( ( ( ( MUR / RRSe ) + Max( RRSe,DS ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.9551020408163265, "obj2": 0.02424540168103003}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7676765191625567}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / DS ) )", "obj1": 0.2693877551020408, "obj2": 0.6750944529032328}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.5530612244897959, "obj2": 0.3592425825939673}, {"determining": "Min( Max( ( MRS - DDR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,( ( ( Const / DDR ) - ( ( FirstVNF_CPU + ( ( FirstVNF_Mem + RRS ) / ( FirstVNF_CPU - PN ) ) ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) )", "choosing": "( ( MUR / ( ( DS - ( RCSe * RMSe ) ) / ( CS / MUR ) ) ) - ( Min( Min( ( DS + MUR ) ,Min( CS ,MUR ) ) ,MLU ) * ( RCSe * RMSe ) ) )", "obj1": 0.9693877551020408, "obj2": 0.014918602753620662}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.4764420004597811}, {"determining": "Min( Max( ( MRS - FirstVNF_Mem ),( FirstVNF_CPU + Min( AMS ,DDR ) ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,Max( Min( DS ,RMSe ),( DS + CS ) ) ) - ( CS * RCSe ) ) * ( ( ( CS + MUM ) + MUC ) * MLU ) )", "obj1": 0.20612244897959184, "obj2": 0.7584483864599723}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) - Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( Min( Max( ( RMSe - MUR ),RCSe ) ,( MLU * MLU ) ) * Max( RCSe,( Min( MLU ,( RCSe - MUM ) ) * ( Min( Max( RCSe,RMSe ) ,RRSe ) - CS ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.12417503758820543}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6991128337730439}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) + ( ( BR + DDR ) / ( CRS + DDR ) ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.5571428571428572, "obj2": 0.3507608895096881}, {"determining": "Min( Min( ( Min( Max( RRS,Const ) ,FirstVNF_Mem_Server ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Max( ACS,( FirstVNF_Mem * DDR ) ) )", "choosing": "Max( Min( RMSe ,Max( ( MUC / ( DS - Max( RCSe,( Max( MUR,MLU ) / CS ) ) ) ),( CS + DS ) ) ),Max( MUR,MUM ) )", "obj1": 0.8122448979591836, "obj2": 0.12129728837355074}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ( ARS + Min( FirstVNF_Mem_Server ,BR ) ) / ( MRS / ( RRS * PN ) ) ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUR ) ) * ( ( ( ( RCSe * DS ) / RCSe ) / MUM ) / ( RRSe + RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "Min( Min( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.7795918367346939, "obj2": 0.14024268369877496}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Min( Max( ACS,BR ) ,CRS ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,DS ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7877551020408163, "obj2": 0.1319470823711639}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.7326530612244898, "obj2": 0.17057299154040276}, {"determining": "( ( ( Min( ( CRS / FirstVNF_RAM ) ,CRS ) + Max( FirstVNF_RAM_Server,ACS ) ) - AMS ) / ( ACS + ( PN + MDR ) ) )", "choosing": "( ( ( ( MUM - MUM ) * RCSe ) / ( MUC * MUR ) ) / ( ( ( ( MUC + CS ) + ( Min( Min( ( MUR + RMSe ) ,( RRSe - RCSe ) ) ,RMSe ) * Max( MUR,RMSe ) ) ) / RMSe ) * Min( CS ,MLU ) ) )", "obj1": 0.14081632653061224, "obj2": 0.829357200499099}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( AMS ,( ( PN + ( DDR - BR ) ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6632653061224489, "obj2": 0.26734379730120983}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( CRS ,( CRS + ( DDR / Const ) ) ) + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( RMSe,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.4252067902124707}, {"determining": "( ( ( BR - BR ) / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / ( MRS - ( FirstVNF_Mem_Server * MDR ) ) ),MRS ) ) ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8431069927389233}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7693877551020408, "obj2": 0.14649469303114385}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( Const / DDR ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) )", "obj1": 0.5836734693877551, "obj2": 0.3332431837779471}, {"determining": "( ( ( ( Const / DDR ) - ( ( ( FirstVNF_RAM * DDR ) / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( CRS + DDR ) ) ) - ( PN - ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU * ( DS + RRSe ) ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * Min( MUR ,RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.6285714285714286, "obj2": 0.28898808103800294}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * Min( RMSe ,Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.7244897959183674, "obj2": 0.18584916788739614}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2943573987226581}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.4105209753372274}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7986696446525715}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7547384430050275}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( RMSe,( CS + DS ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.57795371759185}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( ( ( MUR / RRSe ) + Max( DS,RRSe ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.805006324322285}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( Const,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.863265306122449, "obj2": 0.07547444514651565}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,CRS ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8400685384691654}, {"determining": "( ( Max( FirstVNF_CPU_Server,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( ( ( Max( BR,BR ) - CRS ) + FirstVNF_CPU ) - MRS ) ) * ( AMS / MDR ) ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( MLU ,CS ) * ( MUR * Min( CS ,DS ) ) ) - MUC ) ) / ( CS / CS ) ) ) + ( RMSe / Max( MUM,Min( ( DS - MUC ) ,MUC ) ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6750944529032328}, {"determining": "( Min( Max( ACS,BR ) ,CRS ) + CRS )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ),Max( DS,RRSe ) )", "obj1": 0.08979591836734693, "obj2": 0.8856287992020602}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUR / Min( DS ,MUC ) ) - ( ( Max( MUR,MLU ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9061224489795918, "obj2": 0.05050113862043958}, {"determining": "( ( ( ( MDR - RRS ) + Max( DDR,FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + ( Max( DS,( RCSe + DS ) ) + Max( Min( CS ,Min( CS ,( MUR + RMSe ) ) ),Min( DS ,MLU ) ) ) ) / ( ( RRSe / CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,RMSe ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3326530612244898, "obj2": 0.594573032117624}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.4105209753372274}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + ( ( ( FirstVNF_RAM_Server - ( ACS / Min( FirstVNF_Mem_Server ,AMS ) ) ) / MRS ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * ( ( RMSe - RRSe ) / MLU ) ) ) / ( Min( CS ,MLU ) * ( MUR * RCSe ) ) ) + ( Max( MUR,RMSe ) * Min( RCSe ,RMSe ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7838795428401623}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ) ) ) )", "choosing": "( ( RRSe / DS ) / ( Min( CS ,MLU ) * ( ( DS - MUC ) / ( CS / MUR ) ) ) )", "obj1": 0.9612244897959183, "obj2": 0.02297678764119158}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) + MLU ) ,RCSe ) ) )", "obj1": 0.7448979591836735, "obj2": 0.16410312022661525}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ),( FirstVNF_CPU + PN ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / RRS ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( RMSe / CS ) ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * Min( MUR ,RMSe ) ) )", "obj1": 0.9244897959183673, "obj2": 0.03928280481147809}, {"determining": "Min( Max( ( FirstVNF_Mem_Server + ( Max( ( FirstVNF_Mem_Server / MRS ),( RRS / FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server / CRS ) ) ),RRS ) ,( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) - ( RRS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUM / ( ( RRSe - RMSe ) / MUR ) ) - MUC ),MLU ) - MUR ) / ( ( RRSe * RCSe ) / ( MUR - RMSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.2756976905808768}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( DS - MUC ) ) - ( MLU - Min( DS ,Min( MUC ,CS ) ) ) )", "obj1": 0.7571428571428571, "obj2": 0.15856670349260885}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( RCSe - RCSe ) ),( ( MUR - Max( ( DS - MLU ),Min( CS ,Min( DS ,RMSe ) ) ) ) - RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.04577250603286266}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.32040816326530613, "obj2": 0.6093471073501523}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7045050859320146}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.4219275038148484}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.4764420004597811}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / ( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) ) ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,( ( CS / DS ) + Min( MUC ,MUR ) ) ),( DS + CS ) ) ) )", "obj1": 0.47959183673469385, "obj2": 0.4541243669971787}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( MLU + ( DS - MLU ) ) ,RCSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7085625712949661}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.33877551020408164, "obj2": 0.5848807472709594}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,( ( ( DDR + BR ) + PN ) * FirstVNF_CPU_Server ) ) + ( Max( AMS,PN ) / Const ) ) ,( CRS + RRS ) ) )", "choosing": "( Max( ( ( ( MUC - RMSe ) + ( RCSe * MUM ) ) + Min( ( RRSe / MUM ) ,Max( RCSe,Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.46938775510204084, "obj2": 0.46112791772371364}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7653061224489796, "obj2": 0.15498369646305749}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( DS - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.0645138560646315}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.710204081632653, "obj2": 0.19816313771859884}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) / ( ( CRS * DDR ) * Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.04242419432844511}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + ARS ) - Max( Max( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + MUC ) / ( Min( RRSe ,MUC ) - ( CS * ( ( ( RMSe / DS ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( Max( ( Min( ( ( ( DS - RCSe ) / ( RCSe + DS ) ) - CS ) ,Min( CS ,CS ) ) / MUR ),DS ),Min( Max( RRSe,MUC ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.11071293705989192}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5748649954408234}, {"determining": "Min( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,( Min( Max( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ACS ) ) / DDR ) )", "choosing": "( ( MUR / ( Max( ( Min( ( MLU + ( DS - MLU ) ) ,RCSe ) + Min( ( RRSe / MUM ) ,Max( RCSe,CS ) ) ),( RCSe - RCSe ) ) / ( Min( ( CS * MUR ) ,MLU ) * ( MUR * RMSe ) ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.8387755102040816, "obj2": 0.09366505336295106}, {"determining": "( Max( Max( Max( FirstVNF_RAM,( ( ( PN * ( AMS * MRS ) ) / FirstVNF_Mem_Server ) / ARS ) ),Min( Const ,( Max( ( ACS * Max( ARS,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) - MDR ) ) ),( ( MDR / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Min( ( MLU + MUC ) ,MUR ) / ( Min( ( ( MUM + Min( ( MUC + Max( RMSe,MLU ) ) ,( ( RCSe - RRSe ) - MUC ) ) ) / Min( ( MUM * ( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( CS,MUC ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8124349669754508}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5748649954408234}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,( Max( MRS,ACS ) - ACS ) ) + AMS ) ,( CRS - RRS ) ) )", "choosing": "( CS * ( ( ( RMSe / DS ) / ( RMSe / CS ) ) - ( Max( RRSe,RRSe ) * CS ) ) )", "obj1": 0.4775510204081633, "obj2": 0.4605163384864453}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.6003559567934406}, {"determining": "( ( Min( ( PN - MRS ) ,( FirstVNF_CPU + RRS ) ) - FirstVNF_RAM ) + ( ( ( MDR + Min( BR ,MRS ) ) / ( Const * FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( MUR / ( RMSe + ( ( RCSe - MUC ) + MLU ) ) ) + ( RMSe / ( MUR / ( RCSe + ( RMSe * MUR ) ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7911605983519432}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "Min( RRS ,( ( ( Const / PN ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( ( BR * ARS ),( DDR * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( ( RCSe * RMSe ) ,MUC ) ) - ( ( ( MLU * DS ) / ( RRSe - CS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS / MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.0645138560646315}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.4219275038148484}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( Max( ACS,Min( FirstVNF_CPU_Server ,PN ) ) ,CRS ) ) )", "choosing": "( ( Max( RCSe,MLU ) / RRSe ) / ( Min( ( ( MLU * ( MUR + RRSe ) ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.45714285714285713, "obj2": 0.4633864858184054}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - CRS ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,CS ) * ( MUR * RMSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6341355551851133}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.6285714285714286, "obj2": 0.28898808103800294}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * MLU ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8285714285714286, "obj2": 0.1028849412725076}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + MDR ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( CRS,( Min( FirstVNF_Mem ,Min( FirstVNF_CPU_Server ,ACS ) ) / CRS ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( RRSe + DS ) ) ) ) ) / ( ( RMSe - DS ) * Max( MUM,Max( MUC,( RCSe + ( ( MLU - Max( RCSe,DS ) ) - ( RRSe * ( MLU - MUC ) ) ) ) ) ) ) )", "obj1": 0.7204081632653061, "obj2": 0.18694522996961455}, {"determining": "( ( RRS - ( PN + MRS ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( DS / ( CS + MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8835424200717373}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.3, "obj2": 0.6374118995548833}], "11": [{"determining": "( ( ( FirstVNF_CPU_Server / MRS ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( RMSe,( CS + DS ) ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,BR ) ,CRS ) - ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( PN / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ( Const - MDR ) / ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RCSe,( ( MLU - DS ) * Min( Min( Max( MLU,Min( ( MLU + DS ) ,( RMSe - RMSe ) ) ) ,RRSe ) ,MLU ) ) ) * ( ( ( MUC - Min( Max( MUR,CS ) ,MLU ) ) - MUC ) * ( CS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( AMS * FirstVNF_Mem ) ) * Min( FirstVNF_CPU ,BR ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Max( ( ( MUM - MUM ) / MUR ),RMSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8973389905587966}, {"determining": "( ( ( Min( ( FirstVNF_RAM - CRS ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( PN - ( FirstVNF_Mem * Min( AMS ,ARS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - ( ( MUM / MUR ) * ( CS - ( DS - CS ) ) ) ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3020733405509064}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.5232810478564882}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + Max( ARS,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( CRS + DDR ) ) ) - ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( RCSe - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.573469387755102, "obj2": 0.3471068947568943}, {"determining": "Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) )", "choosing": "( CS * ( ( RRSe - CS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.24693877551020407, "obj2": 0.7266233443388125}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUC ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.4816326530612245, "obj2": 0.44268789898376315}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Max( AMS,( CRS / Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,BR ) ) ) ) / Min( FirstVNF_Mem ,DDR ) ) ) - Max( ( AMS - ( CRS / FirstVNF_CPU_Server ) ),( PN - ARS ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.5387755102040817, "obj2": 0.3687590470567974}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7296341739067057}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.2, "obj2": 0.7480464250174074}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( BR * MRS ) / ( Const / ( Max( FirstVNF_CPU_Server,Const ) + ( ( ( BR - AMS ) - DDR ) - CRS ) ) ) ) / MRS ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,( ( ( MLU * RMSe ) - Max( RMSe,MLU ) ) - Max( RMSe,( MUC * MUM ) ) ) ),DS ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( Min( BR ,( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( ( ( MUR * RMSe ) / ( RCSe + MUR ) ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.6653061224489796, "obj2": 0.25214367461268145}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - ( MDR / DDR ) ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) * RMSe ) ) )", "obj1": 0.3693877551020408, "obj2": 0.5632277722000515}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( Min( CRS ,FirstVNF_Mem_Server ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),Min( Min( FirstVNF_RAM ,MDR ) ,( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( MLU / MUR ) ) ) - ( MUM - Max( ( ( MUM - ( ( MUM + RMSe ) - Min( RRSe ,MLU ) ) ) - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3818544939874076}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( ( FirstVNF_CPU / DDR ) - ( ( MDR * FirstVNF_Mem_Server ) + Min( ACS ,AMS ) ) ) ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR + DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( Min( ( ( ( RRSe / MUM ) - Min( RRSe ,MUC ) ) + Min( ( MUC + MUC ) ,MUR ) ) ,RRSe ) + MUM ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.2004503813665147}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / BR ) - ( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( ( Max( MUM,RMSe ) * RCSe ) ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.6825201211172104}, {"determining": "( ( ( BR - BR ) / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / ( MRS - ( FirstVNF_Mem_Server * MDR ) ) ),MRS ) ) ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8431069927389233}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) ) )", "choosing": "( Min( ( CS + DS ) ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.6224489795918368, "obj2": 0.2840912578747469}, {"determining": "( ( ( ( DDR / Const ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( Min( MDR ,AMS ) + Max( ARS,( FirstVNF_RAM + Min( ARS ,FirstVNF_RAM_Server ) ) ) ) / Max( CRS,DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) / FirstVNF_Mem ) - PN ) )", "choosing": "( Max( Max( RCSe,MLU ),DS ) / ( Min( ( ( RCSe / RCSe ) / ( MLU * MUC ) ) ,MLU ) * ( Max( ( ( MUM + Min( DS ,Min( DS ,DS ) ) ) * Min( RRSe ,Min( MUR ,( RMSe - RMSe ) ) ) ),CS ) * CS ) ) )", "obj1": 0.46530612244897956, "obj2": 0.45406098621241425}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_Mem / Min( ( BR / RRS ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR / ( ( DS * CS ) / CS ) ) - ( Min( ( ( DS + MUR ) / Min( DS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6551020408163265, "obj2": 0.2820944793573579}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / ( ( ( MUC / ( RRSe / RCSe ) ) - RCSe ) / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.871033296691264}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUC ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.6877551020408164, "obj2": 0.22184483955825796}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.09341469117059217}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4892894587312355}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - Max( ( ( MDR + AMS ) / ( ARS - Max( AMS,( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) ) ),BR ) )", "choosing": "Max( ( ( RRSe * RCSe ) * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ),( MLU * RCSe ) )", "obj1": 0.8510204081632653, "obj2": 0.08794191319011894}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.2816326530612245, "obj2": 0.6566924243662103}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( Max( ACS,Min( FirstVNF_CPU_Server ,PN ) ) ,CRS ) ) )", "choosing": "( ( Max( RCSe,MLU ) / RRSe ) / ( Min( ( ( MLU * ( MUR + RRSe ) ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.45714285714285713, "obj2": 0.4633864858184054}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.39591836734693875, "obj2": 0.5219345587727398}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.5530612244897959, "obj2": 0.3592425825939673}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( FirstVNF_Mem_Server + ( MDR / Min( ( FirstVNF_CPU + ( MDR - BR ) ) ,PN ) ) ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + AMS ) / ( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( RMSe / MUM ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( MUR ,MUM ) ) ,MLU ) * ( Min( RCSe ,( RCSe / ( ( ( MUM * MUR ) * Min( RRSe ,MUC ) ) * MLU ) ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / RRSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.14533323318392638}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ),( CS + DS ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7833583765671398}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.4764420004597811}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.19387755102040816, "obj2": 0.7675441097818931}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4892894587312355}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7551020408163265, "obj2": 0.15716503411156613}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.4105209753372274}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) + ( ( BR + DDR ) / ( CRS + DDR ) ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.5571428571428572, "obj2": 0.3507608895096881}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7676765191625567}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUC ) ) * ( ( ( ( MUR / RRSe ) + Max( DS,RRSe ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.805006324322285}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( CRS ,( CRS + ( DDR / Const ) ) ) + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( RMSe,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.4252067902124707}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUC ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.6755102040816326, "obj2": 0.22744751889545486}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / DS ) )", "obj1": 0.2714285714285714, "obj2": 0.6739831787095887}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ( ARS + Min( FirstVNF_Mem_Server ,BR ) ) / ( MRS / ( RRS * PN ) ) ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUR ) ) * ( ( ( ( RCSe * DS ) / RCSe ) / MUM ) / ( RRSe + RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + ARS ) - Max( Max( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + MUC ) / ( Min( RRSe ,MUC ) - ( CS * ( ( ( RMSe / DS ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( Max( ( Min( ( ( ( DS - RCSe ) / ( RCSe + DS ) ) - CS ) ,Min( CS ,CS ) ) / MUR ),DS ),Min( Max( RRSe,MUC ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.11071293705989192}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / PN ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) / ( MLU * DS ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.9428571428571428, "obj2": 0.027134984381608274}, {"determining": "Min( Max( ( MRS - FirstVNF_Mem ),( FirstVNF_CPU + Min( AMS ,DDR ) ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( RMSe,( CS + DS ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.793130870212797}, {"determining": "( Min( Max( ACS,BR ) ,CRS ) + CRS )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ),Max( DS,RRSe ) )", "obj1": 0.08979591836734693, "obj2": 0.8856287992020602}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6128873274010862}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * ( RMSe / CS ) )", "obj1": 0.8224489795918367, "obj2": 0.10152103295846844}, {"determining": "( Max( Max( Max( FirstVNF_RAM,( ( ( PN * ( AMS * MRS ) ) / FirstVNF_Mem_Server ) / ARS ) ),Min( Const ,( Max( ( ACS * Max( ARS,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) - MDR ) ) ),( ( MDR / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Min( ( MLU + MUC ) ,MUR ) / ( Min( ( ( MUM + Min( ( MUC + Max( RMSe,MLU ) ) ,( ( RCSe - RRSe ) - MUC ) ) ) / Min( ( MUM * ( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( CS,MUC ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8124349669754508}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - CRS ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.28775510204081634, "obj2": 0.6503270782180749}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.5979591836734693, "obj2": 0.3004936321044636}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.7755102040816326, "obj2": 0.14148560716880432}, {"determining": "( ( ( ( RRS - MDR ) + ( ARS * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_Mem + RRS ) ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( DS,RRSe ) )", "obj1": 0.2938775510204082, "obj2": 0.6423330927069044}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - Max( Min( ( FirstVNF_Mem_Server / ( Min( AMS ,PN ) + AMS ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( MUC / MLU ) - Max( ( DS + RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( Min( ( ( Max( DS,DS ) * MUC ) + RMSe ) ,Min( MUM ,RRSe ) ) + Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ),( ( MUM - RMSe ) * ( MLU - MLU ) ) ) )", "obj1": 0.8571428571428571, "obj2": 0.08314757397738244}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7045050859320146}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ),( FirstVNF_CPU + PN ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / RRS ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.05435807500779827}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / ( DS - Max( RCSe,Max( CS,CS ) ) ) ) ) * ( ( ( ( MUR / RRSe ) + Max( DS,RRSe ) ) / MUM ) / ( RRSe + CS ) ) )", "obj1": 0.5102040816326531, "obj2": 0.4207814735566975}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) - Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( Min( Max( ( RMSe - MUR ),RCSe ) ,( MLU * MLU ) ) * Max( RCSe,( Min( MLU ,( RCSe - MUM ) ) * ( Min( Max( RCSe,RMSe ) ,RRSe ) - CS ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.12417503758820543}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6017197493667047}, {"determining": "Min( Min( ( Min( Max( RRS,Const ) ,FirstVNF_Mem_Server ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Max( ACS,( FirstVNF_Mem * DDR ) ) )", "choosing": "Max( Min( RMSe ,Max( ( MUC / ( DS - Max( RCSe,( Max( MUR,MLU ) / CS ) ) ) ),( CS + DS ) ) ),Max( MUR,MUM ) )", "obj1": 0.8122448979591836, "obj2": 0.12129728837355074}, {"determining": "Min( Max( ( FirstVNF_Mem_Server + ( Max( ( FirstVNF_Mem_Server / MRS ),( RRS / FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server / CRS ) ) ),RRS ) ,( ( ( Const / DDR ) - ( ( DDR / Min( Max( BR,ACS ) ,ACS ) ) + FirstVNF_Mem_Server ) ) - ( RRS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUM / ( ( RRSe - RMSe ) / MUR ) ) - MUC ),MLU ) - MUR ) / ( ( RRSe * RCSe ) / ( MUR - RMSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.2756976905808768}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUR / Min( DS ,MUC ) ) - ( ( Max( MUR,MLU ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.9061224489795918, "obj2": 0.05050113862043958}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( ( DDR - MRS ) + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9959183673469387, "obj2": 0.001792246602440555}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( RMSe,( CS + DS ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.57795371759185}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.023901087497508796}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6, "obj2": 0.300040647936768}, {"determining": "Min( Min( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.7795918367346939, "obj2": 0.14024268369877496}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) + MLU ) ,RCSe ) ) )", "obj1": 0.7448979591836735, "obj2": 0.16410312022661525}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.3224489795918367, "obj2": 0.5959928927435774}, {"determining": "Min( Max( ( Min( CRS ,( CRS + ( DDR / Const ) ) ) - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUR / Min( DS ,MUC ) ) - ( ( Max( MUR,MLU ) / ( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.07227393778502843}, {"determining": "( Min( BR ,CRS ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.4764420004597811}, {"determining": "( ( RRS - ( PN + MRS ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( DS / ( CS + MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8835424200717373}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( MLU + ( DS - MLU ) ) ,RCSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7085625712949661}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - CRS ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,CS ) * ( MUR * RMSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6341355551851133}, {"determining": "( ( ( ( MDR - RRS ) + Max( DDR,FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM + ( Max( DS,( RCSe + DS ) ) + Max( Min( CS ,Min( CS ,( MUR + RMSe ) ) ),Min( DS ,MLU ) ) ) ) / ( ( RRSe / CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,RMSe ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.3326530612244898, "obj2": 0.594573032117624}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) * Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - ( MDR / DDR ) ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) * RMSe ) ) )", "obj1": 0.3693877551020408, "obj2": 0.5632277722000515}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.33877551020408164, "obj2": 0.5848807472709594}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( AMS ,( ( PN + ( DDR - BR ) ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6632653061224489, "obj2": 0.26734379730120983}, {"determining": "( ( Max( FirstVNF_CPU_Server,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( ( ( Max( BR,BR ) - CRS ) + FirstVNF_CPU ) - MRS ) ) * ( AMS / MDR ) ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( MLU ,CS ) * ( MUR * Min( CS ,DS ) ) ) - MUC ) ) / ( CS / CS ) ) ) + ( RMSe / Max( MUM,Min( ( DS - MUC ) ,MUC ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3818544939874076}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( Const,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.863265306122449, "obj2": 0.07547444514651565}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * Min( RMSe ,Max( ( CS * MUR ),( CS + DS ) ) ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.8040816326530612, "obj2": 0.12153502625843143}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.16466297746616645}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.6183673469387755, "obj2": 0.29096875760503643}, {"determining": "( ( Min( ( PN - MRS ) ,( FirstVNF_CPU + RRS ) ) - FirstVNF_RAM ) + ( ( ( MDR + Min( BR ,MRS ) ) / ( Const * FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( MUR / ( RMSe + ( ( RCSe - MUC ) + MLU ) ) ) + ( RMSe / ( MUR / ( RCSe + ( RMSe * MUR ) ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7911605983519432}, {"determining": "( ( ( ( Const / DDR ) - ( ( DDR / MDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( CRS + DDR ) ) ) - ( ( ( RRS + PN ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( CS * ( ( ( RMSe / ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - ( Min( MUR ,CS ) - CS ) ) ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6816326530612244, "obj2": 0.22698590039416414}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + MDR ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( CRS,( Min( FirstVNF_Mem ,Min( FirstVNF_CPU_Server ,ACS ) ) / CRS ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( RRSe + DS ) ) ) ) ) / ( ( RMSe - DS ) * Max( MUM,Max( MUC,( RCSe + ( ( MLU - Max( RCSe,DS ) ) - ( RRSe * ( MLU - MUC ) ) ) ) ) ) ) )", "obj1": 0.7204081632653061, "obj2": 0.18694522996961455}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.7306122448979592, "obj2": 0.17146660029271713}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.726530612244898, "obj2": 0.18208153710137015}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2943573987226581}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_CPU_Server ) ) ) ),MRS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( DS / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8319432933790514}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.3122448979591837, "obj2": 0.6293802517399549}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.9326530612244898, "obj2": 0.0314476423349831}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5831290117450217}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.710204081632653, "obj2": 0.19816313771859884}, {"determining": "Min( Max( ( MRS - DDR ),Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,( ( ( Const / DDR ) - ( ( FirstVNF_CPU + ( ( FirstVNF_Mem + RRS ) / ( FirstVNF_CPU - PN ) ) ) + FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem - Min( FirstVNF_Mem_Server ,DDR ) ) ) )", "choosing": "( ( MUR / ( ( DS - ( RCSe * RMSe ) ) / ( CS / MUR ) ) ) - ( Min( Min( ( DS + MUR ) ,Min( CS ,MUR ) ) ,MLU ) * ( RCSe * RMSe ) ) )", "obj1": 0.9693877551020408, "obj2": 0.014918602753620662}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.4105209753372274}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( RMSe,( CS + DS ) ) ) )", "obj1": 0.35918367346938773, "obj2": 0.5687124915846814}], "12": [{"determining": "Min( Min( ( ( ( Const / ACS ) - ( ( ACS / FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) - Max( FirstVNF_CPU,Const ) ) ,FirstVNF_Mem ) ,Min( ACS ,( FirstVNF_Mem * ( Max( RRS,FirstVNF_RAM ) - Max( ARS,Max( ( Max( FirstVNF_CPU_Server,MRS ) - Min( FirstVNF_RAM ,DDR ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "Max( ( ( DS / CS ) + Min( MUC ,MUR ) ),( DS - ( ( RMSe / RCSe ) - ( RCSe - Min( Max( ( RMSe + MUM ),( ( MUC * RCSe ) / MLU ) ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( RMSe,( CS + DS ) ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "Max( ( DS / Max( RCSe,MLU ) ),( Min( ( ( DS + MUR ) / ( ( ( MUC + ( RCSe / RRSe ) ) - MUM ) / RMSe ) ) ,MLU ) * ( MUR * ( Min( ( RMSe * MUC ) ,MUM ) + MLU ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8944845519385545}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.5306122448979592, "obj2": 0.3407286878692227}, {"determining": "( ( ( Min( ( FirstVNF_RAM - CRS ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( PN - ( FirstVNF_Mem * Min( AMS ,ARS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - ( ( MUM / MUR ) * ( CS - ( DS - CS ) ) ) ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3020733405509064}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( MRS ,ARS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RMSe ) - CS ) * Min( MLU ,Min( Max( MLU,MUR ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.42448979591836733, "obj2": 0.47536051534473783}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( Max( MDR,DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Min( FirstVNF_CPU_Server ,DDR ) ) * PN ) ) ) ) - ( Max( ( DDR - MRS ),Max( ( ( Max( Const,FirstVNF_RAM_Server ) + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( ( CS * RMSe ) - ( CS * RCSe ) ) * ( CS / RMSe ) )", "obj1": 0.6510204081632653, "obj2": 0.23476863501495857}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( ( MRS / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.2786266034448102}, {"determining": "( ( PN - Const ) + Min( ( ( Min( ( BR + FirstVNF_Mem ) ,FirstVNF_CPU ) - DDR ) / ( ACS + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,PN ) )", "choosing": "( ( CS + RMSe ) / ( ( CS * ( MLU / ( RMSe / MUR ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7254027709452296}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( DDR / ACS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem - Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) ) / ( MUM + Max( ( ( CS / DS ) + ( MUC - MUR ) ),Max( ( MLU - ( ( MLU * RMSe ) - ( CS - DS ) ) ),RRSe ) ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.21905440606405577}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / BR ) - ( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( ( Max( MUM,RMSe ) * RCSe ) ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.6825201211172104}, {"determining": "( ( Max( BR,Min( ( MRS + MDR ) ,PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( CS * ( Max( ( DS / RMSe ),DS ) - Max( Min( RMSe ,DS ),Min( Min( MUC ,MUR ) ,RRSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.4367041262124089}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( Max( RRS,BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( ( FirstVNF_CPU - Min( ( ACS - MRS ) ,Const ) ) + FirstVNF_RAM ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5465586340688464}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( CRS ,( CRS + ( DDR / Const ) ) ) + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( RMSe,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.4252067902124707}, {"determining": "( ( ( Max( FirstVNF_CPU,ACS ) / ( PN + CRS ) ) + CRS ) - ( Min( CRS ,( CRS / ( FirstVNF_RAM / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RCSe * MLU ) / DS ) / ( RRSe * MLU ) )", "obj1": 0.3795918367346939, "obj2": 0.5308053684177343}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( RRS / ( DDR - CRS ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Max( FirstVNF_RAM,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( MUC + DS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5531032257334516}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * MDR ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( DDR * MRS ) / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( ( CS + DS ) / ( ( MUM * MUM ) / MUM ) ) - MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6634224365372259}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( MLU + ( DS - MLU ) ) ,RCSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7085625712949661}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7296341739067057}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUC ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.6938775510204082, "obj2": 0.216230810837014}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3818544939874076}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) / ( MDR - MRS ) ) * PN ) + ( Const - ( Min( DDR ,ACS ) - BR ) ) )", "choosing": "( ( Max( RRSe,MLU ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( ( Min( CS ,( RCSe * DS ) ) + CS ) + MLU ) )", "obj1": 0.19591836734693877, "obj2": 0.7460279662664742}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ( ARS + Min( FirstVNF_Mem_Server ,BR ) ) / ( MRS / ( RRS * PN ) ) ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUR ) ) * ( ( ( ( RCSe * DS ) / RCSe ) / MUM ) / ( RRSe + RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.1349844070758292}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) / ( ( ( ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ,( MUM / CS ) ) ) ) )", "obj1": 0.7877551020408163, "obj2": 0.1339789810723232}, {"determining": "( ( Max( FirstVNF_CPU_Server,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( ( ( Max( BR,BR ) - CRS ) + FirstVNF_CPU ) - MRS ) ) * ( AMS / MDR ) ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( MLU ,CS ) * ( MUR * Min( CS ,DS ) ) ) - MUC ) ) / ( CS / CS ) ) ) + ( RMSe / Max( MUM,Min( ( DS - MUC ) ,MUC ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3818544939874076}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.4105209753372274}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( Max( ACS,Min( FirstVNF_CPU_Server ,PN ) ) ,CRS ) ) )", "choosing": "( ( Max( RCSe,MLU ) / RRSe ) / ( Min( ( ( MLU * ( MUR + RRSe ) ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.45714285714285713, "obj2": 0.4633864858184054}, {"determining": "( ( Min( RRS ,( CRS / ( Const / ( Min( ( FirstVNF_RAM * CRS ) ,Const ) / MRS ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) - ( ( PN - Max( AMS,RRS ) ) + BR ) )", "choosing": "( ( ( Max( RCSe,MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * Min( CS ,( MUC - Max( ( Min( CS ,RCSe ) - ( MUM * MUC ) ),( Min( CS ,RMSe ) - RMSe ) ) ) ) ) ) + ( ( RRSe + DS ) * Max( MUR,RMSe ) ) )", "obj1": 0.39183673469387753, "obj2": 0.5181246537549139}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUC ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.42018699857673697}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( FirstVNF_Mem_Server + ( MDR / Min( ( FirstVNF_CPU + ( MDR - BR ) ) ,PN ) ) ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + AMS ) / ( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( RMSe / MUM ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( MUR ,MUM ) ) ,MLU ) * ( Min( RCSe ,( RCSe / ( ( ( MUM * MUR ) * Min( RRSe ,MUC ) ) * MLU ) ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / RRSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.14533323318392638}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) ) )", "choosing": "( Min( ( CS + DS ) ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.6224489795918368, "obj2": 0.2840912578747469}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( BR * MRS ) / ( Const / ( Max( FirstVNF_CPU_Server,Const ) + ( ( ( BR - AMS ) - DDR ) - CRS ) ) ) ) / MRS ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,( ( ( MLU * RMSe ) - Max( RMSe,MLU ) ) - Max( RMSe,( MUC * MUM ) ) ) ),DS ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / ( ( ( MUC / ( RRSe / RCSe ) ) - RCSe ) / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.871033296691264}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( ( AMS - FirstVNF_RAM ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( RRS + ( BR / FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MUR ,Min( RRSe ,Max( MLU,( CS / MUR ) ) ) ) ) ) ) )", "obj1": 0.9877551020408163, "obj2": 0.005960421142696256}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7510204081632653, "obj2": 0.15564176078592856}, {"determining": "( ( ( BR - BR ) / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / ( MRS - ( FirstVNF_Mem_Server * MDR ) ) ),MRS ) ) ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8431069927389233}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5831290117450217}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.7306122448979592, "obj2": 0.17146660029271713}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.6253819157998434}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( Min( CRS ,FirstVNF_Mem_Server ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),Min( Min( FirstVNF_RAM ,MDR ) ,( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( MLU / MUR ) ) ) - ( MUM - Max( ( ( MUM - ( ( MUM + RMSe ) - Min( RRSe ,MLU ) ) ) - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.9020408163265307, "obj2": 0.04399749509367477}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6128873274010862}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.9183673469387755, "obj2": 0.04035146332166787}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( ( FirstVNF_CPU / DDR ) - ( ( MDR * FirstVNF_Mem_Server ) + Min( ACS ,AMS ) ) ) ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR + DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( Min( ( ( ( RRSe / MUM ) - Min( RRSe ,MUC ) ) + Min( ( MUC + MUC ) ,MUR ) ) ,RRSe ) + MUM ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.2004503813665147}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.9326530612244898, "obj2": 0.0314476423349831}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.32448979591836735, "obj2": 0.5888862151341676}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9714285714285714, "obj2": 0.010981075012739122}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - Max( ( ( MDR + AMS ) / ( ARS - Max( AMS,( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) ) ),BR ) )", "choosing": "Max( ( ( RRSe * RCSe ) * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ),( MLU * RCSe ) )", "obj1": 0.8510204081632653, "obj2": 0.08794191319011894}, {"determining": "( ( RRS - ( PN + MRS ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( DS / ( CS + MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8835424200717373}, {"determining": "( Max( Max( Max( FirstVNF_RAM,( ( ( PN * ( AMS * MRS ) ) / FirstVNF_Mem_Server ) / ARS ) ),Min( Const ,( Max( ( ACS * Max( ARS,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) - MDR ) ) ),( ( MDR / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Min( ( MLU + MUC ) ,MUR ) / ( Min( ( ( MUM + Min( ( MUC + Max( RMSe,MLU ) ) ,( ( RCSe - RRSe ) - MUC ) ) ) / Min( ( MUM * ( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( CS,MUC ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8124349669754508}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8634119720107301}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.5979591836734693, "obj2": 0.3004936321044636}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.726530612244898, "obj2": 0.18208153710137015}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( RMSe,( CS + DS ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.10143071411343386}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.5232810478564882}, {"determining": "( ( ( ( DDR / Const ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( Min( MDR ,AMS ) + Max( ARS,( FirstVNF_RAM + Min( ARS ,FirstVNF_RAM_Server ) ) ) ) / Max( CRS,DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) / FirstVNF_Mem ) - PN ) )", "choosing": "( Max( Max( RCSe,MLU ),DS ) / ( Min( ( ( RCSe / RCSe ) / ( MLU * MUC ) ) ,MLU ) * ( Max( ( ( MUM + Min( DS ,Min( DS ,DS ) ) ) * Min( RRSe ,Min( MUR ,( RMSe - RMSe ) ) ) ),CS ) * CS ) ) )", "obj1": 0.46530612244897956, "obj2": 0.45406098621241425}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7045050859320146}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.07400370988557062}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( DDR * FirstVNF_Mem ) ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.8040816326530612, "obj2": 0.11439551416330387}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( ( MDR - RRS ),BR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / RMSe )", "obj1": 0.19183673469387755, "obj2": 0.758076006270738}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) )", "choosing": "( ( DS / Min( DS ,MUC ) ) - ( ( Max( MUR,MLU ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.926530612244898, "obj2": 0.03838921979841871}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / PN ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) / ( MLU * DS ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.9428571428571428, "obj2": 0.027134984381608274}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + ARS ) - Max( Max( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + MUC ) / ( Min( RRSe ,MUC ) - ( CS * ( ( ( RMSe / DS ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( Max( ( Min( ( ( ( DS - RCSe ) / ( RCSe + DS ) ) - CS ) ,Min( CS ,CS ) ) / MUR ),DS ),Min( Max( RRSe,MUC ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.11071293705989192}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) + MLU ) ,RCSe ) ) )", "obj1": 0.7142857142857143, "obj2": 0.19146820677711232}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ),FirstVNF_RAM ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / RRS ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.8836734693877552, "obj2": 0.06131719675639211}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6, "obj2": 0.300040647936768}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( ( ( ( MDR - RRS ) + Max( DDR,FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) ) * Min( FirstVNF_CPU ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.16326530612244897, "obj2": 0.7988188847520092}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.33877551020408164, "obj2": 0.5848807472709594}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + MDR ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( CRS,( Min( FirstVNF_Mem ,Min( FirstVNF_CPU_Server ,ACS ) ) / CRS ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( RRSe + DS ) ) ) ) ) / ( ( RMSe - DS ) * Max( MUM,Max( MUC,( RCSe + ( ( MLU - Max( RCSe,DS ) ) - ( RRSe * ( MLU - MUC ) ) ) ) ) ) ) )", "obj1": 0.7204081632653061, "obj2": 0.18694522996961455}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.16466297746616645}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ),( FirstVNF_CPU + PN ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / RRS ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.05610658472101831}, {"determining": "Min( Max( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( FirstVNF_RAM_Server / DDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) ) - Min( ACS ,AMS ) ),( ( ( ( ACS - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) + Min( MDR ,MRS ) ) ) ,RRS )", "choosing": "( Min( Max( ( RMSe - MUR ),RCSe ) ,( MLU * MLU ) ) * Max( RCSe,( Min( MLU ,( RCSe - MUM ) ) * ( Min( Max( RCSe,RMSe ) ,RRSe ) - CS ) ) ) )", "obj1": 0.7959183673469388, "obj2": 0.12417503758820543}, {"determining": "( ( CRS - RRS ) + ( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( MUC / CS ) ) - Max( Min( RMSe ,DS ),( Min( RRSe ,Min( RRSe ,( RCSe - RRSe ) ) ) * ( MUC / MUM ) ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7676765191625567}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ),( CS + DS ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7833583765671398}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( Const ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.8408163265306122, "obj2": 0.08871075313351831}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_RAM_Server ) ) ) ),Min( Max( ACS,( Const / MRS ) ) ,Max( ACS,BR ) ) ) ) ) )", "choosing": "( ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( ( CS / CS ) / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * MUR ) ) / ( Max( RCSe,MLU ) / DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8385818218944107}, {"determining": "Min( Max( ( ( Const + RRS ) / ( MRS + MDR ) ),( FirstVNF_CPU + RRS ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,MDR ) ,PN ) ) ,DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - ( ( RCSe - RRSe ) / RRSe ) ) ) ) ) - ( ( ( MUM - RMSe ) * ( MLU - MLU ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.06429597880866303}, {"determining": "( ( ( ( RRS - MDR ) + ( ARS * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_Mem + RRS ) ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( DS,RRSe ) )", "obj1": 0.2938775510204082, "obj2": 0.6423330927069044}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) + MLU ) ,RCSe ) ) )", "obj1": 0.7448979591836735, "obj2": 0.16410312022661525}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / PN ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "Max( ( ( RRSe * RCSe ) * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ),( MLU * RCSe ) )", "obj1": 0.9653061224489796, "obj2": 0.01705410033551107}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / DS ) )", "obj1": 0.8346938775510204, "obj2": 0.09152840947871585}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_CPU_Server ) ) ) ),MRS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( DS / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8319432933790514}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ),( CS + DS ) ) ) )", "obj1": 0.8591836734693877, "obj2": 0.07227214149910936}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_CPU_Server ) ) ) ),MRS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( DS / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8319432933790514}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.2816326530612245, "obj2": 0.6566924243662103}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.6183673469387755, "obj2": 0.29096875760503643}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - CRS ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,CS ) * ( MUR * RMSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6341355551851133}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Min( Max( ACS,BR ) ,CRS ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.45714285714285713, "obj2": 0.4633864858184054}, {"determining": "( ( Min( ARS ,RRS ) - FirstVNF_RAM_Server ) - ( ( CRS - ( CRS / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe * MUR ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( DS + ( MLU / Max( MUC,( RRSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.7979591836734694, "obj2": 0.12357575336090237}, {"determining": "( ( Min( ( PN - MRS ) ,( FirstVNF_CPU + RRS ) ) - FirstVNF_RAM ) + ( ( ( MDR + Min( BR ,MRS ) ) / ( Const * FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( MUR / ( RMSe + ( ( RCSe - MUC ) + MLU ) ) ) + ( RMSe / ( MUR / ( RCSe + ( RMSe * MUR ) ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7911605983519432}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / ( RMSe * CS ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2943573987226581}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( CRS,( CRS / ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR / DDR ) ) ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ) / ( ( Max( DS,DS ) * MUC ) + RMSe ) )", "obj1": 0.463265306122449, "obj2": 0.4573203229341609}, {"determining": "( Min( Max( ACS,BR ) ,CRS ) + CRS )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ),Max( DS,RRSe ) )", "obj1": 0.08979591836734693, "obj2": 0.8856287992020602}, {"determining": "( ( Min( Max( ACS,BR ) ,CRS ) + ( PN - ( AMS * RRS ) ) ) - ( Min( CRS ,( CRS + ( DDR / Const ) ) ) + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( RMSe,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( ( Max( RCSe,MLU ) / DS ) - Min( Max( MUR,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.0218958524096167}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - CRS ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6392081175096859}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / ( MDR + Min( ( FirstVNF_CPU + ( CRS / FirstVNF_Mem ) ) ,PN ) ) ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / ( ( MLU / Max( MUC,( MUR + MUC ) ) ) + Max( RRSe,( RRSe + RRSe ) ) ) ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.7081632653061225, "obj2": 0.19751637682460982}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ),( CS + DS ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7833583765671398}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( Min( Max( Const,FirstVNF_CPU_Server ) ,ARS ) - ( AMS / FirstVNF_RAM ) ) ) ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / DDR ) + ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.07135897629283425}], "13": [{"determining": "( ( Max( FirstVNF_CPU_Server,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + Min( ( ( ( Const / DDR ) - ( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( MLU ,CS ) * ( CS * Min( CS ,DS ) ) ) - MUC ) ) / ( CS / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( Const / ACS ) - ( ( ACS / FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) - Max( FirstVNF_CPU,Const ) ) ,FirstVNF_Mem ) ,Min( ACS ,( FirstVNF_Mem * ( Max( RRS,FirstVNF_RAM ) - Max( ARS,Max( ( Max( FirstVNF_CPU_Server,MRS ) - Min( FirstVNF_RAM ,DDR ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "Max( ( ( DS / CS ) + Min( MUC ,MUR ) ),( DS - ( ( RMSe / RCSe ) - ( RCSe - Min( Max( ( RMSe + MUM ),( ( MUC * RCSe ) / MLU ) ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "Max( ( DS / Max( RCSe,MLU ) ),( Min( ( ( DS + MUR ) / ( ( ( MUC + ( RCSe / RRSe ) ) - MUM ) / RMSe ) ) ,MLU ) * ( MUR * ( Min( ( RMSe * MUC ) ,MUM ) + MLU ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8944845519385545}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.5265306122448979, "obj2": 0.3388665613764742}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( MRS ,ARS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RMSe ) - CS ) * Min( MLU ,Min( Max( MLU,MUR ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.42448979591836733, "obj2": 0.47536051534473783}, {"determining": "( ( BR / ( FirstVNF_RAM / PN ) ) - MDR )", "choosing": "Max( ( ( CS / ( Max( DS,RCSe ) / DS ) ) + Min( MUC ,MUR ) ),Max( MUR,CS ) )", "obj1": 0.6142857142857143, "obj2": 0.2454464335428515}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe * CS ) + MLU ) * ( ( RRSe - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( MLU / MUM ),Min( Max( RRSe,MUC ) ,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.19405826720456326}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( ( FirstVNF_RAM * Const ) + FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( Const * Min( Min( MRS ,ARS ) ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( ( RCSe - Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) ) / DS ) / ( ( ( ( Min( MUC ,CS ) * RMSe ) / ( MUC - RMSe ) ) / ( CS * ( RCSe / RCSe ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.6, "obj2": 0.277177572132766}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( DDR / ACS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem - Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) ) / ( MUM + Max( ( ( CS / DS ) + ( MUC - MUR ) ),Max( ( MLU - ( ( MLU * RMSe ) - ( CS - DS ) ) ),RRSe ) ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.21905440606405577}, {"determining": "( ( PN - Const ) + Min( ( ( Min( ( BR + FirstVNF_Mem ) ,FirstVNF_CPU ) - DDR ) / ( ACS + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,PN ) )", "choosing": "( ( CS + RMSe ) / ( ( CS * ( MLU / ( RMSe / MUR ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7254027709452296}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * MDR ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( DDR * MRS ) / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( ( CS + DS ) / ( ( MUM * MUM ) / MUM ) ) - MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6634224365372259}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3020733405509064}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( CRS ,( CRS + ( DDR / Const ) ) ) + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( RMSe,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.4252067902124707}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7081632653061225, "obj2": 0.18251239196813135}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( ( ( ( MDR - RRS ) + ( FirstVNF_CPU_Server - MDR ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) ) - Min( ( BR + ( ( RRS * RRS ) - PN ) ) ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * Max( ( Min( Max( MUC,( RMSe + ( CS - MUR ) ) ) ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) / Max( MUC,( MUC + MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7579241205256708}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( Max( RRS,BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( ( FirstVNF_CPU - Min( ( ACS - MRS ) ,Const ) ) + FirstVNF_RAM ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5465586340688464}, {"determining": "( ( Max( BR,Min( ( MRS + MDR ) ,PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( CS * ( Max( ( DS / RMSe ),DS ) - Max( Min( RMSe ,DS ),Min( Min( MUC ,MUR ) ,RRSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.4367041262124089}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3818544939874076}, {"determining": "( ( ( Min( ( FirstVNF_RAM - CRS ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( PN - ( FirstVNF_Mem * Min( AMS ,ARS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - ( ( MUM / MUR ) * ( CS - ( DS - CS ) ) ) ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3020733405509064}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6128873274010862}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.5979591836734693, "obj2": 0.3004936321044636}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3816326530612245, "obj2": 0.5156245669850293}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.40815710269492866}, {"determining": "( ( ( Min( ( ( ACS / FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + ( MLU * ( ( ( ( MUM * ( RCSe - CS ) ) / ( ( MUM - MUC ) - DS ) ) / Max( ( MUC / Max( MUM,DS ) ),( DS / MUM ) ) ) * RRSe ) ) ),Max( RRSe,RRSe ) )", "obj1": 0.6428571428571429, "obj2": 0.23851656419434328}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6446817784741617}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( Max( MDR,DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Min( FirstVNF_CPU_Server ,DDR ) ) * PN ) ) ) ) - ( Max( ( DDR - MRS ),Max( ( ( Max( Const,FirstVNF_RAM_Server ) + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( ( CS * RMSe ) - ( CS * RCSe ) ) * ( CS / RMSe ) )", "obj1": 0.6510204081632653, "obj2": 0.23476863501495857}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.45076510181303786}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ( ARS + Min( FirstVNF_Mem_Server ,BR ) ) / ( MRS / ( RRS * PN ) ) ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUR ) ) * ( ( ( ( RCSe * DS ) / RCSe ) / MUM ) / ( RRSe + RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( Min( CRS ,FirstVNF_Mem_Server ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),Min( Min( FirstVNF_RAM ,MDR ) ,( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( MLU / MUR ) ) ) - ( MUM - Max( ( ( MUM - ( ( MUM + RMSe ) - Min( RRSe ,MLU ) ) ) - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),CS ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( CRS / Min( FirstVNF_Mem ,BR ) ) / ( ( Const - CRS ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * MUR ) ) ) ) / ( Min( CS ,CS ) * ( MUR * RMSe ) ) )", "obj1": 0.31020408163265306, "obj2": 0.6241937456390935}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( FirstVNF_Mem_Server + ( MDR / Min( ( FirstVNF_CPU + ( MDR - BR ) ) ,PN ) ) ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + AMS ) / ( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( RMSe / MUM ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( MUR ,MUM ) ) ,MLU ) * ( Min( RCSe ,( RCSe / ( ( ( MUM * MUR ) * Min( RRSe ,MUC ) ) * MLU ) ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / RRSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.14533323318392638}, {"determining": "( ( ( Max( FirstVNF_CPU,ACS ) / ( PN + CRS ) ) + CRS ) - ( Min( CRS ,( CRS / ( FirstVNF_RAM / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RCSe * MLU ) / DS ) / ( RRSe * MLU ) )", "obj1": 0.3795918367346939, "obj2": 0.5308053684177343}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( MLU + ( DS - MLU ) ) ,RCSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7085625712949661}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ,( MUM / CS ) ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.15135800612718273}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) ) ) ) - ( Max( ( DDR - MRS ),Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( ( CS / DS ) / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5, "obj2": 0.4102181405694934}, {"determining": "( Max( Max( Max( FirstVNF_RAM,( ( ( PN * ( AMS * MRS ) ) / FirstVNF_Mem_Server ) / ARS ) ),Min( Const ,( Max( ( ACS * Max( ARS,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) - MDR ) ) ),( ( MDR / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Min( ( MLU + MUC ) ,MUR ) / ( Min( ( ( MUM + Min( ( MUC + Max( RMSe,MLU ) ) ,( ( RCSe - RRSe ) - MUC ) ) ) / Min( ( MUM * ( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( CS,MUC ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8124349669754508}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Max( ( ( MUM - MUM ) / MUR ),RMSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.3448979591836735, "obj2": 0.5631800314853214}, {"determining": "( ( ( PN - ( RRS * AMS ) ) + BR ) - ( Min( CRS ,( CRS / ( Const / ( AMS / MRS ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( CS * RMSe ) ) ) + ( ( RRSe + DS ) * Max( MUR,RMSe ) ) )", "obj1": 0.4448979591836735, "obj2": 0.45764232306633273}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( BR * MRS ) / ( Const / ( Max( FirstVNF_CPU_Server,Const ) + ( ( ( BR - AMS ) - DDR ) - CRS ) ) ) ) / MRS ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,( ( ( MLU * RMSe ) - Max( RMSe,MLU ) ) - Max( RMSe,( MUC * MUM ) ) ) ),DS ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5831290117450217}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - CRS ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6334442960338766}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.9020408163265307, "obj2": 0.04399749509367477}, {"determining": "( ( ( BR - BR ) / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / ( MRS - ( FirstVNF_Mem_Server * MDR ) ) ),MRS ) ) ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8431069927389233}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3818544939874076}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6956353010379729}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - Max( CRS,FirstVNF_CPU ) ) / ( ( ( ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ,( MUM / CS ) ) ) ) )", "obj1": 0.7877551020408163, "obj2": 0.1339789810723232}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7296341739067057}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + ARS ) - Max( Max( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + MUC ) / ( Min( RRSe ,MUC ) - ( CS * ( ( ( RMSe / DS ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( Max( ( Min( ( ( ( DS - RCSe ) / ( RCSe + DS ) ) - CS ) ,Min( CS ,CS ) ) / MUR ),DS ),Min( Max( RRSe,MUC ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.11071293705989192}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( ( CS / DS ) / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.2, "obj2": 0.7328017957750342}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.1349844070758292}, {"determining": "( ( ( ACS * FirstVNF_RAM ) + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const + DDR ) ) ) + ( DDR * ( ( DDR - ( Min( AMS ,BR ) / FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( DS,RRSe ),( ( CS / DS ) + ( ( MLU / MUC ) * ( ( RMSe + ( RCSe / MUC ) ) - CS ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.5888862151341676}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ),( CS + DS ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7833583765671398}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / DS ) )", "obj1": 0.8346938775510204, "obj2": 0.09152840947871585}, {"determining": "( ( ( PN - ( RRS * AMS ) ) + BR ) - ( Min( CRS ,( CRS / ( Const / ( AMS / MRS ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( CS * RMSe ) ) ) + ( ( RRSe + DS ) * Max( MUR,RMSe ) ) )", "obj1": 0.4448979591836735, "obj2": 0.45764232306633273}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.16466297746616645}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ),( FirstVNF_CPU + PN ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.8979591836734694, "obj2": 0.05360407951769801}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.6825201211172104}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - Max( ( ( MDR + AMS ) / ( ARS - Max( AMS,( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) ) ),BR ) )", "choosing": "Max( ( ( RRSe * RCSe ) * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ),( MLU * RCSe ) )", "obj1": 0.8510204081632653, "obj2": 0.08794191319011894}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) / ( MDR - MRS ) ) * PN ) + ( Const - ( Min( DDR ,ACS ) - BR ) ) )", "choosing": "( ( Max( RRSe,MLU ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( ( Min( CS ,( RCSe * DS ) ) + CS ) + MLU ) )", "obj1": 0.19591836734693877, "obj2": 0.7460279662664742}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / BR ) - ( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( ( Max( MUM,RMSe ) * RCSe ) ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.6825201211172104}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / ( ( ( MUC / ( RRSe / RCSe ) ) - RCSe ) / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.871033296691264}, {"determining": "( ( ( ( RRS - MDR ) + ( ARS * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_Mem + RRS ) ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( RRSe - RCSe ),Max( DS,RRSe ) )", "obj1": 0.2938775510204082, "obj2": 0.6423330927069044}, {"determining": "( ( RRS - ( PN + MRS ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( DS / ( CS + MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8835424200717373}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),Max( ( Max( FirstVNF_Mem_Server,( CRS / FirstVNF_RAM_Server ) ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( RMSe,( CS + ( CS / CS ) ) ) ) )", "obj1": 0.8244897959183674, "obj2": 0.10038717042812818}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.9326530612244898, "obj2": 0.0314476423349831}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.3306122448979592, "obj2": 0.5833990882267222}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ),( FirstVNF_CPU + PN ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / RRS ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.05610658472101831}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( DDR * FirstVNF_Mem ) ) / ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,( CRS / MRS ) ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Min( MLU ,MLU ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.8040816326530612, "obj2": 0.11439551416330387}, {"determining": "Min( Max( ( ( Const + RRS ) / ( MRS + MDR ) ),( FirstVNF_CPU + RRS ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,MDR ) ,PN ) ) ,DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - ( ( RCSe - RRSe ) / RRSe ) ) ) ) ) - ( ( ( MUM - RMSe ) * ( MLU - MLU ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.06429597880866303}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.07400370988557062}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8634119720107301}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( ( ( ( RRS - MDR ) + Max( DDR,FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) ) * Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server + MRS ) / ( ( Const * Min( DDR ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( CS / MUM ) / ( DS / RMSe ) ) ,MLU ) * ( MUM * RMSe ) ) / ( Max( RCSe,MLU ) / DS ) )", "obj1": 0.16326530612244897, "obj2": 0.7988188847520092}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_RAM_Server ) ) ) ),Min( Max( ACS,( Const / MRS ) ) ,Max( ACS,BR ) ) ) ) ) )", "choosing": "( ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( ( CS / CS ) / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * MUR ) ) / ( Max( RCSe,MLU ) / DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8385818218944107}, {"determining": "( ( Min( ( PN - MRS ) ,( FirstVNF_CPU + RRS ) ) - FirstVNF_RAM ) + ( ( ( MDR + Min( BR ,MRS ) ) / ( Const * FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( MUR / ( RMSe + ( ( RCSe - MUC ) + MLU ) ) ) + ( RMSe / ( MUR / ( RCSe + ( RMSe * MUR ) ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7911605983519432}, {"determining": "( Max( Max( Max( FirstVNF_RAM,( AMS / ARS ) ),Min( Const ,( Max( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) - MDR ) ) ),( ( MDR / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( CS * RCSe ) ) * Max( ( MLU + DS ),Min( ( MLU + ( DS - MLU ) ) ,RCSe ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7085625712949661}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,CRS ) ) ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - ( DS / RMSe ) ) )", "obj1": 0.9551020408163265, "obj2": 0.024330557933870577}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.726530612244898, "obj2": 0.18208153710137015}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_CPU_Server ) ) ) ),MRS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( DS / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8319432933790514}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_CPU_Server ) ) ) ),MRS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( DS / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8319432933790514}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU / ACS ) ) / ( ( FirstVNF_Mem - MRS ) / Max( ( ( FirstVNF_RAM * DDR ) - Max( MRS,PN ) ),( Min( MDR ,FirstVNF_RAM ) + Min( CRS ,MDR ) ) ) ) )", "choosing": "( Min( Max( DS,MLU ) ,( MUC - Min( RMSe ,RMSe ) ) ) / ( RCSe / Max( MUC,Max( ( RRSe / ( MUR - MUC ) ),CS ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5531032257334516}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.9183673469387755, "obj2": 0.04035146332166787}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( DDR * FirstVNF_Mem ) ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( Max( ACS,FirstVNF_RAM ) ,AMS ),( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.7918367346938775, "obj2": 0.12691245459023015}, {"determining": "( ( BR + ( PN - ( RRS * PN ) ) ) - ( Min( CRS ,( CRS / ( MDR * ARS ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUR,MUC ) / ( Min( MUR ,RMSe ) / ( CS + MUM ) ) )", "obj1": 0.3795918367346939, "obj2": 0.5308053684177343}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( ( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * Max( Min( RCSe ,RMSe ),( CS + DS ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7942625034152679}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_CPU_Server ) ) ) ),MRS ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8706151842802563}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,Const )", "choosing": "( CS * ( ( ( DS / RCSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7346938775510204, "obj2": 0.16947064550314692}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7460279662664742}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9673469387755103, "obj2": 0.012051759241920295}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ),( CS + DS ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7833583765671398}, {"determining": "Min( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ),FirstVNF_RAM ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / RRS ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) - Min( Max( MUR,MLU ) ,( MLU / RMSe ) ) ) )", "obj1": 0.8836734693877552, "obj2": 0.06131719675639211}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ),FirstVNF_CPU ) ) )", "choosing": "( ( DS / Min( DS ,MUC ) ) - ( ( Max( MUR,MLU ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.926530612244898, "obj2": 0.03838921979841871}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / PN ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) / ( MLU * DS ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.9448979591836735, "obj2": 0.026211199162814617}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( Min( ( ( ( Const / DDR ) - ( ( MRS / DDR ) + ( MDR / PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ,Min( ACS ,ACS ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( ( RRSe * RCSe ) * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7285714285714285, "obj2": 0.1813874797017075}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( BR ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.9612244897959183, "obj2": 0.016794026077403074}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / PN ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) / ( MLU * DS ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.9387755102040817, "obj2": 0.028493180188959123}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.7306122448979592, "obj2": 0.17146660029271713}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.32448979591836735, "obj2": 0.5888862151341676}, {"determining": "( Min( Max( ACS,BR ) ,CRS ) + CRS )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ),Max( DS,RRSe ) )", "obj1": 0.08979591836734693, "obj2": 0.8856287992020602}, {"determining": "( ( ( ( DDR / Const ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / MDR ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) + MUC ) ) / ( MUR / CS ) ) ) / ( ( ( Max( MLU,MUC ) * MUC ) - ( RRSe + RRSe ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.8408163265306122, "obj2": 0.08871075313351831}], "14": [{"determining": "Min( Min( ( ( ( Const / ACS ) - ( ( ACS / FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) - Max( FirstVNF_CPU,Const ) ) ,FirstVNF_Mem ) ,Min( ACS ,( ( Max( RRS,FirstVNF_RAM ) - Max( ARS,Max( ( ( AMS + FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,DDR ) ),FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( DS / CS ) + Min( MUC ,MUR ) ),( DS - ( ( RMSe / RCSe ) - ( Min( Max( ( RMSe + MUM ),( ( MUC * RCSe ) / MLU ) ) ,MLU ) - ( Max( ( ( MUM / RRSe ) - ( DS / DS ) ),Min( RCSe ,MUM ) ) * ( Max( RMSe,Min( MUM ,CS ) ) / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + Min( ( ( ( Const / DDR ) - ( ( FirstVNF_Mem / DDR ) + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM - ( PN + MRS ) ) - ( RRS - Max( PN,FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( MLU ,CS ) * ( CS * Min( CS ,DS ) ) ) - MUC ) ) / ( CS / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "Max( ( DS / Max( RCSe,MLU ) ),( Min( ( ( DS + MUR ) / ( ( ( MUC + ( RCSe / RRSe ) ) - MUM ) / RMSe ) ) ,MLU ) * ( MUR * ( Min( ( RMSe * MUC ) ,MUM ) + MLU ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8944845519385545}, {"determining": "( ( ( Max( AMS,Max( FirstVNF_Mem_Server,( MDR - FirstVNF_CPU ) ) ) / DDR ) - Max( BR,MDR ) ) - ( ( AMS * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "Max( ( ( MUR / DS ) + Min( MUC ,( RMSe - ( Min( MUM ,( MUC + ( RCSe * RCSe ) ) ) / ( DS / RMSe ) ) ) ) ),Max( DS,RRSe ) )", "obj1": 0.5265306122448979, "obj2": 0.33873520170785854}, {"determining": "( ( BR + ( PN - ( RRS * ( Const + BR ) ) ) ) - ( Min( CRS ,( ( Const / DDR ) / CRS ) ) + ( BR * ( ( ( DDR - RRS ) * FirstVNF_CPU ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Max( RCSe,MLU ) ),Max( DS,( ( Max( RCSe,( ( RCSe + MUR ) * ( MUR - ( MUC - DS ) ) ) ) + ( MLU + DS ) ) - CS ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6909621884741578}, {"determining": "( ( PN - Const ) + Min( ( ( Min( ( BR + FirstVNF_Mem ) ,FirstVNF_CPU ) - DDR ) / ( ACS + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,PN ) )", "choosing": "( ( CS + RMSe ) / ( ( CS * ( MLU / ( RMSe / MUR ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7254027709452296}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21019365035358994}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( ( CRS / ( Const / DDR ) ) ,DDR ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( Max( DS,RRSe ) ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.31020408163265306, "obj2": 0.6106270591080749}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / ( DDR * FirstVNF_Mem ) ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( Max( DS,DS ) * MUR ),( RCSe + MUC ) ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3641518456109744}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( ( FirstVNF_RAM * Const ) + FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( Const * Min( Min( MRS ,ARS ) ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( ( RCSe - Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) ) / DS ) / ( ( ( ( Min( MUC ,CS ) * RMSe ) / ( MUC - RMSe ) ) / ( CS * ( RCSe / RCSe ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.6, "obj2": 0.277177572132766}, {"determining": "( ( ( Min( ( FirstVNF_RAM - CRS ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( PN - ( FirstVNF_Mem * Min( AMS ,ARS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - ( ( MUM / MUR ) * ( CS - ( DS - CS ) ) ) ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3020733405509064}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - ( Min( BR ,AMS ) / FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + ( ( MLU / MUC ) * Min( RMSe ,CS ) ) ),Max( DS,RRSe ) )", "obj1": 0.29183673469387755, "obj2": 0.6334107525551108}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( MRS ,ARS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RMSe ) - CS ) * Min( MLU ,Min( Max( MLU,MUR ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.42448979591836733, "obj2": 0.47536051534473783}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 0.5142857142857142, "obj2": 0.38779555527043247}, {"determining": "( ( ( PN - ( RRS * AMS ) ) + BR ) - ( Min( CRS ,( CRS / ( Const / ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( CS * RMSe ) ) ) + Max( RRSe,MLU ) )", "obj1": 0.4142857142857143, "obj2": 0.49886460841440894}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3020733405509064}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.1349844070758292}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - MDR )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.6061224489795919, "obj2": 0.24918610079363612}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.5979591836734693, "obj2": 0.3004936321044636}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( Max( MDR,DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Min( FirstVNF_CPU_Server ,DDR ) ) * PN ) ) ) ) - ( Max( ( DDR - MRS ),Max( ( ( Max( Const,FirstVNF_RAM_Server ) + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( ( CS * RMSe ) - ( CS * RCSe ) ) * ( CS / RMSe ) )", "obj1": 0.6510204081632653, "obj2": 0.23476863501495857}, {"determining": "( ( Max( BR,Min( ( MRS + MDR ) ,PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( CS * ( Max( ( DS / RMSe ),DS ) - Max( Min( RMSe ,DS ),Min( Min( MUC ,MUR ) ,RRSe ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.4367041262124089}, {"determining": "( ( BR / ( FirstVNF_RAM / PN ) ) - MDR )", "choosing": "Max( ( ( CS / ( Max( DS,RCSe ) / DS ) ) + Min( MUC ,MUR ) ),Max( MUR,CS ) )", "obj1": 0.6142857142857143, "obj2": 0.2454464335428515}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ( ARS + Min( FirstVNF_Mem_Server ,BR ) ) / ( MRS / ( RRS * PN ) ) ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUR ) ) * ( ( ( ( RCSe * DS ) / RCSe ) / MUM ) / ( RRSe + RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe * CS ) + MLU ) * ( ( RRSe - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( MLU / MUM ),Min( Max( RRSe,MUC ) ,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.19405826720456326}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( FirstVNF_Mem_Server + ( MDR / Min( ( FirstVNF_CPU + ( MDR - BR ) ) ,PN ) ) ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + AMS ) / ( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( RMSe / MUM ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( MUR ,MUM ) ) ,MLU ) * ( Min( RCSe ,( RCSe / ( ( ( MUM * MUR ) * Min( RRSe ,MUC ) ) * MLU ) ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / RRSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.14533323318392638}, {"determining": "( Max( Max( BR,( ( MRS + MDR ) + PN ) ),FirstVNF_CPU ) + ( ( ( Max( DDR,FirstVNF_CPU_Server ) * Const ) / ( FirstVNF_RAM_Server - DDR ) ) * PN ) )", "choosing": "( ( Min( ( RMSe + MUM ) ,RMSe ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.42857142857142855, "obj2": 0.4597832225024225}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) - ( ( FirstVNF_RAM_Server - Min( Min( Const ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,MRS ) ) + FirstVNF_Mem ) ) - Max( MDR,BR ) )", "choosing": "( ( ( ( Min( CS ,Min( MUR ,MUM ) ) * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * DS ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8020408163265306, "obj2": 0.11369056394596438}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ,( MUM / CS ) ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.15135800612718273}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Max( CRS,CRS ) ) * PN ) ) ) ) - ( Max( ( DDR - MRS ),Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( ( CS / DS ) / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5, "obj2": 0.4102181405694934}, {"determining": "( Max( Max( Max( FirstVNF_RAM,( ( ( PN * ( AMS * MRS ) ) / FirstVNF_Mem_Server ) / ARS ) ),Min( Const ,( Max( ( ACS * Max( ARS,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) - MDR ) ) ),( ( MDR / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Min( ( MLU + MUC ) ,MUR ) / ( Min( ( ( MUM + Min( ( MUC + Max( RMSe,MLU ) ) ,( ( RCSe - RRSe ) - MUC ) ) ) / Min( ( MUM * ( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( CS,MUC ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8124349669754508}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5831290117450217}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + ( ( MLU / MUC ) * Min( RMSe ,CS ) ) ),Max( DS,RRSe ) )", "obj1": 0.3448979591836735, "obj2": 0.5611973117501016}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - ( Min( BR ,AMS ) / FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5978020970991028}, {"determining": "( ( ( PN - ( RRS * AMS ) ) + BR ) - ( Min( CRS ,( CRS / ( Const / ( AMS / MRS ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.48367346938775513, "obj2": 0.42646380652667765}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( ( ( ( MDR - RRS ) + Max( DDR,FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) ) * Min( ( BR + ( PN - ( RRS * RRS ) ) ) ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7579241205256708}, {"determining": "( ( ( CRS / FirstVNF_Mem ) + ARS ) - Max( Max( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + MUC ) / ( Min( RRSe ,MUC ) - ( CS * ( ( ( RMSe / DS ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( Max( ( Min( ( ( ( DS - RCSe ) / ( RCSe + DS ) ) - CS ) ,Min( CS ,CS ) ) / MUR ),DS ),Min( Max( RRSe,MUC ) ,Max( RRSe,MLU ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.11071293705989192}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2403243152335635}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( DDR * FirstVNF_Mem ) ) + ( MDR / DDR ) ) ) - Max( ( PN - ( RRS * RRS ) ),FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( DS - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.7877551020408163, "obj2": 0.12634972610559211}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / MRS ) - Max( MDR,BR ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - ( RRS + MDR ) ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) ) / ( MUM + Max( ( ( CS / DS ) + ( MUC + ( RCSe / Min( MUR ,CS ) ) ) ),Max( DS,RRSe ) ) ) ) )", "obj1": 0.7020408163265306, "obj2": 0.18655128970251075}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( BR * MRS ) / ( Const / ( Max( FirstVNF_CPU_Server,Const ) + ( ( ( BR - AMS ) - DDR ) - CRS ) ) ) ) / MRS ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,( ( ( MLU * RMSe ) - Max( RMSe,MLU ) ) - Max( RMSe,( MUC * MUM ) ) ) ),DS ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8569751354477553}, {"determining": "( ( ( BR - BR ) / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / ( MRS - ( FirstVNF_Mem_Server * MDR ) ) ),MRS ) ) ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8431069927389233}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.40815710269492866}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( CRS ,( CRS + ( DDR / Const ) ) ) + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( RMSe,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.4252067902124707}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Min( RRSe ,MUC ) * ( ( ( DS / RMSe ) / Max( ( MLU + DS ),Min( ( MLU + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( DS + CS ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.45076510181303786}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( ( ( ( RRS - MDR ) + Max( DDR,FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) ) * Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server + MRS ) / ( ( Const * Min( DDR ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( CS / MUM ) / ( DS / RMSe ) ) ,MLU ) * ( MUM * RMSe ) ) / ( Max( RCSe,MLU ) / DS ) )", "obj1": 0.16326530612244897, "obj2": 0.7988188847520092}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7296341739067057}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6836734693877551, "obj2": 0.19316925125911058}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ),( CS + DS ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7833583765671398}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6565895249286856}, {"determining": "( Max( ( PN - ( RRS * AMS ) ),( Max( Min( AMS ,BR ),AMS ) * ( FirstVNF_CPU * MRS ) ) ) - ( Min( CRS ,( CRS / ( Const / ( AMS / MRS ) ) ) ) + ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( RMSe,( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.5345121649246953}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.7081632653061225, "obj2": 0.18251239196813135}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.522308609760252}, {"determining": "( Max( PN,BR ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,( MDR / ( DDR * FirstVNF_Mem ) ) ) ) ) ) + ( DDR * ( ( DDR - ACS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( RMSe * ( ( ( RMSe / ( RCSe - RCSe ) ) / ( DS / RMSe ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) / ( CS - ( Max( MLU,RMSe ) - MUR ) ) )", "obj1": 0.37142857142857144, "obj2": 0.5338670408966214}, {"determining": "( ( ( ( RRS - MDR ) + ( ARS * FirstVNF_Mem ) ) - ( Min( ( ( ( Const / DDR ) - ( ( MRS / DDR ) + ( MDR / PN ) ) ) - Max( Const,FirstVNF_CPU ) ) ,FirstVNF_Mem ) * Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_Mem + RRS ) ) ) ) * ( Min( FirstVNF_Mem_Server ,DDR ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( RRSe - RCSe ),( ( ( DS / RMSe ) / ( ( RRSe * RCSe ) * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.09117330947335858}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * MDR ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( DDR * MRS ) / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( ( CS + DS ) / ( ( MUM * MUM ) / MUM ) ) - MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6634224365372259}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( DDR * FirstVNF_Mem ) ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7938775510204081, "obj2": 0.12622547433137454}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.07400370988557062}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ( RRS * MDR ) ) ) / ( ( ( ( BR / BR ) + ( ARS + FirstVNF_Mem ) ) / ( ( ( ( Const / DDR ) - ( CRS / ACS ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,ACS ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( ( ( RCSe / MUC ) + MUM ) / MUR ) / ( DS - ( MUC * MUC ) ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),MUC ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) / ( MDR - MRS ) ) * PN ) + ( Const - ( Min( DDR ,ACS ) - BR ) ) )", "choosing": "( ( Max( RRSe,MLU ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( ( Min( CS ,( RCSe * DS ) ) + CS ) + MLU ) )", "obj1": 0.19591836734693877, "obj2": 0.7460279662664742}, {"determining": "Min( Max( ( ( Const + RRS ) / ( MRS + MDR ) ),( FirstVNF_CPU + RRS ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,MDR ) ,PN ) ) ,DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - ( ( RCSe - RRSe ) / RRSe ) ) ) ) ) - ( ( ( MUM - RMSe ) * ( MLU - MLU ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.06429597880866303}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.9183673469387755, "obj2": 0.04035146332166787}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - Max( ( ( MDR + AMS ) / ( ARS - Max( AMS,( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) ) ),BR ) )", "choosing": "Max( ( ( RRSe * RCSe ) * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ),( MLU * RCSe ) )", "obj1": 0.8510204081632653, "obj2": 0.08794191319011894}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,RMSe ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6400992957955317}, {"determining": "( ( ( PN - ( RRS * AMS ) ) + BR ) - ( Min( CRS ,( CRS / ( Const / ( AMS / MRS ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( CS * RMSe ) ) ) + ( ( RRSe + DS ) * Max( MUR,RMSe ) ) )", "obj1": 0.4448979591836735, "obj2": 0.45764232306633273}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( Max( RRS,BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( ( FirstVNF_CPU - Min( ( ACS - MRS ) ,Const ) ) + FirstVNF_RAM ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5465586340688464}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.39387755102040817, "obj2": 0.5090653847972082}, {"determining": "( ( RRS - ( PN + MRS ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),( DS / ( CS + MUC ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8835424200717373}, {"determining": "( ( ( ( DDR / Const ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / MDR ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) + MUC ) ) / ( MUR / CS ) ) ) / ( ( ( Max( MLU,MUC ) * MUC ) - ( RRSe + RRSe ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.8408163265306122, "obj2": 0.08871075313351831}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.726530612244898, "obj2": 0.18208153710137015}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.6825201211172104}, {"determining": "( ( ( PN - ( RRS * AMS ) ) + BR ) - ( Min( CRS ,( CRS / ( Const / ( AMS / MRS ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( CS * RMSe ) ) ) + ( ( RRSe + DS ) * Max( MUR,RMSe ) ) )", "obj1": 0.4448979591836735, "obj2": 0.45764232306633273}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU / ACS ) ) / ( ( FirstVNF_Mem - MRS ) / Max( ( ( FirstVNF_RAM * DDR ) - Max( MRS,PN ) ),( Min( MDR ,FirstVNF_RAM ) + Min( CRS ,MDR ) ) ) ) )", "choosing": "( Min( Max( DS,MLU ) ,( MUC - Min( RMSe ,RMSe ) ) ) / ( RCSe / Max( MUC,Max( ( RRSe / ( MUR - MUC ) ),CS ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5531032257334516}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( ( ( ( MDR - RRS ) + ( FirstVNF_CPU_Server - MDR ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) ) - Min( ( BR + ( ( RRS * RRS ) - PN ) ) ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * Max( ( Min( Max( MUC,( RMSe + ( CS - MUR ) ) ) ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) / Max( MUC,( MUC + MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7579241205256708}, {"determining": "Min( ( Max( PN,AMS ) * ( FirstVNF_CPU - Max( ( FirstVNF_RAM / FirstVNF_CPU_Server ),ARS ) ) ) ,( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MLU,( DS / MUM ) ) / DS ) / ( MUC - ( ( ( MLU - MLU ) - RCSe ) * MUR ) ) )", "obj1": 0.9795918367346939, "obj2": 0.010465251024735552}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,Min( FirstVNF_RAM ,MDR ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RMSe / CS ) * ( MUR + CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.9040816326530612, "obj2": 0.04360496310479695}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.16466297746616645}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( Min( RCSe ,MUR ) / MUR ) ) / DS ) / ( Min( ( ( MUM + Min( ( MUC + ( CS + RMSe ) ) ,( ( RCSe - RRSe ) - MUC ) ) ) / Min( ( MUM * ( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( CS,MUC ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.9897959183673469, "obj2": 0.0043834999163666856}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_RAM_Server ) ) ) ),Min( Max( ACS,( Const / MRS ) ) ,Max( ACS,BR ) ) ) ) ) )", "choosing": "( ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( ( CS / CS ) / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * MUR ) ) / ( Max( RCSe,MLU ) / DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8385818218944107}, {"determining": "( ( Min( ( PN - MRS ) ,( FirstVNF_CPU + RRS ) ) - FirstVNF_RAM ) + ( ( ( MDR + Min( BR ,MRS ) ) / ( Const * FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( MUR / ( RMSe + ( ( RCSe - MUC ) + MLU ) ) ) + ( RMSe / ( MUR / ( RCSe + ( RMSe * MUR ) ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7911605983519432}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_CPU_Server ) ) ) ),MRS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( DS / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8319432933790514}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5125419085480953}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( CS ,( MUR - ( RMSe - ( CS - RMSe ) ) ) ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.871033296691264}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_CPU_Server ) ) ) ),MRS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( DS / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8319432933790514}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),Max( ( Max( FirstVNF_Mem_Server,( CRS / FirstVNF_RAM_Server ) ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( RMSe,( CS + ( CS / CS ) ) ) ) )", "obj1": 0.8244897959183674, "obj2": 0.10038717042812818}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( ( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * Max( Min( RCSe ,RMSe ),( CS + DS ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Min( RCSe ,RMSe ) * Max( MUR,RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7942625034152679}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),Max( ( Max( FirstVNF_Mem_Server,( CRS / FirstVNF_RAM_Server ) ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( RMSe,( CS + ( CS / CS ) ) ) ) )", "obj1": 0.8244897959183674, "obj2": 0.10038717042812818}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,AMS ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( DS - RCSe ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.051946086785964816}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,Const )", "choosing": "( CS * ( ( ( DS / RCSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7346938775510204, "obj2": 0.16947064550314692}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6738096179279405}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( AMS,BR ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( ( MUM + Min( ( MUC + ( CS + RMSe ) ) ,( ( RCSe - RRSe ) - MUC ) ) ) / Min( ( MUM * ( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( CS,MUC ) ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020420587095216342}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( ( MDR + AMS ) ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( CS / CS ) / RMSe ) / ( MLU / CS ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.8673469387755102, "obj2": 0.069650838752966}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / PN ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005290737212639252}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7460279662664742}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ),( CS + DS ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7833583765671398}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( BR ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.9612244897959183, "obj2": 0.016794026077403074}, {"determining": "( ( ( Min( ( ( ACS / FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + ( MLU * ( ( ( ( MUM * ( RCSe - CS ) ) / ( ( MUM - MUC ) - DS ) ) / Max( ( MUC / Max( MUM,DS ) ),( DS / MUM ) ) ) * RRSe ) ) ),Max( RRSe,RRSe ) )", "obj1": 0.6428571428571429, "obj2": 0.23851656419434328}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6738096179279405}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ( CRS / BR ) ) ) / ( DDR + ARS ) )", "choosing": "( Max( Max( Min( ( Max( ( DS / RCSe ),Min( MLU ,RRSe ) ) - MUM ) ,RMSe ),Min( Min( CS ,RMSe ) ,MLU ) ),MUR ) / ( ( ( ( MUM / ( Min( CS ,Max( RMSe,MUC ) ) * MUM ) ) / ( MUR + RRSe ) ) * RRSe ) + RCSe ) )", "obj1": 0.3510204081632653, "obj2": 0.5471800836224754}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / BR ) - ( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( ( Max( MUM,RMSe ) * RCSe ) ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.6825201211172104}], "15": [{"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( ( RMSe + MUM ) ,RMSe ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) ),( Min( ( ( DS + MUR ) / ( ( ( MUC + ( RCSe / RRSe ) ) - MUM ) / RMSe ) ) ,MLU ) * ( MUR * ( Min( ( RMSe * MUC ) ,MUM ) + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( Const / ACS ) - ( ( ACS / FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) ) - Max( FirstVNF_CPU,Const ) ) ,FirstVNF_Mem ) ,Min( ACS ,( ( Max( RRS,FirstVNF_RAM ) - Max( ARS,Max( ( ( AMS + FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,DDR ) ),FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( DS / CS ) + Min( MUC ,MUR ) ),( DS - ( ( RMSe / RCSe ) - ( Min( Max( ( RMSe + MUM ),( ( MUC * RCSe ) / MLU ) ) ,MLU ) - ( Max( ( ( MUM / RRSe ) - ( DS / DS ) ),Min( RCSe ,MUM ) ) * ( Max( RMSe,Min( MUM ,CS ) ) / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "Max( ( DS / Max( RCSe,MLU ) ),( Min( ( ( DS + MUR ) / ( ( ( MUC + ( RCSe / RRSe ) ) - MUM ) / RMSe ) ) ,MLU ) * ( MUR * ( Min( ( RMSe * MUC ) ,MUM ) + MLU ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8944845519385545}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) + ( ( MLU * RRSe ) * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.40585943766444865}, {"determining": "( ( ( Max( AMS,Max( FirstVNF_Mem_Server,( MDR - FirstVNF_CPU ) ) ) / DDR ) - Max( BR,MDR ) ) - ( ( AMS * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "Max( ( ( MUR / DS ) + Min( MUC ,( RMSe - ( Min( MUM ,( MUC + ( RCSe * RCSe ) ) ) / ( DS / RMSe ) ) ) ) ),Max( DS,RRSe ) )", "obj1": 0.5265306122448979, "obj2": 0.33873520170785854}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 0.5142857142857142, "obj2": 0.38779555527043247}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5918367346938775, "obj2": 0.26396174704090825}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / ( DDR * FirstVNF_Mem ) ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( Max( DS,DS ) * MUR ),( RCSe + MUC ) ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3641518456109744}, {"determining": "( ( ( Min( ( FirstVNF_RAM - CRS ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( PN - ( FirstVNF_Mem * Min( AMS ,ARS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - ( ( MUM / MUR ) * ( CS - ( DS - CS ) ) ) ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3020733405509064}, {"determining": "( Max( ( PN - ( RRS * AMS ) ),( Max( Min( AMS ,BR ),AMS ) * ( FirstVNF_CPU * MRS ) ) ) - ( Min( CRS ,( CRS / ( Const / ( AMS / MRS ) ) ) ) + ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( RMSe,( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.448960987968679}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( CS * RMSe ) ) ) + Max( RRSe,MLU ) )", "obj1": 0.23673469387755103, "obj2": 0.7035001197377236}, {"determining": "( ( PN - Const ) + Min( ( ( Min( ( BR + FirstVNF_Mem ) ,FirstVNF_CPU ) - DDR ) / ( ACS + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ,PN ) )", "choosing": "( ( CS + RMSe ) / ( ( CS * ( MLU / ( RMSe / MUR ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7254027709452296}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( DDR * FirstVNF_Mem ) ) + ( MDR / DDR ) ) ) - Max( ( PN - ( RRS * RRS ) ),FirstVNF_CPU ) ) ) / DDR ) - Max( Min( ( ( Min( AMS ,PN ) + AMS ) / FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,DDR ) ),FirstVNF_Mem_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( DS - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.7877551020408163, "obj2": 0.12634972610559211}, {"determining": "( ( BR + ( Max( AMS,( Max( FirstVNF_RAM,AMS ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) - ( AMS * RRS ) ) ) - ( MDR + ( ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( ( ( DS / RMSe ) / ( RMSe / MUC ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) * Min( MUM ,RCSe ) )", "obj1": 0.6795918367346939, "obj2": 0.18779681637094803}, {"determining": "( Max( MDR,BR ) - ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_RAM * ( CRS + DDR ) ) ) * DDR ) )", "choosing": "( ( Min( RCSe ,RMSe ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / RCSe ) + Max( ( RRSe / ( Max( MUR,RMSe ) - ( DS / RMSe ) ) ),( ( Min( CS ,RMSe ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,CS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7577000357142152}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.1349844070758292}, {"determining": "( Max( Max( BR,( ( MRS + MDR ) + PN ) ),FirstVNF_CPU ) + ( ( ( Max( DDR,FirstVNF_CPU_Server ) * Const ) / ( FirstVNF_RAM_Server - DDR ) ) * PN ) )", "choosing": "( ( Min( ( RMSe + MUM ) ,RMSe ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.42857142857142855, "obj2": 0.4597832225024225}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5972616397786968}, {"determining": "( ( BR / ( FirstVNF_RAM / PN ) ) - MDR )", "choosing": "Max( ( ( CS / ( Max( DS,RCSe ) / DS ) ) + Min( MUC ,MUR ) ),Max( MUR,CS ) )", "obj1": 0.6142857142857143, "obj2": 0.2454464335428515}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( RMSe,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( Max( MUR,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6755102040816326, "obj2": 0.20893576796370272}, {"determining": "( ( BR + ( PN - ( RRS * ( Const + BR ) ) ) ) - ( Min( CRS ,( ( Const / DDR ) / CRS ) ) + ( BR * ( ( ( DDR - RRS ) * FirstVNF_CPU ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Max( RCSe,MLU ) ),Max( DS,( ( Max( RCSe,( ( RCSe + MUR ) * ( MUR - ( MUC - DS ) ) ) ) + ( MLU + DS ) ) - CS ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6909621884741578}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Const ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ) * ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUR * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,( MUM / Min( MUC ,MUR ) ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6117991792504804}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.5795918367346938, "obj2": 0.28801834338803595}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.5755102040816327, "obj2": 0.3020733405509064}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.46675908430493035}, {"determining": "( Max( ( PN - ( RRS * AMS ) ),( Max( ( AMS - BR ),AMS ) * ( FirstVNF_CPU * MRS ) ) ) - ( Min( CRS ,( CRS / ( Const / ( AMS / MRS ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.448960987968679}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - Max( ( FirstVNF_RAM - CRS ),RRS ) ) - Min( ( Min( AMS ,FirstVNF_Mem ) + AMS ) ,AMS ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( RMSe * ( ( ( RMSe / ( RCSe - RCSe ) ) / ( DS / RMSe ) ) - Max( ( Min( RCSe ,RCSe ) * ( MUM + DS ) ),( ( RRSe / RCSe ) + MLU ) ) ) ) ) ) / ( CS - ( Max( MLU,RMSe ) - MUR ) ) )", "obj1": 0.8857142857142857, "obj2": 0.060871673337392226}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) / DS ) / ( ( ( CS - MUR ) / Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) / ( MUM + Max( ( ( CS / DS ) + ( MUC + MUR ) ),Max( DS,RRSe ) ) ) ) )", "obj1": 0.7918367346938775, "obj2": 0.11023416951540609}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8163265306122449, "obj2": 0.09982761909913129}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / MRS ) - Max( MDR,BR ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - ( RRS + MDR ) ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) ) / ( MUM + Max( ( ( CS / DS ) + ( MUC + ( RCSe / Min( MUR ,CS ) ) ) ),Max( DS,RRSe ) ) ) ) )", "obj1": 0.7020408163265306, "obj2": 0.18655128970251075}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( Max( MDR,DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / Min( BR ,( ( ( FirstVNF_RAM_Server - DDR ) / Min( FirstVNF_CPU_Server ,DDR ) ) * PN ) ) ) ) - ( Max( ( DDR - MRS ),Max( ( ( Max( Const,FirstVNF_RAM_Server ) + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,MDR ) ) ),MRS ) ) - PN ) ) ,( FirstVNF_Mem_Server * Const ) )", "choosing": "( ( ( CS * RMSe ) - ( CS * RCSe ) ) * ( CS / RMSe ) )", "obj1": 0.6510204081632653, "obj2": 0.23476863501495857}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( ( CRS / ( Const / DDR ) ) ,DDR ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( Max( DS,RRSe ) ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.31020408163265306, "obj2": 0.6106270591080749}, {"determining": "( ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) ) - Max( MDR,BR ) )", "choosing": "( ( ( ( Min( CS ,MUR ) * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,RCSe ) * ( MUR * RMSe ) ) ) + ( RMSe * ( MLU * MLU ) ) )", "obj1": 0.8040816326530612, "obj2": 0.10688780830879774}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,( Max( CRS,FirstVNF_CPU ) / ( ACS + FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( MLU ,CS ) * ( CS * RMSe ) ) ) + Max( Min( MUR ,( ( RCSe / RRSe ) * MUR ) ),RCSe ) )", "obj1": 0.7061224489795919, "obj2": 0.17834380789213972}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.5341895771944428}, {"determining": "( ( BR + ( PN - ( PN * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / MUC ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6530612244897959, "obj2": 0.2138319428488255}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.4, "obj2": 0.4808132476949144}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ,( MUM / CS ) ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.15135800612718273}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - ( Min( BR ,AMS ) / FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + ( ( MLU / MUC ) * Min( RMSe ,CS ) ) ),Max( DS,RRSe ) )", "obj1": 0.29183673469387755, "obj2": 0.6334107525551108}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( ( ( ( MDR - RRS ) + Max( DDR,FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) ) * Min( ( BR + ( PN - ( RRS * RRS ) ) ) ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7734419774961668}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.784001935904206}, {"determining": "( Max( PN,BR ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,( MDR / ( DDR * FirstVNF_Mem ) ) ) ) ) ) + ( DDR * ( ( DDR - ACS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( RMSe * ( ( ( RMSe / ( RCSe - RCSe ) ) / ( DS / RMSe ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) / ( CS - ( Max( MLU,RMSe ) - MUR ) ) )", "obj1": 0.37142857142857144, "obj2": 0.5338670408966214}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( ( MDR + AMS ) ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( CS / CS ) / RMSe ) / ( MLU / CS ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.8673469387755102, "obj2": 0.069650838752966}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5125419085480953}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,Min( FirstVNF_RAM ,MDR ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( Max( CS,RMSe ) / ( ( CS * CS ) * ( MUR * RMSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.033689706976725894}, {"determining": "( ( ( ( Const / DDR ) - ( Max( MDR,DDR ) - FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( Min( Max( FirstVNF_CPU,DDR ) ,MDR ) ,( ARS - FirstVNF_Mem ) ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / Min( ( DS - MUC ) ,( CS / MUR ) ) ) - ( Min( ( Max( Max( RCSe,( MUM / MLU ) ),Max( ( MUC + ( CS / RCSe ) ),( MUC / DS ) ) ) / RCSe ) ,Max( Max( RRSe,MLU ),DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.07400370988557062}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,AMS ) / FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( CS * ( ( ( RMSe / DS ) / DS ) - Max( Min( DS ,RMSe ),( ( RCSe / ( Min( ( RRSe - CS ) ,RRSe ) * Min( ( RMSe / CS ) ,Max( CS,MUM ) ) ) ) / MUM ) ) ) )", "obj1": 0.3326530612244898, "obj2": 0.5880817498667376}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,CS ) )", "obj1": 0.6408163265306123, "obj2": 0.2403243152335635}, {"determining": "( ( BR + ( ( MDR / ( DDR * FirstVNF_Mem ) ) - ( RRS * ( Const + BR ) ) ) ) - ( Min( CRS ,( ( Const / DDR ) / CRS ) ) + ( BR * ( ( ( DDR - RRS ) * FirstVNF_CPU ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Max( RCSe,MLU ) ),Max( DS,( ( Max( RCSe,( ( RCSe + MUR ) * ( MUR - ( MUC - DS ) ) ) ) + ( MLU + DS ) ) - CS ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8824126085086432}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * MDR ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( DDR * MRS ) / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( ( CS + DS ) / ( ( MUM * MUM ) / MUM ) ) - MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6634224365372259}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( ( ( ( RRS - MDR ) + Max( DDR,FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) ) * Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server + MRS ) / ( ( Const * Min( DDR ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( CS / MUM ) / ( DS / RMSe ) ) ,MLU ) * ( MUM * RMSe ) ) / ( Max( RCSe,MLU ) / DS ) )", "obj1": 0.16326530612244897, "obj2": 0.7988188847520092}, {"determining": "Min( Max( ( ( Const + RRS ) / ( MRS + MDR ) ),( FirstVNF_CPU + RRS ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,MDR ) ,PN ) ) ,DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - ( ( RCSe - RRSe ) / RRSe ) ) ) ) ) - ( ( ( MUM - RMSe ) * ( MLU - MLU ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.06429597880866303}, {"determining": "( ( FirstVNF_RAM - ( PN + MRS ) ) - Max( ( ( MDR + AMS ) / ( ARS - Max( AMS,( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) ) ),BR ) )", "choosing": "Max( ( ( RRSe * RCSe ) * ( ( ( MUM / RMSe ) * ( MUC / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ),( MLU * RCSe ) )", "obj1": 0.8510204081632653, "obj2": 0.08794191319011894}, {"determining": "( Max( Max( Max( FirstVNF_RAM,( ( ( PN * ( AMS * MRS ) ) / FirstVNF_Mem_Server ) / ARS ) ),Min( Const ,( Max( ( ACS * Max( ARS,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) - MDR ) ) ),( ( MDR / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Min( ( MLU + MUC ) ,MUR ) / ( Min( ( ( MUM + Min( ( MUC + Max( RMSe,MLU ) ) ,( ( RCSe - RRSe ) - MUC ) ) ) / Min( ( MUM * ( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( CS,MUC ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8124349669754508}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) / ( MDR - MRS ) ) * PN ) + ( Const - ( Min( DDR ,ACS ) - BR ) ) )", "choosing": "( ( Max( RRSe,MLU ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( ( Min( CS ,( RCSe * DS ) ) + CS ) + MLU ) )", "obj1": 0.19591836734693877, "obj2": 0.7460279662664742}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,AMS ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( DS - RCSe ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.051946086785964816}, {"determining": "( ( Max( BR,( ( MRS + Max( FirstVNF_RAM,( DDR + MDR ) ) ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - ARS ) ) * PN ) )", "choosing": "( ( Max( DS,MLU ) / DS ) / ( Min( ( ( RRSe / ( ( MUM / ( RMSe * RCSe ) ) - ( MUM + RRSe ) ) ) / Min( CS ,MUR ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.4061224489795918, "obj2": 0.4759838553570047}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + ( ( MLU / MUC ) * Min( RMSe ,CS ) ) ),Max( DS,RRSe ) )", "obj1": 0.34285714285714286, "obj2": 0.5707033286176703}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( MRS ,ARS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8468280363334023}, {"determining": "( ( ( Max( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ),DDR ) * ( ARS * BR ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( RRS + DDR ) ) ) - MDR )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 0.9387755102040817, "obj2": 0.03213461786094348}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( Const ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.09341469117059217}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / ( Const / ( AMS / MRS ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Max( MUM,( Min( CS ,MUR ) * ( MUR + CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.642097773636003}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( ( ( ( DDR / FirstVNF_Mem ) + ( RRS - MDR ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) ) * Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server + MRS ) / ( ( Const * Min( DDR ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( CS * ( ( ( ( RRSe / MUM ) / RMSe ) / DS ) - ( Min( RMSe ,DS ) / ( CS + DS ) ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8222428639468671}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( MDR + BR ) ) + FirstVNF_Mem ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * Min( MUR ,CS ) ),( ( MLU / MUC ) + Max( RRSe,( Max( RRSe,Max( MUC,MUR ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 0.5142857142857142, "obj2": 0.38779555527043247}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Max( ( RRS + PN ),Min( BR ,PN ) ) / ( ( Const - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8706151842802563}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( FirstVNF_Mem_Server + ( MDR / Min( ( FirstVNF_CPU + ( MDR - BR ) ) ,PN ) ) ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + AMS ) / ( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( RMSe / MUM ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( MUR ,MUM ) ) ,MLU ) * ( Min( RCSe ,( RCSe / ( ( ( MUM * MUR ) * Min( RRSe ,MUC ) ) * MLU ) ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / RRSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.14533323318392638}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ( RRS * MDR ) ) ) / ( ( ( ( BR / BR ) + ( ARS + FirstVNF_Mem ) ) / ( ( ( ( Const / DDR ) - ( CRS / ACS ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,ACS ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( ( ( RCSe / MUC ) + MUM ) / MUR ) / ( DS - ( MUC * MUC ) ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),MUC ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / MRS ) - Max( MDR,BR ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - ( RRS + MDR ) ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) ) / ( MUM + Max( ( ( CS / DS ) + ( MUC + ( RCSe / Min( MUR ,CS ) ) ) ),Max( DS,RRSe ) ) ) ) )", "obj1": 0.7244897959183674, "obj2": 0.17419577018034546}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - MDR )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.6061224489795919, "obj2": 0.24918610079363612}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.39387755102040817, "obj2": 0.5090653847972082}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.522308609760252}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7551020408163265, "obj2": 0.1467624181934353}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ( ARS + Min( FirstVNF_Mem_Server ,BR ) ) / ( MRS / ( RRS * PN ) ) ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUR ) ) * ( ( ( ( RCSe * DS ) / RCSe ) / MUM ) / ( RRSe + RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "Min( ( Max( PN,AMS ) * ( FirstVNF_CPU - Max( ( FirstVNF_RAM / FirstVNF_CPU_Server ),ARS ) ) ) ,( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MLU,( DS / MUM ) ) / DS ) / ( MUC - ( ( ( MLU - MLU ) - RCSe ) * MUR ) ) )", "obj1": 0.9795918367346939, "obj2": 0.010465251024735552}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,Min( FirstVNF_RAM ,MDR ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RMSe / CS ) * ( MUR + CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.9040816326530612, "obj2": 0.04360496310479695}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.6825201211172104}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,RMSe ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6400992957955317}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ,( Min( Max( MRS,RRS ) ,Min( ( FirstVNF_RAM * ACS ) ,PN ) ) / CRS ) ) / DDR ) - ( MDR - BR ) )", "choosing": "( ( Max( RCSe,MLU ) / ( ( DS * MLU ) + Max( CS,( Max( MUC,Max( DS,CS ) ) + Min( RMSe ,( Min( RCSe ,MUC ) * DS ) ) ) ) ) ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MLU ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7750288077395031}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7346938775510204, "obj2": 0.16884337167105765}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( CS ,( MUR - ( RMSe - ( CS - RMSe ) ) ) ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.871033296691264}, {"determining": "( ( ( BR - BR ) / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) / ( MRS - ( FirstVNF_Mem_Server * MDR ) ) ),MRS ) ) ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8431069927389233}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU / ACS ) ) / ( ( FirstVNF_Mem - MRS ) / Max( ( ( FirstVNF_RAM * DDR ) - Max( MRS,PN ) ),( Min( MDR ,FirstVNF_RAM ) + Min( CRS ,MDR ) ) ) ) )", "choosing": "( Min( Max( DS,MLU ) ,( MUC - Min( RMSe ,RMSe ) ) ) / ( RCSe / Max( MUC,Max( ( RRSe / ( MUR - MUC ) ),CS ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5531032257334516}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.11224489795918367, "obj2": 0.8571698148053979}, {"determining": "( ( ( DDR - MRS ) * ( ( ( BR + FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / MDR ) ) ) - ( ( Min( DDR ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) + MUC ) ) / ( MUR / CS ) ) ) / ( Max( RMSe,Max( ( MLU * ( Min( Max( MUM,MUC ) ,MUR ) - DS ) ),MUM ) ) * Max( MUM,RCSe ) ) )", "obj1": 0.16122448979591836, "obj2": 0.8070131194081667}, {"determining": "( ( BR + ( ( AMS * RRS ) - ( Max( RRS,Min( MRS ,Const ) ) + MRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * Min( ( RRSe - Max( MLU,MUM ) ) ,MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( Max( ( Max( CS,DS ) / DS ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21019365035358994}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) )", "choosing": "( ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.02524607893398495}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( BR ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.9612244897959183, "obj2": 0.016794026077403074}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_RAM_Server ) ) ) ),Min( Max( ACS,( Const / MRS ) ) ,Max( ACS,BR ) ) ) ) ) )", "choosing": "( ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( ( CS / CS ) / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * MUR ) ) / ( Max( RCSe,MLU ) / DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8385818218944107}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( BR ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) )", "obj1": 0.9408163265306122, "obj2": 0.027859199377198777}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6565895249286856}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5831290117450217}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.5775510204081633, "obj2": 0.289829684179227}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - MDR )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.6061224489795919, "obj2": 0.24918610079363612}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( ( ( ( MDR - RRS ) + Max( DDR,FirstVNF_Mem ) ) - ( Max( MDR,BR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) ) * Min( ( BR + ( PN - ( RRS * RRS ) ) ) ,BR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( ( DS / RMSe ) + MUR ) / ( DS / RMSe ) ) ,MLU ) * Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8809099241539263}, {"determining": "( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,CS ) - ( ( RCSe - ( ( RMSe + RCSe ) * RRSe ) ) - MUC ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.04171514761680672}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ( CRS / BR ) ) ) / ( DDR + ARS ) )", "choosing": "( Max( Max( Min( ( Max( ( DS / RCSe ),Min( MLU ,RRSe ) ) - MUM ) ,RMSe ),Min( Min( CS ,RMSe ) ,MLU ) ),MUR ) / ( ( ( ( MUM / ( Min( CS ,Max( RMSe,MUC ) ) * MUM ) ) / ( MUR + RRSe ) ) * RRSe ) + RCSe ) )", "obj1": 0.3510204081632653, "obj2": 0.5471800836224754}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / Max( CRS,Min( ( CRS * FirstVNF_RAM ) ,Max( ( ( MDR + AMS ) / ( ARS - Max( FirstVNF_Mem_Server,( CRS / FirstVNF_CPU_Server ) ) ) ),MRS ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RCSe + RCSe ) / Min( CS ,( ( DS / RMSe ) / ( MLU / CS ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8319432933790514}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6738096179279405}, {"determining": "( ( Min( Max( ( DDR - Const ),( FirstVNF_CPU + RRS ) ) ,( ( MDR / FirstVNF_CPU_Server ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( RMSe / DS ) / RRSe ) - ( MUR / RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7296341739067057}], "16": [{"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_CPU_Server )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( ( MUC - MLU ),( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Max( Min( AMS ,Max( ACS,FirstVNF_RAM ) ),( PN + ( CRS * FirstVNF_Mem_Server ) ) ) + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( ( RMSe + MUM ) ,RMSe ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) ),( Min( ( ( DS + MUR ) / ( ( ( MUC + ( RCSe / RRSe ) ) - MUM ) / RMSe ) ) ,MLU ) * ( MUR * ( Min( ( RMSe * MUC ) ,MUM ) + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.5612244897959183, "obj2": 0.32036436337573276}, {"determining": "( Max( ( PN - ( RRS * AMS ) ),( Max( ( ACS - AMS ),AMS ) * ( Min( Max( CRS,BR ) ,FirstVNF_CPU_Server ) * MRS ) ) ) - ( Min( CRS ,( CRS / ( Const / ( AMS / MRS ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( RMSe / ( DS + Max( RMSe,CS ) ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.4377572611753538}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) + ( ( MLU * RRSe ) * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.40585943766444865}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5326530612244897, "obj2": 0.33574860682639196}, {"determining": "( ( FirstVNF_Mem + Max( ACS,Const ) ) / ( ( ARS / FirstVNF_CPU ) * Min( ( FirstVNF_CPU_Server + ( ( RRS * RRS ) - PN ) ) ,BR ) ) )", "choosing": "( ( Min( ( RRSe / MUM ) ,Min( MLU ,( RCSe + RCSe ) ) ) + CS ) / ( MUC * ( DS * ( ( RMSe - MUM ) / MLU ) ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7098202855840406}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / ( DDR * FirstVNF_Mem ) ) + ( MDR / DDR ) ) ) - Max( Const,FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( Max( DS,DS ) * MUR ),( RCSe + MUC ) ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3641518456109744}, {"determining": "( ( Min( RRS ,AMS ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( ( ACS * ( ( AMS + RRS ) / PN ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MLU ,( Max( ( MUM / ( Min( RRSe ,DS ) / RCSe ) ),Max( RCSe,RMSe ) ) / ( DS + CS ) ) ) / ( MUR * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.2957460128636215}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5972616397786968}, {"determining": "( ( Max( CRS,( ( Max( FirstVNF_CPU_Server,( BR / FirstVNF_Mem ) ) + MDR ) + RRS ) ) - FirstVNF_CPU ) + ( ( FirstVNF_Mem * ACS ) * PN ) )", "choosing": "( ( ( MLU * RCSe ) / Min( MUC ,Max( ( ( RMSe / ( RMSe + Max( DS,RCSe ) ) ) + DS ),( ( Min( RRSe ,Max( RMSe,RMSe ) ) - CS ) * Min( ( MUC * ( MLU + MUM ) ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( RRSe ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.41836734693877553, "obj2": 0.455408266001325}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - ( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,AMS ) / FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( CS * ( ( ( RMSe / DS ) / DS ) - Max( Min( DS ,RMSe ),( ( RCSe / ( Min( ( RRSe - CS ) ,RRSe ) * Min( ( RMSe / CS ) ,Max( CS,MUM ) ) ) ) / MUM ) ) ) )", "obj1": 0.3326530612244898, "obj2": 0.5880817498667376}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( BR / RRS ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( ( PN + FirstVNF_Mem_Server ) / Min( MRS ,FirstVNF_RAM ) ) - ( ( MDR / DDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / FirstVNF_Mem ) / Min( MRS ,ARS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MUM / MUC ) + Min( RRSe ,( ( RMSe + DS ) + RRSe ) ) ) ) ) / ( MUC * ( RCSe + ( DS * DS ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8918654089622247}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( RMSe,( CS + DS ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6164532856735305}, {"determining": "( Max( MDR,BR ) - ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_RAM * ( CRS + DDR ) ) ) * DDR ) )", "choosing": "( ( Min( RCSe ,RMSe ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / RCSe ) + Max( ( RRSe / ( Max( MUR,RMSe ) - ( DS / RMSe ) ) ),( ( Min( CS ,RMSe ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,CS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7577000357142152}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) / ( MDR - MRS ) ) * PN ) + ( Const - ( Min( DDR ,ACS ) - BR ) ) )", "choosing": "( ( Max( RRSe,MLU ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( ( Min( CS ,( RCSe * DS ) ) + CS ) + MLU ) )", "obj1": 0.19591836734693877, "obj2": 0.7460279662664742}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ,( MUM / CS ) ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.15135800612718273}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.48367346938775513, "obj2": 0.39421669911632357}, {"determining": "( ( BR + ( PN - ( RRS * ( Const + BR ) ) ) ) - ( Min( CRS ,( ( Const / DDR ) / CRS ) ) + ( BR * ( ( ( DDR - RRS ) * FirstVNF_CPU ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Max( RCSe,MLU ) ),Max( DS,( ( Max( RCSe,( ( RCSe + MUR ) * ( MUR - ( MUC - DS ) ) ) ) + ( MLU + DS ) ) - CS ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6909621884741578}, {"determining": "( ( Max( ( RRS - MRS ),ACS ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( ( RRSe * ( RCSe * ( MUR * RRSe ) ) ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / DS ) + Min( MUC ,MUR ) ) )", "obj1": 0.6306122448979592, "obj2": 0.22432799678189422}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( CS * RMSe ) ) ) + Max( RRSe,MLU ) )", "obj1": 0.23673469387755103, "obj2": 0.7035001197377236}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,RMSe ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6400992957955317}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 0.5102040816326531, "obj2": 0.39296408438621844}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / MRS ) - Max( MDR,BR ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - ( RRS + MDR ) ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) / DS ) / ( ( ( CS - MUR ) / ( ( RRSe * RCSe ) / ( MUC - RMSe ) ) ) / ( MUM + Max( ( ( CS / DS ) + ( MUC + ( RCSe / Min( MUR ,CS ) ) ) ),Max( DS,RRSe ) ) ) ) )", "obj1": 0.7020408163265306, "obj2": 0.18655128970251075}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.6825201211172104}, {"determining": "( ( ( ( Const / DDR ) - ( Max( MDR,DDR ) - FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( Min( Max( FirstVNF_CPU,DDR ) ,MDR ) ,( ARS - FirstVNF_Mem ) ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / Min( ( DS - MUC ) ,( CS / MUR ) ) ) - ( Min( ( Max( Max( RCSe,( MUM / MLU ) ),Max( ( MUC + ( CS / RCSe ) ),( MUC / DS ) ) ) / RCSe ) ,Max( Max( RRSe,MLU ),DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.07400370988557062}, {"determining": "( ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( ( CRS / CRS ) / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) + ( PN - ( RRS * RRS ) ) ) - MDR )", "choosing": "Max( ( CS + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.7653061224489796, "obj2": 0.1316859572275605}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) + FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Min( DS ,Min( DS ,CS ) ) * ( ( ( RMSe / DS ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3081632653061224, "obj2": 0.6100495352576694}, {"determining": "( ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) ) - Max( MDR,BR ) )", "choosing": "( ( ( ( Min( CS ,MUR ) * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,RCSe ) * ( MUR * RMSe ) ) ) + ( RMSe * ( MLU * MLU ) ) )", "obj1": 0.8040816326530612, "obj2": 0.10688780830879774}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / Min( Max( CRS,FirstVNF_CPU ) ,( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( Max( Min( DS ,RMSe ),( CS + DS ) ) - ( ( DS / RMSe ) / ( ( Min( ( ( MUM * CS ) - ( DS - RMSe ) ) ,RRSe ) + CS ) / Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.33877551020408164, "obj2": 0.576608336254683}, {"determining": "( Max( ( PN - ( RRS * AMS ) ),( Max( Min( AMS ,BR ),AMS ) * ( FirstVNF_CPU * MRS ) ) ) - ( Min( CRS ,( CRS / ( Const / ( AMS / MRS ) ) ) ) + ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( RMSe,( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.448960987968679}, {"determining": "Min( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7346938775510204, "obj2": 0.16884337167105765}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.46675908430493035}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - Max( ( FirstVNF_Mem_Server + FirstVNF_CPU ),ACS ) )", "choosing": "( ( Min( RCSe ,RMSe ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / RCSe ) + Max( ( RRSe / ( Max( MUR,MUM ) - ( DS / RMSe ) ) ),( ( Min( CS ,RMSe ) + MLU ) + RRSe ) ) ) ) ) / ( Min( RMSe ,CS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6510204081632653, "obj2": 0.21770498284994425}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.7795918367346939, "obj2": 0.12464232778035716}, {"determining": "Min( ( Max( PN,AMS ) * ( FirstVNF_CPU - Max( ( FirstVNF_RAM / FirstVNF_CPU_Server ),ARS ) ) ) ,( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MLU,( DS / MUM ) ) / DS ) / ( MUC - ( ( ( MLU - MLU ) - RCSe ) * MUR ) ) )", "obj1": 0.9795918367346939, "obj2": 0.010465251024735552}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( CRS ,( ( Const / DDR ) / CRS ) ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( MLU - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5621677304319113}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( RMSe,( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.5224489795918368, "obj2": 0.3472504726418449}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6565895249286856}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( ( MDR + AMS ) ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( CS / CS ) / RMSe ) / ( MLU / CS ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.8816326530612245, "obj2": 0.05963575839468281}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8552385637973854}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( MDR + BR ) ) + FirstVNF_Mem ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * Min( MUR ,CS ) ),( ( MLU / MUC ) + Max( RRSe,( Max( RRSe,Max( MUC,MUR ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.522308609760252}, {"determining": "( ( Min( Max( ( DDR - Const ),( FirstVNF_CPU + RRS ) ) ,( ( MDR / FirstVNF_CPU_Server ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( RMSe / DS ) / RRSe ) - ( MUR / RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7296341739067057}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( ( MDR + AMS ) ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( CS / CS ) / RMSe ) / ( MLU / CS ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.8673469387755102, "obj2": 0.069650838752966}, {"determining": "( ( BR / ( FirstVNF_RAM / PN ) ) - MDR )", "choosing": "Max( ( ( CS / ( Max( DS,RCSe ) / DS ) ) + Min( MUC ,MUR ) ),Max( MUR,CS ) )", "obj1": 0.6142857142857143, "obj2": 0.2454464335428515}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ( RRS * MDR ) ) ) / ( ( ( ( BR / BR ) + ( ARS + FirstVNF_Mem ) ) / ( ( ( ( Const / DDR ) - ( CRS / ACS ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,ACS ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( ( ( RCSe / MUC ) + MUM ) / MUR ) / ( DS - ( MUC * MUC ) ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),MUC ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.18779681637094803}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( RRS + ( ( DDR * DDR ) - Const ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( RMSe / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( ( MLU / ( RMSe / MUR ) ) / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) / Min( DS ,RRSe ) ) )", "obj1": 0.5857142857142857, "obj2": 0.2849482379437667}, {"determining": "( ( BR + ( PN - ( PN * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( Max( MDR,BR ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,( RRSe * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / MUC ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6693877551020408, "obj2": 0.20305943537467674}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8428571428571429, "obj2": 0.08055157612037796}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) - MUC ) ) / ( MUR / CS ) ) ) + ( RMSe / ( MUM - MUR ) ) )", "obj1": 0.5142857142857142, "obj2": 0.38779555527043247}, {"determining": "( ( ARS / FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( MLU,MLU ) ) )", "obj1": 0.47551020408163264, "obj2": 0.40027761502327375}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * MDR ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( DDR * MRS ) / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( ( CS + DS ) / ( ( MUM * MUM ) / MUM ) ) - MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6634224365372259}, {"determining": "( ( FirstVNF_Mem + ARS ) / ( ( ( MDR - RRS ) + ( ( ( ( RRS - MDR ) + Max( DDR,FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) ) * Min( FirstVNF_CPU ,( ( FirstVNF_RAM_Server + MRS ) / ( ( Const * Min( DDR ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( CS / MUM ) / ( DS / RMSe ) ) ,MLU ) * ( MUM * RMSe ) ) / ( Max( RCSe,MLU ) / DS ) )", "obj1": 0.16326530612244897, "obj2": 0.7988188847520092}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.5877551020408164, "obj2": 0.26721357523097894}, {"determining": "( ( BR + ( ( AMS * RRS ) - ( Max( RRS,Min( MRS ,Const ) ) + MRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,MUR ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * Min( ( RRSe - Max( MLU,MUM ) ) ,MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( Max( ( Max( CS,DS ) / DS ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21019365035358994}, {"determining": "( Max( Max( Max( FirstVNF_RAM,( ( ( PN * ( AMS * MRS ) ) / FirstVNF_Mem_Server ) / ARS ) ),Min( Const ,( Max( ( ACS * Max( ARS,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) - MDR ) ) ),( ( MDR / FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( Min( ( MLU + MUC ) ,MUR ) / ( Min( ( ( MUM + Min( ( MUC + Max( RMSe,MLU ) ) ,( ( RCSe - RRSe ) - MUC ) ) ) / Min( ( MUM * ( MUR - RMSe ) ) ,( Min( MLU ,MUM ) + Max( CS,MUC ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8124349669754508}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) / DS ) / ( ( ( CS - MUR ) / Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) / ( MUM + Max( ( ( CS / DS ) + ( MUC + MUR ) ),Max( DS,RRSe ) ) ) ) )", "obj1": 0.7918367346938775, "obj2": 0.11023416951540609}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,( Max( CRS,FirstVNF_CPU ) / ( ACS + FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( MLU ,CS ) * ( CS * RMSe ) ) ) + Max( Min( MUR ,( ( RCSe / RRSe ) * MUR ) ),RCSe ) )", "obj1": 0.7061224489795919, "obj2": 0.17834380789213972}, {"determining": "( ( Max( BR,( ( MRS + Max( FirstVNF_RAM,( DDR + MDR ) ) ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - ARS ) ) * PN ) )", "choosing": "( ( Max( DS,MLU ) / DS ) / ( Min( ( ( RRSe / ( ( MUM / ( RMSe * RCSe ) ) - ( MUM + RRSe ) ) ) / Min( CS ,MUR ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.4061224489795918, "obj2": 0.4759838553570047}, {"determining": "( ( ( ( Const / DDR ) - ( FirstVNF_Mem_Server + ( MDR - DDR ) ) ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_Mem_Server ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( ( CS / MUR ) / Max( ( MUM + DS ),RMSe ) ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) / Min( CS ,( CS / MUM ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.049214848506557496}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.4, "obj2": 0.4808132476949144}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( BR ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.02305251505841483}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) + MUC ) ) )", "obj1": 0.6714285714285714, "obj2": 0.19431295169328314}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - ( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.8387755102040816, "obj2": 0.0877636480137928}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( FirstVNF_Mem_Server + ( MDR / Min( ( FirstVNF_CPU + ( MDR - BR ) ) ,PN ) ) ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + AMS ) / ( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( RMSe / MUM ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( MUR ,MUM ) ) ,MLU ) * ( Min( RCSe ,( RCSe / ( ( ( MUM * MUR ) * Min( RRSe ,MUC ) ) * MLU ) ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( ( MUR / RRSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.7591836734693878, "obj2": 0.14533323318392638}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU / ACS ) ) / ( ( FirstVNF_Mem - MRS ) / Max( ( ( FirstVNF_RAM * DDR ) - Max( MRS,PN ) ),( Min( MDR ,FirstVNF_RAM ) + Min( CRS ,MDR ) ) ) ) )", "choosing": "( Min( Max( DS,MLU ) ,( MUC - Min( RMSe ,RMSe ) ) ) / ( RCSe / Max( MUC,Max( ( RRSe / ( MUR - MUC ) ),CS ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5531032257334516}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ( CRS / BR ) ) ) / ( DDR + ARS ) )", "choosing": "( Max( Max( Min( ( Max( ( DS / RCSe ),Min( MLU ,RRSe ) ) - MUM ) ,RMSe ),Min( Min( CS ,RMSe ) ,MLU ) ),MUR ) / ( ( ( ( MUM / ( Min( CS ,Max( RMSe,MUC ) ) * MUM ) ) / ( MUR + RRSe ) ) * RRSe ) + RCSe ) )", "obj1": 0.3510204081632653, "obj2": 0.5471800836224754}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / ( Const / ( AMS / MRS ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Max( MUM,( Min( CS ,MUR ) * ( MUR + CS ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.642097773636003}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.6265306122448979, "obj2": 0.23614424643009146}, {"determining": "Min( Max( ( ( Const + RRS ) / ( MRS + MDR ) ),( FirstVNF_CPU + RRS ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,MDR ) ,PN ) ) ,DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - ( ( RCSe - RRSe ) / RRSe ) ) ) ) ) - ( ( ( MUM - RMSe ) * ( MLU - MLU ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.06429597880866303}, {"determining": "( ( Max( ( FirstVNF_CPU + ( CRS / DDR ) ),( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( Max( MLU,CS ) + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8673635799565659}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.17755102040816326, "obj2": 0.7701596473992488}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.5341895771944428}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Const ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ) * ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUR * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,( MUM / Min( MUC ,MUR ) ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6117991792504804}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8163265306122449, "obj2": 0.09982761909913129}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( CRS / ( Const / DDR ) ) + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( DS * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.39183673469387753, "obj2": 0.5020530553727981}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7551020408163265, "obj2": 0.1467624181934353}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) * ( ( ARS + Min( FirstVNF_Mem_Server ,BR ) ) / ( MRS / ( RRS * PN ) ) ) )", "choosing": "( Max( ( MUR * RRSe ),( MUR / MUR ) ) * ( ( ( ( RCSe * DS ) / RCSe ) / MUM ) / ( RRSe + RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194841523246066}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,Min( FirstVNF_RAM ,MDR ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "Max( ( DS / Max( RCSe,MLU ) ),( Min( ( ( DS + MUR ) / ( ( ( MUC + ( RCSe / RRSe ) ) - MUM ) / RMSe ) ) ,MLU ) * ( MUR * ( Min( ( RMSe * MUC ) ,MUM ) + MLU ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.030302127942686437}, {"determining": "( ( ( Max( AMS,Max( FirstVNF_Mem_Server,( MDR - FirstVNF_CPU ) ) ) / DDR ) - Max( BR,MDR ) ) - ( ( AMS * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "Max( ( ( MUR / DS ) + Min( MUC ,( RMSe - ( Min( MUM ,( MUC + ( RCSe * RCSe ) ) ) / ( DS / RMSe ) ) ) ) ),Max( DS,RRSe ) )", "obj1": 0.5265306122448979, "obj2": 0.33873520170785854}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,Min( FirstVNF_RAM ,MDR ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "Max( ( ( DS / CS ) + Min( MUC ,MUR ) ),( DS - ( ( RMSe / RCSe ) - ( RCSe - Min( Max( ( RMSe + MUM ),( ( MUC * RCSe ) / MLU ) ) ,MLU ) ) ) ) )", "obj1": 0.9387755102040817, "obj2": 0.027354374595073266}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( ( ( MUR / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) / ( MUR - CS ) ) ) / DS ) / ( Min( ( ( DS + MUR ) / Min( CS ,MUR ) ) ,MLU ) * ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.7775510204081633, "obj2": 0.12859430006158637}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( BR ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ,( MUM / CS ) ) ) ) )", "obj1": 0.9612244897959183, "obj2": 0.016794026077403074}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "Max( ( ( CS / DS ) + ( ( MLU / MUC ) * Min( RMSe ,CS ) ) ),Max( DS,RRSe ) )", "obj1": 0.363265306122449, "obj2": 0.5277003938015709}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ,( Min( Max( MRS,RRS ) ,Min( ( FirstVNF_RAM * ACS ) ,PN ) ) / CRS ) ) / DDR ) - ( MDR - BR ) )", "choosing": "( ( Max( RCSe,MLU ) / ( ( DS * MLU ) + Max( CS,( Max( MUC,Max( DS,CS ) ) + Min( RMSe ,( Min( RCSe ,MUC ) * DS ) ) ) ) ) ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MLU ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7750288077395031}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5125419085480953}, {"determining": "( ( ( ( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( Const ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + CS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.9877551020408163, "obj2": 0.0049460190661667165}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / Max( RRSe,MLU ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8959183673469387, "obj2": 0.047734886350310264}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7183673469387755, "obj2": 0.17645831391698366}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,Min( FirstVNF_RAM ,MDR ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( Max( CS,RMSe ) / ( ( CS * CS ) * ( MUR * RMSe ) ) )", "obj1": 0.9224489795918367, "obj2": 0.03313380895794291}, {"determining": "( ( ( Max( ( Max( ( PN * CRS ),CRS ) * DDR ),( FirstVNF_CPU + RRS ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server / PN ) ) ) / DDR ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUR / ( ( Max( MUC,( MUM / MUC ) ) + ( ( MUC - RRSe ) / Min( MUC ,RCSe ) ) ) * ( ( Min( DS ,DS ) - CS ) / ( ( MLU - DS ) + ( MUR + MUC ) ) ) ) ) ) / Max( ( ( MUR + CS ) * Min( CS ,MUR ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.784001935904206}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5918367346938775, "obj2": 0.26396174704090825}, {"determining": "( ( ( ( ( MDR - RRS ) + Max( DDR,FirstVNF_Mem ) ) - ( Max( MDR,BR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( MRS ,ARS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Min( RRSe ,( ( Min( MUR ,MLU ) + Min( CS ,MUR ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8420568487157982}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( ( ( DDR - RRS ) * FirstVNF_CPU ),( CRS / Min( Const ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.09179524718726595}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5918367346938775, "obj2": 0.26396174704090825}, {"determining": "( RRS - ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) - PN ) )", "choosing": "( ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) / ( Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) - Min( ( ( ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) / ( ( DS / RMSe ) / DS ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0006276619887356751}], "17": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "Min( Max( ( ( Const + RRS ) / ( MRS + MDR ) ),( FirstVNF_CPU + RRS ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,MDR ) ,PN ) ) ,DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - ( ( RCSe - RRSe ) / RRSe ) ) ) ) ) - ( ( ( MUM - RMSe ) * ( MLU - MLU ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) - ( ( Const / DDR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * FirstVNF_CPU_Server )", "choosing": "( ( Max( RRSe,MLU ) / DS ) / ( Min( RMSe ,DS ) * ( MUM / Max( ( MUC - MLU ),( ( ( Min( MUC ,RRSe ) - MUR ) * DS ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( ( FirstVNF_Mem_Server * ( ( DDR - ( AMS / RRS ) ) * FirstVNF_CPU ) ) ,BR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( DS ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,( MUC / ( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) + Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + Min( CS ,MUR ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( RCSe + MUC ),MUC ) ) ) )", "obj1": 0.7285714285714285, "obj2": 0.1356162834304895}, {"determining": "( ( AMS - Const ) + ( Max( FirstVNF_CPU_Server,( ( MRS + ( DDR - ( ( FirstVNF_CPU_Server + RRS ) * Min( RRS ,FirstVNF_RAM ) ) ) ) + PN ) ) - FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + ( ( ( RMSe + ( ( RRSe - ( MUR - Max( RRSe,MLU ) ) ) / DS ) ) / ( RMSe / Min( RCSe ,RCSe ) ) ) * Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.387743718631845}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / Min( Max( CRS,FirstVNF_CPU ) ,( RRS / FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( DS / RMSe ) )", "obj1": 0.5489795918367347, "obj2": 0.31703525513002195}, {"determining": "( ( ( Min( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN + FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + ( RMSe * MUR ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7551020408163265, "obj2": 0.11815819952191906}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( RRSe,( RCSe + MUC ) ) ) ) )", "obj1": 0.5183673469387755, "obj2": 0.3497940821167452}, {"determining": "( ( ( ( ( MDR - RRS ) + Max( DDR,FirstVNF_Mem ) ) - ( Max( MDR,BR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( MRS ,ARS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Min( RRSe ,( ( Min( MUR ,MLU ) + Min( CS ,MUR ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8420568487157982}, {"determining": "( ( ( ( ( MDR - RRS ) + Max( DDR,FirstVNF_Mem ) ) - ( Max( MDR,BR ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MDR ) / ACS ) ) / ( ( ACS - MDR ) / ( CRS - FirstVNF_Mem_Server ) ) ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( MRS ,ARS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Min( RRSe ,( ( Min( MUR ,MLU ) + Min( CS ,MUR ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8194627713412233}, {"determining": "( ( DDR / Min( Max( ( DDR + MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + ( ARS * MDR ) ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( RCSe ,MUR ) * ( MUR + CS ) ),( ( ( MLU + Min( RCSe ,( MUM + RRSe ) ) ) / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( MUC + RCSe ) ) ) ) )", "obj1": 0.15510204081632653, "obj2": 0.7870531921469149}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( ( PN / DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM * Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU * MUC ) + Max( RRSe,( ( Min( CS ,RMSe ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,( ( ( MUM + MUC ) / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6328433704984515}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7183673469387755, "obj2": 0.17645831391698366}, {"determining": "( Max( ( PN - ( RRS * AMS ) ),( Max( ( ACS - AMS ),AMS ) * ( Min( Max( CRS,BR ) ,FirstVNF_CPU_Server ) * MRS ) ) ) - ( Min( CRS ,( CRS / ( Const / ( AMS / MRS ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( RMSe / ( DS + Max( RMSe,CS ) ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.4377572611753538}, {"determining": "( ( FirstVNF_Mem + Max( ACS,Const ) ) / ( ( ARS / FirstVNF_CPU ) * Min( ( FirstVNF_CPU_Server + ( ( RRS * RRS ) - PN ) ) ,BR ) ) )", "choosing": "( ( Min( ( RRSe / MUM ) ,Min( MLU ,( RCSe + RCSe ) ) ) + CS ) / ( MUC * ( DS * ( ( RMSe - MUM ) / MLU ) ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7098202855840406}, {"determining": "( ( AMS + FirstVNF_CPU_Server ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( CS * ( Max( Min( DS ,RMSe ),( CS + DS ) ) - ( ( DS / ( RCSe / ( DS + Min( ( MUR * MLU ) ,( DS / DS ) ) ) ) ) / DS ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( ( Max( FirstVNF_RAM,( CRS + FirstVNF_RAM_Server ) ) / ( MDR - MRS ) ) * PN ) + ( Max( MDR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( Max( MLU,CS ) + ( RRSe - MUR ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - MLU ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,( MUC - ( RCSe + MUC ) ) ) ) )", "obj1": 0.4346938775510204, "obj2": 0.4436162399523828}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + MRS ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / ( ( ( Min( CS ,RMSe ) + DS ) + RRSe ) + MLU ) ) )", "obj1": 0.6510204081632653, "obj2": 0.21419578085293114}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.37551020408163266, "obj2": 0.5187317594551327}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7244382501272284}, {"determining": "( ( Max( CRS,( ( Max( FirstVNF_CPU_Server,( BR / FirstVNF_Mem ) ) + MDR ) + RRS ) ) - FirstVNF_CPU ) + ( ( FirstVNF_Mem * ACS ) * PN ) )", "choosing": "( ( ( MLU * RCSe ) / Min( MUC ,Max( ( ( RMSe / ( RMSe + Max( DS,RCSe ) ) ) + DS ),( ( Min( RRSe ,Max( RMSe,RMSe ) ) - CS ) * Min( ( MUC * ( MLU + MUM ) ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( RRSe ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.41836734693877553, "obj2": 0.455408266001325}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( FirstVNF_RAM / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + CS ) / ( MLU / MUM ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8290024268462947}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.2740791529718585}, {"determining": "( ( ( ( ( RRS / BR ) + Min( FirstVNF_Mem ,ARS ) ) / ( ( ( ( ( CRS / CRS ) / DDR ) - ( ( MDR / FirstVNF_CPU ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) + ( PN - ( RRS * RRS ) ) ) - MDR )", "choosing": "Max( ( ( Max( Max( RRSe,RRSe ),( ( RRSe - MUC ) * ( ( MUM + ( RCSe * RRSe ) ) * ( MUR * Max( MUC,MUC ) ) ) ) ) - ( DS + ( MUR - MUC ) ) ) + ( ( Min( CS ,MLU ) * ( MUR * DS ) ) - MUC ) ),Max( DS,RRSe ) )", "obj1": 0.7775510204081633, "obj2": 0.11429179385950776}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5872151273108189}, {"determining": "( ( Min( RRS ,AMS ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( ( ACS * ( ( AMS + RRS ) / PN ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MLU ,( Max( ( MUM / ( Min( RRSe ,DS ) / RCSe ) ),Max( RCSe,RMSe ) ) / ( DS + CS ) ) ) / ( MUR * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.2957460128636215}, {"determining": "( ( BR + ( ( FirstVNF_Mem_Server - CRS ) - FirstVNF_RAM ) ) - ( Min( BR ,ARS ) + ( ( FirstVNF_RAM_Server - MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( Min( ( ( RCSe * CS ) - ( RMSe + MUC ) ) ,DS ) * ( ( Max( DS,DS ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( MLU ,Min( Max( MLU,CS ) ,( MLU * MUM ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.6755102040816326, "obj2": 0.18217938638464642}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3346938775510204, "obj2": 0.5714748077242514}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ACS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC * MUR ) / ( MLU * RCSe ) ) + ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( ( ( CS - MUM ) + DS ) - Max( ( Min( MUM ,RRSe ) + Max( CS,RRSe ) ),Min( RMSe ,MLU ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6088329901482722}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6497226629297939}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( RMSe,( CS + DS ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6164532856735305}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6571428571428571, "obj2": 0.20042188067083908}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7560042755502036}, {"determining": "( PN - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.463265306122449, "obj2": 0.41946626661394776}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( PN - Const ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( ( MLU / ( RMSe / MUR ) ) / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) / ( ( DS + MUR ) / DS ) ) )", "obj1": 0.5714285714285714, "obj2": 0.29531258768780083}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( Max( ( PN - Min( DDR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) / ( MDR - ( FirstVNF_Mem_Server / Const ) ) ) * PN ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( CS - MUR ) * Min( RMSe ,( Max( DS,DS ) * ( Max( MUR,CS ) * MUR ) ) ) ) ),Max( DS,RRSe ) )", "obj1": 0.363265306122449, "obj2": 0.5256820823092603}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.6040816326530613, "obj2": 0.2591324047800263}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.6265306122448979, "obj2": 0.23614424643009146}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6738096179279405}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe / CS ) ) - ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) + MUC ) ) )", "obj1": 0.6714285714285714, "obj2": 0.19431295169328314}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,( Max( CRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7020408163265306, "obj2": 0.18082586766634517}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.5341895771944428}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) / DS ) / ( ( ( CS - MUR ) / Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) / ( MUM + Max( ( ( CS / DS ) + ( MUC + MUR ) ),Max( DS,RRSe ) ) ) ) )", "obj1": 0.7918367346938775, "obj2": 0.11023416951540609}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( PN / ( FirstVNF_CPU / BR ) ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8590972101065282}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( Max( MDR,BR ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,( RRSe * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + ( ( DDR / ACS ) - FirstVNF_CPU ) )", "choosing": "Max( ( Max( ( Max( RRSe,CS ) - ( DS - RCSe ) ),MLU ) / Max( Min( MUR ,RMSe ),( MUM + MLU ) ) ),( Min( ( RMSe / MUM ) ,MLU ) * ( MUR * ( Min( ( RMSe * MUC ) ,MUM ) + MLU ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5038100376401684}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * MDR ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( DDR * MRS ) / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( ( ( CS + DS ) / ( ( MUM * MUM ) / MUM ) ) - MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6634224365372259}, {"determining": "( ( ( ( Const / DDR ) - ( Max( MDR,DDR ) - FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( Min( Max( FirstVNF_CPU,DDR ) ,MDR ) ,( ARS - FirstVNF_Mem ) ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / Min( ( DS - MUC ) ,( CS / MUR ) ) ) - ( Min( ( Max( Max( RCSe,( MUM / MLU ) ),Max( ( MUC + ( CS / RCSe ) ),( MUC / DS ) ) ) / RCSe ) ,Max( Max( RRSe,MLU ),DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.07400370988557062}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( CRS ,( ( Const / DDR ) / CRS ) ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( MLU - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5621677304319113}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( RMSe,( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8838810019703571}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ( RRS * MDR ) ) ) / ( ( ( ( BR / BR ) + ( ARS + FirstVNF_Mem ) ) / ( ( ( ( Const / DDR ) - ( CRS / ACS ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,ACS ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( ( ( RCSe / MUC ) + MUM ) / MUR ) / ( DS - ( MUC * MUC ) ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),MUC ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.17755102040816326, "obj2": 0.7701596473992488}, {"determining": "Min( ( Max( PN,AMS ) * ( FirstVNF_CPU - Max( ( FirstVNF_RAM / FirstVNF_CPU_Server ),ARS ) ) ) ,( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MLU,( DS / MUM ) ) / DS ) / ( MUC - ( ( ( MLU - MLU ) - RCSe ) * MUR ) ) )", "obj1": 0.9795918367346939, "obj2": 0.010465251024735552}, {"determining": "( ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM ) + FirstVNF_Mem_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) ) - Max( MDR,BR ) )", "choosing": "( ( ( ( Min( CS ,MUR ) * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,RCSe ) * ( MUR * RMSe ) ) ) + ( RMSe * ( MLU * MLU ) ) )", "obj1": 0.8040816326530612, "obj2": 0.10688780830879774}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( ( ( DDR - RRS ) * FirstVNF_CPU ),( CRS / Min( Const ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.09179524718726595}, {"determining": "Min( Max( ( Max( FirstVNF_RAM,ARS ) - MRS ),( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( ( Const / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) - ( ( MDR / Min( Min( ( MDR + AMS ) ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( CS / CS ) / RMSe ) / Min( MLU ,CS ) ) / ( Min( DS ,MUC ) - Min( Max( RMSe,RMSe ) ,RRSe ) ) ) - Max( ( ( MUM - RMSe ) * ( ( RCSe / MUM ) - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( RRSe ,MUM ) ) + DS ) ) )", "obj1": 0.8755102040816326, "obj2": 0.05711079855374757}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( BR ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ,( MUM / CS ) ) ) ) )", "obj1": 0.9612244897959183, "obj2": 0.016794026077403074}, {"determining": "( ( ( ( Const / DDR ) - ( FirstVNF_Mem_Server + ( MDR - DDR ) ) ) * ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_Mem_Server ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( ( CS / MUR ) / Max( ( MUM + DS ),RMSe ) ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) / Min( CS ,( CS / MUM ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.049214848506557496}, {"determining": "( ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( FirstVNF_RAM_Server - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) + ( PN - ( RRS * RRS ) ) ) - MDR )", "choosing": "Max( ( CS + Min( MUC ,MUR ) ),Max( ( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ),RRSe ) )", "obj1": 0.8122448979591836, "obj2": 0.09257736411476708}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( Max( ( FirstVNF_CPU_Server + CRS ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( MUR * RMSe ) )", "obj1": 0.19387755102040816, "obj2": 0.7466538915535073}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ,( Min( Max( MRS,RRS ) ,Min( ( FirstVNF_RAM * ACS ) ,PN ) ) / CRS ) ) / DDR ) - ( MDR - BR ) )", "choosing": "( ( Max( RCSe,MLU ) / ( ( DS * MLU ) + Max( CS,( Max( MUC,Max( DS,CS ) ) + Min( RMSe ,( Min( RCSe ,MUC ) * DS ) ) ) ) ) ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MLU ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7750288077395031}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.4, "obj2": 0.4808132476949144}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) + ( ( MLU * RRSe ) * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.40585943766444865}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU / ACS ) ) / ( ( FirstVNF_Mem - MRS ) / Max( ( ( FirstVNF_RAM * DDR ) - Max( MRS,PN ) ),( Min( MDR ,FirstVNF_RAM ) + Min( CRS ,MDR ) ) ) ) )", "choosing": "( Min( Max( DS,MLU ) ,( MUC - Min( RMSe ,RMSe ) ) ) / ( RCSe / Max( MUC,Max( ( RRSe / ( MUR - MUC ) ),CS ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5531032257334516}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ( CRS / BR ) ) ) / ( DDR + ARS ) )", "choosing": "( Max( Max( Min( ( Max( ( DS / RCSe ),Min( MLU ,RRSe ) ) - MUM ) ,RMSe ),Min( Min( CS ,RMSe ) ,MLU ) ),MUR ) / ( ( ( ( MUM / ( Min( CS ,Max( RMSe,MUC ) ) * MUM ) ) / ( MUR + RRSe ) ) * RRSe ) + RCSe ) )", "obj1": 0.3510204081632653, "obj2": 0.5471800836224754}, {"determining": "( ( Max( BR,( ( MRS + DDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MLU + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6764867299919775}, {"determining": "( ( BR / ( FirstVNF_RAM / PN ) ) - MDR )", "choosing": "Max( ( ( CS / ( Max( DS,RCSe ) / DS ) ) + Min( MUC ,MUR ) ),Max( MUR,CS ) )", "obj1": 0.6142857142857143, "obj2": 0.2454464335428515}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + CS ) / ( MLU / MUM ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6122448979591837, "obj2": 0.2468007606635288}, {"determining": "( ( ( DDR * FirstVNF_RAM ) - ( MDR - BR ) ) - ( MDR / DDR ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) / DS ) / ( ( ( CS - MUR ) / Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) / ( MUM + Max( ( ( CS - ( DS * DS ) ) + ( MLU / MUR ) ),Max( DS,RRSe ) ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.09805047517192542}, {"determining": "( ( Max( BR,( ( MRS - MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( PN * FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,CS ) - ( ( MUM + MUC ) - CS ) ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.48367346938775513, "obj2": 0.39416040439079775}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_Mem + FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * DS )", "obj1": 0.863265306122449, "obj2": 0.0688804793799635}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( ( ( CS / CS ) / RMSe ) / ( MLU / CS ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.8326530612244898, "obj2": 0.08514787243447987}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) / ( MDR - MRS ) ) * PN ) + ( Const - ( Min( DDR ,ACS ) - BR ) ) )", "choosing": "( ( Max( RRSe,MLU ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( ( Min( CS ,( RCSe * DS ) ) + CS ) + MLU ) )", "obj1": 0.19591836734693877, "obj2": 0.7460279662664742}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5326530612244897, "obj2": 0.33574860682639196}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8428571428571429, "obj2": 0.08055157612037796}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,( Max( CRS,FirstVNF_CPU ) / ( ACS + FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( MLU ,CS ) * ( CS * RMSe ) ) ) + Max( Min( MUR ,( ( RCSe / RRSe ) * MUR ) ),RCSe ) )", "obj1": 0.7061224489795919, "obj2": 0.17834380789213972}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8552385637973854}, {"determining": "( ( Max( ( RRS - MRS ),ACS ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( ( RRSe * ( RCSe * ( MUR * RRSe ) ) ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / DS ) + Min( MUC ,MUR ) ) )", "obj1": 0.6306122448979592, "obj2": 0.22432799678189422}, {"determining": "( ( ( Max( ( Max( ( PN * CRS ),CRS ) * DDR ),( FirstVNF_CPU + RRS ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server / PN ) ) ) / DDR ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUR / ( ( Max( MUC,( MUM / MUC ) ) + ( ( MUC - RRSe ) / Min( MUC ,RCSe ) ) ) * ( ( Min( DS ,DS ) - CS ) / ( ( MLU - DS ) + ( MUR + MUC ) ) ) ) ) ) / Max( ( ( MUR + CS ) * Min( CS ,MUR ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.784001935904206}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( Min( FirstVNF_RAM ,( PN / MRS ) ) ,DDR ) ) ) ) ) - ( Max( ( BR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,Min( FirstVNF_RAM ,MDR ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( MLU - MUR ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,( RRSe * MUM ) ) + DS ) ) )", "obj1": 0.9122448979591836, "obj2": 0.037832974299493935}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( ( MDR + AMS ) ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( CS / CS ) / RMSe ) / ( MLU / CS ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.8693877551020408, "obj2": 0.06868171549080496}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Const ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ) * ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUR * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,( MUM / Min( MUC ,MUR ) ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3142857142857143, "obj2": 0.5976044536053996}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( MUC ,MUR ) ),Max( DS,RRSe ) )", "obj1": 0.5877551020408164, "obj2": 0.26721357523097894}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8552385637973854}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / DDR ) - ( ( MDR / Min( Min( BR ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.02305251505841483}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( Min( ( Const / FirstVNF_CPU ) ,FirstVNF_RAM ) - FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR * CS ) ),( ( MLU / ( MUC / RRSe ) ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5326530612244897, "obj2": 0.33574860682639196}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( CS * RMSe ) ) ) + Max( RRSe,MLU ) )", "obj1": 0.46530612244897956, "obj2": 0.41545511554326503}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_Mem_Server ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.8734693877551021, "obj2": 0.060469957748615424}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / ( ( Min( FirstVNF_Mem_Server ,AMS ) * FirstVNF_Mem ) - PN ) ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,Min( FirstVNF_RAM ,MDR ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( Max( CS,RMSe ) / ( ( CS * MUM ) * ( MUR * RMSe ) ) )", "obj1": 0.9081632653061225, "obj2": 0.04072831220879274}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( Max( MUM,Max( ( ( MLU * RCSe ) / ( MUC * MUR ) ),( RCSe + MUC ) ) ) ,( MUM / CS ) ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.024117286725975615}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + ( MDR / ( ACS * MRS ) ) ),AMS ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * Max( DS,( Min( MLU ,RRSe ) / MUR ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe - MUC ) ) ) ) )", "obj1": 0.9020408163265307, "obj2": 0.04432603190259534}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.46675908430493035}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( MRS - Min( Max( ( RRS * ( ARS + ACS ) ),FirstVNF_CPU_Server ) ,BR ) ) )", "choosing": "( ( Max( CS,( MUR * DS ) ) - Min( ( DS / ( ( RMSe / MUC ) / DS ) ) ,Max( ( ( RMSe + DS ) - MUC ),MUM ) ) ) / ( Min( RMSe ,DS ) * Max( Max( MUC,( RCSe + MUC ) ),MUM ) ) )", "obj1": 0.40816326530612246, "obj2": 0.4692693044378001}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5918367346938775, "obj2": 0.26396174704090825}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,Min( FirstVNF_RAM ,MDR ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) / Min( MUR ,( MUM / CS ) ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03386765136478608}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( MDR / DDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / FirstVNF_Mem ) / Min( MRS ,ARS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Min( RRSe ,( ( RMSe + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8918654089622247}], "18": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "Min( Max( ( ( Const + RRS ) / ( MRS + MDR ) ),( FirstVNF_CPU + RRS ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,MDR ) ,PN ) ) ,DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - ( ( RCSe - RRSe ) / RRSe ) ) ) ) ) - ( ( ( MUM - RMSe ) * ( MLU - MLU ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( Const + RRS ) / ( MRS + MDR ) ),( FirstVNF_CPU + RRS ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,MDR ) ,PN ) ) ,DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - ( ( RCSe - RRSe ) / RRSe ) ) ) ) ) - ( ( ( MUM - RMSe ) * ( MLU - MLU ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( ( FirstVNF_Mem_Server * ( ( DDR - ( AMS / RRS ) ) * FirstVNF_CPU ) ) ,BR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( DS ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,( MUC / ( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( AMS - Const ) + ( Max( FirstVNF_CPU_Server,( ( MRS + ( DDR - ( ( FirstVNF_CPU_Server + RRS ) * Min( RRS ,FirstVNF_RAM ) ) ) ) + PN ) ) - FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + ( ( ( RMSe + ( ( RRSe - ( MUR - Max( RRSe,MLU ) ) ) / DS ) ) / ( RMSe / Min( RCSe ,RCSe ) ) ) * Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.387743718631845}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) * Max( MDR,BR ) ) - ( ( MRS + MRS ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Min( Min( CS ,MUR ) ,( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( ( RRSe * MUC ) ,DS ) * Max( MUM,Max( RRSe,( RCSe + MUC ) ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.3496226599419503}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.2910163677136972}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / Min( Max( CRS,FirstVNF_CPU ) ,( RRS / FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( DS / RMSe ) )", "obj1": 0.5489795918367347, "obj2": 0.31703525513002195}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( ( PN / DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM * Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU * MUC ) + Max( RRSe,( ( Min( CS ,RMSe ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,( ( ( MUM + MUC ) / Min( DS ,MUC ) ) - ( ( ( RRSe - CS ) / ( MLU * DS ) ) + ( ( MUM / RMSe ) * ( MUC / CS ) ) ) ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6328433704984515}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - DDR ),( MDR - MRS ) ) ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( DS + MLU ) / ( MLU / MUC ) ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4349224663033669}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7556893938071786}, {"determining": "( ( FirstVNF_Mem + Max( ACS,Const ) ) / ( ( ARS / FirstVNF_CPU ) * Min( ( FirstVNF_CPU_Server + ( ( RRS * RRS ) - PN ) ) ,BR ) ) )", "choosing": "( ( Min( ( RRSe / MUM ) ,Min( MLU ,( RCSe + RCSe ) ) ) + CS ) / ( MUC * ( DS * ( ( RMSe - MUM ) / MLU ) ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7098202855840406}, {"determining": "( ( Max( BR,( ( MRS + FirstVNF_RAM ) + PN ) ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server - DDR ) / ( MDR + MRS ) ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( Max( ( CS + ( CS - CS ) ),( DS / ( CS * DS ) ) ),RRSe ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.19183673469387755, "obj2": 0.7419546239760167}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.37551020408163266, "obj2": 0.5187317594551327}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7196232470277225}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( ( ( ( CS / CS ) / RMSe ) / Min( MLU ,CS ) ) / ( Min( DS ,MUC ) - Min( Max( RMSe,RMSe ) ,RRSe ) ) ) - Max( ( ( MUM - RMSe ) * ( ( RCSe / MUM ) - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( RRSe ,MUM ) ) + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16394004663598843}, {"determining": "( ( BR + ( ( FirstVNF_Mem_Server - CRS ) - FirstVNF_RAM ) ) - ( Min( BR ,ARS ) + ( ( FirstVNF_RAM_Server - MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( Min( ( ( RCSe * CS ) - ( RMSe + MUC ) ) ,DS ) * ( ( Max( DS,DS ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( MLU ,Min( Max( MLU,CS ) ,( MLU * MUM ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.6755102040816326, "obj2": 0.18217938638464642}, {"determining": "( ( Max( CRS,( ( Max( FirstVNF_CPU_Server,( BR / FirstVNF_Mem ) ) + MDR ) + RRS ) ) - FirstVNF_CPU ) + ( ( FirstVNF_Mem * ACS ) * PN ) )", "choosing": "( ( ( MLU * RCSe ) / Min( MUC ,Max( ( ( RMSe / ( RMSe + Max( DS,RCSe ) ) ) + DS ),( ( Min( RRSe ,Max( RMSe,RMSe ) ) - CS ) * Min( ( MUC * ( MLU + MUM ) ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( RRSe ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.41836734693877553, "obj2": 0.455408266001325}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + ( ( DDR / ACS ) - FirstVNF_CPU ) )", "choosing": "Max( ( Max( ( Max( RRSe,CS ) - ( DS - RCSe ) ),MLU ) / Max( Min( MUR ,RMSe ),( MUM + MLU ) ) ),( Min( ( RMSe / MUM ) ,MLU ) * ( MUR * ( Min( ( RMSe * MUC ) ,MUM ) + MLU ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5038100376401684}, {"determining": "( ( Max( BR,( ( FirstVNF_Mem + FirstVNF_CPU ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( Max( ARS,BR ),RRS ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / ( MDR * MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,( RRSe * CS ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( MLU,MUM ) ) * DS ) ) ) ),( ( MLU / MUC ) + ( RCSe + Min( MLU ,( Max( MLU,CS ) / ( RMSe * MUR ) ) ) ) ) ) / ( Max( ( Max( RMSe,Min( ( ( RCSe - MUC ) * MUC ) ,( ( MUR / RMSe ) * ( DS - MUR ) ) ) ) + CS ),DS ) * ( MUR * RMSe ) ) )", "obj1": 0.2612244897959184, "obj2": 0.6670544197105944}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( RMSe,( CS + DS ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6164532856735305}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) + ( ( MLU * RRSe ) * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.40585943766444865}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Min( ( ARS + RRS ) ,MDR ) * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_RAM ) * FirstVNF_CPU ) * DDR ) ) )", "choosing": "( CS * Min( DS ,( ( MLU / MUR ) + ( ( MUC - RRSe ) + RCSe ) ) ) )", "obj1": 0.6469387755102041, "obj2": 0.21157087277786704}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7931803305604016}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( Max( ( PN - Min( DDR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) / ( MDR - ( FirstVNF_Mem_Server / Const ) ) ) * PN ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( CS - MUR ) * Min( RMSe ,( Max( DS,DS ) * ( Max( MUR,CS ) * MUR ) ) ) ) ),Max( DS,RRSe ) )", "obj1": 0.363265306122449, "obj2": 0.5256820823092603}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7244897959183674, "obj2": 0.137958153995629}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ( RRS * MDR ) ) ) / ( ( ( ( BR / BR ) + ( ARS + FirstVNF_Mem ) ) / ( ( ( ( Const / DDR ) - ( CRS / ACS ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,ACS ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( ( ( RCSe / MUC ) + MUM ) / MUR ) / ( DS - ( MUC * MUC ) ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),MUC ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / BR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( MUM,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5428571428571428, "obj2": 0.3228268823415098}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( ( ( CS / CS ) / RMSe ) / ( MLU / CS ) ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.8326530612244898, "obj2": 0.08514787243447987}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,( Max( CRS,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7020408163265306, "obj2": 0.18082586766634517}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( PN / ( FirstVNF_CPU / BR ) ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8590972101065282}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( Max( MDR,BR ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,( RRSe * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( RRSe - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8185708416224932}, {"determining": "( ( PN - ( AMS * RRS ) ) - MDR )", "choosing": "Max( ( ( CS / ( Max( DS,DS ) / DS ) ) + Min( MUC ,MUR ) ),Max( MUR,CS ) )", "obj1": 0.7755102040816326, "obj2": 0.11285476489801574}, {"determining": "( ( Max( BR,( ( MRS - MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( PN * FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,CS ) - ( ( MUM + MUC ) - CS ) ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.48367346938775513, "obj2": 0.39416040439079775}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( BR ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / ( ( DS - ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) / Max( MUC,( RCSe + MUC ) ) ) ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8408163265306122, "obj2": 0.0804036477724719}, {"determining": "( ( ( ( Const / DDR ) - ( Max( MDR,DDR ) - FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( Min( Max( FirstVNF_CPU,DDR ) ,MDR ) ,( ARS - FirstVNF_Mem ) ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / Min( ( DS - MUC ) ,( CS / MUR ) ) ) - ( Min( ( Max( Max( RCSe,( MUM / MLU ) ),Max( ( MUC + ( CS / RCSe ) ),( MUC / DS ) ) ) / RCSe ) ,Max( Max( RRSe,MLU ),DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.07400370988557062}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( CRS ,( ( Const / DDR ) / CRS ) ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( MLU - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5621677304319113}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.5183673469387755, "obj2": 0.34318675723092}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( MDR / DDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / FirstVNF_Mem ) / Min( MRS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,( ( CS + ( CS - MLU ) ) + RRSe ) ) * ( MUR + CS ) ),( ( MLU / MUC ) + Min( RRSe ,( ( RMSe + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8836933620523669}, {"determining": "( ( Max( BR,( ( MRS + DDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MLU + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6764867299919775}, {"determining": "( PN - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.4326530612244898, "obj2": 0.4457658632371811}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) + ( ( ( AMS / FirstVNF_RAM ) * Min( DDR ,PN ) ) - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( Max( MRS,FirstVNF_RAM_Server ) + CRS ),( DDR - MRS ) ) + FirstVNF_Mem_Server ) * DDR ) ) ) )", "choosing": "( ( ( ( RCSe * Min( ( Min( Min( DS ,MUC ) ,RMSe ) / MLU ) ,CS ) ) / ( MUC - MUR ) ) / ( Min( DS ,MLU ) * ( MUR * RMSe ) ) ) + ( CS / CS ) )", "obj1": 0.6714285714285714, "obj2": 0.1931268446811919}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "( ( ( ( ( RRS / BR ) + Min( FirstVNF_Mem ,MRS ) ) / ( ( ( ( ( CRS / CRS ) / DDR ) - ( ( MDR / FirstVNF_CPU ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) + ( ( Min( CRS ,FirstVNF_CPU ) + ( ACS - PN ) ) - ( RRS * RRS ) ) ) - MDR )", "choosing": "Max( ( ( Max( Max( RRSe,RRSe ),( ( RRSe - MUC ) / ( ( MUM + ( RCSe * RRSe ) ) * ( MUR * Max( MUC,MUC ) ) ) ) ) - ( DS + ( MUR - MUC ) ) ) + ( ( Min( CS ,MLU ) * ( MUR * DS ) ) - ( RRSe * MUM ) ) ),Max( DS,RRSe ) )", "obj1": 0.7857142857142857, "obj2": 0.10434505227134061}, {"determining": "Min( RRS ,( ( ( Const / DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Min( ( Min( AMS ,PN ) + AMS ) ,( CRS + RRS ) ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7183673469387755, "obj2": 0.17645831391698366}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,PN ) ) - ( MDR / DDR ) )", "choosing": "( ( ( Min( RMSe ,CS ) + MUR ) / DS ) / ( ( ( CS - MUR ) / Min( MLU ,Min( Max( MLU,Max( RCSe,MLU ) ) ,RRSe ) ) ) / ( MUM + Max( ( ( CS / DS ) + ( MUC + MUR ) ),Max( DS,RRSe ) ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.0990995550829394}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ),( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,Min( FirstVNF_RAM ,MDR ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / Max( MUM,Max( RRSe,( RCSe + MUC ) ) ) ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) / Min( MUR ,( MUM / CS ) ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.006730091171342908}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5872151273108189}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( FirstVNF_RAM / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + CS ) / ( MLU / MUM ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8290024268462947}, {"determining": "( ( Max( BR,( ( Min( FirstVNF_RAM ,AMS ) + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - CRS ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( Max( ( ( RCSe + RMSe ) / MLU ),( RRSe * MUC ) ) / ( Min( RMSe ,MUR ) / ( MUM + MLU ) ) )", "obj1": 0.4, "obj2": 0.4808132476949144}, {"determining": "( ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( FirstVNF_RAM_Server - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) + ( PN - ( RRS * RRS ) ) ) - MDR )", "choosing": "Max( ( CS + Min( MUC ,MUR ) ),Max( ( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ),RRSe ) )", "obj1": 0.8163265306122449, "obj2": 0.09056883627644721}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + Max( Const,PN ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - ( DS * MLU ) ) )", "obj1": 0.17142857142857143, "obj2": 0.7712459680852349}, {"determining": "( ( Max( BR,( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,MRS ) + PN ) ) - FirstVNF_CPU ) + ( DDR + ARS ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Max( DS,CS ) + Max( DS,MUR ) ) / RMSe ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RMSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RMSe ) ) ) ) ) ) / ( ( CS / MLU ) * ( ( RMSe - ( DS / DS ) ) * RMSe ) ) )", "obj1": 0.2673469387755102, "obj2": 0.6583274521056255}, {"determining": "( ( RRS + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( ( MUC - RRSe ) ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8433164843460299}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5326530612244897, "obj2": 0.33574860682639196}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem + FirstVNF_RAM ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / Max( MUM,Max( MUC,( RCSe + MUC ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.12425439471978215}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( Const / ( ( ( ( Const / DDR ) - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.6060779559379565}, {"determining": "( ( AMS + FirstVNF_CPU_Server ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( CS * ( Max( Min( DS ,RMSe ),( CS + DS ) ) - ( ( DS / ( RCSe / ( DS + Min( ( MUR * MLU ) ,( DS / DS ) ) ) ) ) / DS ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.03163556289126412}, {"determining": "( ( Max( MDR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( ( ( FirstVNF_Mem_Server - ACS ) + FirstVNF_CPU_Server ) / DDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / FirstVNF_Mem ) / Min( MRS ,Const ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( Max( CS,MLU ) + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUC + Max( CS,( RCSe / MUM ) ) ) ) ) ) ) / ( Min( RMSe ,RRSe ) * Max( MUM,Max( ( RCSe + MUC ),( RCSe + MUC ) ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8372876157541156}, {"determining": "( PN - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.463265306122449, "obj2": 0.41946626661394776}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( Min( AMS ,BR ) * ( ( Min( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) ,Max( MDR,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( RRSe - ( MUC + MUR ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,Min( ( Min( MUR ,MLU ) + DS ) ,RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.5755102040816327, "obj2": 0.2841245430265684}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7306122448979592, "obj2": 0.13445975666801818}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.763265306122449, "obj2": 0.11450014364080079}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU / ACS ) ) / ( ( FirstVNF_Mem - MRS ) / Max( ( ( FirstVNF_RAM * DDR ) - Max( MRS,PN ) ),( Min( MDR ,FirstVNF_RAM ) + Min( CRS ,MDR ) ) ) ) )", "choosing": "( Min( Max( DS,MLU ) ,( MUC - Min( RMSe ,RMSe ) ) ) / ( RCSe / Max( MUC,Max( ( RRSe / ( MUR - MUC ) ),CS ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5531032257334516}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ( CRS / BR ) ) ) / ( DDR + ARS ) )", "choosing": "( Max( Max( Min( ( Max( ( DS / RCSe ),Min( MLU ,RRSe ) ) - MUM ) ,RMSe ),Min( Min( CS ,RMSe ) ,MLU ) ),MUR ) / ( ( ( ( MUM / ( Min( CS ,Max( RMSe,MUC ) ) * MUM ) ) / ( MUR + RRSe ) ) * RRSe ) + RCSe ) )", "obj1": 0.3510204081632653, "obj2": 0.5471800836224754}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5734551219295468}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.46675908430493035}, {"determining": "Min( ( ( DDR - MRS ) - ( RRS + FirstVNF_CPU ) ) ,( ( PN + ARS ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM - ( ( ( MUR + ( CS / ( DS - Max( MUM,DS ) ) ) ) / Min( Max( RMSe,MUC ) ,( ( MUR / DS ) - MUR ) ) ) * RMSe ) ),Max( DS,RRSe ) )", "obj1": 0.9693877551020408, "obj2": 0.01501117788751855}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + CS ) / ( MLU / MUM ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6122448979591837, "obj2": 0.2468007606635288}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.5341895771944428}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.6040816326530613, "obj2": 0.2586375972332976}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ACS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC * MUR ) / ( MLU * RCSe ) ) + ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( ( ( CS - MUM ) + DS ) - Max( ( Min( MUM ,RRSe ) + Max( CS,RRSe ) ),Min( RMSe ,MLU ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6088329901482722}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / Max( ARS,FirstVNF_CPU_Server ) ) - ( ( Min( Min( Min( MDR ,AMS ) ,FirstVNF_CPU ) ,PN ) / MDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Max( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ),DS ) ) )", "obj1": 0.8795918367346939, "obj2": 0.055645236573647484}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.6265306122448979, "obj2": 0.23614424643009146}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( BR / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( Max( MUM,Max( ( ( MLU * RCSe ) / ( MUC * MUR ) ),Max( MUM,MUR ) ) ) ,( MUM / CS ) ) ) ) )", "obj1": 0.9408163265306122, "obj2": 0.024718403610184417}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( ( PN - ( ( Min( FirstVNF_RAM_Server ,Const ) / FirstVNF_RAM ) * Const ) ) + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( ( DS - DS ) / RMSe ) ) - ( MUM - Max( ( CS - Min( Min( DS ,DS ) ,MLU ) ),MUC ) ) )", "obj1": 0.6163265306122448, "obj2": 0.24221700191815212}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6497226629297939}, {"determining": "Min( Max( ( Max( FirstVNF_RAM,ARS ) - MRS ),( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( ( Const / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) - ( ( MDR / Min( Min( ( MDR + AMS ) ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.8571428571428571, "obj2": 0.06596569704048327}, {"determining": "( ( Max( ( RRS - MRS ),ACS ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( ( RRSe * ( RCSe * ( MUR * RRSe ) ) ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / DS ) + Min( MUC ,MUR ) ) )", "obj1": 0.6306122448979592, "obj2": 0.22432799678189422}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.4346938775510204, "obj2": 0.44196160631885756}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ,( Min( Max( MRS,RRS ) ,Min( ( FirstVNF_RAM * ACS ) ,PN ) ) / CRS ) ) / DDR ) - ( MDR - BR ) )", "choosing": "( ( Max( RCSe,MLU ) / ( ( DS * MLU ) + Max( CS,( Max( MUC,Max( DS,CS ) ) + Min( RMSe ,( Min( RCSe ,MUC ) * DS ) ) ) ) ) ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MLU ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7750288077395031}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( ( ACS * ( ( AMS + RRS ) / PN ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MLU ,( ( DS + CS ) / ( ( MUM / MUR ) - Max( RCSe,RMSe ) ) ) ) / ( MUR * RMSe ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0006276619887356751}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5982407230031886}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.008906233302803946}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.2740791529718585}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2793581807934741}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( FirstVNF_Mem_Server - Min( Max( FirstVNF_Mem_Server,BR ) ,AMS ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * ( Min( RMSe ,CS ) * ( Max( Max( DS,RCSe ),MUM ) - RRSe ) ) ) * Max( RCSe,RRSe ) )", "obj1": 0.6612244897959184, "obj2": 0.19705308197211172}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8552385637973854}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( CS * RMSe ) ) ) + Max( RRSe,MLU ) )", "obj1": 0.46530612244897956, "obj2": 0.41545511554326503}, {"determining": "( PN - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.463265306122449, "obj2": 0.41946626661394776}, {"determining": "( ( ( Max( ( Max( ( PN * CRS ),CRS ) * DDR ),( FirstVNF_CPU + RRS ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server / PN ) ) ) / DDR ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUR / ( ( Max( MUC,( MUM / MUC ) ) + ( ( MUC - RRSe ) / Min( MUC ,RCSe ) ) ) * ( ( Min( DS ,DS ) - CS ) / ( ( MLU - DS ) + ( MUR + MUC ) ) ) ) ) ) / Max( ( ( MUR + CS ) * Min( CS ,MUR ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.784001935904206}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5326530612244897, "obj2": 0.33574860682639196}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.6020408163265306, "obj2": 0.259502143404907}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( Max( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + ( MDR / ( ACS * MRS ) ) ),AMS ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * Max( DS,( Min( MLU ,RRSe ) / MUR ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe - MUC ) ) ) ) )", "obj1": 0.9020408163265307, "obj2": 0.04432603190259534}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_Mem_Server ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8918367346938776, "obj2": 0.048287529345567105}], "19": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( ( Max( Max( ( Min( PN ,ACS ) * ACS ),BR ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) - ( MDR + ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( MDR - CRS ) ) ) )", "choosing": "( CS * Max( ( ( RRSe / RMSe ) * MUC ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( Const + RRS ) / ( MRS + MDR ) ),( FirstVNF_CPU + RRS ) ) ,( ( Min( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,MDR ) ,PN ) ) ,DDR ) - ( ( MDR / Min( ( FirstVNF_CPU + ( MDR / DDR ) ) ,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - ( ( RCSe - RRSe ) / RRSe ) ) ) ) ) - ( ( ( MUM - RMSe ) * ( MLU - MLU ) ) * Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( ( FirstVNF_Mem_Server * ( ( DDR - ( AMS / RRS ) ) * FirstVNF_CPU ) ) ,BR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( DS ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,( MUC / ( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) - Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,( Max( CRS,RRS ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.710204081632653, "obj2": 0.17509368607298445}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem + FirstVNF_RAM ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7183673469387755, "obj2": 0.14235684489086434}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,RMSe ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7931803305604016}, {"determining": "( ( FirstVNF_Mem + Max( ACS,Const ) ) / ( ( ARS / FirstVNF_CPU ) * Min( ( FirstVNF_CPU_Server + ( ( RRS * RRS ) - PN ) ) ,BR ) ) )", "choosing": "( ( Min( ( RRSe / MUM ) ,Min( MLU ,( RCSe + RCSe ) ) ) + CS ) / ( MUC * ( DS * ( ( RMSe - MUM ) / MLU ) ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7098202855840406}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( MDR * Min( ( CRS + Max( DDR,MDR ) ) ,MDR ) ) ) / ( ( ( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_CPU ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - ( CS + MUC ) ) * Min( MLU ,Min( ( MLU - CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5163265306122449, "obj2": 0.3493497676451466}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7196232470277225}, {"determining": "( ( RRS + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( ( MUC - RRSe ) ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8433164843460299}, {"determining": "( ( Max( BR,( ( MRS - MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( PN * FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,CS ) - ( ( MUM + MUC ) - CS ) ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.48367346938775513, "obj2": 0.39416040439079775}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.37551020408163266, "obj2": 0.5187317594551327}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6816326530612244, "obj2": 0.18070804710344465}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( AMS - Const ) + ( Max( FirstVNF_CPU_Server,( ( MRS + ( DDR - ( ( FirstVNF_CPU_Server + RRS ) * Min( RRS ,FirstVNF_RAM ) ) ) ) + PN ) ) - FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + ( ( ( RMSe + ( ( RRSe - ( MUR - Max( RRSe,MLU ) ) ) / DS ) ) / ( RMSe / Min( RCSe ,RCSe ) ) ) * Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.387743718631845}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8185708416224932}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) + ( ( MLU * RRSe ) * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.40585943766444865}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7556893938071786}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( BR ,BR ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / ( ( DS - ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) / Max( MUC,( RCSe + MUC ) ) ) ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8408163265306122, "obj2": 0.0804036477724719}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - DDR ),( MDR - MRS ) ) ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( DS + MLU ) / ( MLU / MUC ) ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4349224663033669}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.29666723475546736}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / Min( Max( CRS,FirstVNF_CPU ) ,( RRS / FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( DS / RMSe ) )", "obj1": 0.45918367346938777, "obj2": 0.4251680520429881}, {"determining": "( ( Max( BR,( ( Min( FirstVNF_RAM ,AMS ) + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - CRS ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( Max( ( ( RCSe + RMSe ) / MLU ),( RRSe * MUC ) ) / ( Min( RMSe ,MUR ) / ( MUM + MLU ) ) )", "obj1": 0.4, "obj2": 0.4808132476949144}, {"determining": "( ( Max( CRS,( ( Max( FirstVNF_CPU_Server,( BR / FirstVNF_Mem ) ) + MDR ) + RRS ) ) - FirstVNF_CPU ) + ( ( FirstVNF_Mem * ACS ) * PN ) )", "choosing": "( ( ( MLU * RCSe ) / Min( MUC ,Max( ( ( RMSe / ( RMSe + Max( DS,RCSe ) ) ) + DS ),( ( Min( RRSe ,Max( RMSe,RMSe ) ) - CS ) * Min( ( MUC * ( MLU + MUM ) ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( RRSe ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.41836734693877553, "obj2": 0.455408266001325}, {"determining": "( ( Max( MDR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( ( ( FirstVNF_Mem_Server - ACS ) + FirstVNF_CPU_Server ) / DDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / FirstVNF_Mem ) / Min( MRS ,Const ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( Max( CS,MLU ) + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUC + Max( CS,( RCSe / MUM ) ) ) ) ) ) ) / ( Min( RMSe ,RRSe ) * Max( MUM,Max( ( RCSe + MUC ),( RCSe + MUC ) ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8372876157541156}, {"determining": "( ( ( Max( ( Max( ( PN * CRS ),CRS ) * DDR ),( FirstVNF_CPU + RRS ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server / PN ) ) ) / DDR ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUR / ( ( Max( MUC,( MUM / MUC ) ) + ( ( MUC - RRSe ) / Min( MUC ,RCSe ) ) ) * ( ( Min( DS ,DS ) - CS ) / ( ( MLU - DS ) + ( MUR + MUC ) ) ) ) ) ) / Max( ( ( MUR + CS ) * Min( CS ,MUR ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.784001935904206}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Min( RMSe ,CS ) / RMSe ) / ( RMSe / CS ) ) ),( CS + ( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) ) ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8244897959183674, "obj2": 0.08273226877834584}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( Min( AMS ,BR ) * ( ( Min( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) ,Max( MDR,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( RRSe - ( MUC + MUR ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,Min( ( Min( MUR ,MLU ) + DS ) ,RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.5, "obj2": 0.3699535371343259}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( FirstVNF_Mem_Server - Min( Max( FirstVNF_Mem_Server,BR ) ,AMS ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * ( Min( RMSe ,CS ) * ( Max( Max( DS,RCSe ),MUM ) - RRSe ) ) ) * Max( RCSe,RRSe ) )", "obj1": 0.6612244897959184, "obj2": 0.19705308197211172}, {"determining": "Min( ( ( DDR - MRS ) - ( RRS + FirstVNF_CPU ) ) ,( ( PN + ARS ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM - ( ( ( MUR + ( CS / ( DS - Max( MUM,DS ) ) ) ) / Min( Max( RMSe,MUC ) ,( ( MUR / DS ) - MUR ) ) ) * RMSe ) ),Max( DS,RRSe ) )", "obj1": 0.9693877551020408, "obj2": 0.01501117788751855}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( PN / ( FirstVNF_CPU / BR ) ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8590972101065282}, {"determining": "( ( PN + MRS ) - Min( FirstVNF_CPU ,( FirstVNF_CPU - RRS ) ) )", "choosing": "( ( ( ( Max( ( DS / ( MLU + ( MUR - DS ) ) ),( ( Min( MUM ,CS ) + ( RCSe / RCSe ) ) + ( ( MUM + DS ) * MUR ) ) ) - ( ( Min( MUC ,Max( RCSe,MUC ) ) - RMSe ) / ( ( Min( MUM ,MLU ) - CS ) + MLU ) ) ) - Max( MUC,( DS + RMSe ) ) ) / DS ) / ( Min( MUR ,RMSe ) + ( MUM + MLU ) ) )", "obj1": 0.5510204081632653, "obj2": 0.3105438391752649}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ( RRS * MDR ) ) ) / ( ( ( ( BR / BR ) + ( ARS + FirstVNF_Mem ) ) / ( ( ( ( Const / DDR ) - ( CRS / ACS ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,ACS ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( MUR / ( ( ( ( RCSe / MUC ) + MUM ) / MUR ) / ( DS - ( MUC * MUC ) ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),MUC ) ) )", "obj1": 0.3979591836734694, "obj2": 0.5004476582865142}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU / ACS ) ) / ( ( FirstVNF_Mem - MRS ) / Max( ( ( FirstVNF_RAM * DDR ) - Max( MRS,PN ) ),( Min( MDR ,FirstVNF_RAM ) + Min( CRS ,MDR ) ) ) ) )", "choosing": "( Min( Max( DS,MLU ) ,( MUC - Min( RMSe ,RMSe ) ) ) / ( RCSe / Max( MUC,Max( ( RRSe / ( MUR - MUC ) ),CS ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5531032257334516}, {"determining": "( ( ( Min( Max( ( Const / FirstVNF_CPU_Server ),( FirstVNF_CPU + RRS ) ) ,( ( ( ( PN * ARS ) + ( CRS - MDR ) ) + FirstVNF_RAM ) * ( PN / Min( ( CRS / DDR ) ,ACS ) ) ) ) / DDR ) - Max( MDR,BR ) ) - Min( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) ,Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MUR / ( RRSe + RCSe ) ) ,MLU ) / DS ) / ( Min( ( ( CS + ( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( ( ( Max( ( MUM * CS ),( RMSe / DS ) ) - ( RCSe * CS ) ) / ( MUM * MLU ) ),DS ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.037695894294691924}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + ( CS - CS ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.46675908430493035}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + ( ( DDR / ACS ) - FirstVNF_CPU ) )", "choosing": "Max( ( Max( ( Max( RRSe,CS ) - ( DS - RCSe ) ),MLU ) / Max( Min( MUR ,RMSe ),( MUM + MLU ) ) ),( Min( ( RMSe / MUM ) ,MLU ) * ( MUR * ( Min( ( RMSe * MUC ) ,MUM ) + MLU ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5038100376401684}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + Const ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( Min( MUR ,RMSe ) ,RMSe ) / MUR ) )", "obj1": 0.9, "obj2": 0.042917498838831225}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( Min( AMS ,BR ) * ( ( Min( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) ,Max( MDR,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( RRSe - ( MUC + MUR ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,Min( ( Min( MUR ,MLU ) + DS ) ,RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.5, "obj2": 0.3699535371343259}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Min( RMSe ,CS ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6510204081632653, "obj2": 0.20658309321164992}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,CS ) ) ) - Max( RMSe,( CS + DS ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.6261153281353798}, {"determining": "( ( Max( BR,( ( MRS + DDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.6694613470276508}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,PN ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7775510204081633, "obj2": 0.10809714848498722}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( RMSe,( CS + DS ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6164532856735305}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( RRS + FirstVNF_RAM ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( MUM + MLU ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / Max( MUM,Max( MUC,( RCSe + MUC ) ) ) )", "obj1": 0.763265306122449, "obj2": 0.11016979265473388}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.5341895771944428}, {"determining": "( ( AMS + FirstVNF_CPU_Server ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( CS * ( Max( Min( DS ,RMSe ),( CS + DS ) ) - ( ( DS / ( RCSe / ( DS + Min( ( MUR * MLU ) ,( DS / DS ) ) ) ) ) / DS ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( ( ( Const / DDR ) - ( Max( MDR,DDR ) - FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( Min( Max( FirstVNF_CPU,DDR ) ,MDR ) ,( ARS - FirstVNF_Mem ) ) ) ) ) ) - ( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / Min( ( DS - MUC ) ,( CS / MUR ) ) ) - ( Min( ( Max( Max( RCSe,( MUM / MLU ) ),Max( ( MUC + ( CS / RCSe ) ),( MUC / DS ) ) ) / RCSe ) ,Max( Max( RRSe,MLU ),DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.07400370988557062}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem + FirstVNF_RAM ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / Max( MUM,Max( MUC,( RCSe + MUC ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.12425439471978215}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( ( FirstVNF_RAM + DDR ) ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( RMSe + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5183673469387755, "obj2": 0.3416854031128157}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU + RRS ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.2679347607330049}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( ( ( RCSe * MUC ) + MUM ) / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,RMSe ) ,MLU ) ),MUC ) ) )", "obj1": 0.40816326530612246, "obj2": 0.4751233730784568}, {"determining": "( ( ( ( ( RRS / BR ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM_Server - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) + ( PN - ( RRS * RRS ) ) ) - MDR )", "choosing": "Max( ( CS + Min( MUC ,MUR ) ),Max( ( ( MLU / MUC ) + Max( RRSe,( ( ( DS / RMSe ) / ( RMSe / ( MLU - RCSe ) ) ) + RRSe ) ) ),RRSe ) )", "obj1": 0.8, "obj2": 0.0963311057199094}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_Mem_Server ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.8673469387755102, "obj2": 0.06477763277213093}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * MRS ) * Min( FirstVNF_CPU_Server ,MRS ) ) ) + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,Min( Const ,CRS ) ) ) ) - Max( MDR,BR ) )", "choosing": "Max( ( Min( Min( ( Max( MUM,MUR ) * MUR ) ,MUC ) ,( ( RMSe * Max( ( MLU - RCSe ),RMSe ) ) + ( ( RMSe * ( Max( MUC,DS ) / MUC ) ) * ( Max( Max( MUM,CS ),MUR ) - MLU ) ) ) ) * ( MUR * ( Min( ( RMSe * MUC ) ,MUM ) + MLU ) ) ),( ( Min( Min( RMSe ,MUM ) ,RMSe ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) ) )", "obj1": 0.7306122448979592, "obj2": 0.13356200746209615}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.3510204081632653, "obj2": 0.5403677713899145}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( MDR - MRS ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + Min( RMSe ,DS ) ) ) ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8907630840883087}, {"determining": "( ( Max( BR,( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,MRS ) + PN ) ) - FirstVNF_CPU ) + ( DDR + ARS ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Max( DS,CS ) + Max( DS,MUR ) ) / RMSe ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RMSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RMSe ) ) ) ) ) ) / ( ( CS / MLU ) * ( ( RMSe - ( DS / DS ) ) * RMSe ) ) )", "obj1": 0.2673469387755102, "obj2": 0.6583274521056255}, {"determining": "( ( Max( BR,( ( MRS + FirstVNF_RAM ) + PN ) ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server - DDR ) / ( MDR + MRS ) ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( Max( ( CS + ( CS - CS ) ),( DS / ( CS * DS ) ) ),RRSe ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.19183673469387755, "obj2": 0.7419546239760167}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( FirstVNF_Mem / Min( MRS ,MDR ) ) ) / DDR ) - Max( MRS,MDR ) ) - ( Const + ACS ) )", "choosing": "( ( ( MUR + MUR ) / DS ) / ( Min( ( Min( Max( ( RMSe / CS ),( RMSe / DS ) ) ,CS ) / ( RMSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.019855217012430645}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5734551219295468}, {"determining": "( ( Min( Max( Min( DDR ,MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( ( Max( MRS,PN ) / ( MDR - MRS ) ) * PN ) + ( DDR - FirstVNF_CPU ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( RMSe + DS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,Min( MUC ,MUM ) ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.44613201128101987}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( Max( ( PN - Min( DDR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) / ( MDR - ( FirstVNF_Mem_Server / Const ) ) ) * PN ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( CS - MUR ) * Min( RMSe ,( Max( DS,DS ) * ( Max( MUR,CS ) * MUR ) ) ) ) ),Max( DS,RRSe ) )", "obj1": 0.363265306122449, "obj2": 0.5256820823092603}, {"determining": "( ( Max( Max( ARS,Const ),( ( MRS + DDR ) + PN ) ) - FirstVNF_CPU ) + ( PN * ( ( FirstVNF_RAM_Server - DDR ) / ( MRS - MRS ) ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( ( MUC - ( ( DS + RMSe ) - CS ) ) / MUC ) + Max( RRSe,( MLU + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( MUC + DS ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.6622071131409435}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / Min( Max( CRS,FirstVNF_CPU ) ,( RRS / FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.5408163265306123, "obj2": 0.32475840817244045}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / Max( ARS,FirstVNF_CPU_Server ) ) - ( ( Min( Min( Min( MDR ,AMS ) ,FirstVNF_CPU ) ,PN ) / MDR ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUC * MUC ),DS ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Max( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ),DS ) ) )", "obj1": 0.8795918367346939, "obj2": 0.055645236573647484}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( BR + ( ( FirstVNF_Mem_Server - CRS ) - FirstVNF_RAM ) ) - ( Min( BR ,ARS ) + ( ( FirstVNF_RAM_Server - MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( Min( ( ( RCSe * CS ) - ( RMSe + MUC ) ) ,DS ) * ( ( Max( DS,DS ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( MLU ,Min( Max( MLU,CS ) ,( MLU * MUM ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.6755102040816326, "obj2": 0.18217938638464642}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - ( ( Min( DDR ,DDR ) - ( ( ( CRS + FirstVNF_Mem_Server ) / ARS ) - ACS ) ) * PN ) ) - ( DDR / MDR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ),( Min( ( ( Max( ( CS / RRSe ),RCSe ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.7877551020408163, "obj2": 0.10043845557497312}, {"determining": "( ( ( BR - Min( MDR ,( MRS + Const ) ) ) - FirstVNF_CPU ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + AMS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * Max( ( DDR - MRS ),( ( CRS - FirstVNF_RAM ) * ( CRS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / ( ( Min( CS ,MUR ) * ( MUR + CS ) ) + Max( DS,MUR ) ) ) + DS ),( ( MUM - RCSe ) * Min( ( CS + RMSe ) ,Min( RRSe ,( MLU * MUM ) ) ) ) ) / ( Min( DS ,RMSe ) * Max( ( ( MUM - ( MUC + ( MUR * MUR ) ) ) / Max( MUR,RRSe ) ),Max( MUC,( MUR / MLU ) ) ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5806119605731871}, {"determining": "( ( Max( BR,( ( ( FirstVNF_RAM * RRS ) + FirstVNF_RAM ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MRS - MDR ) ) * PN ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Max( RRSe,( ( CS + ( CS - CS ) ) + RCSe ) ) + ( MLU / ( ( Max( RCSe,RCSe ) + ( MUC / RRSe ) ) / ( MUM + MLU ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.19183673469387755, "obj2": 0.7419546239760167}, {"determining": "( ( PN - ( ( ( Max( ( PN - Min( DDR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) / ( MDR - FirstVNF_Mem ) ) * PN ) * RRS ) ) - MDR )", "choosing": "Max( ( ( CS / ( CS / DS ) ) + Min( MUC ,MUR ) ),Max( MUR,CS ) )", "obj1": 0.8061224489795918, "obj2": 0.0923921011424101}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.762632979454077}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ),( CRS / RRS ) ) ) ) - ( Max( ( DDR - Min( ( ( ARS + RRS ) / ( FirstVNF_CPU - PN ) ) ,Min( FirstVNF_RAM ,MDR ) ) ),( FirstVNF_CPU + PN ) ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / Max( MUM,Max( RRSe,( RCSe + MUC ) ) ) ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) / Min( MUR ,( MUM / Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0025106479549427004}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( CRS ,( ( Const / DDR ) / CRS ) ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( MLU - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.33877551020408164, "obj2": 0.5664230015961894}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) - ( ( MDR / Min( Min( ( MDR + AMS ) ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ) - Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),( Min( ( ( MUC / ( RRSe / RCSe ) ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.8775510204081632, "obj2": 0.060079327194898155}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( ( Const + FirstVNF_Mem_Server ) / DDR ) ) ) + ( DDR - ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MLU ,RMSe ) / ( MUM + Max( MUM,RRSe ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5960390535543619}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) + ( ( ( AMS / FirstVNF_RAM ) * Min( DDR ,PN ) ) - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( Max( MRS,FirstVNF_RAM_Server ) + CRS ),( DDR - MRS ) ) + FirstVNF_Mem_Server ) * DDR ) ) ) )", "choosing": "( ( ( ( RCSe * Min( ( Min( Min( DS ,MUC ) ,RMSe ) / MLU ) ,CS ) ) / ( MUC - MUR ) ) / ( Min( DS ,MLU ) * ( MUR * RMSe ) ) ) + ( CS / CS ) )", "obj1": 0.6714285714285714, "obj2": 0.1931268446811919}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.6265306122448979, "obj2": 0.23614424643009146}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( FirstVNF_RAM / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + CS ) / ( MLU / MUM ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8290024268462947}, {"determining": "( ( Max( BR,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,FirstVNF_Mem_Server ) ) - Min( BR ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,MUR ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6497226629297939}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.3370430487577647}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( MRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( ( ( Max( ( Min( ARS ,FirstVNF_RAM_Server ) + CRS ),CRS ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( ( ( DS - MUC ) / ( ( ( RCSe * MUC ) + MUM ) / MUR ) ) * MUR ) - ( MUM - Max( ( CS - Min( Min( DS ,Min( DS ,( DS / RRSe ) ) ) ,MLU ) ),MUC ) ) )", "obj1": 0.6081632653061224, "obj2": 0.25172413375005226}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( CS * RMSe ) ) ) + Max( RRSe,MLU ) )", "obj1": 0.46530612244897956, "obj2": 0.41545511554326503}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.2910163677136972}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ) - ( ( Min( FirstVNF_Mem_Server ,AMS ) * FirstVNF_Mem ) - PN ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.04922573527289992}, {"determining": "( ( Max( ( RRS - MRS ),ACS ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( ( RRSe * ( RCSe * ( MUR * RRSe ) ) ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / DS ) + Min( MUC ,MUR ) ) )", "obj1": 0.6306122448979592, "obj2": 0.22432799678189422}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Min( ( ARS + RRS ) ,MDR ) * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_RAM ) * FirstVNF_CPU ) * DDR ) ) )", "choosing": "( CS * Min( DS ,( ( MLU / MUR ) + ( ( MUC - RRSe ) + RCSe ) ) ) )", "obj1": 0.6469387755102041, "obj2": 0.21157087277786704}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3653061224489796, "obj2": 0.5229850982289161}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ,( Min( Max( MRS,RRS ) ,Min( ( FirstVNF_RAM * ACS ) ,PN ) ) / CRS ) ) / DDR ) - ( MDR - BR ) )", "choosing": "( ( Max( RCSe,MLU ) / ( ( DS * MLU ) + Max( CS,( Max( MUC,Max( DS,CS ) ) + Min( RMSe ,( Min( RCSe ,MUC ) * DS ) ) ) ) ) ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MLU ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7750288077395031}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.008906233302803946}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.12121747913712062}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2793581807934741}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - Max( ( DDR / PN ),ARS ) )", "choosing": "( ( Max( ( Min( ( Min( MUM ,MLU ) - MUR ) ,RRSe ) - RCSe ),RMSe ) / Max( ( Max( RRSe,( RRSe + ( MUR - Min( CS ,MLU ) ) ) ) + ( MLU / MUC ) ),( Min( CS ,MUR ) * ( MUR / ( ( DS * CS ) / ( CS / MUR ) ) ) ) ) ) / ( CS / CS ) )", "obj1": 0.7551020408163265, "obj2": 0.11815819952191906}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ACS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC * MUR ) / ( MLU * RCSe ) ) + ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( ( ( CS - MUM ) + DS ) - Max( ( Min( MUM ,RRSe ) + Max( CS,RRSe ) ),Min( RMSe ,MLU ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6088329901482722}], "20": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ),( CRS / RRS ) ) ) ) - ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) )", "choosing": "( ( MUR / ( ( Min( RMSe ,DS ) - MUC ) / ( CS / Max( MUM,Max( RRSe,( RCSe + MUC ) ) ) ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) / Min( MUR ,( MUM / Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ( Min( PN ,ACS ) * ACS ),BR ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) - ( MDR + ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( MDR - CRS ) ) ) )", "choosing": "( CS * Max( ( ( RRSe / RMSe ) * MUC ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( ( FirstVNF_Mem_Server * ( ( DDR - ( AMS / RRS ) ) * FirstVNF_CPU ) ) ,BR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( DS ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,( MUC / ( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( Max( ( RRS - Const ),( FirstVNF_RAM_Server - ACS ) ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( Max( RCSe,RCSe ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / MUC ) + Min( MUC ,MUR ) ) )", "obj1": 0.3877551020408163, "obj2": 0.46203579554427116}, {"determining": "( ( BR + ( PN - ( AMS * MRS ) ) ) - ( MDR + ( Min( Min( Min( AMS ,PN ) ,AMS ) ,( ( BR + CRS ) + ( ACS - FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM ,MDR ) ) ) )", "choosing": "( ( MUR / ( ( RCSe / RMSe ) + ( MLU * RMSe ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) * Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.710204081632653, "obj2": 0.15652517666176524}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3816326530612245, "obj2": 0.508956727281771}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( CRS / Min( Min( Max( FirstVNF_CPU,DDR ) ,MDR ) ,BR ) ) / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( RRSe,MLU ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.032257285239252795}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - ( BR / FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.9551020408163265, "obj2": 0.017311730866469748}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6816326530612244, "obj2": 0.18070804710344465}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( PN / ( FirstVNF_CPU / BR ) ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8590972101065282}, {"determining": "( ( Max( CRS,( ( Max( FirstVNF_CPU_Server,( BR / FirstVNF_Mem ) ) + MDR ) + RRS ) ) - FirstVNF_CPU ) + ( ( FirstVNF_Mem * ACS ) * PN ) )", "choosing": "( ( ( MLU * RCSe ) / Min( MUC ,Max( ( ( RMSe / ( RMSe + Max( DS,RCSe ) ) ) + DS ),( ( Min( RRSe ,Max( RMSe,RMSe ) ) - CS ) * Min( ( MUC * ( MLU + MUM ) ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( RRSe ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.41836734693877553, "obj2": 0.455408266001325}, {"determining": "( ( RRS + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( ( MUC - RRSe ) ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8433164843460299}, {"determining": "( ( Max( BR,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,FirstVNF_Mem_Server ) ) - Min( BR ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,MUR ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - DDR ),( MDR - MRS ) ) ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( DS + MLU ) / ( MLU / MUC ) ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4349224663033669}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( MRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( ( ( Max( ( Min( ARS ,FirstVNF_RAM_Server ) + CRS ),CRS ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( ( ( DS - MUC ) / ( ( ( RCSe * MUC ) + MUM ) / MUR ) ) * MUR ) - ( MUM - Max( ( CS - Min( Min( DS ,Min( DS ,( DS / RRSe ) ) ) ,MLU ) ),MUC ) ) )", "obj1": 0.6081632653061224, "obj2": 0.25172413375005226}, {"determining": "( ( AMS - Const ) + ( Max( FirstVNF_CPU_Server,( ( MRS + ( DDR - ( ( FirstVNF_CPU_Server + RRS ) * Min( RRS ,FirstVNF_RAM ) ) ) ) + PN ) ) - FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + ( ( ( RMSe + ( ( RRSe - ( MUR - Max( RRSe,MLU ) ) ) / DS ) ) / ( RMSe / Min( RCSe ,RCSe ) ) ) * Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.387743718631845}, {"determining": "( ( ( Min( Max( ( Const / FirstVNF_CPU_Server ),( FirstVNF_CPU + RRS ) ) ,( ( ( ( PN * ARS ) + ( CRS - MDR ) ) + FirstVNF_RAM ) * ( PN / Min( ( CRS / DDR ) ,ACS ) ) ) ) / DDR ) - Max( MDR,BR ) ) - Min( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) ,Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MUR / ( RRSe + RCSe ) ) ,MLU ) / DS ) / ( Min( ( ( CS + ( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( ( ( Max( ( MUM * CS ),( RMSe / DS ) ) - ( RCSe * CS ) ) / ( MUM * MLU ) ),DS ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.037695894294691924}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7196232470277225}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( BR,( FirstVNF_Mem - AMS ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( CS / RMSe ) ) - ( CS * Min( Min( Min( Min( MUM ,RMSe ) ,( RRSe + MLU ) ) ,MUR ) ,DS ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7931803305604016}, {"determining": "( ( ( BR - Min( MDR ,( MRS + Const ) ) ) - FirstVNF_CPU ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + AMS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * Max( ( DDR - MRS ),( ( CRS - FirstVNF_RAM ) * ( CRS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / ( ( Min( CS ,MUR ) * ( MUR + CS ) ) + Max( DS,MUR ) ) ) + DS ),( ( MUM - RCSe ) * Min( ( CS + RMSe ) ,Min( RRSe ,( MLU * MUM ) ) ) ) ) / ( Min( DS ,RMSe ) * Max( ( ( MUM - ( MUC + ( MUR * MUR ) ) ) / Max( MUR,RRSe ) ),Max( MUC,( MUR / MLU ) ) ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5806119605731871}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( ( Const + FirstVNF_Mem_Server ) / DDR ) ) ) + ( DDR - ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MLU ,RMSe ) / ( MUM + Max( MUM,RRSe ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5960390535543619}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( MDR * Min( ( CRS + Max( DDR,MDR ) ) ,MDR ) ) ) / ( ( ( Min( Max( ( DDR - MRS ),( RRS + FirstVNF_CPU ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - ( CS + MUC ) ) * Min( MLU ,Min( ( MLU - CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5163265306122449, "obj2": 0.3493497676451466}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6497226629297939}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( BR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( Min( FirstVNF_Mem ,CRS ) / DDR ) )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( Min( CS ,MUR ) * ( MUR / ( ( DS - CS ) / ( CS / MUR ) ) ) ),( ( MLU / MUC ) + ( ( ( MUM / ( MUM - MLU ) ) - ( ( RMSe * RCSe ) / MUM ) ) + Min( CS ,MLU ) ) ) ) ) / ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,DS ) ) )", "obj1": 0.8387755102040816, "obj2": 0.07203818177978817}, {"determining": "( ( Max( MDR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( ( ( FirstVNF_Mem_Server - ACS ) + FirstVNF_CPU_Server ) / DDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / FirstVNF_Mem ) / Min( MRS ,Const ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( Max( CS,MLU ) + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUC + Max( CS,( RCSe / MUM ) ) ) ) ) ) ) / ( Min( RMSe ,RRSe ) * Max( MUM,Max( ( RCSe + MUC ),( RCSe + MUC ) ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8372876157541156}, {"determining": "( ( ( Max( ( Max( ( PN * CRS ),CRS ) * DDR ),( FirstVNF_CPU + RRS ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server / PN ) ) ) / DDR ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUR / ( ( Max( MUC,( MUM / MUC ) ) + ( ( MUC - RRSe ) / Min( MUC ,RCSe ) ) ) * ( ( Min( DS ,DS ) - CS ) / ( ( MLU - DS ) + ( MUR + MUC ) ) ) ) ) ) / Max( ( ( MUR + CS ) * Min( CS ,MUR ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.784001935904206}, {"determining": "( ( Max( BR,( ( MRS + DDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.6694613470276508}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe / ( Max( ( ( RRSe * ( RCSe * ( MUR * RRSe ) ) ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / DS ) + Min( MUC ,MUR ) ) )", "obj1": 0.5918367346938775, "obj2": 0.2631886043911433}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( FirstVNF_CPU_Server + CRS ) * ( ( Max( ( FirstVNF_CPU + RRS ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( Max( RCSe,MLU ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.3629907270929825}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7556893938071786}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8185708416224932}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ACS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC * MUR ) / ( MLU * RCSe ) ) + ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( ( ( CS - MUM ) + DS ) - Max( ( Min( MUM ,RRSe ) + Max( CS,RRSe ) ),Min( RMSe ,MLU ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6088329901482722}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( FirstVNF_RAM / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + CS ) / ( MLU / MUM ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8290024268462947}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( Min( AMS ,PN ) / ( Const / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.37551020408163266, "obj2": 0.5187317594551327}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ,( Min( Max( MRS,RRS ) ,Min( ( FirstVNF_RAM * ACS ) ,PN ) ) / CRS ) ) / DDR ) - ( MDR - BR ) )", "choosing": "( ( Max( RCSe,MLU ) / ( ( DS * MLU ) + Max( CS,( Max( MUC,Max( DS,CS ) ) + Min( RMSe ,( Min( RCSe ,MUC ) * DS ) ) ) ) ) ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MLU ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7750288077395031}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Min( RMSe ,CS ) / RMSe ) / ( RMSe / CS ) ) ),( CS + ( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) ) ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8244897959183674, "obj2": 0.08273226877834584}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) + ( ( ( AMS / FirstVNF_RAM ) * Min( DDR ,PN ) ) - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( Max( MRS,FirstVNF_RAM_Server ) + CRS ),( DDR - MRS ) ) + FirstVNF_Mem_Server ) * DDR ) ) ) )", "choosing": "( ( ( ( RCSe * Min( ( Min( Min( DS ,MUC ) ,RMSe ) / MLU ) ,CS ) ) / ( MUC - MUR ) ) / ( Min( DS ,MLU ) * ( MUR * RMSe ) ) ) + ( CS / CS ) )", "obj1": 0.6714285714285714, "obj2": 0.1931268446811919}, {"determining": "( ( FirstVNF_Mem + Max( ACS,Const ) ) / ( ( ARS / FirstVNF_CPU ) * Min( ( FirstVNF_CPU_Server + ( ( RRS * RRS ) - PN ) ) ,BR ) ) )", "choosing": "( ( Min( ( RRSe / MUM ) ,Min( MLU ,( RCSe + RCSe ) ) ) + CS ) / ( MUC * ( DS * ( ( RMSe - MUM ) / MLU ) ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7098202855840406}, {"determining": "( ( Max( BR,( ( MRS - MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( PN * FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( RCSe,( ( Min( Max( RMSe,RMSe ) ,CS ) - ( ( MUM + MUC ) - CS ) ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.48367346938775513, "obj2": 0.39416040439079775}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU / ACS ) ) / ( ( FirstVNF_Mem - MRS ) / Max( ( ( FirstVNF_RAM * DDR ) - Max( MRS,PN ) ),( Min( MDR ,FirstVNF_RAM ) + Min( CRS ,MDR ) ) ) ) )", "choosing": "( Min( Max( DS,MLU ) ,( MUC - Min( RMSe ,RMSe ) ) ) / ( RCSe / Max( MUC,Max( ( RRSe / ( MUR - MUC ) ),CS ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5531032257334516}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server + MDR ) ) * PN ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUC * MUM ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,Min( Max( CS,DS ) ,( MLU - MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.18979591836734694, "obj2": 0.747135897132749}, {"determining": "( ( Min( Max( ( DDR - MRS ),Max( BR,( ( MRS + DDR ) + PN ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.45714285714285713, "obj2": 0.4333717600649283}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU + RRS ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RMSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.47959183673469385, "obj2": 0.4044050114745242}, {"determining": "( ( Max( BR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( RCSe * MLU ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( CS * RMSe ) ) ) + Max( RRSe,MLU ) )", "obj1": 0.46530612244897956, "obj2": 0.41545511554326503}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( Const / Min( FirstVNF_Mem ,( Max( CRS,RRS ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( ( MLU * MUM ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.08775510204081632, "obj2": 0.890544780831848}, {"determining": "( ( AMS + FirstVNF_CPU_Server ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( CS * ( Max( Min( DS ,RMSe ),( CS + DS ) ) - ( ( DS / ( RCSe / ( DS + Min( ( MUR * MLU ) ,( DS / DS ) ) ) ) ) / DS ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Min( RMSe ,CS ) / RMSe ) / ( RMSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5775510204081633, "obj2": 0.27806774526815686}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / Min( Max( CRS,FirstVNF_CPU ) ,( RRS / FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( DS / RMSe ) )", "obj1": 0.45918367346938777, "obj2": 0.4251680520429881}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.2910163677136972}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( ( ( DDR - FirstVNF_RAM_Server ) / ( ( DDR * ( ( ( AMS + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.7139769993790087}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "Min( ( ( DDR - MRS ) - ( RRS + FirstVNF_CPU ) ) ,( ( PN + ARS ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM - ( ( ( MUR + ( CS / ( DS - Max( MUM,DS ) ) ) ) / Min( Max( RMSe,MUC ) ,( ( MUR / DS ) - MUR ) ) ) * RMSe ) ),Max( DS,RRSe ) )", "obj1": 0.9693877551020408, "obj2": 0.01501117788751855}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - ( ( Min( DDR ,DDR ) - ( ( ( CRS + FirstVNF_Mem_Server ) / ARS ) - ACS ) ) * PN ) ) - ( DDR / MDR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ),( Min( ( ( Max( ( CS / RRSe ),RCSe ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.7877551020408163, "obj2": 0.10043845557497312}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) + ( ( MLU * RRSe ) * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.40585943766444865}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.3510204081632653, "obj2": 0.5403677713899145}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,PN ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7775510204081633, "obj2": 0.10809714848498722}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + Const ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( Min( MUR ,RMSe ) ,RMSe ) / MUR ) )", "obj1": 0.9, "obj2": 0.042917498838831225}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( ( DDR - FirstVNF_CPU ) + ( ( FirstVNF_Mem + Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) * Max( Max( MDR,MRS ),( FirstVNF_RAM_Server - DDR ) ) ) ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( ( RRSe - Min( RMSe ,( Max( ( MLU * CS ),CS ) - Min( RCSe ,( MUC - ( MLU / RRSe ) ) ) ) ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.3122448979591837, "obj2": 0.6053337371157794}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( Min( CS ,MUR ) * ( MUR + CS ) ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5591836734693878, "obj2": 0.2980072511239179}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem + FirstVNF_RAM ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MUR + MUR ) / DS ) / ( Min( ( Min( Max( ( RMSe / CS ),( RMSe / DS ) ) ,CS ) / ( RMSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.7306122448979592, "obj2": 0.13354595961484628}, {"determining": "Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( ( Const / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) - ( ( MDR / Min( Min( ( MDR + AMS ) ,FirstVNF_CPU ) ,PN ) ) + FirstVNF_Mem_Server ) ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.8591836734693877, "obj2": 0.06558045889939104}, {"determining": "( ( ( PN / FirstVNF_Mem_Server ) - ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( PN - Min( DDR ,FirstVNF_Mem_Server ) ),Max( AMS,FirstVNF_Mem ) ) ) * PN ) * RRS ) ) - MDR )", "choosing": "Max( ( ( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Max( RRSe,( ( MLU * RRSe ) + RRSe ) ) + ( MLU / MUC ) ) ) / ( CS / DS ) ) + Min( MUC ,MUR ) ),Max( MUR,MLU ) )", "obj1": 0.810204081632653, "obj2": 0.09127774170971517}, {"determining": "( ( Min( ( ( DDR - MRS ) - ( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( BR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( DS + ( MUR - ( DS + MUM ) ) ) ) + DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.44613201128101987}, {"determining": "( ( Max( Max( ARS,Const ),( ( MRS + DDR ) + PN ) ) - FirstVNF_CPU ) + ( PN * ( ( FirstVNF_RAM_Server - DDR ) / ( MRS - MRS ) ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( ( MUC - ( ( DS + RMSe ) - CS ) ) / MUC ) + Max( RRSe,( MLU + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( MUC + DS ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.6622071131409435}, {"determining": "( Min( ( ( ( AMS / ( ( ACS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) + FirstVNF_CPU ) / Const ) ,DDR ) - ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_Mem,( RRS * RRS ) ) / CRS ) ) + AMS ) * DDR ) + ( ( Max( ( FirstVNF_Mem + ( ( BR / DDR ) - MDR ) ),FirstVNF_RAM ) / AMS ) + RRS ) ) )", "choosing": "( ( ( MLU / MLU ) + ( RCSe - Min( RMSe ,( ( MLU + Max( RMSe,RCSe ) ) * ( Min( Max( CS,MUC ) ,( DS - RMSe ) ) / ( MLU - MLU ) ) ) ) ) ) / ( Min( ( ( RMSe + ( ( CS + DS ) * ( ( MUM * MLU ) * ( DS / MUC ) ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.573469387755102, "obj2": 0.2827939583231777}, {"determining": "( ( Const - Min( Const ,FirstVNF_Mem ) ) + ( ( ( DDR - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( RMSe / RMSe ) / DS ) - ( MUR + DS ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( FirstVNF_Mem_Server - Min( Max( FirstVNF_Mem_Server,BR ) ,AMS ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * ( Min( RMSe ,CS ) * ( Max( Max( DS,RCSe ),MUM ) - RRSe ) ) ) * Max( RCSe,RRSe ) )", "obj1": 0.6612244897959184, "obj2": 0.19705308197211172}, {"determining": "( ( PN + MRS ) - Min( FirstVNF_CPU ,( FirstVNF_CPU - RRS ) ) )", "choosing": "( ( ( ( Max( ( DS / ( MLU + ( MUR - DS ) ) ),( ( Min( MUM ,CS ) + ( RCSe / RCSe ) ) + ( ( MUM + DS ) * MUR ) ) ) - ( ( Min( MUC ,Max( RCSe,MUC ) ) - RMSe ) / ( ( Min( MUM ,MLU ) - CS ) + MLU ) ) ) - Max( MUC,( DS + RMSe ) ) ) / DS ) / ( Min( MUR ,RMSe ) + ( MUM + MLU ) ) )", "obj1": 0.5510204081632653, "obj2": 0.3105438391752649}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.08502103962132324}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3303752065265542}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.5510204081632653, "obj2": 0.3105438391752649}, {"determining": "( ( ( ( ( RRS / BR ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM_Server - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) + ( PN - ( RRS * RRS ) ) ) - MDR )", "choosing": "Max( ( CS + Min( MUC ,MUR ) ),Max( ( ( MLU / MUC ) + Max( RRSe,( ( ( DS / RMSe ) / ( RMSe / ( MLU - RCSe ) ) ) + RRSe ) ) ),RRSe ) )", "obj1": 0.8, "obj2": 0.0963311057199094}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ) ) ) ) )", "choosing": "( CS * ( ( Max( DS,DS ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( MLU ,Min( Max( MLU,CS ) ,( MLU * MUM ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5608666289158886}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem + FirstVNF_RAM ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7204081632653061, "obj2": 0.14095404709444076}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - Max( ( DDR / PN ),ARS ) )", "choosing": "( ( Max( ( Min( ( Min( MUM ,MLU ) - MUR ) ,RRSe ) - RCSe ),RMSe ) / Max( ( Max( RRSe,( RRSe + ( MUR - Min( CS ,MLU ) ) ) ) + ( MLU / MUC ) ),( Min( CS ,MUR ) * ( MUR / ( ( DS * CS ) / ( CS / MUR ) ) ) ) ) ) / ( CS / CS ) )", "obj1": 0.7551020408163265, "obj2": 0.11815819952191906}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / Min( Max( CRS,FirstVNF_CPU ) ,( RRS / FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.5408163265306123, "obj2": 0.32475840817244045}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( RMSe / ( ( Min( CS ,MUR ) * ( MUR + CS ) ) + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.21353742905372572}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - MRS ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5857142857142857, "obj2": 0.2686899614020641}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( Min( AMS ,BR ) * ( ( Min( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) ,Max( MDR,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( RRSe - ( MUC + MUR ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,Min( ( Min( MUR ,MLU ) + DS ) ,RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.5, "obj2": 0.3699535371343259}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Min( RMSe ,CS ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6510204081632653, "obj2": 0.20658309321164992}, {"determining": "Min( ( BR * FirstVNF_Mem ) ,( ARS + ( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( ( ( RMSe + MUR ) / ( DS / RMSe ) ) / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( DS * ( MUM * RRSe ) ),( CS + DS ) ) ) )", "obj1": 0.6591836734693878, "obj2": 0.20372105126630558}, {"determining": "( ( Min( Max( Min( DDR ,MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( ( Max( MRS,PN ) / ( MDR - MRS ) ) * PN ) + ( DDR - FirstVNF_CPU ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( RMSe + DS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,Min( MUC ,MUM ) ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.44613201128101987}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( ( FirstVNF_RAM + DDR ) ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( RMSe + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5183673469387755, "obj2": 0.3416854031128157}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3653061224489796, "obj2": 0.5229850982289161}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RCSe,MLU ) ) ) ) / ( Min( DS ,DS ) * Max( Max( MUC,( RCSe + MUC ) ),MUM ) ) )", "obj1": 0.35714285714285715, "obj2": 0.5321891642483703}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7343729944638412}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.12121747913712062}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * Const ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / Min( RMSe ,DS ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006134760256786947}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( Max( Max( RCSe,( MUM / MLU ) ),Max( MUC,( MUC / DS ) ) ) / RCSe ) ,Max( Max( RRSe,MLU ),DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.7795918367346939, "obj2": 0.10158024237340861}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( Max( ( PN - Min( DDR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) / ( MDR - ( FirstVNF_Mem_Server / Const ) ) ) * PN ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( CS - MUR ) * Min( RMSe ,( Max( DS,DS ) * ( Max( MUR,CS ) * MUR ) ) ) ) ),Max( DS,RRSe ) )", "obj1": 0.363265306122449, "obj2": 0.5256820823092603}, {"determining": "( ( ( Min( ( Const / Max( CRS,( CRS / Min( FirstVNF_Mem ,BR ) ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( Min( CS ,MUR ) * ( MUR / ( ( DS - CS ) / ( CS / MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( RMSe ,MUC ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.8469387755102041, "obj2": 0.06828599086458548}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5244897959183673, "obj2": 0.3382016528709466}, {"determining": "( ( Max( BR,( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,MRS ) + PN ) ) - FirstVNF_CPU ) + ( DDR + ARS ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Max( DS,CS ) + Max( DS,MUR ) ) / RMSe ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RMSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RMSe ) ) ) ) ) ) / ( ( CS / MLU ) * ( ( RMSe - ( DS / DS ) ) * RMSe ) ) )", "obj1": 0.2673469387755102, "obj2": 0.6583274521056255}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( MRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( ( ( RCSe * MUC ) + MUM ) / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,Min( DS ,RMSe ) ) ,MLU ) ),MUC ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2441217767319917}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.762632979454077}, {"determining": "( ( Min( Max( ( FirstVNF_CPU + RRS ),( DDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( Max( MDR,FirstVNF_Mem ) + FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( CS + ( ( ( ( DS * RCSe ) * ( RMSe * ( DS * ( DS * RMSe ) ) ) ) * RCSe ) * MUC ) ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7183673469387755, "obj2": 0.14235684489086434}], "21": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / DDR ) - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) * ( ( RRS + PN ) / Max( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ),( CRS / RRS ) ) ) ) - ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) )", "choosing": "( ( MUR / ( ( Min( RMSe ,DS ) - MUC ) / ( CS / Max( MUM,Max( RRSe,( RCSe + MUC ) ) ) ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) / Min( MUR ,( MUM / Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( ( FirstVNF_Mem_Server * ( ( DDR - ( AMS / RRS ) ) * FirstVNF_CPU ) ) ,BR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( DS ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,( MUC / ( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( ( RRSe * ( MUR * ( MUR * RRSe ) ) ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / DS ) + Min( MUC ,Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ) ) )", "obj1": 0.35918367346938773, "obj2": 0.49927584211591913}, {"determining": "( ( Max( ( RRS - Const ),( FirstVNF_RAM_Server - ACS ) ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( Max( RCSe,RCSe ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / MUC ) + Min( MUC ,MUR ) ) )", "obj1": 0.3877551020408163, "obj2": 0.46203579554427116}, {"determining": "( ( ( BR - Min( MDR ,( MRS + Const ) ) ) - FirstVNF_CPU ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + AMS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * Max( ( DDR - MRS ),( ( CRS - FirstVNF_RAM ) * ( CRS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / ( ( Min( CS ,MUR ) * ( MUR + CS ) ) + Max( DS,MUR ) ) ) + DS ),( ( MUM - RCSe ) * Min( ( CS + RMSe ) ,Min( RRSe ,( MLU * MUM ) ) ) ) ) / ( Min( DS ,RMSe ) * Max( ( ( MUM - ( MUC + ( MUR * MUR ) ) ) / Max( MUR,RRSe ) ),Max( MUC,( MUR / MLU ) ) ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5806119605731871}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5430428131692409}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( PN / ( FirstVNF_CPU / BR ) ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8590972101065282}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.47551020408163264, "obj2": 0.3893318164221283}, {"determining": "Min( ( ( ( ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * MDR ) ) + ( FirstVNF_Mem - MDR ) ) / PN ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR - ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Min( RMSe ,CS ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( CS - Min( MLU ,RRSe ) ) + ( ( RCSe / MUC ) * MUR ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.48367346938775513, "obj2": 0.3663733599831471}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.4, "obj2": 0.4499198954871532}, {"determining": "( ( RRS + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( ( MUC - RRSe ) ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8433164843460299}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( BR,( FirstVNF_Mem - AMS ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( CS / RMSe ) ) - ( CS * Min( Min( Min( Min( MUM ,RMSe ) ,( RRSe + MLU ) ) ,MUR ) ,DS ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7931803305604016}, {"determining": "( ( Max( BR,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,FirstVNF_Mem_Server ) ) - Min( BR ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,MUR ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( BR + ( ( AMS * RRS ) - PN ) ) - ( ( AMS * Max( Const,ACS ) ) + ( MDR - MRS ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Max( MLU,MUR ) - MUR ) + MLU ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( RCSe,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.8816326530612245, "obj2": 0.055663057099401406}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( BR + ( PN - ( AMS * MRS ) ) ) - ( MDR + ( Min( Min( Min( AMS ,PN ) ,AMS ) ,( ( BR + CRS ) + ( ACS - FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM ,MDR ) ) ) )", "choosing": "( ( MUR / ( ( RCSe / RMSe ) + ( MLU * RMSe ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) * Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.710204081632653, "obj2": 0.15652517666176524}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - Max( ( DDR / PN ),ARS ) )", "choosing": "( ( Max( ( Min( ( Min( MUM ,MLU ) - MUR ) ,RRSe ) - RCSe ),RMSe ) / Max( ( Max( RRSe,( RRSe + ( MUR - Min( CS ,MLU ) ) ) ) + ( MLU / MUC ) ),( Min( CS ,MUR ) * ( MUR / ( ( DS * CS ) / ( CS / MUR ) ) ) ) ) ) / ( CS / CS ) )", "obj1": 0.7551020408163265, "obj2": 0.11815819952191906}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8185708416224932}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - DDR ) ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( Min( RCSe ,RCSe ) / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2938775510204082, "obj2": 0.6218349077285704}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( Const / Min( FirstVNF_Mem ,( Max( CRS,RRS ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( ( MLU * MUM ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.08775510204081632, "obj2": 0.890544780831848}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / Min( Max( CRS,FirstVNF_CPU ) ,( RRS / FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.5408163265306123, "obj2": 0.32475840817244045}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,PN ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7775510204081633, "obj2": 0.10809714848498722}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( FirstVNF_CPU_Server + CRS ) * ( ( Max( ( FirstVNF_CPU + RRS ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( Max( RCSe,MLU ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.3629907270929825}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RCSe,MLU ) ) ) ) / ( Min( DS ,DS ) * Max( Max( MUC,( RCSe + MUC ) ),MUM ) ) )", "obj1": 0.35714285714285715, "obj2": 0.5321891642483703}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( CRS / Min( Min( Max( FirstVNF_CPU,DDR ) ,MDR ) ,BR ) ) / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( RRSe,MLU ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.032257285239252795}, {"determining": "( ( ( Min( Max( ( ( ( FirstVNF_RAM + BR ) - DDR ) - MRS ),( FirstVNF_Mem + RRS ) ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,PN ) ) - ( MDR / DDR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( MUR / ( MUR - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RCSe / RRSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( DS * Max( Max( ( RMSe * MUM ),RMSe ),RCSe ) ) ),Max( DS,MUR ) ) )", "obj1": 0.6979591836734694, "obj2": 0.16977006940079173}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7196232470277225}, {"determining": "( ( Min( ( ( DDR - MRS ) - ( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( BR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( DS + ( MUR - ( DS + MUM ) ) ) ) + DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.44613201128101987}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) + ( ( MLU * RRSe ) * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.40585943766444865}, {"determining": "( ( ( Min( Max( ( Const / FirstVNF_CPU_Server ),( FirstVNF_CPU + RRS ) ) ,( ( ( ( PN * ARS ) + ( CRS - MDR ) ) + FirstVNF_RAM ) * ( PN / Min( ( CRS / DDR ) ,ACS ) ) ) ) / DDR ) - Max( MDR,BR ) ) - Min( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) ,Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MUR / ( RRSe + RCSe ) ) ,MLU ) / DS ) / ( Min( ( ( CS + ( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( ( ( Max( ( MUM * CS ),( RMSe / DS ) ) - ( RCSe * CS ) ) / ( MUM * MLU ) ),DS ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.037695894294691924}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( MLU,( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5510204081632653, "obj2": 0.305000174780925}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - DDR ),( MDR - MRS ) ) ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( DS + MLU ) / ( MLU / MUC ) ) / ( Min( RMSe ,DS ) * ( MUM / Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4349224663033669}, {"determining": "( ( Max( MDR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( ( ( FirstVNF_Mem_Server - ACS ) + FirstVNF_CPU_Server ) / DDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / FirstVNF_Mem ) / Min( MRS ,Const ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( Max( CS,MLU ) + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUC + Max( CS,( RCSe / MUM ) ) ) ) ) ) ) / ( Min( RMSe ,RRSe ) * Max( MUM,Max( ( RCSe + MUC ),( RCSe + MUC ) ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8372876157541156}, {"determining": "( ( ( Max( ( Max( ( PN * CRS ),CRS ) * DDR ),( FirstVNF_CPU + RRS ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server / PN ) ) ) / DDR ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,( MUR / ( ( Max( MUC,( MUM / MUC ) ) + ( ( MUC - RRSe ) / Min( MUC ,RCSe ) ) ) * ( ( Min( DS ,DS ) - CS ) / ( ( MLU - DS ) + ( MUR + MUC ) ) ) ) ) ) / Max( ( ( MUR + CS ) * Min( CS ,MUR ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.784001935904206}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.8653061224489796, "obj2": 0.0572005721238565}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + Const ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( Min( MUR ,RMSe ) ,RMSe ) / MUR ) )", "obj1": 0.9, "obj2": 0.042917498838831225}, {"determining": "Min( ( ( DDR - MRS ) - ( RRS + FirstVNF_CPU ) ) ,( ( PN + ARS ) - Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( MUM - ( ( ( MUR + ( CS / ( DS - Max( MUM,DS ) ) ) ) / Min( Max( RMSe,MUC ) ,( ( MUR / DS ) - MUR ) ) ) * RMSe ) ),Max( DS,RRSe ) )", "obj1": 0.9693877551020408, "obj2": 0.01501117788751855}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7556893938071786}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) + ( ( ( AMS / FirstVNF_RAM ) * Min( DDR ,PN ) ) - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( Max( MRS,FirstVNF_RAM_Server ) + CRS ),( DDR - MRS ) ) + FirstVNF_Mem_Server ) * DDR ) ) ) )", "choosing": "( ( ( ( RCSe * Min( ( Min( Min( DS ,MUC ) ,RMSe ) / MLU ) ,CS ) ) / ( MUC - MUR ) ) / ( Min( DS ,MLU ) * ( MUR * RMSe ) ) ) + ( CS / CS ) )", "obj1": 0.6714285714285714, "obj2": 0.1931268446811919}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( FirstVNF_RAM / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + CS ) / ( MLU / MUM ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8290024268462947}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "( ( ( ( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) * ( ( ( ( PN * FirstVNF_Mem_Server ) + ( CRS - MDR ) ) + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - Min( CRS ,( CRS / ( FirstVNF_RAM_Server - ( Max( Const,MDR ) / CRS ) ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,RMSe ) - MUC ) / Min( Min( CS ,( RRSe / DS ) ) ,CS ) ) / ( Min( RMSe ,MUM ) * Max( MUM,( MUC / ( RCSe + MUC ) ) ) ) )", "obj1": 0.9408163265306122, "obj2": 0.02507562858237844}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3303752065265542}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ,( Min( Max( MRS,RRS ) ,Min( ( FirstVNF_RAM * ACS ) ,PN ) ) / CRS ) ) / DDR ) - ( MDR - BR ) )", "choosing": "( ( Max( RCSe,MLU ) / ( ( DS * MLU ) + Max( CS,( Max( MUC,Max( DS,CS ) ) + Min( RMSe ,( Min( RCSe ,MUC ) * DS ) ) ) ) ) ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MLU ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7750288077395031}, {"determining": "( ( FirstVNF_Mem + Max( ACS,Const ) ) / ( ( ARS / FirstVNF_CPU ) * Min( ( FirstVNF_CPU_Server + ( ( RRS * RRS ) - PN ) ) ,BR ) ) )", "choosing": "( ( Min( ( RRSe / MUM ) ,Min( MLU ,( RCSe + RCSe ) ) ) + CS ) / ( MUC * ( DS * ( ( RMSe - MUM ) / MLU ) ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7098202855840406}, {"determining": "( ( ( ( ( RRS / BR ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM_Server - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) + ( BR - ( RRS * RRS ) ) ) - MDR )", "choosing": "Max( ( CS + Min( MUC ,MUR ) ),Max( ( ( MLU / MUC ) + Max( RRSe,( MLU + RRSe ) ) ),RRSe ) )", "obj1": 0.9795918367346939, "obj2": 0.00882391634707648}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( Max( MUC,CS ) + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RMSe ) ) ) ) ) ) / ( ( CS / MLU ) * ( ( RMSe - ( DS / DS ) ) * RMSe ) ) )", "obj1": 0.6938775510204082, "obj2": 0.17835135153181206}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem + FirstVNF_RAM ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MUR + MUR ) / DS ) / ( Min( ( Min( Max( ( RMSe / CS ),( RMSe / DS ) ) ,CS ) / ( RMSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.7306122448979592, "obj2": 0.13354595961484628}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "Min( ( AMS * FirstVNF_Mem ) ,( MDR + Min( DDR ,( FirstVNF_CPU * ( Max( ( FirstVNF_CPU + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( RMSe / ( ( Min( CS ,MUR ) * ( MUR + CS ) ) + Max( Min( Min( MUM ,MLU ) ,DS ),MUR ) ) ) + DS ),( ( Min( Max( RMSe,( ( CS * DS ) * RMSe ) ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6224489795918368, "obj2": 0.2367039589927218}, {"determining": "( ( AMS + FirstVNF_CPU_Server ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( CS * ( Max( Min( DS ,RMSe ),( CS + DS ) ) - ( ( DS / ( RCSe / ( DS + Min( ( MUR * MLU ) ,( DS / DS ) ) ) ) ) / DS ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( MLU,RRSe ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08686653928613619}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( ( ( DDR - FirstVNF_RAM_Server ) / ( ( DDR * ( ( ( AMS + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.7139769993790087}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6497226629297939}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ACS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC * MUR ) / ( MLU * RCSe ) ) + ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( ( ( CS - MUM ) + DS ) - Max( ( Min( MUM ,RRSe ) + Max( CS,RRSe ) ),Min( RMSe ,MLU ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6088329901482722}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( MRS + FirstVNF_RAM ) ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7183673469387755, "obj2": 0.14233099755256778}, {"determining": "( ( ( PN / FirstVNF_Mem_Server ) - ( ( ( Max( ( PN - Min( DDR ,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) / ( MDR - FirstVNF_Mem ) ) * PN ) * RRS ) ) - MDR )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MLU / RRSe ) * Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MUC ) ,Max( MLU,RRSe ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12273954920317905}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( FirstVNF_Mem_Server / PN ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( ( FirstVNF_RAM_Server / ( MDR + FirstVNF_Mem_Server ) ) * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MUC / ( ( MUM + RCSe ) * MUC ) ) / ( MUC * Min( Min( ( ( DS + Max( RCSe,CS ) ) - MUC ) ,RRSe ) ,( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( DS / ( DS / RMSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.25759848572235083}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.3510204081632653, "obj2": 0.5403677713899145}, {"determining": "( Min( ( ( ( AMS / ( ( ACS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) + FirstVNF_CPU ) / Const ) ,DDR ) - ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_Mem,( RRS * RRS ) ) / CRS ) ) + AMS ) * DDR ) + ( ( Max( ( FirstVNF_Mem + ( ( BR / DDR ) - MDR ) ),FirstVNF_RAM ) / AMS ) + RRS ) ) )", "choosing": "( ( ( MLU / MLU ) + ( RCSe - Min( RMSe ,( ( MLU + Max( RMSe,RCSe ) ) * ( Min( Max( CS,MUC ) ,( DS - RMSe ) ) / ( MLU - MLU ) ) ) ) ) ) / ( Min( ( ( RMSe + ( ( CS + DS ) * ( ( MUM * MLU ) * ( DS / MUC ) ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.573469387755102, "obj2": 0.2827939583231777}, {"determining": "( ( ( ( CRS + FirstVNF_CPU_Server ) * ( ( Const - DDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( Const - MDR ) ) * PN ) )", "choosing": "( ( ( CS * RRSe ) / Min( MLU ,( ( MUM - MLU ) / RRSe ) ) ) * CS )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( FirstVNF_Mem_Server - Min( Max( FirstVNF_Mem_Server,BR ) ,AMS ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * ( Min( RMSe ,CS ) * ( Max( Max( DS,RCSe ),MUM ) - RRSe ) ) ) * Max( RCSe,RRSe ) )", "obj1": 0.6612244897959184, "obj2": 0.19705308197211172}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( Min( CS ,MUR ) * ( MUR / ( ( DS - CS ) / ( CS / MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( RMSe ,MUC ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.1816421038960686}, {"determining": "( ( MDR + ( FirstVNF_RAM_Server + MRS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( Min( ARS ,MRS ) / ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) / Max( ( Min( FirstVNF_RAM ,DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( Min( MUC ,DS ) / MUC ),MLU ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( ( DS - RMSe ),( CS + DS ) ) ) )", "obj1": 0.3081632653061224, "obj2": 0.6025886874534081}, {"determining": "( ( Max( BR,( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,MRS ) + PN ) ) - FirstVNF_CPU ) + ( DDR + ARS ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Max( DS,CS ) + Max( DS,MUR ) ) / RMSe ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RMSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RMSe ) ) ) ) ) ) / ( ( CS / MLU ) * ( ( RMSe - ( DS / DS ) ) * RMSe ) ) )", "obj1": 0.2673469387755102, "obj2": 0.6583274521056255}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - MDR ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( ( MLU * RCSe ) * Min( RMSe ,CS ) ) )", "obj1": 0.32653061224489793, "obj2": 0.5906561301898935}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( Min( AMS ,BR ) * ( ( Min( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) ,Max( ( MRS + CRS ),FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( RRSe - ( MUC + MUR ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,Min( ( Min( MUR ,MLU ) + DS ) ,RRSe ) ) + ( Min( DS ,RMSe ) / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.3549631233671277}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( ( Const + FirstVNF_Mem_Server ) / DDR ) ) ) + ( DDR - ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MLU ,RMSe ) / ( MUM + Max( MUM,RRSe ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5960390535543619}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.08502103962132324}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - ( ( Min( DDR ,DDR ) - ( ( ( CRS + FirstVNF_Mem_Server ) / ARS ) - ACS ) ) * PN ) ) - ( DDR / MDR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / ( RCSe - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RRSe / RCSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ),( Min( ( ( Max( ( CS / RRSe ),RCSe ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.7877551020408163, "obj2": 0.10043845557497312}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.2910163677136972}, {"determining": "( ( ( Min( ( Const / Max( CRS,( CRS / FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( CS / Max( ( Min( CS ,MUR ) * ( MUR / ( ( DS - CS ) / ( CS / MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( RMSe ,MUC ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07359316228913977}, {"determining": "( ( BR + ( PN - ( AMS * ARS ) ) ) - ( MDR + ( DDR * ( ( FirstVNF_Mem_Server - PN ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / ( ( MUR * RRSe ) - RRSe ) ) / ( Min( RMSe ,DS ) * Max( MUM,( MUC - ( RCSe + MUC ) ) ) ) )", "obj1": 0.9020408163265307, "obj2": 0.042013352265690626}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + MDR ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( Max( RCSe,MLU ) / DS ) ),( CS + ( ( Max( RCSe,MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) ) ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.08099454394069074}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - ( BR / FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.9551020408163265, "obj2": 0.017311730866469748}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( Min( MUR ,RMSe ) ,RMSe ) / MUR ) )", "obj1": 0.19183673469387755, "obj2": 0.7459133200151142}, {"determining": "( ( Min( Max( ( DDR - MRS ),Max( BR,( ( MRS + DDR ) + PN ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.45714285714285713, "obj2": 0.4333717600649283}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( Min( CS ,MUR ) * ( MUR + CS ) ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.12022820672864241}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - ( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.608249457506644}, {"determining": "( Min( ( ( ( AMS / ( ( ACS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) + FirstVNF_CPU ) / Const ) ,DDR ) - ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_Mem,( RRS * RRS ) ) / CRS ) ) + AMS ) * DDR ) + ( ( Max( ( FirstVNF_Mem + ( ( BR / DDR ) - MDR ) ),FirstVNF_RAM ) / AMS ) + RRS ) ) )", "choosing": "( ( ( MLU / MLU ) + ( RCSe - Min( RMSe ,( ( MLU + Max( RMSe,RCSe ) ) * ( Min( Max( CS,MUC ) ,( DS - RMSe ) ) / ( MLU - MLU ) ) ) ) ) ) / ( Min( ( ( RMSe + ( ( CS + DS ) * ( ( MUM * MLU ) * ( DS / MUC ) ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.8571428571428571, "obj2": 0.06540443042515583}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.44613201128101987}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( Max( Max( RCSe,( MUM / MLU ) ),Max( MUC,( MUC / DS ) ) ) / RCSe ) ,Max( Max( RRSe,MLU ),DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.7795918367346939, "obj2": 0.10158024237340861}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( MUC + DS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.43380244546831853}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem + FirstVNF_RAM ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RMSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.726530612244898, "obj2": 0.13554816018666183}, {"determining": "( ( Min( ( CRS / Min( FirstVNF_Mem ,BR ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Max( RRSe,( ( CS + DS ) + RRSe ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7918367346938775, "obj2": 0.09370852022510155}, {"determining": "Min( Min( MDR ,( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ,( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,( MUM * MUR ) ) - CS ) * Min( ( ( RRSe - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.21290405012834374}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.762632979454077}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.8020408163265306, "obj2": 0.09124868087395031}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( MRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( ( ( RCSe * MUC ) + MUM ) / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,Min( DS ,RMSe ) ) ,MLU ) ),MUC ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2441217767319917}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server + MDR ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,Min( Max( CS,DS ) ,( MLU - MLU ) ) ) ) )", "obj1": 0.9877551020408163, "obj2": 0.005556243534527798}, {"determining": "Min( ( ( BR + ( DDR - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( MRS + RRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * MLU ) - MUC ) / ( ( ( RCSe * MUC ) + MUM ) / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,Min( DS ,RMSe ) ) ,MUR ) ),MUC ) ) )", "obj1": 0.6061224489795919, "obj2": 0.2493609324131629}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( Max( MDR,PN ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,( DS / RMSe ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5938775510204082, "obj2": 0.2623512288765819}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7343729944638412}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( MRS - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6204081632653061, "obj2": 0.23775418170979923}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( ( ( RMSe + MUR ) / ( DS / RMSe ) ) / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5956913359495221}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( Const + FirstVNF_CPU_Server ) + RRS ) ) ,( ( PN / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RRSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5653061224489796, "obj2": 0.29460966606836236}], "22": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "Min( ( ( FirstVNF_CPU - Max( FirstVNF_CPU,ACS ) ) - ( MDR + ( DDR * ( ( ( ( RRS + RRS ) * FirstVNF_CPU ) - DDR ) * FirstVNF_CPU ) ) ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( Min( Min( Max( ( DS - MLU ),( MUM * RMSe ) ) ,MUR ) ,RMSe ) + ( RRSe - Max( MUR,( ( MUC - RRSe ) - MLU ) ) ) ) / ( Min( DS ,CS ) - ( ( DS / CS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( CS - Min( MLU ,RRSe ) ) + ( ( RCSe / MUC ) * MUR ) ) ) ),( CS + Min( MUM ,Max( ( MUM * MUR ),( ( CS - RRSe ) + CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( ( RRSe * ( MUR * ( MUR * RRSe ) ) ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / DS ) + Min( MUC ,Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ) ) )", "obj1": 0.35918367346938773, "obj2": 0.49927584211591913}, {"determining": "( ( Max( ( RRS - Const ),( FirstVNF_RAM_Server - ACS ) ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( Max( RCSe,RCSe ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / MUC ) + Min( MUC ,MUR ) ) )", "obj1": 0.3877551020408163, "obj2": 0.46203579554427116}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5, "obj2": 0.33889984231412007}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Min( RMSe ,CS ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.48367346938775513, "obj2": 0.364217120347345}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5430428131692409}, {"determining": "( ( ( BR - Min( MDR ,( MRS + Const ) ) ) - FirstVNF_CPU ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + AMS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / Const ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * Max( ( DDR - MRS ),( ( CRS - FirstVNF_RAM ) * ( CRS + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / ( ( Min( CS ,MUR ) * ( MUR + CS ) ) + Max( DS,MUR ) ) ) + DS ),( ( MUM - RCSe ) * Min( ( CS + RMSe ) ,Min( RRSe ,( MLU * MUM ) ) ) ) ) / ( Min( DS ,RMSe ) * Max( ( ( MUM - ( MUC + ( MUR * MUR ) ) ) / Max( MUR,RRSe ) ),Max( MUC,( MUR / MLU ) ) ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5806119605731871}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( PN / ( FirstVNF_CPU / BR ) ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8590972101065282}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - FirstVNF_RAM )", "choosing": "Max( ( RRSe / ( Max( ( Max( RCSe,RCSe ) * MUC ),MUR ) - ( DS / RMSe ) ) ),( ( CS / MUC ) + Min( MUC ,( MLU / MUR ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.4269413272654267}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - MDR ) * FirstVNF_CPU ) ) * FirstVNF_Mem ) ) ) ) ,( MDR + ( ( ( Max( ( ( ACS / BR ) + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( MUM / ( Max( ( MUC + MUC ),CS ) - DS ) ) / ( RMSe / MUM ) )", "obj1": 0.4122448979591837, "obj2": 0.4318354119320888}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.43673469387755104, "obj2": 0.4308885435917903}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.4, "obj2": 0.4499198954871532}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( MLU,( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5510204081632653, "obj2": 0.305000174780925}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) + ( ( MLU * RRSe ) * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.40585943766444865}, {"determining": "( ( BR + ( PN - ( AMS * MRS ) ) ) - ( MDR + ( Min( Min( Min( AMS ,PN ) ,AMS ) ,( ( BR + CRS ) + ( ACS - FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM ,MDR ) ) ) )", "choosing": "( ( MUR / ( ( RCSe / RMSe ) + ( MLU * RMSe ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) * Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.710204081632653, "obj2": 0.15652517666176524}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.6754352234836752}, {"determining": "( ( Max( BR,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,FirstVNF_Mem_Server ) ) - Min( BR ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,MUR ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2938775510204082, "obj2": 0.6208306171300667}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( MRS - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.336458539877103}, {"determining": "( ( Max( BR,( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,MRS ) + PN ) ) - FirstVNF_CPU ) + ( DDR + ARS ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Max( DS,CS ) + Max( DS,MUR ) ) / RMSe ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RMSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RMSe ) ) ) ) ) ) / ( ( CS / MLU ) * ( ( RMSe - ( DS / DS ) ) * RMSe ) ) )", "obj1": 0.2673469387755102, "obj2": 0.6583274521056255}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / Min( Max( CRS,FirstVNF_CPU ) ,( RRS / FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.5408163265306123, "obj2": 0.32475840817244045}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( FirstVNF_Mem_Server - Min( Max( FirstVNF_Mem_Server,BR ) ,AMS ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * ( Min( RMSe ,CS ) * ( Max( Max( DS,RCSe ),MUM ) - RRSe ) ) ) * Max( RCSe,RRSe ) )", "obj1": 0.6612244897959184, "obj2": 0.19705308197211172}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( BR,( FirstVNF_Mem - AMS ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( CS / RMSe ) ) - ( CS * Min( Min( Min( Min( MUM ,RMSe ) ,( RRSe + MLU ) ) ,MUR ) ,DS ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7931803305604016}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "( ( ( Min( ( Const / Max( CRS,( CRS / FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( CS / Max( ( Min( CS ,MUR ) * ( MUR / ( ( DS - CS ) / ( CS / MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( RMSe ,MUC ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07359316228913977}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8185708416224932}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RCSe,MLU ) ) ) ) / ( Min( DS ,DS ) * Max( Max( MUC,( RCSe + MUC ) ),MUM ) ) )", "obj1": 0.35714285714285715, "obj2": 0.5321891642483703}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( Max( MDR,PN ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,( DS / RMSe ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5938775510204082, "obj2": 0.2623512288765819}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4775510204081633, "obj2": 0.38659419691435964}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "Min( Min( MDR ,( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ,( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,( MUM * MUR ) ) - CS ) * Min( ( ( RRSe - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.21290405012834374}, {"determining": "( ( BR + ( FirstVNF_CPU - ( RRS * AMS ) ) ) - ( MDR + ( DDR * ( ( Max( ( CRS / ACS ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( ( RRSe / Min( Max( CS,( MLU / MLU ) ) ,CS ) ) * ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.028868928218730886}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( MUC / ( ( MLU * RCSe ) * Min( RMSe ,CS ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18806128394002297}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( MLU,RRSe ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.8836734693877552, "obj2": 0.05070916732554738}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( Const + FirstVNF_CPU_Server ) + RRS ) ) ,( ( PN / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RRSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5653061224489796, "obj2": 0.29460966606836236}, {"determining": "( ( BR + ( PN - ( AMS * ( MDR / ( MDR * CRS ) ) ) ) ) - ( MDR + ( ( MRS + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( RMSe ,MUR ) / ( ( ( DS / RMSe ) / DS ) - Max( ( ( RCSe * MUR ) + Min( MLU ,MUC ) ),( CS + DS ) ) ) ) )", "obj1": 0.6551020408163265, "obj2": 0.21272842978800136}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.47551020408163264, "obj2": 0.3893318164221283}, {"determining": "( ( ( Min( Max( ( Const / FirstVNF_CPU_Server ),( FirstVNF_CPU + RRS ) ) ,( ( ( ( PN * ARS ) + ( CRS - MDR ) ) + FirstVNF_RAM ) * ( PN / Min( ( CRS / DDR ) ,ACS ) ) ) ) / DDR ) - Max( MDR,BR ) ) - Min( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) ,Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MUR / ( RRSe + RCSe ) ) ,MLU ) / DS ) / ( Min( ( ( CS + ( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( ( ( Max( ( MUM * CS ),( RMSe / DS ) ) - ( RCSe * CS ) ) / ( MUM * MLU ) ),DS ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.037695894294691924}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ACS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC * MUR ) / ( MLU * RCSe ) ) + ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( ( ( CS - MUM ) + DS ) - Max( ( Min( MUM ,RRSe ) + Max( CS,RRSe ) ),Min( RMSe ,MLU ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6088329901482722}, {"determining": "( Min( ( ( ( AMS / ( ( ACS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) + FirstVNF_CPU ) / Const ) ,DDR ) - ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_Mem,( RRS * RRS ) ) / CRS ) ) + AMS ) * DDR ) + ( ( Max( ( FirstVNF_Mem + ( ( BR / DDR ) - MDR ) ),FirstVNF_RAM ) / AMS ) + RRS ) ) )", "choosing": "( ( ( MLU / MLU ) + ( RCSe - Min( RMSe ,( ( MLU + Max( RMSe,RCSe ) ) * ( Min( Max( CS,MUC ) ,( DS - RMSe ) ) / ( MLU - MLU ) ) ) ) ) ) / ( Min( ( ( RMSe + ( ( CS + DS ) * ( ( MUM * MLU ) * ( DS / MUC ) ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.8571428571428571, "obj2": 0.06540443042515583}, {"determining": "( ( ( ( ( RRS / BR ) + ( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM_Server - ( ( MDR / DDR ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) + ( BR - ( RRS * RRS ) ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Max( RRSe,( ( CS + DS ) + RRSe ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.007930703290626761}, {"determining": "( Min( ( ( ( AMS / ( ( ACS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) + FirstVNF_CPU ) / Const ) ,DDR ) - ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_Mem,( RRS * RRS ) ) / CRS ) ) + AMS ) * DDR ) + ( ( Max( ( FirstVNF_Mem + ( ( BR / DDR ) - MDR ) ),FirstVNF_RAM ) / AMS ) + RRS ) ) )", "choosing": "( ( ( MLU / MLU ) + ( RCSe - Min( RMSe ,( ( MLU + Max( RMSe,RCSe ) ) * ( Min( Max( CS,MUC ) ,( DS - RMSe ) ) / ( MLU - MLU ) ) ) ) ) ) / ( Min( ( ( RMSe + ( ( CS + DS ) * ( ( MUM * MLU ) * ( DS / MUC ) ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.573469387755102, "obj2": 0.2827939583231777}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( Max( MDR,PN ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,( DS / RMSe ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.2740193599546604}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( RMSe / ( ( Min( CS ,MUR ) * ( MUR + CS ) ) + Max( ( Min( MUM ,MLU ) + DS ),MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6122448979591837, "obj2": 0.24315954331118111}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( ( ( DDR - FirstVNF_RAM_Server ) / ( ( DDR * ( ( ( AMS + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.7139769993790087}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( MRS + FirstVNF_RAM ) ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7183673469387755, "obj2": 0.14233099755256778}, {"determining": "( ( ( ( MDR - RRS ) + ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_Mem * MRS ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( FirstVNF_RAM / Min( CRS ,FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS + CS ) / ( MLU / MUM ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8290024268462947}, {"determining": "( ( Max( MDR,( ( MRS + MDR ) + PN ) ) - FirstVNF_CPU ) + ( ( ( ( ( PN + FirstVNF_Mem_Server ) / DDR ) - ( ( ( ( FirstVNF_Mem_Server - ACS ) + FirstVNF_CPU_Server ) / DDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) / FirstVNF_Mem ) / Min( MRS ,Const ) ) )", "choosing": "( ( Max( DS,MLU ) / Max( ( Min( CS ,MUR ) * ( Max( CS,MLU ) + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUC + Max( CS,( RCSe / MUM ) ) ) ) ) ) ) / ( Min( RMSe ,RRSe ) * Max( MUM,Max( ( RCSe + MUC ),( RCSe + MUC ) ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8372876157541156}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( PN ,( FirstVNF_RAM_Server - RRS ) ) ) ) - ( MDR * BR ) )", "choosing": "( ( CS + MUR ) / ( ( CS * DS ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Max( RRSe,( DS + RRSe ) ) + ( Max( ( ( MUM - RMSe ) * ( MUC - MLU ) ),RMSe ) / Max( MUC,( RCSe * MUC ) ) ) ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08673125728134591}, {"determining": "( Max( ( MDR / PN ),( RRS * FirstVNF_RAM ) ) - ( MDR / DDR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / Max( RCSe,RCSe ) ) ) - Max( Min( DS ,RMSe ),( MLU * ( DS / RMSe ) ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.7755102040816326, "obj2": 0.10574378411917836}, {"determining": "( ( BR + FirstVNF_RAM ) - ( MDR + ( ( FirstVNF_CPU_Server + CRS ) * ( ( Max( ( FirstVNF_CPU + RRS ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUM / MUC ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.08979591836734693, "obj2": 0.885260233412831}, {"determining": "( ( ( Min( ( Const / Max( CRS,( CRS / FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( Max( ( Min( MUC ,DS ) / MUC ),MLU ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( ( DS - RMSe ),( CS + DS ) ) ) )", "obj1": 0.8714285714285714, "obj2": 0.055092190322238235}, {"determining": "Min( ( ( BR + ( DDR - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( MRS + RRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * MLU ) - MUC ) / ( ( ( RCSe * MUC ) + MUM ) / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,Min( DS ,RMSe ) ) ,MUR ) ),MUC ) ) )", "obj1": 0.6061224489795919, "obj2": 0.2493609324131629}, {"determining": "( ( ( Min( ( ( ( DDR / AMS ) - MDR ) - ( ( Const * CRS ) / ARS ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( BR,MDR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ) * Min( Min( DS ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),Max( CS,DS ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.07398204894489384}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.8653061224489796, "obj2": 0.0572005721238565}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( Min( MUR ,RMSe ) ,RMSe ) / MUR ) )", "obj1": 0.19183673469387755, "obj2": 0.7459133200151142}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7196232470277225}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.7612244897959184, "obj2": 0.10830704208595339}, {"determining": "( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) - ( MDR + ( MDR - MRS ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( RMSe / ( RCSe - RCSe ) ),( ( MLU / MUC ) + Max( RRSe,( DS + MLU ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.05070557052202526}, {"determining": "( ( RRS + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( ( MUC - RRSe ) ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8433164843460299}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( ( RRSe - ( MUC + MUR ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,Min( ( Min( MUR ,MLU ) + DS ) ,RRSe ) ) + ( Min( DS ,RMSe ) / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.7979591836734694, "obj2": 0.09082759521383343}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - Max( ( DDR / PN ),ARS ) )", "choosing": "( ( Max( ( Min( ( Min( MUM ,MLU ) - MUR ) ,RRSe ) - RCSe ),RMSe ) / Max( ( Max( RRSe,( RRSe + ( MUR - Min( CS ,MLU ) ) ) ) + ( MLU / MUC ) ),( Min( CS ,MUR ) * ( MUR / ( ( DS * CS ) / ( CS / MUR ) ) ) ) ) ) / ( CS / CS ) )", "obj1": 0.7551020408163265, "obj2": 0.11815819952191906}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.1816421038960686}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7343729944638412}, {"determining": "( ( ( ( CRS + FirstVNF_CPU_Server ) * ( ( Const - DDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( Const - MDR ) ) * PN ) )", "choosing": "( ( ( CS * RRSe ) / Min( MLU ,( ( MUM - MLU ) / RRSe ) ) ) * CS )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - ( BR / FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUC ) / ( CS / MUR ) ) ) - ( Min( ( Max( Max( RCSe,( MUM / MLU ) ),Max( MUC,( MUC / DS ) ) ) / RCSe ) ,Max( Max( RRSe,MLU ),DS ) ) / ( ( DS + MUR ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.9673469387755103, "obj2": 0.011533214383623236}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( RMSe / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.08396819521810295}, {"determining": "( ( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3303752065265542}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( ( ( RMSe + MUR ) / ( DS / RMSe ) ) / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5956913359495221}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - ( BR / FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.9551020408163265, "obj2": 0.017311730866469748}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( MDR,( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + Min( RMSe ,DS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.16326530612244897, "obj2": 0.7921200837600751}, {"determining": "( ( ( Min( ( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / Min( Max( CRS,FirstVNF_CPU ) ,( RRS / FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( DDR ,FirstVNF_RAM ) ) - PN ) )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( Min( RCSe ,RCSe ) / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.5846155690559536}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( ( Const + FirstVNF_Mem_Server ) / DDR ) ) ) + ( DDR - ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MLU ,RMSe ) / ( MUM + Max( MUM,RRSe ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5960390535543619}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * Const ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( Min( ( DDR - AMS ) ,FirstVNF_Mem_Server ) - ( ( RRS - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( MLU ,CS ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / ( ( MLU * RCSe ) / ( MUC * MUR ) ) ) / ( RMSe / Min( ( DS + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.23061224489795917, "obj2": 0.7094194719584621}, {"determining": "( ( AMS + FirstVNF_CPU_Server ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( CS * ( Max( Min( DS ,RMSe ),( CS + DS ) ) - ( ( DS / ( RCSe / ( DS + Min( ( MUR * MLU ) ,( DS / DS ) ) ) ) ) / DS ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6497226629297939}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) / Max( ARS,Const ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * Max( ( RCSe + Min( ( RCSe * RCSe ) ,MUC ) ),RRSe ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8379190892322389}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.7836734693877551, "obj2": 0.09584810826660187}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.2910163677136972}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8433164843460299}, {"determining": "( ( FirstVNF_CPU - DDR ) + ( ( ( FirstVNF_RAM_Server / DDR ) * Min( PN ,Min( MDR ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) * PN ) )", "choosing": "( ( Max( Min( ( MLU - RCSe ) ,RMSe ),( MUC + CS ) ) / DS ) / ( CS * ( MUM + ( MUM - Min( MUM ,Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5390355925800777}, {"determining": "( ( Min( ( CRS / Min( FirstVNF_Mem ,BR ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Max( RRSe,( ( CS + DS ) + RRSe ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7918367346938775, "obj2": 0.09370852022510155}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( MUR + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.27566166380728824}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.18571428571428572, "obj2": 0.7485183329955372}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( Min( CS ,MUR ) * ( MUR + CS ) ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.12022820672864241}, {"determining": "( ( MDR + ( FirstVNF_RAM_Server + MRS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( Min( ARS ,MRS ) / ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) ) / Max( ( Min( FirstVNF_RAM ,DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( Max( ( Min( MUC ,DS ) / MUC ),MLU ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( ( DS - RMSe ),( CS + DS ) ) ) )", "obj1": 0.3081632653061224, "obj2": 0.6025886874534081}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( Min( DS ,RMSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6285714285714286, "obj2": 0.23261635383125623}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "( ( ( Min( ( Const / Max( CRS,( CRS / FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM ) * ( PN / ( ( FirstVNF_CPU + FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( PN * RRS ) )", "choosing": "( ( ( MUC / ( ( ( ( ( RRSe / MUM ) / MUC ) - Min( Max( RCSe,RMSe ) ,RCSe ) ) - MUM ) - RRSe ) ) * MUM ) / ( Min( MUR ,DS ) * Max( MUM,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.9877551020408163, "obj2": 0.004079403203201994}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( Max( MUC,( Min( CS ,MUR ) * MUM ) ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.9448979591836735, "obj2": 0.02188099318540598}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ,( Min( Max( MRS,RRS ) ,Min( ( FirstVNF_RAM * ACS ) ,PN ) ) / CRS ) ) / DDR ) - ( MDR - BR ) )", "choosing": "( ( Max( RCSe,MLU ) / ( ( DS * MLU ) + Max( CS,( Max( MUC,Max( DS,CS ) ) + Min( RMSe ,( Min( RCSe ,MUC ) * DS ) ) ) ) ) ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MLU ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7750288077395031}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( Max( ARS,DDR ) + ARS ) ) / ( ( ( ( DDR / Const ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - ( MRS / PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( CS * ( ( ( Max( CS,RCSe ) * Min( MUR ,( ( DS * ( MUR * MUC ) ) + ( RMSe * ( RRSe + RRSe ) ) ) ) ) / ( Min( DS ,CS ) - ( ( ( ( RMSe + MUR ) / ( DS / RMSe ) ) / DS ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6045903148001206}, {"determining": "( ( ( Min( Max( ( ( ( FirstVNF_RAM + BR ) - DDR ) - MRS ),( FirstVNF_Mem + RRS ) ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,PN ) ) - ( MDR / DDR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( MUR / ( MUR - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RCSe / RRSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( DS * Max( Max( ( RMSe * MUM ),RMSe ),RCSe ) ) ),Max( DS,MUR ) ) )", "obj1": 0.6938775510204082, "obj2": 0.17108952865490681}, {"determining": "( ( ( Min( Max( ( ( ( FirstVNF_RAM + BR ) - DDR ) - MRS ),( FirstVNF_Mem + RRS ) ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,PN ) ) - ( MDR / DDR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( MUR / ( MUR - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RCSe / RRSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( DS * Max( Max( ( RMSe * MUM ),RMSe ),RCSe ) ) ),Max( DS,MUR ) ) )", "obj1": 0.6979591836734694, "obj2": 0.16977006940079173}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.08400771406527778}], "23": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( BR + ( AMS - ( FirstVNF_CPU / ( ( ( PN * DDR ) + FirstVNF_RAM ) * ( FirstVNF_Mem_Server / PN ) ) ) ) ) - MRS )", "choosing": "( ( ( DS - DS ) * Max( Max( MUC,( RCSe + MUC ) ),MUM ) ) / ( Max( RRSe,MLU ) / ( ( ( RMSe / MUR ) + RRSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU - Max( FirstVNF_CPU,ACS ) ) - ( MDR + ( DDR * ( ( ( ( RRS + RRS ) * FirstVNF_CPU ) - DDR ) * FirstVNF_CPU ) ) ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( Min( Min( Max( ( DS - MLU ),( MUM * RMSe ) ) ,MUR ) ,RMSe ) + ( RRSe - Max( MUR,( ( MUC - RRSe ) - MLU ) ) ) ) / ( Min( DS ,CS ) - ( ( DS / CS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( CS - Min( MLU ,RRSe ) ) + ( ( RCSe / MUC ) * MUR ) ) ) ),( CS + Min( MUM ,Max( ( MUM * MUR ),( ( CS - RRSe ) + CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - MDR ) * FirstVNF_CPU ) ) * FirstVNF_Mem ) ) ) ) ,( MDR + ( ( ( Max( ( ( ACS / BR ) + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.5434101738163257}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( FirstVNF_Mem_Server - ( PN / ACS ) ) ) ) - ( MDR / ( ( ( FirstVNF_CPU + FirstVNF_Mem ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( FirstVNF_RAM_Server / Min( Const ,FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR + ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * RCSe ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( ( CS * RCSe ) - MUC ) )", "obj1": 0.45102040816326533, "obj2": 0.41384064150825556}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3816326530612245, "obj2": 0.46788968042858625}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5, "obj2": 0.33889984231412007}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ,( Min( Max( MRS,RRS ) ,Min( ( FirstVNF_RAM * ACS ) ,PN ) ) / CRS ) ) / DDR ) - ( MDR - BR ) )", "choosing": "( ( Max( RCSe,MLU ) / ( ( DS * MLU ) + Max( CS,( Max( MUC,Max( DS,CS ) ) + Min( RMSe ,( Min( RCSe ,MUC ) * DS ) ) ) ) ) ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MLU ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7750288077395031}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( RRS - ( ARS - FirstVNF_RAM_Server ) ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) * Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,( Const / DDR ) ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) / ( ( MUM * RCSe ) / ( MUC * MUR ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( ( DS / RMSe ) ,RMSe ),( CS + DS ) ) ) - Max( ( Min( RMSe ,RMSe ) - Max( Max( RMSe,Min( ( MLU / MUM ) ,MUM ) ),MUR ) ),( CS + DS ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.5939983984132309}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( ( RRSe * ( MUR * ( MUR * RRSe ) ) ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / DS ) + Min( MUC ,Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ) ) )", "obj1": 0.35918367346938773, "obj2": 0.49927584211591913}, {"determining": "( ( FirstVNF_CPU - DDR ) + ( ( ( FirstVNF_RAM_Server / DDR ) * Min( PN ,Min( MDR ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) * PN ) )", "choosing": "( ( Max( Min( ( MLU - RCSe ) ,RMSe ),( MUC + CS ) ) / DS ) / ( CS * ( MUM + ( MUM - Min( MUM ,Max( MUC,MLU ) ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5390355925800777}, {"determining": "Min( ( ( ( PN + ( AMS * RRS ) ) + ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( MRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( PN + CRS ) )", "choosing": "( ( Max( ( RMSe - ( ( ( Max( MUM,MUC ) * ( MUM + DS ) ) / ( ( DS * MLU ) + CS ) ) / Min( MUM ,DS ) ) ),( DS - ( RMSe - Min( CS ,( MLU * Max( CS,RRSe ) ) ) ) ) ) / DS ) / ( ( Max( MUC,( RCSe + MUC ) ) - ( RCSe + MUC ) ) / ( MUM + MLU ) ) )", "obj1": 0.4163265306122449, "obj2": 0.4275766726937554}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( Const - ( FirstVNF_Mem + Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ) ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * ( Min( RMSe ,Max( RRSe,MLU ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5326530612244897, "obj2": 0.3219688781257353}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.18571428571428572, "obj2": 0.7485183329955372}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) + ( ( MLU * RRSe ) * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.40585943766444865}, {"determining": "( ( Max( Max( CRS,RRS ),( PN - ( MDR + ARS ) ) ) + ( MRS - BR ) ) - MDR )", "choosing": "( ( Max( ( CS + DS ),Min( DS ,RMSe ) ) / ( MUC * ( RMSe * MUR ) ) ) / ( Min( MUC ,( RMSe - ( Min( CS ,( MUM + Max( MLU,RMSe ) ) ) - DS ) ) ) * Min( MUM ,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5004616654333149}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( MRS - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.336458539877103}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( BR,( FirstVNF_Mem - AMS ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( CS / RMSe ) ) - ( CS * Min( Min( Min( Min( MUM ,RMSe ) ,( RRSe + MLU ) ) ,MUR ) ,DS ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7931803305604016}, {"determining": "( ( BR + ( PN - ( AMS * MRS ) ) ) - ( MDR + ( Min( Min( Min( AMS ,PN ) ,AMS ) ,( ( BR + CRS ) + ( ACS - FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM ,MDR ) ) ) )", "choosing": "( ( MUR / ( ( RCSe / RMSe ) + ( MLU * RMSe ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) * Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.710204081632653, "obj2": 0.15652517666176524}, {"determining": "( ( Max( BR,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,FirstVNF_Mem_Server ) ) - Min( BR ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,MUR ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( RRS + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.14489795918367346, "obj2": 0.815624533394213}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( Max( FirstVNF_Mem,( BR + MRS ) ) * ( Max( ( CRS + CRS ),AMS ) - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MUR - Min( ( RMSe / DS ) ,RMSe ) ) / ( RRSe * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.48775510204081635, "obj2": 0.3591110717256019}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( FirstVNF_Mem_Server - Min( Max( FirstVNF_Mem_Server,BR ) ,AMS ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * ( Min( RMSe ,CS ) * ( Max( Max( DS,RCSe ),MUM ) - RRSe ) ) ) * Max( RCSe,RRSe ) )", "obj1": 0.6612244897959184, "obj2": 0.19705308197211172}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( ( Min( Max( ( Const / FirstVNF_CPU_Server ),( FirstVNF_CPU + RRS ) ) ,( ( ( ( PN * ARS ) + ( CRS - MDR ) ) + FirstVNF_RAM ) * ( PN / Min( ( CRS / DDR ) ,ACS ) ) ) ) / DDR ) - Max( MDR,BR ) ) - Min( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) ,Min( CRS ,( CRS / ( Const / Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MUR / ( RRSe + RCSe ) ) ,MLU ) / DS ) / ( Min( ( ( CS + ( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( ( ( Max( ( MUM * CS ),( RMSe / DS ) ) - ( RCSe * CS ) ) / ( MUM * MLU ) ),DS ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.037695894294691924}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,BR ) ) - Min( FirstVNF_RAM_Server ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( ( RMSe - CS ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.825367848121721}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.1816421038960686}, {"determining": "Min( ( ( BR + ( DDR - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( MRS + RRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe * MLU ) - MUC ) / ( ( ( RCSe * MUC ) + MUM ) / MUR ) ) ) - ( MUM - Max( ( CS - Min( Min( DS ,Min( DS ,RMSe ) ) ,MUR ) ),MUC ) ) )", "obj1": 0.6061224489795919, "obj2": 0.2493609324131629}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( PN - MRS ) * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5918367346938775, "obj2": 0.26178373033076385}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8366889583145917}, {"determining": "( ( ARS - FirstVNF_Mem ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / ( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ) / ( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * ( RRSe - ( RCSe * ( MUC + RMSe ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7179818774260797}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem,MDR ) ) )", "choosing": "( DS * ( ( Max( Min( DS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( ( ( RCSe + MUR ) / ( DS / RMSe ) ) / MUR ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.16122448979591836, "obj2": 0.7874159088341105}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( CRS ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( CS + DS ) + RRSe ) ),MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8572009760966992}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ),BR ) ) - ( MDR / DDR ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * Min( Min( Min( Min( MUM ,RMSe ) ,( RRSe + MLU ) ) ,MUR ) ,DS ) ) )", "obj1": 0.9673469387755103, "obj2": 0.010731437306201469}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4775510204081633, "obj2": 0.38659419691435964}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + CRS ),FirstVNF_RAM_Server ) - ( BR / FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.9551020408163265, "obj2": 0.017311730866469748}, {"determining": "( ( BR + FirstVNF_RAM ) - ( MDR + ( ( FirstVNF_CPU_Server + CRS ) * ( ( Max( ( FirstVNF_CPU + RRS ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUM / MUC ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.08979591836734693, "obj2": 0.885260233412831}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem - FirstVNF_CPU ) + ( ( AMS - Min( Const ,ARS ) ) - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) * DDR ) ) ) ,( MDR + Max( BR,( ( MRS + MDR ) + PN ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * RCSe ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + ( Min( CS ,RRSe ) * ( Max( MUC,MUR ) * RMSe ) ) ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.41020408163265304, "obj2": 0.43268778464820434}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( MUC / ( ( MLU * RCSe ) * Min( RMSe ,CS ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18806128394002297}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + Max( ( DDR - FirstVNF_RAM_Server ),( RRS * ACS ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( MLU,( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUC,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5510204081632653, "obj2": 0.305000174780925}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( ( Max( RCSe,MLU ) / DS ) + ( ( CS + DS ) * Max( MUC,CS ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12900152579009463}, {"determining": "( ( ( Min( Max( ( ( ( FirstVNF_RAM + BR ) - DDR ) - MRS ),( FirstVNF_Mem + RRS ) ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,PN ) ) - ( MDR / DDR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( MUR / ( MUR - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RCSe / RRSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( DS * Max( Max( ( RMSe * MUM ),RMSe ),RCSe ) ) ),Max( DS,MUR ) ) )", "obj1": 0.6979591836734694, "obj2": 0.16977006940079173}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( Const + FirstVNF_CPU_Server ) + RRS ) ) ,( ( PN / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RRSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5653061224489796, "obj2": 0.29460966606836236}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.47551020408163264, "obj2": 0.3893318164221283}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( PN / ( FirstVNF_CPU / BR ) ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8590972101065282}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6325607209721011}, {"determining": "( ( FirstVNF_CPU - ( MRS * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( Max( ( ( DS * ( Min( CS ,MUR ) * RMSe ) ) * RRSe ),MLU ) / RCSe ) * MUM ) + ( Max( Min( DS ,RMSe ),( CS + DS ) ) - ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Min( Min( DS ,RMSe ) ,( CS + DS ) ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( MLU,( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5510204081632653, "obj2": 0.305000174780925}, {"determining": "( Min( ( ( ( AMS / ( ( ACS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) + FirstVNF_CPU ) / Const ) ,DDR ) - ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_Mem,( RRS * RRS ) ) / CRS ) ) + AMS ) * DDR ) + ( ( Max( ( FirstVNF_Mem + ( ( BR / DDR ) - MDR ) ),FirstVNF_RAM ) / AMS ) + RRS ) ) )", "choosing": "( ( ( MLU / MLU ) + ( RCSe - Min( RMSe ,( ( MLU + Max( RMSe,RCSe ) ) * ( Min( Max( CS,MUC ) ,( DS - RMSe ) ) / ( MLU - MLU ) ) ) ) ) ) / ( Min( ( ( RMSe + ( ( CS + DS ) * ( ( MUM * MLU ) * ( DS / MUC ) ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.573469387755102, "obj2": 0.2827939583231777}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Min( RMSe ,CS ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.48367346938775513, "obj2": 0.364217120347345}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( Max( ( MDR / PN ),( RRS * FirstVNF_RAM ) ) - ( MDR / DDR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( RMSe / Max( RCSe,RCSe ) ) ) - Max( Min( DS ,RMSe ),( MLU * ( DS / RMSe ) ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ),( Min( ( ( Max( DS,DS ) * MUR ) + RMSe ) ,Min( MUM ,RRSe ) ) + DS ) ) )", "obj1": 0.7755102040816326, "obj2": 0.10574378411917836}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( ( PN - ( AMS * RRS ) ) - RRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.895117750198529}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( PN ,( FirstVNF_RAM_Server - RRS ) ) ) ) - ( MDR * BR ) )", "choosing": "( ( CS + MUR ) / ( ( CS * DS ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Max( RRSe,( DS + RRSe ) ) + ( Max( ( ( MUM - RMSe ) * ( MUC - MLU ) ),RMSe ) / Max( MUC,( RCSe * MUC ) ) ) ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08673125728134591}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( ( ( DDR - FirstVNF_RAM_Server ) / ( ( DDR * ( ( ( AMS + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.7139769993790087}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( Min( MUR ,RMSe ) ,RMSe ) / MUR ) )", "obj1": 0.19183673469387755, "obj2": 0.7459133200151142}, {"determining": "( ( BR + ( PN - ( AMS * ( MDR / ( MDR * CRS ) ) ) ) ) - ( MDR + ( ( MRS + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( RMSe ,MUR ) / ( ( ( DS / RMSe ) / DS ) - Max( ( ( RCSe * MUR ) + Min( MLU ,MUC ) ),( CS + DS ) ) ) ) )", "obj1": 0.6551020408163265, "obj2": 0.21272842978800136}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.4, "obj2": 0.4499198954871532}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - Max( ( DDR / PN ),ARS ) )", "choosing": "( ( Max( ( Min( ( Min( MUM ,MLU ) - MUR ) ,RRSe ) - RCSe ),RMSe ) / Max( ( Max( RRSe,( RRSe + ( MUR - Min( CS ,MLU ) ) ) ) + ( MLU / MUC ) ),( Min( CS ,MUR ) * ( MUR / ( ( DS * CS ) / ( CS / MUR ) ) ) ) ) ) / ( CS / CS ) )", "obj1": 0.7551020408163265, "obj2": 0.11815819952191906}, {"determining": "( ( BR + ( PN - ( AMS * CRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + Const ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * ( MUR + CS ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.024310020963595167}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( MRS + FirstVNF_RAM ) ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7224489795918367, "obj2": 0.14020174281760836}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ACS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC * MUR ) / ( MLU * RCSe ) ) + ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( ( ( CS - MUM ) + DS ) - Max( ( Min( MUM ,RRSe ) + Max( CS,RRSe ) ),Min( RMSe ,MLU ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6088329901482722}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * Const ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( Min( ( DDR - AMS ) ,FirstVNF_Mem_Server ) - ( ( RRS - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( MLU ,CS ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / ( ( MLU * RCSe ) / ( MUC * MUR ) ) ) / ( RMSe / Min( ( DS + MLU ) ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.23061224489795917, "obj2": 0.7094194719584621}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( PN / FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( Min( RMSe ,( DS / RMSe ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7163265306122449, "obj2": 0.14370759012406034}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( ARS + FirstVNF_Mem_Server ) ) ) * PN ) )", "choosing": "( MUR * ( RMSe + MUM ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( ( Min( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( MLU,RRSe ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( Max( RMSe,RMSe ) + RRSe ) ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.050243717864528636}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR / ( ( Max( ( FirstVNF_CPU_Server + ( ARS / MRS ) ),( MRS - DDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( ( Min( MUR ,RMSe ) + MUC ) ,MUR ) ),( ( MUR * ( Min( RRSe ,( MUC - RRSe ) ) / DS ) ) / RRSe ) )", "obj1": 0.9020408163265307, "obj2": 0.042248482265548476}, {"determining": "( ( Max( BR,( Min( ( FirstVNF_Mem + FirstVNF_CPU ) ,MRS ) + PN ) ) - FirstVNF_CPU ) + ( DDR + ARS ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Max( DS,CS ) + Max( DS,MUR ) ) / RMSe ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RMSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RMSe ) ) ) ) ) ) / ( ( CS / MLU ) * ( ( RMSe - ( DS / DS ) ) * RMSe ) ) )", "obj1": 0.2673469387755102, "obj2": 0.6583274521056255}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "( ( RRS + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( ( MUC - RRSe ) ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8433164843460299}, {"determining": "( ( ( ( CRS + FirstVNF_CPU_Server ) * ( ( Const - DDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( Const - MDR ) ) * PN ) )", "choosing": "( ( ( CS * RRSe ) / Min( MLU ,( ( MUM - MLU ) / RRSe ) ) ) * CS )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6497226629297939}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( Max( MDR,PN ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,( DS / RMSe ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5897959183673469, "obj2": 0.27131734319619133}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + Const ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * DS ) ) + ( ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8979591836734694, "obj2": 0.043125119580205}, {"determining": "( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5430428131692409}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) * ( ( Max( ( FirstVNF_CPU + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6224489795918368, "obj2": 0.23831996725357066}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server + RRS ) ) - FirstVNF_Mem_Server ) * MDR ) ) ) ) ,( ( ( ARS * ACS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( MLU,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.21953496195018324}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.7836734693877551, "obj2": 0.09584810826660187}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( MUR + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.27566166380728824}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6628343951317817}, {"determining": "( ( BR + ( FirstVNF_CPU - ( RRS * AMS ) ) ) - ( MDR + ( DDR * ( ( Max( ( CRS / ACS ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( ( RRSe / Min( Max( CS,( MLU / MLU ) ) ,CS ) ) * ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.028868928218730886}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.6689694473572437}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( ( Const + FirstVNF_Mem_Server ) / DDR ) ) ) + ( DDR - ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MLU ,RMSe ) / ( MUM + Max( MUM,RRSe ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5960390535543619}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Max( Min( ( DS - ( CS / RMSe ) ) ,( RRSe / CS ) ),DS ),MLU ) / DS ) / ( Min( ( Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.39387755102040817, "obj2": 0.45526095277769785}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / CRS ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / FirstVNF_RAM ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,Min( RMSe ,Max( MLU,MUM ) ) ) * ( MUR + CS ) ),( ( MLU / RMSe ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8433164843460299}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server - DDR ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Min( RMSe ,MUC ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( CS - Min( MLU ,RRSe ) ) + ( ( RCSe / MUC ) * MUR ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.7775510204081633, "obj2": 0.09876323132985669}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( MLU * ( MUR * RMSe ) ) )", "obj1": 0.8530612244897959, "obj2": 0.06746870439517136}, {"determining": "( ( Max( ( RRS - Const ),( FirstVNF_RAM_Server - ACS ) ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( Max( RCSe,RCSe ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / MUC ) + Min( MUC ,MUR ) ) )", "obj1": 0.3877551020408163, "obj2": 0.46203579554427116}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.6754352234836752}, {"determining": "( ( ( Min( Max( ( ( ( FirstVNF_RAM + BR ) - DDR ) - MRS ),( FirstVNF_Mem + RRS ) ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,PN ) ) - ( MDR / DDR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( MUR / ( MUR - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RCSe / RRSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( DS * Max( Max( ( RMSe * MUM ),RMSe ),RCSe ) ) ),Max( DS,MUR ) ) )", "obj1": 0.6938775510204082, "obj2": 0.17108952865490681}, {"determining": "( ( ( Min( ( ( ( DDR / AMS ) - MDR ) - ( ( Const * CRS ) / ARS ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( BR,MDR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ) * Min( Min( DS ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),Max( CS,DS ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.07398204894489384}, {"determining": "( ( BR + ( RRS - ( AMS * RRS ) ) ) - ( MDR + ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) * ( Min( Max( MDR,MRS ) ,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUC ) ) / ( Min( CS ,MLU ) * ( MUR * Min( ( RMSe + Max( MUR,RCSe ) ) ,Max( Min( ( MUC / CS ) ,Min( MUM ,RRSe ) ),DS ) ) ) ) ) + ( ( ( DS - Min( ( ( ( MUM / MUR ) * ( DS + MUM ) ) / Max( ( MUR + RRSe ),MLU ) ) ,( MLU + ( ( CS + RRSe ) * ( RCSe / RCSe ) ) ) ) ) * MUC ) * RCSe ) )", "obj1": 0.9285714285714286, "obj2": 0.028868928218730886}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.08400771406527778}, {"determining": "Min( Min( MDR ,( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ,( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / Max( MUC,( RCSe + MUC ) ) ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Max( RRSe,( ( CS + DS ) + RRSe ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6448979591836734, "obj2": 0.21595639494375252}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.2938775510204082, "obj2": 0.6208306171300667}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( MUR * RMSe ),Min( Max( MLU,RRSe ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.0828839974527152}, {"determining": "( ( Const - ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server - DDR ) / DDR ) ) ,PN ) ) ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),RMSe ) / Max( MUC,( RCSe * MUC ) ) ) ,RMSe ) / MUR ) )", "obj1": 0.7387755102040816, "obj2": 0.1252458345951374}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( Const + FirstVNF_Mem_Server ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MUM + Max( MUM,RRSe ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.10930126524627153}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7343729944638412}], "24": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( MUR * RMSe ),Min( Max( MLU,RRSe ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( Min( DS ,RMSe ) + RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( AMS - ( FirstVNF_CPU / ( ( ( PN * DDR ) + FirstVNF_RAM ) * ( FirstVNF_Mem_Server / PN ) ) ) ) ) - MRS )", "choosing": "( ( ( DS - DS ) * Max( Max( MUC,( RCSe + MUC ) ),MUM ) ) / ( Max( RRSe,MLU ) / ( ( ( RMSe / MUR ) + RRSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - MDR ) * FirstVNF_CPU ) ) * FirstVNF_Mem ) ) ) ) ,( MDR + ( ( ( Max( ( ( ACS / BR ) + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.5434101738163257}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.7742025501847452}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( RRS - ( ARS - FirstVNF_RAM_Server ) ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) * Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,( Const / DDR ) ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( Min( CS ,MLU ) * ( MUR * RMSe ) ) / ( ( MUM * RCSe ) / ( MUC * MUR ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( ( DS / RMSe ) ,RMSe ),( CS + DS ) ) ) - Max( ( Min( RMSe ,RMSe ) - Max( Max( RMSe,Min( ( MLU / MUM ) ,MUM ) ),MUR ) ),( CS + DS ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.5939983984132309}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.49190921967429463}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Max( ( DDR / PN ),ARS ) ) )", "choosing": "( Max( ( Min( CS ,( ( MUR - Min( RRSe ,MLU ) ) * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.48367346938775513, "obj2": 0.358635090810027}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( MLU * ( MUR * RMSe ) ) )", "obj1": 0.8530612244897959, "obj2": 0.06746870439517136}, {"determining": "( ( Max( Max( CRS,RRS ),( PN - ( MDR + ARS ) ) ) + ( MRS - BR ) ) - MDR )", "choosing": "( ( Max( ( CS + DS ),Min( DS ,RMSe ) ) / ( MUC * ( RMSe * MUR ) ) ) / ( Min( MUC ,( RMSe - ( Min( CS ,( MUM + Max( MLU,RMSe ) ) ) - DS ) ) ) * Min( MUM ,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5004616654333149}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( Const - ( FirstVNF_Mem + Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ) ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * ( Min( RMSe ,Max( RRSe,MLU ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5326530612244897, "obj2": 0.32180766808117733}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) + ( ( MLU * RRSe ) * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.40585943766444865}, {"determining": "( ( Max( BR,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,FirstVNF_Mem_Server ) ) - Min( BR ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,MUR ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( PN * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + MUC ) ) ) * Min( Min( DS ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8673469387755102, "obj2": 0.05603432607676917}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6122122860443571}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.3448979591836735, "obj2": 0.5323088098629608}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.1816421038960686}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4775510204081633, "obj2": 0.38659419691435964}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MUM ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.41020408163265304, "obj2": 0.43231799577467966}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( FirstVNF_Mem_Server - Min( Max( FirstVNF_Mem_Server,BR ) ,AMS ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * ( Min( RMSe ,CS ) * ( Max( Max( DS,RCSe ),MUM ) - RRSe ) ) ) * Max( RCSe,RRSe ) )", "obj1": 0.6612244897959184, "obj2": 0.19705308197211172}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.7836734693877551, "obj2": 0.09584810826660187}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.5, "obj2": 0.33889984231412007}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * Min( MRS ,ARS ) ) ) ) ,( ( ( AMS * ACS ) + FirstVNF_RAM_Server ) * Max( ( Max( MRS,FirstVNF_CPU ) * FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "( ( Min( CS ,MLU ) * Max( Min( ( RCSe - ( ( ( RCSe + RCSe ) / RRSe ) / RRSe ) ) ,( MUR * DS ) ),Max( ( MUM - MUM ),DS ) ) ) / ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( MLU,RCSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.6530612244897959, "obj2": 0.20741092353781632}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( Const + FirstVNF_CPU_Server ) + RRS ) ) ,( ( PN / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RRSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5653061224489796, "obj2": 0.29460966606836236}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6497226629297939}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + RRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR / ( RRSe + RCSe ) ),MLU ) / DS ) / ( Min( ( ( CS + ( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.6224489795918368, "obj2": 0.23622000269453233}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_CPU_Server + RRS ) + ( PN * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + MUC ) ) ) * Min( Min( ( RMSe + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8040816326530612, "obj2": 0.08822818901627774}, {"determining": "( ( BR + FirstVNF_RAM ) - ( MDR + ( ( FirstVNF_CPU_Server + CRS ) * ( ( Max( ( FirstVNF_CPU + RRS ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUM / MUC ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.08979591836734693, "obj2": 0.885260233412831}, {"determining": "( Min( ( ( ( AMS / ( ( ACS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) + FirstVNF_CPU ) / Const ) ,DDR ) - ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_Mem,( RRS * RRS ) ) / CRS ) ) + AMS ) * DDR ) + ( ( Max( ( FirstVNF_Mem + ( ( BR / DDR ) - MDR ) ),FirstVNF_RAM ) / AMS ) + RRS ) ) )", "choosing": "( ( ( MLU / MLU ) + ( RCSe - Min( RMSe ,( ( MLU + Max( RMSe,RCSe ) ) * ( Min( Max( CS,MUC ) ,( DS - RMSe ) ) / ( MLU - MLU ) ) ) ) ) ) / ( Min( ( ( RMSe + ( ( CS + DS ) * ( ( MUM * MLU ) * ( DS / MUC ) ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.573469387755102, "obj2": 0.2827939583231777}, {"determining": "( ( Min( Max( ( DDR - MRS ),( ( Const + FirstVNF_CPU_Server ) + RRS ) ) ,( ( PN / FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - DDR ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RRSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.6082215031959434}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( PN - MRS ) * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5918367346938775, "obj2": 0.26178373033076385}, {"determining": "( ( ( Min( Max( ( ( ( FirstVNF_RAM + BR ) - DDR ) - MRS ),( FirstVNF_Mem + RRS ) ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,PN ) ) - ( MDR / DDR ) )", "choosing": "( ( Min( RCSe ,MUC ) / ( Min( DS ,MUC ) - ( CS * ( ( ( DS / RMSe ) / ( MUR / ( MUR - RCSe ) ) ) - Max( Min( DS ,RMSe ),( ( RCSe / RRSe ) + DS ) ) ) ) ) ) - Max( ( ( DS / RMSe ) / ( DS * Max( Max( ( RMSe * MUM ),RMSe ),RCSe ) ) ),Max( DS,MUR ) ) )", "obj1": 0.6938775510204082, "obj2": 0.17108952865490681}, {"determining": "( ( BR + ( PN - ( AMS * MRS ) ) ) - ( MDR + ( Min( Min( Min( AMS ,PN ) ,AMS ) ,( ( BR + CRS ) + ( ACS - FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM ,MDR ) ) ) )", "choosing": "( ( MUR / ( ( RCSe / RMSe ) + ( MLU * RMSe ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) * Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.710204081632653, "obj2": 0.15652517666176524}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.4, "obj2": 0.4499198954871532}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) - ( MDR - MRS ) ) * ( ( Max( ( FirstVNF_RAM_Server / DDR ),MRS ) / MRS ) / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RCSe * ( MUR + RMSe ) ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.18571428571428572, "obj2": 0.7485183329955372}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( MUC / ( ( MLU * RCSe ) * Min( RMSe ,CS ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18806128394002297}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( ( ( BR / FirstVNF_Mem ) - ( FirstVNF_CPU + CRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * Min( ( RMSe - MUM ) ,MUC ) ),MLU ) / DS ) / ( Min( RMSe ,( RCSe + MUC ) ) / MUR ) )", "obj1": 0.9122448979591836, "obj2": 0.03723191382511907}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "( ( RRS + ( PN - ( RRS * ( ( FirstVNF_RAM_Server - Min( ACS ,Const ) ) / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( MRS - ARS ) / DDR ) ) ) + ( MRS * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RCSe * MUM ) + DS ) + RRSe ) ) ) ) ) / ( Max( MUM,Max( MUM,( RCSe + ( ( RCSe + Min( MUR ,MUC ) ) * MUC ) ) ) ) * Min( RMSe ,DS ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8083718904820927}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.8326530612244898, "obj2": 0.07316501798823535}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( ( Const + FirstVNF_Mem_Server ) / DDR ) ) ) + ( DDR - ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),( CS + DS ) ) / DS ) / ( Min( MLU ,RMSe ) / ( MUM + Max( MUM,RRSe ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5960390535543619}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( FirstVNF_Mem_Server * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MUM ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + ( MLU / MUC ) ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.44285714285714284, "obj2": 0.417930088768825}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3816326530612245, "obj2": 0.46788968042858625}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( ( MRS / CRS ) + ( CRS / MDR ) ) * PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.828473143167192}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Max( BR,( ( MRS + MDR ) + PN ) ) ) )", "choosing": "( ( Max( Min( ( MLU - RCSe ) ,RMSe ),( MUC + CS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.42007201407225847}, {"determining": "Min( ( ( ( PN / ( ( Min( ARS ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( FirstVNF_RAM - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( Max( ( RMSe - ( ( ( Max( MUC,MUM ) * ( MUM + DS ) ) / ( DS - ( MLU * CS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,( RCSe + MUC ) ) / ( MLU + MLU ) ) )", "obj1": 0.336734693877551, "obj2": 0.5411618216122286}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( PN / ( FirstVNF_CPU / BR ) ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8590972101065282}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5224489795918368, "obj2": 0.33135036508533394}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7076150321591663}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( Max( FirstVNF_Mem,( BR + MRS ) ) * ( Max( ( CRS + CRS ),AMS ) - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MUR - Min( ( RMSe / DS ) ,RMSe ) ) / ( RRSe * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.3533713887222154}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( ( ( DDR - FirstVNF_RAM_Server ) / ( ( DDR * ( ( ( AMS + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.7139769993790087}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / Max( DDR,AMS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( CS + MUR ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( ( RMSe * DS ) * Max( MUM,Max( ( ( CS + ( CS / MUM ) ) + ( Min( RRSe ,RMSe ) + Min( RMSe ,MUM ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8537576387639423}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - ( FirstVNF_CPU / ( BR * ACS ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * Min( Max( MLU,MUR ) ,Max( Min( ( MUC / CS ) ,Min( MUM ,RRSe ) ),DS ) ) ) ) ) + ( Min( ( RMSe - DS ) ,Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8836734693877552, "obj2": 0.05389403215116505}, {"determining": "( ( FirstVNF_CPU - ( MRS * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( Max( ( ( DS * ( Min( CS ,MUR ) * RMSe ) ) * RRSe ),MLU ) / RCSe ) * MUM ) + ( Max( Min( DS ,RMSe ),( CS + DS ) ) - ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Min( Min( DS ,RMSe ) ,( CS + DS ) ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( ARS + FirstVNF_Mem_Server ) ) ) * PN ) )", "choosing": "( MUR * ( RMSe + MUM ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( BR + ( PN * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( ( AMS / ( RRS * BR ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( MUR ,Min( MUM ,MUM ) ) * ( MUR + CS ) ) / ( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) / Max( RRSe,MLU ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( ( Min( RCSe ,DS ) * ( RMSe * CS ) ) ,Max( MUR,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.6040816326530613, "obj2": 0.24945160448069523}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( ( PN - ( AMS * RRS ) ) - RRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.895117750198529}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / FirstVNF_RAM ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,DS ) ),Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8389712038014271}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - Max( ( DDR / PN ),ARS ) )", "choosing": "( ( Max( ( Min( ( Min( MUM ,MLU ) - MUR ) ,RRSe ) - RCSe ),RMSe ) / Max( ( Max( RRSe,( RRSe + ( MUR - Min( CS ,MLU ) ) ) ) + ( MLU / MUC ) ),( Min( CS ,MUR ) * ( MUR / ( ( DS * CS ) / ( CS / MUR ) ) ) ) ) ) / ( CS / CS ) )", "obj1": 0.7551020408163265, "obj2": 0.11815819952191906}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ),BR ) ) - ( MDR / DDR ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * Min( Min( Min( Min( MUM ,RMSe ) ,( RRSe + MLU ) ) ,MUR ) ,DS ) ) )", "obj1": 0.9673469387755103, "obj2": 0.010731437306201469}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( MLU,( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5510204081632653, "obj2": 0.305000174780925}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( MLU,( ( MLU / MUC ) + Max( RRSe,( ( Min( MUM ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5591836734693878, "obj2": 0.3038397273282587}, {"determining": "( ( BR + ( Max( ARS,( Const - FirstVNF_Mem_Server ) ) - ( Const * RRS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( AMS * RRS ) ) ) ) )", "choosing": "( ( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) - Max( ( CS + DS ),Min( DS ,Max( RMSe,CS ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,( MUC / ( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.032708818687840195}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( Min( MUR ,RMSe ) ,RMSe ) / MUR ) )", "obj1": 0.19183673469387755, "obj2": 0.7459133200151142}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,( RRSe * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( RMSe ,DS ) * Max( RMSe,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.4530612244897959, "obj2": 0.4118298003014171}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ACS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC * MUR ) / ( MLU * RCSe ) ) + ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( ( ( CS - MUM ) + DS ) - Max( ( Min( MUM ,RRSe ) + Max( CS,RRSe ) ),Min( RMSe ,MLU ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6088329901482722}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( MUR + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.27566166380728824}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUM / MUC ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.45671206230234307}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3816326530612245, "obj2": 0.46788968042858625}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.7448979591836735, "obj2": 0.12039978033064115}, {"determining": "( ( RRS + ( PN - ( RRS * ( Min( ( FirstVNF_CPU * RRS ) ,DDR ) / Min( ( FirstVNF_CPU + ( CRS / CRS ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( DS * ( ( Max( Min( ( ( RMSe / DS ) / ( RMSe - CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - Min( Max( MUR,RCSe ) ,MLU ) ) ) - Max( Min( MLU ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8170904939011532}, {"determining": "( ( RRS + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.14489795918367346, "obj2": 0.815624533394213}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "Max( ( RRSe / ( Max( ( ( RRSe * ( MUR * ( MUR * RRSe ) ) ) * MUC ),RMSe ) - ( DS / RMSe ) ) ),( ( CS / DS ) + Min( MUC ,Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ) ) )", "obj1": 0.35918367346938773, "obj2": 0.49927584211591913}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8366889583145917}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - AMS ) ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) + Min( ARS ,MRS ) ) ) / Max( ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ),( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( ( MUR * RMSe ) * Min( CS ,MLU ) ) ) + Min( ( MLU - MUC ) ,Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "( ( BR + ( PN - ( AMS * CRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + Const ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / ( ( DS * MLU ) + Max( CS,( Max( MUC,Max( DS,CS ) ) + Min( RMSe ,( Min( RCSe ,MUC ) * DS ) ) ) ) ) ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MLU ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.019393111823964946}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.08400771406527778}, {"determining": "( ( ( Min( ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( MLU,RRSe ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( Max( RMSe,RMSe ) + RRSe ) ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.050217464183608666}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RRSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.6579717253979337}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( BR,( FirstVNF_Mem - AMS ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( CS / RMSe ) ) - ( CS * Min( Min( Min( Min( MUM ,RMSe ) ,( RRSe + MLU ) ) ,MUR ) ,DS ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7931803305604016}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.18571428571428572, "obj2": 0.7485183329955372}, {"determining": "( ( ( ( CRS + FirstVNF_CPU_Server ) * ( ( Const - DDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( Const - MDR ) ) * PN ) )", "choosing": "( ( ( CS * RRSe ) / Min( MLU ,( ( MUM - MLU ) / RRSe ) ) ) * CS )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + Const ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( Min( CS ,MUR ) * ( MUR / ( ( DS - CS ) / ( CS / MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( RMSe ,MUC ) ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.9020408163265307, "obj2": 0.04207707656766063}, {"determining": "( ( ARS + FirstVNF_RAM ) - ( ( ( FirstVNF_RAM / MDR ) + ( CRS / MDR ) ) + Min( ( FirstVNF_Mem_Server - MRS ) ,MDR ) ) )", "choosing": "( ( Max( RRSe,Max( RMSe,MLU ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) + ( MLU * RMSe ) ) )", "obj1": 0.7020408163265306, "obj2": 0.16165077411078924}, {"determining": "( ( BR + ( PN - ( RRS - ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Max( PN,RRS ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe * CS ) * MUM ) / Max( ( Min( ( MUR + CS ) ,MUR ) * Min( MUR ,CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( MUM + RCSe ) - RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RRSe + MUC ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.718698464846735}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) )", "obj1": 0.5244897959183673, "obj2": 0.3245491779769818}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem,MDR ) ) )", "choosing": "( DS * ( ( Max( Min( DS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( ( ( RCSe + MUR ) / ( DS / RMSe ) ) / MUR ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.16122448979591836, "obj2": 0.7874159088341105}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) - ( Const / CRS ) ) + FirstVNF_CPU ) * DDR ) + ( PN - ( RRS * AMS ) ) ) - ( MDR + ( ( Max( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( Min( MUM ,MUR ),MLU ) / DS ) + ( Max( CS,MUC ) * ( MLU + DS ) ) ) / ( DS - RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12900152579009463}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + Max( ( DDR - FirstVNF_RAM_Server ),( RRS * ACS ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( MLU,( ( MLU / MUC ) + Max( RRSe,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUC,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5510204081632653, "obj2": 0.305000174780925}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( MUR * RMSe ),Min( Max( MLU,RRSe ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.0828839974527152}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.3448979591836735, "obj2": 0.5323088098629608}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( DDR - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) / DDR ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.47551020408163264, "obj2": 0.3893318164221283}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( Max( MDR,PN ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,( DS / RMSe ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5857142857142857, "obj2": 0.2713694624594887}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4204081632653061, "obj2": 0.425125031451684}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( FirstVNF_CPU + RRS ) )", "choosing": "( ( Max( ( ( MUC / ( Max( MUC,( RCSe + MUC ) ) * Min( RMSe ,CS ) ) ) * RCSe ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.9897959183673469, "obj2": 0.00638448170678353}, {"determining": "Min( ( ( ( PN + ( AMS * RRS ) ) + ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( MRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( PN + CRS ) )", "choosing": "( ( Max( ( RMSe - ( ( ( Max( MUM,MUC ) * ( MUM + DS ) ) / ( ( DS * MLU ) + CS ) ) / Min( MUM ,DS ) ) ),( DS - ( RMSe - Min( CS ,( MLU * Max( CS,RRSe ) ) ) ) ) ) / DS ) / ( ( Max( MUC,( RCSe + MUC ) ) - ( RCSe + MUC ) ) / ( MUM + MLU ) ) )", "obj1": 0.4163265306122449, "obj2": 0.4275766726937554}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( Const + FirstVNF_Mem_Server ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MUM + Max( MUM,RRSe ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.10930126524627153}], "25": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( FirstVNF_CPU_Server * Min( Min( BR ,FirstVNF_RAM ) ,RRS ) ) ) / DDR ) - Min( MDR ,BR ) ) - ( FirstVNF_CPU / ( ACS * BR ) ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * Min( Max( MLU,MUR ) ,( MUC - MUR ) ) ) ) ) + ( Min( ( RMSe - DS ) ,Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( MUR * RMSe ),Min( Max( MLU,RRSe ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( Min( DS ,RMSe ) + RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + Max( Max( FirstVNF_Mem_Server,MRS ),ACS ) ) + Min( BR ,( DDR * ( ( RRS * DDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MUR + MLU ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( RRSe,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( Max( Min( Min( FirstVNF_CPU ,( RRS - RRS ) ) ,( RRS * ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ),( PN - ( AMS * MRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( ( MUM / MUC ) * ( DS + MUR ) ) ) / Min( ( MLU - DS ) ,DS ) ) ),( CS + DS ) ) / RRSe ) / ( Max( DS,RCSe ) / MLU ) )", "obj1": 0.3, "obj2": 0.5872942692077027}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.550114329179044}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) - ( Const / CRS ) ) + FirstVNF_CPU ) * DDR ) + ( PN - ( RRS * AMS ) ) ) - ( MDR + ( ( Max( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( Min( MUM ,MUR ),MLU ) / DS ) + ( Max( CS,MUC ) * ( MLU + DS ) ) ) / ( DS - RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12900152579009463}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( BR + ( PN * ( FirstVNF_CPU_Server + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( DS + MLU ) / ( Min( RMSe ,DS ) * Max( RMSe,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.4530612244897959, "obj2": 0.4062698529600076}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.7836734693877551, "obj2": 0.09584810826660187}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( Const + FirstVNF_Mem_Server ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MUM + Max( MUM,RRSe ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.10930126524627153}, {"determining": "( ( Max( ( RRS - MRS ),Max( ( AMS * RRS ),PN ) ) + ( ( MRS / FirstVNF_CPU_Server ) - MRS ) ) - MDR )", "choosing": "( ( Max( RMSe,RRSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MUC ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( MUR ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.3979591836734694, "obj2": 0.44905631620317}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( Max( FirstVNF_RAM,RRS ) + PN ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Max( ( DDR / PN ),ARS ) ) )", "choosing": "( Max( ( Min( CS ,( ( MUR - Min( RRSe ,MLU ) ) * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( MLU * ( MUR * RMSe ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.5489795918367347, "obj2": 0.30221669962159925}, {"determining": "( ( ( ( ( ( ( MDR + ( DDR - FirstVNF_Mem_Server ) ) - PN ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + ( PN - ( AMS * RRS ) ) ) - ( ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + MDR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.11551219321487234}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( MUR / ( ( DS - MUM ) / ( CS / ( ( MLU * RMSe ) / RMSe ) ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.7163265306122449, "obj2": 0.15592328931169508}, {"determining": "( ( Max( Max( CRS,RRS ),( PN - ( MDR + ARS ) ) ) + ( MRS - BR ) ) - MDR )", "choosing": "( ( Max( ( CS + DS ),Min( DS ,RMSe ) ) / ( MUC * ( RMSe * MUR ) ) ) / ( Min( MUC ,( RMSe - ( Min( CS ,( MUM + Max( MLU,RMSe ) ) ) - DS ) ) ) * Min( MUM ,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5004616654333149}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( PN / ( FirstVNF_CPU / BR ) ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8590972101065282}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.7742025501847452}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.3818760322822361}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.49190921967429463}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.6691242932925423}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6122122860443571}, {"determining": "( ( Max( BR,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,FirstVNF_Mem_Server ) ) - Min( BR ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,MUR ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ACS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC * MUR ) / ( MLU * RCSe ) ) + ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( ( ( CS - MUM ) + DS ) - Max( ( Min( MUM ,RRSe ) + Max( CS,RRSe ) ),Min( RMSe ,MLU ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6088329901482722}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.41020408163265304, "obj2": 0.43067357310135396}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( RCSe * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4326530612244898, "obj2": 0.4127347553001453}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / Max( DDR,AMS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RRSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8477605838747077}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( RRS * AMS ) ) ) - ( DDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) ,( MDR + ( DDR * ( ( ( BR * MRS ) * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( Max( Max( ( RCSe * ( MLU / RRSe ) ),( MUM + MUR ) ),( CS + DS ) ) - ( Max( Min( ( ( ( RMSe / RMSe ) / RMSe ) / ( RRSe / CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( RRSe ,MUR ) ) ) ) ) )", "obj1": 0.5102040816326531, "obj2": 0.3287041944347083}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6448979591836734, "obj2": 0.20776488259941184}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( Const - ( FirstVNF_Mem + Max( ( ( FirstVNF_CPU + ( CRS / DDR ) ) - MRS ),( FirstVNF_CPU + RRS ) ) ) ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * ( Min( RMSe ,Max( MLU,MLU ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5387755102040817, "obj2": 0.31641644624990045}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5, "obj2": 0.33745788161645063}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6497226629297939}, {"determining": "( ( BR + ( PN * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( ( AMS / ( RRS * BR ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( MUR ,Min( MUM ,MUM ) ) * ( MUR + CS ) ) / ( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) / Max( RRSe,MLU ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( ( Min( RCSe ,DS ) * ( RMSe * CS ) ) ,Max( MUR,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.6040816326530613, "obj2": 0.24945160448069523}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.3448979591836735, "obj2": 0.5323088098629608}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( MLU,( ( MLU / MUC ) + Max( RRSe,( ( Min( DS ,CS ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5653061224489796, "obj2": 0.29450407665201606}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * Max( MUC,( RCSe + MUC ) ) ) ) ) )", "obj1": 0.6938775510204082, "obj2": 0.16723955960581688}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( FirstVNF_Mem_Server - Min( Max( FirstVNF_Mem_Server,BR ) ,AMS ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * ( Min( RMSe ,CS ) * ( Max( Max( DS,RCSe ),MUM ) - RRSe ) ) ) * Max( RCSe,RRSe ) )", "obj1": 0.6612244897959184, "obj2": 0.19705308197211172}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) + ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,RMSe ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( MLU ,CS ) * Max( MUC,Min( RCSe ,Max( RMSe,RMSe ) ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.34625083205125123}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( BR,( FirstVNF_Mem - AMS ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( CS / RMSe ) ) - ( CS * Min( Min( Min( Min( MUM ,RMSe ) ,( RRSe + MLU ) ) ,MUR ) ,DS ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7931803305604016}, {"determining": "( ( Const - FirstVNF_RAM ) + ( AMS + RRS ) )", "choosing": "( ( Max( RCSe,CS ) / DS ) / ( Min( Min( MUR ,Max( RCSe,( CS / Min( Max( MUC,CS ) ,MUC ) ) ) ) ,RMSe ) / MUR ) )", "obj1": 0.18979591836734694, "obj2": 0.7457376551409999}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem,MDR ) ) )", "choosing": "( DS * ( ( Max( Min( DS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( ( ( RCSe + MUR ) / ( DS / RMSe ) ) / MUR ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.16122448979591836, "obj2": 0.7874159088341105}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( AMS + FirstVNF_CPU ) + ( PN * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( Min( MLU ,Min( MUR ,MLU ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.029639824076873}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( FirstVNF_RAM - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( Max( FirstVNF_Mem,( BR + MRS ) ) * ( Max( ( CRS + CRS ),AMS ) - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( ( Max( ( MUR * RMSe ),Min( Max( MLU,RRSe ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) / ( RRSe * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.6816326530612244, "obj2": 0.1798787879196806}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3816326530612245, "obj2": 0.46788968042858625}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.18571428571428572, "obj2": 0.7485183329955372}, {"determining": "( ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.24081632653061225, "obj2": 0.6925441511152092}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_CPU_Server + RRS ) + ( PN * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + MUC ) ) ) * Min( Min( ( RMSe + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8, "obj2": 0.09110288753911772}, {"determining": "( ( FirstVNF_CPU - ( MRS * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( Max( ( ( DS * ( Min( CS ,MUR ) * RMSe ) ) * RRSe ),MLU ) / RCSe ) * MUM ) + ( Max( Min( DS ,RMSe ),( CS + DS ) ) - ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Min( Min( DS ,RMSe ) ,( CS + DS ) ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ) ) / DDR ) - Max( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ),BR ) ) - ( MDR / DDR ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * Min( Min( Min( Min( MUM ,RMSe ) ,( RRSe + MLU ) ) ,MUR ) ,DS ) ) )", "obj1": 0.9877551020408163, "obj2": 0.003765971932414051}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + Max( Min( FirstVNF_RAM ,MDR ),( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,Max( FirstVNF_Mem,PN ) )", "choosing": "( Max( ( Min( CS ,( RRSe * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( Max( MLU,Min( MUC ,MUR ) ) ,DS ) * Max( Min( RMSe ,( ( ( ( DS * MUM ) - CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.9693877551020408, "obj2": 0.0107154450375997}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * ( MDR - MRS ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),RCSe ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.07540066878432466}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( PN - MRS ) * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5918367346938775, "obj2": 0.26178373033076385}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MRS - ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,Const ) ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server + RRS ) ) - FirstVNF_Mem_Server ) * MDR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( MUR - CS ) * Min( ( ( MUR - MUC ) - MLU ) ,( ( DS + ( MLU + MUM ) ) + RMSe ) ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / Max( ( MUM - MUM ),DS ) )", "obj1": 0.963265306122449, "obj2": 0.01599991224517715}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( ARS + FirstVNF_Mem_Server ) ) ) * PN ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * ( RMSe + MUM ) ) * ( MUR * RMSe ) ) )", "obj1": 0.9469387755102041, "obj2": 0.019751571219913756}, {"determining": "( Max( MDR,( CRS / FirstVNF_CPU_Server ) ) - ( DDR * MDR ) )", "choosing": "( ( MUR / ( ( DS - MUM ) / Min( Max( ( Max( RRSe,DS ) + ( MUM * MUC ) ),( ( RMSe / CS ) * ( MLU / MUM ) ) ) ,RCSe ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) / Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.0616296344631137}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.08400771406527778}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( ( PN - ( AMS * RRS ) ) - RRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.895117750198529}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( ( MRS / CRS ) + ( CRS / MDR ) ) * PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.828473143167192}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUM / MUC ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.4714285714285714, "obj2": 0.3793993302047647}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - MDR ) * FirstVNF_CPU ) ) * FirstVNF_Mem ) ) ) ) ,( MDR + ( ( ( Max( ( ( ACS / BR ) + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.5434101738163257}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) )", "obj1": 0.5244897959183673, "obj2": 0.32426841770852344}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( ( ( BR / FirstVNF_Mem ) - ( FirstVNF_CPU + CRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * Min( ( RMSe - MUM ) ,MUC ) ),MLU ) / DS ) / ( Min( RMSe ,( RCSe + MUC ) ) / MUR ) )", "obj1": 0.9122448979591836, "obj2": 0.03723191382511907}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( PN * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + MUC ) ) ) * Min( Min( DS ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8673469387755102, "obj2": 0.05603432607676917}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( PN - MRS ) * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5979591836734693, "obj2": 0.2566295126347518}, {"determining": "( ( BR + ( PN - ( RRS - ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Max( PN,RRS ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe * CS ) * MUM ) / Max( ( Min( ( MUR + CS ) ,MUR ) * Min( MUR ,CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( MUM + RCSe ) - RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RRSe + MUC ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.718698464846735}, {"determining": "( Min( ( ( ( AMS / ( ( ACS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) + FirstVNF_CPU ) / Const ) ,DDR ) - ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_Mem,( RRS * RRS ) ) / CRS ) ) + AMS ) * DDR ) + ( ( Max( ( FirstVNF_Mem + ( ( BR / DDR ) - MDR ) ),FirstVNF_RAM ) / AMS ) + RRS ) ) )", "choosing": "( ( ( MLU / MLU ) + ( RCSe - Min( RMSe ,( ( MLU + Max( RMSe,RCSe ) ) * ( Min( Max( CS,MUC ) ,( DS - RMSe ) ) / ( MLU - MLU ) ) ) ) ) ) / ( Min( ( ( RMSe + ( ( CS + DS ) * ( ( MUM * MLU ) * ( DS / MUC ) ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.573469387755102, "obj2": 0.2827939583231777}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3816326530612245, "obj2": 0.46788968042858625}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2406201345870598}, {"determining": "Min( ( ( ( PN / ( ( Min( ARS ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( FirstVNF_RAM - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( Max( ( RMSe - ( ( ( Max( MUC,MUM ) * ( MUM + DS ) ) / ( DS - ( MLU * CS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,( RCSe + MUC ) ) / ( MLU + MLU ) ) )", "obj1": 0.336734693877551, "obj2": 0.5411618216122286}, {"determining": "( ( RRS + ( PN - ( RRS * ( Min( ( FirstVNF_CPU * RRS ) ,DDR ) / Min( ( FirstVNF_CPU + ( CRS / CRS ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( DS * ( ( Max( Min( ( ( RMSe / DS ) / ( RMSe - CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - Min( Max( MUR,RCSe ) ,MLU ) ) ) - Max( Min( MLU ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8170904939011532}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,( FirstVNF_RAM_Server - AMS ) ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) + Min( ARS ,MRS ) ) ) / Max( ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ),( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( ( MUR * RMSe ) * Min( CS ,MLU ) ) ) + Min( ( MLU - MUC ) ,Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "( ( RRS + ( PN - ( RRS * ( ( FirstVNF_RAM_Server - Min( ACS ,Const ) ) / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( MRS - ARS ) / DDR ) ) ) + ( MRS * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RCSe * MUM ) + DS ) + RRSe ) ) ) ) ) / ( Max( MUM,Max( MUM,( RCSe + ( ( RCSe + Min( MUR ,MUC ) ) * MUC ) ) ) ) * Min( RMSe ,DS ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8083718904820927}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUM / MUC ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.45671206230234307}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.4775510204081633, "obj2": 0.37076279795252315}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / FirstVNF_RAM ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,DS ) ),Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8389712038014271}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - ( FirstVNF_CPU / ( BR * ACS ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * Min( Max( MLU,MUR ) ,Max( Min( ( MUC / CS ) ,Min( MUM ,RRSe ) ),DS ) ) ) ) ) + ( Min( ( RMSe - DS ) ,Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8836734693877552, "obj2": 0.05389403215116505}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) - ( MDR - MRS ) ) * ( ( Max( ( FirstVNF_RAM_Server / DDR ),MRS ) / MRS ) / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RCSe * ( MUR + RMSe ) ),MLU ) / DS ) / ( Min( MUR ,RMSe ) / MUR ) )", "obj1": 0.18571428571428572, "obj2": 0.7485183329955372}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) * ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( ( ARS / FirstVNF_Mem ) + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( ( RRSe / ( RCSe * Min( MUM ,MLU ) ) ) / MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4857142857142857, "obj2": 0.3554300513662702}, {"determining": "( ( Min( Max( ( DDR - FirstVNF_CPU_Server ),( FirstVNF_CPU + RRS ) ) ,Min( BR ,( ( FirstVNF_RAM - BR ) - AMS ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( Max( ( MLU * ( ( MUR / MUR ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ),MLU ) / DS ) / ( ( RMSe / MUR ) / MUR ) )", "obj1": 0.8938775510204081, "obj2": 0.0482416034712074}, {"determining": "( ( Min( ( Const + MDR ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( MUR + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,( MUR + CS ) ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5693877551020409, "obj2": 0.28921194214791296}, {"determining": "( ( BR + ( PN - ( AMS * CRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + Const ),( DDR - MRS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / ( ( DS * MLU ) + Max( CS,( Max( MUC,Max( DS,CS ) ) + Min( RMSe ,( Min( RCSe ,MUC ) * DS ) ) ) ) ) ) / ( ( CS + MUR ) - Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( Max( ( ( MUM - RMSe ) * ( MLU - MLU ) ),Min( Max( RRSe,MLU ) ,Max( RRSe,MUC ) ) ) / Max( MUC,( RCSe * MUC ) ) ) + Max( RRSe,( DS + RRSe ) ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.019393111823964946}, {"determining": "( ( BR + ( PN - ( AMS * MRS ) ) ) - ( MDR + ( Min( Min( Min( AMS ,PN ) ,AMS ) ,( ( BR + CRS ) + ( ACS - FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM ,MDR ) ) ) )", "choosing": "( ( MUR / ( ( RCSe / RMSe ) + ( MLU * RMSe ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) * Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.710204081632653, "obj2": 0.15652517666176524}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7744951359543728}, {"determining": "( ( BR + ( PN - ( AMS * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( MRS - MDR ) ) ) )", "choosing": "( ( Max( MLU,RCSe ) / Max( ( MUC * RMSe ),( RMSe + CS ) ) ) / Min( MLU ,( MUR * RMSe ) ) )", "obj1": 0.6693877551020408, "obj2": 0.19108158910315404}, {"determining": "( ( ARS + FirstVNF_RAM ) - ( ( ( FirstVNF_RAM / MDR ) + ( CRS / MDR ) ) + Min( ( FirstVNF_Mem_Server - MRS ) ,MDR ) ) )", "choosing": "( ( Max( RRSe,Max( RMSe,MLU ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) + ( MLU * RMSe ) ) )", "obj1": 0.7020408163265306, "obj2": 0.16165077411078924}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6972371038462257}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * Min( MRS ,ARS ) ) ) ) ,( ( ( AMS * ACS ) + FirstVNF_RAM_Server ) * Max( ( Max( MRS,FirstVNF_CPU ) * FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "( ( Min( CS ,MLU ) * Max( Min( ( RCSe - ( ( ( RCSe + RCSe ) / RRSe ) / RRSe ) ) ,( MUR * DS ) ),Max( ( MUM - MUM ),DS ) ) ) / ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( MLU,RCSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.6530612244897959, "obj2": 0.20741092353781632}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.1816421038960686}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( CRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( Max( FirstVNF_Mem,( BR + MRS ) ) * ( Max( ( CRS + CRS ),AMS ) - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MUR - Min( ( RMSe / DS ) ,RMSe ) ) / ( RRSe * DS ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.4816326530612245, "obj2": 0.36829325558081066}, {"determining": "( ( RRS + ( ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( ( FirstVNF_RAM / RRS ),FirstVNF_Mem_Server ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Min( MUC ,( RCSe + MUC ) ) ) ) )", "obj1": 0.8734693877551021, "obj2": 0.055021038960346276}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( ( FirstVNF_CPU_Server + RRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR / ( RRSe + RCSe ) ),MLU ) / DS ) / ( Min( ( ( CS + ( ( DS / RMSe ) / ( RMSe / CS ) ) ) / ( RCSe + RCSe ) ) ,MUC ) * ( MUC + Max( MUM,MUR ) ) ) )", "obj1": 0.6224489795918368, "obj2": 0.23622000269453233}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Max( BR,( ( MRS + MDR ) + PN ) ) ) )", "choosing": "( ( Max( Min( ( MLU - RCSe ) ,RMSe ),( MUC + CS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.42007201407225847}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( MUC / ( ( MLU * RCSe ) * Min( RMSe ,CS ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18806128394002297}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( PN - MRS ) * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( PN,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / Min( CS ,( ( DS / RMSe ) / RMSe ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3673469387755102, "obj2": 0.4986635597286485}, {"determining": "( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Min( RMSe ,Max( Min( ( MLU - RCSe ) ,RMSe ),( MUC + CS ) ) ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8841160257048777}, {"determining": "( ( Max( ( RRS - ( ACS - MDR ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( MLU,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ),Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5364772524784645}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( ( DDR * ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) ) + ( DDR - ( ( DDR - CRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( DS ,RMSe ),RMSe ) / DS ) / ( Min( MLU ,RMSe ) / ( MUM + Max( MUM,RRSe ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03530631569954383}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RRSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.2673469387755102, "obj2": 0.6579717253979337}], "26": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem_Server + Const ) / DDR ) ) ,( RRS - Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + ( CRS * FirstVNF_CPU_Server ) ) ) ) ) ) ) - Max( MDR,MRS ) )", "choosing": "( ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) / ( ( MUM + Max( MUM,RRSe ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( MUC,RMSe ) ,RCSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,MLU ) ,( MUC * MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( FirstVNF_CPU_Server * Min( Min( BR ,FirstVNF_RAM ) ,RRS ) ) ) / DDR ) - Min( MDR ,BR ) ) - ( FirstVNF_CPU / ( ACS * BR ) ) )", "choosing": "( ( ( ( MLU / RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * Min( Max( MLU,MUR ) ,( MUC - MUR ) ) ) ) ) + ( Min( ( RMSe - DS ) ,Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + Max( Max( FirstVNF_Mem_Server,MRS ),ACS ) ) + Min( BR ,( DDR * ( ( RRS * DDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MUR + MLU ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( RRSe,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( Max( Min( Min( FirstVNF_CPU ,( RRS - RRS ) ) ,( RRS * ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ),( PN - ( AMS * MRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( ( MUM / MUC ) * ( DS + MUR ) ) ) / Min( ( MLU - DS ) ,DS ) ) ),( CS + DS ) ) / RRSe ) / ( Max( DS,RCSe ) / MLU ) )", "obj1": 0.3, "obj2": 0.5872942692077027}, {"determining": "( ( ARS / Const ) - ( Max( ( RRS - ( ACS * FirstVNF_Mem ) ),( PN - Max( BR,FirstVNF_CPU ) ) ) + Max( ( Max( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_Mem_Server + MDR ) ) ),DDR ) / ARS ),( Const / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( MUR,MLU ) / Max( ( Min( MUR ,RMSe ) * ( CS + ( RRSe + MUM ) ) ),Max( RMSe,( Max( RMSe,RCSe ) / CS ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( Min( DS ,Min( MUR ,MLU ) ) * MUM ),MUC ) ) ) )", "obj1": 0.31020408163265306, "obj2": 0.5613533861716032}, {"determining": "( ( Max( ( RRS - MRS ),( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.2510204081632653, "obj2": 0.6540195360626367}, {"determining": "( ( BR + ( PN - ( RRS - ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Max( PN,RRS ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe * CS ) * MUM ) / Max( ( Min( ( MUR + CS ) ,MUR ) * Min( MUR ,CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( MUM + RCSe ) - RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RRSe + MUC ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.718698464846735}, {"determining": "( ( Max( Max( CRS,RRS ),( PN - ( MDR + ARS ) ) ) + ( MRS - BR ) ) - MDR )", "choosing": "( ( Max( ( CS + DS ),Min( DS ,RMSe ) ) / ( MUC * ( RMSe * MUR ) ) ) / ( Min( MUC ,( RMSe - ( Min( CS ,( MUM + Max( MLU,RMSe ) ) ) - DS ) ) ) * Min( MUM ,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5004616654333149}, {"determining": "Min( ( ( ( PN - ( AMS * RRS ) ) + ( PN / ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ) - ( MDR + ( ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( MDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MLU / ( Max( MLU,RMSe ) * Max( MUM,Max( MUC,( DS + MUC ) ) ) ) )", "obj1": 0.4448979591836735, "obj2": 0.39759675141318773}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( FirstVNF_Mem + FirstVNF_CPU ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.23061224489795917, "obj2": 0.7055684909658194}, {"determining": "( ( ( PN - MRS ) + Max( ( RRS - MRS ),( PN - ( ( MDR - Const ) * RRS ) ) ) ) - MDR )", "choosing": "( ( DS / Max( Min( RMSe ,( ( Min( ( DS * MLU ) ,CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) ) / ( Min( Max( ( ( MUC + RRSe ) - MUR ),( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.3816326530612245, "obj2": 0.4649915911784685}, {"determining": "( ( Max( BR,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,FirstVNF_Mem_Server ) ) - Min( BR ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,MUR ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.3448979591836735, "obj2": 0.5323088098629608}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.49190921967429463}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( Const - ( FirstVNF_Mem + Max( ( ( FirstVNF_CPU + ( CRS / DDR ) ) - MRS ),( FirstVNF_CPU + RRS ) ) ) ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * ( Min( RMSe ,Max( MLU,MLU ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ) ) ) + ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5387755102040817, "obj2": 0.31641644624990045}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7163265306122449, "obj2": 0.15319126940887384}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) - ( Const / CRS ) ) + FirstVNF_CPU ) * DDR ) + ( PN - ( RRS * AMS ) ) ) - ( MDR + ( ( Max( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( Min( MUM ,MUR ),MLU ) / DS ) + ( Max( CS,MUC ) * ( MLU + DS ) ) ) / ( DS - RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12900152579009463}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.1816326530612245, "obj2": 0.7583386301091543}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) )", "obj1": 0.5224489795918368, "obj2": 0.3238093081086661}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6122122860443571}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - ( FirstVNF_CPU + ( CRS / DDR ) ) ) ) ) + ( DDR * ( ( Max( ( CRS + CRS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * BR ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( Min( CS ,( RRSe * RCSe ) ) * ( MUM - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( RMSe ,DS ) * Max( Min( RMSe ,( ( ( ( DS * MUM ) + Min( MUM ,RRSe ) ) / ( Max( MLU,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),Max( MUC,( DS - ( CS / RMSe ) ) ) ) ) )", "obj1": 0.7653061224489796, "obj2": 0.1091060603750617}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( MDR + ( CRS / FirstVNF_RAM ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ),Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8374522637087722}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( RRS * AMS ) ) ) - ( DDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) ,( MDR + ( DDR * ( ( ( BR * MRS ) * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( Max( Max( ( RCSe * ( MLU / RRSe ) ),( MUM + MUR ) ),( CS + DS ) ) - ( Max( Min( ( ( ( RMSe / RMSe ) / RMSe ) / ( RRSe / CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( RRSe ,MUR ) ) ) ) ) )", "obj1": 0.5102040816326531, "obj2": 0.3287041944347083}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5, "obj2": 0.33745788161645063}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.08400771406527778}, {"determining": "( ( Max( ( RRS - ( ( PN - ( AMS * RRS ) ) - RRS ) ),( PN - ( AMS * Max( ( DDR + Const ),FirstVNF_CPU_Server ) ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( ( CS - MUR ) * Max( ( ( ( MLU * MUM ) - Min( MLU ,MLU ) ) / MLU ),Max( RCSe,MUR ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.5463913306671689}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( MLU * RCSe ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.45714285714285713, "obj2": 0.38288439304909244}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( RCSe * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4326530612244898, "obj2": 0.4127347553001453}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( Max( FirstVNF_RAM,RRS ) + PN ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Max( ( DDR / PN ),ARS ) ) )", "choosing": "( Max( ( Min( CS ,( ( MUR - Min( RRSe ,MLU ) ) * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( MLU * ( MUR * RMSe ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.5489795918367347, "obj2": 0.30221669962159925}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.7742025501847452}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) + ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,RMSe ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( MLU ,CS ) * Max( MUC,Min( RCSe ,Max( RMSe,RMSe ) ) ) ) )", "obj1": 0.49183673469387756, "obj2": 0.34625083205125123}, {"determining": "( Min( FirstVNF_RAM ,PN ) - Max( MDR,( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + Max( BR,Min( ACS ,( DDR + FirstVNF_CPU_Server ) ) ) ) + Min( Max( ( FirstVNF_RAM_Server - MDR ),( CRS * MDR ) ) ,AMS ) ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * ( Min( RRSe ,CS ) + ( MLU * MUC ) ) ) + CS ) * ( RMSe * RMSe ) ) - MUC ) - ( MLU - RRSe ) ) / ( Min( CS ,( MUR / MLU ) ) * ( MUR / ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.27655007073750787}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( BR,( FirstVNF_Mem - AMS ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( CS / RMSe ) ) - ( CS * Min( Min( Min( Min( MUM ,RMSe ) ,( RRSe + MLU ) ) ,MUR ) ,DS ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7931803305604016}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem,MDR ) ) )", "choosing": "( DS * ( ( Max( Min( DS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( ( ( RCSe + MUR ) / ( DS / RMSe ) ) / MUR ) + Min( MUC ,MUR ) ) ) ) - Max( Min( DS ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.16122448979591836, "obj2": 0.7874159088341105}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.40816326530612246, "obj2": 0.43183823746543754}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( MUC / ( Min( RMSe ,DS ) * Min( RMSe ,CS ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6497226629297939}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ACS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC * MUR ) / ( MLU * RCSe ) ) + ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( ( ( CS - MUM ) + DS ) - Max( ( Min( MUM ,RRSe ) + Max( CS,RRSe ) ),Min( RMSe ,MLU ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6088329901482722}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.4714285714285714, "obj2": 0.37441581222788733}, {"determining": "( ( MDR + ( DDR * ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,AMS ) ) - ( BR / FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) - ( BR + ( PN - ( AMS * RRS ) ) ) )", "choosing": "( ( RMSe + ( CS / MUC ) ) / ( Min( ( MUC + RCSe ) ,RMSe ) / MUR ) )", "obj1": 0.9061224489795918, "obj2": 0.039061735769125444}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( PN * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( Min( ( MLU - RCSe ) ,RMSe ),( MUC + CS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.8448979591836735, "obj2": 0.06934648415055876}, {"determining": "( ( BR + ( PN - ( RRS * RRS ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( PN / ( FirstVNF_CPU / BR ) ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( MUR ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8590972101065282}, {"determining": "( ( ( ( ( ( ( MDR + ( DDR - FirstVNF_Mem_Server ) ) - PN ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + ( PN - ( AMS * RRS ) ) ) - ( ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + MDR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.11551219321487234}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( ( FirstVNF_CPU + Max( MDR,BR ) ) - ( BR / FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( ( ( ( DS + ( MUR * RMSe ) ) / Min( CS ,( MUM / CS ) ) ) + MUC ) ,RMSe ) / MUR ) )", "obj1": 0.9204081632653062, "obj2": 0.03173512549035231}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( ( MUR * RMSe ) * Min( CS ,MLU ) ) ) + Min( ( MLU - MUC ) ,Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.22029555500581255}, {"determining": "( ( Max( ( RRS - MRS ),Max( ( AMS * RRS ),PN ) ) + ( ( MRS / FirstVNF_CPU_Server ) - MRS ) ) - MDR )", "choosing": "( ( Max( RMSe,RRSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MUC ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( MUR ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.3979591836734694, "obj2": 0.44905631620317}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * Min( MRS ,ARS ) ) ) ) ,( ( ( AMS * ACS ) + FirstVNF_RAM_Server ) * Max( ( Max( MRS,FirstVNF_CPU ) * FirstVNF_RAM_Server ),CRS ) ) )", "choosing": "( ( Min( CS ,MLU ) * Max( Min( ( RCSe - ( ( ( RCSe + RCSe ) / RRSe ) / RRSe ) ) ,( MUR * DS ) ),Max( ( MUM - MUM ),DS ) ) ) / ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( MLU,RCSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.6530612244897959, "obj2": 0.20741092353781632}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( Max( MUC,( RCSe + MUC ) ) / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.05952707290266874}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( Const + FirstVNF_Mem_Server ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MUM + Max( MUM,RRSe ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.10930126524627153}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MRS - ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,Const ) ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server + RRS ) ) - FirstVNF_Mem_Server ) * MDR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( MUR - CS ) * Min( ( ( MUR - MUC ) - MLU ) ,( ( DS + ( MLU + MUM ) ) + RMSe ) ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / Max( ( MUM - MUM ),DS ) )", "obj1": 0.963265306122449, "obj2": 0.01599991224517715}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( MUC / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * Max( MUC,( RCSe + MUC ) ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.26558635052119645}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( ( MRS / CRS ) + ( CRS / MDR ) ) * PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.828473143167192}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( ACS ,FirstVNF_Mem ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( Min( RCSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( DS ,MUM ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUC / RMSe ) ) )", "obj1": 0.6877551020408164, "obj2": 0.17155947369786306}, {"determining": "( ( RRS + ( PN - ( RRS * ( Min( ( FirstVNF_CPU * RRS ) ,DDR ) / Min( ( FirstVNF_CPU + ( CRS / CRS ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( DS * ( ( Max( Min( ( ( RMSe / DS ) / ( RMSe - CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - Min( Max( MUR,RCSe ) ,MLU ) ) ) - Max( Min( MLU ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8170904939011532}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) * ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( ( ARS / FirstVNF_Mem ) + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( ( RRSe / ( RCSe * Min( MUM ,MLU ) ) ) / MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4857142857142857, "obj2": 0.3554300513662702}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.47551020408163264, "obj2": 0.36432758268965515}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * Max( MUC,( RCSe + MUC ) ) ) ) ) )", "obj1": 0.6938775510204082, "obj2": 0.16723955960581688}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( Max( FirstVNF_RAM,RRS ) + PN ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Max( ( DDR / PN ),ARS ) ) )", "choosing": "( Max( ( Min( CS ,( ( MUR - Min( RRSe ,MLU ) ) * RCSe ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( MLU * ( MUR * RMSe ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.5530612244897959, "obj2": 0.2982150096704466}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / MDR ) ) ,PN ) ) ) ) ) - ( Min( ( PN - ( AMS * RRS ) ) ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,MUC ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8561731948736007}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * ( ARS - Min( ACS ,AMS ) ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( Max( RCSe,RRSe ) - Max( ( ( ( RMSe / MUR ) + RRSe ) + ( RRSe * ( ( Min( MLU ,RRSe ) - RMSe ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.610204081632653, "obj2": 0.237766891682075}, {"determining": "( ( FirstVNF_CPU - ( MRS * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( Max( ( ( DS * ( Min( CS ,MUR ) * RMSe ) ) * RRSe ),MLU ) / RCSe ) * MUM ) + ( Max( Min( DS ,RMSe ),( CS + DS ) ) - ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Min( Min( DS ,RMSe ) ,( CS + DS ) ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "Min( ( ( BR + ( PN - ( FirstVNF_CPU_Server * RRS ) ) ) - ( MDR + ( DDR * Min( MRS ,ARS ) ) ) ) ,( FirstVNF_RAM_Server * ( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( Max( DS,MUR ) + RMSe ) ) + DS ),( ( Min( Max( MLU,RMSe ) ,RRSe ) - CS ) * Min( ( ( MUR - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / Min( MUC ,( ( Min( ( MUR / MUM ) ,RCSe ) / RCSe ) - RRSe ) ) )", "obj1": 0.6285714285714286, "obj2": 0.23242288260433186}, {"determining": "Min( ( ( ( PN / ( ( Min( ARS ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( FirstVNF_RAM - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( Max( ( RMSe - ( ( ( Max( MUC,MUM ) * ( MUM + DS ) ) / ( DS - ( MLU * CS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,( RCSe + MUC ) ) / ( MLU + MLU ) ) )", "obj1": 0.336734693877551, "obj2": 0.5411618216122286}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( AMS + FirstVNF_CPU ) + ( PN * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( Min( MLU ,Min( MUR ,MLU ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.029639824076873}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - MDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( Min( RMSe ,RMSe ) ,RMSe ) / MUR ) )", "obj1": 0.14489795918367346, "obj2": 0.8139829988829349}, {"determining": "( Min( ( ( ( AMS / ( ( ACS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) + FirstVNF_CPU ) / Const ) ,DDR ) - ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_Mem,( RRS * RRS ) ) / CRS ) ) + AMS ) * DDR ) + ( ( Max( ( FirstVNF_Mem + ( ( BR / DDR ) - MDR ) ),FirstVNF_RAM ) / AMS ) + RRS ) ) )", "choosing": "( ( ( MLU / MLU ) + ( RCSe - Min( RMSe ,( ( MLU + Max( RMSe,RCSe ) ) * ( Min( Max( CS,MUC ) ,( DS - RMSe ) ) / ( MLU - MLU ) ) ) ) ) ) / ( Min( ( ( RMSe + ( ( CS + DS ) * ( ( MUM * MLU ) * ( DS / MUC ) ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.573469387755102, "obj2": 0.2827939583231777}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * ( RMSe + MUM ) ) * ( MUR * RMSe ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3800987614915852}, {"determining": "( ( BR + ( PN - ( AMS * MRS ) ) ) - ( MDR + ( Min( Min( Min( AMS ,PN ) ,AMS ) ,( ( BR + CRS ) + ( ACS - FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM ,MDR ) ) ) )", "choosing": "( ( MUR / ( ( RCSe / RMSe ) + ( MLU * RMSe ) ) ) - ( ( ( CS - RRSe ) / ( MLU * DS ) ) / ( ( DS + ( MUR * RMSe ) ) * Min( CS ,( MUM / CS ) ) ) ) )", "obj1": 0.710204081632653, "obj2": 0.15652517666176524}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ARS ) ) / ( ( ( ( Const / DDR ) - ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ),PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( Min( Min( MUR ,RMSe ) ,RMSe ) / MUR ) ),( CS + DS ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.6475947328988904}, {"determining": "( ( BR + ( PN - ( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( ARS + FirstVNF_Mem_Server ) ) ) * PN ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * ( ( Max( ( MUR / ( RRSe + RCSe ) ),MLU ) / DS ) + MUM ) ) * ( MUR * RMSe ) ) )", "obj1": 0.9795918367346939, "obj2": 0.00650252140888778}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + RRS ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * ( DS / DS ) ) ) ) )", "obj1": 0.8408163265306122, "obj2": 0.07350607420072215}, {"determining": "Min( ( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( FirstVNF_Mem_Server - Min( Max( FirstVNF_Mem_Server,BR ) ,AMS ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * ( Min( RMSe ,CS ) * ( Max( Max( DS,RCSe ),MUM ) - RRSe ) ) ) * Max( RCSe,RRSe ) )", "obj1": 0.6612244897959184, "obj2": 0.19705308197211172}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUM / MUC ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.45671206230234307}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( ( ( BR / FirstVNF_Mem ) - ( FirstVNF_CPU + CRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * Min( ( RMSe - MUM ) ,MUC ) ),MLU ) / DS ) / ( Min( RMSe ,( RCSe + MUC ) ) / MUR ) )", "obj1": 0.9122448979591836, "obj2": 0.03723191382511907}, {"determining": "( ( RRS + ( PN - ( RRS * ( ( FirstVNF_RAM_Server - Min( ACS ,Const ) ) / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( MRS - ARS ) / DDR ) ) ) + ( MRS * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RCSe * MUM ) + DS ) + RRSe ) ) ) ) ) / ( Max( MUM,Max( MUM,( RCSe + ( ( RCSe + Min( MUR ,MUC ) ) * MUC ) ) ) ) * Min( RMSe ,DS ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8083718904820927}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - MDR ) * FirstVNF_CPU ) ) * FirstVNF_Mem ) ) ) ) ,( MDR + ( ( ( Max( ( ( ACS / BR ) + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.5434101738163257}, {"determining": "( ( BR + ( PN * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( ( AMS / ( RRS * BR ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( MUR ,Min( MUM ,MUM ) ) * ( MUR + CS ) ) / ( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) / Max( RRSe,MLU ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( ( Min( RCSe ,DS ) * ( RMSe * CS ) ) ,Max( MUR,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.6040816326530613, "obj2": 0.24945160448069523}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6448979591836734, "obj2": 0.20776488259941184}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - ( FirstVNF_CPU / ( BR * ACS ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * Min( Max( MLU,MUR ) ,Max( Min( ( MUC / CS ) ,Min( MUM ,RRSe ) ),DS ) ) ) ) ) + ( Min( ( RMSe - DS ) ,Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8836734693877552, "obj2": 0.05389403215116505}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / Max( DDR,AMS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RRSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8477605838747077}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU * ACS ) ) / ( ( ( ( RRS / BR ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem ,DDR ) / ( CRS + DDR ) ) ) ) / ( ( ( ( Const / DDR ) - ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / Min( ARS ,MRS ) ) ) / Max( ( ( FirstVNF_RAM + DDR ) - Max( MRS,PN ) ),( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6333234769269338}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * ( ( CRS * Min( MRS ,CRS ) ) - MRS ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( ( ( CRS + CRS ) / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( ( MUC * MUM ),RCSe ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( ( MLU * ( MUR * RMSe ) ) ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + ( RRSe - ( ( RMSe - Min( RRSe ,MLU ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.07361567140048901}, {"determining": "( ( Min( ( Const + MDR ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( MUR + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,( MUR + CS ) ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5693877551020409, "obj2": 0.28921194214791296}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7744951359543728}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( PN - MRS ) * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5897959183673469, "obj2": 0.26104701799250246}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.7836734693877551, "obj2": 0.09584810826660187}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN / ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * ( MUR + MUC ) ) )", "obj1": 0.48367346938775513, "obj2": 0.3624268014860094}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( PN - MRS ) * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( PN,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / Min( CS ,( ( DS / RMSe ) / RMSe ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3673469387755102, "obj2": 0.4986635597286485}, {"determining": "( ( Const - FirstVNF_RAM ) + ( AMS + RRS ) )", "choosing": "( ( Max( RCSe,CS ) / DS ) / ( Min( Min( MUR ,Max( RCSe,( CS / Min( Max( MUC,CS ) ,MUC ) ) ) ) ,RMSe ) / MUR ) )", "obj1": 0.18979591836734694, "obj2": 0.7457376551409999}, {"determining": "( ( RRS + ( ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( ( FirstVNF_RAM / RRS ),FirstVNF_Mem_Server ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Min( MUC ,( RCSe + MUC ) ) ) ) )", "obj1": 0.8734693877551021, "obj2": 0.055021038960346276}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem - FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * ( MDR - MRS ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( ( DDR * ( ( Max( ( ( CRS * AMS ) / ( PN / FirstVNF_Mem ) ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) + MDR ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUM / MUC ) + Min( Min( Max( MUM,DS ) ,( MLU / CS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.7938775510204081, "obj2": 0.09234622198351566}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( MLU,( ( MLU / MUC ) + Max( RRSe,( ( Min( DS ,CS ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24555587877724605}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.3979591836734694, "obj2": 0.44905631620317}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( MLU,( ( MLU / MUC ) + Max( RRSe,( ( Min( DS ,CS ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5653061224489796, "obj2": 0.29450407665201606}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( ( FirstVNF_CPU_Server + RRS ) + ( PN + MDR ) ) / PN ) ) ,( ( ( PN / FirstVNF_RAM ) + RRS ) * CRS ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + MUC ) ) ) * ( RRSe * ( ( RRSe / ( RCSe * RRSe ) ) + MUC ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8, "obj2": 0.09110288753911772}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( ARS + FirstVNF_Mem_Server ) ) ) * PN ) + ( ARS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) * DDR ) ) )", "choosing": "( ( DS / DS ) / ( Min( RMSe ,DS ) * ( MUM * Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.018496247242442403}, {"determining": "( ( Max( ( RRS - ( ACS - MDR ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( MLU,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ),Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5364772524784645}], "27": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MRS - ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,Const ) ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server + RRS ) ) - FirstVNF_Mem_Server ) * MDR ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( FirstVNF_Mem_Server + Const ) / DDR ) ) ,( RRS - Min( FirstVNF_RAM ,( FirstVNF_CPU_Server + ( CRS * FirstVNF_CPU_Server ) ) ) ) ) ) ) - Max( MDR,MRS ) )", "choosing": "( ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) / ( ( MUM + Max( MUM,RRSe ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( MUC,RMSe ) ,RCSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,MLU ) ,( MUC * MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + Max( Max( FirstVNF_Mem_Server,MRS ),ACS ) ) + Min( BR ,( DDR * ( ( RRS * DDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MUR + MLU ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( RRSe,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( Max( ( RRS - MRS ),( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.2510204081632653, "obj2": 0.6540195360626367}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( FirstVNF_Mem + FirstVNF_CPU ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.23061224489795917, "obj2": 0.7055684909658194}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.6217062350365785}, {"determining": "( ( Max( BR,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,FirstVNF_Mem_Server ) ) - Min( BR ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,MUR ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( Max( Min( Min( FirstVNF_CPU ,( RRS - RRS ) ) ,( RRS * ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ),( PN - ( AMS * MRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( ( MUM / MUC ) * ( DS + MUR ) ) ) / Min( ( MLU - DS ) ,DS ) ) ),( CS + DS ) ) / RRSe ) / ( Max( DS,RCSe ) / MLU ) )", "obj1": 0.3, "obj2": 0.5872942692077027}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( BR + ( PN - ( RRS - ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Max( PN,RRS ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe * CS ) * MUM ) / Max( ( Min( ( MUR + CS ) ,MUR ) * Min( MUR ,CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( MUM + RCSe ) - RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RRSe + MUC ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.718698464846735}, {"determining": "( ( Max( Max( CRS,RRS ),( PN - ( MDR + ARS ) ) ) + ( MRS - BR ) ) - MDR )", "choosing": "( ( Max( ( CS + DS ),Min( DS ,RMSe ) ) / ( MUC * ( RMSe * MUR ) ) ) / ( Min( MUC ,( RMSe - ( Min( CS ,( MUM + Max( MLU,RMSe ) ) ) - DS ) ) ) * Min( MUM ,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.5004616654333149}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.3448979591836735, "obj2": 0.5323088098629608}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.44783494004736235}, {"determining": "( ( Const - FirstVNF_RAM ) + ( AMS + RRS ) )", "choosing": "( ( Max( RCSe,CS ) / DS ) / ( Min( Min( MUR ,Max( RCSe,( CS / Min( Max( MUC,CS ) ,MUC ) ) ) ) ,RMSe ) / MUR ) )", "obj1": 0.18979591836734694, "obj2": 0.7457376551409999}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( RRS * AMS ) ) ) - ( DDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) ,( MDR + ( DDR * ( ( ( BR * MRS ) * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( Max( Max( ( RCSe * ( MLU / RRSe ) ),( MUM + MUR ) ),( CS + DS ) ) - ( Max( Min( ( ( ( RMSe / RMSe ) / RMSe ) / ( RRSe / CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( RRSe ,MUR ) ) ) ) ) )", "obj1": 0.5102040816326531, "obj2": 0.3287041944347083}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( MUR * RMSe ) )", "obj1": 0.6816326530612244, "obj2": 0.17556826260128086}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.6673469387755102, "obj2": 0.19408082396504026}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "Min( ( ( ( PN - ( AMS * RRS ) ) + ( PN / ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ) - ( MDR + ( ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( MDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MLU / ( Max( MLU,RMSe ) * Max( MUM,Max( MUC,( DS + MUC ) ) ) ) )", "obj1": 0.4448979591836735, "obj2": 0.39759675141318773}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( ARS + FirstVNF_Mem_Server ) ) ) * PN ) + ( ARS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) * DDR ) ) )", "choosing": "( ( DS / DS ) / ( Min( RMSe ,DS ) * ( MUM * Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.018496247242442403}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUM / MUC ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3795918367346939, "obj2": 0.46525360506651375}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.40816326530612246, "obj2": 0.43183823746543754}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( MDR - FirstVNF_Mem ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * Min( ( RRS - RRS ) ,FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( Max( Min( AMS ,BR ),MDR ) + CRS ) )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MLU ) * ( MUR / ( ( CS / MUR ) / ( DS - ( RCSe * RRSe ) ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.42857142857142855, "obj2": 0.4163525161954238}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * ( FirstVNF_RAM_Server / ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + RRSe ) ) ) / Min( ( ( MUR - RMSe ) + ( CS + RRSe ) ) ,RRSe ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7224489795918367, "obj2": 0.13412669759161597}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) ) + ( ( ( ( DS / RMSe ) / ( RMSe / Min( RCSe ,RCSe ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7163265306122449, "obj2": 0.15319126940887384}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + MUC ) ) ) * Min( Min( ( RMSe + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6285714285714286, "obj2": 0.22971611538829043}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.31020408163265306, "obj2": 0.5613533861716032}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * ( ARS - Min( ACS ,AMS ) ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( Max( RCSe,RRSe ) - Max( ( ( ( RMSe / MUR ) + RRSe ) + ( RRSe * ( ( Min( MLU ,RRSe ) - RMSe ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.610204081632653, "obj2": 0.237766891682075}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5, "obj2": 0.33745788161645063}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.41020408163265304, "obj2": 0.4290670687069873}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( ( FirstVNF_CPU + Max( PN,BR ) ) - ( BR / FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * RCSe ),MLU ) / DS ) / ( Min( ( ( ( DS + ( DS * RMSe ) ) / Min( CS ,( MUM / CS ) ) ) + MUC ) ,RMSe ) / MUR ) )", "obj1": 0.9285714285714286, "obj2": 0.028790453995820784}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( RCSe * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.4326530612244898, "obj2": 0.4127347553001453}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6122122860443571}, {"determining": "( ( MDR + ( DDR * ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,AMS ) ) - ( BR / FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) - ( BR + ( PN - ( AMS * RRS ) ) ) )", "choosing": "( ( RMSe + ( CS / MUC ) ) / ( Min( ( MUC + RCSe ) ,RMSe ) / MUR ) )", "obj1": 0.9061224489795918, "obj2": 0.039061735769125444}, {"determining": "( ( Max( ( RRS - ( ( PN - ( AMS * RRS ) ) - RRS ) ),( PN - ( AMS * Max( ( DDR + Const ),FirstVNF_CPU_Server ) ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( ( CS - MUR ) * Max( ( ( ( MLU * MUM ) - Min( MLU ,MLU ) ) / MLU ),Max( RCSe,MUR ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.5463913306671689}, {"determining": "( ( ( PN - MRS ) + Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( PN / FirstVNF_CPU_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( MDR * RRS ) ) ) ) - MDR )", "choosing": "( ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( RCSe - ( CS / ( MLU / CS ) ) ) + RRSe ) ) ) ) / MLU )", "obj1": 0.2897959183673469, "obj2": 0.6074744966580615}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( PN * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( Min( ( MLU - RCSe ) ,RMSe ),( MUC + CS ) ) / DS ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.8448979591836735, "obj2": 0.06934648415055876}, {"determining": "( ( RRS + ( PN - ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( DS + MUR ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.8734693877551021, "obj2": 0.054931953591653565}, {"determining": "( ( BR + ( PN * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( ( AMS / ( RRS * BR ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( MUR ,Min( MUM ,MUM ) ) * ( MUR + CS ) ) / ( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) / Max( RRSe,MLU ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( ( Min( RCSe ,DS ) * ( RMSe * CS ) ) ,Max( MUR,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.6040816326530613, "obj2": 0.24945160448069523}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + RRS ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( ( DS - CS ),RRSe ) - Max( MLU,MUM ) ) * ( DS / DS ) ) ) ) )", "obj1": 0.8918367346938776, "obj2": 0.05130328273087826}, {"determining": "( ( RRS + ( PN - ( RRS * ( ( FirstVNF_RAM_Server - Min( ACS ,Const ) ) / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( MRS - ARS ) / DDR ) ) ) + ( MRS * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RCSe * MUM ) + DS ) + RRSe ) ) ) ) ) / ( Max( MUM,Max( MUM,( RCSe + ( ( RCSe + Min( MUR ,MUC ) ) * MUC ) ) ) ) * Min( RMSe ,DS ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8083718904820927}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( Max( FirstVNF_RAM,RRS ) + PN ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( ( DS / RMSe ) / DS ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.5224489795918368, "obj2": 0.31546035815794204}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( PN - MRS ) * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5897959183673469, "obj2": 0.26104701799250246}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7890176581101067}, {"determining": "( ( ( ( ( ( ( MDR + ( DDR - FirstVNF_Mem_Server ) ) - PN ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + ( PN - ( AMS * RRS ) ) ) - ( ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + MDR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.11551219321487234}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.08400771406527778}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( ( Min( ARS ,FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,MDR ) ) * Max( BR,FirstVNF_Mem ) ) + BR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( ( MUR + CS ) - MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ),Max( ( MUR - ( Max( DS,( MUM - DS ) ) / Min( MUC ,( RCSe * CS ) ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.7061224489795919, "obj2": 0.1562135667515791}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.4714285714285714, "obj2": 0.37441581222788733}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * ( ( CRS * Min( MRS ,CRS ) ) - MRS ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( ( ( CRS + CRS ) / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( ( MUC * MUM ),RCSe ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( ( MLU * ( MUR * RMSe ) ) ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + ( RRSe - ( ( RMSe - Min( RRSe ,MLU ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.07361567140048901}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.49190921967429463}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / MDR ) ) ,PN ) ) ) ) ) - ( Min( ( PN - ( AMS * RRS ) ) ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,MUC ) ) )", "obj1": 0.10408163265306122, "obj2": 0.858450613423273}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( Max( MUC,( RCSe + MUC ) ) / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.05952707290266874}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( MDR + ( CRS / FirstVNF_RAM ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ),Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8374522637087722}, {"determining": "( ( Min( ( Const + MDR ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( MUR + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,( MUR + CS ) ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5612244897959183, "obj2": 0.2927708361447263}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( Const + FirstVNF_Mem_Server ) / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.7653061224489796, "obj2": 0.10563728715104388}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / FirstVNF_CPU_Server ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) - ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RMSe / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe * MUC ) ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.7827156180249083}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - MDR ) * FirstVNF_CPU ) ) * FirstVNF_Mem ) ) ) ) ,( MDR + ( ( ( Max( ( ( ACS / BR ) + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.5434101738163257}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( PN * ( PN + AMS ) ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + ( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.7775510204081633, "obj2": 0.10070491670526137}, {"determining": "( ( Max( ( RRS - MRS ),Max( ( AMS * RRS ),PN ) ) + ( ( MRS / FirstVNF_CPU_Server ) - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( MLU * RCSe ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.7387755102040816, "obj2": 0.12382295262377585}, {"determining": "( ( ARS / Const ) - ( Max( ( RRS - ( ACS * FirstVNF_Mem ) ),( PN - Max( BR,FirstVNF_CPU ) ) ) + Max( ( Max( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_Mem_Server + MDR ) ) ),DDR ) / ARS ),( Const / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( MUR,MLU ) / Max( ( Min( MUR ,RMSe ) * ( CS + ( RRSe + MUM ) ) ),Max( RMSe,( Max( RMSe,RCSe ) / CS ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( Min( DS ,Min( MUR ,MLU ) ) * MUM ),MUC ) ) ) )", "obj1": 0.31020408163265306, "obj2": 0.5613533861716032}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6448979591836734, "obj2": 0.20776488259941184}, {"determining": "( ( RRS + ( PN - ( RRS * ( Min( ( FirstVNF_CPU * RRS ) ,DDR ) / Min( ( FirstVNF_CPU + ( CRS / CRS ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( DS * ( ( Max( Min( ( ( RMSe / DS ) / ( RMSe - CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - Min( Max( MUR,RCSe ) ,MLU ) ) ) - Max( Min( MLU ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8170904939011532}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.47551020408163264, "obj2": 0.36432758268965515}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) ) ) ) )", "choosing": "( ( ( ( RMSe * CS ) * MUM ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RRSe + MUC ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3106581264006468}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( ( MRS / CRS ) + ( CRS / MDR ) ) * PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1346938775510204, "obj2": 0.828473143167192}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( MDR + RRS ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( ( DS / RMSe ) + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ),Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8340665413969748}, {"determining": "( Min( ( ( ( AMS / ( ( ACS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) + FirstVNF_CPU ) / Const ) ,DDR ) - ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_Mem,( RRS * RRS ) ) / CRS ) ) + AMS ) * DDR ) + ( ( Max( ( FirstVNF_Mem + ( ( BR / DDR ) - MDR ) ),FirstVNF_RAM ) / AMS ) + RRS ) ) )", "choosing": "( ( ( MLU / MLU ) + ( RCSe - Min( RMSe ,( ( MLU + Max( RMSe,RCSe ) ) * ( Min( Max( CS,MUC ) ,( DS - RMSe ) ) / ( MLU - MLU ) ) ) ) ) ) / ( Min( ( ( RMSe + ( ( CS + DS ) * ( ( MUM * MLU ) * ( DS / MUC ) ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.573469387755102, "obj2": 0.2827939583231777}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( PN - MRS ) * ( ( Max( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ),Max( PN,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( RMSe + MUR ) / ( DS / Min( CS ,( ( DS / RMSe ) / RMSe ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.3673469387755102, "obj2": 0.4986635597286485}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * ( RMSe + MUM ) ) * ( MUR * RMSe ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3800987614915852}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * ( MDR - MRS ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.07114068546816159}, {"determining": "( ( Min( ( Const + MDR ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( MUR + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,( MUR + CS ) ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5693877551020409, "obj2": 0.28921194214791296}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / Max( DDR,AMS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RRSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8477605838747077}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - RRS ) ) ) + ( PN - ( AMS * RRS ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) )", "obj1": 0.5510204081632653, "obj2": 0.2979830391249212}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( ( FirstVNF_CPU_Server + RRS ) + ( PN * FirstVNF_Mem ) ) / PN ) ) ,ARS ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + ( MUR * RCSe ) ) ) ) * Min( Min( ( ( MLU - MUC ) + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08646692540151857}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * ( RMSe + MUM ) ) * ( MUR * RMSe ) ) )", "obj1": 0.4489795918367347, "obj2": 0.38830519635418304}, {"determining": "( ( Max( ( RRS - ( ACS - MDR ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( MLU,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ),Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5369780920517142}, {"determining": "( ( BR + ( PN * ( PN + RRS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( MUR * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.009731741564995757}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( ( MUR * RMSe ) * Min( CS ,MLU ) ) ) + Min( ( MLU - MUC ) ,Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.22029555500581255}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server + RRS ) ) * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * ( MUR + DS ) ) * ( MUR * RMSe ) ) )", "obj1": 0.5408163265306123, "obj2": 0.3025619125108837}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( Const + FirstVNF_Mem_Server ) / ( DDR - MRS ) ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MUM + Max( MUM,RRSe ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( ( MLU - MUM ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11059162753064228}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * ( MDR - MRS ) ) ) ) - ( MDR + ( DDR * ( AMS * RRS ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Max( MLU,RMSe ) / RMSe ) / ( RRSe / CS ) ) ),RCSe ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( ( MLU * ( MUR * RMSe ) ) ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.7979591836734694, "obj2": 0.08741650739107591}, {"determining": "( ( BR + ( PN - ( RRS * ( ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) + MUC ) ) ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7682041564643868}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN / ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * ( MUR + MUC ) ) )", "obj1": 0.48367346938775513, "obj2": 0.3624268014860094}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( Max( FirstVNF_RAM,RRS ) + PN ) ) ) + Max( PN,( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( ( FirstVNF_Mem_Server - CRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / MUR ) - Max( Min( DS ,RMSe ),( CS + Max( Min( CS ,RCSe ),MUM ) ) ) ) )", "obj1": 0.5265306122448979, "obj2": 0.3117220198904882}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( ( ( BR / FirstVNF_Mem ) - ( FirstVNF_CPU + CRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * Min( ( RMSe - MUM ) ,MUC ) ),MLU ) / DS ) / ( Min( RMSe ,( RCSe + MUC ) ) / MUR ) )", "obj1": 0.9122448979591836, "obj2": 0.03723191382511907}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7744951359543728}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( ( MRS / CRS ) + ( CRS / MDR ) ) * PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( Min( MUR ,RMSe ) ,RMSe ) / MUR ) )", "obj1": 0.11428571428571428, "obj2": 0.853224511334796}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( ARS + FirstVNF_Mem_Server ) ) ) * PN ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9653061224489796, "obj2": 0.013028823738325632}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUM / MUC ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.45671206230234307}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,MDR )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.49183673469387756, "obj2": 0.34625083205125123}, {"determining": "( Min( FirstVNF_RAM ,PN ) - Max( MDR,( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + Max( BR,Min( ACS ,( DDR + FirstVNF_CPU_Server ) ) ) ) + Min( Max( ( FirstVNF_RAM_Server - MDR ),( CRS * MDR ) ) ,AMS ) ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * ( Min( RRSe ,CS ) + ( MLU * MUC ) ) ) + CS ) * ( RMSe * RMSe ) ) - MUC ) - ( MLU - RRSe ) ) / ( Min( CS ,( MUR / MLU ) ) * ( MUR / ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.27655007073750787}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.49190921967429463}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( RCSe,MLU ) / DS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6938775510204082, "obj2": 0.16549903516149644}, {"determining": "( ( Const - MDR ) + ( ( ( FirstVNF_RAM_Server - ( Max( ACS,( Max( CRS,PN ) + FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( Min( MUR ,Max( ( CS - ( MUR + MUM ) ),RMSe ) ) ,RMSe ) / MUR ) )", "obj1": 0.17959183673469387, "obj2": 0.7600316605633327}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) - ( Const / CRS ) ) + FirstVNF_CPU ) * DDR ) + ( PN - ( RRS * AMS ) ) ) - ( MDR + ( ( Max( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( Min( MUM ,MUR ),MLU ) / DS ) + ( Max( CS,MUC ) * ( MLU + DS ) ) ) / ( DS - RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12900152579009463}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,AMS )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( RCSe + RCSe ),( ( Min( Max( RMSe,RMSe ) ,RRSe ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.48775510204081635, "obj2": 0.35538576758805357}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - ( FirstVNF_CPU / ( BR * ACS ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * Min( Max( MLU,MUR ) ,Max( Min( ( MUC / CS ) ,Min( MUM ,RRSe ) ),DS ) ) ) ) ) + ( Min( ( RMSe - DS ) ,Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8836734693877552, "obj2": 0.05389403215116505}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.1816326530612245, "obj2": 0.7583386301091543}], "28": [{"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( DDR - BR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( ( ( ( ( ( MDR + ( DDR - FirstVNF_Mem_Server ) ) - PN ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + ( PN - ( AMS * RRS ) ) ) - ( ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + MDR ) )", "choosing": "( CS * ( ( ( Max( MUC,( RCSe + MUC ) ) / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( MRS - ( FirstVNF_CPU_Server + Max( FirstVNF_Mem,Const ) ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server + RRS ) ) - FirstVNF_Mem_Server ) * MDR ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + Max( Max( FirstVNF_Mem_Server,MRS ),ACS ) ) + Min( BR ,( DDR * ( ( RRS * DDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MUR + MLU ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( RRSe,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( Max( BR,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,FirstVNF_Mem_Server ) ) - Min( BR ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,MUR ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( Max( Min( Min( FirstVNF_CPU ,( RRS - RRS ) ) ,( RRS * ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ),( PN - ( AMS * MRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( ( MUM / MUC ) * ( DS + MUR ) ) ) / Min( ( MLU - DS ) ,DS ) ) ),( CS + DS ) ) / RRSe ) / ( Max( DS,RCSe ) / MLU ) )", "obj1": 0.3, "obj2": 0.5872942692077027}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.6673469387755102, "obj2": 0.19408082396504026}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.49587910527522266}, {"determining": "( ( BR + ( PN - ( RRS - ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Max( PN,RRS ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe * CS ) * MUM ) / Max( ( Min( ( MUR + CS ) ,MUR ) * Min( MUR ,CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( MUM + RCSe ) - RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RRSe + MUC ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.718698464846735}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( PN - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.3448979591836735, "obj2": 0.5323088098629608}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( FirstVNF_Mem + FirstVNF_CPU ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.23061224489795917, "obj2": 0.7055684909658194}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6330705014183373}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.49190921967429463}, {"determining": "( ( RRS + ( PN - ( RRS * ( ( FirstVNF_RAM_Server - Min( ACS ,Const ) ) / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( MRS - ARS ) / DDR ) ) ) + ( MRS * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RCSe * MUM ) + DS ) + RRSe ) ) ) ) ) / ( Max( MUM,Max( MUM,( RCSe + ( ( RCSe + Min( MUR ,MUC ) ) * MUC ) ) ) ) * Min( RMSe ,DS ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8083718904820927}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * ( ARS - Min( ACS ,AMS ) ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( Max( RCSe,RRSe ) - Max( ( ( ( RMSe / MUR ) + RRSe ) + ( RRSe * ( ( Min( MLU ,RRSe ) - RMSe ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.610204081632653, "obj2": 0.237766891682075}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( ARS + FirstVNF_Mem_Server ) ) ) * PN ) + ( ARS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) * DDR ) ) )", "choosing": "( ( DS / DS ) / ( Min( RMSe ,DS ) * ( MUM * Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.018496247242442403}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( RRS + ( PN - ( RRS * ( Min( ( FirstVNF_CPU * RRS ) ,DDR ) / Min( ( FirstVNF_CPU + ( CRS / CRS ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( DS * ( ( Max( Min( ( ( RMSe / DS ) / ( RMSe - CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - Min( Max( MUR,RCSe ) ,MLU ) ) ) - Max( Min( MLU ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8170904939011532}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.40816326530612246, "obj2": 0.43183823746543754}, {"determining": "Min( ( ( ( PN - ( AMS * RRS ) ) + ( PN / ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ) - ( MDR + ( ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( MDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MLU / ( Max( MLU,RMSe ) * Max( MUM,Max( MUC,( DS + MUC ) ) ) ) )", "obj1": 0.4448979591836735, "obj2": 0.39759675141318773}, {"determining": "Min( ( ( ( PN / ( ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,Min( CS ,MUR ) ) ) * MUM ) ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.42776324510757197}, {"determining": "( ( BR + ( PN * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( ( AMS / ( RRS * BR ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( MUR ,Min( MUM ,MUM ) ) * ( MUR + CS ) ) / ( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) / Max( RRSe,MLU ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( ( Min( RCSe ,DS ) * ( RMSe * CS ) ) ,Max( MUR,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.6040816326530613, "obj2": 0.24945160448069523}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.42857142857142855, "obj2": 0.40906464486135996}, {"determining": "( ( Max( ( RRS - MRS ),( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.2510204081632653, "obj2": 0.6540195360626367}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) * ( PN / FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + MUC ) ) ) * Min( Min( ( RMSe + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6285714285714286, "obj2": 0.22971611538829043}, {"determining": "( Max( Max( FirstVNF_Mem,( FirstVNF_CPU - AMS ) ),( ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_RAM ) * AMS ) ) - ( MDR + ( Min( ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,RMSe ) * ( MUR + DS ) ) ) / RMSe ) ),( MLU + CS ) ) / DS ) / ( MUR * RMSe ) )", "obj1": 0.1306122448979592, "obj2": 0.8272072966619308}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( RRS * AMS ) ) ) - ( DDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) ,( MDR + ( DDR * ( ( ( BR * MRS ) * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( Max( Max( ( RCSe * ( MLU / RRSe ) ),( MUM + MUR ) ),( CS + DS ) ) - ( Max( Min( ( ( ( RMSe / RMSe ) / RMSe ) / ( RRSe / CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( RRSe ,MUR ) ) ) ) ) )", "obj1": 0.5102040816326531, "obj2": 0.3287041944347083}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6469387755102041, "obj2": 0.2075299330099332}, {"determining": "( ( ( ( RRS - ( ( FirstVNF_CPU + CRS ) + DDR ) ) - ( PN - ( RRS * AMS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( CS + MUR ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( RCSe * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe / MUC ) ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.46521011209505303}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( MDR + ( CRS / FirstVNF_RAM ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ),Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8374522637087722}, {"determining": "( ( ARS / Const ) - ( Max( ( RRS - ( ACS * FirstVNF_Mem ) ),( PN - Max( BR,FirstVNF_CPU ) ) ) + Max( ( Max( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_Mem_Server + MDR ) ) ),DDR ) / ARS ),( Const / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( MUR,MLU ) / Max( ( Min( MUR ,RMSe ) * ( CS + ( RRSe + MUM ) ) ),Max( RMSe,( Max( RMSe,RCSe ) / CS ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( Min( DS ,Min( MUR ,MLU ) ) * MUM ),MUC ) ) ) )", "obj1": 0.31020408163265306, "obj2": 0.5613533861716032}, {"determining": "( ( Min( ( Const + MDR ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / ( ( ( Min( Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) ) / DDR ) - Max( MDR,BR ) ) - ( ( FirstVNF_Mem * Min( AMS ,FirstVNF_RAM ) ) - PN ) ) ) - Max( MDR,( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + MDR ) + Min( BR ,( DDR * ( ( DDR - RRS ) * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( MUR + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,( MUR + CS ) ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5693877551020409, "obj2": 0.28921194214791296}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * ( MDR - MRS ) ) ) ) - ( MDR + ( DDR * ( AMS * RRS ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Max( MLU,RMSe ) / RMSe ) / ( RRSe / CS ) ) ),RCSe ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( ( MLU * ( MUR * RMSe ) ) ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.7979591836734694, "obj2": 0.08741650739107591}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( Max( CRS,RRS ) * ( PN + AMS ) ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( MUC / ( Max( MUC,( RMSe - ( Min( CS ,( MUM + Max( MLU,RMSe ) ) ) - DS ) ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.7836734693877551, "obj2": 0.09584810826660188}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,( PN - ( AMS * RRS ) ) ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUC - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.026995687485287207}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / MDR ) ) ,PN ) ) ) ) ) - ( Min( ( PN - ( AMS * RRS ) ) ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,MUC ) ) )", "obj1": 0.10408163265306122, "obj2": 0.858450613423273}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.45510204081632655, "obj2": 0.3757653753181279}, {"determining": "( ( ( ( ( ( ( MDR + ( DDR - FirstVNF_Mem_Server ) ) - PN ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + ( PN - ( AMS * RRS ) ) ) - ( ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + MDR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.11551219321487234}, {"determining": "( ( Max( ( RRS - MRS ),( ( FirstVNF_Mem + ( FirstVNF_Mem - MDR ) ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.336734693877551, "obj2": 0.5359276754266272}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( ( AMS * RRS ) - PN ) ) - ( MDR + ( DDR * ( ( ( FirstVNF_CPU / CRS ) * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( RCSe,MLU ) / DS ) + ( ( Min( MUR ,MUC ) + DS ) * ( CS * MUC ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5489795918367347, "obj2": 0.2926341599483327}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * PN ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * ( RMSe + ( Max( ( DS - CS ),RRSe ) - Max( MLU,MUM ) ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.46938775510204084, "obj2": 0.36980249487963085}, {"determining": "( ( Max( ( RRS - MRS ),( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.2510204081632653, "obj2": 0.6540195360626367}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * ( ( CRS * Min( MRS ,CRS ) ) - MRS ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( ( ( CRS + CRS ) / FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( ( MUC * MUM ),RCSe ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( ( MLU * ( MUR * RMSe ) ) ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + ( RRSe - ( ( RMSe - Min( RRSe ,MLU ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.07361567140048901}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * Min( ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ,MDR ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( ( MUM / MUC ) + Min( ( Max( MUM,MUC ) * ( MUR + DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.7387755102040816, "obj2": 0.12291692140779704}, {"determining": "( ( Max( ( RRS - MRS ),( ( CRS / FirstVNF_RAM_Server ) - ( AMS * RRS ) ) ) - ( MRS - MRS ) ) - MDR )", "choosing": "( ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) / ( Max( RRSe,MLU ) / Max( ( Min( ( CS + MLU ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,Min( MUR ,DS ) ) ) ) ) )", "obj1": 0.4306122448979592, "obj2": 0.40879847392224056}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.21615055970354977}, {"determining": "( ( Max( ( PN - ( ( MRS + FirstVNF_RAM_Server ) * RRS ) ),( RRS - MRS ) ) + ( PN - RRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,Min( ( RMSe - RCSe ) ,DS ) ) * Max( MUR,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.44783494004736235}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( AMS + FirstVNF_CPU ) + ( Const * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( DS / ( CS / Min( ( Min( RMSe ,Max( MUR,RCSe ) ) * CS ) ,MUC ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.8448979591836735, "obj2": 0.06907925257385955}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( ( ( BR / FirstVNF_Mem ) - ( FirstVNF_CPU + CRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * Min( ( RMSe - MUM ) ,MUC ) ),MLU ) / DS ) / ( Min( RMSe ,( RCSe + MUC ) ) / MUR ) )", "obj1": 0.9122448979591836, "obj2": 0.03723191382511907}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / FirstVNF_CPU_Server ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) - ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RMSe / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe * MUC ) ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.7827156180249083}, {"determining": "Min( ( ( ACS / ( AMS - FirstVNF_CPU_Server ) ) + BR ) ,( CRS + CRS ) )", "choosing": "( ( Max( RRSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( RCSe * CS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) / ( DS / ( DS + DS ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.32448979591836735, "obj2": 0.542534217038307}, {"determining": "( ( ( PN - MRS ) + Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( PN / FirstVNF_CPU_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( MDR * RRS ) ) ) ) - MDR )", "choosing": "( ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( RCSe - ( CS / ( MLU / CS ) ) ) + RRSe ) ) ) ) / MLU )", "obj1": 0.2897959183673469, "obj2": 0.6074744966580615}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( ( Min( ARS ,FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,MDR ) ) * Max( BR,FirstVNF_Mem ) ) + BR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( ( MUR + CS ) - MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ),Max( ( MUR - ( Max( DS,( MUM - DS ) ) / Min( MUC ,( RCSe * CS ) ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.7061224489795919, "obj2": 0.1562135667515791}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( PN - MRS ) * ( ( Max( ( ( BR * ACS ) + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( ( MUC / CS ) + MUR ) / ( DS / Min( CS ,( ( DS / RMSe ) / ( RMSe / CS ) ) ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5938775510204082, "obj2": 0.2587842135800751}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem - MDR ) + ( FirstVNF_Mem + FirstVNF_CPU ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server + DDR ) ) * ( Max( FirstVNF_CPU_Server,MRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR / ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( MLU,RCSe ),DS ) / ( RRSe - RCSe ) )", "obj1": 0.5836734693877551, "obj2": 0.26195646738528133}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( Max( FirstVNF_RAM,RRS ) + PN ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * PN ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Max( ( DDR / PN ),ARS ) ) )", "choosing": "( CS * ( Max( MLU,MUM ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.32147886348488075}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( FirstVNF_Mem + FirstVNF_CPU ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.23061224489795917, "obj2": 0.7055684909658194}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( ( PN - ( RRS * AMS ) ) - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5603189589936141}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( ( FirstVNF_CPU + Max( PN,BR ) ) - ( BR / FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( Min( CS ,MUR ) * ( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.030230324910276087}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7744951359543728}, {"determining": "( ( Max( ( RRS - ( ( PN - ( AMS * RRS ) ) - RRS ) ),( PN - ( AMS * Max( ( DDR + Const ),FirstVNF_CPU_Server ) ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( ( CS - MUR ) * Max( ( ( ( MLU * MUM ) - Min( MLU ,MLU ) ) / MLU ),Max( RCSe,MUR ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.5463913306671689}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7890176581101067}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( ( FirstVNF_CPU_Server + ( BR - FirstVNF_Mem_Server ) ) - MRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( CS ,MUR ) * MUM ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.08400771406527778}, {"determining": "( ( BR + ( PN * ( ( MRS + ARS ) / RRS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN + ( ( FirstVNF_CPU + FirstVNF_Mem ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Min( RCSe ,( MUM - ( CS - ( RMSe + DS ) ) ) ) / DS ) / Max( DS,( MUR / ( Min( DS ,( ( RCSe - CS ) + ( MUM - RMSe ) ) ) - RRSe ) ) ) )", "obj1": 0.7163265306122449, "obj2": 0.14685406341413093}, {"determining": "( Min( ( ( ( AMS / ( ( ACS - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) + FirstVNF_CPU ) / Const ) ,DDR ) - ( ( ( ( FirstVNF_CPU_Server / ( Max( FirstVNF_Mem,( RRS * RRS ) ) / CRS ) ) + AMS ) * DDR ) + ( ( Max( ( FirstVNF_Mem + ( ( BR / DDR ) - MDR ) ),FirstVNF_RAM ) / AMS ) + RRS ) ) )", "choosing": "( ( ( MLU / MLU ) + ( RCSe - Min( RMSe ,( ( MLU + Max( RMSe,RCSe ) ) * ( Min( Max( CS,MUC ) ,( DS - RMSe ) ) / ( MLU - MLU ) ) ) ) ) ) / ( Min( ( ( RMSe + ( ( CS + DS ) * ( ( MUM * MLU ) * ( DS / MUC ) ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( RMSe * MUR ) ) )", "obj1": 0.573469387755102, "obj2": 0.2827939583231777}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * ( MDR - MRS ) ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8326530612244898, "obj2": 0.07114068546816159}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5, "obj2": 0.33745788161645063}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( RCSe,MLU ) / DS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6938775510204082, "obj2": 0.16549903516149644}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.6836734693877551, "obj2": 0.17262337683591217}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( Const + FirstVNF_Mem_Server ) / ( DDR - MRS ) ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MUM + Max( MUM,RRSe ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( ( MLU - MUM ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11059162753064228}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * ( FirstVNF_RAM_Server / ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + RRSe ) ) ) / Min( ( ( MUR - RMSe ) + ( CS + RRSe ) ) ,RRSe ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7224489795918367, "obj2": 0.13412669759161597}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / Max( DDR,AMS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( DS,RMSe ) / ( MUM / CS ) ) - Max( Min( DS ,( ( MLU * MUM ) + Min( Min( Max( MUM,DS ) ,Min( RRSe ,DS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8477605838747077}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.3642927253939264}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ),Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.1644976788049531}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) - ( Const / CRS ) ) + FirstVNF_CPU ) * DDR ) + ( PN - ( RRS * AMS ) ) ) - ( MDR + ( ( Max( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( Min( MUM ,MUR ),MLU ) / DS ) + ( Max( CS,MUC ) * ( MLU + DS ) ) ) / ( DS - RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12900152579009463}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN / ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + MUC ) ) * ( MUR + MUC ) ) )", "obj1": 0.48367346938775513, "obj2": 0.3624268014860094}, {"determining": "( Min( FirstVNF_RAM ,PN ) - Max( MDR,( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + Max( BR,Min( ACS ,( DDR + FirstVNF_CPU_Server ) ) ) ) + Min( Max( ( FirstVNF_RAM_Server - MDR ),( CRS * MDR ) ) ,AMS ) ) ) ) )", "choosing": "( ( ( ( ( ( RMSe * ( Min( RRSe ,CS ) + ( MLU * MUC ) ) ) + CS ) * ( RMSe * RMSe ) ) - MUC ) - ( MLU - RRSe ) ) / ( Min( CS ,( MUR / MLU ) ) * ( MUR / ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.27655007073750787}, {"determining": "( ( FirstVNF_RAM - Max( MRS,FirstVNF_RAM_Server ) ) + ( ( ( FirstVNF_Mem - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( Min( RMSe ,( ( Min( ( DS * MLU ) ,CS ) / ( Max( MUM,MUC ) * ( MUR + RRSe ) ) ) / ( RMSe * RCSe ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7560087637151799}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( MUR * RMSe ) )", "obj1": 0.6816326530612244, "obj2": 0.17556826260128086}, {"determining": "( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( Min( MUR ,RMSe ) ,RMSe ) / MUR ) )", "obj1": 0.18979591836734694, "obj2": 0.7457376551409999}, {"determining": "( ( RRS + ( PN - ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( DS + MUR ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.05673951731380004}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.8510204081632653, "obj2": 0.062303314310573996}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( DDR + BR ) * FirstVNF_RAM ) + ( FirstVNF_Mem - MDR ) ) ) ),Max( PN,( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MUM ,( MUM / ( DS + MUM ) ) ) + MUC ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6146290661178279}, {"determining": "( ( Min( Min( CRS ,( PN / FirstVNF_CPU_Server ) ) ,( CRS * FirstVNF_Mem ) ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * Min( PN ,FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( ( MUR - MUR ) * MLU ) - RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.6217062350365785}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6122122860443571}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( ( FirstVNF_CPU_Server + RRS ) + ( PN * FirstVNF_Mem ) ) / PN ) ) ,ARS ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + ( MUR * RCSe ) ) ) ) * Min( Min( ( ( MLU - MUC ) + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08646692540151857}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.6448979591836734, "obj2": 0.20776488259941184}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - ( FirstVNF_CPU / ( BR * ACS ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * Min( Max( MLU,MUR ) ,Max( Min( ( MUC / CS ) ,Min( MUM ,RRSe ) ),DS ) ) ) ) ) + ( Min( ( RMSe - DS ) ,Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8836734693877552, "obj2": 0.05389403215116505}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( FirstVNF_CPU_Server - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR * ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( ( MUM * ( RCSe + Min( RMSe ,( MUM - RRSe ) ) ) ) + MUR ) ) - MLU ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.4530612244897959, "obj2": 0.38526282858361893}, {"determining": "( ( Max( Min( Min( FirstVNF_CPU ,( RRS - RRS ) ) ,( RRS * ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ),( PN - ( AMS * MRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4613417513273749}, {"determining": "( ( Const - FirstVNF_RAM ) + ( AMS + RRS ) )", "choosing": "( ( Max( RCSe,CS ) / DS ) / ( Min( Min( MUR ,Max( RCSe,( CS / Min( Max( MUC,CS ) ,MUC ) ) ) ) ,RMSe ) / MUR ) )", "obj1": 0.18979591836734694, "obj2": 0.7457376551409999}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.44783494004736235}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( ARS + FirstVNF_Mem_Server ) ) ) * PN ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9653061224489796, "obj2": 0.013028823738325632}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( MUR * RMSe ) )", "obj1": 0.6816326530612244, "obj2": 0.17556826260128086}, {"determining": "( Max( MDR,BR ) - ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( AMS / Min( ( ARS * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + ( ( Min( MUR ,MLU ) * DS ) + RRSe ) ) ) * Max( CS,( MUC + ( Min( ( MUR - Max( RMSe,RRSe ) ) ,( MLU / MUR ) ) / RMSe ) ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.10400203384993924}, {"determining": "( ( RRS + ( PN - ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( DS + MUR ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.8734693877551021, "obj2": 0.054931953591653565}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( PN - ( AMS * RRS ) ) ) ) )", "choosing": "( CS * ( ( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8571428571428571, "obj2": 0.058523370236351686}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server + RRS ) ) * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MUR + MLU ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( RRSe,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.5469387755102041, "obj2": 0.29695594979528994}], "29": [{"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - ( FirstVNF_CPU / ( BR * ACS ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * Min( Max( MLU,MUR ) ,Max( Min( ( MUC / CS ) ,Min( MUM ,RRSe ) ),DS ) ) ) ) ) + ( Min( ( RMSe - DS ) ,Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( MDR + ( DDR - FirstVNF_Mem_Server ) ) - PN ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + ( PN - ( AMS * RRS ) ) ) - ( ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + MDR ) )", "choosing": "( CS * ( ( ( Max( MUC,( RCSe + MUC ) ) / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_RAM ) + ( AMS + RRS ) )", "choosing": "( ( Max( RCSe,CS ) / DS ) / ( Min( Min( MUR ,Max( RCSe,( CS / Min( Max( MUC,CS ) ,MUC ) ) ) ) ,RMSe ) / MUR ) )", "obj1": 0.07346938775510205, "obj2": 0.9107456749231266}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( DS + MUR ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.3326530612244898, "obj2": 0.5288598860697864}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.49587910527522266}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7744951359543728}, {"determining": "( ( ( Min( PN ,PN ) / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( MUR / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,MLU ) ,( CS - RRSe ) ) ,( DS + Max( MUM,MUM ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.28775510204081634, "obj2": 0.5872137419443942}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( ( PN - ( RRS * AMS ) ) - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.3, "obj2": 0.5767020130130589}, {"determining": "( ( ( PN / ( ( ( ( PN - ( AMS * RRS ) ) / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( DS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.48695903815590913}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + Min( ( MUR + CS ) ,MUR ) ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.29822975171393473}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * ARS ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( FirstVNF_Mem + FirstVNF_CPU ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( RMSe / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.699108408445624}, {"determining": "( ( Max( BR,( PN + ( MRS + MDR ) ) ) - FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server - ( ( Max( FirstVNF_RAM_Server,Max( MDR,FirstVNF_Mem_Server ) ) - Min( BR ,BR ) ) * FirstVNF_CPU ) ) / ( MDR / MRS ) ) * PN ) )", "choosing": "( Max( ( Min( CS ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * ( MUC - ( ( ( RMSe - CS ) + MLU ) * ( ( Max( MUC,MUR ) - Max( MLU,MUM ) ) * MUR ) ) ) ),( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) / ( Min( CS ,RRSe ) * ( MUR * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6787998323526844}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / MDR ) ) ,PN ) ) ) ) ) - ( Min( ( PN - ( AMS * RRS ) ) ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,MUC ) ) )", "obj1": 0.10408163265306122, "obj2": 0.858450613423273}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( DDR / CRS ) ) ) + ( PN - ( AMS * RRS ) ) ) - Min( MDR ,( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( DS + ( MUR / MUM ) ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( MUM - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.6263802790798544}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Min( DS ,RMSe ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.6991498084331221}, {"determining": "( ( FirstVNF_RAM - Max( MRS,FirstVNF_RAM_Server ) ) + ( ( ( FirstVNF_Mem - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( Min( RMSe ,( ( Min( ( DS * MLU ) ,CS ) / ( Max( MUM,MUC ) * ( MUR + RRSe ) ) ) / ( RMSe * RCSe ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7560087637151799}, {"determining": "( ( BR + ( PN - ( RRS - ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Max( PN,RRS ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe * CS ) * MUM ) / Max( ( Min( ( MUR + CS ) ,MUR ) * Min( MUR ,CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( MUM + RCSe ) - RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RRSe + MUC ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.718698464846735}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6122122860443571}, {"determining": "( ( ARS / Const ) - ( Max( ( RRS - ( ACS * FirstVNF_Mem ) ),( PN - Max( BR,FirstVNF_CPU ) ) ) + Max( ( Max( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_Mem_Server + MDR ) ) ),DDR ) / ARS ),( Const / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( MUR,MLU ) / Max( ( Min( MUR ,RMSe ) * ( CS + ( RRSe + MUM ) ) ),Max( RMSe,( Max( RMSe,RCSe ) / CS ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( Min( DS ,Min( MUR ,MLU ) ) * MUM ),MUC ) ) ) )", "obj1": 0.31020408163265306, "obj2": 0.5613533861716032}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) ) )", "choosing": "( CS * ( ( CS / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( ( RMSe / MUR ) + RRSe ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.5224489795918368, "obj2": 0.32049053060944915}, {"determining": "( Max( MDR,BR ) - ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( AMS / Min( ( ARS * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + ( ( Min( MUR ,MLU ) * DS ) + RRSe ) ) ) * Max( CS,( MUC + ( Min( ( MUR - Max( RMSe,RRSe ) ) ,( MLU / MUR ) ) / RMSe ) ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.10400203384993924}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem - MDR ) + ( FirstVNF_Mem + FirstVNF_CPU ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server + DDR ) ) * ( Max( FirstVNF_CPU_Server,MRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR / ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( MLU,RCSe ),DS ) / ( RRSe - RCSe ) )", "obj1": 0.5836734693877551, "obj2": 0.26195646738528133}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - ( FirstVNF_RAM - Const ) ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + Max( MUC,MUC ) ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.6122448979591837, "obj2": 0.2292059581341382}, {"determining": "( Max( Max( FirstVNF_Mem,( FirstVNF_CPU - AMS ) ),( ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_RAM ) * AMS ) ) - ( MDR + ( Min( ( ( MDR - MRS ) + FirstVNF_Mem_Server ) ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,RMSe ) * ( MUR + DS ) ) ) / RMSe ) ),( MLU + CS ) ) / DS ) / ( MUR * RMSe ) )", "obj1": 0.1306122448979592, "obj2": 0.8272072966619308}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( RRS * AMS ) ) ) - ( DDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) ,( MDR + ( DDR * ( ( ( BR * MRS ) * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( Max( Max( ( RCSe * ( MLU / RRSe ) ),( MUM + MUR ) ),( CS + DS ) ) - ( Max( Min( ( ( ( RMSe / RMSe ) / RMSe ) / ( RRSe / CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( RRSe ,MUR ) ) ) ) ) )", "obj1": 0.5102040816326531, "obj2": 0.3287041944347083}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.6673469387755102, "obj2": 0.19408082396504026}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( MDR + ( CRS / FirstVNF_RAM ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ),Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8374522637087722}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( ( ( BR / FirstVNF_Mem ) - ( FirstVNF_CPU + CRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * Min( ( RMSe - MUM ) ,MUC ) ),MLU ) / DS ) / ( Min( RMSe ,( RCSe + MUC ) ) / MUR ) )", "obj1": 0.9122448979591836, "obj2": 0.03723191382511907}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / FirstVNF_Mem )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8900798049446208}, {"determining": "( ( Max( ( RRS - MRS ),( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( FirstVNF_Mem + FirstVNF_RAM ) + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( ( RMSe / DS ) / ( RMSe - CS ) ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.4061224489795918, "obj2": 0.4385834545281736}, {"determining": "( ( Max( ( RRS - MRS ),( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.2510204081632653, "obj2": 0.6540195360626367}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( Const + FirstVNF_Mem_Server ) / ( DDR - MRS ) ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MUM + Max( MUM,RRSe ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,MUR ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( ( MLU - MUM ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11059162753064228}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - Min( Const ,RRS ) )", "choosing": "( CS * ( ( CS / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,RMSe ) ) ) ) - Max( ( ( ( RMSe / MUR ) + RRSe ) + Max( RRSe,( ( RMSe - MUR ) + MLU ) ) ),( CS + DS ) ) ) )", "obj1": 0.6551020408163265, "obj2": 0.20460803834500216}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( ( DDR / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_RAM * ( MDR / Max( RRS,MRS ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Min( ( Min( MUM ,Min( DS ,RCSe ) ) * MUC ) ,( MUC + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,Min( ( CS - MUM ) ,CS ) ) ) ) - ( CS + DS ) ) - ( ( RMSe / CS ) - Max( DS,RMSe ) ) ) )", "obj1": 0.5714285714285714, "obj2": 0.27194672600825587}, {"determining": "( ( BR + ( DDR - ( FirstVNF_CPU / ( RRS + FirstVNF_RAM ) ) ) ) - MRS )", "choosing": "Max( ( ( CS / DS ) + Min( Min( Min( MUR ,RMSe ) ,MUC ) ,MUR ) ),( RRSe / ( Max( RMSe,MUR ) - ( ( MUM / DS ) / RMSe ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.22314093328306947}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_CPU + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( MUR + Max( DS,MUR ) ) + MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6708388802350239}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.2512049966791616}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "Min( ( ( Min( RRS ,RRS ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( FirstVNF_RAM + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( DS * ( Max( RRSe,MLU ) - Max( ( CS + MUC ),Min( MLU ,( ( RMSe - CS ) + MLU ) ) ) ) )", "obj1": 0.563265306122449, "obj2": 0.28309377472837804}, {"determining": "( ( RRS + ( PN - ( RRS * ( Min( ( FirstVNF_CPU * RRS ) ,DDR ) / Min( ( FirstVNF_CPU + ( CRS / CRS ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( DS * ( ( Max( Min( ( ( RMSe / DS ) / ( RMSe - CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - Min( Max( MUR,RCSe ) ,MLU ) ) ) - Max( Min( MLU ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8170904939011532}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( ( AMS * RRS ) - PN ) ) - ( MDR + ( DDR * ( ( ( FirstVNF_CPU / CRS ) * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( RCSe,MLU ) / DS ) + ( ( Min( MUR ,MUC ) + DS ) * ( CS * MUC ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.5489795918367347, "obj2": 0.2926341599483327}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,( PN - ( AMS * RRS ) ) ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUC - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.026995687485287207}, {"determining": "( ( RRS + ( PN - ( RRS * ( ( FirstVNF_RAM_Server - Min( ACS ,Const ) ) / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( MRS - ARS ) / DDR ) ) ) + ( MRS * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RCSe * MUM ) + DS ) + RRSe ) ) ) ) ) / ( Max( MUM,Max( MUM,( RCSe + ( ( RCSe + Min( MUR ,MUC ) ) * MUC ) ) ) ) * Min( RMSe ,DS ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8083718904820927}, {"determining": "( ( Max( ( RRS - MRS ),( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.48775510204081635, "obj2": 0.34929853794165283}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / MDR ) ) ,PN ) ) ) ) ) - ( Min( ( PN - ( AMS * RRS ) ) ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( PN - ( RRS * AMS ) ) - ( AMS * RRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MLU + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,MUC ) ) )", "obj1": 0.09183673469387756, "obj2": 0.878404660426013}, {"determining": "( ( BR + ( PN * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( ( AMS / ( RRS * BR ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( MUR ,Min( MUM ,MUM ) ) * ( MUR + CS ) ) / ( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) / Max( RRSe,MLU ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( ( Min( RCSe ,DS ) * ( RMSe * CS ) ) ,Max( MUR,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.6040816326530613, "obj2": 0.24945160448069523}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.49266252242109415}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( AMS + FirstVNF_CPU ) + ( Const * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( DS / ( CS / Min( ( Min( RMSe ,Max( MUR,RCSe ) ) * CS ) ,MUC ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.8448979591836735, "obj2": 0.06907925257385955}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( MDR + FirstVNF_Mem_Server ) ) ) * PN ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( CS * ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9653061224489796, "obj2": 0.012857743184163703}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / FirstVNF_CPU_Server ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) - ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RMSe / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe * MUC ) ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.7827156180249083}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5, "obj2": 0.33745788161645063}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.45510204081632655, "obj2": 0.3757653753181279}, {"determining": "( ( ( ( ( ( ( MDR + ( DDR - FirstVNF_Mem_Server ) ) - PN ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + ( PN - ( AMS * RRS ) ) ) - ( ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + MDR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.11551219321487234}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( FirstVNF_CPU_Server - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR * ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( ( MUM * ( RCSe + Min( RMSe ,( MUM - RRSe ) ) ) ) + MUR ) ) - MLU ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.4530612244897959, "obj2": 0.38526282858361893}, {"determining": "( ( Max( ( RRS - MRS ),( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( CS + MUR ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( RCSe * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe / MUC ) ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.39928344494087487}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5486103007142228}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * ( MDR - MRS ) ) ) ) - ( MDR + ( DDR * ( AMS * RRS ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Max( MLU,RMSe ) / RMSe ) / ( RRSe / CS ) ) ),RCSe ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( ( MLU * ( MUR * RMSe ) ) ,MUR ) ) ) ) - Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.7979591836734694, "obj2": 0.08741650739107591}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.44783494004736235}, {"determining": "( Min( FirstVNF_RAM_Server ,MDR ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUC + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + ( ( ( RRSe - DS ) - MUM ) / ( DS / DS ) ) ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( CS + MUR ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.2510204081632653, "obj2": 0.6540195360626367}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * ( FirstVNF_RAM_Server / ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + RRSe ) ) ) / Min( ( ( MUR - RMSe ) + ( CS + RRSe ) ) ,RRSe ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7224489795918367, "obj2": 0.13412669759161597}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( PN + FirstVNF_Mem_Server ) ) ) * PN ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( ( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) ) + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.01803245096671056}, {"determining": "( ( ( PN - ( RRS * AMS ) ) - ( AMS * RRS ) ) - MDR )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + ( ( MUR + DS ) + RRSe ) ) ) ) )", "obj1": 0.7816326530612245, "obj2": 0.09672106146358787}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + MUC ) ) ) * Min( Min( ( RMSe + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.49795918367346936, "obj2": 0.342924040522133}, {"determining": "( ( Max( ( RRS - MRS ),( ( CRS / FirstVNF_RAM_Server ) - ( AMS * RRS ) ) ) - ( MRS - MRS ) ) - MDR )", "choosing": "( ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) / ( Max( RRSe,MLU ) / Max( ( Min( ( CS + MLU ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,Min( MUR ,DS ) ) ) ) ) )", "obj1": 0.4306122448979592, "obj2": 0.40879847392224056}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.46521011209505303}, {"determining": "( ( FirstVNF_CPU + ( PN - ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( Min( RRS ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) / ( Min( RCSe ,( ( RRSe + RRSe ) - MLU ) ) * Max( MUM,Max( ( ( ( DS * MLU ) + CS ) / ( Max( RCSe,MUC ) * ( DS + MUR ) ) ),( MUC + RCSe ) ) ) ) )", "obj1": 0.9, "obj2": 0.04031587800528085}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7890176581101067}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( RRS,FirstVNF_RAM ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( FirstVNF_Mem_Server - Const ) / MRS ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( RRSe * RMSe ) / RMSe ) / ( RRSe / DS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUR ,MUC ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.9469387755102041, "obj2": 0.019576152405971766}, {"determining": "( ( FirstVNF_Mem + ( PN - ( RRS * ( Min( ( FirstVNF_CPU * RRS ) ,DDR ) / Min( ( FirstVNF_CPU + ( CRS / CRS ) ) ,PN ) ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( Max( ( RRSe - ( Max( ( MUM / ( MLU / MLU ) ),CS ) / ( RMSe - MUC ) ) ),RRSe ) * ( Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) - ( Max( DS,RMSe ) / ( RMSe / CS ) ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8122532601824247}, {"determining": "( ( ( PN / ( ( Max( ( ( BR * ACS ) + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( RMSe - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.11428571428571428, "obj2": 0.848133333955357}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.8510204081632653, "obj2": 0.062303314310573996}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * Max( BR,PN ) ) ) ) - ( MDR / ( DDR * ( AMS * RRS ) ) ) ) ,( MDR + ( DDR * ( ( PN + AMS ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( Max( Min( DS ,( ( Max( MLU,RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( Max( MUM,MUC ) * ( DS + MUR ) ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( ( MLU * ( MUR * RMSe ) ) ,MUR ) ) ) ) - Max( ( ( MLU / Max( ( Max( MUC,DS ) + CS ),MUM ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + RRSe ) ) ),( CS + DS ) ) ) )", "obj1": 0.7877551020408163, "obj2": 0.09135939438248313}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( DS + MUC ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5364246860057301}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( ( FirstVNF_CPU_Server + RRS ) + ( PN * FirstVNF_Mem ) ) / PN ) ) ,ARS ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + ( MUR * RCSe ) ) ) ) * Min( Min( ( ( MLU - MUC ) + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08646692540151857}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ( ( BR - FirstVNF_RAM ) * Min( MDR ,FirstVNF_Mem ) ) - MDR ) ) ) + ( PN - Max( AMS,RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MLU / ( Max( RMSe,DS ) * Max( MUM,Max( ( MUR - ( ( CS / ( CS / MLU ) ) + MUR ) ),( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.42448979591836733, "obj2": 0.42063940798266125}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.21615055970354977}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + DS ) + Min( MLU ,( MUR * MLU ) ) ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.17582209615541583}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( RCSe,MLU ) / DS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.44693877551020406, "obj2": 0.39355906400985835}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( Max( FirstVNF_RAM,RRS ) + PN ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * PN ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Max( ( DDR / PN ),ARS ) ) )", "choosing": "( CS * ( Max( MLU,MUM ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.32147886348488075}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( MUR + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,( MUR + CS ) ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.46530612244897956, "obj2": 0.3713127501799658}, {"determining": "Min( ( ( ACS / ( AMS - FirstVNF_CPU_Server ) ) + BR ) ,( CRS + CRS ) )", "choosing": "( ( Max( RRSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( RCSe * CS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) / ( DS / ( DS + DS ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.32448979591836735, "obj2": 0.542534217038307}, {"determining": "( ( Min( Const ,MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,MDR ) )", "choosing": "( ( ( DS + CS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + ( ( MUM - ( MUM + DS ) ) - ( MUR + MLU ) ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.7122448979591837, "obj2": 0.1476345528318693}, {"determining": "( ( BR + ( PN * ( ( DDR * ( ( RRS - MDR ) * FirstVNF_CPU ) ) + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( Min( BR ,ACS ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( RMSe * ( Min( RRSe ,CS ) + ( MLU * MUC ) ) ) + CS ) - ( CS - ( RMSe + RRSe ) ) ) ) / DS ) / Max( RCSe,MUM ) )", "obj1": 0.7204081632653061, "obj2": 0.14379917821564087}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) - ( Const / CRS ) ) + FirstVNF_CPU ) * DDR ) + ( PN - ( RRS * AMS ) ) ) - ( MDR + ( ( Max( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( Min( MUM ,MUR ),MLU ) / DS ) + ( Max( CS,MUC ) * ( MLU + DS ) ) ) / ( DS - RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12900152579009463}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MUR,RCSe ) ,MLU ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.9938775510204082, "obj2": 0.0018829859662070256}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + Max( Max( FirstVNF_Mem_Server,MRS ),ACS ) ) + Min( BR ,( DDR * ( ( RRS * DDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MUR + MLU ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( RRSe,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( RRS + ( PN - ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.0455725481423311}, {"determining": "( ( Max( ( RRS - ( ( PN - ( AMS * RRS ) ) - RRS ) ),( PN - ( AMS * Max( ( DDR + Const ),FirstVNF_CPU_Server ) ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( ( MLU / MUC ) + Max( RRSe,( ( RMSe - Min( CS ,RRSe ) ) + RRSe ) ) ),( ( CS - MUR ) * Max( ( ( ( MLU * MUM ) - Min( MLU ,MLU ) ) / MLU ),Max( RCSe,MUR ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MLU,( RCSe + MUC ) ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.5463913306671689}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * PN ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( ( MUR * ( RMSe + ( Max( ( DS - CS ),RRSe ) - ( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.9836734693877551, "obj2": 0.0050007860256362025}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5448979591836735, "obj2": 0.29582492272631433}, {"determining": "( ( Const - FirstVNF_RAM ) + ( AMS + RRS ) )", "choosing": "( ( Max( RCSe,CS ) / DS ) / ( Min( Min( MUR ,Max( RCSe,( CS / Min( Max( MUC,CS ) ,MUC ) ) ) ) ,RMSe ) / MUR ) )", "obj1": 0.18979591836734694, "obj2": 0.7457376551409999}, {"determining": "( ( Min( Min( CRS ,( PN / FirstVNF_CPU_Server ) ) ,( CRS * FirstVNF_Mem ) ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * Min( PN ,FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( ( MUR - MUR ) * MLU ) - RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.6217062350365785}, {"determining": "( ( RRS + ( PN - ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + ( MUR * RMSe ) ) ) ) * Min( Min( ( RMSe + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8938775510204081, "obj2": 0.04290821540237507}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.40816326530612246, "obj2": 0.43183823746543754}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.6877551020408164, "obj2": 0.17155947369786306}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MUC / ( Max( MUC,( DS / RMSe ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.4857142857142857, "obj2": 0.35958539981088294}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6146290661178279}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( RCSe,MLU ) / DS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6938775510204082, "obj2": 0.16549903516149644}, {"determining": "( ( FirstVNF_RAM / Max( FirstVNF_Mem,( FirstVNF_Mem_Server / CRS ) ) ) - MDR )", "choosing": "( MLU / ( Min( RMSe ,DS ) * ( ( ( DS / MLU ) / MUR ) - RRSe ) ) )", "obj1": 0.20204081632653062, "obj2": 0.7246201509474254}], "30": [{"determining": "( ( Const - FirstVNF_RAM ) + ( AMS + RRS ) )", "choosing": "( ( Max( RCSe,CS ) / DS ) / ( Min( Min( MUR ,Max( RCSe,( CS / Min( Max( MUC,CS ) ,MUC ) ) ) ) ,RMSe ) / MUR ) )", "obj1": 0.07346938775510205, "obj2": 0.9107456749231266}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) - ( Const / CRS ) ) + FirstVNF_CPU ) * DDR ) + ( PN - ( RRS * AMS ) ) ) - ( MDR + ( ( Max( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( Min( MUM ,MUR ),MLU ) / DS ) + ( Max( CS,MUC ) * ( MLU + DS ) ) ) / ( DS - RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server - ( ( PN - FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) / ( MDR - MRS ) ) ,( ( FirstVNF_Mem + PN ) * ( PN / ( ( FirstVNF_Mem + MDR ) + ( MDR - FirstVNF_Mem ) ) ) ) ) / DDR ) - Min( MDR ,BR ) ) - ( FirstVNF_CPU / ( BR * ACS ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUC * MUR ) ) / ( Min( CS ,MLU ) * ( MUR * Min( Max( MLU,MUR ) ,Max( Min( ( MUC / CS ) ,Min( MUM ,RRSe ) ),DS ) ) ) ) ) + ( Min( ( RMSe - DS ) ,Min( RMSe ,CS ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_RAM ) + ( AMS + RRS ) )", "choosing": "( ( Max( RCSe,CS ) / DS ) / ( Min( Min( MUR ,Max( RCSe,( CS / Min( Max( MUC,CS ) ,MUC ) ) ) ) ,RMSe ) / MUR ) )", "obj1": 0.07346938775510205, "obj2": 0.9107456749231266}, {"determining": "Min( ( ( ( PN / ( ( ( PN - ( AMS * RRS ) ) / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( CS + DS ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6616193771803115}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Min( DS ,RMSe ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.6922123952450978}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( PN * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Max( RRSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( RCSe * CS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) / ( DS / ( DS + DS ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.8387755102040816, "obj2": 0.071258494493135}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - Min( Const ,RRS ) )", "choosing": "( CS * ( ( CS / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,RMSe ) ) ) ) - Max( ( ( ( RMSe / MUR ) + RRSe ) + Max( RRSe,( ( RMSe - MUR ) + MLU ) ) ),( CS + DS ) ) ) )", "obj1": 0.6551020408163265, "obj2": 0.20460803834500216}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - ( FirstVNF_RAM - Const ) ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( ACS ,Const ) ) ) ) ) ) )", "choosing": "( ( Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + Max( MUC,MUC ) ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,RRSe ) * MUM ) ) ) ) )", "obj1": 0.6306122448979592, "obj2": 0.21544794988458144}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( ( FirstVNF_CPU_Server + RRS ) + ( PN * FirstVNF_Mem ) ) / PN ) ) ,ARS ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + ( MUR * RCSe ) ) ) ) * Min( Min( ( ( MLU - MUC ) + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08646692540151857}, {"determining": "( ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + MDR ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( ( Const + FirstVNF_Mem_Server ) / ( DDR - MRS ) ) ) ,PN ) ) ) - Max( MDR,BR ) )", "choosing": "( ( ( MUM + Max( MUM,RRSe ) ) / ( MUC * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( DS - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( ( MLU - MUM ) ,( MUC * MLU ) ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,RMSe ) ) )", "obj1": 0.8857142857142857, "obj2": 0.05311311641671678}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.8510204081632653, "obj2": 0.062303314310573996}, {"determining": "( ( ( PN / ( ( ( ( PN - ( AMS * PN ) ) / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( DS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( Min( MLU ,Min( MUR ,MLU ) ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5243789836900105}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( Min( FirstVNF_RAM ,MDR ) + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.6673469387755102, "obj2": 0.19408082396504026}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( DDR / CRS ) ) ) + ( PN - ( AMS * RRS ) ) ) - Min( MDR ,( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( DS + ( MUR / MUM ) ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( MUM - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.6263802790798544}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.49587910527522266}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( MDR + ( CRS / FirstVNF_RAM ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ),Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8374522637087722}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RCSe * MUM ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6054589184119643}, {"determining": "( ( ARS / Const ) - ( Max( ( RRS - ( ACS * FirstVNF_Mem ) ),( PN - Max( BR,FirstVNF_CPU ) ) ) + Max( ( Max( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_Mem_Server + MDR ) ) ),DDR ) / ARS ),( Const / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( MUR,MLU ) / Max( ( Min( MUR ,RMSe ) * ( CS + ( RRSe + MUM ) ) ),Max( RMSe,( Max( RMSe,RCSe ) / CS ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( Min( DS ,Min( MUR ,MLU ) ) * MUM ),MUC ) ) ) )", "obj1": 0.31020408163265306, "obj2": 0.5613533861716032}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( ( Min( CS ,MUR ) * ( MUR + CS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7604435277947256}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7390670158030277}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( Max( FirstVNF_RAM,RRS ) + PN ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * PN ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + Max( ( ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) / PN ),ARS ) ) )", "choosing": "( CS * ( Max( MLU,( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.31784266176583165}, {"determining": "( ( ( PN / ( ( Max( ( ( BR * ACS ) + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( RMSe - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.11428571428571428, "obj2": 0.848133333955357}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.46521011209505303}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + Min( ( MUR + CS ) ,MUR ) ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.29714519824766183}, {"determining": "( ( Max( ( RRS - MRS ),( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.2510204081632653, "obj2": 0.6540195360626367}, {"determining": "( ( BR + ( PN - ( RRS - ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Max( PN,RRS ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe * CS ) * MUM ) / Max( ( Min( ( MUR + CS ) ,MUR ) * Min( MUR ,CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( MUM + RCSe ) - RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RRSe + MUC ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.718698464846735}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,( CRS - MDR ) ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( ( RRSe / CS ) + MUR ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.2163265306122449, "obj2": 0.7030757162536155}, {"determining": "( ( Max( ( RRS - MRS ),( ( PN / ( ( FirstVNF_Mem + MDR ) + ( FirstVNF_Mem - MDR ) ) ) - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( CS + MUR ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( RCSe * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * Max( MUM,Max( MUC,( RCSe / MUC ) ) ) ) )", "obj1": 0.37142857142857144, "obj2": 0.4755082397668444}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( ( ( BR / FirstVNF_Mem ) - ( FirstVNF_CPU + CRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * Min( ( RMSe - MUM ) ,MUC ) ),MLU ) / DS ) / ( Min( RMSe ,( RCSe + MUC ) ) / MUR ) )", "obj1": 0.9122448979591836, "obj2": 0.03723191382511907}, {"determining": "( ( FirstVNF_RAM - Max( MRS,FirstVNF_RAM_Server ) ) + ( ( ( FirstVNF_Mem - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( Min( RMSe ,( ( Min( ( DS * MLU ) ,CS ) / ( Max( MUM,MUC ) * ( MUR + RRSe ) ) ) / ( RMSe * RCSe ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7560087637151799}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MDR ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + ( MUM - MUR ) ) - RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.35714285714285715, "obj2": 0.4862515273851955}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.39331211190409543}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( Const + Max( BR,Min( ACS ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( ( MLU * MUC ) ,( MUC + Min( Min( Max( MUC,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5714285714285714, "obj2": 0.2718116609295194}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( FirstVNF_CPU_Server - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR * ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( ( MUM * ( RCSe + Min( RMSe ,( MUM - RRSe ) ) ) ) + MUR ) ) - MLU ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.4530612244897959, "obj2": 0.38526282858361893}, {"determining": "( ( RRS + ( PN - ( RRS * ( ( FirstVNF_RAM_Server - Min( ACS ,Const ) ) / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( MRS - ARS ) / DDR ) ) ) + ( MRS * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RCSe * MUM ) + DS ) + RRSe ) ) ) ) ) / ( Max( MUM,Max( MUM,( RCSe + ( ( RCSe + Min( MUR ,MUC ) ) * MUC ) ) ) ) * Min( RMSe ,DS ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8083718904820927}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ACS / Max( DDR,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2, "obj2": 0.7316004693261413}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + DS ) + Min( MLU ,( MUR * MLU ) ) ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.17582209615541583}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ( MDR - MRS ) / Max( ( BR - BR ),DDR ) ) ,( PN - ( AMS * RRS ) ) ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( ( Min( Min( ( ( ( DS / RCSe ) - Max( MUR,Min( MUM ,MLU ) ) ) + MUR ) ,RRSe ) ,( Max( MUC,MUC ) / RCSe ) ) / Max( ( Min( CS ,MUR ) * ( MUR - CS ) ),( ( MLU / MUC ) + ( RRSe * ( ( ( MUC / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * ( ( MUC / Min( MUR ,Min( ( ( DS / MLU ) * ( RCSe + MUC ) ) ,MUR ) ) ) / Min( ( ( MUC - ( RRSe + Max( MUM,MUM ) ) ) * RMSe ) ,MUR ) ) ) )", "obj1": 0.926530612244898, "obj2": 0.03238469055674628}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( MLU / ( Min( RMSe ,DS ) * ( ( RMSe / MUR ) + RRSe ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6137832853148926}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24652080947147287}, {"determining": "( ( Max( ( RRS - MRS ),( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.48775510204081635, "obj2": 0.34929853794165283}, {"determining": "( ( Max( ( RRS - MRS ),( PN - Max( Const,FirstVNF_Mem ) ) ) + ( MRS - PN ) ) - FirstVNF_CPU )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR - CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.44783494004736235}, {"determining": "( ( Min( Min( CRS ,( PN / FirstVNF_CPU_Server ) ) ,( CRS * FirstVNF_Mem ) ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * Min( PN ,FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( ( MUR - MUR ) * MLU ) - RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.6217062350365785}, {"determining": "( MDR - ( ( PN / ( Min( ( ( BR / MRS ) - ACS ) ,FirstVNF_CPU_Server ) + ( ( ( FirstVNF_Mem - FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) + ( PN - MRS ) ) )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( MUC ,( MUC + Min( Min( Max( MUM,MLU ) ,( CS - RRSe ) ) ,( RRSe / RRSe ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.28775510204081634, "obj2": 0.5872137419443942}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + Max( Max( FirstVNF_Mem_Server,MRS ),ACS ) ) + Min( BR ,( DDR * ( ( RRS * DDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MUR + MLU ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( RRSe,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,ARS ) ) ) * Min( PN ,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RRSe + ( CS + DS ) ) * ( DS * Min( ( Min( ( MUR + ( ( MLU / RRSe ) - Max( MUR,DS ) ) ) ,RRSe ) * MUC ) ,Min( MUC ,( ( ( CS + Min( MUR ,MLU ) ) + ( DS - Max( CS,MLU ) ) ) + ( ( MUR / Min( DS ,RCSe ) ) * MUR ) ) ) ) ) )", "obj1": 0.7061224489795919, "obj2": 0.15142178340349544}, {"determining": "Min( ( ( ( PN / ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( ( ( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) * FirstVNF_CPU ) * DDR ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + MUR ) ) / ( Min( DS ,( MLU + MUR ) ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( Max( MUC,DS ) - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.15970782567087544}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.45510204081632655, "obj2": 0.3757653753181279}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - ( FirstVNF_RAM - Const ) ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + Max( MUC,MUC ) ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.6183673469387755, "obj2": 0.22573782370165613}, {"determining": "( ( ( ( ( ( ( MDR + ( DDR - FirstVNF_Mem_Server ) ) - PN ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + ( PN - ( AMS * RRS ) ) ) - ( ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + MDR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.11551219321487234}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( PN + FirstVNF_Mem_Server ) ) ) * PN ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( ( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) ) + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.018032450966710557}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - ( FirstVNF_RAM - Const ) ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + Max( MUC,MUC ) ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.6122448979591837, "obj2": 0.2292059581341382}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.4959183673469388, "obj2": 0.3420502140393534}, {"determining": "( ( FirstVNF_CPU + ( PN - ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( Min( RRS ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) / ( Min( RCSe ,( ( RRSe + RRSe ) - MLU ) ) * Max( MUM,Max( ( ( ( DS * MLU ) + CS ) / ( Max( RCSe,MUC ) * ( DS + MUR ) ) ),( MUC + RCSe ) ) ) ) )", "obj1": 0.9, "obj2": 0.04031587800528085}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / MDR ) ) ,PN ) ) ) ) ) - ( Min( ( PN - ( AMS * RRS ) ) ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,MUC ) ) )", "obj1": 0.10408163265306122, "obj2": 0.858450613423273}, {"determining": "( ( BR + ( PN * ( ( DDR * ( ( RRS - MDR ) * FirstVNF_CPU ) ) + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( Min( BR ,ACS ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( RMSe * ( Min( RRSe ,CS ) + ( MLU * MUC ) ) ) + CS ) - ( CS - ( RMSe + RRSe ) ) ) ) / DS ) / Max( RCSe,MUM ) )", "obj1": 0.7204081632653061, "obj2": 0.14379917821564087}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.4, "obj2": 0.44522780356197733}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( MDR + FirstVNF_Mem_Server ) ) ) * PN ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( CS * ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9653061224489796, "obj2": 0.012857743184163703}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7890176581101067}, {"determining": "( ( Min( Min( CRS ,( PN / FirstVNF_CPU_Server ) ) ,( CRS * FirstVNF_Mem ) ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * Min( PN ,FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( ( MUR - MUR ) * MLU ) - RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.5859126012609985}, {"determining": "( ( Max( ( RRS - MRS ),( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( ( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) ) + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.47959183673469385, "obj2": 0.35979962348350397}, {"determining": "Min( ( ( FirstVNF_Mem_Server + ( ( DDR / FirstVNF_Mem_Server ) / BR ) ) - ( MDR + ( ( ( ( PN * ( PN + AMS ) ) + BR ) - ( Min( PN ,MDR ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( CRS - MDR ) ) ) ) * ( Min( DDR ,( ( FirstVNF_CPU_Server - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM + RMSe ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) - MUM ) ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4272495884754003}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ( ( BR - FirstVNF_RAM ) * Min( MDR ,FirstVNF_Mem ) ) - MDR ) ) ) + ( PN - Max( AMS,RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MLU / ( Max( RMSe,DS ) * Max( MUM,Max( ( MUR - ( ( CS / ( CS / MLU ) ) + MUR ) ),( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.42448979591836733, "obj2": 0.42063940798266125}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7744951359543728}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( PN + FirstVNF_Mem_Server ) ) ) * PN ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( Min( MUM ,MUR ),MLU ) / DS ) + ( Max( CS,MUC ) * ( MLU + DS ) ) ) / ( DS - RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.9795918367346939, "obj2": 0.007896565856345409}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.2512049966791616}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( DS + MUC ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5364246860057301}, {"determining": "( ( Min( Const ,MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,MDR ) )", "choosing": "( ( ( DS + CS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + ( ( MUM - ( MUM + DS ) ) - ( MUR + MLU ) ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.7122448979591837, "obj2": 0.1476345528318693}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( RRS * AMS ) ) ) - ( DDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) ,( MDR + ( DDR * ( ( ( BR * MRS ) * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( Max( Max( ( RCSe * ( MLU / RRSe ) ),( MUM + MUR ) ),( CS + DS ) ) - ( Max( Min( ( ( ( RMSe / RMSe ) / RMSe ) / ( RRSe / CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( RRSe ,MUR ) ) ) ) ) )", "obj1": 0.5102040816326531, "obj2": 0.3287041944347083}, {"determining": "( ( Max( ( RRS - MRS ),( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,MLU ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.4387755102040816, "obj2": 0.40397678673823295}, {"determining": "Min( ( ( Min( RRS ,RRS ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( FirstVNF_RAM + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( DS * ( Max( RRSe,MLU ) - Max( ( CS + MUC ),Min( MLU ,( ( RMSe - CS ) + MLU ) ) ) ) )", "obj1": 0.563265306122449, "obj2": 0.28309377472837804}, {"determining": "( ( RRS + ( PN - ( RRS * ( Min( ( FirstVNF_CPU * RRS ) ,DDR ) / Min( ( FirstVNF_CPU + ( CRS / CRS ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( DS * ( ( Max( Min( ( ( RMSe / DS ) / ( RMSe - CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - Min( Max( MUR,RCSe ) ,MLU ) ) ) - Max( Min( MLU ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8170904939011532}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( Max( BR,PN ) + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + AMS ) ) ) ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MLU,RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,DS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.8448979591836735, "obj2": 0.06463431920849129}, {"determining": "( ( ( PN - MRS ) + Max( Min( ( MRS - MRS ) ,Const ),( PN - ( AMS * RRS ) ) ) ) - MDR )", "choosing": "( ( Max( MLU,RCSe ) / DS ) / ( ( MUR * ( MUR + ( MUR + ( CS + Min( RCSe ,DS ) ) ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.6979457756584015}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / FirstVNF_CPU_Server ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) - ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RMSe / MUC ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe * MUC ) ) ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8226414417999037}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( RMSe / ( MUR + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( RMSe,RMSe ) ,( MUR + CS ) ) - CS ) * Min( MLU ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.46530612244897956, "obj2": 0.3713127501799658}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5486103007142228}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.6877551020408164, "obj2": 0.17155947369786306}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem - MDR ) + ( FirstVNF_Mem + FirstVNF_CPU ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server + DDR ) ) * ( Max( FirstVNF_CPU_Server,MRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR / ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( MLU,RCSe ),DS ) / ( RRSe - RCSe ) )", "obj1": 0.5836734693877551, "obj2": 0.26195646738528133}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / MDR ) ) ,PN ) ) ) ) ) - ( Min( ( PN - ( AMS * RRS ) ) ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,MUC ) ) )", "obj1": 0.10408163265306122, "obj2": 0.858450613423273}, {"determining": "( ( Max( ( RRS - MRS ),( ( CRS / FirstVNF_RAM_Server ) - ( AMS * RRS ) ) ) - ( MRS - MRS ) ) - MDR )", "choosing": "( ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) / ( Max( RRSe,MLU ) / Max( ( Min( ( CS + MLU ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,Min( MUR ,DS ) ) ) ) ) )", "obj1": 0.4306122448979592, "obj2": 0.40879847392224056}, {"determining": "Min( ( ( ( PN / ( ( ( ACS / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( FirstVNF_RAM + ( PN * DDR ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( RMSe * ( Min( RRSe ,CS ) + ( MLU * RRSe ) ) ) + CS ) - ( CS - ( RMSe + DS ) ) ) ) / DS ) / ( Min( MLU ,( ( ( Max( RCSe,MLU ) / DS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) + ( DS / RMSe ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.5530612244897959, "obj2": 0.290300602748743}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( ( PN - ( RRS * AMS ) ) - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.3, "obj2": 0.5767020130130589}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( ( AMS * RRS ) - ( PN - ( RRS * Max( MDR,Min( FirstVNF_Mem ,ARS ) ) ) ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) / ( MUR * MUM ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Max( MLU,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.3, "obj2": 0.5767020130130589}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( MUC + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ),( CS + DS ) ) ) )", "obj1": 0.4714285714285714, "obj2": 0.36802456720119503}, {"determining": "( ( BR + ( PN - ( Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,RRS ) + FirstVNF_Mem ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( PN + FirstVNF_Mem_Server ) ) ) * PN ) + Max( DDR,( PN + ARS ) ) ) * DDR ) ) )", "choosing": "( CS * ( MUM + MUM ) )", "obj1": 0.9693877551020408, "obj2": 0.012703344691244445}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) - ( Const / CRS ) ) + FirstVNF_CPU ) * DDR ) + ( PN - ( RRS * AMS ) ) ) - ( MDR + ( ( Max( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( Min( MUM ,MUR ),MLU ) / DS ) + ( Max( CS,MUC ) * ( MLU + DS ) ) ) / ( DS - RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12900152579009463}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MUC / ( Max( MUC,( DS / RMSe ) ) * Min( RMSe ,CS ) ) )", "obj1": 0.4857142857142857, "obj2": 0.35958539981088294}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( ( AMS + FirstVNF_CPU_Server ) + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( MDR - MRS ) ) * PN ) + ( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) + ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( Max( RRSe,CS ) - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),RMSe ) ) )", "obj1": 0.5040816326530613, "obj2": 0.333466837476978}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7744951359543728}, {"determining": "( Max( MDR,BR ) - ( Min( Max( ( DDR - MRS ),( FirstVNF_CPU + ( AMS / Min( ( ARS * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) / ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) )", "choosing": "( MUC / ( Max( MUC,( RCSe + ( ( Min( MUR ,MLU ) * DS ) + RRSe ) ) ) * Max( CS,( MUC + ( Min( ( MUR - Max( RMSe,RRSe ) ) ,( MLU / MUR ) ) / RMSe ) ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.10400203384993924}, {"determining": "( ( RRS + ( PN - ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.0455725481423311}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( AMS + FirstVNF_CPU ) + ( Const * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( CRS / DDR ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( DS / ( CS / Min( ( Min( RMSe ,Max( MUR,RCSe ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ,MUC ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.02900645164373442}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * ( FirstVNF_RAM_Server / ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + RRSe ) ) ) / Min( ( ( MUR - RMSe ) + ( CS + RRSe ) ) ,RRSe ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7224489795918367, "obj2": 0.13412669759161597}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MLU / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.418862695276383}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5938775510204082, "obj2": 0.25027942706674283}, {"determining": "( ( BR + ( PN * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( ( AMS / ( RRS * BR ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( MUR ,Min( MUM ,MUM ) ) * ( MUR + CS ) ) / ( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) / Max( RRSe,MLU ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( ( Min( RCSe ,DS ) * ( RMSe * CS ) ) ,Max( MUR,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.6040816326530613, "obj2": 0.24945160448069523}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / FirstVNF_Mem )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8900798049446208}], "31": [{"determining": "( ( Const - FirstVNF_RAM ) + ( AMS + RRS ) )", "choosing": "( ( Max( RCSe,CS ) / DS ) / ( Min( Min( MUR ,Max( RCSe,( CS / Min( Max( MUC,CS ) ,MUC ) ) ) ) ,RMSe ) / MUR ) )", "obj1": 0.07346938775510205, "obj2": 0.9107456749231266}, {"determining": "( ( Max( ( RRS - MRS ),( PN - Max( Const,FirstVNF_Mem ) ) ) + ( MRS - PN ) ) - FirstVNF_CPU )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR - CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) - ( Const / CRS ) ) + FirstVNF_CPU ) * DDR ) + ( PN - ( RRS * AMS ) ) ) - ( MDR + ( ( Max( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( Min( MUM ,MUR ),MLU ) / DS ) + ( Max( CS,MUC ) * ( MLU + DS ) ) ) / ( DS - RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_RAM ) + ( AMS + RRS ) )", "choosing": "( ( Max( RCSe,CS ) / DS ) / ( Min( Min( MUR ,Max( RCSe,( CS / Min( Max( MUC,CS ) ,MUC ) ) ) ) ,RMSe ) / MUR ) )", "obj1": 0.07346938775510205, "obj2": 0.9107456749231266}, {"determining": "( ( ( PN / ( ( ( ( PN - ( AMS * PN ) ) / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( DS * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( Min( MLU ,Min( MUR ,MLU ) ) + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.5243789836900105}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.49587910527522266}, {"determining": "( ( ( PN / ( ( MDR + FirstVNF_CPU ) + ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,MLU ) ,( CS - RRSe ) ) ,( DS + Min( MUR ,MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.5274537500671305}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) / ( MLU / MLU ) ) / ( Min( RMSe ,DS ) * Max( RMSe,( ( Max( MUC,RRSe ) - Max( MLU,MUM ) ) * MUR ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7890176581101067}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,( CRS - MDR ) ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( MUR / ( ( CS / MUR ) / ( DS - CS ) ) ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( ( RRSe / CS ) + MUR ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.23469387755102042, "obj2": 0.6863691156781626}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) / ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * RCSe ) + MUC ) + RRSe ) ) ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.10208220493517242}, {"determining": "( ( RRS + ( PN - ( RRS * ( ( FirstVNF_RAM_Server - Min( ACS ,Const ) ) / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( MRS - ARS ) / DDR ) ) ) + ( MRS * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RCSe * MUM ) + DS ) + RRSe ) ) ) ) ) / ( Max( MUM,Max( MUM,( RCSe + ( ( RCSe + Min( MUR ,MUC ) ) * MUC ) ) ) ) * Min( RMSe ,DS ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8083718904820927}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - ( FirstVNF_RAM - Const ) ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( ACS ,Const ) ) ) ) ) ) )", "choosing": "( ( Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + Max( MUC,MUC ) ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,RRSe ) * MUM ) ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.2100865096114291}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( MDR + ( CRS / FirstVNF_RAM ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( ( Max( MUM,Max( MUC,( RCSe + MUC ) ) ) * Min( RMSe ,( ( MLU / MUC ) + Max( RRSe,( DS + RRSe ) ) ) ) ),Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8374522637087722}, {"determining": "( ( Max( CRS,MRS ) + ( ( RRS * RRS ) - PN ) ) - ( Min( CRS ,( CRS / ( ( MRS - AMS ) / Const ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / PN ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,MLU ) / DS ) / ( Min( ( ( DS / RMSe ) / ( RMSe + MUR ) ) ,MLU ) * Max( ( ( CS - MUR ) * ( MUR + CS ) ),Max( RCSe,MLU ) ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8721114882224017}, {"determining": "( ( BR + ( PN * ( ( DDR * ( ( RRS - MDR ) * FirstVNF_CPU ) ) + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( Min( BR ,ACS ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.08456425227119783}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + Min( ( MUR + CS ) ,MUR ) ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( ( RRSe / CS ) ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5224489795918368, "obj2": 0.31496351192929695}, {"determining": "( ( ARS / Const ) - ( Max( ( RRS - ( ACS * FirstVNF_Mem ) ),( PN - Max( BR,FirstVNF_CPU ) ) ) + Max( ( Max( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_Mem_Server + MDR ) ) ),DDR ) / ARS ),( Const / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( MUR,MLU ) / Max( ( Min( MUR ,RMSe ) * ( CS + ( RRSe + MUM ) ) ),Max( RMSe,( Max( RMSe,RCSe ) / CS ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( ( Min( DS ,Min( MUR ,MLU ) ) * MUM ),MUC ) ) ) )", "obj1": 0.31020408163265306, "obj2": 0.5613533861716032}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( ( ( FirstVNF_CPU_Server + RRS ) + ( PN * FirstVNF_Mem ) ) / PN ) ) ,ARS ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + ( MUR * RCSe ) ) ) ) * Min( Min( ( ( MLU - MUC ) + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08646692540151857}, {"determining": "( ( Min( Min( CRS ,( PN / FirstVNF_CPU_Server ) ) ,( CRS * FirstVNF_Mem ) ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * Min( PN ,FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( ( MUR - MUR ) * MLU ) - RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.2755102040816326, "obj2": 0.6019979864020559}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.46521011209505303}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - ( FirstVNF_RAM - Const ) ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( ACS ,Const ) ) ) ) ) ) )", "choosing": "( ( Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + Max( MUC,MUC ) ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,RRSe ) * MUM ) ) ) ) )", "obj1": 0.6306122448979592, "obj2": 0.21544794988458144}, {"determining": "( ( ( ( ( ( ( MDR + ( DDR - FirstVNF_Mem_Server ) ) - PN ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + ( PN - ( AMS * RRS ) ) ) - ( ( ( ( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) + MDR ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( MUR,Max( ( MUM - MUM ),DS ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.11551219321487234}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( RRS * AMS ) ) ) - ( DDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) ,( MDR + ( DDR * ( ( ( BR * MRS ) * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( Max( Max( ( RCSe * ( MLU / RRSe ) ),( MUM + MUR ) ),( CS + DS ) ) - ( Max( Min( ( ( ( RMSe / RMSe ) / RMSe ) / ( RRSe / CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( RRSe ,MUR ) ) ) ) ) )", "obj1": 0.5102040816326531, "obj2": 0.3287041944347083}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + PN ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( RCSe * MUM ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.6653061224489796, "obj2": 0.18319606981474335}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / MDR ) ) ,PN ) ) ) ) ) - ( Min( ( PN - ( AMS * RRS ) ) ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( MDR,BR ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( DS + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( CS + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,MUC ) ) )", "obj1": 0.2, "obj2": 0.7200328377513143}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + ( AMS * RRS ) ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( CS - MLU ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8211139392535534}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( AMS * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( ( DS * MUM ) + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.5871686705773901}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + Max( MUC,MUC ) ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.6286212968276984}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,RRSe ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3142857142857143, "obj2": 0.5456708230048705}, {"determining": "( ( BR + ( PN * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( ( AMS / ( RRS * BR ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( MUR ,Min( MUM ,MUM ) ) * ( MUR + CS ) ) / ( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) / Max( RRSe,MLU ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( ( Min( RCSe ,DS ) * ( RMSe * CS ) ) ,Max( MUR,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.6040816326530613, "obj2": 0.24945160448069523}, {"determining": "( ( BR + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( ( ( BR / FirstVNF_Mem ) - ( FirstVNF_CPU + CRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MLU * Min( ( RMSe - MUM ) ,MUC ) ),MLU ) / DS ) / ( Min( RMSe ,( RCSe + MUC ) ) / MUR ) )", "obj1": 0.9122448979591836, "obj2": 0.03723191382511907}, {"determining": "( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.6877551020408164, "obj2": 0.17155947369786306}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ) ) ) - ( MDR + ( DDR * ( ( MRS * ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / Min( ( MUR + CS ) ,MUR ) ) + Min( MUC ,MUR ) ) ) ) - Max( ( MUC + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ),( CS + DS ) ) ) )", "obj1": 0.763265306122449, "obj2": 0.10554470445486085}, {"determining": "( ( FirstVNF_RAM - Max( MRS,FirstVNF_RAM_Server ) ) + ( ( ( FirstVNF_Mem - DDR ) / ( MDR - MRS ) ) * PN ) )", "choosing": "( ( Max( Min( RMSe ,( ( Min( ( DS * MLU ) ,CS ) / ( Max( MUM,MUC ) * ( MUR + RRSe ) ) ) / ( RMSe * RCSe ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7560087637151799}, {"determining": "( ( RRS + ( PN - ( RRS * ( Min( ( FirstVNF_CPU * RRS ) ,DDR ) / Min( ( FirstVNF_CPU + ( CRS / CRS ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( DS * ( ( Max( Min( ( ( RMSe / DS ) / ( RMSe - CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - Min( Max( MUR,RCSe ) ,MLU ) ) ) - Max( Min( MLU ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8170904939011532}, {"determining": "( ( FirstVNF_CPU + ( PN - ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( Min( RRS ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) ) / ( Min( RCSe ,( ( RRSe + RRSe ) - MLU ) ) * Max( MUM,Max( ( ( ( DS * MLU ) + CS ) / ( Max( RCSe,MUC ) * ( DS + MUR ) ) ),( MUC + RCSe ) ) ) ) )", "obj1": 0.9, "obj2": 0.04031587800528085}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - ( FirstVNF_RAM - Const ) ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.6510204081632653, "obj2": 0.19239175561956495}, {"determining": "Min( ( ( ( PN / ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( ( ( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) * FirstVNF_CPU ) * DDR ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + MUR ) ) / ( Min( DS ,( MLU + MUR ) ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( Max( MUC,DS ) - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.7795918367346939, "obj2": 0.10265270464999335}, {"determining": "( ( ( PN / ( ( ( ( PN - ( AMS * PN ) ) / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( Const + Max( BR,Min( ACS ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( ( MLU * MUC ) ,( MUC + Min( RMSe ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5326530612244897, "obj2": 0.30958779285943855}, {"determining": "( ( Max( ( RRS - MRS ),( ( PN / ( ( FirstVNF_Mem + MDR ) + FirstVNF_RAM ) ) - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( CS + MUR ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( RCSe * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,Min( ( MLU + Min( ( DS / RRSe ) ,RCSe ) ) ,( MUR * DS ) ) ) * Max( MUM,Max( MUC,( RCSe / MUC ) ) ) ) )", "obj1": 0.38571428571428573, "obj2": 0.45134309247910515}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MDR ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + ( MUM - MUR ) ) - RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.35714285714285715, "obj2": 0.4862515273851955}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.2557297037568918}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.41020408163265304, "obj2": 0.4290670687069873}, {"determining": "( ( Max( ( RRS - MRS ),( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + DS ) ) ) / Min( MUM ,DS ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( ( Min( CS ,MUR ) * ( MUR + CS ) ) + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.2510204081632653, "obj2": 0.6540195360626367}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + FirstVNF_Mem ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( PN + FirstVNF_Mem_Server ) ) ) * PN ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + RRSe ) ) ) / Min( ( ( MUR - RMSe ) + ( CS + RRSe ) ) ,RRSe ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.9408163265306122, "obj2": 0.022798654201651315}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7390670158030277}, {"determining": "( ( RRS + ( PN - ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( DS * ( ( Max( Min( ( ( RMSe / DS ) / ( RMSe - CS ) ) ,DS ),( CS + DS ) ) / ( Min( DS ,CS ) - Min( Max( MUR,RCSe ) ,MLU ) ) ) - Max( Min( MLU ,( ( RMSe - CS ) + MLU ) ),( CS + DS ) ) ) )", "obj1": 0.8734693877551021, "obj2": 0.05448247180887715}, {"determining": "( ( Max( ( RRS - ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ),( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( MLU * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.47959183673469385, "obj2": 0.35433641719199527}, {"determining": "Min( ( ( ( PN / ( ( ( PN - ( AMS * RRS ) ) / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( CS + DS ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6616193771803115}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( Const + Max( BR,Min( ACS ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( ( MLU * MUC ) ,( MUC + Min( Min( Max( MUC,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5714285714285714, "obj2": 0.2718116609295194}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - ( FirstVNF_RAM - Const ) ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( PN * FirstVNF_Mem ) * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( Max( ( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ),( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + Max( MUC,MUC ) ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.6081632653061224, "obj2": 0.23021700846207813}, {"determining": "Min( ( ( FirstVNF_Mem_Server + ( ( DDR / FirstVNF_Mem_Server ) / BR ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( CRS - MDR ) ) ) ) * ( Min( DDR ,( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( ( DS / DS ) + MUC ),MLU ) / Max( ( Min( CS ,MUR ) * ( Min( ( MLU + RRSe ) ,DS ) * Max( MUM,Max( MUC,( RCSe / MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.08979591836734693, "obj2": 0.8872980623317103}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Min( BR ,PN ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Min( DS ,RMSe ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.6922123952450978}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,Min( Max( ( DDR - MRS ),( FirstVNF_CPU + RRS ) ) ,( ( FirstVNF_Mem + MDR ) * ( PN / ( FirstVNF_Mem + ARS ) ) ) ) )", "choosing": "( ( ( MLU * RCSe ) / ( MUC * Max( ( ( ( Min( RRSe ,MUC ) * CS ) / ( RMSe + Max( DS,MUR ) ) ) + DS ),( ( Min( Max( DS,RMSe ) ,RRSe ) - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( Max( MLU,CS ) ,RRSe ) ) ) ) ) ) / ( Min( CS ,MLU ) * Max( ( ( RMSe / ( RMSe + Max( MUR,DS ) ) ) + DS ),( ( DS - CS ) * Min( ( ( MLU - MUM ) / MLU ) ,Min( ( MLU - MUM ) ,( MUC * MLU ) ) ) ) ) ) )", "obj1": 0.8346938775510204, "obj2": 0.06975326598186618}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( FirstVNF_CPU_Server - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR * ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( ( MUM * ( RCSe + Min( RMSe ,( MUM - RRSe ) ) ) ) + MUR ) ) - MLU ) / ( Min( CS ,MLU ) * ( MUR * ( ( DS / RMSe ) / DS ) ) ) )", "obj1": 0.4530612244897959, "obj2": 0.38526282858361893}, {"determining": "( ( Max( ( RRS - MRS ),( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + MUC ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.4306122448979592, "obj2": 0.40790397723477795}, {"determining": "( ( Min( Min( CRS ,( PN / FirstVNF_CPU_Server ) ) ,( CRS * FirstVNF_Mem ) ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * Min( PN ,FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( ( MUR - MUR ) * MLU ) - RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.6217062350365785}, {"determining": "( ( Max( ( RRS - MRS ),( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,MLU ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.4387755102040816, "obj2": 0.40397678673823295}, {"determining": "( ( RRS + ( PN - ( ( PN - ( AMS * RRS ) ) * ( MDR / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,PN ) ) ) ) ) - ( Min( CRS ,( CRS / ( ( FirstVNF_RAM * MRS ) / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / DS ) - Max( Min( DS ,RMSe ),( CS + DS ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.0455725481423311}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + Min( ( MUR + CS ) ,MUR ) ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.29714519824766183}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.4, "obj2": 0.44522780356197733}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,ARS ) ) ) * Min( PN ,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RRSe + ( CS + DS ) ) * ( DS * Min( ( Min( ( MUR + ( ( MLU / RRSe ) - Max( MUR,DS ) ) ) ,RRSe ) * MUC ) ,Min( MUC ,( ( ( CS + Min( MUR ,MLU ) ) + ( DS - Max( CS,MLU ) ) ) + ( ( MUR / Min( DS ,RCSe ) ) * MUR ) ) ) ) ) )", "obj1": 0.7061224489795919, "obj2": 0.15142178340349544}, {"determining": "Min( ( ( ( PN / ( ( ( ACS / ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( FirstVNF_RAM + ( PN * DDR ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( RMSe * ( Min( RRSe ,CS ) + ( MLU * RRSe ) ) ) + CS ) - ( CS - ( RMSe + DS ) ) ) ) / DS ) / ( Min( MLU ,( ( ( Max( RCSe,MLU ) / DS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) + ( DS / RMSe ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.5530612244897959, "obj2": 0.290300602748743}, {"determining": "( ( Max( ( RRS - MRS ),( PN - ( AMS * ( FirstVNF_RAM_Server / ( ( PN - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( Min( RMSe ,( ( ( ( DS * MLU ) + CS ) / ( Max( MUM,MUC ) * ( MUR + RRSe ) ) ) / Min( ( ( MUR - RMSe ) + ( CS + RRSe ) ) ,RRSe ) ) ),( CS + DS ) ) / DS ) / ( Min( Max( MUC,( RCSe + MUC ) ) ,RMSe ) / ( MUM + MLU ) ) )", "obj1": 0.7224489795918367, "obj2": 0.13412669759161597}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.3673469387755102, "obj2": 0.4810203708214999}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( PN * FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( Min( MUR ,Max( RCSe,( CS / Min( Max( MUC,CS ) ,MUC ) ) ) ) / DS ) / ( Min( ( ( ( RCSe * CS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) / ( DS / ( DS + DS ) ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.863265306122449, "obj2": 0.059652617297137014}, {"determining": "( ( BR + ( PN * ( ( DDR * ( ( RRS - MDR ) * FirstVNF_CPU ) ) + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - ( ( Min( BR ,ACS ) / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + BR ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( RMSe * ( Min( RRSe ,CS ) + ( MLU * MUC ) ) ) + CS ) - ( CS - ( RMSe + RRSe ) ) ) ) / DS ) / Max( RCSe,MUM ) )", "obj1": 0.7204081632653061, "obj2": 0.14379917821564087}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - ( FirstVNF_RAM - Const ) ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( CRS + CRS ) ) ) ) )", "choosing": "( ( Max( Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ),MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( Min( MUR ,MLU ) + Max( MUC,MUC ) ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Min( MLU ,Min( MUR ,MLU ) ) ) )", "obj1": 0.6551020408163265, "obj2": 0.1920369125543744}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / FirstVNF_Mem )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( CS ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8900798049446208}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.4959183673469388, "obj2": 0.3420502140393534}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem + ( ARS - MDR ) ) * ( PN / ( ( AMS + FirstVNF_CPU ) + ( Const * MDR ) ) ) ) ,( ( FirstVNF_RAM_Server - DDR ) / ( CRS / DDR ) ) ) / DDR ) - Max( MDR,BR ) ) - ( MDR / DDR ) )", "choosing": "( ( DS / ( CS / Min( ( Min( RMSe ,Max( MUR,RCSe ) ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ,( ( ( Max( RCSe,MLU ) / DS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) / ( DS / RMSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.8836734693877552, "obj2": 0.05084946167794821}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( ( FirstVNF_Mem + FirstVNF_CPU ) - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Max( RRSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.5510204081632653, "obj2": 0.29673140825754707}, {"determining": "Min( ( ( FirstVNF_Mem_Server + ( ( DDR / FirstVNF_Mem_Server ) / BR ) ) - ( MDR + ( ( ( ( PN * ( PN + AMS ) ) + BR ) - ( Min( PN ,MDR ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( CRS - MDR ) ) ) ) * ( Min( DDR ,( ( FirstVNF_CPU_Server - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM + RMSe ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) - MUM ) ) ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4272495884754003}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ( ( BR - FirstVNF_RAM ) * Min( MDR ,FirstVNF_Mem ) ) - MDR ) ) ) + ( PN - Max( AMS,RRS ) ) ) - ( MDR + ( ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( CRS + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( MLU / ( Max( RMSe,DS ) * Max( MUM,Max( ( MUR - ( ( CS / ( CS / MLU ) ) + MUR ) ),( ( DS / DS ) + MUC ) ) ) ) )", "obj1": 0.42448979591836733, "obj2": 0.42063940798266125}, {"determining": "( ( BR + ( PN - ( Max( BR,( Max( FirstVNF_RAM,RRS ) + PN ) ) * RRS ) ) ) - ( MDR + ( ( ( ( ( DDR - FirstVNF_RAM_Server ) / ( MRS + ( PN + FirstVNF_Mem_Server ) ) ) * PN ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( ( CS * ( ( ( DS / RMSe ) / ( RMSe + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) ) + MLU ) ) - Max( Min( DS ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.018032450966710557}, {"determining": "( ( ( Const + MDR ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * PN ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( RMSe * ( Min( RRSe ,CS ) + ( MLU * MUC ) ) ) + CS ) - ( CS - ( RMSe + DS ) ) ) ) / DS ) / ( Min( ( ( ( Max( RCSe,MLU ) / DS ) + ( ( MLU + DS ) * Max( CS,MUC ) ) ) / ( DS / RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.6755102040816326, "obj2": 0.17565600241759263}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) - ( Const / CRS ) ) + FirstVNF_CPU ) * DDR ) + ( PN - ( RRS * AMS ) ) ) - ( MDR + ( ( Max( Max( FirstVNF_Mem,( AMS - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) + FirstVNF_CPU ) * DDR ) ) )", "choosing": "( ( Max( RCSe,( MUM - ( CS - ( RMSe + MUC ) ) ) ) / DS ) / ( Min( ( ( ( Max( Min( MUM ,MUR ),MLU ) / DS ) + ( Max( CS,MUC ) * ( MLU + DS ) ) ) / ( DS - RMSe ) ) ,MLU ) * ( MUR * RMSe ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12900152579009463}, {"determining": "( ( BR + ( PN - ( RRS - ( MDR / Min( ( FirstVNF_CPU + ( CRS / DDR ) ) ,PN ) ) ) ) ) - ( Max( PN,RRS ) + ( DDR * ( ( ( MRS + Max( FirstVNF_RAM,( FirstVNF_CPU + PN ) ) ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe * CS ) * MUM ) / Max( ( Min( ( MUR + CS ) ,MUR ) * Min( MUR ,CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( MUM + RCSe ) - RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RRSe + MUC ) ) ) ) )", "obj1": 0.20408163265306123, "obj2": 0.718698464846735}, {"determining": "( ( Max( ( RRS - MRS ),( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.48775510204081635, "obj2": 0.34929853794165283}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) / ( ( Const + Max( Max( FirstVNF_Mem_Server,MRS ),ACS ) ) + Min( BR ,( DDR * ( ( RRS * DDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MUR + MLU ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( RRSe,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8984722807641891}, {"determining": "( ( Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) ),( PN - ( AMS * RRS ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7390670158030277}, {"determining": "( ( ( PN - MRS ) + Max( Min( ( MRS - MRS ) ,Const ),( PN - ( AMS * RRS ) ) ) ) - MDR )", "choosing": "( ( Max( MLU,RCSe ) / DS ) / ( ( MUR * ( MUR + ( MUR + ( CS + Min( RCSe ,DS ) ) ) ) ) * ( MUR * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.6979457756584015}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + MUC ) ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7744951359543728}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / Min( ( FirstVNF_CPU + ( PN / MDR ) ) ,PN ) ) ) ) ) - ( Min( ( PN - ( AMS * RRS ) ) ,( CRS / ( Const / DDR ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( PN / FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / MUC ) + Max( RRSe,( ( Min( DS ,CS ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,MUC ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8563512891872339}, {"determining": "( ( FirstVNF_RAM - Const ) + Min( ( ( Min( ( ( MDR - MRS ) / Max( ( BR - BR ),DDR ) ) ,( ( PN * Min( FirstVNF_RAM ,AMS ) ) - ( AMS * RRS ) ) ) - DDR ) / ( MDR - MRS ) ) ,PN ) )", "choosing": "( Max( ( MLU * RCSe ),MLU ) / ( Min( RMSe ,DS ) * ( ( MUC / Min( MUR ,Min( ( ( DS / MLU ) * ( RCSe + MUC ) ) ,MUR ) ) ) / Min( ( ( MUC - ( RRSe + Max( MUM,MUM ) ) ) * RMSe ) ,MUR ) ) ) )", "obj1": 0.9877551020408163, "obj2": 0.007046996948237442}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( ( PN / ( ( DDR + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,MRS ) ) ) - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( ( Min( CS ,MUR ) * ( MUR + CS ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7604435277947256}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,( MLU + MUR ) ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.15970782567087544}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( MLU / ( Min( RMSe ,DS ) * ( ( RMSe / MUR ) + RRSe ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6137832853148926}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( MRS * ( MDR * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( ( CS + DS ) + RRSe ) * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + DS ) ) / ( Min( DS ,CS ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( RMSe - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.45510204081632655, "obj2": 0.3757653753181279}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( ( PN - ( RRS * AMS ) ) - ( AMS * RRS ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.3, "obj2": 0.5767020130130589}, {"determining": "( ( ( PN / ( ( ( PN / FirstVNF_Mem_Server ) + FirstVNF_CPU ) + ( Const + Max( BR,Min( ACS ,( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( ( MUR + CS ) ,MUR ) * ( MUR + CS ) ),( ( MLU / RRSe ) + Max( RRSe,( ( ( MUC * MLU ) + RCSe ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) )", "obj1": 0.5693877551020409, "obj2": 0.2743980687832165}, {"determining": "Min( ( ( ( PN / ( ( Min( BR ,( CRS - MDR ) ) + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( CRS + CRS ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( ( MUR + MLU ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( RRSe,Max( MUC,( Min( MLU ,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.706581386728816}, {"determining": "( ( Max( ( RRS - ( ACS - FirstVNF_Mem ) ),( ( AMS * RRS ) - ( PN - ( RRS * Max( MDR,Min( FirstVNF_Mem ,ARS ) ) ) ) ) ) + Max( PN,MRS ) ) - MDR )", "choosing": "( ( Max( ( Min( CS ,MUR ) * ( MUR + CS ) ),( Min( RRSe ,( ( MUR + DS ) + RRSe ) ) + ( MLU / MUC ) ) ) / ( MUR * MUM ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Max( MLU,Min( MUR ,MLU ) ) * MUM ) ) ) ) )", "obj1": 0.3, "obj2": 0.5767020130130589}, {"determining": "( ( Min( Min( CRS ,( PN / FirstVNF_CPU_Server ) ) ,( CRS * FirstVNF_Mem ) ) + Min( BR ,FirstVNF_Mem_Server ) ) / ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * Min( PN ,FirstVNF_CPU ) ) * ( PN * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( ( Min( CS ,MUR ) * ( RCSe + CS ) ),( Min( ( ( RMSe / MUR ) + RRSe ) ,( ( ( MUR - MUR ) * MLU ) - RRSe ) ) + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( Min( MLU ,Max( ( MLU + MUR ),( CS - DS ) ) ) * MUM ) ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.5859126012609985}, {"determining": "( ( ( ( PN / ( ( ( PN - ( AMS * RRS ) ) / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( ( ( BR + ( PN * ( PN + AMS ) ) ) - ( MDR + ( Min( FirstVNF_RAM ,MDR ) + ( CRS - MDR ) ) ) ) * ( ( DDR * ( ( RRS - RRS ) * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) - ( MDR / DDR ) )", "choosing": "( CS * ( ( ( DS / RMSe ) / ( Max( MUR,Max( MUC,( RCSe + ( MUR * RMSe ) ) ) ) * Min( Min( ( RMSe + Max( DS,MUR ) ) ,CS ) ,DS ) ) ) - Max( ( Min( CS ,MUR ) * ( Min( RMSe ,DS ) * Max( MUM,Max( MUC,( RCSe + MUC ) ) ) ) ),( Min( RRSe ,( ( Min( MUR ,MLU ) + DS ) + RRSe ) ) + ( CS + DS ) ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.01694297756246478}, {"determining": "Min( ( ( Min( RRS ,RRS ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ,( FirstVNF_RAM + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( DS * ( Max( RRSe,MLU ) - Max( ( CS + MUC ),Min( MLU ,( ( RMSe - CS ) + MLU ) ) ) ) )", "obj1": 0.563265306122449, "obj2": 0.28309377472837804}, {"determining": "( ( ( PN / ( ( Max( ( ( BR * ACS ) + ( BR - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_Mem_Server ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - MRS ) ) - MDR )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( RMSe - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.11428571428571428, "obj2": 0.848133333955357}, {"determining": "( ( BR + ( PN - ( RRS * ( MDR / ( ( PN * ( PN * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) ) ) - ( Min( CRS ,( CRS / ( Const / ( ( Const * CRS ) / ARS ) ) ) ) + ( DDR * ( ( ( FirstVNF_Mem + FirstVNF_RAM ) * ( MDR - MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RRSe,MLU ) / Max( Max( ( DS + ( RRSe * RRSe ) ),Max( MUC,( RCSe + MUC ) ) ),( ( MLU / MUC ) + Max( RRSe,( ( DS + DS ) + RRSe ) ) ) ) ) / ( Min( RMSe ,DS ) * Max( MUM,Max( Min( DS ,( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( RCSe + CS ) ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.7704784744656699}, {"determining": "Min( ( ( ( PN / ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + FirstVNF_CPU ) + ( ARS - MDR ) ) ) + ( PN + ( AMS * RRS ) ) ) - ( MDR + ( ( ( DDR * ( FirstVNF_CPU * FirstVNF_CPU ) ) * FirstVNF_CPU ) * DDR ) ) ) ,( MDR + ( DDR * ( ( PN * DDR ) + FirstVNF_RAM ) ) ) )", "choosing": "( CS * ( ( Max( ( DS * ( ( ( DS / RMSe ) / RMSe ) / ( RRSe / CS ) ) ),( CS + MUR ) ) / ( Min( DS ,( MLU + MUR ) ) - ( ( CS / DS ) + Min( MUC ,MUR ) ) ) ) - Max( ( ( MLU / ( Max( ( MLU * RCSe ),MLU ) / DS ) ) + Max( RRSe,( ( Max( MUC,DS ) - Min( MLU ,RRSe ) ) + Min( MLU ,( MUR * MLU ) ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.15970782567087544}, {"determining": "Min( ( ( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU ) + ( FirstVNF_Mem - MDR ) ) ) + ( PN - ( AMS * RRS ) ) ) - ( MDR + ( DDR * ( ( DDR * ( PN * Min( FirstVNF_RAM ,AMS ) ) ) * FirstVNF_CPU ) ) ) ) ,( MDR + ( DDR * ( ( Max( ( BR + CRS ),FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) * ( ( Const - FirstVNF_RAM ) + ( ( ( FirstVNF_RAM_Server - DDR ) / ( MDR - MRS ) ) * PN ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) * ( ( Max( DS,RMSe ) / ( RMSe / CS ) ) - Max( Min( DS ,( MUC + Min( Min( Max( MUM,DS ) ,( CS - RRSe ) ) ,( DS + MLU ) ) ) ),( CS + DS ) ) ) )", "obj1": 0.4448979591836735, "obj2": 0.3929854326824691}]}