{"1": [{"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + MDR ) ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * RMSe ) / ( ( ( CS + MUM ) / Max( Min( ( CS / CS ) ,RMSe ),( Max( RCSe,Min( ( CS * RCSe ) ,CS ) ) * ( ( ( RMSe / CS ) + MUC ) / MUC ) ) ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) + Max( MUR,MUR ) )", "obj1": 0.2612244897959184, "obj2": 0.731483621792225}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,MUM ) )", "obj1": 0.4122448979591837, "obj2": 0.5769961549327478}, {"determining": "( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + RRS ) - Min( AMS ,( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( MUC + DS ),Max( ( ( ( ( ( ( DS - RRSe ) + MUR ) - Min( RRSe ,( DS * MUR ) ) ) / ( MUM + RCSe ) ) - MLU ) - RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,ARS ) - ( AMS / MRS ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,PN ) / ( MRS + PN ) )", "choosing": "( Min( CS ,MUC ) * ( MUM / MUC ) )", "obj1": 0.39387755102040817, "obj2": 0.6179375959782993}, {"determining": "( Min( PN ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( Min( RCSe ,MUC ) * Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MRS ,MRS ) * Min( FirstVNF_Mem_Server ,Max( DDR,( FirstVNF_RAM_Server + AMS ) ) ) ),Min( FirstVNF_RAM ,( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,Min( MUM ,( MUC + CS ) ) ) - Max( ( RCSe * RMSe ),( MLU + RRSe ) ) )", "obj1": 0.23265306122448978, "obj2": 0.7639669457164687}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) * Min( DDR ,MRS ) ) * ( Max( RRS,BR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUR ) * ( DS - RCSe ) ) * ( ( MLU + CS ) + ( RRSe / RMSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.7609788562093004}, {"determining": "( ( ( Const - CRS ) / Max( PN,FirstVNF_Mem ) ) * ( Const * AMS ) )", "choosing": "( ( ( MUR / MUC ) * Min( CS ,MUM ) ) / ( ( CS - ( RCSe * Min( Min( MUR ,( CS + MUM ) ) ,( ( Max( RMSe,MUM ) / DS ) / Max( MUC,MUR ) ) ) ) ) + Max( DS,RCSe ) ) )", "obj1": 0.826530612244898, "obj2": 0.19541268082783428}, {"determining": "( Max( ACS,( RRS - FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU ,Min( MDR ,AMS ) ) )", "choosing": "( ( MLU + ( RCSe + MUR ) ) * ( DS * MUC ) )", "obj1": 0.41836734693877553, "obj2": 0.5762777385606136}, {"determining": "( ( ( RRS - Const ) / ( ACS - Const ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RCSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "( ( AMS * RRS ) - ( AMS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe * ( MLU / CS ) ),( ( DS - MUM ) / ( MLU / Min( MUC ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) / ( Max( RRS,ACS ) + ( ( FirstVNF_Mem_Server * Const ) / CRS ) ) )", "choosing": "Min( Max( ( Min( ( RMSe - ( MUM - MUC ) ) ,MUR ) + MUC ),MLU ) ,( MLU / ( CS + ( MLU / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "Min( Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ,( PN + ( FirstVNF_Mem + DDR ) ) )", "choosing": "Min( Max( Min( RMSe ,MUM ),( MUR - MLU ) ) ,( RCSe / MUC ) )", "obj1": 0.3346938775510204, "obj2": 0.6642770629559295}, {"determining": "( ( ( CRS + FirstVNF_CPU ) + ( FirstVNF_RAM * MDR ) ) - ( ( AMS * FirstVNF_CPU ) + ( ACS + PN ) ) )", "choosing": "Min( Max( ( CS - RCSe ),Max( CS,MUR ) ) ,( ( RCSe + MUC ) * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( FirstVNF_Mem_Server * DDR ) ) ,( ( MDR - MDR ) - Min( CRS ,ARS ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.3489795918367347, "obj2": 0.62928827668898}, {"determining": "Max( ( ( FirstVNF_RAM * MRS ) / ( FirstVNF_CPU - CRS ) ),Min( ( Max( RRS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RCSe - CS ) ,MUR ) * ( RCSe / ( ( MUR * ( Max( ( ( RRSe / MUC ) + RMSe ),RCSe ) + RCSe ) ) * ( CS / RMSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.705999793123216}, {"determining": "( ( PN + MDR ) / ( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( ( MUC - RCSe ) - Max( DS,RCSe ) ) * Max( ( RRSe + RCSe ),( MUM * MUM ) ) )", "obj1": 0.26326530612244897, "obj2": 0.7263444519542365}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( RRS * AMS ) ) + ( ( ( MRS - MRS ) - FirstVNF_Mem_Server ) / Min( BR ,AMS ) ) )", "choosing": "( ( MLU + MUC ) * ( Min( MUC ,MUR ) / ( MLU + MUM ) ) )", "obj1": 0.31020408163265306, "obj2": 0.7016670689809765}, {"determining": "( ( Const + Const ) + Min( MRS ,DDR ) )", "choosing": "( ( ( ( MUC - DS ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe / MUR ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.8363640352822592}, {"determining": "Min( Max( Max( ( AMS - MDR ),( FirstVNF_CPU_Server * MDR ) ),( ( CRS - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,ARS ) ) ) ,Min( ( ( BR - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,( ( PN / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR * MUM ),Min( CS ,RRSe ) ) * Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) - Min( ( ( RCSe + CS ) + Max( MUC,RMSe ) ) ,( Max( DS,DS ) + ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) * ( AMS / ARS ) )", "choosing": "( Min( ( ( MLU / RRSe ) + Min( DS ,MUR ) ) ,Min( ( MUR - MUC ) ,Min( CS ,MLU ) ) ) + ( ( ( RCSe / CS ) + ( MUC + ( CS - MLU ) ) ) * ( ( RMSe / RRSe ) + ( MLU + RRSe ) ) ) )", "obj1": 0.3142857142857143, "obj2": 0.6771874355028494}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8453558821653566}, {"determining": "( Min( AMS ,Max( ( MRS * ( CRS / FirstVNF_RAM_Server ) ),ACS ) ) - ( DDR / ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / MUR ) + ( ( ( MUM * RRSe ) / Max( RMSe,RCSe ) ) + Max( ( MUC / MUM ),( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( FirstVNF_RAM_Server,CRS ) + Min( DDR ,DDR ) ),Max( ( CRS / RRS ),( MRS / FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.9040816326530612, "obj2": 0.10708593906179054}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( MUR ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.032707000000884036}, {"determining": "Max( ( ( ( DDR * MRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( AMS ,RRS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Max( ( ( CS - MUM ) * Max( RMSe,RCSe ) ),( ( DS - RMSe ) - ( RMSe - RMSe ) ) ) ,Max( ( ( RMSe + MUR ) + ( MLU - CS ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.7934650455047144}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "Min( Max( ( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,( ( Min( MDR ,ACS ) * ( FirstVNF_CPU + RRS ) ) / Min( Max( DDR,RRS ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.45102040816326533, "obj2": 0.5314139222303402}, {"determining": "( ( ( ( DDR / ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * Max( ( ACS * BR ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_CPU + RRS ) - ( ARS + ARS ) ) ,Max( ( ACS + RRS ),( PN / MRS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUC ) * ( RCSe - MLU ) ) - ( Min( MUR ,MUC ) + Max( CS,MUM ) ) ) ,Min( ( ( CS + MUR ) + ( MUM + RRSe ) ) ,( ( DS * MUC ) - ( MUM * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM * MDR ) * ( FirstVNF_Mem / ARS ) ) ,Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),( FirstVNF_Mem + DDR ) ) ) + Min( ( Max( CRS,FirstVNF_CPU ) / Max( MRS,Const ) ) ,( ( DDR * ARS ) / ( ACS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Min( RMSe ,MUR ),( RCSe + DS ) ) * ( ( RCSe + RCSe ) * Min( CS ,RRSe ) ) ) ,Max( ( ( RRSe * MUM ) + ( DS / RRSe ) ),Max( Min( RRSe ,MUM ),Min( MLU ,MLU ) ) ) )", "obj1": 0.7714285714285715, "obj2": 0.2029867791558344}, {"determining": "Max( Max( PN,( ( FirstVNF_CPU_Server / Max( Max( FirstVNF_RAM_Server,Max( AMS,PN ) ),Max( FirstVNF_Mem,ACS ) ) ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU - RMSe ) + ( MUM * MUR ) ) / ( ( CS * DS ) / Max( CS,MLU ) ) ) * ( Min( ( CS + RRSe ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.7342116462494738}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8763076861929563}, {"determining": "( ( ( ( CRS - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + Min( Const ,PN ) ) ) - ( ( ( FirstVNF_RAM_Server * PN ) / ( AMS + ACS ) ) + ( ( AMS + FirstVNF_CPU_Server ) - ( ARS - Min( BR ,ACS ) ) ) ) )", "choosing": "( ( ( Max( CS,DS ) + ( MUC + RCSe ) ) / ( ( RCSe * Min( ( RRSe * MUC ) ,RMSe ) ) * ( MUR / RMSe ) ) ) / ( Max( ( MUM - CS ),( MUR - RMSe ) ) - ( Max( RRSe,CS ) - ( DS + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) ) - ( ( ( FirstVNF_Mem - Const ) / Max( AMS,MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( MRS * MRS ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),( MLU * RCSe ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,( ( RRSe + MUM ) + ( MLU + RMSe ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7399316002969256}], "2": [{"determining": "( ( MDR / FirstVNF_CPU_Server ) + ( ( ( Max( BR,ACS ) / Const ) - Min( FirstVNF_Mem ,BR ) ) - ( ( Min( CRS ,CRS ) + FirstVNF_CPU ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RRSe * Max( ( ( RRSe / MLU ) + RMSe ),MUR ) ) * Max( ( ( ( Min( ( MLU * RCSe ) ,( MUR / DS ) ) + MUM ) / ( MUC + MUR ) ) - MLU ),MLU ) ) + ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + MDR ) ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * RMSe ) / ( ( ( CS + MUM ) / Max( Min( ( CS / CS ) ,RMSe ),( Max( RCSe,Min( ( CS * RCSe ) ,CS ) ) * ( ( ( RMSe / CS ) + MUC ) / MUC ) ) ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( ( ( FirstVNF_RAM * MDR ) * ( FirstVNF_Mem / ARS ) ) ,Max( ( ( DDR * BR ) * ( Min( CRS ,( AMS * FirstVNF_Mem_Server ) ) / RRS ) ),( FirstVNF_Mem + DDR ) ) ) + Min( ( Max( CRS,FirstVNF_CPU ) / Max( MRS,Const ) ) ,( ( DDR * ARS ) / ( ACS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Min( RMSe ,MUR ),( RCSe + DS ) ) * ( ( RCSe + RCSe ) * Min( CS ,RRSe ) ) ) ,Max( ( ( ( ( RMSe + ( CS - DS ) ) * MUM ) + ( MUC - ( ( CS * MUC ) * ( MLU * MUM ) ) ) ) - Min( MUM ,( RRSe - MLU ) ) ),Max( Min( RRSe ,MUM ),Min( MLU ,MLU ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.1802565453985204}, {"determining": "( ( AMS - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( RRS * AMS ) ) ) * Max( ARS,BR ) )", "choosing": "( ( RCSe / RCSe ) + ( MUR - RCSe ) )", "obj1": 0.6571428571428571, "obj2": 0.3256402405990993}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) * Max( ARS,BR ) )", "choosing": "( ( RCSe / RCSe ) + ( RMSe + MLU ) )", "obj1": 0.6, "obj2": 0.40589123129478866}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * ( AMS + ACS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.4959183673469388, "obj2": 0.473399471605027}, {"determining": "Min( Max( ( Max( FirstVNF_RAM_Server,CRS ) + Min( DDR ,DDR ) ),Max( ( CRS / RRS ),( MRS / FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.9040816326530612, "obj2": 0.10708593906179054}, {"determining": "( ( AMS * ACS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "Max( Min( ( DS / DS ) ,( CS / RRSe ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 0.6122448979591837, "obj2": 0.34324092862389877}, {"determining": "( ( AMS * ACS ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "Max( ( RMSe * ( MLU / CS ) ),( ( DS - MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.5428571428571428, "obj2": 0.4257054256609287}, {"determining": "( ( ( RRS - Const ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( CS / RRSe ) / ( RCSe * MLU ) ),( ( DS + DS ) - ( RRSe - DS ) ) ) - MUC )", "obj1": 0.9571428571428572, "obj2": 0.0498860440603582}, {"determining": "Min( Max( ( ( PN + BR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,( ( Min( MDR ,ACS ) * ( FirstVNF_CPU + RRS ) ) / Min( Max( DDR,RRS ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( MUR / DS ) )", "obj1": 0.45102040816326533, "obj2": 0.5314139222303402}, {"determining": "Min( Max( ( Max( FirstVNF_RAM_Server,CRS ) + Min( DDR ,DDR ) ),( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( RRSe - MUC ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.9081632653061225, "obj2": 0.10388409679692776}, {"determining": "Min( Max( ( Max( FirstVNF_RAM_Server,CRS ) + Min( DDR ,DDR ) ),Max( ( CRS / RRS ),( MRS / FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.9040816326530612, "obj2": 0.10708593906179054}, {"determining": "( ( Const + Const ) + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + RRS ) ) )", "choosing": "( ( ( ( MUC - Min( ( Max( Min( RMSe ,RRSe ),( RCSe * RMSe ) ) - Min( RCSe ,MLU ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( DS ,DS ) ) ,( Min( MLU ,MUR ) * MUC ) ) ) ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe / MUR ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.8076042612660342}, {"determining": "( Min( DDR ,BR ) * Min( Min( Max( AMS,MDR ) ,DDR ) ,ARS ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe * CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + Min( MUR ,MLU ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Max( ( ( ( DDR * MRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),( FirstVNF_RAM - Min( FirstVNF_Mem ,RRS ) ) ) - ( Min( AMS ,RRS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Max( ( ( CS - MUM ) * Max( RMSe,RCSe ) ),( ( DS - RMSe ) - ( RMSe - RMSe ) ) ) ,Max( ( ( RMSe + MUR ) + ( MLU - ( Min( DS ,MUC ) + DS ) ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8331801906404099}, {"determining": "( ( ( RRS - Const ) / ( ACS - Const ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RCSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( ( ( MUR / RMSe ) * ( MLU * MUC ) ) ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.9877551020408163, "obj2": 0.01342700592259243}, {"determining": "( ( ( RRS / FirstVNF_RAM_Server ) * ( Max( FirstVNF_CPU_Server,ARS ) + FirstVNF_CPU ) ) * ( Min( Const ,( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( Max( CS,RCSe ) + Max( ( MUC - MUC ),( MUC / CS ) ) ) + ( ( ( Min( MUC ,( MUC + RCSe ) ) + RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * Min( RMSe ,MUR ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8650178064155785}, {"determining": "( Min( AMS ,Max( ( MRS * ( CRS / ( ACS - ( ( Const * RRS ) / CRS ) ) ) ),ARS ) ) - ( DDR / ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / MUR ) + ( ( ( MUM * RRSe ) / Max( RMSe,RCSe ) ) + Max( ( MUC * RRSe ),( MUC + MUM ) ) ) )", "obj1": 0.3795918367346939, "obj2": 0.5972951781993976}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.1489795918367347, "obj2": 0.858279396409753}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.3489795918367347, "obj2": 0.62928827668898}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( MUR ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.030341031464080553}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.3489795918367347, "obj2": 0.62928827668898}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - Min( Max( FirstVNF_CPU,MDR ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,RMSe ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "( ( ( Const - CRS ) / Max( PN,FirstVNF_Mem ) ) * ( Const * AMS ) )", "choosing": "( ( ( MUR / MUC ) * Min( CS ,MUM ) ) / ( ( CS - ( RCSe * Min( Min( MUR ,( CS + MUM ) ) ,( ( Max( RMSe,MUM ) / DS ) / Max( MUC,MUR ) ) ) ) ) + Max( DS,RCSe ) ) )", "obj1": 0.9693877551020408, "obj2": 0.035800700068031786}, {"determining": "( ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * CRS ) ) * Max( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( RRS - ARS ) ) + BR ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( RMSe,CS ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.2897959183673469, "obj2": 0.689580843667167}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) + ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( RMSe + RMSe ) - Min( MUC ,MUM ) ),( ( MUR * RMSe ) * ( RRSe * CS ) ) )", "obj1": 0.3346938775510204, "obj2": 0.6523390421717288}, {"determining": "( ( ACS - ( CRS + FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - RRS ) )", "choosing": "( ( CS * MUM ) + RCSe )", "obj1": 0.32857142857142857, "obj2": 0.6689350430860406}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( RMSe - RRSe ) )", "obj1": 0.44285714285714284, "obj2": 0.5429876587647755}, {"determining": "( ( ( ACS + ARS ) / ( BR / ARS ) ) * ( Min( PN ,FirstVNF_RAM ) + Min( MDR ,( ( ( MRS / FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * ( CRS - PN ) ) ) ) ) )", "choosing": "Min( ( ( CS / DS ) + Max( RCSe,CS ) ) ,( ( MLU * MLU ) + Max( MUM,DS ) ) )", "obj1": 0.24897959183673468, "obj2": 0.7542766959877731}, {"determining": "( Max( ( ARS - Max( FirstVNF_Mem_Server,( MRS - ( Max( BR,Max( BR,ACS ) ) + ARS ) ) ) ),ARS ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,RMSe ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7778670539275383}, {"determining": "( Min( AMS ,Max( ( MRS * ( CRS / FirstVNF_RAM_Server ) ),ACS ) ) - ( DDR / ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / MUR ) + ( ( ( MUM * RRSe ) / Max( RMSe,RCSe ) ) + Max( ( MUC / MUM ),( MUC + RRSe ) ) ) )", "obj1": 0.3795918367346939, "obj2": 0.5972951781993976}, {"determining": "Max( ( ( ( DDR * MRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),Min( RRS ,AMS ) ) - ( Min( AMS ,RRS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Max( ( ( CS - MUM ) * Max( RMSe,RCSe ) ),( ( DS - RMSe ) - ( RMSe - RMSe ) ) ) ,Max( ( ( RMSe + MUR ) + ( MLU - CS ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.7734765502636208}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),( ( Const + Const ) + Min( MRS ,DDR ) ) )", "choosing": "( ( RMSe / CS ) / Max( RCSe,MUC ) )", "obj1": 0.29591836734693877, "obj2": 0.683276783356356}, {"determining": "Max( ( ACS - ( PN * BR ) ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( MLU - Min( ( ( CS / ( MUC * DS ) ) - Max( Min( MLU ,MUM ),MUC ) ) ,RCSe ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Min( RMSe ,MUR ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8386918240469015}, {"determining": "( ( FirstVNF_RAM / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RRSe * MUM ),Max( MUM,( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,MUC ) ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 0.4163265306122449, "obj2": 0.5730204095211813}, {"determining": "( ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) / ( ( DDR + CRS ) / ( FirstVNF_CPU_Server - DDR ) ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( ( RMSe + RCSe ) / ( MUM * MUR ) ) )", "obj1": 0.39591836734693875, "obj2": 0.5950284063691056}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8763076861929563}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( CS + RCSe ) * ( CS - ( CS * RCSe ) ) )", "obj1": 0.27755102040816326, "obj2": 0.706806006316229}, {"determining": "( DDR * Min( ( Const / FirstVNF_Mem_Server ) ,( Const + ( Max( Max( ( FirstVNF_RAM * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) + CRS ) ) ) )", "choosing": "( ( CS + RCSe ) * ( CS + ( ( Max( ( ( RMSe + ( MLU + MUR ) ) / ( Max( RMSe,DS ) * MUR ) ),MLU ) + RCSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.23673469387755103, "obj2": 0.759739673549798}, {"determining": "( ( ACS * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) + ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) )", "obj1": 0.4306122448979592, "obj2": 0.5637220545763113}, {"determining": "( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5921048973712927}, {"determining": "( ( Max( AMS,FirstVNF_Mem ) / ( Const - MDR ) ) + Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( ( RMSe + RMSe ) * ( ( ( MUR / MUC ) * Min( MUM ,CS ) ) / ( ( CS - RMSe ) + Max( DS,RCSe ) ) ) )", "obj1": 0.31020408163265306, "obj2": 0.6777335934237334}, {"determining": "Max( ( Min( MRS ,MRS ) * Min( FirstVNF_Mem_Server ,Max( DDR,( FirstVNF_RAM_Server + AMS ) ) ) ),Min( FirstVNF_RAM ,( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,Min( MUM ,( MUC + CS ) ) ) - Max( ( RCSe * RMSe ),( MLU + RRSe ) ) )", "obj1": 0.23265306122448978, "obj2": 0.7639669457164687}, {"determining": "Min( ( ( ( MDR - MRS ) + ( RRS + FirstVNF_RAM ) ) / Max( Max( CRS,ACS ),( AMS + FirstVNF_RAM ) ) ) ,Max( ( Min( AMS ,CRS ) - ( Min( Max( MDR,FirstVNF_Mem_Server ) ,BR ) + BR ) ),( ( RRS / MDR ) / Max( CRS,Const ) ) ) )", "choosing": "Max( ( Max( Min( RRSe ,( ( ( MUM / RCSe ) * Min( MLU ,CS ) ) + Min( ( RRSe + RMSe ) ,( RCSe - RMSe ) ) ) ),( RCSe - DS ) ) / ( Max( MUC,RCSe ) * ( MLU - RCSe ) ) ),Max( ( Min( RMSe ,RRSe ) / ( MLU - DS ) ),( ( DS - MUM ) + ( MUC / MUM ) ) ) )", "obj1": 0.2693877551020408, "obj2": 0.7199756865276433}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.639673172752087}, {"determining": "Max( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( FirstVNF_Mem_Server * DDR ) ) ,( ( MDR - MDR ) - Min( CRS ,ARS ) ) ) * ARS ),( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( MUM / RRSe ) ) - ( RMSe / MUR ) )", "obj1": 0.3183673469387755, "obj2": 0.6712501179142619}, {"determining": "Min( Max( ( ( FirstVNF_RAM_Server / ( PN * FirstVNF_RAM_Server ) ) + Min( DDR ,DDR ) ),Max( ( RRS / CRS ),( MRS / FirstVNF_RAM_Server ) ) ) ,( Const - RRS ) )", "choosing": "Max( Min( MUM ,RCSe ),( ( ( MUR - RRSe ) * MLU ) + Max( ( MUC - MLU ),RRSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7903449872682864}, {"determining": "Max( ( ( FirstVNF_RAM * MRS ) / ( FirstVNF_CPU - CRS ) ),Min( ( Max( RRS,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RCSe - CS ) ,MUR ) * ( RCSe / ( ( MUR * ( Max( ( ( RRSe / MUC ) + RMSe ),RCSe ) + RCSe ) ) * ( CS / RMSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.705999793123216}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - ( MRS / FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * ( AMS + ACS ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( ( MUM + RMSe ) ,( MLU / CS ) ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,Min( ( RRSe + MUM ) ,( MLU + RMSe ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7399316002969256}, {"determining": "( ( ACS * AMS ) + ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,MUM ) )", "obj1": 0.4122448979591837, "obj2": 0.5769961549327478}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ACS + FirstVNF_CPU ) )", "choosing": "Max( Min( RCSe ,Max( ( RRSe + CS ),Min( Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ,Min( ( RCSe - MUC ) ,MLU ) ) ) ),( ( CS - MLU ) * MLU ) )", "obj1": 0.20408163265306123, "obj2": 0.7945271359310633}, {"determining": "Max( Max( PN,( ( FirstVNF_CPU_Server / Max( Max( FirstVNF_RAM_Server,Max( AMS,PN ) ),Max( FirstVNF_Mem,ACS ) ) ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU - RMSe ) + ( MUM * MUR ) ) / ( ( CS * DS ) / Max( CS,MLU ) ) ) * ( Min( ( CS + RRSe ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.7273086711368747}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( ( RCSe + DS ) / ( MUM * MUR ) ) )", "obj1": 0.4387755102040816, "obj2": 0.5532539400265979}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( AMS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),RCSe ) ),( MLU * MLU ) )", "obj1": 0.20408163265306123, "obj2": 0.7945271359310633}, {"determining": "( Min( FirstVNF_Mem ,Const ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) )", "choosing": "Min( ( MLU * MUM ) ,Min( MUR ,DS ) )", "obj1": 0.43673469387755104, "obj2": 0.555158404854534}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) / Const ) )", "choosing": "( Min( ( MLU * MUM ) ,( MUC / MLU ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8473326360975227}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( ( ( ( CRS - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + Min( Const ,PN ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUM - CS ),( MUR - RMSe ) ) - ( Max( RRSe,CS ) - ( DS + RMSe ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.8466490543963454}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) ) - ( ( ( FirstVNF_Mem - Const ) / Max( AMS,MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( MRS * MRS ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),( MLU * RCSe ) ) + Min( Max( Max( MUC,RMSe ),( MUR / CS ) ) ,( ( RRSe + MUM ) + ( MLU + RMSe ) ) ) )", "obj1": 0.2510204081632653, "obj2": 0.7399316002969256}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / FirstVNF_RAM ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( RCSe + ( RMSe + RCSe ) )", "obj1": 0.4326530612244898, "obj2": 0.5634961111955301}, {"determining": "( ( PN + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) * ( AMS / ARS ) )", "choosing": "( Min( ( ( MLU / RRSe ) + Min( DS ,MUR ) ) ,Min( ( MUR - MUC ) ,Min( CS ,MLU ) ) ) + ( ( ( RCSe / CS ) + ( MUC + ( CS - MLU ) ) ) * ( ( RMSe / RRSe ) + ( MLU + RRSe ) ) ) )", "obj1": 0.3142857142857143, "obj2": 0.6771874355028494}, {"determining": "Max( ( ( AMS / ( ( MDR + RRS ) * Min( ( Const / FirstVNF_Mem_Server ) ,Min( BR ,FirstVNF_Mem ) ) ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ),Max( ( AMS + FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe * Min( MUC ,Max( Max( ( MUR - MLU ),MUM ),RMSe ) ) ) * Max( MLU,CS ) ) + MUR ) / CS )", "obj1": 0.2673469387755102, "obj2": 0.7204888160115276}, {"determining": "( ( PN + MDR ) / ( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( ( MUC - RCSe ) - Max( DS,RCSe ) ) * Max( ( RRSe + RCSe ),( MUM * MUM ) ) )", "obj1": 0.26326530612244897, "obj2": 0.7263444519542365}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) * Min( DDR ,MRS ) ) * ( Min( PN ,FirstVNF_RAM ) + Min( MDR ,Const ) ) )", "choosing": "( ( ( MUR - MUR ) * ( DS - RCSe ) ) * Min( ( ( CS / DS ) + Max( RCSe,CS ) ) ,( ( RCSe - MUM ) + Max( MUM,DS ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7937907626064579}, {"determining": "Max( Min( Const ,FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,MUM ) )", "obj1": 0.4122448979591837, "obj2": 0.5769961549327478}, {"determining": "( ( BR - FirstVNF_CPU ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( Max( Min( Min( ( ( ( DS / RMSe ) + DS ) - MUC ) ,MUR ) ,Max( ( MLU + ( RMSe + Max( RRSe,MLU ) ) ),MUR ) ),( CS + MUM ) ) + RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5921048973712927}, {"determining": "Max( Max( AMS,AMS ),( Max( FirstVNF_Mem_Server,MDR ) * Min( BR ,FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - CS ) ,MUR ) * Max( MUR,( MLU * RMSe ) ) )", "obj1": 0.2816326530612245, "obj2": 0.705999793123216}, {"determining": "Max( Max( PN,( ( FirstVNF_CPU_Server / Max( Max( FirstVNF_RAM_Server,Max( AMS,PN ) ),Max( FirstVNF_Mem,ACS ) ) ) + ( FirstVNF_CPU_Server * AMS ) ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU - RMSe ) + ( MUM * MUR ) ) / ( ( CS * DS ) / Max( CS,MLU ) ) ) * ( Min( ( CS + RRSe ) ,( MLU / RCSe ) ) - ( ( MLU + CS ) - ( RCSe * MUM ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.7273086711368747}, {"determining": "( ( PN + Max( FirstVNF_CPU,RRS ) ) / ( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( ( DS - MUC ) - Max( DS,RCSe ) ) * Max( ( RRSe + RCSe ),( RMSe * MUM ) ) )", "obj1": 0.26326530612244897, "obj2": 0.7263444519542365}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + RRS ) - Min( AMS ,( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( MUC + DS ),Max( ( ( ( ( ( ( DS - RRSe ) + MUR ) - Min( RRSe ,( DS * MUR ) ) ) / ( MUM + RCSe ) ) - MLU ) - RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,ARS ) - ( AMS / MRS ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( Min( RCSe ,MUC ) * Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * RRS ) - ( AMS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RMSe * ( MLU / CS ) ),( ( DS - MUM ) / ( MLU / Min( MUC ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) / ( Max( RRS,ACS ) + ( ( FirstVNF_Mem_Server * Const ) / CRS ) ) )", "choosing": "Min( Max( ( Min( ( RMSe - ( MUM - MUC ) ) ,MUR ) + MUC ),MLU ) ,( MLU / ( CS + ( MLU / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + FirstVNF_CPU ) + ( FirstVNF_RAM * MDR ) ) - ( ( AMS * FirstVNF_CPU ) + ( ACS + PN ) ) )", "choosing": "Min( Max( ( CS - RCSe ),Max( CS,MUR ) ) ,( ( RCSe + MUC ) * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( FirstVNF_Mem_Server * DDR ) ) ,( ( MDR - MDR ) - Min( CRS ,ARS ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( AMS - MDR ),( FirstVNF_CPU_Server * MDR ) ),( ( CRS - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,ARS ) ) ) ,Min( ( ( BR - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,( ( PN / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR * MUM ),Min( CS ,RRSe ) ) * Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) - Min( ( ( RCSe + CS ) + Max( MUC,RMSe ) ) ,( Max( DS,DS ) + ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Max( ( MRS * ( CRS / FirstVNF_RAM_Server ) ),ACS ) ) - ( DDR / ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / MUR ) + ( ( ( MUM * RRSe ) / Max( RMSe,RCSe ) ) + Max( ( MUC / MUM ),( MUC + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * Max( ( ACS * BR ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_CPU + RRS ) - ( ARS + ARS ) ) ,Max( ( ACS + RRS ),( PN / MRS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUC ) * ( RCSe - MLU ) ) - ( Min( MUR ,MUC ) + Max( CS,MUM ) ) ) ,Min( ( ( CS + MUR ) + ( MUM + RRSe ) ) ,( ( DS * MUC ) - ( MUM * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + Min( Const ,PN ) ) ) - ( ( ( FirstVNF_RAM_Server * PN ) / ( AMS + ACS ) ) + ( ( AMS + FirstVNF_CPU_Server ) - ( ARS - Min( BR ,ACS ) ) ) ) )", "choosing": "( ( ( Max( CS,DS ) + ( MUC + RCSe ) ) / ( ( RCSe * Min( ( RRSe * MUC ) ,RMSe ) ) * ( MUR / RMSe ) ) ) / ( Max( ( MUM - CS ),( MUR - RMSe ) ) - ( Max( RRSe,CS ) - ( DS + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * Max( ACS,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_CPU + RRS ) - ( ARS + ARS ) ) ,Max( ( ACS + RRS ),( PN / MRS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUC ) * ( RCSe - MLU ) ) - ( Min( MUR ,MUC ) + Max( CS,MUM ) ) ) ,Min( ( ( CS + Max( ( RMSe * ( MLU / CS ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) ) ) + ( MUM + RRSe ) ) ,( ( DS * MUC ) - ( MUM * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ACS ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Max( ( RMSe * ( MLU / CS ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * Max( ( ACS * BR ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_CPU + RRS ) - ( ARS + ARS ) ) ,Max( ( ACS + RRS ),( PN / MRS ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUC ) * ( RCSe - MLU ) ) - ( Min( MUR ,MUC ) + Max( CS,MUM ) ) ) ,Min( ( ( CS + MUR ) + ( MUM + RRSe ) ) ,( ( DS * MUC ) - ( MUM * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - ( ( AMS * FirstVNF_CPU ) + ( ACS + PN ) ) )", "choosing": "Min( Max( ( CS - RCSe ),Max( CS,MUR ) ) ,( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,CRS ) + ( FirstVNF_RAM * MDR ) ) - ( ( AMS * FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU - MRS ) ) - FirstVNF_Mem ) - BR ) ) )", "choosing": "Min( ( RMSe * MUM ) ,( RRSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Max( ( RMSe * ( MLU / CS ) ),( ( DS - Max( MUM,MUC ) ) / ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ACS ) - ( AMS + FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server - BR ) ) - ( AMS + FirstVNF_CPU ) )", "choosing": "Max( ( RMSe * Max( MUM,CS ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * Max( MRS,ACS ) ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( Min( ( ( ( DS + MUR ) * MUM ) - ( Min( RRSe ,MLU ) - Max( RRSe,( MUC * Min( MUC ,MUC ) ) ) ) ) ,MUC ) * Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,FirstVNF_RAM ) - ( ( Max( Min( PN ,FirstVNF_CPU_Server ),( PN * Const ) ) + FirstVNF_Mem_Server ) - ARS ) )", "choosing": "Max( ( RMSe * ( Max( RRSe,MUC ) / CS ) ),( ( DS + MUM ) / ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( MRS * BR ),( FirstVNF_CPU_Server * MDR ) ),( ( CRS + FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,ARS ) ) ) ,Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + ( BR - ACS ) ) ,( ( PN / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR * MUM ),MUR ) * Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) - Min( ( ( ( MUM / Min( Min( MUC ,( RCSe / CS ) ) ,( RCSe / ( RCSe - CS ) ) ) ) + RCSe ) + Max( MUC,RMSe ) ) ,( Max( DS,DS ) + ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( AMS - MDR ),( FirstVNF_CPU_Server * MDR ) ),( ( CRS - FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,ARS ) ) ) ,Min( ( ( BR - ACS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,( ( PN / FirstVNF_RAM ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR * MUM ),Min( CS ,RRSe ) ) * Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) - Min( ( ( RCSe + CS ) + Max( MUC,RMSe ) ) ,( Max( DS,DS ) + ( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Max( FirstVNF_RAM_Server,CRS ) + Min( DDR ,DDR ) ),Max( ( CRS / RRS ),( MRS / FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) ) ) - ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - RRS ) - ( Max( PN,( PN * ACS ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( Min( Min( ( MLU / ( ( MUM - RRSe ) + MLU ) ) ,RRSe ) ,( ( ( RMSe * MLU ) + MUR ) + MUC ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / MDR ) / Max( CRS,Const ) ) - Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "Min( MLU ,( ( ( MUM / RCSe ) * Min( MLU ,CS ) ) + Min( ( RRSe + RMSe ) ,( RCSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Const + FirstVNF_Mem ) / ( ( ( DDR - ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * ( ACS + ( FirstVNF_RAM_Server / ARS ) ) ) )", "choosing": "( ( CS + RCSe ) * ( ( RCSe - MUC ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / FirstVNF_CPU_Server ) + ( ( ( Max( BR,ACS ) / Const ) - Min( FirstVNF_Mem ,BR ) ) - ( ( Min( CRS ,CRS ) + FirstVNF_CPU ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RRSe * Max( ( ( RRSe / MLU ) + RMSe ),MUR ) ) * Max( ( ( ( Min( ( MLU * RCSe ) ,( MUR / DS ) ) + MUM ) / ( MUC + MUR ) ) - MLU ),MLU ) ) + ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( Max( MUR,CS ) + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUC ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),( MLU * MLU ) )", "obj1": 0.6346938775510204, "obj2": 0.2633910363233497}, {"determining": "( ( AMS * ( Max( FirstVNF_Mem,Min( Const ,BR ) ) * ( DDR / ACS ) ) ) - ( ( ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) / ( BR * FirstVNF_RAM ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( Max( RCSe,MUR ),Max( MUM,RRSe ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( RCSe / RRSe ) )", "obj1": 0.8428571428571429, "obj2": 0.1373532724081892}, {"determining": "( ( ARS - MRS ) + ( FirstVNF_CPU - ( RRS + BR ) ) )", "choosing": "( Max( MUM,CS ) * ( ( DS - Max( MLU,( ( MUM + ( ( CS - CS ) + ( RMSe / RMSe ) ) ) + RRSe ) ) ) + MUC ) )", "obj1": 0.6775510204081633, "obj2": 0.23329547649688145}, {"determining": "( ( AMS * ACS ) - FirstVNF_RAM_Server )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7204081632653061, "obj2": 0.20000405821960954}, {"determining": "( ( AMS * ACS ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "Max( ( RMSe * ( MLU / CS ) ),( ( DS - MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.5428571428571428, "obj2": 0.4257054256609287}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * ( AMS + ACS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.4959183673469388, "obj2": 0.473399471605027}, {"determining": "( Min( ( ( FirstVNF_RAM * MDR ) * ( FirstVNF_Mem / ARS ) ) ,Max( ( ( DDR * BR ) * ( Min( CRS ,( AMS * FirstVNF_Mem_Server ) ) / RRS ) ),( FirstVNF_Mem + DDR ) ) ) + Min( ( Max( CRS,FirstVNF_CPU ) / Max( MRS,Const ) ) ,( ( DDR * ARS ) / ( ACS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Min( RMSe ,MUR ),( RCSe + DS ) ) * ( ( RCSe + RCSe ) * Min( CS ,RRSe ) ) ) ,Max( ( ( ( ( RMSe + ( CS - DS ) ) * MUM ) + ( MUC - ( ( CS * MUC ) * ( MLU * MUM ) ) ) ) - Min( MUM ,( RRSe - MLU ) ) ),Max( Min( RRSe ,MUM ),Min( MLU ,MLU ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.1802565453985204}, {"determining": "( Min( AMS ,Max( ( MRS * ( CRS / FirstVNF_RAM_Server ) ),ACS ) ) - ( ACS / ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / MUR ) + Min( MUC ,MUC ) )", "obj1": 0.789795918367347, "obj2": 0.14830300072233354}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) * Max( ARS,BR ) )", "choosing": "( ( RCSe / RCSe ) + ( RMSe + MLU ) )", "obj1": 0.6, "obj2": 0.40589123129478866}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),Min( ( ACS / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( ( ( Min( ( RCSe - CS ) ,MUR ) * Max( MUR,( MLU * RMSe ) ) ) + DS ) / ( MUM * MUR ) ) )", "obj1": 0.463265306122449, "obj2": 0.5292511208822722}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( CRS * ( Min( AMS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUC - DS ) + ( CS / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( RRSe * MUR ) / Min( ( MLU * ( ( RMSe * MLU ) + MUM ) ) ,RCSe ) ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.6916608763469059}, {"determining": "( ( AMS * ACS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "Max( Min( ( DS / DS ) ,( CS / RRSe ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 0.6122448979591837, "obj2": 0.34324092862389877}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - ( ( FirstVNF_CPU + RRS ) - ( ARS + ARS ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Min( ( ( Max( MUR,MUC ) * ( RCSe - MLU ) ) - ( Min( MUR ,MUC ) + Max( CS,MUM ) ) ) ,Min( ( ( CS + MUR ) + ( MUM + RRSe ) ) ,( ( DS * MUC ) - ( MUM * MUC ) ) ) ) ) ,MUM ) )", "obj1": 0.6040816326530613, "obj2": 0.3728716119360658}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.24693877551020407, "obj2": 0.7356147069947626}, {"determining": "Min( Max( ( Max( FirstVNF_RAM_Server,CRS ) + Min( DDR ,DDR ) ),Max( ( CRS / RRS ),( MRS / FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.9040816326530612, "obj2": 0.10708593906179054}, {"determining": "( RRS * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07959183673469387, "obj2": 0.9076906797324589}, {"determining": "( ( RRS - ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( RRSe * MUM ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.05212569026156457}, {"determining": "( ( AMS * ACS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "Max( Min( ( DS / DS ) ,( CS / RRSe ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 0.6122448979591837, "obj2": 0.34324092862389877}, {"determining": "Max( ( ( ( DDR * MRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),( FirstVNF_RAM - Min( FirstVNF_Mem ,RRS ) ) ) - ( Min( AMS ,RRS ) / ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( Max( ( ( CS - MUM ) * Max( RMSe,RCSe ) ),( ( DS - RMSe ) - ( RMSe - RMSe ) ) ) ,Max( ( ( RMSe + MUR ) + ( MLU - ( Min( DS ,MUC ) + DS ) ) ),Max( ( MLU - MUR ),( RCSe + MLU ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8331801906404099}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ( ACS * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( ( RMSe * RRSe ) + Min( DS ,MUM ) ) )", "obj1": 0.9285714285714286, "obj2": 0.07648844342579914}, {"determining": "( Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.37142857142857144, "obj2": 0.5933292069084437}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( ( ( MUR / RMSe ) * ( MLU * MUC ) ) ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.9877551020408163, "obj2": 0.01342700592259243}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RCSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.5163265306122449, "obj2": 0.46107081534005834}, {"determining": "( ( Const + Const ) + ( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - Min( MUM ,MLU ) )", "obj1": 0.17959183673469387, "obj2": 0.8114305143263686}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) * ( Max( RRS,BR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + RRSe )", "obj1": 0.39387755102040817, "obj2": 0.5859471674245259}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( MUR ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.025591074980992737}, {"determining": "( ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * CRS ) ) * Max( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( RRS - ARS ) ) + BR ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( RMSe,CS ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.2897959183673469, "obj2": 0.689580843667167}, {"determining": "( Min( DDR ,BR ) * Min( Min( Max( AMS,MDR ) ,DDR ) ,ARS ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe * CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + Min( MUR ,MLU ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( ( ( RRS - Const ) / ( ACS - Const ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RCSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU ),( ( ( ( Const - ( PN * CRS ) ) + Max( Max( CRS,CRS ),Max( PN,( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( MUR + MUC ) * RCSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8525862620859138}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) )", "obj1": 0.4489795918367347, "obj2": 0.5298535872243763}, {"determining": "( ( ( RRS - Const ) - ( Max( PN,MDR ) / ( CRS - FirstVNF_Mem ) ) ) - Min( Min( Max( CRS,FirstVNF_Mem_Server ) ,( MRS * CRS ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe / RCSe ) + ( MUR - RCSe ) )", "obj1": 0.9571428571428572, "obj2": 0.04981177793747644}, {"determining": "Max( ( Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( FirstVNF_Mem_Server * DDR ) ) ,( ( MDR - MDR ) - Min( CRS ,ARS ) ) ) * ARS ),( Const * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MUM ,RCSe ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.19387755102040816, "obj2": 0.8010711859845284}, {"determining": "( ( FirstVNF_RAM / ( ( ARS / Const ) + Min( ( AMS - FirstVNF_CPU ) ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Min( RMSe ,RRSe ) / ( MUC + Max( DS,DS ) ) )", "obj1": 0.42857142857142855, "obj2": 0.5500685387241004}, {"determining": "( ( ( RRS - Const ) / ( ACS * ( Max( ( ( FirstVNF_CPU + CRS ) / DDR ),FirstVNF_Mem_Server ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( MUC * Max( ( MUR / MUC ),( MLU * MUM ) ) ) * Min( Max( RCSe,Max( ( Min( ( RMSe / MLU ) ,( MUM + ( MUR / RRSe ) ) ) + ( Max( RCSe,Min( RMSe ,MUM ) ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9653061224489796, "obj2": 0.02930652249995143}, {"determining": "( ( FirstVNF_RAM_Server / Max( Min( FirstVNF_RAM_Server ,PN ),( FirstVNF_Mem - ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUC ,( DS - Min( MUC ,RCSe ) ) ) ,( MUC + RRSe ) ) + ( MUM / RRSe ) )", "obj1": 0.3448979591836735, "obj2": 0.629178833580414}, {"determining": "Min( Max( ( Max( FirstVNF_RAM_Server,CRS ) + Min( DDR ,DDR ) ),Max( ( CRS / RRS ),( MRS / FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.9040816326530612, "obj2": 0.10708593906179054}, {"determining": "( ( FirstVNF_RAM / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( Min( MRS ,MRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( RRSe * MUM ),Max( MUM,( ( Max( Max( RMSe,Min( RMSe ,MUM ) ),RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,MUC ) ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 0.3224489795918367, "obj2": 0.6631672983397986}, {"determining": "Min( Max( ( Max( FirstVNF_RAM_Server,CRS ) + Min( DDR ,DDR ) ),Max( ( CRS / RRS ),( MRS / FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "( Max( ( RRSe * MUM ),Max( MUM,( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,MUC ) ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 0.9183673469387755, "obj2": 0.0879477570485145}, {"determining": "Max( ( ACS - ( PN * BR ) ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( MLU - Min( ( ( CS / ( MUC * DS ) ) - Max( Min( MLU ,MUM ),MUC ) ) ,RCSe ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Min( RMSe ,MUR ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8386918240469015}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( CRS + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6709724302699122}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( CRS + DDR ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( ( ( DS * CS ) - ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.2, "obj2": 0.7882518990520252}, {"determining": "( ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * CRS ) ) * Max( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( RRS - ARS ) ) + BR ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( RMSe,CS ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.3510204081632653, "obj2": 0.614850520124687}, {"determining": "( Min( DDR ,BR ) * Min( DDR ,ARS ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Min( Max( ( Max( FirstVNF_RAM_Server,CRS ) + Min( DDR ,DDR ) ),( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( RRSe - MUC ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.9081632653061225, "obj2": 0.10388409679692776}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + FirstVNF_CPU ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUM - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( MUR ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.963265306122449, "obj2": 0.044517617057236156}, {"determining": "Max( ( ( ( DDR * MRS ) - Min( Max( ( FirstVNF_CPU + ACS ),( CRS - ( DDR * Min( PN ,RRS ) ) ) ) ,FirstVNF_RAM_Server ) ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),( FirstVNF_RAM - Min( FirstVNF_Mem ,RRS ) ) ) - Max( Min( AMS ,RRS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8736029236070392}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( RMSe - RRSe ) )", "obj1": 0.44285714285714284, "obj2": 0.5429876587647755}, {"determining": "( ( ( RRS - Const ) / ( Const - ACS ) ) - Min( Max( FirstVNF_CPU,MDR ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,RMSe ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45770797349276965}, {"determining": "( ( ( RRS - Const ) / ( ACS - Const ) ) - Min( ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RMSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9979591836734694, "obj2": 0.0016073961057963798}, {"determining": "Max( ( Min( MRS ,MRS ) * Min( FirstVNF_Mem_Server ,Max( DDR,( FirstVNF_RAM_Server + AMS ) ) ) ),Min( FirstVNF_RAM ,( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,Min( MUM ,( MUC + CS ) ) ) - Max( ( RCSe * RMSe ),( MLU + RRSe ) ) )", "obj1": 0.23265306122448978, "obj2": 0.7639669457164687}, {"determining": "Max( ( ( ( ACS / Min( ACS ,FirstVNF_RAM ) ) - PN ) * FirstVNF_Mem_Server ),( FirstVNF_Mem / FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUR,RRSe ),( RRSe + MUM ) ) + Max( ( MUM / MUM ),RRSe ) ),Min( MUM ,RCSe ) )", "obj1": 0.20612244897959184, "obj2": 0.7822554270280049}, {"determining": "( Min( AMS ,Max( ( MRS * ( CRS / FirstVNF_RAM_Server ) ),ACS ) ) - ( DDR / ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / MUR ) + ( ( ( MUM * RRSe ) / Max( RMSe,RCSe ) ) + Max( ( MUC / MUM ),( MUC + RRSe ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.5601588262532641}, {"determining": "( ( Const + Const ) + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + RRS ) ) )", "choosing": "( ( ( ( MUC - Min( ( Max( Min( RMSe ,RRSe ),( RCSe * RMSe ) ) - Min( RCSe ,MLU ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( DS ,DS ) ) ,( Min( MLU ,MUR ) * MUC ) ) ) ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe / MUR ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.8076042612660342}, {"determining": "( Min( AMS ,Max( ( MRS * ( CRS / FirstVNF_RAM_Server ) ),ACS ) ) - ( DDR / ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / MUR ) + ( ( ( MUM * RRSe ) / Max( RMSe,RCSe ) ) + Max( ( MUC / MUM ),( MUC + RRSe ) ) ) )", "obj1": 0.3673469387755102, "obj2": 0.6121782493317309}, {"determining": "( ( CRS - ( ( PN - ( BR / Min( ( BR + ( CRS - FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,PN ) ) ) ) - ( MDR * CRS ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( RCSe - ( CS - RRSe ) ) / ( ( RMSe / RRSe ) - ( MUC / MUC ) ) ) + ( ( RRSe - MUM ) + MLU ) )", "obj1": 0.14081632653061224, "obj2": 0.8474807438174222}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RRSe * MUM ),Max( MUM,( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,MUC ) ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 0.41836734693877553, "obj2": 0.564482830892833}, {"determining": "( ( FirstVNF_RAM_Server / ( Max( ( BR - FirstVNF_CPU ),( FirstVNF_Mem_Server * DDR ) ) - RRS ) ) * ( FirstVNF_RAM_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RCSe * ( Max( ( ( Max( MUR,DS ) + Min( RMSe ,CS ) ) - RRSe ),MLU ) + Max( Min( ( RRSe / RRSe ) ,( MUC + RRSe ) ),RRSe ) ) ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.3693877551020408, "obj2": 0.6090107131341617}, {"determining": "( ( ( RRS / FirstVNF_RAM_Server ) * ( Max( FirstVNF_CPU_Server,ARS ) + FirstVNF_CPU ) ) * ( Min( Const ,( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( Max( CS,RCSe ) + Max( ( MUC - MUC ),( MUC / CS ) ) ) + ( ( ( Min( MUC ,( MUC + RCSe ) ) + RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * Min( RMSe ,MUR ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8650178064155785}, {"determining": "( ( Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) * ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),( MLU * RCSe ) ) + ( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( ( Min( ( MUM / RCSe ) ,MUR ) * DS ) - ( ( CS - Max( MUC,MUC ) ) * DS ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.3, "obj2": 0.67229605510543}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),( ( Const + Const ) + Min( MRS ,DDR ) ) )", "choosing": "( ( RMSe / CS ) / Max( RCSe,MUC ) )", "obj1": 0.29591836734693877, "obj2": 0.683276783356356}, {"determining": "Min( Max( ( Max( FirstVNF_RAM_Server,CRS ) + Min( DDR ,DDR ) ),Max( ( CRS / RRS ),( MRS / FirstVNF_RAM_Server ) ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( RMSe - RRSe ) )", "obj1": 0.9224489795918367, "obj2": 0.08619798368510845}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),( ACS - FirstVNF_Mem ) ) ) - AMS )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( ( MUM + RMSe ) ,( MLU / CS ) ) ) + CS )", "obj1": 0.3346938775510204, "obj2": 0.6514632585356253}, {"determining": "( ( Const + Const ) + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + RRS ) ) )", "choosing": "( ( ( ( MUC - Min( ( Max( Min( RMSe ,RRSe ),( RCSe * RMSe ) ) - Min( RCSe ,MLU ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( DS ,DS ) ) ,( Min( MLU ,MUR ) * MUC ) ) ) ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe / MUR ) ) ) )", "obj1": 0.22244897959183674, "obj2": 0.7679589117878154}, {"determining": "( ( FirstVNF_RAM / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_Mem_Server / Const ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RRSe * MUM ),Max( ( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ),( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,MUC ) ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 0.24285714285714285, "obj2": 0.7474677844642252}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) ) - ( ( ( FirstVNF_Mem - Const ) / Max( AMS,MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( MRS * MRS ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8650178064155785}, {"determining": "( ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) - Max( MRS,AMS ) )", "choosing": "( ( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,MUC ) ) ) / ( RRSe * CS ) )", "obj1": 0.4020408163265306, "obj2": 0.5784746532435155}, {"determining": "( Max( ( ARS - Max( FirstVNF_Mem_Server,( MRS - ( Max( BR,Max( BR,ACS ) ) + ARS ) ) ) ),ARS ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,RMSe ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7778670539275383}, {"determining": "( Max( ( ARS - Max( FirstVNF_Mem_Server,( MRS - ( Max( BR,Max( BR,ACS ) ) + ARS ) ) ) ),ARS ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,RMSe ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7547611462424632}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.639673172752087}, {"determining": "Max( ( Min( ( ( ACS * Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,AMS ) ) ) + Min( CRS ,FirstVNF_Mem_Server ) ) ,( Min( CRS ,ARS ) - ( MDR - MDR ) ) ) * ARS ),( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( MUC + ( ( MUC + ( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - Max( MLU,RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( RMSe / MUR ) )", "obj1": 0.32653061224489793, "obj2": 0.6590315135867033}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) + ( PN + Max( FirstVNF_CPU,RRS ) ) )", "choosing": "Max( ( ( RMSe + RMSe ) - DS ),( ( MUR * RMSe ) * ( RRSe * CS ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7460610584968028}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.32857142857142857, "obj2": 0.653218679032834}, {"determining": "Min( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( FirstVNF_Mem_Server * DDR ) ) ,( ( MDR - MDR ) - ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) ) )", "choosing": "( Min( ( MLU + RRSe ) ,( MUC + RRSe ) ) + ( MUM / RRSe ) )", "obj1": 0.4, "obj2": 0.5832966333416518}, {"determining": "( ( ACS * AMS ) + ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,MUM ) )", "obj1": 0.4122448979591837, "obj2": 0.5769961549327478}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( RMSe - RRSe ) )", "obj1": 0.44285714285714284, "obj2": 0.5429876587647755}, {"determining": "( ( RRS - ( ( BR + FirstVNF_CPU ) - ( MDR * CRS ) ) ) + ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) / Const ) )", "choosing": "( Min( ( MLU * MUM ) ,( MUC / MLU ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8473326360975227}, {"determining": "( ( FirstVNF_RAM / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RRSe * MUM ),Max( MUM,( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,MUC ) ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 0.4163265306122449, "obj2": 0.5730204095211813}, {"determining": "( Max( BR,ARS ) * ( BR + CRS ) )", "choosing": "Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7778670539275383}, {"determining": "( ( Const + Const ) + Min( MRS ,DDR ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6859445193195461}, {"determining": "( ( Const + Const ) + Max( FirstVNF_CPU_Server,( FirstVNF_CPU + RRS ) ) )", "choosing": "( ( ( ( MUC - Min( ( Max( Min( RMSe ,RRSe ),( RCSe * RMSe ) ) - Min( RCSe ,MLU ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( DS ,DS ) ) ,( Min( MLU ,MUR ) * MUC ) ) ) ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe / MUR ) ) ) )", "obj1": 0.22244897959183674, "obj2": 0.7679589117878154}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( ( ( ( CRS - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + Min( Const ,PN ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUM - CS ),( MUR - RMSe ) ) - ( Max( RRSe,CS ) - ( DS + RMSe ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.8466490543963454}, {"determining": "( Max( ( ARS - Max( FirstVNF_Mem_Server,( MRS - ( Max( BR,Max( BR,ACS ) ) + ARS ) ) ) ),ARS ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,RMSe ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7547611462424632}, {"determining": "( ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * CRS ) ) * Max( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( RRS - ARS ) ) + BR ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( RMSe,CS ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.3510204081632653, "obj2": 0.614850520124687}, {"determining": "Min( ( ( CRS + Min( AMS ,FirstVNF_CPU ) ) - Max( ( AMS + CRS ),FirstVNF_CPU_Server ) ) ,Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) )", "choosing": "Max( Min( MUM ,( CS - ( ( ( Min( Max( MLU,CS ) ,DS ) / RRSe ) / ( RRSe + ( RMSe + ( DS - MUR ) ) ) ) + RCSe ) ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.9061224489795918, "obj2": 0.10447233721323068}, {"determining": "( ( FirstVNF_RAM / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RRSe * MUM ),Max( MUM,( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,MUC ) ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 0.4163265306122449, "obj2": 0.5730204095211813}, {"determining": "( ( ACS * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) + ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * RRSe ) + Min( DS ,MUM ) )", "obj1": 0.4122448979591837, "obj2": 0.5769961549327478}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( ( ( ( CRS - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + Min( Const ,PN ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUM - CS ),( MUR - RMSe ) ) - ( Max( RRSe,CS ) - ( DS + RMSe ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.8466490543963454}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( CRS + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( ( FirstVNF_CPU - Min( CRS ,FirstVNF_RAM_Server ) ) + CRS ) + ( FirstVNF_CPU * ARS ) ) )", "choosing": "( ( Min( Max( RRSe,RCSe ) ,DS ) + RCSe ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.2897959183673469, "obj2": 0.689580843667167}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.639673172752087}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + MDR ) ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * RMSe ) / ( ( ( CS + MUM ) / Max( Min( ( CS / CS ) ,RMSe ),( Max( RCSe,Min( ( CS * RCSe ) ,CS ) ) * ( ( ( RMSe / CS ) + MUC ) / MUC ) ) ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + RRS ) - Min( AMS ,( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( MUC + DS ),Max( ( ( ( ( ( ( DS - RRSe ) + MUR ) - Min( RRSe ,( DS * MUR ) ) ) / ( MUM + RCSe ) ) - MLU ) - RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,ARS ) - ( AMS / MRS ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( Min( RCSe ,MUC ) * Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + Max( ( RRS * ACS ),Min( ( Const / FirstVNF_Mem_Server ) ,MDR ) ) ) - Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( MUC * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( ( DS * ( ( ( Max( MUM,MUM ) + Max( CS,MUM ) ) - MUM ) / RMSe ) ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem ) / ( ( ( DDR - ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * ( ACS + ( FirstVNF_RAM_Server / ARS ) ) ) )", "choosing": "( ( CS + RCSe ) * ( ( RCSe - MUC ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9106986243572035}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( RCSe - RRSe ) / ( RCSe - MUM ) ) )", "obj1": 0.5938775510204082, "obj2": 0.341912170313677}, {"determining": "( Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( Max( MUR,CS ) + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUC ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),( MLU * MLU ) )", "obj1": 0.6346938775510204, "obj2": 0.2633910363233497}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( ( FirstVNF_RAM / ( ( ARS / Const ) + Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - FirstVNF_CPU ) ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Min( RMSe ,RRSe ) / ( MUC + Max( ( Min( ( MLU * MUM ) ,( MUC / MLU ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ),DS ) ) )", "obj1": 0.5714285714285714, "obj2": 0.4087905368514593}, {"determining": "( ( AMS * ACS ) - ( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU + RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( RMSe / MUM ) )", "obj1": 0.8775510204081632, "obj2": 0.09034040140614842}, {"determining": "( Min( ARS ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( MLU ,Max( ( Max( MUR,CS ) + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUC ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),( MLU * MLU ) )", "obj1": 0.7428571428571429, "obj2": 0.17974934899198927}, {"determining": "( ( AMS * ACS ) - FirstVNF_RAM_Server )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7204081632653061, "obj2": 0.20000405821960954}, {"determining": "( Min( AMS ,Max( ( MRS * ( CRS / FirstVNF_RAM_Server ) ),ACS ) ) - ( ACS / ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / MUR ) + Min( MUC ,MUC ) )", "obj1": 0.789795918367347, "obj2": 0.14830300072233354}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9081632653061225, "obj2": 0.060533950428643894}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( CRS * ( Min( AMS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUC - DS ) + ( CS / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( RRSe * MUR ) / Min( ( MLU * ( ( RMSe * MLU ) + MUM ) ) ,RCSe ) ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.6916608763469059}, {"determining": "( ( BR - FirstVNF_Mem_Server ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( MRS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( ( MUM * RRSe ) + Min( MUM ,( DS / MUC ) ) ) )", "obj1": 0.47959183673469385, "obj2": 0.5011852581326941}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( Min( Const ,FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8048702450229162}, {"determining": "( ( AMS * ACS ) - ( ( RRS / FirstVNF_CPU ) + FirstVNF_CPU ) )", "choosing": "Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.8469387755102041, "obj2": 0.13079180901504744}, {"determining": "( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) - Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) * ( AMS + ACS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.4959183673469388, "obj2": 0.473399471605027}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( Max( ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_CPU - CRS ) ),Min( ( ACS / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( ( ( Min( ( RCSe - CS ) ,MUR ) * Max( MUR,( MLU * RMSe ) ) ) + DS ) / ( MUM * MUR ) ) )", "obj1": 0.463265306122449, "obj2": 0.5292511208822722}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( MUC + DS ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.24693877551020407, "obj2": 0.7356147069947626}, {"determining": "( ( AMS * ACS ) - ( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 0.8244897959183674, "obj2": 0.14614188155330443}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_Mem - ACS ) / Max( MDR,PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( RRSe - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.892234124185397}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ( ( FirstVNF_CPU_Server / ARS ) / Const ) - Min( FirstVNF_Mem ,BR ) ) / Min( ( ACS - FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) + ( PN + Max( FirstVNF_CPU,RRS ) ) )", "choosing": "Max( ( Min( MUC ,MUC ) - DS ),( ( MUR * MLU ) * ( RRSe * CS ) ) )", "obj1": 0.19387755102040816, "obj2": 0.792292720148534}, {"determining": "( ( AMS - FirstVNF_RAM_Server ) * FirstVNF_Mem_Server )", "choosing": "( ( RCSe / RCSe ) + Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),Min( ( MUM + RMSe ) ,( MLU / CS ) ) ) )", "obj1": 0.5387755102040817, "obj2": 0.43416044933310227}, {"determining": "( ( ARS - MRS ) + ( FirstVNF_CPU - ( RRS + BR ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( MUM,CS ) )", "obj1": 0.4, "obj2": 0.5520507510912745}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( MUM,CS ) * ( MUC + MUR ) )", "obj1": 0.3836734693877551, "obj2": 0.5578043054606049}, {"determining": "( ( FirstVNF_RAM_Server / ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( FirstVNF_Mem_Server * DDR ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( CS + DS ),Max( CS,RRSe ) )", "obj1": 0.4387755102040816, "obj2": 0.5298073293773745}, {"determining": "( Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.37142857142857144, "obj2": 0.5933292069084437}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RCSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ,MUM ) )", "obj1": 0.5204081632653061, "obj2": 0.45660565973254424}, {"determining": "( ( RRS - ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( RRSe * MUM ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.05212569026156457}, {"determining": "( ( AMS * ACS ) - ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( RMSe * ( MLU / ( Min( MUM ,MLU ) * ( ( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) ) ),( ( DS - MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6883755944126886}, {"determining": "( Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,AMS ) ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( ( MUM / RRSe ) / ( RCSe - RRSe ) ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.35714285714285715, "obj2": 0.6038266164645202}, {"determining": "( RRS * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07959183673469387, "obj2": 0.9076906797324589}, {"determining": "( ( ( ( ( ARS + BR ) + MRS ) * ( MRS / ( ( ( PN * FirstVNF_RAM_Server ) - MRS ) / MRS ) ) ) / ( RRS - Min( Const ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM - MLU ) * ( ( Max( ( MUR - RRSe ),( MLU + ( ( MUC / RMSe ) - Max( CS,DS ) ) ) ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.3122448979591837, "obj2": 0.6551659008105356}, {"determining": "Max( ( ACS - ( PN * BR ) ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( MLU - Min( ( ( CS / ( MUC * DS ) ) - Max( Min( MLU ,MUM ),MUC ) ) ,RCSe ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Min( RMSe ,MUR ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8386918240469015}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( CS * ( MUC / DS ) ) - ( RMSe / MUR ) )", "obj1": 0.9551020408163265, "obj2": 0.03657735921352122}, {"determining": "( ( AMS * ( Max( FirstVNF_Mem,Min( Const ,BR ) ) * ( DDR / ACS ) ) ) - ( ( ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) / ( BR * FirstVNF_RAM ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( Max( RCSe,MUR ),Max( MUM,RRSe ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( RCSe / RRSe ) )", "obj1": 0.8428571428571429, "obj2": 0.1373532724081892}, {"determining": "( ( AMS * ACS ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "Max( ( RMSe * ( MLU / CS ) ),( ( DS - MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.5428571428571428, "obj2": 0.4257054256609287}, {"determining": "( Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.19795918367346937, "obj2": 0.775304975788909}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ( ACS * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RCSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9469387755102041, "obj2": 0.050490526882830275}, {"determining": "( ( FirstVNF_RAM_Server / Max( Min( FirstVNF_RAM_Server ,PN ),( FirstVNF_Mem - ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUC ,( DS - Min( MUC ,RCSe ) ) ) ,( MUC + RRSe ) ) + ( MUM / RRSe ) )", "obj1": 0.3448979591836735, "obj2": 0.629178833580414}, {"determining": "( Max( ARS,( ARS - Max( FirstVNF_Mem_Server,( MRS - ( Max( BR,Max( BR,ACS ) ) + CRS ) ) ) ) ) * ( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,( MUR / RCSe ) ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) / ( CS * MUR ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7718792125743023}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MUR + MUC ),( MLU * MUM ) ) + ( RMSe - RRSe ) )", "obj1": 0.4306122448979592, "obj2": 0.5483150105776471}, {"determining": "( ( FirstVNF_RAM / ( ( ARS / Const ) + Min( ( AMS - FirstVNF_CPU ) ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Min( RMSe ,RRSe ) / ( MUC + Max( DS,DS ) ) )", "obj1": 0.42857142857142855, "obj2": 0.5500685387241004}, {"determining": "( ( FirstVNF_RAM / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_Mem_Server / Const ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( RRSe * MUM ),Max( ( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ),( ( Max( RCSe,RCSe ) + MUC ) * Min( MUM ,Min( RMSe ,MUC ) ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 0.24285714285714285, "obj2": 0.7474677844642252}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( CRS + DDR ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( ( ( DS * CS ) - ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.22040816326530613, "obj2": 0.7665086872113835}, {"determining": "( ( ( RRS - Const ) / ( ACS * ( Max( ( ( FirstVNF_CPU + CRS ) / DDR ),FirstVNF_Mem_Server ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( MUC * Max( ( MUR / MUC ),( MLU * MUM ) ) ) * Min( Max( RCSe,Max( ( Min( ( RMSe / MLU ) ,( MUM + ( MUR / RRSe ) ) ) + ( Max( RCSe,Min( RMSe ,MUM ) ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9653061224489796, "obj2": 0.02930652249995143}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RCSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.5163265306122449, "obj2": 0.46107081534005834}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( MUR ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.025591074980992737}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) + ( PN + Max( FirstVNF_CPU,( ( Min( ARS ,ACS ) * AMS ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( Max( RRSe,MUR ),RMSe ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS / MUR ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7536956089395827}, {"determining": "( Max( ( ( AMS / FirstVNF_CPU ) / ( AMS + Max( ( Min( ACS ,Const ) + FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ),Max( ( BR - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,MUM ) * ( ( Max( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( MUM * MUM ) )", "obj1": 0.37142857142857144, "obj2": 0.5933292069084437}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_Mem / ARS ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( MUM / RRSe ) )", "obj1": 0.9877551020408163, "obj2": 0.01339287182807679}, {"determining": "( ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + FirstVNF_CPU ) * ACS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "Max( Min( ( DS / DS ) ,Max( Min( MUR ,RCSe ),Max( RMSe,MUC ) ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 0.9836734693877551, "obj2": 0.014676422029232273}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ( ACS * ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( ACS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ) - Min( BR ,RRS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( ( Min( MUC ,Max( ( ( MUM - MUR ) - DS ),DS ) ) * RRSe ) + Min( RRSe ,MUM ) ) )", "obj1": 0.9959183673469387, "obj2": 0.00424997195832087}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( CRS + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6709724302699122}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( ( ( MUR / RMSe ) * ( MLU * MUC ) ) ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6768735819786468}, {"determining": "Max( ( ( ( DDR * MRS ) - Min( Max( ( FirstVNF_CPU + ACS ),( CRS - ( DDR * Min( PN ,RRS ) ) ) ) ,FirstVNF_RAM_Server ) ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),( FirstVNF_RAM - Min( FirstVNF_Mem ,RRS ) ) ) - Max( Min( AMS ,RRS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8736029236070392}, {"determining": "( ( AMS * ACS ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "Max( ( RMSe * ( MLU / CS ) ),( ( DS - MUM ) / Min( MUR ,MUC ) ) )", "obj1": 0.5428571428571428, "obj2": 0.4257054256609287}, {"determining": "( ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * CRS ) ) * Max( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( RRS - ARS ) ) + BR ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( RMSe,CS ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.3510204081632653, "obj2": 0.614850520124687}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),( Const + ACS ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( DS + ( RMSe + RCSe ) ) + ( Max( RMSe,MUR ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8534893815044823}, {"determining": "( ( BR / ACS ) * ( Max( RRS,BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) + ( ( ( MLU / RMSe ) + ( ( Min( ( DS * ( RCSe + MUM ) ) ,MUC ) + Min( ( MUC * RMSe ) ,RMSe ) ) / DS ) ) + ( Max( RRSe,RRSe ) * Max( MUR,RMSe ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8676059390787261}, {"determining": "( ( Min( ( ACS - FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) + ( PN - ( ( ARS + FirstVNF_CPU ) * FirstVNF_CPU ) ) )", "choosing": "( ( MUC + DS ) + ( MUC - Max( RMSe,( ( ( Min( Max( RCSe,DS ) ,MUR ) - Max( RCSe,MUC ) ) - ( MUC * MUC ) ) - ( CS + ( ( MUR * MLU ) - CS ) ) ) ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8468025121788985}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU ),( ( ( ( Const - ( PN * CRS ) ) + Max( Max( CRS,CRS ),Max( PN,( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( MUR + MUC ) * RCSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8525862620859138}, {"determining": "( ( CRS - ( ( PN - ( BR / Min( ( BR + ( CRS - FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,PN ) ) ) ) - ( MDR * CRS ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( RCSe - ( CS - RRSe ) ) / ( ( RMSe / RRSe ) - ( MUC / MUC ) ) ) + ( ( RRSe - MUM ) + MLU ) )", "obj1": 0.14081632653061224, "obj2": 0.8474807438174222}, {"determining": "( ( ARS - MRS ) + ( FirstVNF_CPU - ( RRS + BR ) ) )", "choosing": "( Max( MUM,CS ) * ( ( DS - Max( MLU,( ( MUM + ( ( CS - CS ) + ( RMSe / RMSe ) ) ) + RRSe ) ) ) + MUC ) )", "obj1": 0.3836734693877551, "obj2": 0.5578043054606049}, {"determining": "( ( Max( FirstVNF_CPU,( ( MDR + AMS ) / ( MDR * PN ) ) ) + ( DDR + CRS ) ) * Max( Min( ( ( DDR / FirstVNF_CPU_Server ) + BR ) ,DDR ),Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( ( RRSe / MUR ) - ( Max( Max( RMSe,CS ),RRSe ) + ( Max( ( ( ( ( RRSe + RCSe ) * RMSe ) + ( CS + ( RRSe / CS ) ) ) / MUR ),Max( Max( RMSe,MUC ),Max( ( RMSe / RCSe ),MUR ) ) ) + RCSe ) ) )", "obj1": 0.3326530612244898, "obj2": 0.6472447699011165}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( ( ( ( CRS - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + Min( Const ,PN ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUM - CS ),( MUR - RMSe ) ) - ( Max( RRSe,CS ) - ( DS + RMSe ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8637365582202788}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.32857142857142857, "obj2": 0.653218679032834}, {"determining": "( ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * CRS ) ) * Max( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( RRS - ARS ) ) + BR ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( RMSe,CS ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.3510204081632653, "obj2": 0.614850520124687}, {"determining": "( Min( DDR ,BR ) * Min( Min( Max( AMS,MDR ) ,DDR ) ,ARS ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe * CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + Min( MUR ,MLU ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "( Max( ( ARS - Max( FirstVNF_Mem_Server,( MRS - ( Max( BR,Max( BR,ACS ) ) + ARS ) ) ) ),ARS ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,RMSe ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.22244897959183674, "obj2": 0.7585252865715231}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RCSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.5163265306122449, "obj2": 0.46107081534005834}, {"determining": "( ( Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) * ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),( MLU * RCSe ) ) + ( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( ( Min( ( MUM / RCSe ) ,MUR ) * DS ) - ( ( CS - Max( MUC,MUC ) ) * DS ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.3, "obj2": 0.67229605510543}, {"determining": "( Min( AMS ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( FirstVNF_Mem_Server * DDR ) ) - RRS ) ) )", "choosing": "Max( ( CS + ( Min( MUM ,MLU ) * ( ( Max( ( MUR - RRSe ),MLU ) + Max( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ),RRSe ) ) * RCSe ) ) ),Max( CS,RRSe ) )", "obj1": 0.9734693877551021, "obj2": 0.02819420004039668}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8386918240469015}, {"determining": "( Min( DDR ,BR ) * Min( DDR ,ARS ) )", "choosing": "( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8805645822051192}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( ( PN + ( ( PN * MRS ) + FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC * MUM ) / Max( ( ( CS * Min( MUM ,MUC ) ) * Min( MUC ,( MUR * RCSe ) ) ),Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ) ) ) + ( ( RRSe * ( DS / MUM ) ) - MLU ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8394321193877399}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.639673172752087}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) + ( PN + Max( FirstVNF_CPU,RRS ) ) )", "choosing": "Max( ( ( RMSe + RMSe ) - DS ),( ( MUR * RMSe ) * ( RRSe * CS ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7460610584968028}, {"determining": "( ( Const + Const ) + Min( MRS ,DDR ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6859445193195461}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( ( FirstVNF_Mem / ARS ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + Max( Min( ( ( MUR / RMSe ) * ( MLU * MUC ) ) ,RCSe ),Max( RMSe,MUC ) ) )", "obj1": 0.3306122448979592, "obj2": 0.6520679920156722}, {"determining": "( ( ( RRS - Const ) / ( ACS - Const ) ) - Min( ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RMSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9979591836734694, "obj2": 0.0016073961057963798}, {"determining": "( Max( ( ARS - Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server / AMS ) + ( PN + Max( FirstVNF_CPU,RRS ) ) ) ) ),ARS ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.22448979591836735, "obj2": 0.7536956089395827}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( CRS + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6709724302699122}, {"determining": "( ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * CRS ) ) * Max( Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) + BR ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( RMSe,CS ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.3408163265306122, "obj2": 0.6399368570354937}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU ),( ( ( ( Const - ( PN * CRS ) ) + Max( Max( CRS,CRS ),Max( PN,( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( MUR + MUC ) * RCSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.1510204081632653, "obj2": 0.8394321193877399}, {"determining": "( ( FirstVNF_RAM / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( AMS - AMS ),( Const + BR ) ) / Min( ( ACS / PN ) ,( Min( MRS ,MRS ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6859445193195461}, {"determining": "( ( ( RRS / FirstVNF_RAM_Server ) * ( Max( FirstVNF_CPU_Server,ARS ) + FirstVNF_CPU ) ) * ( Min( Const ,( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( Max( CS,RCSe ) + Max( ( MUC - MUC ),( MUC / CS ) ) ) + ( ( ( Min( MUC ,( MUC + RCSe ) ) + RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * Min( RMSe ,MUR ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8650178064155785}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) ) - ( ( ( FirstVNF_Mem - Const ) / Max( AMS,MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( MRS * MRS ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8650178064155785}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ) / Max( RCSe,MUC ) )", "obj1": 0.336734693877551, "obj2": 0.6404550962136697}, {"determining": "( ( FirstVNF_RAM / ( ( ARS / Const ) - Min( BR ,BR ) ) ) + ( Max( ( AMS - AMS ),( MDR * ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / Min( ( ACS / PN ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Min( MUC ,MUM ) / RMSe ) * CS ) )", "obj1": 0.42857142857142855, "obj2": 0.5500685387241004}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( Max( BR,ARS ) ,( ARS - FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( MUM ,( RMSe + MUM ) ),( Max( ( Min( Max( ( MUR + DS ),MLU ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) ) - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) )", "obj1": 0.32857142857142857, "obj2": 0.653218679032834}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( CRS + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( ( FirstVNF_CPU - Min( CRS ,FirstVNF_RAM_Server ) ) + CRS ) + ( FirstVNF_CPU * ARS ) ) )", "choosing": "Max( ( ( RMSe + RMSe ) - DS ),( ( MUR * RMSe ) * ( RRSe * CS ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7460610584968028}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.34285714285714286, "obj2": 0.639673172752087}, {"determining": "( ( MDR / FirstVNF_CPU_Server ) + ( ( ( Max( BR,ACS ) / Const ) - Min( FirstVNF_Mem ,BR ) ) - ( ( Min( CRS ,CRS ) + FirstVNF_CPU ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RRSe * Max( ( ( RRSe / MLU ) + RMSe ),MUR ) ) * Max( ( ( ( Min( ( MLU * RCSe ) ,( MUR / DS ) ) + MUM ) / ( MUC + MUR ) ) - MLU ),MLU ) ) + ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + MDR ) ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * RMSe ) / ( ( ( CS + MUM ) / Max( Min( ( CS / CS ) ,RMSe ),( Max( RCSe,Min( ( CS * RCSe ) ,CS ) ) * ( ( ( RMSe / CS ) + MUC ) / MUC ) ) ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + RRS ) - Min( AMS ,( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( MUC + DS ),Max( ( ( ( ( ( ( DS - RRSe ) + MUR ) - Min( RRSe ,( DS * MUR ) ) ) / ( MUM + RCSe ) ) - MLU ) - RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,ARS ) - ( AMS / MRS ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( RRS - Const ) / ( ACS * ( Max( ( ( FirstVNF_CPU + CRS ) / DDR ),FirstVNF_Mem_Server ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,( MUR / RCSe ) ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) / ( CS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) + Max( ( RRS * ACS ),Min( ( Const / FirstVNF_Mem_Server ) ,MDR ) ) ) - Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( MUC * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( ( DS * ( ( ( Max( MUM,MUM ) + Max( CS,MUM ) ) - MUM ) / RMSe ) ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS * Min( ( Min( DDR ,Max( FirstVNF_CPU_Server,Min( MRS ,ACS ) ) ) / ( ( ( PN + ( ( PN * MRS ) + Max( FirstVNF_RAM_Server,MRS ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe - ( RMSe + ( RCSe / MUM ) ) ) ),MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9033237674605392}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.4775510204081633, "obj2": 0.40407015391550827}, {"determining": "( Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,AMS ) ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( RMSe,CS ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.4326530612244898, "obj2": 0.4848468087730417}, {"determining": "( ( AMS * ACS ) - ( Min( MDR ,FirstVNF_RAM_Server ) + FirstVNF_CPU ) )", "choosing": "Max( Min( ( DS / DS ) ,( CS / RRSe ) ),( ( DS - MUM ) / ( ( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) - MUM ) ) )", "obj1": 0.5714285714285714, "obj2": 0.38639589007786435}, {"determining": "( Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( Max( MUR,CS ) + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUC ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),( MLU * MLU ) )", "obj1": 0.6346938775510204, "obj2": 0.2633910363233497}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 0.39183673469387753, "obj2": 0.5331645612780317}, {"determining": "( ( AMS * ACS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "Max( Min( ( DS / DS ) ,( CS / RRSe ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 0.6163265306122448, "obj2": 0.329690175424084}, {"determining": "( Min( ARS ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( MLU ,Max( ( Max( MUR,CS ) + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUC ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),( MLU * MLU ) )", "obj1": 0.7510204081632653, "obj2": 0.17549456785413015}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( RCSe - RRSe ) / ( RCSe - MUM ) ) )", "obj1": 0.8183673469387756, "obj2": 0.09090571907055094}, {"determining": "( ( BR + ( ACS - AMS ) ) - ( ( ARS / FirstVNF_Mem_Server ) * PN ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( MUC + MUR ) / ( RCSe - RRSe ) ) )", "obj1": 0.7836734693877551, "obj2": 0.10744932605758215}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( RCSe - RRSe ) / ( RCSe - MUM ) ) )", "obj1": 0.5938775510204082, "obj2": 0.341912170313677}, {"determining": "( ( ( MRS * CRS ) + ( DDR + CRS ) ) * Max( MDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUR ) - ( Max( Max( CS,( Min( Max( RRSe,Min( DS ,RMSe ) ) ,( CS - RRSe ) ) + DS ) ),RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.23061224489795917, "obj2": 0.7350073021362468}, {"determining": "( ( AMS * ACS ) - ( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU + RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( RMSe / MUM ) )", "obj1": 0.8775510204081632, "obj2": 0.09034040140614842}, {"determining": "( ( AMS * ACS ) - ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ) )", "obj1": 0.7163265306122449, "obj2": 0.20021665506920508}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7497199811749499}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / DS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6917760976544295}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( Min( Const ,FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) )", "obj1": 0.17142857142857143, "obj2": 0.8048702450229162}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_Mem - ACS ) / Max( ( AMS - FirstVNF_CPU ),PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8903039556235888}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM - CRS ) ) + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( CRS + DDR ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( ( ( DS * CS ) - ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7690255097243178}, {"determining": "( Min( ARS ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( MLU ,Max( ( Max( MUR,CS ) + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUC ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),( MLU * MLU ) )", "obj1": 0.7428571428571429, "obj2": 0.17974934899198927}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6881957349870796}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( RCSe - RRSe ) / ( RCSe - MUM ) ) )", "obj1": 0.7836734693877551, "obj2": 0.10744932605758215}, {"determining": "( ( AMS * ACS ) - ( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU + RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( RMSe / MUM ) )", "obj1": 0.889795918367347, "obj2": 0.08436369558354559}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( CRS * ( Min( AMS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUC - DS ) + ( CS / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( RRSe * MUR ) / Min( ( MLU * ( ( RMSe * MLU ) + MUM ) ) ,RCSe ) ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.6916608763469059}, {"determining": "( Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,Max( Min( FirstVNF_Mem ,Max( FirstVNF_RAM_Server,AMS ) ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( ( MUM / RRSe ) / ( RCSe - RRSe ) ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( MUM / RRSe ) )", "obj1": 0.3816326530612245, "obj2": 0.5751662999673728}, {"determining": "( ( AMS * ACS ) - FirstVNF_RAM_Server )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7204081632653061, "obj2": 0.20000405821960954}, {"determining": "( ( FirstVNF_CPU_Server / ( ( ( ( FirstVNF_CPU_Server / ARS ) / Const ) - Min( FirstVNF_Mem ,BR ) ) / Min( ( ACS - FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) + ( PN + Max( FirstVNF_CPU,RRS ) ) )", "choosing": "Max( ( Min( MUC ,MUC ) - DS ),( ( MUR * MLU ) * ( RRSe * CS ) ) )", "obj1": 0.19387755102040816, "obj2": 0.792292720148534}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9387755102040817, "obj2": 0.04860098070549299}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9224489795918367, "obj2": 0.04950409046607915}, {"determining": "( Min( ( Const - FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + Max( Max( Const,( DDR * PN ) ),Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,DS ),Min( ( DS * MUM ) ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9040816326530612, "obj2": 0.06860620518947332}, {"determining": "( ( ( ( ( ARS + BR ) + MRS ) * ( MRS / ( ( ( PN * FirstVNF_RAM_Server ) - MRS ) / MRS ) ) ) / ( RRS - Min( Const ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM - MLU ) * ( ( Max( ( MUR - RRSe ),( MLU + ( ( MUC / RMSe ) - Max( CS,DS ) ) ) ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.3122448979591837, "obj2": 0.6551659008105356}, {"determining": "( ( FirstVNF_RAM_Server / Max( Min( FirstVNF_RAM_Server ,PN ),( FirstVNF_Mem - ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUC ,( DS - Min( MUC ,RCSe ) ) ) ,( MUC + RRSe ) ) + ( MUM / RRSe ) )", "obj1": 0.3448979591836735, "obj2": 0.629178833580414}, {"determining": "( Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( Min( MUR ,RMSe ) / ( RCSe - RRSe ) ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.37142857142857144, "obj2": 0.5933292069084437}, {"determining": "( ( RRS + Max( Max( MDR,Const ),FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem_Server * ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MUC ),( ( Max( ( MLU * RCSe ),Max( RCSe,Min( CS ,MLU ) ) ) - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5979746952244539}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server / AMS ) + ( PN + Max( FirstVNF_CPU,RRS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( ( Max( ( Max( RRSe,RMSe ) * RMSe ),MUM ) + RMSe ),MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( ( ( MUR / RMSe ) * ( MLU * MUC ) ) ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.6070586144609426}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( ( FirstVNF_Mem / ARS ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + Max( Min( ( ( MUR / RMSe ) * ( MLU * MUC ) ) ,RCSe ),Max( RMSe,MUC ) ) )", "obj1": 0.3224489795918367, "obj2": 0.6452694271750904}, {"determining": "( RRS * ( ( ( FirstVNF_Mem / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( MUC + MUM ) / DS ) ) ),( Max( CS,( RCSe - Min( MUR ,( RCSe * MUM ) ) ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8753246231353359}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( MUM,CS ) * ( MUC + MUR ) )", "obj1": 0.3836734693877551, "obj2": 0.5578043054606049}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( MUM,CS ) * ( MUC + MUR ) )", "obj1": 0.3836734693877551, "obj2": 0.5578043054606049}, {"determining": "( ( BR / ACS ) * ( Max( RRS,BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) + ( ( ( MLU / RMSe ) + ( ( Min( ( DS * ( RCSe + MUM ) ) ,MUC ) + Min( ( MUC * RMSe ) ,RMSe ) ) / DS ) ) + ( Max( RRSe,RRSe ) * Max( MUR,RMSe ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8282020366830412}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem / MDR ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( MUM / MLU ) * ( ( Max( ( MUR - RRSe ),MLU ) + ( RMSe - ( MLU * MLU ) ) ) * RCSe ) ) * CS )", "obj1": 0.32857142857142857, "obj2": 0.6354513445945253}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( MUR ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.025591074980992737}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) * Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) ) - ( ( ( FirstVNF_Mem - Const ) / Max( AMS,MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( MRS * MRS ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),( MLU * RCSe ) ) + ( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6779627814399315}, {"determining": "( ( CRS - ( ( PN - ( BR / Min( ( BR + ( CRS - FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,PN ) ) ) ) - ( MDR * CRS ) ) ) + ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( ( RCSe - ( CS - RRSe ) ) / ( ( RMSe / RRSe ) - ( MUC / MUC ) ) ) + ( ( RRSe - MUM ) + MLU ) )", "obj1": 0.14081632653061224, "obj2": 0.8474807438174222}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( CS * ( MUC / DS ) ) - ( RMSe / MUR ) )", "obj1": 0.9551020408163265, "obj2": 0.03657735921352122}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU ),( ( ( PN + Max( Max( CRS,CRS ),Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( RMSe * RRSe ) / ( RRSe * CS ) )", "obj1": 0.336734693877551, "obj2": 0.6353520697936033}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9081632653061225, "obj2": 0.060533950428643894}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( CRS + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6709724302699122}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( Const / BR ) / Min( ( ACS / BR ) ,( ARS - PN ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( RCSe + ( Max( MUC,( Max( RCSe,RCSe ) + Min( DS ,MUM ) ) ) - ( RMSe - RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9551020408163265, "obj2": 0.03657735921352122}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_Mem / ARS ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( MUM / RRSe ) )", "obj1": 0.9877551020408163, "obj2": 0.01339287182807679}, {"determining": "( ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + FirstVNF_CPU ) * ACS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.9836734693877551, "obj2": 0.014320753763409487}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU ),( ( ( ( Const - ( PN * CRS ) ) + Max( Max( CRS,CRS ),Max( PN,( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( MUR + MUC ) * RCSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8525862620859138}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( MUC + ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( RMSe / MUR ) )", "obj1": 0.963265306122449, "obj2": 0.030286825660573845}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.14489795918367346, "obj2": 0.841799206571519}, {"determining": "( ( Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) * ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),( MLU * RCSe ) ) + ( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( ( Min( ( MUM / RCSe ) ,MUR ) * DS ) - ( ( CS - Max( MUC,MUC ) ) * DS ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.3, "obj2": 0.67229605510543}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8707638032893386}, {"determining": "( Min( AMS ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( FirstVNF_Mem_Server * DDR ) ) - RRS ) ) )", "choosing": "Max( ( CS + ( Min( MUM ,MLU ) * ( ( Max( ( MUR - RRSe ),MLU ) + Max( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ),RRSe ) ) * RCSe ) ) ),Max( CS,RRSe ) )", "obj1": 0.9734693877551021, "obj2": 0.02819420004039668}, {"determining": "Max( ( ( ( DDR * MRS ) - Min( ( PN + ( ( PN * MRS ) + FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) ) * Min( ( MDR - ACS ) ,( FirstVNF_Mem_Server + AMS ) ) ),( Max( ( FirstVNF_CPU * RRS ),( FirstVNF_RAM - Min( FirstVNF_Mem ,RRS ) ) ) - Max( Min( AMS ,RRS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ) ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8387408330079563}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9081632653061225, "obj2": 0.060533950428643894}, {"determining": "( Max( ( ( AMS / FirstVNF_CPU ) / ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( Min( RRSe ,RMSe ) / ( RCSe - RRSe ) ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.37142857142857144, "obj2": 0.5933292069084437}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU ),( ( ( PN + ( ( PN * MRS ) + Max( MRS,FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RCSe ) + MUM ) ) - DS ),( ( MUR * RMSe ) * ( RRSe * CS ) ) )", "obj1": 0.19387755102040816, "obj2": 0.792292720148534}, {"determining": "( ( ( RRS - Const ) / ( ACS * ( Max( ( ( FirstVNF_CPU + CRS ) / DDR ),FirstVNF_Mem_Server ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( MUC * Max( ( MUR / MUC ),( MLU * MUM ) ) ) * Min( Max( RCSe,Max( ( Min( ( RMSe / MLU ) ,( MUM + ( MUR / RRSe ) ) ) + ( Max( RCSe,Min( RMSe ,MUM ) ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9653061224489796, "obj2": 0.02930652249995143}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),( ACS / BR ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / Min( ( MLU / RMSe ) ,( ( MUR + RCSe ) + MUM ) ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8592967044691504}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU * ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( FirstVNF_CPU_Server / FirstVNF_CPU ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / RMSe ) * ( RRSe * RCSe ) ) * ( ( Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( MUR ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) ) * RRSe ) + Min( DS ,RMSe ) ) )", "obj1": 0.9959183673469387, "obj2": 0.00424997195832087}, {"determining": "( ( BR / ACS ) * ( ARS - DDR ) )", "choosing": "( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) + ( ( ( MLU / RMSe ) + ( ( Min( ( DS * ( RCSe + MUM ) ) ,MUC ) + Max( ( Max( MUC,CS ) - Max( RCSe,MLU ) ),RMSe ) ) / CS ) ) + ( Max( RRSe,RRSe ) * Max( MUR,RMSe ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.8282020366830412}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ( ACS * ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( ACS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ) - Min( BR ,RRS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( ( Min( MUC ,Max( ( ( MUM - MUR ) - DS ),DS ) ) * RRSe ) + Min( RRSe ,MUM ) ) )", "obj1": 0.9959183673469387, "obj2": 0.00424997195832087}, {"determining": "Max( ( ACS - ( PN * BR ) ),( ACS / FirstVNF_CPU ) )", "choosing": "( ( MLU - Min( ( ( CS / ( MUC * DS ) ) - Max( Min( MLU ,MUM ),MUC ) ) ,RCSe ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Min( RMSe ,MUR ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8386918240469015}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8534893815044823}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU ),( ( ( PN + Max( Max( CRS,CRS ),Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),Max( AMS,PN ) ) ) ) + FirstVNF_CPU_Server ) * CRS ) )", "choosing": "( ( ( ( MUC * MUM ) / Max( ( ( CS * Min( MUM ,MUC ) ) * Min( MUC ,( MUR * RCSe ) ) ),Max( ( CS / DS ),( RRSe / ( RMSe + ( DS / MUM ) ) ) ) ) ) + ( ( MLU - ( MUM / MUC ) ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) + MUC ) ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8612650052957086}, {"determining": "Max( ( Const / FirstVNF_CPU ),( ( ( PN + Max( Max( CRS,CRS ),Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC * MUM ) / Max( ( ( CS * Min( MUM ,MUC ) ) * Min( MUC ,( MUR * RCSe ) ) ),Max( ( CS / DS ),( RRSe / ( RMSe + ( DS / MUM ) ) ) ) ) ) + ( ( MLU - RCSe ) * ( ( RMSe * RRSe ) / ( RRSe * CS ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.11632653061224489, "obj2": 0.869578718658786}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( ( PN + ( ( PN * MRS ) + FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUC * MUM ) / Max( ( ( CS * Min( MUM ,MUC ) ) * Min( MUC ,( MUR * RCSe ) ) ),Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ) ) ) + ( ( RRSe * ( DS / MUM ) ) - MLU ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8367815789802248}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8350856169995832}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( ( ( MUR / RMSe ) * ( MLU * MUC ) ) ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6768735819786468}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + ( ( ARS - MRS ) + ( FirstVNF_CPU - ( RRS + BR ) ) ) ) * FirstVNF_Mem ) )", "choosing": "( MUR + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.16326530612244897, "obj2": 0.8355484791621444}, {"determining": "( ( BR / ACS ) * ( Max( RRS,BR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) + ( ( ( MLU / RMSe ) + ( ( Min( ( DS * ( RCSe + MUM ) ) ,MUC ) + Min( ( MUC * RMSe ) ,RMSe ) ) / DS ) ) + ( Max( RRSe,RRSe ) * Max( MUR,RMSe ) ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8676059390787261}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( CRS + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.30612244897959184, "obj2": 0.6709724302699122}, {"determining": "( RRS * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,( Min( FirstVNF_RAM_Server ,( AMS - CRS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8660418737385234}, {"determining": "( ( ( RRS / FirstVNF_RAM_Server ) * ( Max( FirstVNF_CPU_Server,ARS ) + FirstVNF_CPU ) ) * ( Min( Const ,( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( Max( CS,RCSe ) + Max( ( MUC - MUC ),( MUC / CS ) ) ) + ( ( ( Min( MUC ,( MUC + RCSe ) ) + RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * Min( RMSe ,MUR ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8650178064155785}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( ( ( MUR / RMSe ) * ( MLU * MUC ) ) ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6768735819786468}, {"determining": "( ( ( MRS * CRS ) + ( DDR + CRS ) ) - ( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe / MUR ) - ( Max( Max( RMSe,CS ),RRSe ) + ( CS + RCSe ) ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 0.9857142857142858, "obj2": 0.013986919725863186}, {"determining": "( ( ( RRS - Const ) / ( ACS - Const ) ) - Min( ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RMSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9979591836734694, "obj2": 0.0016073961057963798}, {"determining": "( ( ( RRS - Const ) / ( ACS - Const ) ) - Min( ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RMSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9979591836734694, "obj2": 0.0016073961057963798}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,RRS ),( Const / DDR ) ) * Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) ) - ( ( ( FirstVNF_Mem - Const ) / Max( AMS,MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( MRS * MRS ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8650178064155785}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),( Const + ACS ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( DS + ( RMSe + RCSe ) ) + ( Max( RMSe,MUR ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8534893815044823}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8350856169995832}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8386918240469015}, {"determining": "( ( Const + FirstVNF_Mem ) / ( ( ( DDR - ACS ) * ( ARS * FirstVNF_Mem_Server ) ) * ( ACS + ( FirstVNF_RAM_Server / ARS ) ) ) )", "choosing": "( ( CS + RCSe ) * ( ( RCSe - MUC ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / FirstVNF_CPU_Server ) + ( ( ( Max( BR,ACS ) / Const ) - Min( FirstVNF_Mem ,BR ) ) - ( ( Min( CRS ,CRS ) + FirstVNF_CPU ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RRSe * Max( ( ( RRSe / MLU ) + RMSe ),MUR ) ) * Max( ( ( ( Min( ( MLU * RCSe ) ,( MUR / DS ) ) + MUM ) / ( MUC + MUR ) ) - MLU ),MLU ) ) + ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + MDR ) ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * RMSe ) / ( ( ( CS + MUM ) / Max( Min( ( CS / CS ) ,RMSe ),( Max( RCSe,Min( ( CS * RCSe ) ,CS ) ) * ( ( ( RMSe / CS ) + MUC ) / MUC ) ) ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - RRS ) - ( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RCSe ) - ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + RRS ) - Min( AMS ,( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( MUC + DS ),Max( ( ( ( ( ( ( DS - RRSe ) + MUR ) - Min( RRSe ,( DS * MUR ) ) ) / ( MUM + RCSe ) ) - MLU ) - RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,ARS ) - ( AMS / MRS ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_RAM ) - ( AMS + ( PN + ( ( PN * MRS ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( CS + DS ),Max( ( ( ( ( ( ( DS - RRSe ) + MUR ) - Min( RRSe ,( MUR * DS ) ) ) / MUR ) - MLU ) - RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( AMS * ACS ) - ( ( RRS / FirstVNF_CPU ) + FirstVNF_CPU ) ) )", "choosing": "( Max( ( RRSe * MUM ),Max( ( ( ( Min( ( MLU * RCSe ) ,( MUR / DS ) ) + MUM ) / ( MLU + ( MLU / CS ) ) ) - MLU ),Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) ) ) ) + ( RMSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( FirstVNF_RAM_Server - ( ACS - MRS ) ) )", "choosing": "Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + ACS ) )", "choosing": "( ( RMSe * RRSe ) / ( ( ( ( ( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) + MUM ) / MUM ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + Min( ACS ,BR ) ) )", "choosing": "( ( RMSe * RRSe ) / ( ( Max( Min( RRSe ,MUR ),Min( ( ( RRSe + MLU ) - ( RMSe + ( RCSe + MUR ) ) ) ,( ( ( CS / DS ) / ( RRSe - RMSe ) ) / RRSe ) ) ) / MUM ) * CS ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( RRS - Const ) / ( ACS * ( Max( ( ( FirstVNF_CPU + CRS ) / DDR ),FirstVNF_Mem_Server ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( ( ( MUC - DS ) + ( CS / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( RRSe * MUR ) / Min( ( MLU * ( ( RMSe * MLU ) + MUM ) ) ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Const ) / ( ACS * ( Max( ( ( FirstVNF_CPU + CRS ) / DDR ),FirstVNF_Mem_Server ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,( MUR / RCSe ) ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) / ( CS * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS * Min( ( Min( DDR ,Max( FirstVNF_CPU_Server,Min( MRS ,ACS ) ) ) / ( ( ( PN + ( ( PN * MRS ) + Max( FirstVNF_RAM_Server,MRS ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe - ( RMSe + ( RCSe / MUM ) ) ) ),MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9033237674605392}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12273539625692846}, {"determining": "( ( AMS * ACS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.5551020408163265, "obj2": 0.3782860428321119}, {"determining": "( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,BR ) ) * ( FirstVNF_CPU_Server * ( ( Min( Min( RRS ,( RRS + ACS ) ) ,( RRS - Min( BR ,MRS ) ) ) + FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( ( MUM * Max( MUC,DS ) ) / ( MLU - RRSe ) ),MUM ) + RMSe ) ) ,( ( CS * MUR ) - ( RMSe - MUR ) ) )", "obj1": 0.363265306122449, "obj2": 0.5324690892953508}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.4020408163265306, "obj2": 0.5006965141003346}, {"determining": "( ( ( PN * AMS ) / ( ( ARS / Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "Max( ( CS - Min( ( Min( RMSe ,( DS / MLU ) ) * Min( DS ,MUC ) ) ,( MUM - ( ( ( DS - ( RRSe + MUR ) ) / MUM ) / Max( MLU,CS ) ) ) ) ),( ( Max( RRSe,MLU ) - MUM ) / ( ( RMSe * RRSe ) * Min( DS ,MUM ) ) ) )", "obj1": 0.48775510204081635, "obj2": 0.4019234370556184}, {"determining": "( ( AMS * ACS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "Max( Min( ( DS / DS ) ,( CS / RRSe ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 0.6163265306122448, "obj2": 0.329690175424084}, {"determining": "( ( AMS * ACS ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.7224489795918367, "obj2": 0.1974887944500816}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 0.8122448979591836, "obj2": 0.08939460899186966}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7183377349345411}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( FirstVNF_RAM_Server / ( ACS * ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( RCSe - ( CS * MUR ) ) )", "obj1": 0.35306122448979593, "obj2": 0.5825933125891191}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( ( CRS - FirstVNF_RAM ) * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( ( ( RRSe * MUM ) / Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ) + ( CS + ( DS - MUM ) ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8816326530612245, "obj2": 0.0862148229579315}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.3346938775510204, "obj2": 0.5834013440771298}, {"determining": "Max( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( AMS * ACS ) - ( Min( MDR ,FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,Min( MLU ,MUM ) ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) - MUM ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( DS + ( RMSe + RCSe ) ) + ( Max( MUC,RRSe ) * Max( MLU,MUR ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.3428036950838475}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( Min( MUC ,MUC ) - DS ),( ( MUR * MLU ) * ( RRSe * CS ) ) )", "obj1": 0.6510204081632653, "obj2": 0.2461939124511802}, {"determining": "( ( AMS * ACS ) - ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ) )", "obj1": 0.7163265306122449, "obj2": 0.20021665506920508}, {"determining": "( ( FirstVNF_RAM_Server + ( Const - RRS ) ) * ( Max( FirstVNF_RAM,DDR ) * Max( CRS,RRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + Min( MUC ,RRSe ) ) )", "obj1": 0.4775510204081633, "obj2": 0.40407015391550827}, {"determining": "( ( FirstVNF_RAM_Server / Max( Min( FirstVNF_RAM_Server ,PN ),( FirstVNF_Mem - ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUC ,( DS - Min( MUC ,RCSe ) ) ) ,( MUC + RRSe ) ) / ( MUM / RRSe ) )", "obj1": 0.4326530612244898, "obj2": 0.4833383274418614}, {"determining": "( ( RRS + Max( Max( MDR,Const ),FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem_Server * ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MUC ),( ( Max( ( MLU * RCSe ),Max( RCSe,Min( CS ,MLU ) ) ) - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.43673469387755104, "obj2": 0.46679146061339566}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_Mem_Server * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( ( Max( MUM,MUM ) + Max( CS,MUM ) ) - MUM ) / RMSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.1816326530612245, "obj2": 0.767860081917567}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem / MDR ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( MUM / MLU ) * ( ( Max( ( MUR - RRSe ),MLU ) + ( RMSe - ( MLU * MLU ) ) ) * RCSe ) ) * CS )", "obj1": 0.32857142857142857, "obj2": 0.6354513445945253}, {"determining": "( ( BR + ( ACS - AMS ) ) - ( ( ARS / FirstVNF_Mem_Server ) * PN ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( MUC + MUR ) / ( RCSe - RRSe ) ) )", "obj1": 0.7836734693877551, "obj2": 0.10744932605758215}, {"determining": "( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,CS ),( ( Max( RRSe,MLU ) - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.43673469387755104, "obj2": 0.46679146061339566}, {"determining": "( Max( Min( RRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( RRSe / ( DS * RMSe ) ) ) ) ,MUC ) ) ) )", "obj1": 0.17551020408163265, "obj2": 0.795416717614895}, {"determining": "( Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( Max( MUR,CS ) + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUC ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),( MLU * MLU ) )", "obj1": 0.6346938775510204, "obj2": 0.2633910363233497}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( RCSe - RRSe ) / ( RCSe - MUM ) ) )", "obj1": 0.5938775510204082, "obj2": 0.341912170313677}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8316759141209515}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7918367346938775, "obj2": 0.09199539553878527}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6917760976544295}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.2, "obj2": 0.7548000459713037}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.4775510204081633, "obj2": 0.40407015391550827}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem * Min( ARS ,RRS ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / DS ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * Max( MUC,Min( MUC ,DS ) ) ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8235939800403896}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_Mem_Server * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( MUC + MUR ) )", "obj1": 0.20816326530612245, "obj2": 0.7461476243847559}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) )", "obj1": 0.1510204081632653, "obj2": 0.810134817100938}, {"determining": "( Min( BR ,FirstVNF_RAM ) * Min( ( Min( ( ( FirstVNF_RAM_Server + BR ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( RMSe ,Max( MUM,MUC ) ),( MUM + ( MUC - CS ) ) ) * Min( ( MUM * ( MUC * ( MUM + RMSe ) ) ) ,Min( RRSe ,MUM ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8919346634093642}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.9408163265306122, "obj2": 0.04535588535929127}, {"determining": "( ( ( ( ( ARS + BR ) + MRS ) * ( MRS / ( ( ( PN * FirstVNF_RAM_Server ) - MRS ) / MRS ) ) ) / ( RRS - Min( Const ,Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM - MLU ) * ( ( Max( ( MUR - RRSe ),( MLU + ( ( MUC / RMSe ) - Max( CS,DS ) ) ) ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.3122448979591837, "obj2": 0.6551659008105356}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.9, "obj2": 0.08084186524924489}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9020408163265307, "obj2": 0.06772186423393688}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / MUR ) - ( Max( Max( RMSe,CS ),RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.2612244897959184, "obj2": 0.6806723505431495}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9224489795918367, "obj2": 0.04950409046607915}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6763166191035135}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( CRS * ( Min( AMS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUC - DS ) + ( CS / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( RRSe * MUR ) / Min( ( MLU * ( ( RMSe * MLU ) + MUM ) ) ,RCSe ) ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.6916608763469059}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / DS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6917760976544295}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * Min( ( ARS * DDR ) ,FirstVNF_Mem ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR * ( Max( ( ( RCSe * ( RRSe + RRSe ) ) / MUM ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.3142857142857143, "obj2": 0.6390856380602594}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8534893815044823}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM - CRS ) ) + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( CRS + DDR ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8023679538913314}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( RCSe - RRSe ) / ( RCSe - MUM ) ) )", "obj1": 0.7836734693877551, "obj2": 0.10744932605758215}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,DDR ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8786618508094883}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,( MUR / RCSe ) ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) / ( CS * MUR ) ) )", "obj1": 0.9469387755102041, "obj2": 0.037917193909975735}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( MUR ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.025591074980992737}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.04840864382741253}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_Mem - ACS ) / Max( ( AMS - FirstVNF_CPU ),PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8903039556235888}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9081632653061225, "obj2": 0.060533950428643894}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.27346938775510204, "obj2": 0.677667496930735}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Max( CS,CS ),( ( Max( RRSe,MLU ) - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.3224489795918367, "obj2": 0.6370057452287503}, {"determining": "( Max( ( ( AMS / FirstVNF_CPU ) / ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) - ARS ) ),Max( ( AMS - FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( Min( RRSe ,RMSe ) / ( RCSe - RRSe ) ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.3081632653061224, "obj2": 0.663194874605295}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( RCSe - RRSe ) / ( RCSe - MUM ) ) )", "obj1": 0.9795918367346939, "obj2": 0.016753539635021117}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * ( ARS / Const ) ) ) ) )", "choosing": "( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.004409066470950678}, {"determining": "( RRS * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,( ( Max( BR,ARS ) - ( AMS / MRS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( RCSe * ( ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8681145505612987}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9081632653061225, "obj2": 0.060533950428643894}, {"determining": "( ( AMS * ACS ) - ( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU + RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( RMSe / MUM ) )", "obj1": 0.889795918367347, "obj2": 0.08436369558354559}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_Mem / ARS ) ) )", "choosing": "( Min( ( RRSe + RRSe ) ,( MUC + RRSe ) ) + ( MUM / RRSe ) )", "obj1": 0.9877551020408163, "obj2": 0.01339287182807679}, {"determining": "( ( ( AMS * ACS ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * MUM ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6794888331156842}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU ),( ( ( ( Const - ( PN * CRS ) ) + Max( Max( CRS,CRS ),Max( PN,( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8023679538913314}, {"determining": "( ( AMS * ACS ) - ( AMS / FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.9591836734693877, "obj2": 0.03540265611355443}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) - ( ( ( FirstVNF_Mem - Const ) / Max( AMS,MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( MRS * MRS ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),( MLU * RCSe ) ) + ( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + MUM ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.2979591836734694, "obj2": 0.6735459837951436}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( Min( Const ,FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( DDR + CRS ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8749459349717715}, {"determining": "( RRS * Min( ( ( CRS * ( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( ( MUC - DS ) + ( MLU / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( MUR * RRSe ) / MUR ) ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8658044778064121}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU ),( ( ( PN + Max( Max( CRS,CRS ),Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),Max( AMS,PN ) ) ) ) + FirstVNF_CPU_Server ) * CRS ) )", "choosing": "( ( ( ( MUC * MUM ) / Max( ( ( CS * Min( MUM ,MUC ) ) * Min( MUC ,( MUR * RCSe ) ) ),Max( ( CS / DS ),( RRSe / ( RMSe + ( DS / MUM ) ) ) ) ) ) + ( ( MLU - ( MUM / MUC ) ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) + MUC ) ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8612650052957086}, {"determining": "Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + Min( ( DS * ( RCSe + MUM ) ) ,MUC ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8561165978049817}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) * Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) ) - ( ( ( FirstVNF_Mem - Const ) / Max( AMS,MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( MRS * MRS ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),( MLU * RCSe ) ) + ( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.3020408163265306, "obj2": 0.6667951223397593}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - ( CRS / DDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( FirstVNF_Mem,Const ) ) )", "choosing": "( ( Min( Max( ( ( RCSe - MUR ) / MUC ),RRSe ) ,( MUC + ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( MUR / RMSe ) )", "obj1": 0.9673469387755103, "obj2": 0.02734056819327171}, {"determining": "( ( Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) * ( RRS / FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),( MLU * RCSe ) ) + ( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( ( Min( ( MUM / RCSe ) ,MUR ) * DS ) - ( ( CS - Max( MUC,MUC ) ) * DS ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.3, "obj2": 0.67229605510543}, {"determining": "( RRS * ( ( ( FirstVNF_Mem / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( MUC + MUM ) / DS ) ) ),( Max( CS,( RCSe - Min( MUR ,( RCSe * MUM ) ) ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8753246231353359}, {"determining": "( ( ( RRS / FirstVNF_Mem_Server ) * Max( ( ACS - FirstVNF_Mem ),( Const - PN ) ) ) - ( ( ( FirstVNF_Mem - Const ) / Max( AMS,MDR ) ) - ( ( FirstVNF_Mem * FirstVNF_Mem ) * ( MRS * MRS ) ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),( MLU * RCSe ) ) + ( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.6647115255631806}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7497199811749499}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( CS * ( MUC / DS ) ) - ( RMSe / MUR ) )", "obj1": 0.9551020408163265, "obj2": 0.03657735921352122}, {"determining": "( ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + FirstVNF_CPU ) * ACS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.9836734693877551, "obj2": 0.014126206207101775}, {"determining": "( ( ( RRS / FirstVNF_RAM_Server ) * ( Max( FirstVNF_CPU_Server,ARS ) + FirstVNF_CPU ) ) * ( Min( Const ,( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( Max( CS,RCSe ) + Max( ( MUC - MUC ),( MUC / CS ) ) ) + ( ( ( Min( MUC ,( MUC + RCSe ) ) + RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * Min( RMSe ,MUR ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8650178064155785}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) * ( ( Max( ( MUR - RRSe ),MLU ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * CS )", "obj1": 0.32857142857142857, "obj2": 0.6354513445945253}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( RCSe + ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( RMSe / MUR ) )", "obj1": 0.963265306122449, "obj2": 0.030286825660573845}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( Max( MUC,DS ),Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7497199811749499}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,Max( BR,Const ) ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( RCSe + ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( Max( ( MLU * CS ),( MUC / CS ) ) / MUR ) )", "obj1": 0.9653061224489796, "obj2": 0.028654657718025188}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU * ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( FirstVNF_CPU_Server / FirstVNF_CPU ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe / RMSe ) * ( RRSe * RCSe ) ) * ( ( Min( ( ( ( MUM * MLU ) * ( RCSe * MUM ) ) - Min( Max( MUR,MUR ) ,Max( MLU,MLU ) ) ) ,( Max( Min( MUR ,RCSe ),Max( RMSe,MUC ) ) / Max( ( MUR * MUC ),( RMSe - DS ) ) ) ) * RRSe ) + Min( DS ,RMSe ) ) )", "obj1": 0.9959183673469387, "obj2": 0.00424997195832087}, {"determining": "Max( ( ACS / FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8534893815044823}, {"determining": "( ( AMS * ACS ) - FirstVNF_RAM_Server )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7204081632653061, "obj2": 0.20000405821960954}, {"determining": "( ( AMS * ACS ) - ( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU + RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( RMSe / MUM ) )", "obj1": 0.8877551020408163, "obj2": 0.08469008895353534}, {"determining": "( ( FirstVNF_RAM_Server / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUC - DS ) + ( MLU / MLU ) ) - Min( ( RMSe / MUM ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( RRSe / MUR ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.6916608763469059}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( MUC + ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( RMSe / MUR ) )", "obj1": 0.963265306122449, "obj2": 0.030286825660573845}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( MUC + ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9551020408163265, "obj2": 0.03657735921352122}, {"determining": "( ( ( MRS * CRS ) + ( DDR + CRS ) ) - ( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe / MUR ) - ( Max( Max( RMSe,CS ),RRSe ) + ( CS + RCSe ) ) ),( ( DS - MUM ) / ( RCSe - MUM ) ) )", "obj1": 0.9857142857142858, "obj2": 0.013986919725863186}, {"determining": "( ( ( RRS - Const ) / ( ACS - Const ) ) - Min( ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ,Max( BR,Const ) ) )", "choosing": "( ( MUC * DS ) * Min( Max( RCSe,Max( ( Min( ( MLU / RMSe ) ,( ( MUR + RMSe ) + MUM ) ) + ( Max( RCSe,MUC ) - RCSe ) ),MUR ) ) ,MUM ) )", "obj1": 0.9979591836734694, "obj2": 0.0016073961057963798}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.3142857142857143, "obj2": 0.6390856380602594}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( MUC + ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9673469387755103, "obj2": 0.02734056819327171}], "7": [{"determining": "( ( FirstVNF_RAM_Server / Min( RRS ,BR ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server + RRS ) - ( Min( Min( RRS ,( RRS + ACS ) ) ,( RRS - Min( BR ,MRS ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR + ( ( DS + MUR ) / MUR ) ) ,( ( MUR + CS ) - ( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Const ) / ( ACS * ( Max( ( ( FirstVNF_CPU + CRS ) / DDR ),FirstVNF_Mem_Server ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( ( ( MUC - DS ) + ( CS / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( RRSe * MUR ) / Min( ( MLU * ( ( RMSe * MLU ) + MUM ) ) ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS * Min( ( Min( DDR ,Max( FirstVNF_CPU_Server,Min( MRS ,ACS ) ) ) / ( ( ( PN + ( ( PN * MRS ) + Max( FirstVNF_RAM_Server,MRS ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe - ( RMSe + ( RCSe / MUM ) ) ) ),MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9033237674605392}, {"determining": "( Min( ( FirstVNF_CPU_Server / PN ) ,FirstVNF_RAM_Server ) + ( PN - ( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) * FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) / Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( Min( MUC ,Max( MUM,MUC ) ) - DS ),( ( DS * Max( Max( MUC,MLU ),( RRSe / MLU ) ) ) * ( MUR * MLU ) ) )", "obj1": 0.5204081632653061, "obj2": 0.36376745085058204}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.3, "obj2": 0.6321883920354968}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( ( FirstVNF_RAM_Server + BR ) * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS * RMSe ) ,( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) * RMSe ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5526083659387142}, {"determining": "Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,( ( AMS * ACS ) - ( Min( MDR ,FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,Min( MLU ,MUM ) ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) - MUM ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( DS + ( RMSe + RCSe ) ) + ( Max( MUC,RRSe ) * Max( MLU,MUR ) ) ) )", "obj1": 0.6122448979591837, "obj2": 0.31456587966070954}, {"determining": "( ( ACS * ( ( ( BR * ARS ) * ( CRS + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) * ( RRS + FirstVNF_RAM_Server ) )", "choosing": "( ( CS * ( RCSe + Max( MUR,MUC ) ) ) - ( ( ( ( ( ( ( RCSe - RCSe ) * RCSe ) / RCSe ) / ( MUR * ( RCSe / Min( MUC ,MUM ) ) ) ) / Max( Max( Max( Max( DS,MUC ),RCSe ),RMSe ),( DS - MUR ) ) ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.4962376701355717}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.45510204081632655, "obj2": 0.4337665836522751}, {"determining": "( ( AMS * ACS ) - ( Max( ( ( MDR + ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) )", "choosing": "Min( ( ( Max( ( Max( ( CS - ( MLU / RMSe ) ),( MLU + MUR ) ) * RMSe ),MUM ) + RMSe ) + MUR ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.7387755102040816, "obj2": 0.15181886922043614}, {"determining": "( Min( Min( Const ,FirstVNF_RAM ) ,FirstVNF_RAM_Server ) + Max( ACS,( FirstVNF_CPU + BR ) ) )", "choosing": "( ( ( MUM - MLU ) * ( ( Max( ( MUM - RRSe ),( MLU + ( ( DS - DS ) - Max( DS,CS ) ) ) ) + Max( ( MUM / MUM ),RRSe ) ) * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.6857142857142857, "obj2": 0.21142617979460887}, {"determining": "( ( FirstVNF_RAM_Server / Max( Min( FirstVNF_RAM_Server ,PN ),( FirstVNF_Mem - ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUC ,( DS - Min( MUC ,RCSe ) ) ) ,( MUC + RRSe ) ) / ( MUM / RRSe ) )", "obj1": 0.4326530612244898, "obj2": 0.4833383274418614}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.8428571428571429, "obj2": 0.0848221033186871}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( Min( MUC ,MUC ) - DS ),( ( MUR * MLU ) * ( RRSe * CS ) ) )", "obj1": 0.6510204081632653, "obj2": 0.2461939124511802}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( RCSe - RRSe ) / ( RCSe - MUM ) ) )", "obj1": 0.5938775510204082, "obj2": 0.341912170313677}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.7612244897959184, "obj2": 0.1179379631223045}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "Max( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( AMS * ACS ) - ( Min( MDR ,FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,Min( MLU ,MUM ) ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) - MUM ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( DS + ( RMSe + RCSe ) ) + ( Max( MUC,RRSe ) * Max( MLU,MUR ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.3428036950838475}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7061224489795919, "obj2": 0.1739574182491215}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( AMS * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( MDR,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS / ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( DS + RCSe ) ) ) ) ) - ( CS * DS ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7040816326530612, "obj2": 0.1752986524605316}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 0.8122448979591836, "obj2": 0.08939460899186966}, {"determining": "( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,BR ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( RRSe + RRSe ) ,( MUC + ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.37755102040816324, "obj2": 0.528877306093157}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.7775510204081633, "obj2": 0.09881429564026536}, {"determining": "( Min( DDR ,AMS ) - ( ( ( FirstVNF_Mem - Const ) / Max( AMS,MDR ) ) - ( ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU + MDR ) ) + ( ( FirstVNF_CPU * MDR ) / ( MDR - FirstVNF_CPU ) ) ) * ( MRS * MRS ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) * RMSe ) + ( ( ( ( MUR + DS ) * ( MUC - ( MUC + ( RRSe * MUC ) ) ) ) - Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.2979591836734694, "obj2": 0.6698002044749456}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5326462041688009}, {"determining": "( ( FirstVNF_RAM_Server / ( ACS * ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.7147212906594308}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7183377349345411}, {"determining": "( Min( ( DDR * RRS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( Max( MUR,CS ) + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUC ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),( MLU * MLU ) )", "obj1": 0.6346938775510204, "obj2": 0.2633910363233497}, {"determining": "( ( ( PN * AMS ) / ( ( ARS / Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "Max( ( CS - Min( ( Min( RMSe ,( DS / MLU ) ) * Min( DS ,MUC ) ) ,( MUM - ( ( ( DS - ( RRSe + MUR ) ) / MUM ) / Max( MLU,CS ) ) ) ) ),( ( Max( RRSe,MLU ) - MUM ) / ( ( RMSe * RRSe ) * Min( DS ,MUM ) ) ) )", "obj1": 0.48775510204081635, "obj2": 0.4019234370556184}, {"determining": "( ( AMS + RRS ) * ( ( FirstVNF_Mem - Const ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + ( RCSe + ( MUC * Min( ( Min( RCSe ,MUR ) + RCSe ) ,( ( DS / MUR ) - MUM ) ) ) ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.41138532626336616}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12273539625692846}, {"determining": "( ( AMS * ACS ) - ( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU + RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( RMSe / MUM ) )", "obj1": 0.8857142857142857, "obj2": 0.08455739827754638}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7768827067614497}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_Mem_Server * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( ( Max( MUM,MUM ) + Max( CS,MUM ) ) - MUM ) / RMSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.1816326530612245, "obj2": 0.767860081917567}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * ( MUM / RRSe ) ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.35918367346938773, "obj2": 0.5292833974340289}, {"determining": "( ( FirstVNF_RAM_Server / ( ACS * ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Max( CS,RRSe ) * ( RMSe * RCSe ) ),( MLU * RCSe ) ) + ( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + MUM ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.16326530612244897, "obj2": 0.7947513732986496}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / DS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6917760976544295}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem * Min( ARS ,RRS ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / DS ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * Max( MUC,Min( MUC ,DS ) ) ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8235939800403896}, {"determining": "( ( FirstVNF_RAM_Server / ( RRS - ( DDR / Max( ACS,( ( BR - CRS ) - Min( ( CRS - RRS ) ,FirstVNF_RAM ) ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.846741505312891}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_Mem_Server * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( MUC + MUR ) )", "obj1": 0.20816326530612245, "obj2": 0.7461476243847559}, {"determining": "( ( RRS + Max( Max( MDR,Const ),FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem_Server * ARS ) - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC + MUC ),( ( Max( ( MLU * RCSe ),Max( RCSe,Min( CS ,MLU ) ) ) - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.43673469387755104, "obj2": 0.46679146061339566}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),( ( AMS * ACS ) - ( Min( MDR ,FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) - MUM ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( DS + ( RMSe + RCSe ) ) + ( Max( RMSe,MUR ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.3428036950838475}, {"determining": "( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,CS ),( ( Max( RRSe,MLU ) - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.43673469387755104, "obj2": 0.46679146061339566}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,CS ),( ( Max( RRSe,MLU ) - MUM ) / ( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) )", "obj1": 0.48775510204081635, "obj2": 0.4019234370556184}, {"determining": "( ( FirstVNF_RAM_Server / ( ( CRS - ACS ) - RRS ) ) * ( RRS / DDR ) )", "choosing": "( Max( Min( ( RRSe + ( RRSe + CS ) ) ,MUC ),MUC ) * ( ( ( RRSe / RCSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8096664805753445}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) * ARS ) + ACS ) / ( Const - RRS ) ) * ( FirstVNF_Mem * ( CRS - DDR ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( MUR + DS ) * ( MUC - ( ( MUR + DS ) * ( MUC - MUR ) ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( ( ( MLU * Min( Max( RCSe,Max( MLU,MUR ) ) ,MUM ) ) + ( MLU / MUC ) ) / MLU ) ) )", "obj1": 0.47551020408163264, "obj2": 0.4036708289137944}, {"determining": "( RRS * Min( ( Max( FirstVNF_RAM,( Max( ACS,DDR ) + ( FirstVNF_RAM_Server * ( DDR / BR ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.08979591836734693, "obj2": 0.8940314462067143}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) / FirstVNF_RAM ) ,( DDR / MRS ) ) * ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) )", "choosing": "Min( ( MUR + ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - Min( Max( MUR,( MUM + MUC ) ) ,MUR ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8316759141209515}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.9, "obj2": 0.08084186524924489}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( CRS * ( Min( AMS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUC - DS ) + ( CS / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( RRSe * MUR ) / Min( ( MLU * ( ( RMSe * MLU ) + MUM ) ) ,RCSe ) ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.6916608763469059}, {"determining": "( ( AMS * PN ) - ( MDR + ( ( ( ( ( ( ACS + MDR ) - BR ) - FirstVNF_CPU ) - FirstVNF_RAM ) / FirstVNF_Mem_Server ) + CRS ) ) )", "choosing": "( ( CS * Min( RMSe ,( DS / DS ) ) ) - ( ( RCSe / RRSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7918367346938775, "obj2": 0.09199539553878527}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - ( ( AMS * ACS ) - FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( MUR,Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9163265306122449, "obj2": 0.059311238763933696}, {"determining": "( Min( Min( Const ,( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( MUR + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9285714285714286, "obj2": 0.04334323050022273}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.9387755102040817, "obj2": 0.038442348379897066}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.2, "obj2": 0.7548000459713037}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( ( FirstVNF_CPU * PN ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( MUC + ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( ( ( RRSe * MUM ) / Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) ) ) ) + ( MUM / RRSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9755102040816327, "obj2": 0.021149553136828095}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6763166191035135}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU ),( ( ( PN + Max( Max( CRS,CRS ),Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),Max( AMS,PN ) ) ) ) + FirstVNF_CPU_Server ) * CRS ) )", "choosing": "( ( ( ( MUC * MUM ) / Max( ( ( CS * Min( MUM ,MUC ) ) * Min( MUC ,( MUR * RCSe ) ) ),Max( ( CS / DS ),( RRSe / ( RMSe + ( DS / MUM ) ) ) ) ) ) + ( ( MLU - ( MUM / MUC ) ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) + MUC ) ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8612650052957086}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.27346938775510204, "obj2": 0.677667496930735}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / MUR ) - ( Max( Max( RMSe,CS ),RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.2612244897959184, "obj2": 0.6806723505431495}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9020408163265307, "obj2": 0.06772186423393688}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.2, "obj2": 0.7548000459713037}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( ( MLU * CS ),( MUC / CS ) ) + ( ( MUR + DS ) * ( MUC - MUR ) ) ) + ( ( ( MLU / RMSe ) + Max( MLU,( Max( DS,MUR ) - MLU ) ) ) + ( ( MUC / RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9224489795918367, "obj2": 0.04932430446024058}, {"determining": "( ( AMS * ACS ) - ( ( Min( ( Min( CRS ,CRS ) + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / Max( FirstVNF_CPU_Server,( FirstVNF_CPU + RRS ) ) ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( RMSe / MUM ) )", "obj1": 0.889795918367347, "obj2": 0.08436369558354559}, {"determining": "( RRS * Min( ( ACS / FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8811241799074808}, {"determining": "( Max( Min( Min( ( DDR * Min( CRS ,PN ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM - CRS ) ) + FirstVNF_Mem_Server ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ,DDR ),Max( FirstVNF_RAM_Server,PN ) ) * ( ( CRS + DDR ) + ( FirstVNF_Mem_Server * ARS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8023679538913314}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_Mem - ACS ) / Max( ( AMS - FirstVNF_CPU ),PN ) ) ,( ( FirstVNF_RAM + Const ) / ( MRS / MRS ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8903039556235888}, {"determining": "( RRS * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,( ( Max( BR,ARS ) - ( AMS / MRS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( RCSe * ( ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8681145505612987}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7918367346938775, "obj2": 0.09199539553878527}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9081632653061225, "obj2": 0.060533950428643894}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( RCSe - RRSe ) / ( RCSe - MUM ) ) )", "obj1": 0.9795918367346939, "obj2": 0.016753539635021117}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8316759141209515}, {"determining": "( ( FirstVNF_Mem_Server / ( ( Max( RRS,CRS ) - FirstVNF_CPU ) / ARS ) ) * RRS )", "choosing": "( RCSe * ( ( MUM / ( MUR * RCSe ) ) / ( ( RRSe / RCSe ) + ( ( Min( ( ( MLU * DS ) + CS ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8745389173520992}, {"determining": "( RRS * Min( ( ( CRS * ( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( ( MUC - DS ) + ( MLU / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( MUR * RRSe ) / MUR ) ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8658044778064121}, {"determining": "( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_Mem / ARS ) ) )", "choosing": "Max( ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( MLU / CS ) ),( RMSe / MUM ) )", "obj1": 0.9877551020408163, "obj2": 0.012540640517771994}, {"determining": "( ( ( AMS * ACS ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * MUM ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6794888331156842}, {"determining": "( Min( BR ,FirstVNF_RAM ) * Min( ( Min( ( ( FirstVNF_RAM_Server + BR ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( RMSe ,Max( MUM,MUC ) ),( MUM + ( MUC - CS ) ) ) * Min( ( MUM * ( MUC * ( MUM + RMSe ) ) ) ,Min( RRSe ,MUM ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8919346634093642}, {"determining": "Max( ( FirstVNF_Mem / FirstVNF_CPU ),( ( ( ( Const - ( PN * CRS ) ) + Max( Max( CRS,CRS ),Max( PN,( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.15918367346938775, "obj2": 0.8023679538913314}, {"determining": "( ( ( RRS / FirstVNF_RAM_Server ) * ( Max( FirstVNF_CPU_Server,ARS ) + FirstVNF_CPU ) ) * ( Min( Const ,( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( Max( CS,RCSe ) + Max( ( MUC - MUC ),( MUC / CS ) ) ) + ( ( ( Min( MUC ,( MUC + RCSe ) ) + RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * Min( RMSe ,MUR ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8650178064155785}, {"determining": "( RRS * ( ( ( FirstVNF_Mem / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( MUC + MUM ) / DS ) ) ),( Max( CS,( RCSe - Min( MUR ,( RCSe * MUM ) ) ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8753246231353359}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6917760976544295}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,DDR ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8786618508094883}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7497199811749499}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * ( ARS / Const ) ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + ( CS / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( RRSe * MUR ) / Min( ( MLU * ( ( RMSe * MLU ) + MUM ) ) ,RCSe ) ) ) ) )", "obj1": 0.9897959183673469, "obj2": 0.005188787128213419}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6763166191035135}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,( MUR / RCSe ) ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) / ( CS * MUR ) ) )", "obj1": 0.9469387755102041, "obj2": 0.037917193909975735}, {"determining": "( ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + FirstVNF_CPU ) * ACS ) - ( MDR + FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,MLU ) * ( RRSe * RCSe ) ) * ( Max( MLU,RCSe ) * Max( RCSe,RRSe ) ) )", "obj1": 0.9836734693877551, "obj2": 0.014126206207101775}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9020408163265307, "obj2": 0.06772186423393688}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( CS * ( MUC / DS ) ) - ( RMSe / MUR ) )", "obj1": 0.9551020408163265, "obj2": 0.03657735921352122}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( ( AMS * ACS ) - ( CRS / DDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( FirstVNF_Mem,Const ) ) )", "choosing": "( ( Min( Max( ( ( RCSe - MUR ) / MUC ),RRSe ) ,( MUC + ( DS - ( MUC - RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( MUR / RMSe ) )", "obj1": 0.9612244897959183, "obj2": 0.03471311331999169}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( MUC + ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9673469387755103, "obj2": 0.02734056819327171}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RRSe,( MUR / RCSe ) ) * RMSe ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) / ( CS * MUR ) ) )", "obj1": 0.9469387755102041, "obj2": 0.037917193909975735}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - ( CRS / DDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( FirstVNF_Mem,Const ) ) )", "choosing": "( ( Min( Max( ( ( RCSe - MUR ) / MUC ),RRSe ) ,( MUC + ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) + ( MUM / RRSe ) ) - ( MUR / RMSe ) )", "obj1": 0.9673469387755103, "obj2": 0.02734056819327171}, {"determining": "( ( AMS * ACS ) - ( AMS / FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.9591836734693877, "obj2": 0.03540265611355442}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9081632653061225, "obj2": 0.060533950428643894}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / MUR ) - ( Max( Max( RMSe,CS ),RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.2612244897959184, "obj2": 0.6806723505431495}, {"determining": "( Min( ( Min( RRS ,( ( FirstVNF_RAM / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( BR + CRS ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7497199811749499}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.04840864382741253}], "8": [{"determining": "( RRS * Min( ( Min( DDR ,Max( FirstVNF_CPU_Server,Min( MRS ,ACS ) ) ) / ( ( ( PN + ( ( PN * MRS ) + Max( FirstVNF_RAM_Server,MRS ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe - ( RMSe + ( RCSe / MUM ) ) ) ),MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9033237674605392}, {"determining": "( Min( Min( ( ACS - FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( ( ( ( MDR / ( ( PN * FirstVNF_CPU ) * ARS ) ) * FirstVNF_RAM ) / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / BR ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( ( MLU * CS ),( MUC / CS ) ),Min( ( MLU / MUM ) ,( MLU + MUR ) ) ) ,MUM ) ) ) ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Min( RRS ,BR ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server + RRS ) - ( Min( Min( RRS ,( RRS + ACS ) ) ,( RRS - Min( BR ,MRS ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR + ( ( DS + MUR ) / MUR ) ) ,( ( MUR + CS ) - ( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / ( ( ( PN + ( ( PN * MRS ) + Max( MRS,FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07755102040816327, "obj2": 0.9033237674605392}, {"determining": "( Min( Min( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4432955728812743}, {"determining": "( ( ACS * ( ( ( BR * ARS ) * ( CRS + FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) * ( RRS + FirstVNF_RAM_Server ) )", "choosing": "( ( CS * ( RCSe + Max( MUR,MUC ) ) ) - ( ( ( ( ( ( ( RCSe - RCSe ) * RCSe ) / RCSe ) / ( MUR * ( RCSe / Min( MUC ,MUM ) ) ) ) / Max( Max( Max( Max( DS,MUC ),RCSe ),RMSe ),( DS - MUR ) ) ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.4962376701355717}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( MDR * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * Max( RCSe,MUM ) ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / CS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6346938775510204, "obj2": 0.24076191857616422}, {"determining": "( ( AMS * ACS ) - ( Max( ( ( MDR + ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) )", "choosing": "Min( ( ( Max( ( Max( ( CS - ( MLU / RMSe ) ),( MLU + MUR ) ) * RMSe ),MUM ) + RMSe ) + MUR ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.7387755102040816, "obj2": 0.15181886922043614}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,( ( AMS * ACS ) - ( Min( MDR ,FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,Min( MLU ,MUM ) ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) - MUM ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( DS + ( RMSe + RCSe ) ) + ( Max( MUC,RRSe ) * Max( MLU,MUR ) ) ) )", "obj1": 0.6122448979591837, "obj2": 0.31456587966070954}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_RAM_Server * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUR ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5183673469387755, "obj2": 0.3794822127816228}, {"determining": "( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / MUR ) - ( Max( Max( ( MUM * MLU ),CS ),RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.3142857142857143, "obj2": 0.5972262512146823}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( ( Max( MUM,MUM ) + Max( CS,MUM ) ) - MUM ) / RMSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.632863159077986}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.8816326530612245, "obj2": 0.0805394217784915}, {"determining": "Max( ( ( AMS / FirstVNF_CPU ) / ( FirstVNF_CPU_Server - ARS ) ),( ( AMS * ACS ) - ( Min( MDR ,FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) - MUM ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( DS + ( RMSe + RCSe ) ) + ( Max( RMSe,MUR ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.33452277921548185}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - Min( MDR ,FirstVNF_RAM_Server ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( Min( Min( RRSe ,Min( MLU ,MUM ) ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.3673469387755102, "obj2": 0.5174518003365409}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.45510204081632655, "obj2": 0.4337665836522751}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7183377349345411}, {"determining": "( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,BR ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( ( Max( MUM,MUM ) + Max( CS,MUM ) ) - MUM ) / RMSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.2, "obj2": 0.7434734284782434}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + ( CS / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( RRSe * MUR ) / Min( ( MLU * ( ( RMSe * MLU ) + MUM ) ) ,RCSe ) ) ) ) )", "obj1": 0.6877551020408164, "obj2": 0.20148097781620863}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - ( CS * MUR ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6131849967248253}, {"determining": "( ( ( MDR + Const ) * ( ( ( PN + FirstVNF_RAM ) / Max( PN,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS + ( Max( ( Max( ( MLU - RMSe ),( Min( MUM ,MUM ) - ( MUM - MLU ) ) ) * RMSe ),MUM ) + RMSe ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - ( ( MUR / CS ) * MUR ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5526083659387142}, {"determining": "( ( FirstVNF_RAM_Server / ( ACS * ( ( ( ( DDR - FirstVNF_Mem ) + ( PN * MRS ) ) + Max( ( RRS * ACS ),Min( DDR ,MDR ) ) ) - ( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.7147212906594308}, {"determining": "Max( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( AMS * ACS ) - ( Min( MDR ,FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,Min( MLU ,MUM ) ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) - MUM ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( DS + ( RMSe + RCSe ) ) + ( Max( MUC,RRSe ) * Max( MLU,MUR ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.3428036950838475}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / MRS ) ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ARS ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / MUR ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / DS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( ( ( CS / MUC ) / RRSe ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.03994672070219877}, {"determining": "( Min( ( FirstVNF_CPU_Server / PN ) ,FirstVNF_RAM_Server ) + ( PN - ( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) * FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) / Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( ( Min( MUC ,Max( MUM,MUC ) ) - DS ),( ( DS * Max( Max( MUC,MLU ),( RRSe / MLU ) ) ) * ( MUR * MLU ) ) )", "obj1": 0.5204081632653061, "obj2": 0.36376745085058204}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( Min( Const ,FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,DS ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.5249517485530624}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6541189715473387}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ) * ARS ) ) - ( MDR + ( ACS - PN ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( ( ( CS - MUM ) - Min( Max( RCSe,DS ) ,MUM ) ) - MUC ) ) ) / ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.8428571428571429, "obj2": 0.0848221033186871}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.7775510204081633, "obj2": 0.09881429564026536}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( AMS * ACS ) - ( CRS / DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - MUR ) / MUC ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6632653061224489, "obj2": 0.21136667590059474}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem * Min( ARS ,RRS ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / DS ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * Max( MUC,Min( MUC ,DS ) ) ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8235939800403896}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,BR ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) + ACS ) / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.31020408163265306, "obj2": 0.6034761844041658}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / MUR ) - ( Max( Max( RMSe,CS ),RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.2612244897959184, "obj2": 0.6806723505431495}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5326462041688009}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS - Const ) / ( ( FirstVNF_Mem / ( ( ARS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - ACS ) ) - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Max( FirstVNF_Mem,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( ( Max( MUM,MUM ) + Max( CS,( RCSe - RRSe ) ) ) - MLU ) / RMSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.1673469387755102, "obj2": 0.7929053128027734}, {"determining": "( ( Max( ACS,( PN * ARS ) ) / ( ( ( MRS + DDR ) - FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,BR ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.6573961095156162}, {"determining": "( ( ( PN * AMS ) / ( ( ARS / Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "Max( ( CS - Min( ( Min( RMSe ,( DS / MLU ) ) * Min( DS ,MUC ) ) ,( MUM - ( ( ( DS - ( RRSe + MUR ) ) / MUM ) / Max( MLU,CS ) ) ) ) ),( ( Max( RRSe,MLU ) - MUM ) / ( ( RMSe * RRSe ) * Min( DS ,MUM ) ) ) )", "obj1": 0.48775510204081635, "obj2": 0.4019234370556184}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( DS + ( MUC - CS ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUR * RMSe ) ) - ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.41988364091398583}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.8428571428571429, "obj2": 0.0848221033186871}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( ( FirstVNF_RAM_Server + BR ) * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS * RMSe ) ,( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) * RMSe ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5526083659387142}, {"determining": "( ( AMS - PN ) - ( MDR + ( AMS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( MUR,MUM ) )", "obj1": 0.7408163265306122, "obj2": 0.12257860756841774}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7061224489795919, "obj2": 0.1739574182491215}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ACS - ( Max( MRS,AMS ) - ( MRS + ( MDR / ( ACS * PN ) ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MLU + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe / MUC ) / Max( ( CS * MUM ),RRSe ) ) )", "obj1": 0.24693877551020407, "obj2": 0.6822656478161749}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.9081632653061225, "obj2": 0.060533950428643894}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7504838489663648}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,CS ),( ( Max( RRSe,MLU ) - MUM ) / ( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) )", "obj1": 0.48775510204081635, "obj2": 0.4019234370556184}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6917760976544295}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 0.8122448979591836, "obj2": 0.08939460899186966}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) * ARS ) + ACS ) / ( Const - RRS ) ) * ( FirstVNF_Mem * ( CRS - DDR ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( MUR + DS ) * ( MUC - ( ( MUR + DS ) * ( MUC - MUR ) ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( ( ( MLU * Min( Max( RCSe,Max( MLU,MUR ) ) ,MUM ) ) + ( MLU / MUC ) ) / MLU ) ) )", "obj1": 0.47551020408163264, "obj2": 0.4036708289137944}, {"determining": "( Min( Min( Const ,( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.9469387755102041, "obj2": 0.031872043356243926}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.9387755102040817, "obj2": 0.038442348379897066}, {"determining": "Min( Max( FirstVNF_Mem_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,( ( AMS * ACS ) - ( Min( MDR ,FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( ( MLU / DS ) - ( RRSe - CS ) ) / ( ( RMSe / RRSe ) - ( MUC - MUC ) ) ) + ( Min( Min( RRSe ,Min( MLU ,MUM ) ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) - MUM ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( DS + ( RMSe + RCSe ) ) + ( Max( MUC,RRSe ) * Max( MLU,MUR ) ) ) )", "obj1": 0.6122448979591837, "obj2": 0.31456587966070954}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( ( FirstVNF_RAM_Server / ( ( CRS - ACS ) - RRS ) ) * ( RRS / DDR ) )", "choosing": "( Max( Min( ( RRSe + ( RRSe + CS ) ) ,MUC ),MUC ) * ( ( ( RRSe / RCSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8096664805753445}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),DS )", "obj1": 0.8959183673469387, "obj2": 0.0658615748130102}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + Min( RRS ,AMS ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( FirstVNF_Mem,Const ) ) )", "choosing": "( ( Min( Max( ( RRSe * Min( MUR ,RMSe ) ),MUR ) ,( RRSe + RRSe ) ) + ( MUM / RRSe ) ) - ( MLU / MUR ) )", "obj1": 0.9653061224489796, "obj2": 0.028181107082786698}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7061224489795919, "obj2": 0.1739574182491215}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,( PN / FirstVNF_CPU_Server ) ) / ( Min( ARS ,Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( FirstVNF_CPU_Server * Max( ACS,( ARS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) / ( MUM + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RCSe / ( ( MUR - RMSe ) + MUM ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7620427612793468}, {"determining": "( ( FirstVNF_RAM_Server / ( RRS - ( DDR / Max( ACS,( ( BR - CRS ) - Min( ( CRS - RRS ) ,FirstVNF_RAM ) ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.846741505312891}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.7612244897959184, "obj2": 0.1179379631223045}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_Mem_Server * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( ( Max( MUM,MUM ) + Max( CS,MUM ) ) - MUM ) / RMSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.1816326530612245, "obj2": 0.767860081917567}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) )", "choosing": "( ( CS * DS ) - ( ( ( MLU - RCSe ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) / MUC ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08991445999532305}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( MDR * FirstVNF_CPU ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) )", "choosing": "Min( ( MUR + ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8316759141209515}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.839186051391619}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( Const ,FirstVNF_Mem_Server ) ) + ( PN - ( Max( ( ( MDR / Min( CRS ,RRS ) ) * FirstVNF_RAM ),Const ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR - ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,Max( ( DS + MUR ),MUC ) )", "obj1": 0.6959183673469388, "obj2": 0.17818980639067486}, {"determining": "( ( Max( DDR,( FirstVNF_Mem + Max( RRS,AMS ) ) ) / ( ( FirstVNF_Mem + ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RMSe,( Min( RCSe ,DS ) / ( RMSe + RCSe ) ) ) + Max( Max( MLU,CS ),( MUC / CS ) ) ) + ( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7768827067614497}, {"determining": "( Min( ( DDR * AMS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( Max( MUR,CS ) + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUC ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ),Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) ) )", "obj1": 0.9816326530612245, "obj2": 0.009117866492752567}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / DS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6917760976544295}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7768827067614497}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ( AMS * ACS ) ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,( ( DS + ( RMSe + RCSe ) ) + ( Max( RMSe,MUR ) * Max( MUC,RRSe ) ) ) ) ) ),DS )", "obj1": 0.8938775510204081, "obj2": 0.07195759948266399}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "Max( CS,( ( RCSe - RRSe ) / ( RCSe - MUM ) ) )", "obj1": 0.9775510204081632, "obj2": 0.012723778970177605}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,RRSe ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8061601480648128}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * ( ARS / Const ) ) ) ) )", "choosing": "( ( ( ( MUC - DS ) + ( CS / MLU ) ) - Min( Max( MUM,RMSe ) ,Max( MUR,RRSe ) ) ) - ( ( Min( MUR ,CS ) - ( DS + RRSe ) ) * ( ( RMSe / CS ) - ( ( RRSe * MUR ) / Min( ( MLU * ( ( RMSe * MLU ) + MUM ) ) ,RCSe ) ) ) ) )", "obj1": 0.9897959183673469, "obj2": 0.005188787128213419}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.7612244897959184, "obj2": 0.1179379631223045}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( ( FirstVNF_CPU * PN ) / ( Max( ACS,( FirstVNF_CPU + BR ) ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "( ( Min( ( RRSe + RRSe ) ,( MUC + ( Max( MUM,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) - ( ( ( RRSe * MUM ) / Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) ) ) ) + ( MUM / RRSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9755102040816327, "obj2": 0.021140961209060994}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( ARS - FirstVNF_RAM ) ) ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( DS,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09795918367346938, "obj2": 0.8881562196588433}, {"determining": "( ( ( ( FirstVNF_CPU * ( ARS + Const ) ) / ( Min( MRS ,CRS ) * Const ) ) + RRS ) * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_RAM_Server - MRS ) - FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( RCSe * ( ( ( RCSe / RRSe ) + ( ( Min( Min( ( DS / CS ) ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) * ( CS * DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.7937528143020166}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07959183673469387, "obj2": 0.8990269959812661}, {"determining": "( ( RRS + ( CRS - ( MRS + ACS ) ) ) * ( FirstVNF_CPU_Server * Min( ACS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + Min( Max( MLU,MUM ) ,MLU ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.41138532626336616}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) )", "choosing": "Min( ( MUR + ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.799716607786086}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.7551020408163265, "obj2": 0.1211971686368644}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5326462041688009}, {"determining": "( RRS * Min( ( ACS / FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8811241799074808}, {"determining": "( ( FirstVNF_Mem * PN ) - ( MDR + ( ACS - Min( ( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( ( DS * MUC ) * RRSe ) * Min( CS ,( MUR / RMSe ) ) ) ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.12212316623214113}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,DDR ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8967406637229834}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS / MLU ) )", "obj1": 0.8122448979591836, "obj2": 0.08939460899186966}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.9428571428571428, "obj2": 0.03560268515726878}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7877551020408163, "obj2": 0.09362968114251957}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( AMS * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( MDR,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS / ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( DS + RCSe ) ) ) ) ) - ( CS * DS ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7040816326530612, "obj2": 0.1752986524605316}, {"determining": "( Min( BR ,FirstVNF_RAM ) * Min( ( Min( ( ( FirstVNF_RAM_Server + BR ) + Min( FirstVNF_Mem_Server ,ACS ) ) ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( RMSe ,Max( MUM,MUC ) ),( MUM + ( MUC - CS ) ) ) * Min( ( MUM * ( MUC * ( MUM + RMSe ) ) ) ,Min( RRSe ,MUM ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8919346634093642}, {"determining": "( ( AMS + RRS ) * ( ( FirstVNF_Mem - Const ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + ( RCSe + ( MUC * Min( ( Min( RCSe ,MUR ) + RCSe ) ,( ( DS / MUR ) - MUM ) ) ) ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.41138532626336616}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,DDR ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8584477193386255}, {"determining": "( RRS * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,( ( Max( BR,ARS ) - ( AMS / MRS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( RCSe * ( ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8681145505612987}, {"determining": "( ( ( RRS / FirstVNF_RAM_Server ) * ( Max( FirstVNF_CPU_Server,ARS ) + FirstVNF_CPU ) ) * ( Min( Const ,( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) ) )", "choosing": "( ( Max( CS,RCSe ) + Max( ( MUC - MUC ),( MUC / CS ) ) ) + ( ( ( Min( MUC ,( MUC + RCSe ) ) + RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * Min( RMSe ,MUR ) ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8650178064155785}, {"determining": "( RRS * Min( ( Max( FirstVNF_RAM,( Max( ACS,DDR ) + ( FirstVNF_RAM_Server * ( DDR / BR ) ) ) ) / FirstVNF_RAM ) ,Max( FirstVNF_RAM_Server,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - ( RCSe - RCSe ) ) + Min( Max( Max( MLU,MUC ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.08979591836734693, "obj2": 0.8939376976303832}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) / FirstVNF_RAM ) ,( DDR / MRS ) ) * ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) )", "choosing": "Min( ( MUR + ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - Min( Max( MUR,( MUM + MUC ) ) ,MUR ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8316759141209515}], "9": [{"determining": "( ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "Max( CS,( Max( MUM,DS ) / ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ACS - FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( ( ( ( MDR / ( ( PN * FirstVNF_CPU ) * ARS ) ) * FirstVNF_RAM ) / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / BR ) ) ) )", "choosing": "Max( Min( RCSe ,Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( ( MLU * CS ),( MUC / CS ) ),Min( ( MLU / MUM ) ,( MLU + MUR ) ) ) ,MUM ) ) ) ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + CS ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.9082176184882673}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5775510204081633, "obj2": 0.2847441994665116}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( RRS - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.35918367346938773, "obj2": 0.4931428948451135}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server + Min( ( FirstVNF_RAM - ( ( Const * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - ( ACS * RRS ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * DS ) - ( ( RCSe / ( ( ( CS / ( ( RMSe - CS ) / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( CS * ( MUC * RMSe ) ),( MLU / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5102040816326531, "obj2": 0.35158397619436405}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( ( Const + ACS ) / ( Const - RRS ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.49183673469387756, "obj2": 0.38592104612659367}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.4163265306122449, "obj2": 0.45466517896930503}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( DS + ( MUC - CS ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUR * RMSe ) ) - ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.3979591836734694, "obj2": 0.48539597066806844}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( Min( Const ,FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,DS ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.5249517485530624}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) ) ) )", "obj1": 0.8183673469387756, "obj2": 0.07843495420103314}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5720526710963182}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / MRS ) ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ARS ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / MUR ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / DS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( ( ( CS / MUC ) / RRSe ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.03994672070219877}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) ) ,( DS / MLU ) )", "obj1": 0.8877551020408163, "obj2": 0.06055095185692016}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( RMSe + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.4346938775510204, "obj2": 0.4328883359821894}, {"determining": "( Min( Min( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ARS ) ) ),FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4530612244897959, "obj2": 0.41479824962635164}, {"determining": "( ( AMS * ACS ) - ( Max( ( ( MDR + ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - Max( FirstVNF_RAM_Server,MRS ) ) ) ) ) )", "choosing": "Min( ( ( Max( ( Max( ( CS - ( MLU / RMSe ) ),( MLU + MUR ) ) * RMSe ),MUM ) + RMSe ) + MUR ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.7387755102040816, "obj2": 0.15181886922043614}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.6968746261173344}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ACS - ( Max( MRS,AMS ) - ( MRS + ( MDR / ( ACS * PN ) ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MLU + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe / MUC ) / Max( ( CS * MUM ),RRSe ) ) )", "obj1": 0.24693877551020407, "obj2": 0.6822656478161749}, {"determining": "( Min( Min( Const ,Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.19907550821672562}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( AMS * ACS ) - ( CRS / DDR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.6387755102040816, "obj2": 0.23209016891985657}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / DS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.2388669962662998}, {"determining": "( ( MDR + ( ACS - AMS ) ) - Min( MRS ,Max( ARS,DDR ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM / ( CS - ( RCSe + MUR ) ) ) ),MUM ) + RCSe ) ) ,( Max( ( MUC / RMSe ),( MUR / CS ) ) - ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.9, "obj2": 0.056115222001846835}, {"determining": "( ( ( ACS - BR ) * FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,BR ) )", "choosing": "( ( Max( MUR,RRSe ) + Max( ( MLU * CS ),( ( ( RMSe - MUR ) / RMSe ) / ( ( MUR + RMSe ) + MUM ) ) ) ) + ( MLU - MLU ) )", "obj1": 0.25510204081632654, "obj2": 0.6606887369043029}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( RCSe * ( ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7399905669195888}, {"determining": "( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7824442453315661}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( CRS - Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,Max( ( RMSe - MUR ),( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4204081632653061, "obj2": 0.43749458883796244}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6494703199083128}, {"determining": "( Min( Min( Const ,( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( Const * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.9387755102040817, "obj2": 0.036076759510505346}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5326462041688009}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7183377349345411}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7183377349345411}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - Max( FirstVNF_Mem,( Max( FirstVNF_Mem,AMS ) * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8167004912159782}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( ( Max( MUM,MUM ) + Max( CS,MUM ) ) - MUM ) / RMSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.632863159077986}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6837316863179841}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - ( CS * MUR ) ) )", "obj1": 0.29183673469387755, "obj2": 0.6131849967248253}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.726530612244898, "obj2": 0.16127694596157158}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) * ARS ) + ACS ) / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( MUR + DS ) * ( MUC - ( ( MUR + DS ) * ( MUC - MUR ) ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.47959183673469385, "obj2": 0.40024564304499294}, {"determining": "( ( AMS - PN ) - ( MDR + ( AMS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( MUR,MUM ) )", "obj1": 0.7408163265306122, "obj2": 0.12257860756841774}, {"determining": "( ( ( MDR + Const ) * ( ( ( PN + FirstVNF_RAM ) / Max( PN,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS + ( Max( ( Max( ( MLU - RMSe ),( Min( MUM ,MUM ) - ( MUM - MLU ) ) ) * RMSe ),MUM ) + RMSe ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - ( ( MUR / CS ) * MUR ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5526083659387142}, {"determining": "( ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + Min( RRS ,AMS ) ) ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( FirstVNF_Mem,Const ) ) )", "choosing": "( ( Min( Max( ( RRSe * Min( MUR ,RMSe ) ),MUR ) ,( RRSe + RRSe ) ) + ( MUM / RRSe ) ) - ( MLU / MUR ) )", "obj1": 0.9653061224489796, "obj2": 0.028181107082786698}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8053055510329638}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8533483624635861}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,RRSe ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.770430794492914}, {"determining": "( ( RRS - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / MUR ) - ( Max( Max( ( MUM * MLU ),CS ),RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.3142857142857143, "obj2": 0.5972262512146823}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem * Min( ARS ,RRS ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / MUR ) - ( Max( Max( RMSe,CS ),RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.3081632653061224, "obj2": 0.6042214174437287}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / DS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6693877551020408, "obj2": 0.2084646886955083}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7504838489663648}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( ( FirstVNF_RAM_Server + BR ) * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS * RMSe ) ,( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) * RMSe ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5526083659387142}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6541189715473387}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server / ( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) / ( CRS - MDR ) ) ) ) ) * ( ( Const + ( ARS + RRS ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( MLU,( ( RCSe - Min( RRSe ,Min( DS ,RMSe ) ) ) * DS ) ) + RCSe ) ) ,( ( RMSe - ( MUR * RMSe ) ) - ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.3979591836734694, "obj2": 0.48539597066806844}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - ( CS * MUR ) ) )", "obj1": 0.28775510204081634, "obj2": 0.6186470986515743}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Max( Max( CS,Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11735481398261435}, {"determining": "( ( ( ( FirstVNF_CPU * ( ARS + Const ) ) / ( Min( MRS ,CRS ) * Const ) ) + RRS ) * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_RAM_Server - MRS ) - FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( RCSe * ( ( ( RCSe / RRSe ) + ( ( Min( Min( ( DS / CS ) ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) * ( CS * DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.7937528143020166}, {"determining": "( ( ( ACS + ( Const * PN ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( DS - RMSe ),( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8285027319136218}, {"determining": "( ( FirstVNF_RAM_Server / ( RRS - ( DDR / Max( ACS,( ( BR - CRS ) - Min( ( CRS - RRS ) ,FirstVNF_RAM ) ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.846741505312891}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RRSe / MUR ) - ( Max( Max( ( MUM * MLU ),CS ),RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.773469387755102, "obj2": 0.11378274391237182}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server * PN ) * ARS ) + ACS ) / ( Const - RRS ) ) * ( FirstVNF_Mem * ( CRS - DDR ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( MUR + DS ) * ( MUC - ( ( MUR + DS ) * ( MUC - MUR ) ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( ( ( MLU * Min( Max( RCSe,Max( MLU,MUR ) ) ,MUM ) ) + ( MLU / MUC ) ) / MLU ) ) )", "obj1": 0.47551020408163264, "obj2": 0.4036708289137944}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( MDR * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * Max( RCSe,MUM ) ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / CS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.012346721425569147}, {"determining": "( ( RRS + ( CRS - ( MRS + ACS ) ) ) * ( FirstVNF_CPU_Server * Min( ACS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + Min( Max( MLU,MUM ) ,MLU ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.41138532626336616}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * Max( FirstVNF_RAM,Min( FirstVNF_Mem_Server ,PN ) ) ) * FirstVNF_Mem ) ) - ( ( RRS / ( BR - BR ) ) + ( AMS + ACS ) ) )", "choosing": "Max( ( RRSe + RCSe ),( ( ( MUR * Min( DS ,RCSe ) ) + ( ( RMSe / RRSe ) - ( MUM / ( ( MLU / MUM ) / Max( DS,( CS - MUR ) ) ) ) ) ) + ( Min( Min( RRSe ,MUM ) ,( MLU - MLU ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.028337118918477167}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) )", "choosing": "Min( ( MUR + ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.799716607786086}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.7775510204081633, "obj2": 0.09881429564026536}, {"determining": "( RRS * Min( ( ACS / FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8674498123228617}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( ( ( MRS - FirstVNF_RAM ) + FirstVNF_CPU ) * ( ARS * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( Min( RMSe ,Min( MUM ,Max( RRSe,MUC ) ) ),RRSe ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.19183673469387755, "obj2": 0.7405493221596299}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.7755102040816326, "obj2": 0.11194137411557344}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Max( Max( CS,CS ),( ( DS - MUM ) / ( MUM - RCSe ) ) )", "obj1": 0.7551020408163265, "obj2": 0.1211971686368644}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,( MDR / Min( ( Const / MRS ) ,( FirstVNF_CPU * PN ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * ( DS * ( ( Min( RRSe ,MUM ) + MUM ) / ( ( RMSe + ( ( RRSe + DS ) * ( MLU - ( RCSe + RCSe ) ) ) ) / MUC ) ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8791485895898109}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( RMSe * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8712352620872473}, {"determining": "( RRS * Min( ( ACS / FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8811241799074808}, {"determining": "( ( AMS * PN ) - ( MDR + ( ( FirstVNF_Mem / DDR ) * ACS ) ) )", "choosing": "Min( ( MUC / MUM ) ,( DS + MLU ) )", "obj1": 0.8142857142857143, "obj2": 0.08882786826288576}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16793874961551294}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) )", "choosing": "( ( CS * DS ) - ( ( ( MLU - RCSe ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) / MUC ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08991445999532305}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5326462041688009}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,( PN / FirstVNF_CPU_Server ) ) / ( Min( ARS ,Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( FirstVNF_CPU_Server * Max( ACS,( ARS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) / ( MUM + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RCSe / ( ( MUR - RMSe ) + MUM ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7620427612793468}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( ( FirstVNF_Mem * PN ) - ( MDR + ( ACS - Min( ( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( ( DS * MUC ) * RRSe ) * Min( CS ,( MUR / RMSe ) ) ) ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.12212316623214113}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * Max( RCSe,MUM ) ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / CS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.7857142857142857, "obj2": 0.09765636361843828}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,DDR ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8967406637229834}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM - Min( MDR ,( FirstVNF_Mem - MRS ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( MUM / RMSe ) + ( CS + RCSe ) ) ) - DS ) - Min( MUR ,( RMSe / RCSe ) ) )", "obj1": 0.6612244897959184, "obj2": 0.21061274004005787}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7877551020408163, "obj2": 0.09362968114251957}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / ( ACS - ( Max( ( FirstVNF_RAM_Server * Min( CRS ,FirstVNF_RAM_Server ) ),( ACS * PN ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,( FirstVNF_CPU * PN ) ) ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RMSe * Max( MUC,( ( ( MLU / RMSe ) + ( RMSe * RCSe ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09591836734693877, "obj2": 0.891011610143314}, {"determining": "( RRS * Min( ( Max( FirstVNF_RAM,( Max( ACS,DDR ) + ( FirstVNF_RAM_Server * ( DDR / BR ) ) ) ) / FirstVNF_RAM ) ,Max( FirstVNF_RAM_Server,( Const / FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - ( RCSe - RCSe ) ) + Min( Max( Max( MLU,MUC ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.08979591836734693, "obj2": 0.8939376976303832}, {"determining": "( ( Max( ACS,( PN * ARS ) ) / ( ( ( MRS + DDR ) - FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,BR ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.6573961095156162}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( MDR * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * Max( RCSe,MUM ) ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / CS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.012346721425569147}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,BR ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) + ACS ) / ( Const - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.31020408163265306, "obj2": 0.6034761844041658}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( ( ( Max( MUM,MUM ) + Max( CS,MUM ) ) - MUM ) / RMSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6346938775510204, "obj2": 0.23508743984000846}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7938775510204081, "obj2": 0.09186770933255463}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07959183673469387, "obj2": 0.8990269959812661}, {"determining": "( Min( Min( Const ,( FirstVNF_Mem_Server + CRS ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * RRS ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( Max( RRSe,Min( ( CS + RMSe ) ,( MUR + MUC ) ) ) / Max( MUR,DS ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.710204081632653, "obj2": 0.17168593023718154}, {"determining": "( Min( Min( Const ,( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( Min( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ,FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Min( FirstVNF_CPU ,FirstVNF_RAM ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( Max( MLU,MLU ) - RMSe ),RRSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.9428571428571428, "obj2": 0.03371904160112068}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.839186051391619}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) / FirstVNF_RAM ) ,( DDR / MRS ) ) * ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) )", "choosing": "Min( ( MUR + ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - Min( Max( MUR,( MUM + MUC ) ) ,MUR ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8316759141209515}, {"determining": "( ( AMS + RRS ) * ( ( FirstVNF_Mem - Const ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + ( RCSe + ( MUC * Min( ( Min( RCSe ,MUR ) + RCSe ) ,( ( DS / MUR ) - MUM ) ) ) ) ) ) )", "obj1": 0.4673469387755102, "obj2": 0.41138532626336616}], "10": [{"determining": "( RRS * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + CS ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.9082176184882673}, {"determining": "( ( FirstVNF_RAM_Server / ( RRS - ( DDR / Max( ACS,( ( BR - CRS ) - Min( ( CRS - RRS ) ,FirstVNF_RAM ) ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,Max( BR,Const ) ) )", "choosing": "Max( CS,( Max( MUM,DS ) / ( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS * Min( ( Min( MDR ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * ( Max( ( Max( ARS,BR ) / FirstVNF_RAM_Server ),AMS ) - FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + CS ) + ( CS - Max( RMSe,( MUM + RMSe ) ) ) ) ) * ( MUR / ( DS * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.9082176184882673}, {"determining": "( ( PN / ( ( ( ( Max( ( FirstVNF_Mem_Server + PN ),( ACS + FirstVNF_RAM_Server ) ) * BR ) * ( BR - BR ) ) / FirstVNF_CPU ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,Const ) ,ARS ) )", "choosing": "Min( ( ( CS / MUC ) * ( RMSe / CS ) ) ,( ( ( RMSe + CS ) + CS ) * ( Min( CS ,MLU ) * ( Max( ( Max( Min( RMSe ,MLU ),MUR ) + RMSe ),Max( Max( RRSe,MUM ),CS ) ) - MUC ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.323273836106415}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ACS - ( CRS * Min( CRS ,PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( Min( MUR ,MUM ) * ( CS * ( Max( MUC,( ( Max( MLU,MUC ) * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server + Min( ( FirstVNF_RAM - ( ( Const * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - ( ACS * RRS ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * DS ) - ( ( RCSe / ( ( ( CS / ( ( RMSe - CS ) / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( CS * ( MUC * RMSe ) ),( MLU / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5102040816326531, "obj2": 0.35158397619436405}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( RMSe + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.4346938775510204, "obj2": 0.4328883359821894}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( ( Const + ACS ) / ( Const - RRS ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.49183673469387756, "obj2": 0.38592104612659367}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( Min( Min( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ARS ) ) ),FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.45222810409651826}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( DS + ( MUC - CS ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUR * RMSe ) ) - ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.3979591836734694, "obj2": 0.48539597066806844}, {"determining": "( ( AMS * ACS ) * ( ( ACS - ( Max( CRS,FirstVNF_RAM ) - ARS ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( DS / RMSe ) / ( CS / MLU ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * Min( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) ,( MUC - RMSe ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.622927442634037}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5214556529440422}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6332534066305469}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + CS ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.726530612244898, "obj2": 0.13207394449224824}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Max( AMS,Max( ( ACS / FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU_Server ) + Min( PN ,CRS ) )", "choosing": "Min( ( MUR * Min( MUR ,Max( MUR,RCSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( Min( MUM ,Max( MUM,RMSe ) ) + ( RMSe * MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5938775510204082, "obj2": 0.2743131468866121}, {"determining": "( ( ( ACS - BR ) * FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,BR ) )", "choosing": "( ( Max( MUR,RRSe ) + Max( ( MLU * CS ),( ( ( RMSe - MUR ) / RMSe ) / ( ( MUR + RMSe ) + MUM ) ) ) ) + ( MLU - MLU ) )", "obj1": 0.25510204081632654, "obj2": 0.6606887369043029}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5775510204081633, "obj2": 0.2847441994665116}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + MUM ) )", "obj1": 0.24489795918367346, "obj2": 0.6723129846629791}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( RRS - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( MUM - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.4925125654447059}, {"determining": "( ( ( MDR + Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) / Max( PN,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS + ( Max( ( Max( ( MLU - RMSe ),( Min( MUM ,MUM ) - ( MUM - MLU ) ) ) * RMSe ),MUM ) + RMSe ) ) ,( ( RRSe / MUR ) - ( Max( Max( ( MUM * MLU ),CS ),RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.07300618776164339}, {"determining": "( ( AMS + RRS ) * ( ( FirstVNF_Mem - Const ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.5721221247805623}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6837316863179841}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( RCSe * ( ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7399905669195888}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * MDR ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / DS ) ) + ( Max( Min( ( RMSe / ( ( MUC / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.03994672070219877}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( CRS - Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,Max( ( RMSe - MUR ),( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4204081632653061, "obj2": 0.43749458883796244}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.06511464475760946}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,RRSe ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.770430794492914}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) ) ,( DS / MLU ) )", "obj1": 0.8877551020408163, "obj2": 0.06055095185692016}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + ( CS + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.22437486045051394}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5775510204081633, "obj2": 0.2847441994665116}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( ( ( ( Max( ACS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server - RRS ) / MRS ) ) - RRS ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) + MUR ) ,( ( RMSe - MUR ) + ( CS * ( Max( ( DS - MUC ),( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5605812197833825}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( MDR * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( ( DS * MUC ) * RRSe ) * Min( CS ,( MUR / RMSe ) ) ) ) ),( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.9693877551020408, "obj2": 0.01816974875622242}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( ( DS * RMSe ),MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8731730569334538}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.24327386646922827}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7183377349345411}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( CS * DS ) - ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.7693877551020408, "obj2": 0.10353949783574386}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( RRS - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.35918367346938773, "obj2": 0.4931428948451135}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * MDR ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.0210661476279515}, {"determining": "( Min( Min( Const ,Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.19618475704879262}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.753061224489796, "obj2": 0.11114767489888373}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8533483624635861}, {"determining": "( Min( Min( Const ,( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( Const * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( Max( ( MUR + CS ),Min( Min( ( RCSe - MUC ) ,MLU ) ,Min( Max( Max( MLU,MUM ),Min( RCSe ,( MLU + MUR ) ) ) ,MUC ) ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.9387755102040817, "obj2": 0.036076759510505346}, {"determining": "( ( MDR + ( ACS - AMS ) ) - Min( MRS ,Max( ARS,DDR ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM / ( CS - ( RCSe + MUR ) ) ) ),MUM ) + RCSe ) ) ,( Max( ( MUC / RMSe ),( MUR / CS ) ) - ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.9, "obj2": 0.056115222001846835}, {"determining": "( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8875442104938679}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7183377349345411}, {"determining": "( ( FirstVNF_RAM - ( MRS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUC,MUM ) ),( MUM + ( MLU * MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5704929331311942}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.2049590403884733}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.6968746261173344}, {"determining": "( ( ( MDR + Const ) * ( ( ( PN + FirstVNF_RAM ) / Max( PN,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS + ( Max( ( Max( ( MLU - RMSe ),( Min( MUM ,MUM ) - ( MUM - MLU ) ) ) * RMSe ),MUM ) + RMSe ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - ( ( MUR / CS ) * MUR ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5526083659387142}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) ) ) )", "obj1": 0.8183673469387756, "obj2": 0.07843495420103314}, {"determining": "( ( AMS - PN ) - ( MDR + ( AMS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( MUR,MUM ) )", "obj1": 0.7408163265306122, "obj2": 0.12257860756841774}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8616843366293911}, {"determining": "( ( ( ( FirstVNF_CPU * ( ARS + Const ) ) / ( Min( MRS ,CRS ) * Const ) ) + RRS ) * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_RAM_Server - MRS ) - FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( RCSe * ( ( ( RCSe / RRSe ) + ( ( Min( Min( ( DS / CS ) ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) * ( CS * DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.7937528143020166}, {"determining": "( ( ( ACS + ( Const * PN ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( DS - RMSe ),( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8285027319136218}, {"determining": "( ( FirstVNF_RAM_Server / ( RRS - ( DDR / Max( ACS,( ( BR - CRS ) - Min( ( CRS - RRS ) ,FirstVNF_RAM ) ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.846741505312891}, {"determining": "( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7824442453315661}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - ( RRS + AMS ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( Max( MUM,DS ),Max( MUM,MUC ) ),( DS + ( MUC - CS ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUR * RMSe ) ) - ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.3979591836734694, "obj2": 0.48539597066806844}, {"determining": "( Min( Min( Const ,( FirstVNF_Mem_Server + CRS ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * RRS ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( Max( RRSe,Min( ( CS + RMSe ) ,( MUR + MUC ) ) ) / Max( MUR,DS ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.710204081632653, "obj2": 0.17168593023718154}, {"determining": "( Min( Min( Const ,Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.19907550821672562}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( ( Const + ACS ) / ( Const - RRS ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.49183673469387756, "obj2": 0.38592104612659367}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,( PN / FirstVNF_CPU_Server ) ) / ( Min( ARS ,Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( FirstVNF_CPU_Server * Max( ACS,( ARS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) / ( MUM + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RCSe / ( ( MUR - RMSe ) + MUM ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7620427612793468}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8053055510329638}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) ) - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) ) )", "obj1": 0.8122448979591836, "obj2": 0.08295742764280001}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - AMS ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) )", "choosing": "( ( CS * DS ) - ( ( ( MLU - RCSe ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) / MUC ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08991445999532305}, {"determining": "( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7824442453315661}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - RRS ) ) * ( RRS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - Min( CS ,MUR ) ) ) ) * ( RCSe / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8167004912159782}, {"determining": "( Min( Min( Const ,( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) + ( ( MDR * FirstVNF_CPU ) / ( MDR - FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( Min( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ,FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,( Min( FirstVNF_CPU ,FirstVNF_RAM ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( Max( MLU,MLU ) - RMSe ),RRSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.9428571428571428, "obj2": 0.03371904160112068}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( RMSe * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8712352620872473}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - Max( FirstVNF_Mem,( Max( FirstVNF_Mem,AMS ) * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8167004912159782}, {"determining": "( ( MDR + ( ACS - AMS ) ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( CS + RCSe ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9857142857142858, "obj2": 0.006792240820245228}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) ) ) )", "obj1": 0.8040816326530612, "obj2": 0.08379103131202192}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( MLU / RMSe ) - RMSe ) ) ) ) )", "obj1": 0.6938775510204082, "obj2": 0.18075591260426915}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.9, "obj2": 0.056115222001846835}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.19183673469387755, "obj2": 0.7405493221596299}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / MRS ) ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ARS ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / MUR ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / DS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( ( ( CS / MUC ) / RRSe ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.03994672070219877}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7504838489663648}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7020408163265306, "obj2": 0.1769832545886554}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( BR + MRS ) ,CRS ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( ( MUR * ( ( RRSe * RRSe ) + Min( RMSe ,DS ) ) ) + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.07959183673469387, "obj2": 0.8990269959812661}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Min( ( ( ( ( FirstVNF_Mem_Server * PN ) * ARS ) + ACS ) / ( Const - RRS ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8965057062130161}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.839186051391619}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) )", "choosing": "Min( ( MUR + ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.799716607786086}, {"determining": "( ( AMS * ACS ) - FirstVNF_RAM_Server )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),RMSe ) * RMSe ),MUM ) + RMSe ) ) ,( ( RMSe - MUR ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * Max( FirstVNF_RAM,Min( FirstVNF_Mem_Server ,PN ) ) ) * FirstVNF_Mem ) ) - ( ( RRS / ( BR - BR ) ) + ( AMS + ACS ) ) )", "choosing": "Max( ( RRSe + RCSe ),( ( ( MUR * Min( DS ,RCSe ) ) + ( ( RMSe / RRSe ) - ( MUM / ( ( MLU / MUM ) / Max( DS,( CS - MUR ) ) ) ) ) ) + ( Min( Min( RRSe ,MUM ) ,( MLU - MLU ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.028337118918477167}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( ( FirstVNF_Mem * PN ) - ( MDR + ( ACS - Min( ( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * Max( RCSe,MUM ) ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / CS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9816326530612245, "obj2": 0.01005100534810903}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7795918367346939, "obj2": 0.09801443975285297}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( RRSe / MUR ) - ( Max( Max( ( MUM * MLU ),CS ),RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.773469387755102, "obj2": 0.10050644915418154}, {"determining": "( ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.09391028606468657}, {"determining": "( ( AMS * PN ) - ( MDR + ( ( ( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,BR ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) + ACS ) - AMS ) ) )", "choosing": "( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.12094896157281103}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.746938775510204, "obj2": 0.11382777879387401}], "11": [{"determining": "( ( FirstVNF_Mem * PN ) - ( MDR + ( ACS - Min( ( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ,MDR ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * Max( RCSe,MUM ) ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / CS ) ) + ( Max( Min( ( CS / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( RRS - ( DDR / Max( ACS,( ( BR - CRS ) - Min( ( CRS - RRS ) ,FirstVNF_RAM ) ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN / ( ( ( ( Max( ( FirstVNF_Mem_Server + PN ),( ACS + FirstVNF_RAM_Server ) ) * BR ) * ( BR - BR ) ) / FirstVNF_CPU ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,Const ) ,ARS ) )", "choosing": "Min( ( ( CS / MUC ) * ( RMSe / CS ) ) ,( ( ( RMSe + CS ) + CS ) * ( Min( CS ,MLU ) * ( Max( ( Max( Min( RMSe ,MLU ),MUR ) + RMSe ),Max( Max( RRSe,MUM ),CS ) ) - MUC ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.323273836106415}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.4620528197658089}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_RAM_Server / ( ( RRS - Const ) / ( ACS - ( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / ( ( Const + ACS ) / ( Const - RRS ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.49183673469387756, "obj2": 0.38592104612659367}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ACS - ( CRS * Min( CRS ,PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( Min( MUR ,MUM ) * ( CS * ( Max( MUC,( ( Max( MLU,MUC ) * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.5714285714285714, "obj2": 0.2972380254840058}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6332534066305469}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( Max( RRS,FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS * MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),RCSe ) + RCSe ) ) ,Min( Min( MLU ,Min( RCSe ,Min( MUC ,RCSe ) ) ) ,MUR ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( Min( Min( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ARS ) ) ),FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( MUC / CS ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.45216740248261045}, {"determining": "( ( ( ACS - BR ) * FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,BR ) )", "choosing": "( ( Max( MUR,RRSe ) + Max( ( MLU * CS ),( ( ( RMSe - MUR ) / RMSe ) / ( ( MUR + RMSe ) + MUM ) ) ) ) + ( MLU - MLU ) )", "obj1": 0.25510204081632654, "obj2": 0.6606887369043029}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - ACS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( Min( Max( MUM,DS ) ,MUM ),Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),( Max( MLU,MLU ) - RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3673469387755102, "obj2": 0.48873923696889837}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( MUC * RMSe ) * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3538453433986942}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5214556529440422}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + MUM ) )", "obj1": 0.24489795918367346, "obj2": 0.6723129846629791}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * ( MLU - RMSe ) ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5938775510204082, "obj2": 0.27203854263448213}, {"determining": "( ( AMS + RRS ) * ( ( FirstVNF_Mem - Const ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.5721221247805623}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6837316863179841}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( RMSe + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.4346938775510204, "obj2": 0.4328883359821894}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( CRS - Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,Max( ( RMSe - MUR ),( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4204081632653061, "obj2": 0.43749458883796244}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + ( CS + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.7244897959183674, "obj2": 0.13121851723677702}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( DDR + ACS ) ,FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) - RRS ) ) * ( FirstVNF_CPU_Server * Max( RRS,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( Max( RCSe,MUM ) - MUC ),Max( MUM,( Max( Max( ( MLU / RMSe ),RMSe ),( MLU + RRSe ) ) + ( DS - ( MUC + ( MUM / RCSe ) ) ) ) ) ),MUC ) * Min( RRSe ,( DS * RMSe ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7665877354604633}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server + Min( ( FirstVNF_RAM - ( ( Const * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - ( ACS * RRS ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * DS ) - ( ( RCSe / ( ( ( CS / ( ( RMSe - CS ) / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( CS * ( MUC * RMSe ) ),( MLU / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5102040816326531, "obj2": 0.35158397619436405}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( RRS - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.35918367346938773, "obj2": 0.4931428948451135}, {"determining": "( ( FirstVNF_RAM_Server - Max( Min( Const ,RRS ),FirstVNF_Mem ) ) + Min( FirstVNF_RAM_Server ,( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server / ACS ) ) ),FirstVNF_RAM_Server ) * Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS * DS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.9612244897959183, "obj2": 0.01665755749133795}, {"determining": "( ( AMS * ACS ) * ( ( ACS - ( Max( CRS,FirstVNF_RAM ) - ARS ) ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( DS / RMSe ) / ( CS / MLU ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * Min( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) ,( MUC - RMSe ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.622927442634037}, {"determining": "( ( ( MDR + Const ) * ( ( ( PN + FirstVNF_RAM ) / Max( PN,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS + ( Max( ( Max( ( MLU - RMSe ),( Min( MUM ,MUM ) - ( MUM - MLU ) ) ) * RMSe ),MUM ) + RMSe ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - ( ( MUR / CS ) * MUR ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5526083659387142}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( FirstVNF_Mem * PN ) - ( MDR + ( ACS - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * Max( RCSe,MUM ) ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / CS ) ) + ( Max( Min( ( RMSe / ( ( MLU * CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9346938775510204, "obj2": 0.029513772293807913}, {"determining": "( PN + ( ( Min( FirstVNF_CPU ,BR ) + ( MRS * FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * Max( ( ( MDR / ( ( FirstVNF_CPU / PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MLU + ( MUR + RCSe ) ) + MUC ) - ( ( Max( Min( Min( RMSe ,( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9775510204081632, "obj2": 0.008995318671496647}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,( PN / FirstVNF_CPU_Server ) ) / ( Min( ARS ,Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( FirstVNF_CPU_Server * Max( ACS,( ARS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) / ( MUM + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RCSe / ( ( MUR - RMSe ) + MUM ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7620427612793468}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( ( MDR + Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) / Max( PN,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.07300618776164339}, {"determining": "( Min( Min( Const ,( FirstVNF_Mem_Server + CRS ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * RRS ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( Max( RRSe,Min( ( CS + RMSe ) ,( MUR + MUC ) ) ) / Max( MUR,DS ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.710204081632653, "obj2": 0.17168593023718154}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.24327386646922827}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - Min( ( ( ( ACS - MRS ) / ( DDR * FirstVNF_CPU_Server ) ) + RRS ) ,FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( DS - ( ( ( MLU - ( ( RMSe + MUM ) + CS ) ) - MUM ) - ( MLU - MUR ) ) ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - Max( Max( RMSe,Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + ( CS - RRSe ) ) ) ) * DS ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6242220237383763}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( ( PN + FirstVNF_CPU_Server ) / ACS ) ),FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - PN ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU_Server * PN ) * ARS ) ) ),( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( RMSe - Min( MLU ,( Max( DS,DS ) * ( ( MUM * MLU ) + RMSe ) ) ) ) / RMSe ),( Min( CS ,Min( Min( RRSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03542237253724984}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.20486615798708085}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6346938775510204, "obj2": 0.23750645196906336}, {"determining": "( ( MDR + ( ACS - AMS ) ) - Min( MRS ,Max( ARS,DDR ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM / ( CS - ( RCSe + MUR ) ) ) ),MUM ) + RCSe ) ) ,( Max( ( MUC / RMSe ),( MUR / CS ) ) - ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.9, "obj2": 0.056115222001846835}, {"determining": "( ( FirstVNF_RAM - ( MRS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUC,MUM ) ),( MUM + ( MLU * MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5704929331311942}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7448300450978572}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7210931555302557}, {"determining": "( ( ( ( FirstVNF_CPU * ( ARS + Const ) ) / ( Min( MRS ,CRS ) * Const ) ) + RRS ) * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_RAM_Server - MRS ) - FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( RCSe * ( ( ( RCSe / RRSe ) + ( ( Min( Min( ( DS / CS ) ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) * ( CS * DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.7937528143020166}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * Max( ( ( ( Const * ARS ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) + FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( ( MUC * Min( DS ,RCSe ) ) + ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( MLU / Max( RMSe,RMSe ) ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ),( RRSe + RCSe ) )", "obj1": 0.6448979591836734, "obj2": 0.23268868956330338}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8616843366293911}, {"determining": "( Min( ( Const * Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( Max( DDR,FirstVNF_Mem ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( ( Max( ( MLU * CS ),( MUC / CS ) ) + ( CS / ( MLU / MUM ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) - ( ( CS - RMSe ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC / RMSe ) ) ) ) )", "obj1": 0.6857142857142857, "obj2": 0.19472649073094148}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * Max( FirstVNF_RAM,Min( FirstVNF_Mem_Server ,PN ) ) ) * FirstVNF_Mem ) ) - ( ( RRS / ( BR - BR ) ) + ( AMS + ACS ) ) )", "choosing": "Max( ( RRSe + RCSe ),( ( ( MUR * Min( DS ,RCSe ) ) + ( ( RMSe / RRSe ) - ( MUM / ( ( MLU / MUM ) / Max( DS,( CS - MUR ) ) ) ) ) ) + ( Min( Min( RRSe ,MUM ) ,( MLU - MLU ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.028337118918477167}, {"determining": "( ( FirstVNF_RAM_Server / ( RRS - ( DDR / Max( ACS,( ( BR - CRS ) - Min( ( CRS - RRS ) ,FirstVNF_RAM ) ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.846741505312891}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7612244897959184, "obj2": 0.1083036799545046}, {"determining": "( Min( FirstVNF_RAM ,BR ) * Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),MLU ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8816560087253436}, {"determining": "( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7824442453315661}, {"determining": "( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) * Min( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8875442104938679}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.06511464475760945}, {"determining": "( Min( ( Min( RRS ,( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Min( ( ACS / BR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) / FirstVNF_RAM ) ,FirstVNF_CPU_Server ) * ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) )", "choosing": "Min( ( MUR + ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.799716607786086}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8640723948682063}, {"determining": "( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7824442453315661}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + CS ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7285714285714285, "obj2": 0.1307752803655486}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.6968746261173344}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ACS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.673469387755102, "obj2": 0.19774716983887508}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( CS * DS ) - ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.7693877551020408, "obj2": 0.10353949783574386}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( CRS * PN ) * ARS ) / MDR ) * FirstVNF_RAM ),BR ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + Min( CS ,DS ) ) ) * DS ) - ( ( ( CS * MUM ) * ( MLU + ( DS / RMSe ) ) ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.22437486045051394}, {"determining": "( ( ARS - Min( ACS ,( Min( Const ,( FirstVNF_CPU / FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) ) ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),ARS ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( ( RMSe / MLU ) - MUM ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7280193263920671}, {"determining": "( ( AMS * PN ) - ( MDR + ( ( ( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,BR ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) + ACS ) - AMS ) ) )", "choosing": "( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.7387755102040816, "obj2": 0.12397319235517365}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) ) ) )", "obj1": 0.8183673469387756, "obj2": 0.07843495420103314}, {"determining": "( ( Max( ( ( MDR / ( ( PN * FirstVNF_CPU ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - PN ) ) ) ) * ( Min( FirstVNF_Mem_Server ,PN ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + DS ) - MUR ) - ( ( RCSe / ( ( ( CS * DS ) - ( ( MUR / RRSe ) + ( CS + RCSe ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.789795918367347, "obj2": 0.09307766322878377}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - AMS ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Min( MUM ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8053055510329638}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20816326530612245, "obj2": 0.712360485080412}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( ( Const - FirstVNF_Mem ) - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,RRSe ) ),( MUM + ( ( RRSe + ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.828576497988836}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7312995311160653}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5775510204081633, "obj2": 0.2847441994665116}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * MDR ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / DS ) ) + ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.03994672070219877}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) )", "choosing": "( ( CS * DS ) - ( ( ( MLU - RCSe ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) / MUC ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08991445999532305}, {"determining": "( ( ( ( ( Max( ACS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server - RRS ) / MRS ) ) - RRS ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) + MUR ) ,( ( RMSe - MUR ) + ( CS * ( Max( ( DS - MUC ),( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5605812197833825}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + ( Const - FirstVNF_Mem ) ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MLU ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.530763957781273}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - Max( FirstVNF_Mem,( Max( FirstVNF_Mem,AMS ) * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8167004912159782}, {"determining": "( ( ( ACS + ( Const * PN ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( DS - RMSe ),( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8285027319136218}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.746938775510204, "obj2": 0.11382777879387401}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - RRS ) ) * ( RRS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - Min( CS ,MUR ) ) ) ) * ( RCSe / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8167004912159782}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,CS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5304948670121424}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * MDR ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.0210661476279515}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8755102040816326, "obj2": 0.062035936213516794}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) ) ,( DS / MLU ) )", "obj1": 0.8877551020408163, "obj2": 0.06055095185692016}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.9, "obj2": 0.056115222001846835}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( MDR / ( FirstVNF_RAM * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( Max( Max( MUC,( RRSe / Max( RMSe,( DS * MLU ) ) ) ),MUC ),RMSe ),( ( RMSe + RCSe ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8533483624635861}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RCSe,Max( MUM,MUC ) ),( ( CS - MUC ) + MUM ) ),MUM ) + RCSe ) ) ,( Min( MUR ,MUC ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5605812197833825}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( ( DS * RMSe ),MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8731730569334538}, {"determining": "( Min( Min( Const ,Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.19618475704879262}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.2806235699108473}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) ) ) )", "obj1": 0.8040816326530612, "obj2": 0.08379103131202192}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20816326530612245, "obj2": 0.712360485080412}], "12": [{"determining": "( ( MDR + ( ACS - AMS ) ) - Min( ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),ARS ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ,Max( ARS,DDR ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM / ( CS - ( RCSe + MUR ) ) ) ),MUM ) + RCSe ) ) ,( Max( ( MUC / RMSe ),( MUR / CS ) ) - ( MUM + ( ( ( ( RMSe / MLU ) - MUM ) + RCSe ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * PN ) - ( MDR + ( ACS - Min( ( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ,MDR ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * Max( RCSe,MUM ) ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / CS ) ) + ( Max( Min( ( CS / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN / ( ( ( ( Max( ( FirstVNF_Mem_Server + PN ),( ACS + FirstVNF_RAM_Server ) ) * BR ) * ( BR - BR ) ) / FirstVNF_CPU ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,Const ) ,ARS ) )", "choosing": "Min( ( ( CS / MUC ) * ( RMSe / CS ) ) ,( ( ( RMSe + CS ) + CS ) * ( Min( CS ,MLU ) * ( Max( ( Max( Min( RMSe ,MLU ),MUR ) + RMSe ),Max( Max( RRSe,MUM ),CS ) ) - MUC ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.323273836106415}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.4620528197658089}, {"determining": "( Min( Min( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ),FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.451514131574882}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ACS * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * Max( ( DDR - FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RRSe / ( MUC + ( ( Max( ( MUM * MUM ),MUC ) / RCSe ) * ( Min( CS ,DS ) / ( MLU / ( RCSe - RMSe ) ) ) ) ) ) - ( MUC + ( DS / ( ( ( RCSe * Min( RCSe ,CS ) ) * CS ) - RRSe ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.38032210271741373}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( RMSe + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.4346938775510204, "obj2": 0.4328883359821894}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6332534066305469}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ACS - ( CRS * Min( CRS ,PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( Min( MUR ,MUM ) * ( CS * ( Max( MUC,( ( Max( MLU,MUC ) * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5214556529440422}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Max( RCSe,RMSe ),( MUC / RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( CS + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6834604494103979}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( MUC * RMSe ) * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.47551020408163264, "obj2": 0.38643108794211756}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.4793449423173651}, {"determining": "( ( ( Const + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * RMSe ) * DS ) - ( ( RRSe / RCSe ) + ( CS + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.7244897959183674, "obj2": 0.13093685935576735}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( ARS / Const ) + Min( FirstVNF_CPU ,DDR ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6131512915188949}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( CRS - Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,Max( ( RMSe - MUR ),( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4204081632653061, "obj2": 0.43749458883796244}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - Min( ( ( ( ACS - MRS ) / ( DDR * FirstVNF_CPU_Server ) ) + RRS ) ,FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( DS - ( ( ( MLU - ( ( RMSe + MUM ) + CS ) ) - MUM ) - ( MLU - MUR ) ) ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - Max( Max( RMSe,Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + ( CS - RRSe ) ) ) ) * DS ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6242220237383763}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server + Min( ( FirstVNF_RAM - ( ( Const * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - ( ACS * RRS ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * DS ) - ( ( RCSe / ( ( ( CS / ( ( RMSe - CS ) / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( CS * ( MUC * RMSe ) ),( MLU / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5102040816326531, "obj2": 0.35158397619436405}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Min( MUC ,MUC ) * ( RRSe * RCSe ) ) + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( CS - MUC ) ,Max( MUM,DS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6484749419533072}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / Min( ( ( ( FirstVNF_RAM - ( FirstVNF_CPU_Server * AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( RMSe - MUR ) ),MUM ) - RCSe ) ) ,( ( RMSe - MUR ) - ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) * CS ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( ( MDR + Const ) * ( ( ( PN + FirstVNF_RAM ) / Max( PN,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS + ( Max( ( Max( ( MLU - RMSe ),( Min( MUM ,MUM ) - ( MUM - MLU ) ) ) * RMSe ),MUM ) + RMSe ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - ( ( MUR / CS ) * MUR ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5526083659387142}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( ( ( CRS / RRS ) - RRS ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( Min( RCSe ,( MUM * RRSe ) ) ,Min( ( MUM - CS ) ,RCSe ) ) ) * DS ) - ( ( CS + DS ) + ( RRSe / RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / ( MUR * ( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5864153693537931}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7448300450978572}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) / ( MRS / MDR ) ) * ( FirstVNF_CPU_Server * ( ACS - MDR ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( Min( ( MUC / RRSe ) ,Min( RRSe ,CS ) ) * CS ),( MUC * CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3538453433986942}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,( PN / FirstVNF_CPU_Server ) ) / ( Min( ARS ,Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( FirstVNF_CPU_Server * Max( ACS,( ARS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) / ( MUM + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RCSe / ( ( MUR - RMSe ) + MUM ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7620427612793468}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( CRS * PN ) * ARS ) / MDR ) * FirstVNF_RAM ),BR ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + Min( CS ,DS ) ) ) * DS ) - ( ( ( CS * MUM ) * ( MLU + ( DS / RMSe ) ) ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.22437486045051394}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.35918367346938773, "obj2": 0.4931428948451135}, {"determining": "( ( FirstVNF_RAM_Server - Max( Min( Const ,RRS ),FirstVNF_Mem ) ) + Min( FirstVNF_RAM_Server ,( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server / ACS ) ) ),FirstVNF_RAM_Server ) * Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS * DS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.9612244897959183, "obj2": 0.01665755749133795}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.26737133097824084}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.24327386646922827}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.20486615798708085}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6837316863179841}, {"determining": "( ( ( MDR + Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) / Max( PN,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.07300618776164339}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8512060379933883}, {"determining": "( ( RRS + AMS ) * ( ( Const - FirstVNF_Mem ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( RCSe + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8415967422766246}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.6968746261173344}, {"determining": "( ( BR + MDR ) * ( AMS * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8051986863393062}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( ( PN + FirstVNF_CPU_Server ) / ACS ) ),FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - PN ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU_Server * PN ) * ARS ) ) ),( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( RMSe - Min( MLU ,( Max( DS,DS ) * ( ( MUM * MLU ) + RMSe ) ) ) ) / RMSe ),( Min( CS ,Min( Min( RRSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03542237253724984}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - Min( Const ,FirstVNF_Mem_Server ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.17142857142857143, "obj2": 0.7738034064495062}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( DDR + ACS ) ,FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) - RRS ) ) * ( FirstVNF_CPU_Server * Max( RRS,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( Max( RCSe,MUM ) - MUC ),Max( MUM,( Max( Max( ( MLU / RMSe ),RMSe ),( MLU + RRSe ) ) + ( DS - ( MUC + ( MUM / RCSe ) ) ) ) ) ),MUC ) * Min( RRSe ,( DS * RMSe ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7665877354604633}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7210931555302557}, {"determining": "( ( Max( FirstVNF_RAM,RRS ) * Max( Max( BR,FirstVNF_Mem ),FirstVNF_Mem ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( CS - RRSe ) + ( RMSe + RCSe ) ),Max( RMSe,( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) + RCSe ) ) ) * ( ( MUM + MUM ) / ( DS * RMSe ) ) )", "obj1": 0.1510204081632653, "obj2": 0.7978637001283793}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( ACS + DDR ) ,Min( Const ,FirstVNF_Mem_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( MLU - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8593230257648893}, {"determining": "( Min( ( Const * Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( Max( DDR,FirstVNF_Mem ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( ( Max( ( MLU * CS ),( MUC / CS ) ) + ( CS / ( MLU / MUM ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) - ( ( CS - RMSe ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC / RMSe ) ) ) ) )", "obj1": 0.6857142857142857, "obj2": 0.19472649073094148}, {"determining": "( Min( ( ( ARS / Const ) - Min( FirstVNF_Mem ,BR ) ) ,BR ) * Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC - RMSe ),( ( Max( Max( RMSe,Max( MUM,CS ) ),MLU ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8944815180535649}, {"determining": "( ( ( ACS + ( Const * PN ) ) / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( DS - RMSe ),( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8285027319136218}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8640723948682063}, {"determining": "( Min( ( MDR + ( ACS - AMS ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( MUC / CS ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.013343213497812862}, {"determining": "( Min( Min( Const ,( FirstVNF_Mem_Server + CRS ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * RRS ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( Max( RRSe,Min( ( CS + RMSe ) ,( MUR + MUC ) ) ) / Max( MUR,DS ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.710204081632653, "obj2": 0.17168593023718154}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( Max( RRS,FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS * MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),RCSe ) + RCSe ) ) ,Min( Min( MLU ,Min( RCSe ,Min( MUC ,RCSe ) ) ) ,MUR ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.19387755102040816, "obj2": 0.7351340322464106}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( DDR + ACS ) ,FirstVNF_Mem_Server ) - AMS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ( PN / DDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9448979591836735, "obj2": 0.02460098632349614}, {"determining": "( ( PN - ( ( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( FirstVNF_RAM_Server,( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8358276685055921}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + CS ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7285714285714285, "obj2": 0.1307752803655486}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ACS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.673469387755102, "obj2": 0.19774716983887508}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( ( AMS + RRS ) * ( ( FirstVNF_Mem - Const ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.5721221247805623}, {"determining": "( ( MDR + ( ACS - AMS ) ) - Min( MRS ,Max( ARS,DDR ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM / ( CS - ( RCSe + MUR ) ) ) ),MUM ) + RCSe ) ) ,( Max( ( MUC / RMSe ),( MUR / CS ) ) - ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.9, "obj2": 0.056115222001846835}, {"determining": "( ( ( ( FirstVNF_CPU * ( ARS + Const ) ) / ( Min( MRS ,CRS ) * Const ) ) + RRS ) * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_RAM_Server - MRS ) - FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( RCSe * ( ( ( RCSe / RRSe ) + ( ( Min( Min( ( DS / CS ) ,RCSe ) ,Max( MUM,DS ) ) * CS ) + RCSe ) ) * ( CS * DS ) ) )", "obj1": 0.15918367346938775, "obj2": 0.7937528143020166}, {"determining": "( ( FirstVNF_Mem * PN ) - ( MDR + ( ACS - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * Max( RCSe,MUM ) ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / CS ) ) + ( Max( Min( ( RMSe / ( ( MLU * CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.030752004070550995}, {"determining": "( ( AMS * PN ) - ( MDR + ( ( ( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,BR ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) + ACS ) - AMS ) ) )", "choosing": "( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.7387755102040816, "obj2": 0.12397319235517365}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( ( DS * RMSe ),MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8731730569334538}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) ) ) )", "obj1": 0.8081632653061225, "obj2": 0.0820668355548508}, {"determining": "( ( PN - ( Max( ( ( MDR / ( Min( FirstVNF_CPU_Server ,MDR ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( ACS - FirstVNF_Mem ) ) ) ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),( ( MUC + MUM ) / MLU ) ) + RCSe ) ) ,( ( RMSe - ( Max( Max( ( CS + RCSe ),( ( CS - MUC ) + MUM ) ),MUM ) + RCSe ) ) - ( MUC * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / Max( ( Const / RRS ),ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - AMS ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( Min( CS ,MLU ) + ( MLU * ( DS - RRSe ) ) ) ) ) * DS ) - ( ( CS * RCSe ) + ( RCSe / RRSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem + ( Const * ACS ) ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( ( FirstVNF_Mem_Server + Min( ( BR + CRS ) ,( Min( ACS ,RRS ) + FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( RRSe + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( ( Max( CS,MUC ) - RCSe ) * RMSe ) ) )", "obj1": 0.20816326530612245, "obj2": 0.712360485080412}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5897959183673469, "obj2": 0.2752515611635755}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.5755102040816327, "obj2": 0.29308041575101396}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * MDR ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.03994672070219877}, {"determining": "( ( ( ( ( Max( ACS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server - RRS ) / MRS ) ) - RRS ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) + MUR ) ,( ( RMSe - MUR ) + ( CS * ( Max( ( DS - MUC ),( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5605812197833825}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + ( Const - FirstVNF_Mem ) ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MLU ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.530763957781273}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) ) ) )", "obj1": 0.8183673469387756, "obj2": 0.07843495420103314}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( Max( ( CRS - FirstVNF_CPU ),( FirstVNF_CPU / MDR ) ) * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * ( MLU - RMSe ) ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5938775510204082, "obj2": 0.27203854263448213}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7081632653061225, "obj2": 0.1748318073099638}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - Max( FirstVNF_Mem,( Max( FirstVNF_Mem,AMS ) * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8167004912159782}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.16122448979591836, "obj2": 0.7877002902846225}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.6979591836734694, "obj2": 0.17727188763880353}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( CS * DS ) - ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.7693877551020408, "obj2": 0.10353949783574386}, {"determining": "( ( AMS * ( ( FirstVNF_CPU * PN ) * ARS ) ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "Min( Max( Min( ( RRSe / DS ) ,( CS / RRSe ) ),( ( ( MUR * Min( DS ,RCSe ) ) / ( ( RMSe / RRSe ) - ( RRSe - MUC ) ) ) + ( Min( Min( RRSe ,MUM ) ,( CS / CS ) ) / Min( Min( MUR ,DS ) ,Min( RCSe ,RCSe ) ) ) ) ) ,( DS / MLU ) )", "obj1": 0.8877551020408163, "obj2": 0.06055095185692016}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) )", "choosing": "( ( CS * DS ) - ( ( ( MLU - RCSe ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) / MUC ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08991445999532305}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU * PN ) * ARS ) ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - AMS ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) - ( CS * ( Max( MUC,( ( ( RCSe / RRSe ) * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9897959183673469, "obj2": 0.004258685178654825}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RCSe,Max( MUM,MUC ) ),( ( CS - MUC ) + MUM ) ),MUM ) + RCSe ) ) ,( Min( MUR ,MUC ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5605812197833825}, {"determining": "( ( FirstVNF_RAM - ( MRS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUC,MUM ) ),( MUM + ( MLU * MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5704929331311942}, {"determining": "( ( Max( MDR,( AMS / FirstVNF_CPU ) ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( ACS * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUR ,( Max( ( DS * Min( CS ,( MUR - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * CS ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8204081632653061, "obj2": 0.07618095406020697}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( ( Const - FirstVNF_Mem ) - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,RRSe ) ),( MUM + ( ( RRSe + ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.828576497988836}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.746938775510204, "obj2": 0.11382777879387401}, {"determining": "( ( Max( ( ( MDR / ( FirstVNF_Mem_Server / ACS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / ( ( ( CS * DS ) - ( ( RCSe / ( CS + RCSe ) ) + ( CS + RCSe ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.7918367346938775, "obj2": 0.09229794257152105}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.12230754914305883}, {"determining": "( ( PN * AMS ) - ( MDR + ( FirstVNF_RAM - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( CS * CS ) - ( RMSe * MUC ) )", "obj1": 0.7612244897959184, "obj2": 0.1066223837210525}, {"determining": "( Min( Min( Const ,Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.19618475704879262}], "13": [{"determining": "( ( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + Const ) ) / ( Min( MRS ,CRS ) * Const ) ) + RRS ) * ( Max( FirstVNF_CPU,CRS ) * ( ( ( FirstVNF_RAM_Server - MRS ) - FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( ( DS - MUR ),( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + ( ( ( MLU / MUM ) / CS ) + ( ( MLU * CS ) + ( MUC / CS ) ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( ACS - AMS ) ) - Min( ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),ARS ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ,Max( ARS,DDR ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM / ( CS - ( RCSe + MUR ) ) ) ),MUM ) + RCSe ) ) ,( Max( ( MUC / RMSe ),( MUR / CS ) ) - ( MUM + ( ( ( ( RMSe / MLU ) - MUM ) + RCSe ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( ( PN / ( ( ( ( Max( ( FirstVNF_Mem_Server + PN ),( ACS + FirstVNF_RAM_Server ) ) * BR ) * ( BR - BR ) ) / FirstVNF_CPU ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,Const ) ,ARS ) )", "choosing": "Min( ( ( CS / MUC ) * ( RMSe / CS ) ) ,( ( ( RMSe + CS ) + CS ) * ( Min( CS ,MLU ) * ( Max( ( Max( Min( RMSe ,MLU ),MUR ) + RMSe ),Max( Max( RRSe,MUM ),CS ) ) - MUC ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.323273836106415}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.35918367346938773, "obj2": 0.4931428948451135}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ACS * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * Max( ( DDR - FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RRSe / ( MUC + ( ( Max( ( MUM * MUM ),MUC ) / RCSe ) * ( Min( CS ,DS ) / ( MLU / ( RCSe - RMSe ) ) ) ) ) ) - ( MUC + ( DS / ( ( ( RCSe * Min( RCSe ,CS ) ) * CS ) - RRSe ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.38032210271741373}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6332534066305469}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ACS - ( CRS * Min( CRS ,PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( Min( MUR ,MUM ) * ( CS * ( Max( MUC,( ( Max( MLU,MUC ) * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) / ( MRS / MDR ) ) * ( FirstVNF_CPU_Server * ( ACS - MDR ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( Min( ( MUC / RRSe ) ,Min( RRSe ,CS ) ) * CS ),( MUC * CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3538453433986942}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.41836734693877553, "obj2": 0.426641141134971}, {"determining": "( ( PN - ( BR * Const ) ) * ( FirstVNF_CPU_Server * ( ACS - AMS ) ) )", "choosing": "( ( Max( RMSe,Max( MUM,MUC ) ) - ( ( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.23469387755102042, "obj2": 0.6821229131124377}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( MUC * RMSe ) * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.47551020408163264, "obj2": 0.38643108794211756}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( CRS * PN ) * ARS ) / MDR ) * FirstVNF_RAM ),BR ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + Min( CS ,DS ) ) ) * DS ) - ( ( ( CS * MUM ) * ( MLU + ( DS / RMSe ) ) ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.22437486045051394}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - Min( ( ( ( ACS - MRS ) / ( DDR * FirstVNF_CPU_Server ) ) + RRS ) ,FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( DS - ( ( ( MLU - ( ( RMSe + MUM ) + CS ) ) - MUM ) - ( MLU - MUR ) ) ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - Max( Max( RMSe,Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + ( CS - RRSe ) ) ) ) * DS ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6242220237383763}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.19387755102040816, "obj2": 0.7351340322464106}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5214556529440422}, {"determining": "( ( PN - ( Max( Max( ACS,MRS ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,( CS - RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6114782154316288}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * MDR ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9122448979591836, "obj2": 0.03994672070219877}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server + Min( ( FirstVNF_RAM - ( ( Const * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - ( ACS * RRS ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * DS ) - ( ( RCSe / ( ( ( CS / ( ( RMSe - CS ) / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( CS * ( MUC * RMSe ) ),( MLU / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5102040816326531, "obj2": 0.35158397619436405}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7210931555302557}, {"determining": "( ( ( MDR + Const ) * ( ( ( PN + FirstVNF_RAM ) / Max( PN,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS + ( Max( ( Max( ( MLU - RMSe ),( Min( MUM ,MUM ) - ( MUM - MLU ) ) ) * RMSe ),MUM ) + RMSe ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - ( ( MUR / CS ) * MUR ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5526083659387142}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( ( ( CRS / RRS ) - RRS ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( Min( RCSe ,( MUM * RRSe ) ) ,Min( ( MUM - CS ) ,RCSe ) ) ) * DS ) - ( ( CS + DS ) + ( RRSe / RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / ( MUR * ( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5864153693537931}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - Min( Const ,FirstVNF_Mem_Server ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.17142857142857143, "obj2": 0.7738034064495062}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7448300450978572}, {"determining": "( ( ( Const + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * RMSe ) * DS ) - ( ( RRSe / RCSe ) + ( CS + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.7244897959183674, "obj2": 0.13093685935576735}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / Max( ( DS * RMSe ),MUC ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.38979591836734695, "obj2": 0.459713535646079}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8512060379933883}, {"determining": "( Min( Min( PN ,Max( ( ( FirstVNF_Mem - Min( ARS ,RRS ) ) / ACS ),FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( ( ARS - Min( MRS ,Const ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - Max( MUM,( MUM + CS ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( ( MLU - MLU ) / ( DS * RMSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.19465945528801826}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUR,( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8366850187570082}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.4793449423173651}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( ARS * ( Max( FirstVNF_CPU,( FirstVNF_Mem / ACS ) ) - FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,( MLU - DS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.40816326530612246, "obj2": 0.45283204248701}, {"determining": "( ( DDR * FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - MRS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe + RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( DS * RMSe ) / Min( MLU ,Max( CS,RRSe ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8278689154006856}, {"determining": "( ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,( MUR - DS ) ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / Max( RRSe,RCSe ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( DS / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( Min( ( Const * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - ( Max( ( Min( MDR ,( ( AMS * Const ) * ARS ) ) * FirstVNF_RAM ),Max( DDR,( AMS - ( CRS / RRS ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( Min( MUC ,Min( ( DS + MUC ) ,Max( RCSe,CS ) ) ) + ( ( RMSe / RRSe ) - ( DS - RMSe ) ) ) - MLU ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + MUR ) )", "obj1": 0.6265306122448979, "obj2": 0.24327386646922827}, {"determining": "( ( FirstVNF_Mem / Min( Const ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Min( MUC ,MUC ) * ( RRSe * RCSe ) ) + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( CS - MUC ) ,Max( MUM,DS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8225563950977309}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( MUC * RMSe ) * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.43673469387755104, "obj2": 0.4194652830233684}, {"determining": "( Min( Min( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ),FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.451514131574882}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.26737133097824084}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + CS ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8869192770488978}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ARS * ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) ) ) / ( ( Max( ( CRS * AMS ),( CRS * DDR ) ) - FirstVNF_CPU_Server ) * ( ARS * AMS ) ) ) - DDR ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUR ,( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUM - MLU ) - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( RCSe - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.07300618776164339}, {"determining": "( ( BR + MDR ) * ( AMS * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8051986863393062}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,( PN / FirstVNF_CPU_Server ) ) / ( Min( ARS ,Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( FirstVNF_CPU_Server * Max( ACS,( ARS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) / ( MUM + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RCSe / ( ( MUR - RMSe ) + MUM ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7620427612793468}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) )", "choosing": "( ( CS * DS ) - ( ( ( MLU - RCSe ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) / MUC ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08991445999532305}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + ( Const - FirstVNF_Mem ) ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MLU ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.530763957781273}, {"determining": "( Min( Min( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ),FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4326530612244898, "obj2": 0.4256012190042521}, {"determining": "( ( FirstVNF_RAM_Server - Max( Min( Const ,RRS ),FirstVNF_Mem ) ) + Min( FirstVNF_RAM_Server ,( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server / ACS ) ) ),FirstVNF_RAM_Server ) * Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS * DS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.9612244897959183, "obj2": 0.01665755749133795}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( ACS + DDR ) ,Min( Const ,FirstVNF_Mem_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( MLU - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11224489795918367, "obj2": 0.8593230257648893}, {"determining": "( Min( Min( Const ,Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUR ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( DS / RMSe ) + ( RMSe / ( RMSe + MUR ) ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.636734693877551, "obj2": 0.2331622086195984}, {"determining": "( ( AMS + RRS ) * ( ( FirstVNF_Mem - Const ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.5721221247805623}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8640723948682063}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.4793449423173651}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - Max( FirstVNF_Mem,( Max( FirstVNF_Mem,AMS ) * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8167004912159782}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.4620528197658089}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.5755102040816327, "obj2": 0.29308041575101396}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Min( MUC ,MUC ) * ( RRSe * RCSe ) ) + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( CS - MUC ) ,Max( MUM,DS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6484749419533072}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6837316863179841}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.16122448979591836, "obj2": 0.7877002902846225}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.10914923831137838}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.6968746261173344}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / Min( ( ( ( FirstVNF_RAM - ( FirstVNF_CPU_Server * AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( RMSe - MUR ) ),MUM ) - RCSe ) ) ,( ( RMSe - MUR ) - ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) * CS ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) / ( ( Min( ( DDR + ACS ) ,FirstVNF_Mem_Server ) - AMS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ( PN / DDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( MUR - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.022109691313257174}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ACS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.673469387755102, "obj2": 0.19774716983887508}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( ( PN - ( Max( ( DDR - ( MDR / ( ( ARS - DDR ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + Min( CS ,DS ) ) ) * DS ) - ( ( ( CS * MUM ) * ( MLU + ( DS / RMSe ) ) ) + ( Max( MUM,MLU ) * Min( RRSe ,( Min( Max( ( RCSe * MLU ),DS ) ,( MUM / MLU ) ) * CS ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5649677349450803}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( ( ( Max( FirstVNF_RAM,RRS ) * Max( ARS,FirstVNF_Mem ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + ( ( MLU + MUM ) / ( DS * RMSe ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.07959183673469387, "obj2": 0.8992811361413321}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( CS * DS ) - ( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.7693877551020408, "obj2": 0.10353949783574386}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( ( PN + FirstVNF_CPU_Server ) / ACS ) ),FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - PN ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU_Server * PN ) * ARS ) ) ),( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( RMSe - Min( MLU ,( Max( DS,DS ) * ( ( MUM * MLU ) + RMSe ) ) ) ) / RMSe ),( Min( CS ,Min( Min( RRSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03542237253724984}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( MUR - ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / Max( ( Const / RRS ),ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - AMS ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( Min( CS ,MLU ) + ( MLU * ( DS - RRSe ) ) ) ) ) * DS ) - ( ( CS * RCSe ) + ( RCSe / RRSe ) ) )", "obj1": 0.6591836734693878, "obj2": 0.21332358339807736}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2807999345894429}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20816326530612245, "obj2": 0.712360485080412}, {"determining": "( ( DDR - AMS ) - ( MDR / ( ACS - AMS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( RCSe / MUM ) ) * ( MUR / ( DS * RMSe ) ) )", "obj1": 0.736734693877551, "obj2": 0.12538974022506133}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,MDR ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * DS ) ) )", "obj1": 0.5795918367346938, "obj2": 0.2902826357993778}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( DDR + ACS ) ,FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) - RRS ) ) * ( FirstVNF_CPU_Server * Max( RRS,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( Max( RCSe,MUM ) - MUC ),Max( MUM,( Max( Max( ( MLU / RMSe ),RMSe ),( MLU + RRSe ) ) + ( DS - ( MUC + ( MUM / RCSe ) ) ) ) ) ),MUC ) * Min( RRSe ,( DS * RMSe ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7665877354604633}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7142857142857143, "obj2": 0.1711065667568021}, {"determining": "( ( PN * AMS ) - ( MDR + ( FirstVNF_RAM - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( CS * CS ) - ( RMSe * MUC ) )", "obj1": 0.7612244897959184, "obj2": 0.1066223837210525}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * RMSe ) * DS ) - ( ( DS / RCSe ) + ( CS + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.726530612244898, "obj2": 0.13032057948453363}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( ARS / Min( FirstVNF_CPU_Server ,CRS ) ) + Max( FirstVNF_CPU,DDR ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( MUM,MUC ) ) / ( DS - MUC ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5243665676679476}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( PN * PN ) * ACS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUR + ( RMSe + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.9673469387755103, "obj2": 0.014990051066307608}, {"determining": "( ( FirstVNF_Mem * PN ) - ( MDR + ( ACS - Min( FirstVNF_RAM_Server ,( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * Max( RCSe,MUM ) ),( MUC / CS ) ) ) + ( ( ( MUR / RMSe ) + ( RMSe / CS ) ) + ( Max( Min( ( MUM + ( CS - MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9775510204081632, "obj2": 0.007884220931712144}, {"determining": "( Min( ( MDR + ( ACS - AMS ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( MUC / CS ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.013343213497812862}, {"determining": "( ( ( Const + ACS ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7836734693877551, "obj2": 0.0957684157062935}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( ( DS * RMSe ),MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8731730569334538}, {"determining": "( ( Max( FirstVNF_RAM,RRS ) * Max( ARS,FirstVNF_Mem ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6484749419533072}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU * PN ) * ARS ) ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - AMS ) ) ) ) ) )", "choosing": "( Max( MUC,( ( RMSe * RRSe ) + Min( DS ,MUM ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9857142857142858, "obj2": 0.006182825065426318}, {"determining": "( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08979591836734693, "obj2": 0.889567632075244}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.20486615798708085}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( ( DS * RMSe ),MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10204081632653061, "obj2": 0.8731730569334538}], "14": [{"determining": "( ( AMS * Const ) - ( Min( ACS ,Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) / MDR ) )", "choosing": "( Max( Max( RMSe,Max( ( Min( MUM ,MLU ) * RMSe ),( ( CS / ( RCSe + DS ) ) + RMSe ) ) ),( RCSe / MUM ) ) * ( MUR / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server + Const ) ) / ( Min( MRS ,CRS ) * Const ) ) + RRS ) * ( Max( FirstVNF_CPU,CRS ) * ( ( ( FirstVNF_RAM_Server - MRS ) - FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( ( DS - MUR ),( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + ( ( ( MLU / MUM ) / CS ) + ( ( MLU * CS ) + ( MUC / CS ) ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN / ( ( ( ( Max( ( FirstVNF_Mem_Server + PN ),( ACS + FirstVNF_RAM_Server ) ) * BR ) * ( BR - BR ) ) / FirstVNF_CPU ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,Const ) ,ARS ) )", "choosing": "Min( ( ( CS / MUC ) * ( RMSe / CS ) ) ,( ( ( RMSe + CS ) + CS ) * ( Min( CS ,MLU ) * ( Max( ( Max( Min( RMSe ,MLU ),MUR ) + RMSe ),Max( Max( RRSe,MUM ),CS ) ) - MUC ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.323273836106415}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( ( Const - FirstVNF_Mem ) * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( Min( Min( RMSe ,( ( RCSe / RMSe ) / RMSe ) ) ,( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU + MUR ) ) * RMSe ),MUM ) + RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ACS - ( CRS * Min( CRS ,PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( Min( MUR ,MUM ) * ( CS * ( Max( MUC,( ( Max( MLU,MUC ) * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( Min( ( Const * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - ( Max( ( Min( MDR ,( ( AMS * Const ) * ARS ) ) * FirstVNF_RAM ),Max( DDR,( AMS - ( CRS / RRS ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( Min( MUC ,Min( ( DS + MUC ) ,Max( RCSe,CS ) ) ) + ( ( RMSe / RRSe ) - ( DS - RMSe ) ) ) - MLU ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + MUR ) )", "obj1": 0.6265306122448979, "obj2": 0.24327386646922827}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( MUC * RMSe ) * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.47551020408163264, "obj2": 0.38643108794211756}, {"determining": "( ( ( MDR + Const ) * ( ( ( PN + FirstVNF_RAM ) / Max( PN,FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( CS + ( Max( ( Max( ( MLU - RMSe ),( Min( MUM ,MUM ) - ( MUM - MLU ) ) ) * RMSe ),MUM ) + RMSe ) ) ,( ( Max( ( MLU * CS ),( MUC / CS ) ) - MUR ) - ( ( MUR / CS ) * MUR ) ) )", "obj1": 0.32857142857142857, "obj2": 0.5526083659387142}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.0741880971795771}, {"determining": "( ( Max( FirstVNF_RAM,RRS ) * ( ARS * FirstVNF_Mem ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "Min( ( MUR + ( Max( Max( ( RMSe / ( RRSe + RMSe ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MLU,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.06511464475760945}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.5972577921258062}, {"determining": "( ( PN - ( Max( ( DDR - ( MDR / ( ( ARS - DDR ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + Min( CS ,DS ) ) ) * DS ) - ( ( ( CS * MUM ) * ( MLU + ( DS / RMSe ) ) ) + ( Max( MUM,MLU ) * Min( RRSe ,( Min( Max( ( RCSe * MLU ),DS ) ,( MUM / MLU ) ) * CS ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5649677349450803}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server + Min( ( FirstVNF_RAM - ( ( Const * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - ( ACS * RRS ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * DS ) - ( ( RCSe / ( ( ( CS / ( ( RMSe - CS ) / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( CS * ( MUC * RMSe ) ),( MLU / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5102040816326531, "obj2": 0.35158397619436405}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.19387755102040816, "obj2": 0.7351340322464106}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ACS * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * Max( ( DDR - FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RRSe / ( MUC + ( ( Max( ( MUM * MUM ),MUC ) / RCSe ) * ( Min( CS ,DS ) / ( MLU / ( RCSe - RMSe ) ) ) ) ) ) - ( MUC + ( DS / ( ( ( RCSe * Min( RCSe ,CS ) ) * CS ) - RRSe ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.38032210271741373}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6819562166599125}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6332534066305469}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( CS * RMSe ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9346938775510204, "obj2": 0.031485355468248086}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5214556529440422}, {"determining": "( ( BR + MDR ) * ( AMS * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8051986863393062}, {"determining": "( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.35714285714285715, "obj2": 0.49515316080763594}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( ACS - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * RMSe ) * DS ) - ( ( DS / RCSe ) + ( CS + RRSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.7244897959183674, "obj2": 0.13093685935576735}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM / ( CS - ( RCSe + MUR ) ) ) ),MUM ) + RCSe ) ) ,( Max( ( MUC / RMSe ),( MUR / CS ) ) - ( MUM + ( ( ( ( RMSe / MLU ) - MUM ) + RCSe ) - MUC ) ) ) )", "obj1": 0.8795918367346939, "obj2": 0.05093490105543317}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / Min( ( ( ( FirstVNF_RAM - Max( PN,AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU / MUM ) * CS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.49183673469387756, "obj2": 0.36416144192614525}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,( PN / FirstVNF_CPU_Server ) ) / ( Min( ARS ,Const ) + Min( FirstVNF_CPU ,DDR ) ) ) * ( FirstVNF_CPU_Server * Max( ACS,( ARS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) / ( MUM + RCSe ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RCSe / ( ( MUR - RMSe ) + MUM ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7620427612793468}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20816326530612245, "obj2": 0.712360485080412}, {"determining": "( ( ( ( CRS / RRS ) - RRS ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( Min( RCSe ,( MUM * RRSe ) ) ,Min( ( MUM - CS ) ,RCSe ) ) ) * DS ) - ( ( CS + DS ) + ( RRSe / RCSe ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / ( MUR * ( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5864153693537931}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Min( BR ,( CRS / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM - Max( MUR,DS ) ) ) ) - ( MUC + RMSe ) ) ) ) ,( MUR + ( RMSe + RCSe ) ) )", "obj1": 0.5877551020408164, "obj2": 0.275809283228555}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( MUC * RMSe ) * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.43673469387755104, "obj2": 0.4194652830233684}, {"determining": "( Min( Min( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ),FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( ACS * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4142857142857143, "obj2": 0.44870462118033383}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) * ARS ) * ( FirstVNF_RAM_Server / Min( MDR ,Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "( ( Max( RMSe,Max( MUC,MUM ) ) * ( ( CS - RRSe ) + ( CS + RCSe ) ) ) * Max( MUC,( ( MUC / Max( ( CS / ( RCSe - RCSe ) ),MUR ) ) * MUC ) ) )", "obj1": 0.9061224489795918, "obj2": 0.04327103984241692}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( ARS * ( Max( FirstVNF_CPU,( FirstVNF_Mem / ACS ) ) - FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,( MLU - DS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.40816326530612246, "obj2": 0.45283204248701}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.41836734693877553, "obj2": 0.426641141134971}, {"determining": "( Min( Min( PN ,Max( ( ( FirstVNF_Mem - Min( ARS ,RRS ) ) / ACS ),FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( ( ARS - Min( MRS ,Const ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - Max( MUM,( MUM + CS ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( ( MLU - MLU ) / ( DS * RMSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.19465945528801826}, {"determining": "( Min( Min( Const ,Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - Max( ACS,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUM - MLU ) - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.17974329004258316}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( MUR - ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( ( Max( MDR,Const ) * ( ( ( ( DDR + ACS ) / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUR ,( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( Min( RRSe ,( DS * RMSe ) ) + ( ( MUM - MLU ) - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7836734693877551, "obj2": 0.09535098442993384}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.26737133097824084}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUC ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.4918873027477478}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( PN - ( Max( FirstVNF_RAM_Server,( Max( Min( MDR ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( BR ,ARS ) ) * ( MDR * ( ( FirstVNF_CPU * PN ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( FirstVNF_CPU_Server + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Min( RMSe ,MUM ) ,MUM ) ) ) - MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS + ( Min( Max( MUR,RMSe ) ,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3816326530612245, "obj2": 0.4745442999063138}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,PN ) + ( PN - ( Max( ( ( MDR / ( ( PN * PN ) * ACS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( CS * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.0056746633695672994}, {"determining": "( ( Max( MDR,MDR ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( Min( MRS ,AMS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( CS * ( DS / CS ) ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.07300618776164339}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22653061224489796, "obj2": 0.6968746261173344}, {"determining": "( ( DDR * FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - MRS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe + RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( DS * RMSe ) / Min( MLU ,Max( CS,RRSe ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8278689154006856}, {"determining": "( ( AMS + RRS ) * ( MDR + BR ) )", "choosing": "Min( ( MUR + Min( Max( ( MUR + DS ),MUM ) ,RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.5721221247805623}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2612244897959184, "obj2": 0.6437818699872799}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42653061224489797, "obj2": 0.42160328800726676}, {"determining": "( ( FirstVNF_RAM_Server - Max( Min( Const ,RRS ),FirstVNF_Mem ) ) + Min( FirstVNF_RAM_Server ,( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server / ACS ) ) ),FirstVNF_RAM_Server ) * Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS * DS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.9612244897959183, "obj2": 0.01665755749133795}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( ( PN + FirstVNF_CPU_Server ) / ACS ) ),FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - PN ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU_Server * PN ) * ARS ) ) ),( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( RMSe - Min( MLU ,( Max( DS,DS ) * ( ( MUM * MLU ) + RMSe ) ) ) ) / RMSe ),( Min( CS ,Min( Min( RRSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03542237253724984}, {"determining": "( ( FirstVNF_Mem_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8592488119187905}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) )", "choosing": "( ( CS * DS ) - ( ( ( MLU - RCSe ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) / MUC ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08991445999532305}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1673469387755102, "obj2": 0.7800749566200843}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7142857142857143, "obj2": 0.1711065667568021}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) )", "choosing": "( ( CS * DS ) - ( ( ( MLU - RCSe ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) / MUC ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.8, "obj2": 0.09057193087302536}, {"determining": "( ( DDR - AMS ) - ( MDR / ( ACS - AMS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( RCSe / MUM ) ) * ( MUR / ( DS * RMSe ) ) )", "obj1": 0.736734693877551, "obj2": 0.12538974022506133}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * MDR ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9469387755102041, "obj2": 0.023557442638190467}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - Max( FirstVNF_Mem,( Max( FirstVNF_Mem,AMS ) * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8167004912159782}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6530612244897959, "obj2": 0.22035155653502206}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server / DDR ) ) - RRS ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * RMSe ) * DS ) - ( ( ( RCSe + Max( MUC,( RCSe * MUM ) ) ) / RCSe ) + ( CS + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) - RCSe ) ) )", "obj1": 0.7510204081632653, "obj2": 0.11463292494254064}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.4620528197658089}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6837316863179841}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2807999345894429}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7448300450978572}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8640723948682063}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( CRS * PN ) * ARS ) / MDR ) * FirstVNF_RAM ),BR ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + Min( CS ,DS ) ) ) * DS ) - ( ( ( CS * MUM ) * ( MLU + ( DS / RMSe ) ) ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.22437486045051394}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - Min( Const ,FirstVNF_Mem_Server ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.17142857142857143, "obj2": 0.7738034064495062}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7210931555302557}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.4793449423173651}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8512060379933883}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.5755102040816327, "obj2": 0.29308041575101396}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.38979591836734695, "obj2": 0.459713535646079}, {"determining": "( ( FirstVNF_RAM_Server / ( Min( ( BR * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( CS + DS ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5, "obj2": 0.3563650197790879}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6346938775510204, "obj2": 0.23454664976811}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,MUC ) + ( ( DS * RMSe ) / ( MLU + MUM ) ) ) + ( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) + ( ( ( Max( RCSe,( RCSe / MUR ) ) - DS ) + RMSe ) + ( RMSe / DS ) ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8939809511164567}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( MUM,MUC ) ) / ( DS - MUC ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7775510204081633, "obj2": 0.09793503085651215}, {"determining": "( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ( Max( ( DDR * ( ( PN - ( BR * Const ) ) * ( FirstVNF_CPU_Server * ( ACS - AMS ) ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Min( Min( AMS ,AMS ) ,ACS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ACS ) ) )", "choosing": "( ( MUC - RRSe ) * ( Max( Max( MUC,( RRSe / ( RRSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8241253675077242}, {"determining": "( ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,( MUR - DS ) ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / Max( RRSe,RCSe ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( DS / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( Min( Min( Const ,Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.23006433630079146}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.10914923831137838}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - Max( ( ( BR * ACS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ),PN ) ) ) )", "choosing": "( ( CS * DS ) - ( ( ( MLU - RCSe ) * ( Min( RRSe ,Min( Max( RCSe,( RCSe + MUR ) ) ,RRSe ) ) - Max( ( CS + CS ),( ( Min( RMSe ,RMSe ) / ( MLU + RRSe ) ) / MUC ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08991445999532305}, {"determining": "( ( PN * AMS ) - ( MDR + ( FirstVNF_RAM - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( CS * CS ) - ( RMSe * MUC ) )", "obj1": 0.7612244897959184, "obj2": 0.1066223837210525}, {"determining": "( ( ( MDR + ( ( ( ACS - FirstVNF_CPU_Server ) / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS * RMSe ) * DS ) - ( ( DS / RCSe ) + ( CS + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + Max( MUM,DS ) ) )", "obj1": 0.726530612244898, "obj2": 0.13002665492582927}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( MLU - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7665877354604633}, {"determining": "( Min( ( MDR + ( ACS - AMS ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( MUC / CS ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.013343213497812862}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.4793449423173651}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Min( ( RRS + AMS ) ,( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( Min( FirstVNF_Mem ,CRS ) - BR ) )", "choosing": "Min( ( MUR * ( Max( ( Max( RMSe,( MLU + RMSe ) ) * RMSe ),MUM ) * RMSe ) ) ,( ( Max( ( CS * MLU ),( MUC / CS ) ) - MUR ) - Max( ( Min( MLU ,( Max( CS,Min( MUC ,RRSe ) ) + RMSe ) ) / DS ),( ( ( CS * MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5294624953130171}], "15": [{"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - AMS ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( ( MUR + ( CS - MUC ) ),( MUM / ( CS - ( RCSe + MUR ) ) ) ),MUM ) + RCSe ) ) ,( Max( ( MUC / RMSe ),( MUR / CS ) ) - ( MUM + ( ( ( ( RMSe / MLU ) - MUM ) + RCSe ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * Const ) - ( Min( ACS ,Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) / MDR ) )", "choosing": "( Max( Max( RMSe,Max( ( Min( MUM ,MLU ) * RMSe ),( ( CS / ( RCSe + DS ) ) + RMSe ) ) ),( RCSe / MUM ) ) * ( MUR / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN / ( ( ( ( Max( ( FirstVNF_Mem_Server + PN ),( ACS + FirstVNF_RAM_Server ) ) * BR ) * ( BR - BR ) ) / FirstVNF_CPU ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,Const ) ,ARS ) )", "choosing": "Min( ( ( CS / MUC ) * ( RMSe / CS ) ) ,( ( ( RMSe + CS ) + CS ) * ( Min( CS ,MLU ) * ( Max( ( Max( Min( RMSe ,MLU ),MUR ) + RMSe ),Max( Max( RRSe,MUM ),CS ) ) - MUC ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.323273836106415}, {"determining": "( Min( Min( PN ,Max( ( ( FirstVNF_Mem - Min( ARS ,RRS ) ) / ACS ),FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( ( ARS - Min( MRS ,Const ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - Max( MUM,( MUM + CS ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( ( MLU - MLU ) / ( DS * RMSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.19465945528801826}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6530612244897959, "obj2": 0.22035155653502206}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ACS * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * Max( ( DDR - FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RRSe / ( MUC + ( ( Max( ( MUM * MUM ),MUC ) / RCSe ) * ( Min( CS ,DS ) / ( MLU / ( RCSe - RMSe ) ) ) ) ) ) - ( MUC + ( DS / ( ( ( RCSe * Min( RCSe ,CS ) ) * CS ) - RRSe ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.38032210271741373}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( ( Const - FirstVNF_Mem ) * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( Min( Min( RMSe ,( ( RCSe / RMSe ) / RMSe ) ) ,( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU + MUR ) ) * RMSe ),MUM ) + RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( ( FirstVNF_RAM_Server / ( Min( ( BR * RRS ) ,( ( ARS - ( Const - FirstVNF_Mem ) ) * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC - RMSe ) ) ) + ( CS + DS ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5, "obj2": 0.3496551056502737}, {"determining": "( Min( ( Const * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - ( Max( ( Min( MDR ,( ( AMS * Const ) * ARS ) ) * FirstVNF_RAM ),Max( DDR,( AMS - ( CRS / RRS ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( Min( MUC ,Min( ( DS + MUC ) ,Max( RCSe,CS ) ) ) + ( ( RMSe / RRSe ) - ( DS - RMSe ) ) ) - MLU ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + MUR ) )", "obj1": 0.6265306122448979, "obj2": 0.24327386646922827}, {"determining": "( ( PN - ( Max( ( DDR - ( MDR / ( ( ARS - DDR ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + Min( CS ,DS ) ) ) * DS ) - ( ( ( CS * MUM ) * ( MLU + ( DS / RMSe ) ) ) + ( Max( MUM,MLU ) * Min( RRSe ,( Min( Max( ( RCSe * MLU ),DS ) ,( MUM / MLU ) ) * CS ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5649677349450803}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( MDR * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RCSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.45510204081632655, "obj2": 0.386158401491127}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.5464612305360188}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) * ARS ) * ( FirstVNF_RAM_Server / Min( MDR ,Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "( ( Max( RMSe,Max( MUC,MUM ) ) * ( ( CS - RRSe ) + ( CS + RCSe ) ) ) * Max( MUC,( ( MUC / Max( ( CS / ( RCSe - RCSe ) ),MUR ) ) * MUC ) ) )", "obj1": 0.9061224489795918, "obj2": 0.04327103984241692}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.5972577921258062}, {"determining": "( Min( Min( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ),FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( ACS * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4142857142857143, "obj2": 0.44870462118033383}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.19387755102040816, "obj2": 0.7351340322464106}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( AMS * PN ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUC ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.1, "obj2": 0.8871053068323576}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.41836734693877553, "obj2": 0.426641141134971}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2612244897959184, "obj2": 0.6437818699872799}, {"determining": "( ( Max( FirstVNF_RAM,RRS ) * ( ARS * FirstVNF_Mem ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "Min( ( MUR + ( Max( Max( ( RMSe / ( RRSe + RMSe ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MLU,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.06511464475760945}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) ) * Min( CRS ,AMS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( RRSe * ( RCSe + ( ( MUM / Max( RCSe,MUC ) ) / RRSe ) ) ) * RMSe ) ) * ( ( DS * RMSe ) / Max( Max( MUC,( ( RMSe + MLU ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6805481207616312}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6332534066305469}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7210931555302557}, {"determining": "( ( BR + MDR ) * ( AMS * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8051986863393062}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5214556529440422}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - ( FirstVNF_Mem_Server * ( ( Max( CRS,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( CRS - FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Min( RMSe ,( ( RCSe / ( RMSe * Min( MLU ,Max( MLU,RMSe ) ) ) ) / RMSe ) ) ,( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU + MUR ) ) * RMSe ),MUM ) + RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( MUC * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2979591836734694, "obj2": 0.574603089505602}, {"determining": "( Max( FirstVNF_RAM,RRS ) * ( ( ( ( CRS / FirstVNF_RAM_Server ) / Const ) * ( ( DDR + DDR ) - MRS ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR / Max( MUR,RMSe ) ) * DS ) / Min( MUC ,MLU ) ) * Min( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) ,( DS * RMSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8278689154006856}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.5755102040816327, "obj2": 0.29308041575101396}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1673469387755102, "obj2": 0.7800749566200843}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - ( FirstVNF_CPU_Server * RRS ) ) ) * ( ( Const * ( FirstVNF_Mem + RRS ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( Max( MUM,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * ( RRSe + RMSe ) ) + Min( Max( MUM,DS ) ,Min( MUC ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.4956594083523935}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7546381278208657}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08395580397923846}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * MDR ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9469387755102041, "obj2": 0.023557442638190467}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ACS - ( CRS * Min( CRS ,PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( Min( MUR ,MUM ) * ( CS * ( Max( MUC,( ( Max( MLU,MUC ) * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / Min( ( ( ( FirstVNF_RAM - Max( PN,AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU / MUM ) * CS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.49183673469387756, "obj2": 0.36416144192614525}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RCSe / RCSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4, "obj2": 0.4505088492407047}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( ( PN + FirstVNF_CPU_Server ) / ACS ) ),FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - PN ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU_Server * PN ) * ARS ) ) ),( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( RMSe - Min( MLU ,( Max( DS,DS ) * ( ( MUM * MLU ) + RMSe ) ) ) ) / RMSe ),( Min( CS ,Min( Min( RRSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03542237253724984}, {"determining": "( ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,( MUR - DS ) ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / Max( RRSe,RCSe ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( DS / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8512060379933883}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2807999345894429}, {"determining": "( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ( Max( ( DDR * ( ( PN - ( BR * Const ) ) * ( FirstVNF_CPU_Server * ( ACS - AMS ) ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Min( Min( AMS ,AMS ) ,ACS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ACS ) ) )", "choosing": "( ( MUC - RRSe ) * ( Max( Max( MUC,( RRSe / ( RRSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8241253675077242}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8640723948682063}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,MUC ) + ( ( DS * RMSe ) / ( MLU + MUM ) ) ) + ( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) + ( ( ( Max( RCSe,( RCSe / MUR ) ) - DS ) + RMSe ) + ( RMSe / DS ) ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8939809511164567}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.38979591836734695, "obj2": 0.45590852532517423}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7448300450978572}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUR ,( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUM - MLU ) - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.07300618776164339}, {"determining": "( Max( FirstVNF_RAM,( ( FirstVNF_Mem - Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - Max( FirstVNF_Mem,( Max( FirstVNF_Mem,AMS ) * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8167004912159782}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.4620528197658089}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ( ARS - ACS ) - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,Min( ( RMSe - MUR ) ,( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUM ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( FirstVNF_Mem_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8592488119187905}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( ( MUC - CS ) + RMSe ) - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + RCSe ) )", "obj1": 0.8755102040816326, "obj2": 0.05175579965855894}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.26737133097824084}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42653061224489797, "obj2": 0.42160328800726676}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( MUC * RMSe ) * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.35703044705911124}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.22866170584818055}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( ( ACS * FirstVNF_Mem ) * BR ) + FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( ( ( DS - ( MUC - DS ) ) * MLU ) + MUC ),CS ) + RCSe ) ) ,( ( RMSe - DS ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / Min( ( DDR + ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( RMSe,( MUC / Min( MUR ,DS ) ) ) ),( ( Min( ( Max( DS,Max( MUC,CS ) ) - ( MUC + ( RMSe / MUC ) ) ) ,DS ) - RRSe ) + ( CS * ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7077519987798294}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_Mem - Min( Const ,FirstVNF_Mem_Server ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ),( ( RMSe + ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.17142857142857143, "obj2": 0.7738034064495062}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( Min( ( PN - ( BR + MRS ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( DS / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.020060946848568288}, {"determining": "( Min( ( Const * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - ( Max( ( Min( MDR ,( ( AMS * Const ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08979591836734693, "obj2": 0.889567632075244}, {"determining": "( ( FirstVNF_RAM_Server - Max( Min( Const ,RRS ),FirstVNF_Mem ) ) + Min( FirstVNF_RAM_Server ,( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server / ACS ) ) ),FirstVNF_RAM_Server ) * Max( CRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS * DS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.9612244897959183, "obj2": 0.01665755749133795}, {"determining": "( Min( FirstVNF_CPU ,DDR ) * ( MRS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( CS * RRSe ) ) ),( MUM + ( CS - MUC ) ) ),MUM ) - RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.4793449423173651}, {"determining": "( ( PN - ( Max( FirstVNF_RAM_Server,( Max( Min( MDR ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( BR ,ARS ) ) * ( MDR * ( ( FirstVNF_CPU * PN ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( FirstVNF_CPU_Server + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Min( RMSe ,MUM ) ,MUM ) ) ) - MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS + ( Min( Max( MUR,RMSe ) ,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3816326530612245, "obj2": 0.4745442999063138}, {"determining": "( ( ( MDR + ( ( ARS - ARS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) + ( Const - RRS ) ) * ( FirstVNF_Mem_Server * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( MLU * MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7673469387755102, "obj2": 0.10446169203555956}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( CRS * PN ) * ARS ) / MDR ) * FirstVNF_RAM ),BR ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + Min( CS ,DS ) ) ) * DS ) - ( ( ( CS * MUM ) * ( MLU + ( DS / RMSe ) ) ) + ( ( MUR / Min( MUR ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.22437486045051394}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR + DS ) * ( MUC - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6837316863179841}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7061224489795919, "obj2": 0.17627077693688395}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( MUR - ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( Min( ( MDR + ( ACS - AMS ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RRSe / RCSe ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( DS / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.009590576311858546}, {"determining": "( ( AMS * PN ) - ( MDR + ( ACS - AMS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.10914923831137838}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Min( ( RRS + AMS ) ,( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( Min( FirstVNF_Mem ,CRS ) - BR ) )", "choosing": "Min( ( MUR * ( Max( ( Max( RMSe,( MLU + RMSe ) ) * RMSe ),MUM ) * RMSe ) ) ,( ( Max( ( CS * MLU ),( MUC / CS ) ) - MUR ) - Max( ( Min( MLU ,( Max( CS,Min( MUC ,RRSe ) ) + RMSe ) ) / DS ),( ( ( CS * MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5294624953130171}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20816326530612245, "obj2": 0.712360485080412}, {"determining": "( ( ACS - MDR ) + ( PN - ( Max( ( ( MDR / ( ARS * ( FirstVNF_CPU * PN ) ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( Const,( Const - ( ( CRS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) + ( RMSe / DS ) ) - ( ( Max( Min( Max( ( MLU * CS ),( MUC / CS ) ) ,( MUR / Max( CS,RMSe ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUM + ( ( RCSe + RRSe ) - RCSe ) ) ) )", "obj1": 0.9714285714285714, "obj2": 0.013411930369166308}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( MLU - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7665877354604633}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( MUC * RMSe ) * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.43673469387755104, "obj2": 0.4194652830233684}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( RMSe + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.4793449423173651}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUC ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.4918873027477478}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( Min( PN ,RRS ) * ( MDR * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( RMSe,Max( MUM,MUC ) ) ,( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * ( Max( MUC,RRSe ) * ( MUC / CS ) ) ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8512060379933883}, {"determining": "( ( Max( MDR,MDR ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( Min( MRS ,AMS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( CS * ( DS / CS ) ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.07618428662217709}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( MLU - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7665877354604633}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,PN ) + ( PN - ( Max( ( ( MDR / ( ( PN * PN ) * ACS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005187475807777818}, {"determining": "( PN * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( Max( ( ( RRSe + ( MUM * CS ) ) - MLU ),Max( Min( MUR ,MLU ),RRSe ) ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( ( Max( RCSe,DS ) / MUR ) ,MUR ) ) - RCSe ) ) )", "obj1": 0.7448979591836735, "obj2": 0.119524969546773}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7142857142857143, "obj2": 0.1711065667568021}, {"determining": "( ( ( ( FirstVNF_CPU * ( ARS + Const ) ) / ( Min( MRS ,CRS ) * Const ) ) + RRS ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( Min( Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ,( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUM - MLU ) - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7877551020408163, "obj2": 0.09317656984444743}, {"determining": "( ( AMS + RRS ) * ( MDR + BR ) )", "choosing": "Min( ( MUR + Min( Max( ( MUR + DS ),MUM ) ,RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.5721221247805623}], "16": [{"determining": "( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) ) * ( Min( AMS ,FirstVNF_CPU_Server ) * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUC ) + ( ( DS * RMSe ) / ( MLU + MUM ) ) ) + ( ( RCSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - AMS ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( ( MUR + ( CS - MUC ) ),( MUM / ( CS - ( RCSe + MUR ) ) ) ),MUM ) + RCSe ) ) ,( Max( ( MUC / RMSe ),( MUR / CS ) ) - ( MUM + ( ( ( ( RMSe / MLU ) - MUM ) + RCSe ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN / ( ( ( ( Max( ( FirstVNF_Mem_Server + PN ),( ACS + FirstVNF_RAM_Server ) ) * BR ) * ( BR - BR ) ) / FirstVNF_CPU ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,Const ) ,ARS ) )", "choosing": "Min( ( ( CS / MUC ) * ( RMSe / CS ) ) ,( ( ( RMSe + CS ) + CS ) * ( Min( CS ,MLU ) * ( Max( ( Max( Min( RMSe ,MLU ),MUR ) + RMSe ),Max( Max( RRSe,MUM ),CS ) ) - MUC ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.323273836106415}, {"determining": "( Min( Min( PN ,Max( ( ( FirstVNF_Mem - Min( ARS ,RRS ) ) / ACS ),FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( ( ARS - Min( MRS ,Const ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - Max( MUM,( MUM + CS ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( ( MLU - MLU ) / ( DS * RMSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.19465945528801826}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "( Min( ( Const * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - ( Max( ( Min( MDR ,( ( AMS * Const ) * ARS ) ) * FirstVNF_RAM ),Max( DDR,( AMS - ( CRS / RRS ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( Min( MUC ,Min( ( DS + MUC ) ,Max( RCSe,CS ) ) ) + ( ( RMSe / RRSe ) - ( DS - RMSe ) ) ) - MLU ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + MUR ) )", "obj1": 0.6265306122448979, "obj2": 0.24327386646922827}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6530612244897959, "obj2": 0.22035155653502206}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08395580397923846}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5117837750292131}, {"determining": "( ( FirstVNF_RAM_Server / ( Min( ( BR * RRS ) ,( ( ARS - ( Const - FirstVNF_Mem ) ) * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC - RMSe ) ) ) + ( CS + DS ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5, "obj2": 0.3496551056502737}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ACS * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * Max( ( DDR - FirstVNF_CPU ),FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RRSe / ( MUC + ( ( Max( ( MUM * MUM ),MUC ) / RCSe ) * ( Min( CS ,DS ) / ( MLU / ( RCSe - RMSe ) ) ) ) ) ) - ( MUC + ( DS / ( ( ( RCSe * Min( RCSe ,CS ) ) * CS ) - RRSe ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.38032210271741373}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( ( PN + FirstVNF_CPU_Server ) / ACS ) ),FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - PN ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU_Server * PN ) * ARS ) ) ),( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( RMSe - Min( MLU ,( Max( DS,DS ) * ( ( MUM * MLU ) + RMSe ) ) ) ) / RMSe ),( Min( CS ,Min( Min( RRSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03542237253724984}, {"determining": "( Min( Min( Max( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ),FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( ACS * ACS ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4142857142857143, "obj2": 0.44870462118033383}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ACS ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + Min( Max( MUM,RRSe ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( ARS / ARS ) - ACS ) ,( CRS - MDR ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RRSe * DS ) + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RCSe * RRSe ) + Min( Max( DS,MUM ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.3824728790160048}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.41836734693877553, "obj2": 0.426641141134971}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.22866170584818055}, {"determining": "( ( Max( FirstVNF_RAM,RRS ) * ( ARS * FirstVNF_Mem ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "Min( ( MUR + ( Max( Max( ( RMSe / ( RRSe + RMSe ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MLU,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.06511464475760945}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUC ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.5956489071721272}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6332534066305469}, {"determining": "( ( BR + MDR ) * ( AMS * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8051986863393062}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( MUR - ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( FirstVNF_CPU_Server ,BR ) * ( ACS - DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUM - MLU ) - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe * Max( Min( CS ,RCSe ),RMSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6726920754243988}, {"determining": "( ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUR ,( Max( Max( Max( RMSe,Max( MUM,( MUC - RMSe ) ) ),( MUM + ( ( MUM - MLU ) - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8285714285714286, "obj2": 0.07300618776164337}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ACS - ( CRS * Min( CRS ,PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( Min( MUR ,MUM ) * ( CS * ( Max( MUC,( ( Max( MLU,MUC ) * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2612244897959184, "obj2": 0.6437818699872799}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / Min( ( ( ( FirstVNF_RAM - Max( PN,AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU / MUM ) * CS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.49183673469387756, "obj2": 0.36416144192614525}, {"determining": "( ( ( MDR + ( ( ( DDR - ( ( PN - MDR ) * DDR ) ) - ARS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) + ( Const - RRS ) ) * ( FirstVNF_Mem_Server * ( PN - MDR ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( MLU - RMSe ) ) ) ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( MLU * MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.773469387755102, "obj2": 0.10142092203060611}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RCSe / RCSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4, "obj2": 0.4505088492407047}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( FirstVNF_CPU_Server * ( ACS - ACS ) ) )", "choosing": "( Min( ( ( Max( CS,( CS / RCSe ) ) - CS ) - RRSe ) ,MUC ) * ( ( Min( ( MUR + RRSe ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS / RMSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8278689154006856}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( AMS * PN ),AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6175170176995521}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,MUC ) + ( ( DS * RMSe ) / ( MLU + MUM ) ) ) + ( ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) + ( ( ( Max( RCSe,( RCSe / MUR ) ) - DS ) + RMSe ) + ( RMSe / DS ) ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8939809511164567}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU / PN ) * ( AMS + ARS ) ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,( MUM - MUC ) ),( ( CS - MUC ) + MUM ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( ( RMSe + Max( CS,CS ) ) / MUC ) ) )", "obj1": 0.5877551020408164, "obj2": 0.2740708879124409}, {"determining": "( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ( Max( ( DDR * ( ( PN - ( BR * Const ) ) * ( FirstVNF_CPU_Server * ( ACS - AMS ) ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Min( Min( AMS ,AMS ) ,ACS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ACS ) ) )", "choosing": "( ( MUC - RRSe ) * ( Max( Max( MUC,( RRSe / ( RRSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8241253675077242}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - ( FirstVNF_CPU_Server * RRS ) ) ) * ( ( Const * ( FirstVNF_Mem + RRS ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( Max( MUM,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * ( RRSe + RMSe ) ) + Min( Max( MUM,DS ) ,Min( MUC ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.4956594083523935}, {"determining": "( ( ( ( FirstVNF_CPU * ( ARS + Const ) ) / ( Min( MRS ,CRS ) * Const ) ) + RRS ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( Min( Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ,( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUM - MLU ) - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7877551020408163, "obj2": 0.09317656984444743}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5649024651957179}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( ( Max( RMSe,Max( MUC,MUM ) ) - CS ) + RMSe ) - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + RCSe ) )", "obj1": 0.8755102040816326, "obj2": 0.05131019760490473}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Min( ( RRS + AMS ) ,( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( Min( FirstVNF_Mem ,CRS ) - BR ) )", "choosing": "Min( ( MUR * ( Max( ( Max( RMSe,( MLU + RMSe ) ) * RMSe ),MUM ) * RMSe ) ) ,( ( Max( ( CS * MLU ),( MUC / CS ) ) - MUR ) - Max( ( Min( MLU ,( Max( CS,Min( MUC ,RRSe ) ) + RMSe ) ) / DS ),( ( ( CS * MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5294624953130171}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * MDR ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9469387755102041, "obj2": 0.023557442638190467}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8741075230595854}, {"determining": "( ( PN - ( Max( FirstVNF_RAM_Server,( Max( Min( MDR ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( BR ,ARS ) ) * ( MDR * ( ( FirstVNF_CPU * PN ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( FirstVNF_CPU_Server + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Min( RMSe ,MUM ) ,MUM ) ) ) - MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS + ( Min( Max( MUR,RMSe ) ,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3816326530612245, "obj2": 0.4745442999063138}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ( ARS - ACS ) - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,Min( ( RMSe - MUR ) ,( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUM ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( ( ACS * FirstVNF_Mem ) * BR ) + FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( ( ( DS - ( MUC - DS ) ) * MLU ) + MUC ),CS ) + RCSe ) ) ,( ( RMSe - DS ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ACS ) ,( CRS - Max( FirstVNF_Mem,( Max( FirstVNF_Mem,AMS ) * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8167004912159782}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.26737133097824084}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.4620528197658089}, {"determining": "( ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,( MUR - DS ) ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / Max( RRSe,RCSe ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( DS / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.2510204081632653, "obj2": 0.6526104521837639}, {"determining": "( ( ARS - ( DDR * AMS ) ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Max( DS,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( MUR - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.2, "obj2": 0.7246939261610693}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) ) * Min( CRS ,AMS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( RRSe * ( RCSe + ( ( MUM / Max( RCSe,MUC ) ) / RRSe ) ) ) * RMSe ) ) * ( ( DS * RMSe ) / Max( Max( MUC,( ( RMSe + MLU ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6805481207616312}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUC ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.29183673469387755, "obj2": 0.5786985398412605}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8640723948682063}, {"determining": "( ( Max( MDR,MDR ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( Min( MRS ,AMS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( CS * ( DS / CS ) ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.07618428662217709}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( MLU - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1653061224489796, "obj2": 0.7886014836769534}, {"determining": "( ( ( MDR + ( ( ARS - ARS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) + ( Const - RRS ) ) * ( FirstVNF_Mem_Server * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) * ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( MLU * MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.736734693877551, "obj2": 0.12408081751417636}, {"determining": "( ( ( ( FirstVNF_CPU * ( ARS + Const ) ) / ( Min( MRS ,CRS ) * Const ) ) + RRS ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( Min( Max( Max( MUC,( RRSe / ( RMSe + ( DS / MUM ) ) ) ),MUC ) ,( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUM - MLU ) - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7877551020408163, "obj2": 0.09317656984444743}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) ) * Min( CRS ,AMS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( RRSe * ( RCSe + ( ( MUM / Max( RCSe,MUC ) ) / RRSe ) ) ) * RMSe ) ) * ( ( DS * RMSe ) / Max( Max( MUC,( ( RMSe + MLU ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8469487266222246}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( MUC * RMSe ) * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.35703044705911124}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUM - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / Min( ( DDR + ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( RMSe,( MUC / Min( MUR ,DS ) ) ) ),( ( Min( ( Max( DS,Max( MUC,CS ) ) - ( MUC + ( RMSe / MUC ) ) ) ,DS ) - RRSe ) + ( CS * ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7077519987798294}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( MDR - CRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) ) ) ) * ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RMSe,Max( MUM,MUC ) ) + ( ( Min( Max( MUM,DS ) ,( MUC * Min( RMSe ,MLU ) ) ) - CS ) + ( RMSe + ( MLU - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7729718368752256}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - ( FirstVNF_Mem_Server * ( ( Max( CRS,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( CRS - FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Min( RMSe ,( ( RCSe / ( RMSe * Min( MLU ,Max( MLU,RMSe ) ) ) ) / RMSe ) ) ,( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU + MUR ) ) * RMSe ),MUM ) + RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( MUC * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2979591836734694, "obj2": 0.574603089505602}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.4793449423173651}, {"determining": "( PN * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( Max( ( ( RRSe + ( MUM * CS ) ) - MLU ),Max( Min( MUR ,MLU ),RRSe ) ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( ( Max( RCSe,DS ) / MUR ) ,MUR ) ) - RCSe ) ) )", "obj1": 0.7448979591836735, "obj2": 0.119524969546773}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.5755102040816327, "obj2": 0.29308041575101396}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) * ARS ) * ( FirstVNF_RAM_Server / Min( MDR ,Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "( ( Max( RMSe,Max( MUC,MUM ) ) * ( ( CS - RRSe ) + ( CS + RCSe ) ) ) * Max( MUC,( ( MUC / Max( ( CS / ( RCSe - RCSe ) ),MUR ) ) * MUC ) ) )", "obj1": 0.9061224489795918, "obj2": 0.04327103984241692}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1673469387755102, "obj2": 0.7800749566200843}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( ( PN - DDR ) / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5712752044120705}, {"determining": "( ( PN - ( Max( ( ( MDR / ( ( PN * FirstVNF_CPU ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( FirstVNF_Mem * Const ) * Min( AMS ,Const ) ) ) ) ) ) ) + Min( ( MDR + ( ACS - AMS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * DS ),Min( ( MLU / RMSe ) ,( ( ( CS + ( MLU - RRSe ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( RMSe / DS ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.009590576311858544}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7546381278208657}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08979591836734693, "obj2": 0.8889187085770305}, {"determining": "( ( AMS + RRS ) * ( MDR + BR ) )", "choosing": "Min( ( MUR + Min( Max( ( MUR + DS ),MUM ) ,RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.30612244897959184, "obj2": 0.5721221247805623}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( ( RMSe / ( RRSe + RMSe ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MLU,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6959183673469388, "obj2": 0.17948491628760746}, {"determining": "( Min( FirstVNF_CPU ,DDR ) * ( MRS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( CS * RRSe ) ) ),( MUM + ( CS - MUC ) ) ),MUM ) - RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.4793449423173651}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUC ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.4918873027477478}, {"determining": "( ( FirstVNF_RAM_Server / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.19387755102040816, "obj2": 0.7351340322464106}, {"determining": "( ( FirstVNF_Mem_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8592488119187905}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_CPU_Server - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( Max( ARS,FirstVNF_Mem ) - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( RCSe,MUC ) ),( ( ( ( ( DS - Min( MUM ,MUC ) ) + MUR ) * Max( RCSe,Min( RMSe ,CS ) ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8834752546096549}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( ACS - ( ( MDR * Const ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( Max( ( Max( MUC,MUR ) + MLU ),MUR ) / DS ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( Max( MUC,RRSe ) * Max( CS,MUR ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.38979591836734695, "obj2": 0.45590852532517423}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7448300450978572}, {"determining": "( ( ( MRS + ( Const * ACS ) ) / FirstVNF_RAM_Server ) * Min( ( ACS - Min( ACS ,MDR ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( Max( RMSe,MUC ),MUM ) ) / ( MUM + ( Max( MUM,RRSe ) - MUC ) ) ) * ( RRSe / ( MUC * RMSe ) ) )", "obj1": 0.19387755102040816, "obj2": 0.7351340322464106}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7142857142857143, "obj2": 0.1711065667568021}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7210931555302557}, {"determining": "( Min( Min( Const ,RRS ) ,Min( FirstVNF_CPU_Server ,MRS ) ) + ( PN + Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RMSe / RCSe ) + ( CS - MUC ) ),Min( CS ,DS ) ) * Max( ( RCSe - ( RRSe - DS ) ),MLU ) )", "obj1": 0.5755102040816327, "obj2": 0.29308041575101396}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( ( ( RRS - DDR ) / Min( FirstVNF_Mem_Server ,ACS ) ) * ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,RCSe ) * MLU ) + ( ( ( MLU - RMSe ) + ( RMSe / DS ) ) + ( Max( RMSe,MUR ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6837316863179841}], "17": [{"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ARS - Min( MRS ,Const ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ),( ( CS - RRSe ) + ( RMSe + ( MLU - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) ) * ( Min( AMS ,FirstVNF_CPU_Server ) * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUC ) + ( ( DS * RMSe ) / ( MLU + MUM ) ) ) + ( ( RCSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN / ( ( ( ( Max( ( FirstVNF_Mem_Server + PN ),( ACS + FirstVNF_RAM_Server ) ) * BR ) * ( BR - BR ) ) / FirstVNF_CPU ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,Const ) ,ARS ) )", "choosing": "Min( ( ( CS / MUC ) * ( RMSe / CS ) ) ,( ( ( RMSe + CS ) + CS ) * ( Min( CS ,MLU ) * ( Max( ( Max( Min( RMSe ,MLU ),MUR ) + RMSe ),Max( Max( RRSe,MUM ),CS ) ) - MUC ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.323273836106415}, {"determining": "( Min( Min( PN ,Max( ( ( FirstVNF_Mem - Min( ARS ,RRS ) ) / ACS ),FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( ( ARS - Min( MRS ,Const ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - Max( MUM,( MUM + CS ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( ( MLU - MLU ) / ( DS * RMSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.19465945528801826}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6530612244897959, "obj2": 0.22035155653502206}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( ( PN + FirstVNF_CPU_Server ) / ACS ) ),FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - PN ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU_Server * PN ) * ARS ) ) ),( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( RMSe - Min( MLU ,( Max( DS,DS ) * ( ( MUM * MLU ) + RMSe ) ) ) ) / RMSe ),( Min( CS ,Min( Min( RRSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03542237253724984}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( ( AMS * ACS ) - ( PN + AMS ) )", "choosing": "Min( ( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) ) ,( ( MUR - RMSe ) - ( CS * MUR ) ) )", "obj1": 0.6204081632653061, "obj2": 0.26644140467698785}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ACS - ( CRS * Min( CRS ,PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( Min( MUR ,MUM ) * ( CS * ( Max( MUC,( ( Max( MLU,MUC ) * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( Min( ( Const * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - ( Max( ( Min( MDR ,( ( AMS * Const ) * ARS ) ) * FirstVNF_RAM ),Max( DDR,( AMS - ( CRS / RRS ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( Min( MUC ,Min( ( DS + MUC ) ,Max( RCSe,CS ) ) ) + ( ( RMSe / RRSe ) - ( DS - RMSe ) ) ) - MLU ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + MUR ) )", "obj1": 0.6265306122448979, "obj2": 0.24327386646922827}, {"determining": "( ( ( MDR + ( ( ARS - ARS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) + ( Const - RRS ) ) * ( FirstVNF_Mem_Server * ( PN - MDR ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7653061224489796, "obj2": 0.10493741115094646}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) * ARS ) * ( FirstVNF_RAM_Server / Min( MDR ,Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "( ( Max( RMSe,Max( MUC,MUM ) ) * ( ( CS - RRSe ) + ( CS + RCSe ) ) ) * Max( MUC,( ( MUC / Max( ( CS / ( RCSe - RCSe ) ),MUR ) ) * MUC ) ) )", "obj1": 0.9061224489795918, "obj2": 0.04327103984241692}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( ( ( Max( Max( RCSe,RMSe ),( MUC / RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( CS + DS ) ) ) * DS ) - ( ( RCSe / ( RCSe + ( ( RMSe / MLU ) - MUM ) ) ) + ( ( MUR / Min( MLU ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.4775510204081633, "obj2": 0.37401060261821023}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ACS ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + Min( Max( MUM,RRSe ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( PN * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( Max( ( ( RRSe + ( MUM * CS ) ) - MLU ),Max( Min( MUR ,MLU ),RRSe ) ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( ( Max( RCSe,DS ) / MUR ) ,MUR ) ) - RCSe ) ) )", "obj1": 0.7448979591836735, "obj2": 0.119524969546773}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + MDR ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( CS - MUC ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7496535870450259}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU * PN ) * ARS ) ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.9571428571428572, "obj2": 0.020979755945684842}, {"determining": "( ( Max( FirstVNF_RAM,RRS ) * ( ARS * FirstVNF_Mem ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "Min( ( MUR + ( Max( Max( ( RMSe / ( RRSe + RMSe ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MLU,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.06511464475760945}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6332534066305469}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( ( ( MUM - MUM ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1816326530612245, "obj2": 0.7650033706288508}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_RAM_Server / Min( ( ACS - ( Min( PN ,Const ) * PN ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Max( BR,FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( ( ( Min( DS ,DS ) * RRSe ) * DS ) - ( ( Max( Min( ( Max( MUC,RRSe ) * Max( CS,MUR ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( RMSe * MUR ) ) / ( CS + ( Min( MLU ,RMSe ) / DS ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.34890945356750286}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / Min( ( ( ( FirstVNF_RAM - Max( PN,AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU / MUM ) * CS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.49183673469387756, "obj2": 0.36416144192614525}, {"determining": "( ( BR + MDR ) * ( AMS * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8051986863393062}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - MDR ) ) ) * ( MDR * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( RMSe + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RCSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.41020408163265304, "obj2": 0.4436143633145007}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RCSe / RCSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4, "obj2": 0.4505088492407047}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2612244897959184, "obj2": 0.6437818699872799}, {"determining": "( ( PN - ( Max( FirstVNF_RAM_Server,( Max( Min( MDR ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( BR ,ARS ) ) * ( MDR * ( ( FirstVNF_CPU * PN ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( FirstVNF_CPU_Server + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Min( RMSe ,MUM ) ,MUM ) ) ) - MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS + ( Min( Max( MUR,RMSe ) ,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3816326530612245, "obj2": 0.4745442999063138}, {"determining": "( ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / Min( ( DDR + ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( RMSe,( MUC / Min( MUR ,DS ) ) ) ),( ( Min( ( Max( DS,Max( MUC,CS ) ) - ( MUC + ( RMSe / MUC ) ) ) ,DS ) - RRSe ) + ( CS * ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7077519987798294}, {"determining": "( ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,( MUR - DS ) ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / Max( RRSe,RCSe ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( DS / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( Max( MDR,MDR ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( Min( MRS ,AMS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8346938775510204, "obj2": 0.0712832037069982}, {"determining": "( ( PN - ( Max( ( ( MDR / ( ( PN * FirstVNF_CPU ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( FirstVNF_Mem * Const ) * Min( AMS ,Const ) ) ) ) ) ) ) + Min( ( MDR + ( ACS - AMS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * DS ),Min( ( MLU / RMSe ) ,( ( ( CS + ( MLU - RRSe ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( RMSe / DS ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.009590576311858544}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU / PN ) * ( AMS + ARS ) ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,( MUM - MUC ) ),( ( CS - MUC ) + MUM ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( ( RMSe + Max( CS,CS ) ) / MUC ) ) )", "obj1": 0.5877551020408164, "obj2": 0.2740708879124409}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_Mem * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RCSe / RCSe ) + ( CS + DS ) ),( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6346938775510204, "obj2": 0.23658057175161}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * MDR ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9469387755102041, "obj2": 0.023557442638190467}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Min( ( RRS + AMS ) ,( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( Min( FirstVNF_Mem ,CRS ) - BR ) )", "choosing": "Min( ( MUR * ( Max( ( Max( RMSe,( MLU + RMSe ) ) * RMSe ),MUM ) * RMSe ) ) ,( ( Max( ( CS * MLU ),( MUC / CS ) ) - MUR ) - Max( ( Min( MLU ,( Max( CS,Min( MUC ,RRSe ) ) + RMSe ) ) / DS ),( ( ( CS * MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5294624953130171}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8741075230595854}, {"determining": "( ( Const / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * FirstVNF_CPU_Server ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * Max( RRS,Min( PN ,MRS ) ) )", "choosing": "( ( ( MUM * MLU ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,RMSe ) ),RRSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.42448979591836733, "obj2": 0.422718137557792}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ( ARS - ACS ) - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,Min( ( RMSe - MUR ) ,( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUM ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.26737133097824084}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * BR ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( ( ACS - ( Max( AMS,CRS ) + ( ( MRS + ( BR * Const ) ) - BR ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( CS ,Max( RRSe,MLU ) ) * ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ) - ( ( Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( Min( FirstVNF_Mem_Server ,Const ) * DDR ) ) ,( CRS - MDR ) ) ) * ( ( ( RRS - DDR ) / Min( FirstVNF_Mem_Server ,ACS ) ) * ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,RCSe ) * MLU ) + ( ( ( MLU - RMSe ) + ( RMSe / DS ) ) + ( Max( RMSe,MUR ) * Max( MUC,RRSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6837316863179841}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) ) * Min( CRS ,AMS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( RRSe * ( RCSe + ( ( MUM / Max( RCSe,MUC ) ) / RRSe ) ) ) * RMSe ) ) * ( ( DS * RMSe ) / Max( Max( MUC,( ( RMSe + MLU ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6805481207616312}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8640723948682063}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_CPU_Server - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( Max( ARS,FirstVNF_Mem ) - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( RCSe,MUC ) ),( ( ( ( ( DS - Min( MUM ,MUC ) ) + MUR ) * Max( RCSe,Min( RMSe ,CS ) ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8834752546096549}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ACS ) - ( ( ( CRS / MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5093836283860486}, {"determining": "( Min( Min( ( DDR * Min( MDR ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( DDR * PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( Max( RCSe,RMSe ),( MUC / RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( CS + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0026627066234697658}, {"determining": "( ( ARS - ( DDR * AMS ) ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Max( DS,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( MUR - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.2, "obj2": 0.7246939261610693}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5649024651957179}, {"determining": "( ( PN - ( Max( ( ( MDR / ( ( PN * FirstVNF_CPU ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( ( FirstVNF_Mem * Const ) * Min( AMS ,Const ) ) ) ) ) ) ) + Min( ( MDR + ( ACS - AMS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * DS ),Min( ( MLU / RMSe ) ,( ( ( CS + ( MLU - RRSe ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( RMSe / DS ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.009590576311858544}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.49503323841080016}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS / CS ) ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.17791843364533605}, {"determining": "( ( ACS * Const ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( Min( MUR ,( Max( MUR,MUC ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3673469387755102, "obj2": 0.48896159672329564}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8351762405782802}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7122448979591837, "obj2": 0.17221638536064948}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.22866170584818055}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( FirstVNF_CPU_Server ,BR ) * ( ACS - DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUM - MLU ) - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe * Max( Min( CS ,RCSe ),RMSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6726920754243988}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( MUC * RMSe ) * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.35703044705911124}, {"determining": "( ( ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ,( CRS - MDR ) ) ) * ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - RMSe ) ,( ( RMSe - MUR ) - ( CS * Min( ( MUC - RMSe ) ,Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) ) ) ) )", "obj1": 0.46530612244897956, "obj2": 0.38054627295625}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * ( RMSe * RRSe ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5117837750292131}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7191113826014596}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08979591836734693, "obj2": 0.8889187085770305}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM * Const ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) )", "choosing": "( ( Max( RMSe,Max( ( CS / ( DS * Max( MUC,( MLU + MUR ) ) ) ),Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.22603257472989963}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + ( RCSe + MUR ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8949651041999068}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1673469387755102, "obj2": 0.7800749566200843}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( ( ACS * FirstVNF_Mem ) * BR ) + FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( ( ( DS - ( MUC - DS ) ) * MLU ) + MUC ),CS ) + RCSe ) ) ,( ( RMSe - DS ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.5755102040816327, "obj2": 0.29308041575101396}, {"determining": "( Max( FirstVNF_RAM,RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8278689154006856}, {"determining": "( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ( Max( ( DDR * ( ( PN - ( BR * Const ) ) * ( FirstVNF_CPU_Server * ( ACS - AMS ) ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Min( Min( AMS ,AMS ) ,ACS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ACS ) ) )", "choosing": "( ( MUC - RRSe ) * ( Max( Max( MUC,( RRSe / ( RRSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8241253675077242}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - Min( Max( MUM,DS ) ,Min( MUC ,RCSe ) ) ) + ( RMSe + ( MLU - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.16938775510204082, "obj2": 0.7729718368752256}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( MUR - ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( ( ( PN - DDR ) / ( MRS + ( Const * ACS ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) * ( RRSe / ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5712752044120705}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( AMS * PN ),AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.6175170176995521}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( ( Max( RMSe,Max( MUC,MUM ) ) - CS ) + RMSe ) - MUR ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + RCSe ) )", "obj1": 0.8755102040816326, "obj2": 0.05131019760490473}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( CS + RCSe ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08661086090621835}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.4793449423173651}, {"determining": "( ( Max( MDR,MDR ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( Min( MRS ,AMS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( CS * ( DS / CS ) ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.07618428662217709}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( ( ( MDR / ( ACS * ARS ) ) * ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( Const - ( RRS - DDR ) ) ) ) ) ) - PN ) )", "choosing": "( ( ( ( CS / RCSe ) - MLU ) + ( ( RRSe + DS ) - ( ( ( Max( RMSe,Max( MUC,MUM ) ) - CS ) + RMSe ) - MUR ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) ) )", "obj1": 0.8795918367346939, "obj2": 0.048954371953063326}, {"determining": "( ( ( PN - DDR ) * ( ( BR - ( Max( ( MDR * ( ACS + DDR ) ),( Const + PN ) ) / FirstVNF_RAM_Server ) ) * ACS ) ) * ( Min( ( FirstVNF_CPU_Server + MDR ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( Min( MUR ,( DS * MLU ) ) - DS ) / CS ) * ( Max( Max( MUC,( RRSe / Min( RMSe ,RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.85748338817181}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08395580397923846}, {"determining": "( ( FirstVNF_Mem_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8592488119187905}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7142857142857143, "obj2": 0.1711065667568021}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_RAM_Server * PN ) * ARS ) ) ),( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC - RMSe ) ) ) + ( CS + DS ) ) ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8484664025066811}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ),( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - Min( Max( MUM,DS ) ,Min( MUC ,RCSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.5676752178790903}], "18": [{"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( ( ARS * DDR ) - Min( Max( ( BR * RRS ),FirstVNF_CPU_Server ) ,MDR ) ) + Max( Max( Min( ACS ,DDR ),PN ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM * Const ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) )", "choosing": "( ( Max( RMSe,DS ) / RMSe ) * ( RRSe / ( DS * ( MUM / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ARS - Min( MRS ,Const ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ),( ( CS - RRSe ) + ( RMSe + ( MLU - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN / ( ( ( ( Max( ( FirstVNF_Mem_Server + PN ),( ACS + FirstVNF_RAM_Server ) ) * BR ) * ( BR - BR ) ) / FirstVNF_CPU ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,Const ) ,ARS ) )", "choosing": "Min( ( ( CS / MUC ) * ( RMSe / CS ) ) ,( ( ( RMSe + CS ) + CS ) * ( Min( CS ,MLU ) * ( Max( ( Max( Min( RMSe ,MLU ),MUR ) + RMSe ),Max( Max( RRSe,MUM ),CS ) ) - MUC ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.323273836106415}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ACS ) - ( ( ( CRS / MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3081632653061224, "obj2": 0.5692445912852454}, {"determining": "( ( ( MDR + ( ( ARS - ARS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) + ( Const - RRS ) ) * ( FirstVNF_Mem_Server * ( PN - MDR ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7653061224489796, "obj2": 0.10493741115094646}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_RAM_Server / Min( ( ACS - ( Min( PN ,Const ) * PN ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Max( BR,FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( ( ( Min( DS ,DS ) * RRSe ) * DS ) - ( ( Max( Min( ( Max( MUC,RRSe ) * Max( CS,MUR ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( RMSe * MUR ) ) / ( CS + ( Min( MLU ,RMSe ) / DS ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.34890945356750286}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6612244897959184, "obj2": 0.20257213624954368}, {"determining": "( PN + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( Min( RMSe ,RCSe ) / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.00836765668276097}, {"determining": "( PN * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( Max( ( ( RRSe + ( MUM * CS ) ) - MLU ),Max( Min( MUR ,MLU ),RRSe ) ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( ( Max( RCSe,DS ) / MUR ) ,MUR ) ) - RCSe ) ) )", "obj1": 0.7448979591836735, "obj2": 0.119524969546773}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( ( PN + FirstVNF_CPU_Server ) / ACS ) ),FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - PN ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU_Server * PN ) * ARS ) ) ),( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( RMSe - Min( MLU ,( Max( DS,DS ) * ( ( MUM * MLU ) + RMSe ) ) ) ) / RMSe ),( Min( CS ,Min( Min( RRSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03542237253724984}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( RRS - ( Min( DDR ,MRS ) - ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS / CS ) * CS ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( ( MUR / MUR ) + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7775510204081633, "obj2": 0.09852908329046757}, {"determining": "( ( BR - ( AMS * ACS ) ) * ( FirstVNF_Mem_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MUC / RMSe ),RRSe ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.39387755102040817, "obj2": 0.44619118189546975}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( BR + MDR ) * ( AMS * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.8051986863393062}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.5755102040816327, "obj2": 0.29308041575101396}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2612244897959184, "obj2": 0.6437818699872799}, {"determining": "( ( Max( MDR,MDR ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( Min( MRS ,AMS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( CS * ( DS / CS ) ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.07618428662217709}, {"determining": "( ( Max( MDR,MDR ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( Min( MRS ,AMS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8346938775510204, "obj2": 0.0712832037069982}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - MDR ) ) ) * ( MDR * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( RMSe + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RCSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.41020408163265304, "obj2": 0.4436143633145007}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6332534066305469}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / Min( ( ( ( FirstVNF_RAM - Max( PN,AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU / MUM ) * CS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.49183673469387756, "obj2": 0.36416144192614525}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Min( ( RRS + AMS ) ,( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( Min( FirstVNF_Mem ,CRS ) - BR ) )", "choosing": "Min( ( MUR * ( Max( ( Max( RMSe,( MLU + RMSe ) ) * RMSe ),MUM ) * RMSe ) ) ,( ( Max( ( CS * MLU ),( MUC / CS ) ) - MUR ) - Max( ( Min( MLU ,( Max( CS,Min( MUC ,RRSe ) ) + RMSe ) ) / DS ),( ( ( CS * MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5294624953130171}, {"determining": "( Min( ( Const * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - ( Max( ( Min( MDR ,( ( AMS * Const ) * ARS ) ) * FirstVNF_RAM ),Max( DDR,( AMS - ( CRS / RRS ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( Min( MUC ,Min( ( DS + MUC ) ,Max( RCSe,CS ) ) ) + ( ( RMSe / RRSe ) - ( DS - RMSe ) ) ) - MLU ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + MUR ) )", "obj1": 0.6265306122448979, "obj2": 0.24327386646922827}, {"determining": "( ( Max( FirstVNF_RAM,RRS ) * ( ARS * FirstVNF_Mem ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "Min( ( MUR + ( Max( Max( ( RMSe / ( RRSe + RMSe ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MLU,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.06511464475760945}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) )", "obj1": 0.7938775510204081, "obj2": 0.09149332998917402}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.26737133097824084}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + MDR ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( CS - MUC ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7496535870450259}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( ACS * Const ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( Min( MUR ,( Max( MUR,MUC ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3673469387755102, "obj2": 0.48896159672329564}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( AMS * PN ) - ( Max( ACS,MDR ) - PN ) )", "choosing": "( Max( Max( RMSe,( ( ( RCSe / ( RMSe * ( DS * MUM ) ) ) - CS ) * ( ( RMSe / MUM ) / MUC ) ) ),( ( MUM - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24700329178337824}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( FirstVNF_CPU_Server ,BR ) * ( ACS - DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( MUM - MLU ) - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe * Max( Min( CS ,RCSe ),RMSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6726920754243988}, {"determining": "( Min( Min( PN ,Max( ( ( FirstVNF_Mem - Min( ARS ,RRS ) ) / ACS ),FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( ( ARS - Min( MRS ,Const ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - Max( MUM,( MUM + CS ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( ( MLU - MLU ) / ( DS * RMSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.19465945528801826}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5836734693877551, "obj2": 0.2776963562650141}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ACS - ( CRS * Min( CRS ,PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( Min( MUR ,MUM ) * ( CS * ( Max( MUC,( ( Max( MLU,MUC ) * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( PN - ( Max( FirstVNF_RAM_Server,( Max( Min( MDR ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( BR ,ARS ) ) * ( MDR * ( ( FirstVNF_CPU * PN ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( FirstVNF_CPU_Server + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Min( RMSe ,MUM ) ,MUM ) ) ) - MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS + ( Min( Max( MUR,RMSe ) ,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3816326530612245, "obj2": 0.4745442999063138}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( RRS - DDR ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.9408163265306122, "obj2": 0.029160881343903145}, {"determining": "( ( ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ,( CRS - MDR ) ) ) * ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - RMSe ) ,( ( RMSe - MUR ) - ( CS * Min( ( MUC - RMSe ) ,Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) ) ) ) )", "obj1": 0.46530612244897956, "obj2": 0.38054627295625}, {"determining": "( ( ( ACS - FirstVNF_CPU_Server ) * ( ARS - FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( Min( FirstVNF_CPU_Server ,BR ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8203370116624148}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.373469387755102, "obj2": 0.4793449423173651}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2520646218581975}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ACS ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + Min( Max( MUM,RRSe ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.4489795918367347, "obj2": 0.3957413287542857}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,( MUR - DS ) ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / Max( RRSe,RCSe ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( DS / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.49503323841080016}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( MUC / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( Min( Min( Const ,ARS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.27308659065551993}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) ) * Min( CRS ,AMS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( RRSe * ( RCSe + ( ( MUM / Max( RCSe,MUC ) ) / RRSe ) ) ) * RMSe ) ) * ( ( DS * RMSe ) / Max( Max( MUC,( ( RMSe + MLU ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6805481207616312}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22448979591836735, "obj2": 0.6805525249265219}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8217553277783368}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( MUM,DS ) ,MUM ) - ( ( RCSe / ( ( ( CS / ( MLU / MUM ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( MUC * RMSe ) * CS ),( MUC / CS ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.35703044705911124}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( MUR + ( CS - MUC ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7641301346497479}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_CPU_Server - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( Max( ARS,FirstVNF_Mem ) - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( RCSe,MUC ) ),( ( ( ( ( DS - Min( MUM ,MUC ) ) + MUR ) * Max( RCSe,Min( RMSe ,CS ) ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8834752546096549}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ACS ) - ( ( ( CRS / MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5093836283860486}, {"determining": "( ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / Min( ( DDR + ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( RMSe,( MUC / Min( MUR ,DS ) ) ) ),( ( Min( ( Max( DS,Max( MUC,CS ) ) - ( MUC + ( RMSe / MUC ) ) ) ,DS ) - RRSe ) + ( CS * ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7077519987798294}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) * ARS ) * ( FirstVNF_RAM_Server / Min( MDR ,Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "( ( Max( RMSe,Max( MUC,MUM ) ) * ( ( CS - RRSe ) + ( CS + RCSe ) ) ) * Max( MUC,( ( MUC / Max( ( CS / ( RCSe - RCSe ) ),MUR ) ) * MUC ) ) )", "obj1": 0.9061224489795918, "obj2": 0.04327103984241692}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( ( ACS * FirstVNF_Mem ) * BR ) + FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( ( ( DS - ( MUC - DS ) ) * MLU ) + MUC ),CS ) + RCSe ) ) ,( ( RMSe - DS ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_RAM_Server / ( ( AMS * PN ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3224489795918367, "obj2": 0.5649024651957179}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_Mem * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RCSe / RCSe ) + ( CS + DS ) ),( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6346938775510204, "obj2": 0.23658057175161}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( Min( Min( RMSe ,( ( Max( ( Min( MLU ,MLU ) + ( RCSe * MUM ) ),DS ) / RMSe ) / RMSe ) ) ,( MUR + ( Max( ( Max( ( MLU - RMSe ),( MLU + MUR ) ) * RMSe ),MUM ) + RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MLU - RMSe ) ) ) ) )", "obj1": 0.673469387755102, "obj2": 0.1977979748459657}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6530612244897959, "obj2": 0.22035155653502206}, {"determining": "( Min( Min( ( DDR * Min( MDR ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( Max( RCSe,RMSe ),( MUC / RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.7387755102040816, "obj2": 0.12483799625838238}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU * PN ) * ARS ) ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( BR - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / ( ( CS * DS ) - Max( Min( MUC ,RCSe ),DS ) ) ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.9571428571428572, "obj2": 0.020979755945684842}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( Max( RMSe,Max( MUM,CS ) ),( ( CS - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( ( MUC + Max( DS,DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.12244897959183673, "obj2": 0.8351762405782802}, {"determining": "( Max( FirstVNF_RAM,( ( FirstVNF_Mem - Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.1816326530612245, "obj2": 0.7597218651614143}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * ( RMSe * RRSe ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5117837750292131}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( CS + RCSe ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08661086090621835}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS / CS ) ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.17791843364533605}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8640723948682063}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU * PN ) * ARS ) ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.9571428571428572, "obj2": 0.020979755945684842}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * ( ( FirstVNF_CPU * PN ) * ARS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( ( Max( RMSe,Max( MUC,MUM ) ) - CS ) + RMSe ) - Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) ) )", "obj1": 0.8734693877551021, "obj2": 0.05174705015676617}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - Max( Max( FirstVNF_RAM_Server,( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) ),( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,Max( Max( BR,AMS ),BR ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( Min( RMSe ,RMSe ) * MUM ) )", "obj1": 0.7081632653061225, "obj2": 0.17320351821185057}, {"determining": "( ( BR / Const ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) * RMSe ) ) / RRSe ) + ( CS - ( ( ( ( MUC / RMSe ) / MLU ) / MLU ) + Max( ( CS / MUM ),( MUR + RCSe ) ) ) ) ) ) * ( ( DS * RMSe ) / Max( Max( RMSe,( ( RMSe + RMSe ) / ( MUM + ( CS - ( RCSe / MLU ) ) ) ) ),MUC ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8469487266222246}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( ARS - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.16122448979591836, "obj2": 0.7804299491662874}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ( ARS - ACS ) - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( DDR - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,Min( ( RMSe - MUR ) ,( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUM ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( RRS / ACS ) ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * MDR ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( CS - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04084284400341905}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.730516806184849}, {"determining": "( ( Const / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * FirstVNF_CPU_Server ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * Max( RRS,Min( PN ,MRS ) ) )", "choosing": "( ( ( MUM * MLU ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,RMSe ) ),RRSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.42448979591836733, "obj2": 0.422718137557792}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * BR ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( FirstVNF_RAM_Server,( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / ( RRSe / MUC ) ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( MUC * RMSe ) ) )", "obj1": 0.15510204081632653, "obj2": 0.784172967061549}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( MUR - ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8741075230595854}, {"determining": "( ( ( PN - DDR ) * ( ( BR - ( Max( ( MDR * ( ACS + DDR ) ),( Const + PN ) ) / FirstVNF_RAM_Server ) ) * ACS ) ) * ( Min( ( FirstVNF_CPU_Server + MDR ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( Min( MUR ,( DS * MLU ) ) - DS ) / CS ) * ( Max( Max( MUC,( RRSe / Min( RMSe ,RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.85748338817181}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08395580397923846}, {"determining": "( ( FirstVNF_Mem_Server - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( ( RRS + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8592488119187905}], "19": [{"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( Const + ( PN * CRS ) ),FirstVNF_CPU_Server ) - ACS ) - ACS ) - AMS ) ) * DDR )", "choosing": "Min( ( MUR + ( Max( Max( RCSe,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + ( ( RRSe - MLU ) + DS ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( ( ARS * DDR ) - Min( Max( ( BR * RRS ),FirstVNF_CPU_Server ) ,MDR ) ) + Max( Max( Min( ACS ,DDR ),PN ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM * Const ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) )", "choosing": "( ( Max( RMSe,DS ) / RMSe ) * ( RRSe / ( DS * ( MUM / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN / ( ( ( ( Max( ( FirstVNF_Mem_Server + PN ),( ACS + FirstVNF_RAM_Server ) ) * BR ) * ( BR - BR ) ) / FirstVNF_CPU ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,Const ) ,ARS ) )", "choosing": "Min( ( ( CS / MUC ) * ( RMSe / CS ) ) ,( ( ( RMSe + CS ) + CS ) * ( Min( CS ,MLU ) * ( Max( ( Max( Min( RMSe ,MLU ),MUR ) + RMSe ),Max( Max( RRSe,MUM ),CS ) ) - MUC ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.323273836106415}, {"determining": "( ( PN * ( BR + MRS ) ) + ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC / RMSe ),Max( RCSe,RMSe ) ) * DS ) - CS ) * DS ) - ( ( RRSe / RCSe ) + ( RCSe + DS ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,( DS / MUM ) ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3464890216872332}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / Min( ( ( ( FirstVNF_RAM - Max( PN,AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU / MUM ) * CS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.49183673469387756, "obj2": 0.36416144192614525}, {"determining": "( ( ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ,( CRS - MDR ) ) ) * ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - RMSe ) ,( ( RMSe - MUR ) - ( CS * Min( ( MUC - RMSe ) ,Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) ) ) ) )", "obj1": 0.46530612244897956, "obj2": 0.38054627295625}, {"determining": "( ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / Min( ( DDR + ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( RMSe,( MUC / Min( MUR ,DS ) ) ) ),( ( Min( ( Max( DS,Max( MUC,CS ) ) - ( MUC + ( RMSe / MUC ) ) ) ,DS ) - RRSe ) + ( CS * ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7077519987798294}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_RAM_Server / Min( ( ACS - ( Min( PN ,Const ) * PN ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Max( BR,FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( ( ( Min( DS ,DS ) * RRSe ) * DS ) - ( ( Max( Min( ( Max( MUC,RRSe ) * Max( CS,MUR ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( RMSe * MUR ) ) / ( CS + ( Min( MLU ,RMSe ) / DS ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.34890945356750286}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.730516806184849}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( ( Max( ARS,FirstVNF_RAM ) + RRS ) / ( ( ( ( Max( MRS,AMS ) - Max( ARS,( FirstVNF_CPU * PN ) ) ) - ACS ) - RRS ) - Min( PN ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( ( Max( ( MLU - RMSe ),( MLU + MUR ) ) * RMSe ) * ( RMSe * RRSe ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUR ,DS ) ) ) ) * ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5553455746994537}, {"determining": "( Max( MRS,AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( RRS - DDR ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.9408163265306122, "obj2": 0.029160881343903145}, {"determining": "( ( FirstVNF_RAM_Server - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( DS * RMSe ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8890216395996748}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,RCSe ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.26326530612244897, "obj2": 0.6332534066305469}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( Max( FirstVNF_RAM,RRS ) * ( ARS * FirstVNF_Mem ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "Min( ( MUR + ( Max( Max( ( RMSe / ( RRSe + RMSe ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MLU,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.06511464475760945}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) )", "obj1": 0.7938775510204081, "obj2": 0.09149332998917402}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( Min( PN ,DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( Min( DDR ,Min( Const ,( ARS * FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( DS - RMSe ) + ( CS - DS ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8174840382699056}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + MDR ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( CS - MUC ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7496535870450259}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) - MDR ) ) ) * ( MDR * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( RMSe + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RCSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.41020408163265304, "obj2": 0.4436143633145007}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( MUC / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( ( PN + FirstVNF_CPU_Server ) / ACS ) ),FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - PN ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU_Server * PN ) * ARS ) ) ),( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( RMSe - Min( MLU ,( Max( DS,DS ) * ( ( MUM * MLU ) + RMSe ) ) ) ) / RMSe ),( Min( CS ,Min( Min( RRSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03542237253724984}, {"determining": "( ( ( Const * ARS ) / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Min( RMSe ,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + ( RRSe * ( ( ( CS / ( DS / CS ) ) / ( Max( RMSe,MUC ) - DS ) ) + ( ( Max( MUC,MUR ) * RCSe ) * MUR ) ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( ( PN - FirstVNF_CPU ) * ( ARS * ( FirstVNF_RAM - ( FirstVNF_CPU_Server / ( ( MDR * ( DDR / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - RRS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS * MUC ) + CS ) ),Min( ( ( MLU - DS ) - ( Max( CS,RCSe ) * MUC ) ) ,( MUR - Min( Max( RRSe,MLU ) ,RRSe ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6719895361107165}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU * PN ) * ARS ) ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( BR - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9714285714285714, "obj2": 0.013204900832038013}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6489795918367347, "obj2": 0.2216167738430686}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( RRS - ( Min( DDR ,MRS ) - ACS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS / CS ) * CS ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( ( MUR / MUR ) + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7775510204081633, "obj2": 0.09852908329046757}, {"determining": "( ( PN - ( Max( FirstVNF_RAM_Server,( Max( Min( MDR ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( BR ,ARS ) ) * ( MDR * ( ( FirstVNF_CPU * PN ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( FirstVNF_CPU_Server + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Min( RMSe ,MUM ) ,MUM ) ) ) - MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS + ( Min( Max( MUR,RMSe ) ,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3816326530612245, "obj2": 0.4745442999063138}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( MUR - ( Max( Max( ( CS + RCSe ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.18157947253120868}, {"determining": "( Min( Min( PN ,Max( ( ( FirstVNF_Mem - Min( ARS ,RRS ) ) / ACS ),FirstVNF_RAM_Server ) ) ,FirstVNF_RAM_Server ) + ( ( ARS - Min( MRS ,Const ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - Max( MUM,( MUM + CS ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( RMSe + RCSe ) ) - MUC ) ) ) * ( ( MLU - MLU ) / ( DS * RMSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.19465945528801826}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2345998234970808}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.26737133097824084}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) * ARS ) * ( FirstVNF_RAM_Server / Min( MDR ,Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "( ( Max( RMSe,Max( MUC,MUM ) ) * ( ( CS - RRSe ) + ( CS + RCSe ) ) ) * Max( MUC,( ( MUC / Max( ( CS / ( RCSe - RCSe ) ),MUR ) ) * MUC ) ) )", "obj1": 0.9061224489795918, "obj2": 0.04327103984241692}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8741075230595854}, {"determining": "( FirstVNF_RAM_Server * ( ( RRS - ( ACS + MRS ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( DS + ( RRSe - ( ( RMSe + MUC ) - MUR ) ) ) - ( ( Max( MUC,Max( ( RMSe * RRSe ),Min( Max( MUM,DS ) ,Min( ( RMSe - MUR ) ,RCSe ) ) ) ) - ( MUC - RMSe ) ) * CS ) )", "obj1": 0.7489795918367347, "obj2": 0.11362226737047301}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5218630196285853}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.4489795918367347, "obj2": 0.3957413287542857}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) ) * Min( CRS ,AMS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( RRSe * ( RCSe + ( ( MUM / Max( RCSe,MUC ) ) / RRSe ) ) ) * RMSe ) ) * ( ( DS * RMSe ) / Max( Max( MUC,( ( RMSe + MLU ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6805481207616312}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2612244897959184, "obj2": 0.6437818699872799}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22448979591836735, "obj2": 0.6805525249265219}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6571428571428571, "obj2": 0.2066429350484077}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8640723948682063}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ACS ) - ( ( ( CRS / MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5093836283860486}, {"determining": "( PN * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MUC / RMSe ),RRSe ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7612244897959184, "obj2": 0.1081178479523063}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( Min( Min( Const ,ARS ) ,BR ) + ( PN - ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( Max( RRSe,MUR ) + RRSe ) - ( CS * ( Max( MUC,( ( RMSe / RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / FirstVNF_Mem ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) - ( Max( ( ( ( CRS / RRS ) / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( RCSe,MUM ),MUR ) ),( ( RMSe / RCSe ) / ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.6510204081632653, "obj2": 0.2168280912516313}, {"determining": "( Max( FirstVNF_RAM,( ( FirstVNF_Mem - Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.1816326530612245, "obj2": 0.7597218651614143}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ACS - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * Max( DDR,( DDR - Const ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( ( Min( DS ,MUR ) * ( CS + MLU ) ),RMSe ) )", "obj1": 0.1673469387755102, "obj2": 0.7746838508063651}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8558265007170743}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + Max( PN,( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( ( Min( FirstVNF_Mem ,PN ) / FirstVNF_Mem_Server ),MDR ) ) ) ) )", "choosing": "( Max( Max( Max( MUM,MUC ),RMSe ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( Max( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( Max( RCSe,RMSe ) * RRSe ) ),CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.5775510204081633, "obj2": 0.2918016180689863}, {"determining": "( ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( MUC / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.38979591836734695, "obj2": 0.44936299191538925}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ACS ) - ( ( ( CRS / MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3081632653061224, "obj2": 0.5692445912852454}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - FirstVNF_Mem ) - Min( Min( FirstVNF_Mem_Server ,Const ) ,FirstVNF_RAM_Server ) ) ) * ( ( FirstVNF_RAM + CRS ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RCSe - ( MUC / RCSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3081632653061224, "obj2": 0.5692445912852454}, {"determining": "( Min( Min( ( DDR * Min( ( FirstVNF_Mem - Const ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC / CS ) - ( ( RCSe / RRSe ) + ( ( MUR / Min( MLU ,( Max( RCSe,DS ) / RMSe ) ) ) + RCSe ) ) )", "obj1": 0.9591836734693877, "obj2": 0.020621006606358152}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8142857142857143, "obj2": 0.08024780419077841}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe / ( ( CS * DS ) - Max( Min( MUC ,RCSe ),DS ) ) ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( ( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( ( CS - RCSe ) - MUM ) ) * CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.6142857142857143, "obj2": 0.24496734311853097}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( CS + RCSe ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08661086090621835}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( FirstVNF_RAM_Server,( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - DDR ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Min( RMSe ,MUM ) ,MUM ) ) ),( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.16122448979591836, "obj2": 0.7796688935203944}, {"determining": "( ( ARS * PN ) - ( Const - Const ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( RRSe * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2520646218581975}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS / CS ) ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.17791843364533605}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07033055794970386}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( ( ( MUM - MUM ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3874498988353376}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8260914283668344}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0035657758818292457}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * ( RMSe * RRSe ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.33877551020408164, "obj2": 0.5310606602651713}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS + MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( AMS * MRS ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( ( MLU + Max( MUR,MUM ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ACS ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.49503323841080016}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * ( ( FirstVNF_CPU * PN ) * ARS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( ( Max( RMSe,Max( MUC,MUM ) ) - CS ) + RMSe ) - Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) ) )", "obj1": 0.8734693877551021, "obj2": 0.05174705015676617}, {"determining": "( Min( ( Const * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - ( Max( ( Min( MDR ,( ( AMS * Const ) * ARS ) ) * FirstVNF_RAM ),Max( DDR,( AMS - ( CRS / RRS ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( Min( MUC ,Min( ( DS + MUC ) ,Max( RCSe,CS ) ) ) + ( ( RMSe / RRSe ) - ( DS - RMSe ) ) ) - MLU ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + MUR ) )", "obj1": 0.6265306122448979, "obj2": 0.24327386646922827}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - Max( Max( FirstVNF_RAM_Server,( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) ),( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,Max( Max( BR,AMS ),BR ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( Min( RMSe ,RMSe ) * MUM ) )", "obj1": 0.7081632653061225, "obj2": 0.17320351821185057}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * Const ) * ACS ) ) ,( CRS - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.39387755102040817, "obj2": 0.44619118189546975}, {"determining": "( ( AMS * PN ) - ( Max( ACS,MDR ) - PN ) )", "choosing": "( Max( Max( RMSe,( ( ( RCSe / ( RMSe * ( DS * MUM ) ) ) - CS ) * ( ( RMSe / MUM ) / MUC ) ) ),( ( MUM - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24700329178337824}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7692061396249383}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08395580397923846}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_RAM,Max( BR,DDR ) ) + PN ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( ( MUM + ( CS - MUC ) ),Max( RMSe,Max( MUR,MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - Min( MUM ,( MLU + Max( ( DS - DS ),( RMSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.022109691313257174}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS * FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.4917485837454085}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( ( FirstVNF_RAM - MRS ) * PN ) * ARS ) ) - DDR ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe / MLU ) * ( ( DS * RMSe ) / RRSe ) ) ,Max( ( RMSe - MUR ),( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( Const / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * FirstVNF_CPU_Server ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * Max( RRS,Min( PN ,MRS ) ) )", "choosing": "( ( ( MUM * MLU ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,RMSe ) ),RRSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.42448979591836733, "obj2": 0.422718137557792}, {"determining": "( ( BR / Const ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) * RMSe ) ) / RRSe ) + ( CS - ( ( ( ( MUC / RMSe ) / MLU ) / MLU ) + Max( ( CS / MUM ),( MUR + RCSe ) ) ) ) ) ) * ( ( DS * RMSe ) / Max( Max( RMSe,( ( RMSe + RMSe ) / ( MUM + ( CS - ( RCSe / MLU ) ) ) ) ),MUC ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8469487266222246}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS / CS ) ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5938775510204082, "obj2": 0.27239732463715116}], "20": [{"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ACS ) - ACS ) - RRS ) ) * DDR )", "choosing": "Min( ( MUR + ( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + Min( Max( MUM,RRSe ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( Const + ( PN * CRS ) ),FirstVNF_CPU_Server ) - ACS ) - ACS ) - AMS ) ) * DDR )", "choosing": "Min( ( MUR + ( Max( Max( RCSe,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + ( ( RRSe - MLU ) + DS ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN / ( ( ( ( Max( ( FirstVNF_Mem_Server + PN ),( ACS + FirstVNF_RAM_Server ) ) * BR ) * ( BR - BR ) ) / FirstVNF_CPU ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( FirstVNF_Mem_Server ,Const ) ,ARS ) )", "choosing": "Min( ( ( CS / MUC ) * ( RMSe / CS ) ) ,( ( ( RMSe + CS ) + CS ) * ( Min( CS ,MLU ) * ( Max( ( Max( Min( RMSe ,MLU ),MUR ) + RMSe ),Max( Max( RRSe,MUM ),CS ) ) - MUC ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.323273836106415}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.3269680471132034}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / Min( ( ( ( FirstVNF_RAM - Max( PN,AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MLU / MUM ) * CS ) - ( ( MUR + RMSe ) + ( RCSe + CS ) ) )", "obj1": 0.49183673469387756, "obj2": 0.36416144192614525}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_RAM_Server / Min( ( ACS - ( Min( PN ,Const ) * PN ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Max( BR,FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( ( ( Min( DS ,DS ) * RRSe ) * DS ) - ( ( Max( Min( ( Max( MUC,RRSe ) * Max( CS,MUR ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( RMSe * MUR ) ) / ( CS + ( Min( MLU ,RMSe ) / DS ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.34890945356750286}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ,( CRS - MDR ) ) ) * ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - RMSe ) ,( ( RMSe - MUR ) - ( CS * Min( ( MUC - RMSe ) ,Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) ) ) ) )", "obj1": 0.46530612244897956, "obj2": 0.38054627295625}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( Max( MRS,AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( RRS - DDR ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( RMSe,( MLU - RMSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.9408163265306122, "obj2": 0.029160881343903145}, {"determining": "( ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / Min( ( DDR + ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( FirstVNF_CPU_Server - ACS ) * ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( RMSe,( MUC / Min( MUR ,DS ) ) ) ),( ( Min( ( Max( DS,Max( MUC,CS ) ) - ( MUC + ( RMSe / MUC ) ) ) ,DS ) - RRSe ) + ( CS * ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.21020408163265306, "obj2": 0.7077519987798294}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( MUC ,RCSe ),DS ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.06973914799700051}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - Max( Max( FirstVNF_RAM_Server,( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) ),( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,Max( Max( BR,AMS ),BR ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( Min( RMSe ,RMSe ) * MUM ) )", "obj1": 0.7081632653061225, "obj2": 0.17320351821185057}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( ( PN + FirstVNF_CPU_Server ) / ACS ) ),FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - PN ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU_Server * PN ) * ARS ) ) ),( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( RMSe - Min( MLU ,( Max( DS,DS ) * ( ( MUM * MLU ) + RMSe ) ) ) ) / RMSe ),( Min( CS ,Min( Min( RRSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03542237253724984}, {"determining": "( ( PN - ( Max( FirstVNF_RAM_Server,( Max( Min( MDR ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( BR ,ARS ) ) * ( MDR * ( ( FirstVNF_CPU * PN ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( FirstVNF_CPU_Server + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Min( RMSe ,MUM ) ,MUM ) ) ) - MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS + ( Min( Max( MUR,RMSe ) ,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3816326530612245, "obj2": 0.4745442999063138}, {"determining": "( ( Max( FirstVNF_RAM,RRS ) * ( ARS * FirstVNF_Mem ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "Min( ( MUR + ( Max( Max( ( RMSe / ( RRSe + RMSe ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MLU,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.06511464475760945}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( PN / ( Max( ( Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) * ( MDR / ( Min( PN ,FirstVNF_RAM ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,( CS - MLU ) ),( MUM + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7296250586546137}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + MDR ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( CS - MUC ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7496535870450259}, {"determining": "( ( ( Max( ARS,FirstVNF_RAM ) + RRS ) / ( ( ( ( Max( MRS,AMS ) - Max( ARS,( FirstVNF_CPU * PN ) ) ) - ACS ) - RRS ) - Min( PN ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( ( Max( ( MLU - RMSe ),( MLU + MUR ) ) * RMSe ) * ( RMSe * RRSe ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUR ,DS ) ) ) ) * ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5553455746994537}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / ( CS * DS ) ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6755102040816326, "obj2": 0.1876238281963652}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + Min( Max( MUM,RRSe ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6714285714285714, "obj2": 0.1974913570319119}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) * ARS ) * ( FirstVNF_RAM_Server / Min( MDR ,Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "( ( Max( RMSe,Max( MUC,MUM ) ) * ( ( CS - RRSe ) + ( CS + RCSe ) ) ) * Max( MUC,( ( MUC / Max( ( CS / ( RCSe - RCSe ) ),MUR ) ) * MUC ) ) )", "obj1": 0.9061224489795918, "obj2": 0.04327103984241692}, {"determining": "( ( Min( PN ,DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( Min( DDR ,Min( Const ,( ARS * FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( DS - RMSe ) + ( CS - DS ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8174840382699056}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07033055794970386}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8640723948682063}, {"determining": "( ( ( MDR + ( ( FirstVNF_RAM_Server / ( ( Min( Const ,FirstVNF_Mem_Server ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12295325855469937}, {"determining": "( Min( Min( ( DDR * Min( ( FirstVNF_Mem - Const ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( ( RMSe / ( RRSe + RMSe ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MLU,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.020535672530889993}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.37142857142857144, "obj2": 0.4822168852896453}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6204081632653061, "obj2": 0.2375432059301311}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ACS ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.49503323841080016}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.23045889559635177}, {"determining": "( ( ARS * PN ) - ( Const - Const ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( RRSe * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2520646218581975}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.0741880971795771}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8741075230595854}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.26737133097824084}, {"determining": "( PN * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MUC / RMSe ),RRSe ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7612244897959184, "obj2": 0.1081178479523063}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS / CS ) ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5938775510204082, "obj2": 0.27239732463715116}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * ACS ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.40816326530612246, "obj2": 0.43938789979234194}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR + ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU / MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( MUC / Min( MUR ,DS ) ) ) ),( ( CS - RRSe ) + ( CS * ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8995566193243397}, {"determining": "( Min( Min( Const ,ARS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8260914283668344}, {"determining": "( FirstVNF_RAM_Server * ( ( RRS - ( ACS + MRS ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( DS + ( RRSe - ( ( RMSe + MUC ) - MUR ) ) ) - ( ( Max( MUC,Max( ( RMSe * RRSe ),Min( Max( MUM,DS ) ,Min( ( RMSe - MUR ) ,RCSe ) ) ) ) - ( MUC - RMSe ) ) * CS ) )", "obj1": 0.7489795918367347, "obj2": 0.11362226737047301}, {"determining": "( ( ( FirstVNF_RAM_Server * Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) ) * Min( CRS ,AMS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( RRSe * ( RCSe + ( ( MUM / Max( RCSe,MUC ) ) / RRSe ) ) ) * RMSe ) ) * ( ( DS * RMSe ) / Max( Max( MUC,( ( RMSe + MLU ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6805481207616312}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8558265007170743}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( FirstVNF_RAM_Server - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( DS * RMSe ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8890216395996748}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6489795918367347, "obj2": 0.2181114050170793}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ACS ) - ( ( ( CRS / MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5093836283860486}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( ACS + DDR ) ),AMS ) - ACS ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5656649731838292}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + Max( PN,( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( ( Min( FirstVNF_Mem ,PN ) / FirstVNF_Mem_Server ),MDR ) ) ) ) )", "choosing": "( Max( Max( Max( MUM,MUC ),RMSe ),( ( RMSe / RCSe ) + ( CS - MUC ) ) ) * ( ( ( RCSe / RRSe ) + ( Max( Min( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) ,( Max( RCSe,RMSe ) * RRSe ) ),CS ) + RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.5775510204081633, "obj2": 0.2918016180689863}, {"determining": "( ( BR + BR ) - Min( AMS ,PN ) )", "choosing": "Min( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ,( ( RMSe - MUR ) - ( ( Max( MUC,( ( ( RRSe / DS ) - ( MUR + MUM ) ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) * CS ) ) )", "obj1": 0.6591836734693878, "obj2": 0.20495740307220617}, {"determining": "( ( BR / Const ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) * RMSe ) ) / RRSe ) + ( CS - ( ( ( ( MUC / RMSe ) / MLU ) / MLU ) + Max( ( CS / MUM ),( MUR + RCSe ) ) ) ) ) ) * ( ( DS * RMSe ) / Max( Max( RMSe,( ( RMSe + RMSe ) / ( MUM + ( CS - ( RCSe / MLU ) ) ) ) ),MUC ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8469487266222246}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( FirstVNF_RAM_Server,( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - DDR ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Min( RMSe ,MUM ) ,MUM ) ) ),( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.16122448979591836, "obj2": 0.7796688935203944}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.4387755102040816, "obj2": 0.40635805949007864}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( MUC / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( Const / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * FirstVNF_CPU_Server ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * Max( RRS,Min( PN ,MRS ) ) )", "choosing": "( ( ( MUM * MLU ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,RMSe ) ),RRSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.42448979591836733, "obj2": 0.422718137557792}, {"determining": "( ( FirstVNF_Mem_Server * ( PN - MDR ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) - RCSe ) - MUM ) ) )", "obj1": 0.9163265306122449, "obj2": 0.04131940129196905}, {"determining": "( ( ( PN - FirstVNF_CPU ) * ( ARS * ( FirstVNF_RAM - ( FirstVNF_CPU_Server / ( ( MDR * ( DDR / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - RRS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS * MUC ) + CS ) ),Min( ( ( MLU - DS ) - ( Max( CS,RCSe ) * MUC ) ) ,( MUR - Min( Max( RRSe,MLU ) ,RRSe ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6719895361107165}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22448979591836735, "obj2": 0.6805525249265219}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( CS + RCSe ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08661086090621835}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( ( CS * ( DS / CS ) ) - MLU ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( MUM + ( CS - MUC ) ) ),RRSe ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.17791843364533605}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30154757102441637}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( ( ( MUM - MUM ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3874498988353376}, {"determining": "( ( ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( Const * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) ) / ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - Max( MUC,( RRSe / ( ( DS - RRSe ) * ( MUM - ( Max( Min( MLU ,MLU ),MUR ) + Max( MUR,MUR ) ) ) ) ) ) )", "obj1": 0.4, "obj2": 0.44170271298398955}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2345998234970808}, {"determining": "( ( AMS * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,Min( ( RMSe / ( ( MUC / CS ) * MUC ) ) ,Max( RMSe,MLU ) ) )", "obj1": 0.9836734693877551, "obj2": 0.007378837729151039}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( ARS * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( ( Max( RMSe,Max( MUC,MUM ) ) - CS ) + RMSe ) - Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ) ) ) + Max( ( MLU * CS ),( Max( ( RMSe / ( RRSe + RMSe ) ),( MUM + ( CS - MUC ) ) ) / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) ) )", "obj1": 0.8775510204081632, "obj2": 0.04968147384978784}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.730516806184849}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.3408163265306122, "obj2": 0.5218630196285853}, {"determining": "( ( AMS * PN ) - ( Max( ACS,MDR ) - PN ) )", "choosing": "( Max( Max( RMSe,( ( ( RCSe / ( RMSe * ( DS * MUM ) ) ) - CS ) * ( ( RMSe / MUM ) / MUC ) ) ),( ( MUM - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24700329178337824}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) )", "obj1": 0.7938775510204081, "obj2": 0.09149332998917402}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( FirstVNF_Mem_Server - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Max( RMSe,MUR ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.363265306122449, "obj2": 0.48684269855038365}, {"determining": "( ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( ( DS / CS ),MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.7872566422156815}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08395580397923846}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.0787160352084534}, {"determining": "( Min( Min( ( DDR * Min( MDR ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( DDR * PN ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( ( RMSe - MUR ) ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0026627066234697658}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( ( FirstVNF_RAM - MRS ) * PN ) * ARS ) ) - DDR ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe / MLU ) * ( ( DS * RMSe ) / RRSe ) ) ,Max( ( RMSe - MUR ),( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( PN - AMS ) - ( ( Min( MRS ,MRS ) - ( ( PN - MDR ) * DDR ) ) - BR ) )", "choosing": "Min( ( RCSe + ( RCSe + MUC ) ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( Max( MUM,( ( RCSe / RRSe ) + ( RCSe + RCSe ) ) ) ,RCSe ),DS ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * Const ) * ACS ) ) ,( CRS - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.39387755102040817, "obj2": 0.44619118189546975}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7679492600067294}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * ( ( FirstVNF_CPU * PN ) * ARS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) * ( ( ( Max( RMSe,Max( MUC,MUM ) ) - CS ) + RMSe ) - Min( ( RMSe / ( ( RCSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ) ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + ( Min( MLU ,( MUC - RCSe ) ) + ( Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) / ( MUM + ( ( RRSe + RCSe ) - MUC ) ) ) ) )", "obj1": 0.8734693877551021, "obj2": 0.05174705015676617}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( DDR * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM / RCSe ) / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.11895961795673282}], "21": [{"determining": "( ( ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( DS * RMSe ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ACS ) - ACS ) - RRS ) ) * DDR )", "choosing": "Min( ( MUR + ( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + Min( Max( MUM,RRSe ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN - ( BR + Max( PN,CRS ) ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe + ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( ( MUR + MUC ) * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.3181151889785575}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30087847344896823}, {"determining": "( ( PN - ( FirstVNF_RAM_Server + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * Max( Max( ARS,BR ),Max( FirstVNF_RAM,RRS ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( MLU - MUM ) ,MUM ) ) ) - ( MUC - MUC ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( ( Min( MDR ,BR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * ( MDR / ( Max( FirstVNF_CPU,PN ) * FirstVNF_Mem ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( Const - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ) ) + Min( ( ( MDR / AMS ) * RRS ) ,( ( ARS - ( FirstVNF_RAM - FirstVNF_RAM ) ) * MRS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( MUM,MUM ) ) ) ) - MUC ) ) - ( ( RCSe / RCSe ) + ( CS + DS ) ) )", "obj1": 0.7204081632653061, "obj2": 0.16364758012360492}, {"determining": "( ( ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ,( CRS - MDR ) ) ) * ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - RMSe ) ,( ( RMSe - MUR ) - ( CS * Min( ( MUC - RMSe ) ,Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) ) ) ) )", "obj1": 0.46530612244897956, "obj2": 0.38054627295625}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_RAM_Server / Min( ( ACS - ( Min( PN ,Const ) * PN ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Max( BR,FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( ( ( Min( DS ,DS ) * RRSe ) * DS ) - ( ( Max( Min( ( Max( MUC,RRSe ) * Max( CS,MUR ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( RMSe * MUR ) ) / ( CS + ( Min( MLU ,RMSe ) / DS ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.34890945356750286}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( Max( ( Max( FirstVNF_RAM_Server,Max( PN,FirstVNF_CPU ) ) - MRS ),MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( MUR - MUR ),( MLU - ( ( MUM + DS ) + ( RMSe * MUR ) ) ) ) ) * Max( ( Min( Min( Max( Min( Max( MUM,MUR ) ,MLU ),CS ) ,( MUR * MUM ) ) ,MLU ) + ( RCSe * RCSe ) ),MUR ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + MDR ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( CS - MUC ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7496535870450259}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,( ACS - FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) - Min( ( ( FirstVNF_Mem / ( RRS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( Max( RCSe,MLU ) - MUC ) - ( CS * ( Max( MUC,( ( RMSe / DS ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8510204081632653, "obj2": 0.0677364917103422}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.1682231274009915}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5755102040816327, "obj2": 0.2916822055204306}, {"determining": "( ( ( PN - FirstVNF_CPU ) * ( ARS * ( FirstVNF_RAM - ( FirstVNF_CPU_Server / ( ( MDR * ( DDR / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - RRS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS * MUC ) + CS ) ),Min( ( ( MLU - DS ) - ( Max( CS,RCSe ) * MUC ) ) ,( MUR - Min( Max( RRSe,MLU ) ,RRSe ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6719895361107165}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * ( ( FirstVNF_CPU * PN ) * ARS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.8673469387755102, "obj2": 0.058518325624710876}, {"determining": "( ( ( FirstVNF_RAM_Server + PN ) * ARS ) * ( FirstVNF_RAM_Server / Min( MDR ,Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "( ( Max( RMSe,Max( MUC,MUM ) ) * ( ( CS - RRSe ) + ( CS + RCSe ) ) ) * Max( MUC,( ( MUC / Max( ( CS / ( RCSe - RCSe ) ),MUR ) ) * MUC ) ) )", "obj1": 0.9061224489795918, "obj2": 0.04327103984241692}, {"determining": "( ( PN - ( Max( FirstVNF_RAM_Server,( Max( Min( MDR ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( BR ,ARS ) ) * ( MDR * ( ( FirstVNF_CPU * PN ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( FirstVNF_CPU_Server + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Min( RMSe ,MUM ) ,MUM ) ) ) - MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS + ( Min( Max( MUR,RMSe ) ,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3816326530612245, "obj2": 0.4745442999063138}, {"determining": "( ( PN / ( Max( ( DDR * ( MDR / ( Min( PN ,FirstVNF_RAM ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,( CS - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7221540504695507}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ACS ) - ( ( ( CRS / MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5093836283860486}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7679492600067294}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( ( Max( ARS,FirstVNF_RAM ) + RRS ) / ( ( ( ( Max( MRS,AMS ) - Max( ARS,( FirstVNF_CPU * PN ) ) ) - ACS ) - RRS ) - Min( PN ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( ( Max( ( MLU - RMSe ),( MLU + MUR ) ) * RMSe ) * ( RMSe * RRSe ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUR ,DS ) ) ) ) * ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5553455746994537}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.3269680471132034}, {"determining": "( ( PN - ( ( ( DDR * ( PN - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7050894838777635}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ACS ) ,( CRS - MDR ) ) ) * ( ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11428571428571428, "obj2": 0.8558265007170743}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( ( AMS * PN ) - ( Max( ACS,MDR ) - PN ) )", "choosing": "( Max( Max( RMSe,( ( ( RCSe / ( RMSe * ( DS * MUM ) ) ) - CS ) * ( ( RMSe / MUM ) / MUC ) ) ),( ( MUM - RRSe ) + ( RMSe + ( ( CS / RRSe ) - RMSe ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24700329178337824}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( PN * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12291045572135377}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( DDR * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( RRSe / ( DS * RMSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7653061224489796, "obj2": 0.10513771862190256}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ACS ) - ( ( ( CRS / MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) - ( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( RRSe / ( DS * RMSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.838775238974908}, {"determining": "( ( ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ,( CRS - MDR ) ) ) * ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4448979591836735, "obj2": 0.4019418164076272}, {"determining": "( ( PN * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MLU - RMSe ) ) - MUM ) ) )", "obj1": 0.963265306122449, "obj2": 0.016528531152560894}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( Min( Min( Const ,ARS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS + MRS ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6959183673469388, "obj2": 0.17853933059457408}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6816326530612244, "obj2": 0.18189433090024795}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.4387755102040816, "obj2": 0.40635805949007864}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( PN - AMS ) - ( ( Min( MRS ,MRS ) - ( ( PN - MDR ) * DDR ) ) - BR ) )", "choosing": "Min( ( RCSe + ( RCSe + MUC ) ) ,( DS * Max( Max( MUM,( ( Min( RMSe ,RCSe ) / RRSe ) + ( CS + RCSe ) ) ),Max( Min( Max( MUM,( ( RCSe / RRSe ) + ( RCSe + RCSe ) ) ) ,RCSe ),DS ) ) ) )", "obj1": 0.9795918367346939, "obj2": 0.010141181253025334}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( ACS / ( ( PN + FirstVNF_CPU_Server ) / ACS ) ),FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - PN ) - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU_Server * PN ) * ARS ) ) ),( Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem ,Max( FirstVNF_RAM,ACS ) ) ) + BR ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) + Max( ( MLU * CS ),( MUC / CS ) ) ) + Max( ( ( RMSe - Min( MLU ,( Max( DS,DS ) * ( ( MUM * MLU ) + RMSe ) ) ) ) / RMSe ),( Min( CS ,Min( Min( RRSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.9204081632653062, "obj2": 0.03542237253724984}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.23045889559635177}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ACS ) - ( ( ( CRS / MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3081632653061224, "obj2": 0.5692445912852454}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * ACS ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4359253743370863}, {"determining": "( ( ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) / ( ( ( Max( FirstVNF_CPU_Server,( MDR - MDR ) ) - ACS ) - ACS ) - RRS ) ) * DDR )", "choosing": "Min( ( MUR + ( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUR ) ,MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * MUM ) + ( RRSe / MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7816326530612245, "obj2": 0.09656628463713395}, {"determining": "( ( ARS * PN ) - ( Const - Const ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( RRSe * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2520646218581975}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / ( CS * DS ) ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6755102040816326, "obj2": 0.1876238281963652}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR + ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU / MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( MUC / Min( MUR ,DS ) ) ) ),( ( CS - RRSe ) + ( CS * ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8995566193243397}, {"determining": "( ( BR / Const ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) * RMSe ) ) / RRSe ) + ( CS - ( ( ( ( MUC / RMSe ) / MLU ) / MLU ) + Max( ( CS / MUM ),( MUR + RCSe ) ) ) ) ) ) * ( ( DS * RMSe ) / Max( Max( RMSe,( ( RMSe + RMSe ) / ( MUM + ( CS - ( RCSe / MLU ) ) ) ) ),MUC ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8469487266222246}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.730516806184849}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6489795918367347, "obj2": 0.2181114050170793}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( RRS - DDR ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.022109691313257174}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * ACS ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6802056800572909}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( Min( PN ,DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( Min( DDR ,Min( Const ,( ARS * FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( DS - RMSe ) + ( CS - DS ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8174840382699056}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * ACS ) ) * ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( PN * CRS ) ) ) ) ) ) ) )", "choosing": "Min( ( MUR * ( Min( Min( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) ,RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,Max( RMSe,Max( MUM,Max( RMSe,MUC ) ) ) ) ),( RCSe + MUR ) ) ) )", "obj1": 0.9387755102040817, "obj2": 0.02978854333263882}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6204081632653061, "obj2": 0.2375432059301311}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( MDR * ( ACS + DDR ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / ( CS * DS ) ) ,( ( ( CS / ( RCSe / MUM ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.19515545750955451}, {"determining": "( ( MRS / MRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RRSe * RMSe ) + ( ( DS / RRSe ) * RRSe ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8741075230595854}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( ACS + DDR ) ),AMS ) - ACS ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5656649731838292}, {"determining": "( Min( Min( ( DDR * Min( MDR ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM_Server,( DDR * PN ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( ( RMSe - MUR ) ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0026627066234697658}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.6530612244897959, "obj2": 0.2157927182237116}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.3269680471132034}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3877551020408163, "obj2": 0.44982583468680004}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * ARS ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8800304411600454}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( RRS - DDR ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( Max( MRS,FirstVNF_Mem_Server ) / ACS ) ) )", "choosing": "( ( ( ( ( MUC / ( MUM / RMSe ) ) + ( MLU / CS ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.036386379684307676}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( FirstVNF_Mem_Server - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Max( RMSe,MUR ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.363265306122449, "obj2": 0.48684269855038365}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( ( ( MUM - MUM ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3874498988353376}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8260914283668344}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( ( CRS - MDR ) - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( RRSe ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.33877551020408164, "obj2": 0.522642740285848}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2345998234970808}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * Const ) * ACS ) ) ,( CRS - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.39387755102040817, "obj2": 0.44619118189546975}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8640723948682063}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.0787160352084534}, {"determining": "( ( FirstVNF_RAM_Server - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( DS * RMSe ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8890216395996748}, {"determining": "( Min( Min( ( DDR * Min( ( FirstVNF_Mem - Const ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,( Const + ( PN * CRS ) ) ) + ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - ( ( ACS * Const ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( ( RMSe / ( RRSe + RMSe ) ),( MUM + ( CS - MUC ) ) ),MUM ) + ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MLU,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,( CS - MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9591836734693877, "obj2": 0.02053567253088999}, {"determining": "( ( BR + BR ) - Min( AMS ,PN ) )", "choosing": "Min( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ,( ( RMSe - MUR ) - ( ( Max( MUC,( ( ( RRSe / DS ) - ( MUR + MUM ) ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) * CS ) ) )", "obj1": 0.6591836734693878, "obj2": 0.20495740307220617}, {"determining": "( ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( RRSe / ( DS * RMSe ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.9816326530612245, "obj2": 0.0058748594201521055}, {"determining": "( Min( Min( Const ,ARS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) * Max( FirstVNF_CPU,( ARS / AMS ) ) ) ) )", "choosing": "( ( DS + ( ( ( RMSe + MUC ) - MUR ) - RRSe ) ) - ( ( Max( MUC,Max( ( Max( MUM,DS ) * RRSe ),Min( Max( MUM,DS ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) - ( MUC - RMSe ) ) * CS ) )", "obj1": 0.6, "obj2": 0.26632364003044146}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( ACS + FirstVNF_CPU_Server ) ),AMS ) - ACS ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUM,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.4988892558761021}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08600376262672287}, {"determining": "( PN * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MUC / RMSe ),RRSe ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7612244897959184, "obj2": 0.1081178479523063}, {"determining": "( ( ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( Const * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) ) / ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - Max( MUC,( RRSe / ( ( DS - RRSe ) * ( MUM - ( Max( Min( MLU ,MLU ),MUR ) + Max( MUR,MUR ) ) ) ) ) ) )", "obj1": 0.4, "obj2": 0.44170271298398955}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( MRS * ( FirstVNF_Mem * PN ) ) * ARS ) ) / Max( ( Min( ( CRS + CRS ) ,FirstVNF_CPU ) - FirstVNF_CPU ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR * DS ) - ( ( ( ( CS / CS ) - RRSe ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07033055794970386}], "22": [{"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ACS ) - ACS ) - RRS ) ) * DDR )", "choosing": "Min( ( MUR + ( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + Min( Max( MUM,RRSe ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( DS * RMSe ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.5673469387755102, "obj2": 0.30087847344896823}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( Max( ( Max( FirstVNF_RAM_Server,Max( PN,FirstVNF_CPU ) ) - MRS ),MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( MUR - MUR ),( MLU - ( ( MUM + DS ) + ( RMSe * MUR ) ) ) ) ) * Max( ( Min( Min( Max( Min( Max( MUM,MUR ) ,MLU ),CS ) ,( MUR * MUM ) ) ,MLU ) + ( RCSe * RCSe ) ),MUR ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7061224489795919, "obj2": 0.15898089136827376}, {"determining": "( ( PN - ( FirstVNF_RAM_Server + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * Max( Max( ARS,BR ),Max( FirstVNF_RAM,RRS ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( MLU - MUM ) ,MUM ) ) ) - ( MUC - MUC ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( CRS / RRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( CRS - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( ( Const * MDR ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + CS ) ) - ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) ) * DS ) - ( ( Max( DS,Min( ( RMSe / ( ( MUC / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ) ) * Max( RMSe,MUR ) ) + ( ( ( ( MLU / MUR ) + Min( DS ,DS ) ) + CS ) / ( MUR / MLU ) ) ) )", "obj1": 0.46530612244897956, "obj2": 0.3762057212441679}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( FirstVNF_Mem_Server - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Max( RMSe,MUR ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.363265306122449, "obj2": 0.48684269855038365}, {"determining": "( ( PN - ( Max( FirstVNF_RAM_Server,( Max( Min( MDR ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ),Min( BR ,ARS ) ) * ( MDR * ( ( FirstVNF_CPU * PN ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) * ( FirstVNF_CPU_Server + ( CRS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Min( RMSe ,MUM ) ,MUM ) ) ) - MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS + ( Min( Max( MUR,RMSe ) ,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,MUC ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3816326530612245, "obj2": 0.4745442999063138}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.3181151889785575}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( Min( PN ,DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( Min( DDR ,Min( Const ,( ARS * FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( DS - RMSe ) + ( CS - DS ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8174840382699056}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + DDR ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1306122448979592, "obj2": 0.8260914283668344}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6816326530612244, "obj2": 0.18189433090024795}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( ACS + DDR ) ),AMS ) - ACS ) - ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6705749145285693}, {"determining": "( ( ( MDR / ( ACS * ARS ) ) - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( DDR - FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + ( MUC - RMSe ) ) ) ) ),( Max( RCSe,( ( MUR + ( RCSe / ( DS + MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * Min( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ,( RMSe * DS ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8368289799869595}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * ( ( FirstVNF_CPU * PN ) * ARS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.8673469387755102, "obj2": 0.058518325624710876}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,( BR + MRS ) ) + Max( FirstVNF_RAM_Server,Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( ( RMSe + Max( ( RCSe - RMSe ),RRSe ) ),MUC ) ),( MUM + ( CS - MUM ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( MUR - RMSe ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,Min( DS ,RCSe ) ) ) ) - ( Min( Min( RCSe ,( MUR + RCSe ) ) ,( Max( RRSe,DS ) + DS ) ) + MUM ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.33155441240540867}, {"determining": "( Min( ( MDR + FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( RMSe,MUR ) * Max( MUC,RRSe ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Max( MUM,MUC ),Max( RRSe,CS ) ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS + RMSe ) ) )", "obj1": 0.20204081632653062, "obj2": 0.718444596292963}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( ( Max( ARS,FirstVNF_RAM ) + RRS ) / ( ( ( ( Max( MRS,AMS ) - Max( ARS,( FirstVNF_CPU * PN ) ) ) - ACS ) - RRS ) - Min( PN ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( ( Max( ( MLU - RMSe ),( MLU + MUR ) ) * RMSe ) * ( RMSe * RRSe ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUR ,DS ) ) ) ) * ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5553455746994537}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( ACS + FirstVNF_CPU_Server ) ),AMS ) - ACS ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUM,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.4988892558761021}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + MDR ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( CS - MUC ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7496535870450259}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem_Server * ( MDR - PN ) ) ) / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ACS ) - ACS ) - RRS ) ) * DDR )", "choosing": "Min( ( MUR + ( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + ( RRSe / MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7816326530612245, "obj2": 0.09653289384786753}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8020408163265306, "obj2": 0.08600376262672287}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.0787160352084534}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( Min( Min( Const ,ARS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) * Max( FirstVNF_CPU,( ARS / AMS ) ) ) ) )", "choosing": "( ( DS + ( ( ( RMSe + MUC ) - MUR ) - RRSe ) ) - ( ( Max( MUC,Max( ( Max( MUM,DS ) * RRSe ),Min( Max( MUM,DS ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) - ( MUC - RMSe ) ) * CS ) )", "obj1": 0.6, "obj2": 0.26632364003044146}, {"determining": "( PN * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MUC / RMSe ),RRSe ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.753061224489796, "obj2": 0.1116169415875982}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( MRS * ( FirstVNF_Mem * PN ) ) * ARS ) ) / Max( ( Min( ( CRS + CRS ) ,FirstVNF_CPU ) - FirstVNF_CPU ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR * DS ) - ( ( ( ( CS / CS ) - RRSe ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07033055794970386}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( Min( ACS ,AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( MDR,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( ( MUR * DS ) ,MLU ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( MUM / DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6959183673469388, "obj2": 0.16928184026155876}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_RAM_Server / Min( ( ACS - ( Min( PN ,Const ) * PN ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Max( BR,FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( ( ( Min( DS ,DS ) * RRSe ) * DS ) - ( ( Max( Min( ( Max( MUC,RRSe ) * Max( CS,MUR ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( RMSe * MUR ) ) / ( CS + ( Min( MLU ,RMSe ) / DS ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.34890945356750286}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.4387755102040816, "obj2": 0.40635805949007864}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,Const ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( RMSe,MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe / DS ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8510204081632653, "obj2": 0.06743556392002771}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9775510204081632, "obj2": 0.007130183397623457}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( ( CRS - MDR ) - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( RRSe ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.33877551020408164, "obj2": 0.522642740285848}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + Min( Max( MUM,RRSe ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.0741880971795771}, {"determining": "( ( PN * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MLU - RMSe ) ) - MUM ) ) )", "obj1": 0.963265306122449, "obj2": 0.016528531152560894}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / ( CS * DS ) ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6755102040816326, "obj2": 0.1876238281963652}, {"determining": "( ( PN - ( BR + Max( PN,CRS ) ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe + ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( ( MUR + MUC ) * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.3181151889785575}, {"determining": "( ( PN * Min( Min( Min( ( ( ARS - RRS ) * RRS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ,( Min( PN ,MDR ) * ( PN + ACS ) ) ) ) - ( MRS * ( RRS + BR ) ) )", "choosing": "Min( ( RRSe / ( DS * RMSe ) ) ,( DS / ( ( RMSe * CS ) * ( ( DS / ( Max( RCSe,MUR ) - ( Min( RRSe ,RCSe ) - RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9040816326530612, "obj2": 0.042723577246180505}, {"determining": "( PN * ( ( ( ( MDR / ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,( ACS - FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) - Min( ( ( FirstVNF_Mem / ( RRS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) * ( PN - MDR ) ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12287764863086167}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( MRS,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ACS ) - ( ( ( CRS / MRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5219712988421729}, {"determining": "( ( PN - ( BR + Max( PN,CRS ) ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.8612244897959184, "obj2": 0.0653715530589098}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6489795918367347, "obj2": 0.21160448435737614}, {"determining": "( PN * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( MUR / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,RRSe ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.7795918367346939, "obj2": 0.09814119878116566}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7574762038913266}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8741075230595854}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( DS * RMSe ) - MUM ) ) )", "obj1": 0.636734693877551, "obj2": 0.2340894750084811}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR + ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU / MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( MUC / Min( MUR ,DS ) ) ) ),( ( CS - RRSe ) + ( CS * ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8995566193243397}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( ACS + DDR ) ),AMS ) - ACS ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5656649731838292}, {"determining": "( ( PN - ( ( ( DDR * ( PN - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7050894838777635}, {"determining": "( PN * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.1220262856773305}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7679492600067294}, {"determining": "( ( PN / ( Max( ( DDR * ( MDR / ( Min( PN ,FirstVNF_RAM ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8492457996152423}, {"determining": "( ( ARS * PN ) - ( Const - Const ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( RRSe * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2520646218581975}, {"determining": "( ( ( FirstVNF_Mem_Server - RRS ) - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Const * ( PN - MDR ) ) ) )", "choosing": "( ( CS - RMSe ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( MLU,CS ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS - RCSe ) ) )", "obj1": 0.5142857142857142, "obj2": 0.32518868741925827}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Max( ACS,FirstVNF_RAM ) - ( MDR - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( MUC ,Max( ( MUM - CS ),RMSe ) ) ) ) - MUC ) ) - ( ( CS + DS ) + ( RCSe / RCSe ) ) )", "obj1": 0.9244897959183673, "obj2": 0.03395326151293337}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,Min( BR ,Const ) ) * ( FirstVNF_CPU_Server - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.730516806184849}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( RRS - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.028900303160614788}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5755102040816327, "obj2": 0.2916822055204306}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8040816326530612, "obj2": 0.08499106349423244}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5183673469387755, "obj2": 0.3229273941384241}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( MUM,MLU ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5795918367346938, "obj2": 0.2915643720988769}, {"determining": "( ( ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ,( CRS - MDR ) ) ) * ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4448979591836735, "obj2": 0.4019418164076272}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.1682231274009915}, {"determining": "( MDR * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( DS * RMSe ),Max( MUM,( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Min( MLU ,( RRSe / RMSe ) ) ) - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6866655882650845}, {"determining": "( ( BR + BR ) - Min( AMS ,PN ) )", "choosing": "Min( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ,( ( RMSe - MUR ) - ( ( Max( MUC,( ( ( RRSe / DS ) - ( MUR + MUM ) ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) * CS ) ) )", "obj1": 0.6591836734693878, "obj2": 0.20495740307220617}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6224489795918368, "obj2": 0.23638876965837172}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU / Const ) ) + ( ( Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) * Min( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ) ,( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( MUM - ( RMSe - ( MLU / MUC ) ) ) ) )", "obj1": 0.6469387755102041, "obj2": 0.2177440796470639}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * ARS ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8800304411600454}, {"determining": "( Min( Min( Const ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( ( ( AMS * PN ) - ( MDR - BR ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) * RMSe ) ) )", "obj1": 0.6448979591836734, "obj2": 0.22662176898698586}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8578523768763752}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( MDR * ( ACS + DDR ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / ( CS * DS ) ) ,( ( ( CS / ( RCSe / MUM ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.19515545750955451}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( Max( Max( FirstVNF_Mem,MDR ),BR ) + ( PN * ARS ) )", "choosing": "( Max( Max( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ),MLU ),Min( ( Min( MUM ,Min( ( ( MUC / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) ,( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( MUM - MUC ) ) ) ),MUC ) / ( ( ( DS / RCSe ) - RCSe ) * ( DS - ( ( MUM + CS ) + CS ) ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38532181924119846}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.24371924753317553}, {"determining": "( ( FirstVNF_RAM_Server - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( Max( MUM,DS ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( DS * RMSe ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.09387755102040816, "obj2": 0.8870944456029485}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( DDR * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( RRSe / ( DS * RMSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7653061224489796, "obj2": 0.10513771862190256}], "23": [{"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) - ( BR + MRS ) ) + Min( ( BR + FirstVNF_CPU ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( RCSe / Max( Max( CS,CS ),MUR ) ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( FirstVNF_CPU_Server,AMS ) - ACS ) - ACS ) - RRS ) ) * DDR )", "choosing": "Min( ( MUR + ( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RCSe ) + Min( Max( MUM,RRSe ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( Max( ( Max( FirstVNF_RAM_Server,Max( PN,FirstVNF_CPU ) ) - MRS ),MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( MUR - MUR ),( MLU - ( ( MUM + DS ) + ( RMSe * MUR ) ) ) ) ) * Max( ( Min( Min( Max( Min( Max( MUM,MUR ) ,MLU ),CS ) ,( MUR * MUM ) ) ,MLU ) + ( RCSe * RCSe ) ),MUR ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7163265306122449, "obj2": 0.15858740779687228}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( Min( Min( Const ,ARS ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) * Max( FirstVNF_CPU,( ARS / AMS ) ) ) ) )", "choosing": "( ( DS + ( ( ( RMSe + MUC ) - MUR ) - RRSe ) ) - ( ( Max( MUC,Max( ( Max( MUM,DS ) * RRSe ),Min( Max( MUM,DS ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) - ( MUC - RMSe ) ) * CS ) )", "obj1": 0.6, "obj2": 0.26632364003044146}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( Min( PN ,DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( Min( DDR ,Min( Const ,( ARS * FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( DS - RMSe ) + ( CS - DS ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8174840382699056}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( ( AMS * PN ) - ( ACS - FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUM ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.31310963119259155}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( ( AMS * PN ) - ( MDR - BR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.3227151553582536}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( ARS * PN ) - ( Const - Const ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( RRSe * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2520646218581975}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,( BR + MRS ) ) + Max( FirstVNF_RAM_Server,Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( ( RMSe + Max( ( RCSe - RMSe ),RRSe ) ),MUC ) ),( MUM + ( CS - MUM ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( MUR - RMSe ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,Min( DS ,RCSe ) ) ) ) - ( Min( Min( RCSe ,( MUR + RCSe ) ) ,( Max( RRSe,DS ) + DS ) ) + MUM ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.33155441240540867}, {"determining": "( ( ( BR - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( FirstVNF_Mem_Server - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( Max( MUR,MUM ) ,MUC ) ) ) - MUC ) ) - ( Min( RMSe ,MLU ) - ( CS + DS ) ) )", "obj1": 0.9244897959183673, "obj2": 0.0339048923258193}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUC ) + Max( ( MLU * CS ),Min( ( MLU / RMSe ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.5755102040816327, "obj2": 0.2916822055204306}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.24371924753317553}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( ACS + DDR ) ),AMS ) - ACS ) - ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.7858078323841902}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RRSe / ( DS * RMSe ) ) ,( DS / ( ( ( DS / ( Max( Min( RMSe ,RRSe ),Min( MUM ,RMSe ) ) + Min( DS ,MUR ) ) ) - CS ) / ( RMSe * CS ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.29966245249977586}, {"determining": "( Max( FirstVNF_CPU_Server,( ACS + ( PN - FirstVNF_Mem_Server ) ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + Min( RRSe ,( RCSe + MLU ) ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08979591836734693, "obj2": 0.8889187085770305}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( Min( RRS ,MDR ) * ( ( ACS - AMS ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( ( ( MUR / Min( Min( ( RCSe * RCSe ) ,( ( RRSe + MLU ) + MLU ) ) ,MUM ) ) - Max( MUR,MUM ) ) - ( Max( DS,Max( DS,Max( MUM,MUC ) ) ) * ( ( ( DS - Max( ( MLU * CS ),RCSe ) ) + ( ( ( MUR / DS ) + Min( MUM ,RMSe ) ) * ( ( MUR + CS ) - DS ) ) ) * ( ( MUM - ( ( RMSe * RRSe ) + MUM ) ) * DS ) ) ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7494899820038121}, {"determining": "( ( BR + BR ) - Min( AMS ,PN ) )", "choosing": "Min( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ,( ( RMSe - MUR ) - ( ( Max( MUC,( ( ( RRSe / DS ) - ( MUR + MUM ) ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) * CS ) ) )", "obj1": 0.6591836734693878, "obj2": 0.20495740307220617}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( PN - ( ( ( DDR * ( PN - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7050894838777635}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( CRS - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.3762057212441679}, {"determining": "( Min( ( MDR + FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( RMSe,MUR ) * Max( MUC,RRSe ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Max( MUM,MUC ),Max( RRSe,CS ) ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS + RMSe ) ) )", "obj1": 0.20204081632653062, "obj2": 0.718444596292963}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( PN - ( Const * Min( RRS ,( Const - ( RRS - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.9510204081632653, "obj2": 0.02128707856777237}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( ( Max( ARS,FirstVNF_RAM ) + RRS ) / ( ( ( ( Max( MRS,AMS ) - Max( ARS,( FirstVNF_CPU * PN ) ) ) - ACS ) - RRS ) - Min( PN ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( ( Max( ( MLU - RMSe ),( MLU + MUR ) ) * RMSe ) * ( RMSe * RRSe ) ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( MUR ,DS ) ) ) ) * ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5553455746994537}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( PN * Min( Min( Min( ( ( ARS - RRS ) * RRS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ,( Min( PN ,MDR ) * ( PN + ACS ) ) ) ) - ( MRS * ( RRS + BR ) ) )", "choosing": "Min( ( RRSe / ( DS * RMSe ) ) ,( DS / ( ( RMSe * CS ) * ( ( DS / ( Max( RCSe,MUR ) - ( Min( RRSe ,RCSe ) - RMSe ) ) ) - CS ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.29966245249977586}, {"determining": "( ( Max( ( ARS + AMS ),( FirstVNF_Mem / RRS ) ) - FirstVNF_CPU ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Min( RMSe ,( Max( ( Min( RRSe ,( MUM / MLU ) ) / RRSe ),RCSe ) + Max( CS,Max( MUC,MUM ) ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,Min( ( RMSe * RRSe ) ,Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR + ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU / MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( MUC / Min( MUR ,DS ) ) ) ),( ( CS - RRSe ) + ( CS * ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8995566193243397}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,Const ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( RMSe,MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe / DS ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8510204081632653, "obj2": 0.06743556392002771}, {"determining": "( ( PN / ( Max( ( DDR * ( MDR / ( Min( PN ,FirstVNF_RAM ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8492457996152423}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.4387755102040816, "obj2": 0.40635805949007864}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( CRS - MDR ) ) ) - ( Max( ( ( ( CRS + ( BR * MDR ) ) / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( MUR ,( Max( DS,MUM ) / RMSe ) ) / MUR ) / Max( RRSe,( RCSe + Min( ( RMSe / RCSe ) ,DS ) ) ) ),MLU ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6918367346938775, "obj2": 0.17639222561265522}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( ( ( ( MDR + ( ACS - PN ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( MRS / BR ) ) ) ,( CRS - MDR ) ) ) / ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( Max( Max( ( DS + RCSe ),Max( RMSe,MUC ) ),( ( RRSe - MUM ) + Min( RMSe ,RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.6820487858442903}, {"determining": "( ACS * Min( MDR ,MRS ) )", "choosing": "Min( Max( Max( Max( Max( MUM,MUC ),RMSe ),( MUM + ( CS - MUC ) ) ),( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RCSe / DS ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3081632653061224, "obj2": 0.5692445912852454}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( CRS / RRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( CRS - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( ( Const * MDR ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + CS ) ) - ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) ) * DS ) - ( ( Max( DS,Min( ( RMSe / ( ( MUC / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ) ) * Max( RMSe,MUR ) ) + ( ( ( ( MLU / MUR ) + Min( DS ,DS ) ) + CS ) / ( MUR / MLU ) ) ) )", "obj1": 0.46530612244897956, "obj2": 0.3762057212441679}, {"determining": "( Min( MRS ,AMS ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_RAM ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( MLU,Max( ( RMSe * ( Max( RRSe,MLU ) * Max( RCSe,( RMSe / DS ) ) ) ),( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6795918367346939, "obj2": 0.18122343321259995}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( Max( FirstVNF_RAM_Server,( ( FirstVNF_RAM_Server / Min( ( ACS - ( Min( PN ,Const ) * PN ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Max( BR,FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( ( ( Min( DS ,DS ) * RRSe ) * DS ) - ( ( Max( Min( ( Max( MUC,RRSe ) * Max( CS,MUR ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( RMSe * MUR ) ) / ( CS + ( Min( MLU ,RMSe ) / DS ) ) ) )", "obj1": 0.5020408163265306, "obj2": 0.34890945356750286}, {"determining": "( ( ( MDR / ( ACS * ARS ) ) - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( DDR - FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + ( MUC - RMSe ) ) ) ) ),( Max( RCSe,( ( MUR + ( RCSe / ( DS + MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * Min( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ,( RMSe * DS ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8368289799869595}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8578523768763752}, {"determining": "( ( ( DDR - PN ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_Mem ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RCSe ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * DS ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7278017842250796}, {"determining": "( ( PN - ( FirstVNF_RAM_Server + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * Max( Max( ARS,BR ),Max( FirstVNF_RAM,RRS ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( MLU - MUM ) ,MUM ) ) ) - ( MUC - MUC ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - BR ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) ),( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( DS * RMSe ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9877551020408163, "obj2": 0.006319556052164554}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - FirstVNF_CPU ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUM ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5117837750292131}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( FirstVNF_Mem_Server - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Max( RMSe,MUR ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.363265306122449, "obj2": 0.48684269855038365}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.3156265086641463}, {"determining": "( ( PN - ( BR + Max( PN,CRS ) ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( ( AMS - AMS ) / ( AMS + Const ) ) - DDR ) - Const ) - MDR ) ) ) )", "choosing": "( ( Max( MUC,RMSe ) * CS ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MLU ) ) ) )", "obj1": 0.8612244897959184, "obj2": 0.06527060625316228}, {"determining": "( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( MUR + ( Max( RMSe,MUM ) + RCSe ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MUC / RMSe ),RRSe ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12182394760089632}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6489795918367347, "obj2": 0.21160448435737614}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( PN * PN ) - ( MDR - BR ) )", "choosing": "Min( ( MUR * ( Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.9653061224489796, "obj2": 0.01474335181554801}, {"determining": "( FirstVNF_CPU * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( RRS + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.764873308699672}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR - ( ( FirstVNF_Mem_Server - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - ( ( AMS * PN ) - ( FirstVNF_CPU_Server * ACS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Max( RMSe,MUR ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.363265306122449, "obj2": 0.48684269855038365}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,Min( BR ,Const ) ) * ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( ( MLU + RRSe ) / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8325484865589069}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( ACS + DDR ) ),AMS ) - ACS ) - ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6705749145285693}, {"determining": "( ( PN - ( ( ( DDR * ( PN - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22653061224489796, "obj2": 0.6821359232789411}, {"determining": "( ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - ( BR + FirstVNF_CPU ) ) ) ) * ( FirstVNF_RAM_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( CS + ( CS - MUC ) ) ),Min( ( ( CS - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - MUC ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Min( MUC ,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3551020408163265, "obj2": 0.4956594083523935}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MLU / ( CS * DS ) ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7979591836734694, "obj2": 0.09103551600663548}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6224489795918368, "obj2": 0.23638876965837172}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.5795918367346938, "obj2": 0.288576895568486}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8578523768763752}, {"determining": "( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * PN ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( DS * RMSe ) - MUM ) ) )", "obj1": 0.636734693877551, "obj2": 0.2340894750084811}, {"determining": "( ( ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ,( CRS - MDR ) ) ) * ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( RMSe + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4448979591836735, "obj2": 0.4019418164076272}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.0787160352084534}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * ( CRS * ARS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8795918367346939, "obj2": 0.05529994283438963}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( RRS - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.028900303160614788}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( MRS * ( FirstVNF_Mem * PN ) ) * ARS ) ) / Max( ( Min( ( CRS + CRS ) ,FirstVNF_CPU ) - FirstVNF_CPU ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR * DS ) - ( ( ( ( CS / CS ) - RRSe ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07033055794970386}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7061224489795919, "obj2": 0.15898089136827376}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU / Const ) ) + ( ( Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) * Min( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ) ,( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( MUM - ( RMSe - ( MLU / MUC ) ) ) ) )", "obj1": 0.6469387755102041, "obj2": 0.2177440796470639}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( ( BR - MDR ) - ( CRS + FirstVNF_Mem ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ARS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Min( Max( RCSe,DS ) ,MUM ) * RMSe ) ,MUM ) * ( RRSe - ( RMSe + RCSe ) ) ) ) ,( ( Min( RRSe ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.028900303160614788}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Max( MRS,AMS ) * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( RMSe - MUR ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3448979591836735, "obj2": 0.5172934019425298}, {"determining": "( Max( Max( FirstVNF_Mem,MDR ),BR ) + ( PN * ARS ) )", "choosing": "( Max( Max( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ),MLU ),Min( ( Min( MUM ,Min( ( ( MUC / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) ,( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( MUM - MUC ) ) ) ),MUC ) / ( ( ( DS / RCSe ) - RCSe ) * ( DS - ( ( MUM + CS ) + CS ) ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38532181924119846}, {"determining": "( PN * ( ( ( ( MDR / ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,( ACS - FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) - Min( ( ( FirstVNF_Mem / ( RRS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.10963403788136264}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.08439359781960022}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( PN * Min( Min( Min( ( ( ARS - RRS ) * RRS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ,( Min( PN ,MDR ) * ( PN + ACS ) ) ) ) - ( MRS * ( RRS + BR ) ) )", "choosing": "Min( ( RRSe / ( DS * RMSe ) ) ,( DS / ( ( RMSe * CS ) * ( ( DS / ( Max( RCSe,MUR ) - ( Min( RRSe ,RCSe ) - RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9040816326530612, "obj2": 0.042723577246180505}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}], "24": [{"determining": "( ( PN * Min( Min( Min( ( ( ARS - RRS ) * RRS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ,( Min( PN ,MDR ) * ( PN + ACS ) ) ) ) - ( MRS * ( RRS + BR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + DS ) - ( CS * ( ( ( ( RRSe - CS ) + ( ( MUM + MLU ) + Min( MUC ,Max( RMSe,CS ) ) ) ) * RRSe ) - ( MUC - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * ( Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) - ( BR + MRS ) ) + Min( ( BR + FirstVNF_CPU ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( RCSe / Max( Max( CS,CS ),MUR ) ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( Max( ( Max( FirstVNF_RAM_Server,Max( PN,FirstVNF_CPU ) ) - MRS ),MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( MUR - MUR ),( MLU - ( ( MUM + DS ) + ( RMSe * MUR ) ) ) ) ) * Max( ( Min( Min( Max( Min( Max( MUM,MUR ) ,MLU ),CS ) ,( MUR * MUM ) ) ,MLU ) + ( RCSe * RCSe ) ),MUR ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( MUR / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,RRSe ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.6, "obj2": 0.2570768882682101}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe * ( ( MUC / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.23157575246807616}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( CRS - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - ( ( RCSe / RRSe ) + ( CS + ( MUC - RMSe ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.0644606093767669}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( ( AMS * PN ) - ( MDR - BR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.3227151553582536}, {"determining": "( ( Min( PN ,DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( Min( DDR ,Min( Const ,( ARS * FirstVNF_CPU ) ) ) * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( DS - RMSe ) + ( CS - DS ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8174840382699056}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7163265306122449, "obj2": 0.15858740779687228}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Max( MRS,AMS ) * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( RMSe - MUR ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3448979591836735, "obj2": 0.5172934019425298}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,( BR + MRS ) ) + Max( FirstVNF_RAM_Server,Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( ( RMSe + Max( ( RCSe - RMSe ),RRSe ) ),MUC ) ),( MUM + ( CS - MUM ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( MUR - RMSe ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,Min( DS ,RCSe ) ) ) ) - ( Min( Min( RCSe ,( MUR + RCSe ) ) ,( Max( RRSe,DS ) + DS ) ) + MUM ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.33155441240540867}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( FirstVNF_Mem - Const ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( MLU / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( ( ( ( Min( Min( MUC ,CS ) ,Min( DS ,Max( RCSe,RCSe ) ) ) - ( MLU * ( RCSe - MUC ) ) ) - Min( ( ( RMSe * Max( MLU,MUM ) ) * ( MUM - MLU ) ) ,RCSe ) ) / ( RRSe / Max( RCSe,MUC ) ) ) - Max( MUC,MUR ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18984755502780845}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Max( MRS,AMS ) * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5507395740492265}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe * ( ( DS / RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.5, "obj2": 0.3444922811972396}, {"determining": "( Max( FirstVNF_CPU_Server,( ACS + ( PN - FirstVNF_Mem_Server ) ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + Min( RRSe ,( RCSe + MLU ) ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08979591836734693, "obj2": 0.8889187085770305}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN * PN ) - ( MDR - BR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( CS - MUC ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7816326530612245, "obj2": 0.0973221783477967}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( ARS - MRS ) + ( ACS - ( Max( Max( ( PN + FirstVNF_RAM ),FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),( CS * Min( RCSe ,CS ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - RRSe ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3122932340919859}, {"determining": "( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "Min( ( MUR * ( Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.773469387755102, "obj2": 0.10182395819591297}, {"determining": "( Min( MRS ,AMS ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_RAM ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( MLU,Max( ( RMSe * ( Max( RRSe,MLU ) * Max( RCSe,( RMSe / DS ) ) ) ),( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6795918367346939, "obj2": 0.18122343321259995}, {"determining": "( ( PN - ( FirstVNF_RAM_Server + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * Max( Max( ARS,BR ),Max( FirstVNF_RAM,RRS ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( MLU - MUM ) ,MUM ) ) ) - ( MUC - MUC ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( ( BR - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( FirstVNF_Mem_Server - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( Max( MUR,MUM ) ,MUC ) ) ) - MUC ) ) - ( Min( RMSe ,MLU ) - ( CS + DS ) ) )", "obj1": 0.9244897959183673, "obj2": 0.0339048923258193}, {"determining": "( ( Max( ( ARS + AMS ),( FirstVNF_Mem / RRS ) ) - FirstVNF_CPU ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Min( RMSe ,( Max( ( Min( RRSe ,( MUM / MLU ) ) / RRSe ),RCSe ) + Max( CS,Max( MUC,MUM ) ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,Min( ( RMSe * RRSe ) ,Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU / Const ) ) + ( ( Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) * Min( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ) ,( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( MUM - ( RMSe - ( MLU / MUC ) ) ) ) )", "obj1": 0.6469387755102041, "obj2": 0.2177440796470639}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - ( Const / RRS ) ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( ( DDR - MDR ) - MDR ) ) ) * ( ( CRS - ( ( FirstVNF_CPU + AMS ) * ( AMS - FirstVNF_RAM ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe * MUC ) * ( RMSe / CS ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( CS / MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3693877551020408, "obj2": 0.4853184934651023}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( MRS * ( FirstVNF_Mem * PN ) ) * ARS ) ) / Max( ( Min( ( CRS + CRS ) ,FirstVNF_CPU ) - FirstVNF_CPU ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR * DS ) - ( ( ( ( CS / CS ) - RRSe ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07033055794970386}, {"determining": "( ( MDR - BR ) - ( AMS * Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( PN + ACS ) + Min( PN ,MDR ) ) ) ) )", "choosing": "Min( ( RRSe / ( DS * RMSe ) ) ,( DS / ( ( ( MUM / ( ( RRSe / MUM ) + Max( Min( RMSe ,RRSe ),Min( MUM ,RMSe ) ) ) ) - CS ) / ( RMSe * ( Min( CS ,RCSe ) * Max( MUR,MLU ) ) ) ) ) )", "obj1": 0.5510204081632653, "obj2": 0.2990891535468763}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( CRS - MDR ) ) ) - ( Max( ( ( ( CRS + ( BR * MDR ) ) / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( MUR ,( Max( DS,MUM ) / RMSe ) ) / MUR ) / Max( RRSe,( RCSe + Min( ( RMSe / RCSe ) ,DS ) ) ) ),MLU ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6918367346938775, "obj2": 0.17639222561265522}, {"determining": "( ( PN / ( Max( ( DDR * ( MDR / ( Min( PN ,FirstVNF_RAM ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8492457996152423}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MLU / ( CS * DS ) ) ,( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.7979591836734694, "obj2": 0.09103551600663548}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( ( MDR - BR ) - ( RRS - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( Max( MUM,MLU ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04113639207692926}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) * ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ARS - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( CS ,( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( MUM / RRSe ) + ( RCSe + CS ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5664155101617917}, {"determining": "( ( MDR - ( ( FirstVNF_CPU * Max( BR,FirstVNF_CPU_Server ) ) * ARS ) ) * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( MUR + ( Max( MUM,RMSe ) + RCSe ) ) + ( MUM + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MUC / RMSe ),RRSe ) ,Max( MUM,MUC ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.736734693877551, "obj2": 0.11985760886298696}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * ( CRS * ARS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8795918367346939, "obj2": 0.05529994283438963}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( ( ( ( MDR + ( ACS - PN ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( MRS / BR ) ) ) ,( CRS - MDR ) ) ) / ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( Max( Max( ( DS + RCSe ),Max( RMSe,MUC ) ),( ( RRSe - MUM ) + Min( RMSe ,RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.6820487858442903}, {"determining": "( ( PN * Min( Min( Min( ( ( ARS - RRS ) * RRS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ,( Min( PN ,MDR ) * ( PN + ACS ) ) ) ) - ( MRS * ( RRS + BR ) ) )", "choosing": "Min( ( RRSe / ( DS * RMSe ) ) ,( DS / ( ( RMSe * CS ) * ( ( DS / ( Max( RCSe,MUR ) - ( Min( RRSe ,RCSe ) - RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9040816326530612, "obj2": 0.042723577246180505}, {"determining": "( Max( FirstVNF_CPU_Server,( ( AMS + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) - ACS ) ) * ( PN * RRS ) )", "choosing": "( ( Max( RMSe,Max( MUM,( ( RCSe / Max( ( RRSe / MLU ),RRSe ) ) + ( CS + RCSe ) ) ) ) - ( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe - DS ) ) + ( Max( MUM,MUC ) * Max( RMSe,MUR ) ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( ( MLU / DS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7901195590471979}, {"determining": "( ( AMS * PN ) - ( ( Const + FirstVNF_CPU ) - MDR ) )", "choosing": "Min( Min( Min( RMSe ,( ( ( ( Min( MLU ,MLU ) + ( RCSe * MUM ) ) + DS ) / RMSe ) / RMSe ) ) ,( Max( ( ( MUM / ( MUC - MUR ) ) + MLU ),( ( ( CS * ( MUM * MLU ) ) + RCSe ) + ( CS + ( RMSe - RCSe ) ) ) ) + ( Max( ( Max( ( MLU - RMSe ),( DS + MUR ) ) * RMSe ),MUM ) + RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MLU - RMSe ) ) ) ) )", "obj1": 0.6653061224489796, "obj2": 0.20283258407840682}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS * FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( ( Max( AMS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + DDR ) ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUR ) ) ) + ( ( RCSe / RRSe ) + MLU ) ) + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8258972030842451}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6224489795918368, "obj2": 0.23638876965837172}, {"determining": "( ( ( MDR / ( ACS * ARS ) ) - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( DDR - FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + ( MUC - RMSe ) ) ) ) ),( Max( RCSe,( ( MUR + ( RCSe / ( DS + MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * Min( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ,( RMSe * DS ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8368289799869595}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( DDR + ( ( PN - MDR ) * DDR ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) * ( ( ACS - FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU / MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( MUC / Min( MUR ,DS ) ) ) ),( ( CS - RRSe ) + ( CS * ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,( ( MLU - RMSe ) + DS ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8995566193243397}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8578523768763752}, {"determining": "( ( ( DDR - PN ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_Mem ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( DS ,RCSe ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * DS ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7278017842250796}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( FirstVNF_RAM_Server / ( Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,Max( MRS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RCSe,RCSe ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) - ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) + ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.46530612244897956, "obj2": 0.3762057212441679}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.3156265086641463}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( CRS - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.3762057212441679}, {"determining": "( FirstVNF_CPU * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( RRS + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.764873308699672}, {"determining": "( ( Min( PN ,DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) * ( Min( DDR ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( DS - RMSe ) + ( CS - DS ) ) - RRSe ) + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.16122448979591836, "obj2": 0.7801513296514178}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ,Min( BR ,Const ) ) * ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - ACS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( ( MLU + RRSe ) / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8325484865589069}, {"determining": "( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) * ( Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( MUR + ( Max( RMSe,MUM ) + RCSe ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.10884522118860435}, {"determining": "( Min( RRS ,MDR ) * ( ( ACS - AMS ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( ( ( MUR / Min( Min( ( RCSe * RCSe ) ,( ( RRSe + MLU ) + MLU ) ) ,MUM ) ) - Max( MUR,MUM ) ) - ( Max( DS,Max( DS,Max( MUM,MUC ) ) ) * ( ( ( DS - Max( ( MLU * CS ),RCSe ) ) + ( ( ( MUR / DS ) + Min( MUM ,RMSe ) ) * ( ( MUR + CS ) - DS ) ) ) * ( ( MUM - ( ( RMSe * RRSe ) + MUM ) ) * DS ) ) ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7494899820038121}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( ( FirstVNF_CPU / DDR ) + AMS ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( RMSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5067892151804686}, {"determining": "( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) * ( Min( FirstVNF_Mem_Server ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( ( CS / ( RCSe / DS ) ) + RMSe ) + MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MUC / RMSe ),RRSe ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.11597243612197022}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.08439359781960022}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( RMSe - MUR ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.07442399557944306}, {"determining": "( PN * ( ( ( ( MDR / ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU ) * ARS ) ) / Max( ( BR + MRS ),FirstVNF_CPU ) ) - Min( ( ( FirstVNF_Mem / ( RRS - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11045963266500125}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6061224489795919, "obj2": 0.2482318581513657}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( ACS + DDR ) ),AMS ) - ACS ) - ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( BR / MRS ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6705749145285693}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - ( CRS / ( Max( Max( ACS,( DDR - AMS ) ),PN ) - ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ACS ,MDR ) ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RRSe ) + ( Max( ( MUR / ( MUR * RMSe ) ),MUM ) + MLU ) ) ) * MUR ) - ( ( RCSe - RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( Max( Max( FirstVNF_Mem,MDR ),BR ) + ( PN * ARS ) )", "choosing": "( Max( Max( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ),MLU ),Min( ( Min( MUM ,Min( ( ( MUC / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) ,( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( MUM - MUC ) ) ) ),MUC ) / ( ( ( DS / RCSe ) - RCSe ) * ( DS - ( ( MUM + CS ) + CS ) ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38532181924119846}, {"determining": "( ACS * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Max( ( Max( ( MLU - RMSe ),( MLU * CS ) ) / RMSe ),MUM ) + RMSe ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.11020408163265306, "obj2": 0.8578523768763752}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_Mem ) - ( BR + MRS ) ) + Min( ( FirstVNF_Mem_Server * ( PN - MDR ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe / ( DS * RMSe ) ) ,( DS / ( ( ( DS * ( Max( Min( RMSe ,RRSe ),( MUM - CS ) ) + Min( DS ,MUR ) ) ) - CS ) / ( RMSe * CS ) ) ) )", "obj1": 0.4489795918367347, "obj2": 0.39539663440268225}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * PN ) - ( MDR - BR ) )", "choosing": "Min( ( MUR * ( Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9755102040816327, "obj2": 0.010039403934814414}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Const * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( RMSe - MUR ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2431585836167596}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.5591836734693878, "obj2": 0.29399670336942}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7494899820038121}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( ( ( DDR * ( PN - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7050894838777635}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.29207330736761}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.16666149412683298}, {"determining": "( ( FirstVNF_RAM_Server / ( RRS + ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_RAM_Server / DDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( ( RMSe / MUC ) / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( Min( Max( MUM,DS ) ,Max( DS,RCSe ) ) + ( RMSe * RRSe ) ) ) - ( ( DS - MLU ) - RMSe ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( ( FirstVNF_CPU_Server - BR ) - ( RRS - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Min( Max( RCSe,DS ) ,MUM ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( MUM,DS ) ) )", "obj1": 0.9346938775510204, "obj2": 0.03181236125131525}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7061224489795919, "obj2": 0.15898089136827376}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}], "25": [{"determining": "( BR + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * ( CRS * ARS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( MUC * ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Min( Min( Min( ( ( ARS - RRS ) * RRS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ,( Min( PN ,MDR ) * ( PN + ACS ) ) ) ) - ( MRS * ( RRS + BR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + DS ) - ( CS * ( ( ( ( RRSe - CS ) + ( ( MUM + MLU ) + Min( MUC ,Max( RMSe,CS ) ) ) ) * RRSe ) - ( MUC - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - ( Const / RRS ) ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( ( DDR - MDR ) - MDR ) ) ) * ( ( CRS - ( ( FirstVNF_CPU + AMS ) * ( AMS - FirstVNF_RAM ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe * MUC ) * ( RMSe / CS ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * ( CS / MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.3693877551020408, "obj2": 0.4853184934651023}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( ( FirstVNF_CPU / DDR ) + AMS ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( RMSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5067892151804686}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( ( MDR - BR ) - ( RRS - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.022109691313257174}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( ( ( ( MDR + ( ACS - PN ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( MRS / BR ) ) ) ,( CRS - MDR ) ) ) / ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( Max( Max( ( DS + RCSe ),Max( RMSe,MUC ) ),( ( RRSe - MUM ) + Min( RMSe ,RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.6820487858442903}, {"determining": "( ( AMS * PN ) - ( MDR / MRS ) )", "choosing": "( ( ( ( ( ( Max( Max( MUC,DS ),RCSe ) + RRSe ) / RRSe ) + ( CS + MUM ) ) - ( CS * DS ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6346938775510204, "obj2": 0.21909423504200676}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - DDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * Min( BR ,( ( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_Mem_Server ) / ( ( PN / DDR ) / ( RRS * FirstVNF_Mem ) ) ) - CRS ) ) ) ) )", "choosing": "( ( CS * MUC ) - ( DS - RRSe ) )", "obj1": 0.7204081632653061, "obj2": 0.1559324633644541}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.563265306122449, "obj2": 0.2916535315153936}, {"determining": "( ( ACS - ( BR + MRS ) ) + Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,Min( Min( FirstVNF_RAM ,( ACS + ( AMS - MDR ) ) ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( Max( ( ( CS - RRSe ) + ( RMSe + RCSe ) ),Max( RMSe,Max( MUM,MUC ) ) ) * ( RRSe / ( DS / RMSe ) ) ) + ( Max( Max( Max( RRSe,Max( MUM,MUC ) ),( ( CS - MUC ) + MUR ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( RMSe * RCSe ),( ( RMSe * RRSe ) + Min( Max( MUM,MLU ) ,MUM ) ) ) - ( ( ( ( MUR / MUM ) - Min( MLU ,RRSe ) ) * ( CS + MUC ) ) - RMSe ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3106126511844511}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,( BR + MRS ) ) + Max( FirstVNF_RAM_Server,Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( ( RMSe + Max( ( RCSe - RMSe ),RRSe ) ),MUC ) ),( MUM + ( CS - MUM ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( MUR - RMSe ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,Min( DS ,RCSe ) ) ) ) - ( Min( Min( RCSe ,( MUR + RCSe ) ) ,( Max( RRSe,DS ) + DS ) ) + MUM ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.33155441240540867}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Max( MRS,AMS ) * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5507395740492265}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe * ( ( DS / RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.5, "obj2": 0.3444922811972396}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5877551020408164, "obj2": 0.26980294262706317}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * Max( DDR,PN ) ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.9714285714285714, "obj2": 0.015955263471089384}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( CRS - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.05957896798615756}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( Max( ( Max( FirstVNF_RAM_Server,Max( PN,FirstVNF_CPU ) ) - MRS ),MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( MUR - MUR ),( MLU - ( ( MUM + DS ) + ( RMSe * MUR ) ) ) ) ) * Max( ( Min( Min( Max( Min( Max( MUM,MUR ) ,MLU ),CS ) ,( MUR * MUM ) ) ,MLU ) + ( RCSe * RCSe ) ),MUR ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( RRS * FirstVNF_CPU ) + Min( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_RAM ) ) ,( Min( ARS ,Max( ( ( DDR * MRS ) - ( Const + ( FirstVNF_RAM + Const ) ) ),( ( ( AMS - FirstVNF_Mem ) / DDR ) * AMS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( Max( Max( MUM,MUC ),MUM ) + MUM ) + MUR ) ,( ( RMSe + MUR ) - ( ( ( DS * ( ( ( MUC * MUM ) * MUM ) - ( MUC * Min( MUR ,RCSe ) ) ) ) - ( MUC - Max( RCSe,MUC ) ) ) * CS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * ( CRS * ARS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe * ( ( MUC / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8775510204081632, "obj2": 0.052141251454003175}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * ( FirstVNF_CPU + CRS ) ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( Max( MUM,DS ) / RMSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8631641750788178}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ACS - DDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) ) * ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * Max( BR,BR ) )", "choosing": "Min( ( MUR + ( ( Max( Max( RMSe,( ( DS / RCSe ) * RCSe ) ),MUM ) - MUM ) + RCSe ) ) ,( ( MLU - MUR ) - ( DS * ( RMSe / MUR ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4050367552562173}, {"determining": "( ( PN - ( FirstVNF_RAM_Server + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * Max( Max( ARS,BR ),Max( FirstVNF_RAM,RRS ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( MLU - MUM ) ,MUM ) ) ) - ( MUC - MUC ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( PN - ( ( ( DDR * ( PN - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.7739440336764815}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( MUC + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8144786039299714}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( MRS * ( FirstVNF_Mem * PN ) ) * ARS ) ) / Max( ( Min( ( CRS + CRS ) ,FirstVNF_CPU ) - FirstVNF_CPU ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR * DS ) - ( ( ( ( CS / CS ) - RRSe ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07033055794970386}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.34285714285714286, "obj2": 0.525303502992315}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( PN * Min( Min( Min( ( ( ARS - RRS ) * RRS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ,( Min( PN ,MDR ) * ( PN + ACS ) ) ) ) - ( MRS * ( RRS + BR ) ) )", "choosing": "Min( ( RRSe / ( DS * RMSe ) ) ,( DS / ( ( RMSe * CS ) * ( ( DS / ( Max( RCSe,MUR ) - ( Min( RRSe ,RCSe ) - RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9040816326530612, "obj2": 0.042723577246180505}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( ( PN - ( ( ( RRS / BR ) + FirstVNF_RAM ) / BR ) ) * ( ACS * Min( FirstVNF_RAM ,( Max( ( MDR * ( ACS + FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( ( ( CS / DS ) - MUC ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42857142857142855, "obj2": 0.420324446582125}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Const * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( RMSe - MUR ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ( MDR / ( ACS * ARS ) ) - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( DDR - FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + ( MUC - RMSe ) ) ) ) ),( Max( RCSe,( ( MUR + ( RCSe / ( DS + MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * Min( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ,( RMSe * DS ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8368289799869595}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.3156265086641463}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Max( MRS,AMS ) * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( RMSe - MUR ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3448979591836735, "obj2": 0.5172934019425298}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( CRS - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.3762057212441679}, {"determining": "( ( ( BR - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( FirstVNF_Mem_Server - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( Max( MUR,MUM ) ,MUC ) ) ) - MUC ) ) - ( Min( RMSe ,MLU ) - ( CS + DS ) ) )", "obj1": 0.9244897959183673, "obj2": 0.0339048923258193}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( FirstVNF_RAM_Server / ( Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,Max( MRS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_CPU_Server ,ACS ) ) )", "choosing": "( ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RCSe,RCSe ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) - ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) + ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.46530612244897956, "obj2": 0.3762057212441679}, {"determining": "( ( MDR - ( ( FirstVNF_CPU * Max( BR,FirstVNF_CPU_Server ) ) * ARS ) ) * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( MUR + ( Max( MUM,RMSe ) + RCSe ) ) + ( MUM + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MUC / RMSe ),RRSe ) ,Max( MUM,MUC ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.736734693877551, "obj2": 0.11985760886298696}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - CRS ) ) ,( ( PN + ACS ) * Min( Min( Const ,ACS ) ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( MUR * ( Min( ( Max( Max( RMSe,Max( MUM,RMSe ) ),( MUM + ( CS - MUC ) ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( DS ,MLU ) - MUR ) - Max( ( ( MUM + MUM ) + Min( Max( MLU,MUC ) ,Min( Max( DS,( CS * RCSe ) ) ,RMSe ) ) ),( ( ( DS * CS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) ) ) )", "obj1": 0.5979591836734693, "obj2": 0.257655438759924}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( MUC / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7644063322453023}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( Min( RRS ,MDR ) * ( ( ACS - AMS ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( ( ( MUR / Min( Min( ( RCSe * RCSe ) ,( ( RRSe + MLU ) + MLU ) ) ,MUM ) ) - Max( MUR,MUM ) ) - ( Max( DS,Max( DS,Max( MUM,MUC ) ) ) * ( ( ( DS - Max( ( MLU * CS ),RCSe ) ) + ( ( ( MUR / DS ) + Min( MUM ,RMSe ) ) * ( ( MUR + CS ) - DS ) ) ) * ( ( MUM - ( ( RMSe * RRSe ) + MUM ) ) * DS ) ) ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7494899820038121}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( MRS * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU_Server - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * Max( BR,Max( FirstVNF_RAM_Server,( BR / RRS ) ) ) )", "choosing": "( ( DS * RMSe ) - ( MUC + MUR ) )", "obj1": 0.7918367346938775, "obj2": 0.09267535461799435}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) * ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ARS - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( CS ,( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( MUM / RRSe ) + ( RCSe + CS ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5664155101617917}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2431585836167596}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6551020408163265, "obj2": 0.20809452513047325}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( CRS - MDR ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - ( ( RCSe / RRSe ) + ( CS + ( MUC - RMSe ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8551020408163266, "obj2": 0.0644606093767669}, {"determining": "( FirstVNF_Mem_Server * ( Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( MUR + ( Max( RMSe,MUM ) + RCSe ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( ( MUM / ( RMSe + ( RMSe / RCSe ) ) ) - MUR ) ) )", "obj1": 0.7285714285714285, "obj2": 0.12990851898349232}, {"determining": "( Max( DDR,PN ) * ( ( RRS + CRS ) + RRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8954588297507113}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7979591836734694, "obj2": 0.08906303230489586}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( CRS * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( RMSe - MUR ) ,Min( DS ,RMSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7816326530612245, "obj2": 0.0967687922477335}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( ( BR + MRS ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( ( RMSe * CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.7896738702300312}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS * FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( ( Max( AMS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + DDR ) ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUR ) ) ) + ( ( RCSe / RRSe ) + MLU ) ) + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8258972030842451}, {"determining": "( Max( Max( FirstVNF_Mem,MDR ),BR ) + ( PN * ARS ) )", "choosing": "( Max( Max( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ),MLU ),Min( ( Min( MUM ,Min( ( ( MUC / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) ,( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( MUM - MUC ) ) ) ),MUC ) / ( ( ( DS / RCSe ) - RCSe ) * ( DS - ( ( MUM + CS ) + CS ) ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38532181924119846}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( ( AMS * PN ) - ( MDR - BR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( CS + ( ( DS * MLU ) / ( MUR / DS ) ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - MUC ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3212844427733953}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Max( ( MDR * ( ACS + ACS ) ),FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + DS ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.07755374716115586}, {"determining": "( FirstVNF_CPU * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS - FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( Max( MUC,RRSe ) * RRSe ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.08979591836734693, "obj2": 0.8813750044522061}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( FirstVNF_Mem_Server - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe * RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9142857142857143, "obj2": 0.03751027977292263}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU / Const ) ) + ( ( Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) * Min( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ) ,( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( MUM - ( RMSe - ( MLU / MUC ) ) ) ) )", "obj1": 0.6469387755102041, "obj2": 0.2177440796470639}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( ( FirstVNF_CPU_Server - BR ) - ( RRS - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Min( Max( RCSe,DS ) ,MUM ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( MUM,DS ) ) )", "obj1": 0.9346938775510204, "obj2": 0.03181236125131525}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18984755502780845}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6224489795918368, "obj2": 0.23638876965837172}, {"determining": "( ( PN / ( Max( ( DDR * ( MDR / ( Min( PN ,FirstVNF_RAM ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8492457996152423}, {"determining": "( Min( ( ( PN - MDR ) / FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( CS * DS ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0032314268114980002}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "Min( Min( Min( RMSe ,( ( ( ( Min( MLU ,MLU ) + ( RCSe * MUM ) ) + DS ) / RMSe ) / RMSe ) ) ,( Max( ( ( MUM / ( MUC - MUR ) ) + MLU ),( ( ( CS * ( MUM * MUR ) ) + RCSe ) + ( CS + ( RMSe - RCSe ) ) ) ) + ( Max( ( Max( ( MLU - RMSe ),( MLU + MUR ) ) * RMSe ),MUM ) + RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MLU - RMSe ) ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.20137313907324292}, {"determining": "( ( MDR / ( ( FirstVNF_CPU * MRS ) * ARS ) ) * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe * ( ( MUC / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7673469387755102, "obj2": 0.1055540383946736}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / Min( ARS ,( Const + Const ) ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( Const + RRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + Min( DS ,CS ) ) + Min( Max( MUC,RRSe ) ,RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( MLU,RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7494899820038121}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - ( CRS / ( Max( Max( ACS,( DDR - AMS ) ),PN ) - ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ACS ,MDR ) ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RRSe ) + ( Max( ( MUR / ( MUR * RMSe ) ),MUM ) + MLU ) ) ) * MUR ) - ( ( RCSe - RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( RMSe ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6061224489795919, "obj2": 0.2482318581513657}, {"determining": "( ( AMS * PN ) - ( ( Const + FirstVNF_CPU ) - MDR ) )", "choosing": "Min( Min( Min( RMSe ,( ( ( ( Min( MLU ,MLU ) + ( RCSe * MUM ) ) + DS ) / RMSe ) / RMSe ) ) ,( Max( ( ( MUM / ( MUC - MUR ) ) + MLU ),( ( ( CS * ( MUM * MLU ) ) + RCSe ) + ( CS + ( RMSe - RCSe ) ) ) ) + ( Max( ( Max( ( MLU - RMSe ),( DS + MUR ) ) * RMSe ),MUM ) + RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MLU - RMSe ) ) ) ) )", "obj1": 0.6653061224489796, "obj2": 0.20283258407840682}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( CRS - MDR ) ) ) - ( Max( ( ( ( CRS + ( BR * MDR ) ) / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( MUR ,( Max( DS,MUM ) / RMSe ) ) / MUR ) / Max( RRSe,( RCSe + Min( ( RMSe / RCSe ) ,DS ) ) ) ),MLU ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6918367346938775, "obj2": 0.17639222561265522}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6795918367346939, "obj2": 0.18122343321259995}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( ( RMSe / MUC ) / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.16666149412683298}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( MUR / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,RRSe ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.6, "obj2": 0.2570768882682101}], "26": [{"determining": "( ( PN - ( FirstVNF_RAM_Server + MRS ) ) + Min( ( ( RRS + CRS ) + RRS ) ,( FirstVNF_Mem_Server * Max( Max( ARS,BR ),Max( FirstVNF_RAM,RRS ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( RRSe / RCSe ) ) ) - ( MUC - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * ( CRS * ARS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( MUC * ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( ( PN - ( ( ( RRS / BR ) + FirstVNF_RAM ) / BR ) ) * ( ACS * Min( FirstVNF_RAM ,( Max( ( MDR * ( ACS + FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( ( ( CS / DS ) - MUC ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42857142857142855, "obj2": 0.420324446582125}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.5530612244897959, "obj2": 0.29832338098291317}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.3693754666012872}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( ( ( ( MDR + ( ACS - PN ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( MRS / BR ) ) ) ,( CRS - MDR ) ) ) / ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( Max( Max( ( DS + RCSe ),Max( RMSe,MUC ) ),( ( RRSe - MUM ) + Min( RMSe ,RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.6820487858442903}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6551020408163265, "obj2": 0.20809452513047325}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( MDR * ( ACS * FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( ( Max( AMS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + DDR ) ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUR ) ) ) + ( ( RCSe / RRSe ) + MLU ) ) + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.1326530612244898, "obj2": 0.8258972030842451}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( ACS - ( BR + MRS ) ) + Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,Min( Min( FirstVNF_RAM ,( ACS + ( AMS - MDR ) ) ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( Max( ( ( CS - RRSe ) + ( RMSe + RCSe ) ),Max( RMSe,Max( MUM,MUC ) ) ) * ( RRSe / ( DS / RMSe ) ) ) + ( Max( Max( Max( RRSe,Max( MUM,MUC ) ),( ( CS - MUC ) + MUR ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( RMSe * RCSe ),( ( RMSe * RRSe ) + Min( Max( MUM,MLU ) ,MUM ) ) ) - ( ( ( ( MUR / MUM ) - Min( MLU ,RRSe ) ) * ( CS + MUC ) ) - RMSe ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3106126511844511}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Max( MRS,AMS ) * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.36122448979591837, "obj2": 0.491411739003483}, {"determining": "( ( ( MDR / ( ACS * ARS ) ) - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( DDR - FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + ( MUC - RMSe ) ) ) ) ),( Max( RCSe,( ( MUR + ( RCSe / ( DS + MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * Min( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ,( RMSe * DS ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8368289799869595}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( ( BR + MRS ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( ( RMSe * CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.7896738702300312}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6224489795918368, "obj2": 0.23638876965837172}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - DDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * Min( BR ,( ( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_Mem_Server ) / ( ( PN / DDR ) / ( RRS * FirstVNF_Mem ) ) ) - CRS ) ) ) ) )", "choosing": "( ( CS * MUC ) - ( DS - RRSe ) )", "obj1": 0.7204081632653061, "obj2": 0.1559324633644541}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( PN - ( ( FirstVNF_RAM_Server + ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) * ( ( BR / MDR ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Min( RCSe ,( CS * Max( MUR,( ( Max( MLU,MUC ) + RMSe ) - MUC ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( ( FirstVNF_CPU / DDR ) + AMS ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( RMSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5067892151804686}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) * ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ARS - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( CS ,( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( MUM / RRSe ) + ( RCSe + CS ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5664155101617917}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( Max( ( Max( FirstVNF_RAM_Server,Max( PN,FirstVNF_CPU ) ) - MRS ),MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( MUR - MUR ),( MLU - ( ( MUM + DS ) + ( RMSe * MUR ) ) ) ) ) * Max( ( Min( Min( Max( Min( Max( MUM,MUR ) ,MLU ),CS ) ,( MUR * MUM ) ) ,MLU ) + ( RCSe * RCSe ) ),MUR ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( MDR / ( ( FirstVNF_CPU * MRS ) * ARS ) ) * ( Min( Max( FirstVNF_CPU_Server,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe * ( ( DS / RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.10931798668606385}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( AMS * PN ) - Min( FirstVNF_RAM_Server ,Max( PN,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS * DS ) - ( Max( RCSe,RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( RCSe,RRSe ) )", "obj1": 0.636734693877551, "obj2": 0.21736806534141798}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUR ) ) ) + ( ( RCSe / RRSe ) + MLU ) ) + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.5714285714285714, "obj2": 0.28882893919616015}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( CRS - MDR ) ) ) - ( Max( ( ( ( CRS + ( BR * MDR ) ) / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) + Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( MUR ,( Max( DS,MUM ) / RMSe ) ) / MUR ) / Max( RRSe,( RCSe + Min( ( RMSe / RCSe ) ,DS ) ) ) ),MLU ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6918367346938775, "obj2": 0.17639222561265522}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6061224489795919, "obj2": 0.2481473049397541}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ACS - DDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) ) * ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * Max( BR,BR ) )", "choosing": "Min( ( MUR + ( ( Max( Max( RMSe,( ( DS / RCSe ) * RCSe ) ),MUM ) - MUM ) + RCSe ) ) ,( ( MLU - MUR ) - ( DS * ( RMSe / MUR ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4050367552562173}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( PN - ( ( ( DDR * ( PN - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.7739440336764815}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.34285714285714286, "obj2": 0.525303502992315}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( MDR / ( ( FirstVNF_CPU * MRS ) * ARS ) ) * ( Min( Max( FirstVNF_RAM,AMS ) ,CRS ) * ( PN - MDR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( MUR + Min( Max( MUM,DS ) ,MUM ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MUC / RMSe ),RRSe ) ,MUC ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7408163265306122, "obj2": 0.11727277783314628}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( ( ACS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server - BR ) - ( RRS - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Min( Max( RCSe,DS ) ,MUM ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - ( CS - MUC ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020499187253123687}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( AMS * AMS ) - ( MDR - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( Min( MUM ,MUM ) * RMSe ) + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe * MUC ) * ( RMSe / MLU ) ) ) ,Max( RMSe,RCSe ) ),RRSe ) * ( RMSe / MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.24130739518213365}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.563265306122449, "obj2": 0.2916535315153936}, {"determining": "( ( ( MDR * Const ) * ( ( ( ( ARS * ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) ) / MDR ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem - Min( Min( MDR ,AMS ) ,AMS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUC - MUR ) / Min( ( RRSe - ( Min( ( DS + MUR ) ,MLU ) - ( MUM / CS ) ) ) ,MUC ) ) ,( ( RMSe / RRSe ) - ( ( ( MUC - MUC ) - Max( MUC,( ( RMSe * RRSe ) + Min( ( MLU - MUM ) ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.8204081632653061, "obj2": 0.0759505779388541}, {"determining": "( ( PN * Min( Min( Min( ( ( ARS - RRS ) * RRS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ,( Min( PN ,MDR ) * ( PN + ACS ) ) ) ) - ( MRS * ( RRS + BR ) ) )", "choosing": "Min( ( RRSe / ( DS * RMSe ) ) ,( DS / ( ( RMSe * CS ) * ( ( DS / ( Max( RCSe,MUR ) - ( Min( RRSe ,RCSe ) - RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9040816326530612, "obj2": 0.042723577246180505}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Const * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( RMSe - MUR ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7040816326530612, "obj2": 0.1645193351537832}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * ( FirstVNF_CPU + CRS ) ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( Max( MUM,DS ) / RMSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8631641750788178}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * Max( DDR,PN ) ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) )", "obj1": 0.9714285714285714, "obj2": 0.015955263471089384}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.40408163265306124, "obj2": 0.44006126125196593}, {"determining": "( Max( Max( FirstVNF_Mem,MDR ),BR ) + ( PN * ARS ) )", "choosing": "( Max( Max( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ),MLU ),Min( ( Min( MUM ,Min( ( ( MUC / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) ,( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( MUM - MUC ) ) ) ),MUC ) / ( ( ( DS / RCSe ) - RCSe ) * ( DS - ( ( MUM + CS ) + CS ) ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38532181924119846}, {"determining": "( ( Min( Max( FirstVNF_CPU,ARS ) ,ARS ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,RRSe ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.810204081632653, "obj2": 0.08248859755007242}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server + ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem + PN ) ) ) )", "choosing": "( ( ( RCSe / RRSe ) + Max( Min( ( DS - MUR ) ,MLU ),RCSe ) ) - ( CS * DS ) )", "obj1": 0.7163265306122449, "obj2": 0.15839391037957123}, {"determining": "( Min( RRS ,MDR ) * ( ( ACS - AMS ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( ( ( MUR / Min( Min( ( RCSe * RCSe ) ,( ( RRSe + MLU ) + MLU ) ) ,MUM ) ) - Max( MUR,MUM ) ) - ( Max( DS,Max( DS,Max( MUM,MUC ) ) ) * ( ( ( DS - Max( ( MLU * CS ),RCSe ) ) + ( ( ( MUR / DS ) + Min( MUM ,RMSe ) ) * ( ( MUR + CS ) - DS ) ) ) * ( ( MUM - ( ( RMSe * RRSe ) + MUM ) ) * DS ) ) ) ) )", "obj1": 0.1836734693877551, "obj2": 0.7494899820038121}, {"determining": "( ( PN / ( Max( ( DDR * ( MDR / ( Min( PN ,FirstVNF_RAM ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( MUM + MUC ),Max( MUM,MUC ) ),( ( ( RRSe / RCSe ) - ( RCSe - RCSe ) ) + ( RMSe + RCSe ) ) ) * ( Max( Max( MUC,( RRSe / ( ( ( CS - MUC ) + MUM ) + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8492457996152423}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( RRS * FirstVNF_CPU ) + Min( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_RAM ) ) ,( Min( ARS ,Max( ( ( DDR * MRS ) - ( Const + ( FirstVNF_RAM + Const ) ) ),( ( ( AMS - FirstVNF_Mem ) / DDR ) * AMS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( Max( Max( MUM,MUC ),MUM ) + MUM ) + MUR ) ,( ( RMSe + MUR ) - ( ( ( DS * ( ( ( MUC * MUM ) * MUM ) - ( MUC * Min( MUR ,RCSe ) ) ) ) - ( MUC - Max( RCSe,MUC ) ) ) * CS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( ( FirstVNF_CPU_Server - BR ) - ( RRS - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Min( Max( RCSe,DS ) ,MUM ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( MUM,DS ) ) )", "obj1": 0.9469387755102041, "obj2": 0.02659898860963417}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( MRS * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU_Server - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * Max( BR,Max( FirstVNF_RAM_Server,( BR / RRS ) ) ) )", "choosing": "( ( DS * RMSe ) - ( MUC + MUR ) )", "obj1": 0.7918367346938775, "obj2": 0.09267535461799435}, {"determining": "( Min( Min( ( DDR * ( MDR / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ACS * ARS ) ) * ( CRS * ARS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( CRS,Max( FirstVNF_RAM_Server,( CRS - MDR ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe * ( ( MUC / CS ) * MUC ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8775510204081632, "obj2": 0.052141251454003175}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( CRS - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.05957896798615756}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / ( Min( AMS ,FirstVNF_RAM_Server ) * ( DDR / ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,RCSe ) ),MUM ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( RMSe * Max( ( RMSe * MUR ),CS ) ),( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4050367552562173}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( CRS * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( RMSe - MUR ) ,Min( DS ,RMSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.7816326530612245, "obj2": 0.0967687922477335}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Max( MRS,AMS ) * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5507395740492265}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( MUC + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.13877551020408163, "obj2": 0.8144786039299714}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07033055794970386}, {"determining": "( Min( ( Max( PN,ARS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( ( DDR * ( ( ( FirstVNF_CPU * PN ) * ARS ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) - FirstVNF_RAM_Server ) * ( ( CRS / AMS ) * Max( ( RRS / FirstVNF_Mem ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( ( Max( MUM,DS ) * MUC ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) + Max( RCSe,RRSe ) ) ) + ( CS - MUC ) ) ) * Max( Max( RMSe,( MUR / RMSe ) ),( ( RCSe * CS ) + DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.812284758927384}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * ( FirstVNF_CPU + CRS ) ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( Max( MUM,DS ) / RMSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8631641750788178}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + Max( MDR,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / RCSe ) * ( RRSe / MLU ) ) ,( ( RRSe / CS ) + Max( MLU,MUR ) ) ) ) / RRSe ) + ( CS - MLU ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM / Min( ( MUM / DS ) ,RCSe ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6795918367346939, "obj2": 0.18122343321259995}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( MRS * ( FirstVNF_Mem * PN ) ) * ARS ) ) / Max( ( Min( ( CRS + CRS ) ,FirstVNF_CPU ) - FirstVNF_CPU ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR * DS ) - ( ( ( ( CS / CS ) - RRSe ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07033055794970386}, {"determining": "( FirstVNF_CPU * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS - FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( Max( MUC,RRSe ) * RRSe ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8861088546980519}, {"determining": "( ( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) - ( MRS * ( RRS + BR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + DS ) - ( CS * ( ( ( ( RRSe - CS ) + ( ( MUM + MLU ) + Min( RMSe ,Max( RMSe,CS ) ) ) ) * RRSe ) - ( MUC - RMSe ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.33091775648673805}, {"determining": "( ( ( BR - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( Const - ( FirstVNF_Mem_Server - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ACS ) ) )", "choosing": "( ( MUM + ( ( CS + Min( RRSe ,Min( Max( MUR,MUM ) ,MUC ) ) ) - MUC ) ) - ( Min( RMSe ,MLU ) - ( CS + DS ) ) )", "obj1": 0.9244897959183673, "obj2": 0.0339048923258193}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - ( CRS / ( Max( Max( ACS,( DDR - AMS ) ),PN ) - ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ACS ,MDR ) ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RRSe ) + ( Max( ( MUR / ( MUR * RMSe ) ),MUM ) + MLU ) ) ) * MUR ) - ( ( RCSe - RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18984755502780845}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( CRS - Min( ARS ,FirstVNF_RAM_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM * Max( ( RMSe - ( MUM + MUM ) ),Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) ) + ( CS + MUR ) ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( ( ( ( DS - RMSe ) + ( CS - DS ) ) - RRSe ) + ( RMSe + RCSe ) ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7011862103648011}, {"determining": "( ( AMS * PN ) - ( ( Const + FirstVNF_CPU ) - MDR ) )", "choosing": "Min( Min( Min( RMSe ,( ( ( ( Min( MLU ,MLU ) + ( RCSe * MUM ) ) + DS ) / RMSe ) / RMSe ) ) ,( Max( ( ( MUM / ( MUC - MUR ) ) + MLU ),( ( ( CS * ( MUM * MLU ) ) + RCSe ) + ( CS + ( RMSe - RCSe ) ) ) ) + ( Max( ( Max( ( MLU - RMSe ),( DS + MUR ) ) * RMSe ),MUM ) + RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MLU - RMSe ) ) ) ) )", "obj1": 0.6653061224489796, "obj2": 0.20283258407840682}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,( BR + MRS ) ) + Max( FirstVNF_RAM_Server,Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( ( RMSe + Max( ( RCSe - RMSe ),RRSe ) ),MUC ) ),( MUM + ( CS - MUM ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( MUR - RMSe ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,Min( DS ,RCSe ) ) ) ) - ( Min( Min( RCSe ,( MUR + RCSe ) ) ,( Max( RRSe,DS ) + DS ) ) + MUM ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.33155441240540867}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( Const * PN ) ) * BR ) ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( DS + RCSe ) ,Max( CS,RRSe ) ),RRSe ) * Max( MUR,RMSe ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8, "obj2": 0.08662056605335496}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( ( ( FirstVNF_Mem_Server * ( PN - MDR ) ) + CRS ) + RRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MUC ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) )", "obj1": 0.7346938775510204, "obj2": 0.1269765580881204}], "27": [{"determining": "( ( AMS - BR ) * ( FirstVNF_CPU_Server * ( Max( ( MDR - BR ),( ARS * PN ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe * RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MUR ) ),RRSe ) * Max( RMSe,( RCSe / Min( RMSe ,RRSe ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_RAM_Server + MRS ) ) + Min( ( ( RRS + CRS ) + RRS ) ,( FirstVNF_Mem_Server * Max( Max( ARS,BR ),Max( FirstVNF_RAM,RRS ) ) ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( RRSe / RCSe ) ) ) - ( MUC - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.9081632653061225, "obj2": 0.03313020199593435}, {"determining": "( ( ( MDR / ( ACS * ARS ) ) - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( DDR - FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + ( MUC - RMSe ) ) ) ) ),( Max( RCSe,( ( MUR + ( RCSe / ( DS + MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * Min( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ,( RMSe * DS ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8368289799869595}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.5530612244897959, "obj2": 0.29832338098291317}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( RRS ,( ( FirstVNF_CPU_Server - BR ) - ( RRS - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Min( Max( RCSe,DS ) ,MUM ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( MUM,DS ) ) )", "obj1": 0.9448979591836735, "obj2": 0.027226650598369845}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( ACS - ( BR + MRS ) ) + Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,Min( Min( FirstVNF_RAM ,( ACS + ( AMS - MDR ) ) ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( Max( ( ( CS - RRSe ) + ( RMSe + RCSe ) ),Max( RMSe,Max( MUM,MUC ) ) ) * ( RRSe / ( DS / RMSe ) ) ) + ( Max( Max( Max( RRSe,Max( MUM,MUC ) ),( ( CS - MUC ) + MUR ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( RMSe * RCSe ),( ( RMSe * RRSe ) + Min( Max( MUM,MLU ) ,MUM ) ) ) - ( ( ( ( MUR / MUM ) - Min( MLU ,RRSe ) ) * ( CS + MUC ) ) - RMSe ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3106126511844511}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,( BR + MRS ) ) + Max( FirstVNF_RAM_Server,Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( ( RMSe + Max( ( RCSe - RMSe ),RRSe ) ),MUC ) ),( MUM + ( CS - MUM ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( MUR - RMSe ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,Min( DS ,RCSe ) ) ) ) - ( Min( Min( RCSe ,( MUR + RCSe ) ) ,( Max( RRSe,DS ) + DS ) ) + MUM ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.33155441240540867}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( Max( ( Max( FirstVNF_RAM_Server,Max( PN,FirstVNF_CPU ) ) - MRS ),MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( MUR - MUR ),( MLU - ( ( MUM + DS ) + ( RMSe * MUR ) ) ) ) ) * Max( ( Min( Min( Max( Min( Max( MUM,MUR ) ,MLU ),CS ) ,( MUR * MUM ) ) ,MLU ) + ( RCSe * RCSe ) ),MUR ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.3693754666012872}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6551020408163265, "obj2": 0.20809452513047325}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( Max( CRS,Const ) - PN ) + Min( Min( ( ACS + PN ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN + ( CRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RCSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( Max( Min( Max( ( ( MUM - RMSe ) + MUM ),( RMSe * Max( RMSe,MUC ) ) ) ,( ( MUC - MLU ) - RMSe ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38358330628580783}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( FirstVNF_CPU * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS - FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( ( Max( ( Max( MUC,RRSe ) * RRSe ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8861088546980519}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - DDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * Min( BR ,( ( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_Mem_Server ) / ( ( PN / DDR ) / ( RRS * FirstVNF_Mem ) ) ) - CRS ) ) ) ) )", "choosing": "( ( CS * MUC ) - ( DS - RRSe ) )", "obj1": 0.7204081632653061, "obj2": 0.1559324633644541}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.6632653061224489, "obj2": 0.19429942877463197}, {"determining": "( ( PN - ( ( FirstVNF_RAM_Server + ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) * ( ( BR / MDR ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Min( RCSe ,( CS * Max( MUR,( ( Max( MLU,MUC ) + RMSe ) - MUC ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) * ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ARS - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( CS ,( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( MUM / RRSe ) + ( RCSe + CS ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5664155101617917}, {"determining": "( ( PN * Min( Min( Min( ( ( ARS - RRS ) * RRS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ,( Min( PN ,MDR ) * ( PN + ACS ) ) ) ) - ( MRS * ( RRS + BR ) ) )", "choosing": "Min( ( RRSe / ( DS * RMSe ) ) ,( DS / ( ( RMSe * CS ) * ( ( DS / ( Max( RCSe,MUR ) - ( Min( RRSe ,RCSe ) - RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9040816326530612, "obj2": 0.042723577246180505}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUR ) ) ) + ( ( RCSe / RRSe ) + MLU ) ) + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.5714285714285714, "obj2": 0.28882893919616015}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6061224489795919, "obj2": 0.2481473049397541}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.48775510204081635, "obj2": 0.36675547683588827}, {"determining": "( Min( ( Max( PN,ARS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( ( DDR * ( ( ( FirstVNF_CPU * PN ) * ARS ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) - FirstVNF_RAM_Server ) * ( ( CRS / AMS ) * Max( ( RRS / FirstVNF_Mem ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( ( Max( MUM,DS ) * MUC ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) + Max( RCSe,RRSe ) ) ) + ( CS - MUC ) ) ) * Max( Max( RMSe,( MUR / RMSe ) ),( ( RCSe * CS ) + DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.812284758927384}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / FirstVNF_RAM ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.9011327144599414}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( ( BR + MRS ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( ( RMSe * CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7463751775975517}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ACS - DDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) ) * ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * Max( BR,BR ) )", "choosing": "Min( ( MUR + ( ( Max( Max( RMSe,( ( DS / RCSe ) * RCSe ) ),MUM ) - MUM ) + RCSe ) ) ,( ( MLU - MUR ) - ( DS * ( RMSe / MUR ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4050367552562173}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - Max( ( CRS - ( ( ( ACS - ACS ) + Min( AMS ,FirstVNF_RAM ) ) * MRS ) ),( ACS * Min( ( MRS - Max( FirstVNF_CPU_Server,ACS ) ) ,PN ) ) ) ) ) * ( ( ( MDR / ( ( PN + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( ACS + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,Max( CRS,MDR ) ) ) * ( ( ACS * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( DS,RRSe ) * Max( ( MUR / Max( CS,RCSe ) ),( RMSe - ( RCSe + RCSe ) ) ) ) ,Min( CS ,Max( Min( MUM ,RMSe ),Min( ( RMSe * CS ) ,Min( RCSe ,RMSe ) ) ) ) ) + MUM ) * DS ) - ( ( MUC / MUM ) + ( ( ( MUR + RRSe ) / Max( RRSe,CS ) ) * RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18984755502780845}, {"determining": "( ( ( ( ( MDR + ( ACS - PN ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( MRS / BR ) ) ) ,( CRS - MDR ) ) ) / ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( Max( Max( ( DS + RCSe ),Max( RMSe,MUC ) ),( ( RRSe - MUM ) + Min( RMSe ,RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.6820487858442903}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( PN - ( ( ( DDR * ( PN - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.7739440336764815}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( RRS * FirstVNF_CPU ) + Min( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_RAM ) ) ,( Min( ARS ,Max( ( ( DDR * MRS ) - ( Const + ( FirstVNF_RAM + Const ) ) ),( ( ( AMS - FirstVNF_Mem ) / DDR ) * AMS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( Max( Max( MUM,MUC ),MUM ) + MUM ) + MUR ) ,( ( RMSe + MUR ) - ( ( ( DS * ( ( ( MUC * MUM ) * MUM ) - ( MUC * Min( MUR ,RCSe ) ) ) ) - ( MUC - Max( RCSe,MUC ) ) ) * CS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.563265306122449, "obj2": 0.2916535315153936}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( ( PN - ( ( ( RRS / BR ) + FirstVNF_RAM ) / BR ) ) * ( ACS * Min( FirstVNF_RAM ,( Max( ( MDR * ( ACS + FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( ( ( CS / DS ) - MUC ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42857142857142855, "obj2": 0.420324446582125}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.21383789427719116}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - RRSe ) + ( RMSe + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.6857142857142857, "obj2": 0.17274464322103952}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Const * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( RMSe - MUR ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6061224489795919, "obj2": 0.2481473049397541}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * FirstVNF_CPU_Server ) * ( ( MDR + ( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) / Min( ( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - CRS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5117837750292131}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR * RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,( RMSe * MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7, "obj2": 0.16763105360020525}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( CRS - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.05957896798615756}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( MUC,( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.3178716943007469}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11224489795918367, "obj2": 0.850126578722239}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.40408163265306124, "obj2": 0.44006126125196593}, {"determining": "( ( AMS * Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / BR ) ) ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( ( ( MLU - RMSe ) + Min( MUM ,MUM ) ) ,DS ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2353824444448635}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.34285714285714286, "obj2": 0.525303502992315}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( ARS * PN ) * ( ( ( FirstVNF_Mem_Server * ( PN - MDR ) ) + CRS ) + RRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MUC ) ) ,RMSe ) ) / RRSe ) + ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ) ) * ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) )", "obj1": 0.7346938775510204, "obj2": 0.126880732209309}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + Max( MDR,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / RCSe ) * ( RRSe / MLU ) ) ,( ( RRSe / CS ) + Max( MLU,MUR ) ) ) ) / RRSe ) + ( CS - MLU ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM / Min( ( MUM / DS ) ,RCSe ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6795918367346939, "obj2": 0.18122343321259995}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * Max( Min( DDR ,AMS ),( Const - FirstVNF_Mem ) ) ) - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * Max( DDR,PN ) ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( MUM,MUC ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( ( ( RRSe - CS ) - ( MUC - RMSe ) ) * CS ) ) )", "obj1": 0.9673469387755103, "obj2": 0.018848776688566785}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Max( MRS,AMS ) * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5507395740492265}, {"determining": "( ( PN - ( ( ( DDR * RRS ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15714285714285714, "obj2": 0.7866060797012933}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( ( MDR * Const ) * ( ( ( ( ARS * ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) ) / MDR ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem - Min( Min( MDR ,AMS ) ,AMS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUC - MUR ) / Min( ( RRSe - ( Min( ( DS + MUR ) ,MLU ) - ( MUM / CS ) ) ) ,MUC ) ) ,( ( RMSe / RRSe ) - ( ( ( MUC - MUC ) - Max( MUC,( ( RMSe * RRSe ) + Min( ( MLU - MUM ) ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.8204081632653061, "obj2": 0.0759505779388541}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( CRS * PN ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( MUM / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8707188432179346}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( ( FirstVNF_CPU / DDR ) + AMS ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( RMSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3510204081632653, "obj2": 0.5067892151804686}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3206086777684405}, {"determining": "( ( PN - Min( ARS ,FirstVNF_RAM_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6772794484979763}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7894318783226439}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server / ( Min( AMS ,FirstVNF_RAM_Server ) * ( DDR / ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,RCSe ) ),MUM ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( RMSe * Max( ( RMSe * MUR ),CS ) ),( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4050367552562173}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( ( CS + Min( RRSe ,Min( Max( MUR,MUM ) ,MUC ) ) ) - MUC ) + RCSe ) ) )", "obj1": 0.8714285714285714, "obj2": 0.05762912861506898}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - ( CRS / ( Max( Max( ACS,( DDR - AMS ) ),PN ) - ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ACS ,MDR ) ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RRSe ) + ( Max( ( MUR / ( MUR * RMSe ) ),MUM ) + MLU ) ) ) * MUR ) - ( ( RCSe - RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( CS + ( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.33877551020408164, "obj2": 0.5276327107824734}, {"determining": "( ( PN / ( Max( ( MRS - Max( DDR,FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / ( DS * RMSe ) ) * Max( Max( RMSe,( MUC - MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUC ) ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) )", "obj1": 0.21836734693877552, "obj2": 0.700755624130007}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( ( ( ( DS - RMSe ) + ( CS - DS ) ) - RRSe ) + ( RMSe + RCSe ) ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + RCSe ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.21428571428571427, "obj2": 0.7011862103648011}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,MDR ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * Const ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - ( RCSe / Min( MUR ,( ( DS / CS ) - MUR ) ) ) ) * DS ) - ( ( ( RCSe / RRSe ) + ( MUR + ( MUC - RMSe ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.710204081632653, "obj2": 0.1609983515350376}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( Min( MRS ,AMS ) - ( Const * Min( ( ACS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU_Server - BR ) - ( RRS - PN ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( Min( Max( RCSe,DS ) ,MUM ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - ( CS - MUC ) ) )", "obj1": 0.9530612244897959, "obj2": 0.020499187253123687}, {"determining": "( ( PN - ( ( ( DDR * ( PN - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * Max( MRS,AMS ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * Max( RMSe,MUR ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1469387755102041, "obj2": 0.7968095829430162}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07033055794970386}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( CRS - Min( ARS ,FirstVNF_RAM_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM * Max( ( RMSe - ( MUM + MUM ) ),Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) ) + ( CS + MUR ) ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}], "28": [{"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( ACS + FirstVNF_Mem_Server ) ) * ( MDR / ( RRS - Const ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) / ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( Max( RMSe,Max( RMSe,MUC ) ),( MLU * CS ) ) ,Max( CS,MLU ) ),RRSe ) * ( Max( ( ( MLU - ( MUR / CS ) ) + MUM ),Min( MLU ,MUC ) ) - Min( ( DS - MUM ) ,DS ) ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) * ( FirstVNF_CPU_Server * ( Max( ( MDR - BR ),( ARS * PN ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe * RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MUR ) ),RRSe ) * Max( RMSe,( RCSe / Min( RMSe ,RRSe ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7510204081632653, "obj2": 0.11302130576149996}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ARS * ( FirstVNF_CPU * ( FirstVNF_CPU_Server + PN ) ) ) ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / CS ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RRSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * Min( ( RCSe * MLU ) ,MUR ) )", "obj1": 0.7959183673469388, "obj2": 0.09236398783841772}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( ( ( MDR / ( ACS * ARS ) ) - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( DDR - FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + ( MUC - RMSe ) ) ) ) ),( Max( RCSe,( ( MUR + ( RCSe / ( DS + MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * Min( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ,( RMSe * DS ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8368289799869595}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,( BR + MRS ) ) + Max( FirstVNF_RAM_Server,Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( ( RMSe + Max( ( RCSe - RMSe ),RRSe ) ),MUC ) ),( MUM + ( CS - MUM ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( MUR - RMSe ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,Min( DS ,RCSe ) ) ) ) - ( Min( Min( RCSe ,( MUR + RCSe ) ) ,( Max( RRSe,DS ) + DS ) ) + MUM ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.33155441240540867}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( ARS * PN ) * ( ( ( FirstVNF_Mem_Server * ( PN - MDR ) ) + CRS ) + RRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MUC ) ) ,RMSe ) ) / RRSe ) + ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ) ) * ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) )", "obj1": 0.7346938775510204, "obj2": 0.126880732209309}, {"determining": "( ( ( MDR * Const ) * ( ( ( ( ARS * ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) ) / MDR ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem - Min( Min( MDR ,AMS ) ,AMS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUC - MUR ) / Min( ( RRSe - ( Min( ( DS + MUR ) ,MLU ) - ( MUM / CS ) ) ) ,MUC ) ) ,( ( RMSe / RRSe ) - ( ( ( MUC - MUC ) - Max( MUC,( ( RMSe * RRSe ) + Min( ( MLU - MUM ) ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.8204081632653061, "obj2": 0.0759505779388541}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( Max( ( Max( FirstVNF_RAM_Server,Max( PN,FirstVNF_CPU ) ) - MRS ),MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( MUR - MUR ),( MLU - ( ( MUM + DS ) + ( RMSe * MUR ) ) ) ) ) * Max( ( Min( Min( Max( Min( Max( MUM,MUR ) ,MLU ),CS ) ,( MUR * MUM ) ) ,MLU ) + ( RCSe * RCSe ) ),MUR ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * DDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RRSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( ( RRSe * MUM ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8633085712199567}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUR ) ) ) + ( ( RCSe / RRSe ) + MLU ) ) + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7979591836734694, "obj2": 0.09169497126513494}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( ACS - ( BR + MRS ) ) + Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,Min( Min( FirstVNF_RAM ,( ACS + ( AMS - MDR ) ) ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( Max( ( ( CS - RRSe ) + ( RMSe + RCSe ) ),Max( RMSe,Max( MUM,MUC ) ) ) * ( RRSe / ( DS / RMSe ) ) ) + ( Max( Max( Max( RRSe,Max( MUM,MUC ) ),( ( CS - MUC ) + MUR ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( RMSe * RCSe ),( ( RMSe * RRSe ) + Min( Max( MUM,MLU ) ,MUM ) ) ) - ( ( ( ( MUR / MUM ) - Min( MLU ,RRSe ) ) * ( CS + MUC ) ) - RMSe ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3106126511844511}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - DDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * Min( BR ,( ( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_Mem_Server ) / ( ( PN / DDR ) / ( RRS * FirstVNF_Mem ) ) ) - CRS ) ) ) ) )", "choosing": "( ( CS * MUC ) - ( DS - RRSe ) )", "obj1": 0.7204081632653061, "obj2": 0.1559324633644541}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.6632653061224489, "obj2": 0.19429942877463197}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( ( PN - DDR ) * Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( ( ( MUC / MLU ) - ( CS + RRSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( MUM,DS ) ) )", "obj1": 0.9428571428571428, "obj2": 0.027837534651785078}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) * ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ARS - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( CS ,( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( MUM / RRSe ) + ( RCSe + CS ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5664155101617917}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( ( FirstVNF_RAM_Server + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( RCSe / RRSe ) + ( CS + ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.03147926440589848}, {"determining": "( ( PN * ( ( FirstVNF_RAM_Server - ( DDR * ( PN - MDR ) ) ) * ( ( AMS / CRS ) * ( FirstVNF_Mem - Max( ACS,Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( RMSe - MUC ) ,( MUM * RRSe ) ) * MLU ) / ( MUR + Max( ( CS - RRSe ),( MLU + RCSe ) ) ) ) * ( Max( Max( MUC,( ( Max( Min( MUC ,RCSe ),MUR ) / ( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21428571428571427, "obj2": 0.6988625363635802}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.21383789427719116}, {"determining": "( ( PN * Min( Min( Min( ( ( ARS - RRS ) * RRS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) ,( Min( PN ,MDR ) * ( PN + ACS ) ) ) ) - ( MRS * ( RRS + BR ) ) )", "choosing": "Min( ( RRSe / ( DS * RMSe ) ) ,( DS / ( ( RMSe * CS ) * ( ( DS / ( Max( RCSe,MUR ) - ( Min( RRSe ,RCSe ) - RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9040816326530612, "obj2": 0.042723577246180505}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( ( BR + MRS ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( ( RMSe * CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7463751775975517}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - Max( ( CRS - ( ( ( ACS - ACS ) + Min( AMS ,FirstVNF_RAM ) ) * MRS ) ),( ACS * Min( ( MRS - Max( FirstVNF_CPU_Server,ACS ) ) ,PN ) ) ) ) ) * ( ( ( MDR / ( ( PN + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( ACS + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,Max( CRS,MDR ) ) ) * ( ( ACS * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( DS,RRSe ) * Max( ( MUR / Max( CS,RCSe ) ),( RMSe - ( RCSe + RCSe ) ) ) ) ,Min( CS ,Max( Min( MUM ,RMSe ),Min( ( RMSe * CS ) ,Min( RCSe ,RMSe ) ) ) ) ) + MUM ) * DS ) - ( ( MUC / MUM ) + ( ( ( MUR + RRSe ) / Max( RRSe,CS ) ) * RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18889061338240667}, {"determining": "( ( ( ( ( MDR + ( ACS - PN ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( MRS / BR ) ) ) ,( CRS - MDR ) ) ) / ( MRS * ( ACS - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( Max( Max( ( DS + RCSe ),Max( RMSe,MUC ) ),( ( RRSe - MUM ) + Min( RMSe ,RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.23673469387755103, "obj2": 0.6820487858442903}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( ( PN - ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6551020408163265, "obj2": 0.20809452513047325}, {"determining": "( ( ( PN - ( ( ( RRS / BR ) + FirstVNF_RAM ) / BR ) ) * ( ACS * Min( FirstVNF_RAM ,( Max( ( MDR * ( ACS + FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( ( ( CS / DS ) - MUC ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42857142857142855, "obj2": 0.420324446582125}, {"determining": "( ( AMS * Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / BR ) ) ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( ( ( MLU - RMSe ) + Min( MUM ,MUM ) ) ,DS ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2353824444448635}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( Max( ( ( CS - RRSe ) + ( RMSe + RCSe ) ),Max( RMSe,Max( MUM,MUC ) ) ) * ( RRSe / ( DS / RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RMSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( ( ( MUR / MUM ) - Min( MLU ,RRSe ) ) * Min( CS ,MUC ) ) - RMSe ) ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.32838971679609624}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ( RRS * Min( ( Max( Const,FirstVNF_Mem ) - ( FirstVNF_RAM_Server + BR ) ) ,RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( ( RCSe / MUC ) * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.3747575729031833}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( CRS - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.05957896798615756}, {"determining": "( Min( ( Max( PN,ARS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( ( DDR * ( ( ( FirstVNF_CPU * PN ) * ARS ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) - FirstVNF_RAM_Server ) * ( ( CRS / AMS ) * Max( ( RRS / FirstVNF_Mem ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( ( Max( MUM,DS ) * MUC ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) + Max( RCSe,RRSe ) ) ) + ( CS - MUC ) ) ) * Max( Max( RMSe,( MUR / RMSe ) ),( ( RCSe * CS ) + DS ) ) )", "obj1": 0.14081632653061224, "obj2": 0.812284758927384}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11224489795918367, "obj2": 0.850126578722239}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * FirstVNF_CPU_Server ) * ( ( MDR + ( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) / Min( ( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - CRS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3469387755102041, "obj2": 0.5117837750292131}, {"determining": "( ( Max( CRS,Const ) - PN ) + Min( Min( ( ACS + PN ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN + ( CRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RCSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( Max( Min( Max( ( ( MUM - RMSe ) + MUM ),( RMSe * Max( RMSe,MUC ) ) ) ,( ( MUC - MLU ) - RMSe ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38358330628580783}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.3693754666012872}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * PN ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - MUM ) ) )", "obj1": 0.5693877551020409, "obj2": 0.288044167183811}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8367346938775511, "obj2": 0.07033055794970386}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.34285714285714286, "obj2": 0.525303502992315}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + Max( MDR,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / RCSe ) * ( RRSe / MLU ) ) ,( ( RRSe / CS ) + Max( MLU,MUR ) ) ) ) / RRSe ) + ( CS - MLU ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM / Min( ( MUM / DS ) ,RCSe ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6795918367346939, "obj2": 0.18122343321259995}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.48775510204081635, "obj2": 0.36675547683588827}, {"determining": "( ( RRS * FirstVNF_CPU ) + Min( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_RAM ) ) ,( Min( ARS ,Max( ( ( DDR * MRS ) - ( Const + ( FirstVNF_RAM + Const ) ) ),( ( ( AMS - FirstVNF_Mem ) / DDR ) * AMS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( Max( Max( MUM,MUC ),MUM ) + MUM ) + MUR ) ,( ( RMSe + MUR ) - ( ( ( DS * ( ( ( MUC * MUM ) * MUM ) - ( MUC * Min( MUR ,RCSe ) ) ) ) - ( MUC - Max( RCSe,MUC ) ) ) * CS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.5755102040816327, "obj2": 0.27924889307958833}, {"determining": "( ( AMS * ( FirstVNF_RAM - ( Max( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( RRS * ACS ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - Max( ( ( MUM / ( MUC - MUR ) ) + MLU ),( ( ( CS * ( MUM * MUR ) ) + RCSe ) + ( CS + ( RMSe - RCSe ) ) ) ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.002755734838833957}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.5530612244897959, "obj2": 0.29832338098291317}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.5530612244897959, "obj2": 0.29832338098291317}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6061224489795919, "obj2": 0.2481473049397541}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4061224489795918, "obj2": 0.4368262706813389}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR * RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,( RMSe * MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7, "obj2": 0.16763105360020525}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8469387755102041, "obj2": 0.0696407969831494}, {"determining": "( Min( Min( Const ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( Max( Min( MRS ,( RRS + FirstVNF_Mem_Server ) ),( ( ( MRS / ACS ) - FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) * ( FirstVNF_CPU * ARS ) ) - ( Max( ( ( MDR / ( Max( FirstVNF_CPU,PN ) * Max( DDR,PN ) ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( DDR / FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( ( RRSe * MUR ) + MUM ) ) ,( ( RMSe - MLU ) - ( ( MUC / Max( MLU,DS ) ) * CS ) ) )", "obj1": 0.9734693877551021, "obj2": 0.013705133288704645}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + MUR ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.4978272445438341}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( Max( MRS,AMS ) * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5507395740492265}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ACS - DDR ) ,Min( FirstVNF_CPU_Server ,AMS ) ) ) * ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * Max( BR,BR ) )", "choosing": "Min( ( MUR + ( ( Max( Max( RMSe,( ( DS / RCSe ) * RCSe ) ),MUM ) - MUM ) + RCSe ) ) ,( ( MLU - MUR ) - ( DS * ( RMSe / MUR ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.4050367552562173}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - ( CRS / ( Max( Max( ACS,( DDR - AMS ) ),PN ) - ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ACS ,MDR ) ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RRSe ) + ( Max( ( MUR / ( MUR * RMSe ) ),MUM ) + MLU ) ) ) * MUR ) - ( ( RCSe - RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11224489795918367, "obj2": 0.850126578722239}, {"determining": "( ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( CS + ( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.33877551020408164, "obj2": 0.5276327107824734}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( AMS - FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / FirstVNF_RAM ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM_Server + ( Const - FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( ( CS + CS ) / RRSe ) + ( RCSe + CS ) ) ) ),( Max( MUM,( ( RCSe / DS ) + ( ( ( MUC / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8908109447208762}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6061224489795919, "obj2": 0.2481473049397541}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) * DS ) - ( ( RCSe / RRSe ) + ( ( ( CS + Min( RRSe ,Min( Max( MUR,MUM ) ,MUC ) ) ) - MUC ) + RCSe ) ) )", "obj1": 0.8714285714285714, "obj2": 0.05762912861506898}, {"determining": "( ( ( Const - ARS ) * ( ( MDR - BR ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) - MUR ) )", "obj1": 0.9816326530612245, "obj2": 0.008273935233957027}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( ( CS + Min( RRSe ,Min( Max( MUR,MUM ) ,MUC ) ) ) - MUC ) + RCSe ) ) )", "obj1": 0.8714285714285714, "obj2": 0.05762912861506898}], "29": [{"determining": "( ( ( ( ACS - FirstVNF_CPU_Server ) - DDR ) * Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MRS * ( FirstVNF_Mem_Server / Min( Const ,RRS ) ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) * ( Const * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( RMSe * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,( ( RMSe * MLU ) * DS ) ) - MUR ) - Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( ACS + FirstVNF_Mem_Server ) ) * ( MDR / ( RRS - Const ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) / ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( Max( RMSe,Max( RMSe,MUC ) ),( MLU * CS ) ) ,Max( CS,MLU ) ),RRSe ) * ( Max( ( ( MLU - ( MUR / CS ) ) + MUM ),Min( MLU ,MUC ) ) - Min( ( DS - MUM ) ,DS ) ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - DDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * Min( BR ,( ( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_Mem_Server ) / ( ( PN / DDR ) / ( RRS * FirstVNF_Mem ) ) ) - CRS ) ) ) ) )", "choosing": "( ( CS * MUC ) - ( DS - RRSe ) )", "obj1": 0.7204081632653061, "obj2": 0.1559324633644541}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( PN - ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,( BR + MRS ) ) + Max( FirstVNF_RAM_Server,Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( ( RMSe + Max( ( RCSe - RMSe ),RRSe ) ),MUC ) ),( MUM + ( CS - MUM ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( MUR - RMSe ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,Min( DS ,RCSe ) ) ) ) - ( Min( Min( RCSe ,( MUR + RCSe ) ) ,( Max( RRSe,DS ) + DS ) ) + MUM ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.33155441240540867}, {"determining": "( ( ( MDR / ( ACS * ARS ) ) - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( DDR - FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + ( MUC - RMSe ) ) ) ) ),( Max( RCSe,( ( MUR + ( RCSe / ( DS + MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * Min( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ,( RMSe * DS ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8368289799869595}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( AMS - FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / FirstVNF_RAM ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM_Server + ( Const - FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( ( CS + CS ) / RRSe ) + ( RCSe + CS ) ) ) ),( Max( MUM,( ( RCSe / DS ) + ( ( ( MUC / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8908109447208762}, {"determining": "( FirstVNF_Mem_Server * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) / RRSe ) + ( CS + ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ) ) )", "obj1": 0.7653061224489796, "obj2": 0.10833609997032469}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + Max( MDR,FirstVNF_RAM ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( ( Min( MUM ,Min( ( ( CS / RCSe ) * ( RRSe / MLU ) ) ,( ( RRSe / CS ) + Max( MLU,MUR ) ) ) ) / RRSe ) + ( CS - MLU ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM / Min( ( MUM / DS ) ,RCSe ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6795918367346939, "obj2": 0.18122343321259995}, {"determining": "( ( ( PN - DDR ) * Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( ( ( MUC / MLU ) - ( CS + RRSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( MUM,DS ) ) )", "obj1": 0.9428571428571428, "obj2": 0.027837534651785078}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( Max( ( Max( FirstVNF_RAM_Server,Max( PN,FirstVNF_CPU ) ) - MRS ),MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( MUR - MUR ),( MLU - ( ( MUM + DS ) + ( RMSe * MUR ) ) ) ) ) * Max( ( Min( Min( Max( Min( Max( MUM,MUR ) ,MLU ),CS ) ,( MUR * MUM ) ) ,MLU ) + ( RCSe * RCSe ) ),MUR ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6811455926659161}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.7877551020408163, "obj2": 0.1016596469048836}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( MRS * ( FirstVNF_Mem - AMS ) ) - ACS ) ,( ( ACS - FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) + ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - Min( RMSe ,MUR ) ) )", "obj1": 0.44081632653061226, "obj2": 0.4044816582622727}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( ( FirstVNF_RAM_Server + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( RCSe / RRSe ) + ( CS + ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.03147926440589848}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( DDR * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( Max( AMS,BR ) ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + CS ) ) ,( ( MLU - MUR ) - Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.022093110474013522}, {"determining": "( ( AMS * Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / BR ) ) ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( ( ( MLU - RMSe ) + Min( MUM ,MUM ) ) ,DS ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2353824444448635}, {"determining": "( ( ( MDR - Const ) * ( ( Min( FirstVNF_CPU ,PN ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.810204081632653, "obj2": 0.08239228829174518}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR * RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,( RMSe * MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7, "obj2": 0.16763105360020525}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7510204081632653, "obj2": 0.11302130576149996}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( ( MDR * Const ) * ( ( ( ( ARS * ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) ) / MDR ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem - Min( Min( MDR ,AMS ) ,AMS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUC - MUR ) / Min( ( RRSe - ( Min( ( DS + MUR ) ,MLU ) - ( MUM / CS ) ) ) ,MUC ) ) ,( ( RMSe / RRSe ) - ( ( ( MUC - MUC ) - Max( MUC,( ( RMSe * RRSe ) + Min( ( MLU - MUM ) ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.8204081632653061, "obj2": 0.0759505779388541}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUM * Max( ( RMSe - ( MUM + MUM ) ),Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) ) + ( CS + MUR ) ) )", "obj1": 0.6979591836734694, "obj2": 0.17007975811105386}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( ( FirstVNF_RAM_Server + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9, "obj2": 0.036390514124348905}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,RMSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.3667442595277565}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( ( PN * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR * RMSe ) ) / Max( Max( ( ( Max( MUM,DS ) / RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,( RMSe * MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9673469387755103, "obj2": 0.013753089622981086}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * ( MUC - RMSe ) ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6489795918367347, "obj2": 0.1986557478203183}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.3693754666012872}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( ( BR + MRS ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( ( RMSe * CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7463751775975517}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18889061338240667}, {"determining": "( ( RRS * FirstVNF_CPU ) + Min( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_RAM ) ) ,( Min( ARS ,Max( ( ( DDR * MRS ) - ( Const + ( FirstVNF_RAM + Const ) ) ),( ( ( AMS - FirstVNF_Mem ) / DDR ) * AMS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( Max( Max( MUM,MUC ),MUM ) + MUM ) + MUR ) ,( ( RMSe + MUR ) - ( ( ( DS * ( ( ( MUC * MUM ) * MUM ) - ( MUC * Min( MUR ,RCSe ) ) ) ) - ( MUC - Max( RCSe,MUC ) ) ) * CS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - Max( ( CRS - ( ( ( ACS - ACS ) + Min( AMS ,FirstVNF_RAM ) ) * MRS ) ),( ACS * Min( ( MRS - Max( FirstVNF_CPU_Server,ACS ) ) ,PN ) ) ) ) ) * ( ( ( MDR / ( ( PN + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( ACS + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,Max( CRS,MDR ) ) ) * ( ( ACS * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( DS,RRSe ) * Max( ( MUR / Max( CS,RCSe ) ),( RMSe - ( RCSe + RCSe ) ) ) ) ,Min( CS ,Max( Min( MUM ,RMSe ),Min( ( RMSe * CS ) ,Min( RCSe ,RMSe ) ) ) ) ) + MUM ) * DS ) - ( ( MUC / MUM ) + ( ( ( MUR + RRSe ) / Max( RRSe,CS ) ) * RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + DDR ) + RRS ) ) - ( CRS / ( ARS / ACS ) ) ) ) ) )", "choosing": "( ( RMSe * DS ) - ( Max( MUC,MUM ) + ( CS + RCSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.056561851027454944}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.4489795918367347, "obj2": 0.394537600480539}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ( RRS * Min( ( Max( Const,FirstVNF_Mem ) - ( FirstVNF_RAM_Server + BR ) ) ,RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( ( RCSe / MUC ) * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.3747575729031833}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( ( FirstVNF_RAM_Server - BR ),ACS ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( MDR - PN ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( RCSe,MUC ) ) ) - ( DS - ( ( ( CS * MUM ) - MUR ) * MUC ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,( MUR - MUM ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5428571428571428, "obj2": 0.30383892846681865}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4061224489795918, "obj2": 0.4368262706813389}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * ARS ) * ARS ) ) ),DDR ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) + Max( ( RRSe * MUM ),Max( MUR,MLU ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( ( ( MLU * ( ( RMSe + ( RRSe - CS ) ) * ( Min( RRSe ,RRSe ) / ( RMSe / DS ) ) ) ) - MUR ) - RCSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( ARS + Max( ( FirstVNF_CPU_Server + MDR ),Min( AMS ,Const ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + Min( RRSe ,( ( MUR / ( MLU + MUR ) ) + Min( MLU ,CS ) ) ) ) ) * MLU ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Min( RMSe ,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( ( MLU * MUC ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2408913626102001}, {"determining": "( ( Max( CRS,Const ) - PN ) + Min( Min( ( ACS + PN ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN + ( CRS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RCSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( Max( Min( Max( ( ( MUM - RMSe ) + MUM ),( RMSe * Max( RMSe,MUC ) ) ) ,( ( MUC - MLU ) - RMSe ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38358330628580783}, {"determining": "( ( ACS - ( BR + MRS ) ) + Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,Min( Min( FirstVNF_RAM ,( ACS + ( AMS - MDR ) ) ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( Max( ( ( CS - RRSe ) + ( RMSe + RCSe ) ),Max( RMSe,Max( MUM,MUC ) ) ) * ( RRSe / ( DS / RMSe ) ) ) + ( Max( Max( Max( RRSe,Max( MUM,MUC ) ),( ( CS - MUC ) + MUR ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( RMSe * RCSe ),( ( RMSe * RRSe ) + Min( Max( MUM,MLU ) ,MUM ) ) ) - ( ( ( ( MUR / MUM ) - Min( MLU ,RRSe ) ) * ( CS + MUC ) ) - RMSe ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3106126511844511}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUR ) ) ) + ( ( RCSe / RRSe ) + MLU ) ) + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7979591836734694, "obj2": 0.09169497126513493}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) * ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ARS - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( CS ,( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( MUM / RRSe ) + ( RCSe + CS ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5664155101617917}, {"determining": "( ( ARS * PN ) * ( ( ( FirstVNF_Mem_Server * ( PN - MDR ) ) + CRS ) + RRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MUC ) ) ,RMSe ) ) / RRSe ) + ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ) ) * ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) )", "obj1": 0.7346938775510204, "obj2": 0.126880732209309}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe * RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MUR ) ),RRSe ) * Max( RMSe,( RCSe / Min( RMSe ,RRSe ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.21043523020996904}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.3277544866290036}, {"determining": "( ( AMS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( CS * DS ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6408163265306123, "obj2": 0.21383789427719116}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.8346938775510204, "obj2": 0.0711102786069666}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( FirstVNF_CPU_Server ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( Max( ( ( CS - RRSe ) + ( RMSe + RCSe ) ),Max( RMSe,Max( MUM,MUC ) ) ) * ( RRSe / ( DS / RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( MUR + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( ( ( MUR / MUM ) - Min( MLU ,RRSe ) ) * Min( CS ,MUC ) ) - ( DS / MUC ) ) ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.32461767112284373}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( FirstVNF_Mem_Server * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( ( Max( ( RRSe * MUM ),( RCSe + ( RMSe / MUR ) ) ) + ( ( RCSe / RRSe ) + MLU ) ) + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.12236559007978459}, {"determining": "( ( ( PN - ( ( ( RRS / BR ) + FirstVNF_RAM ) / BR ) ) * ( ACS * Min( FirstVNF_RAM ,( Max( ( MDR * ( ACS + FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( ( ( CS / DS ) - MUC ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42857142857142855, "obj2": 0.420324446582125}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( DS * ( ( CS - RCSe ) - MUM ) ) )", "obj1": 0.6632653061224489, "obj2": 0.19429942877463197}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - ( CRS / ( Max( Max( ACS,( DDR - AMS ) ),PN ) - ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ACS ,MDR ) ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RRSe ) + ( Max( ( MUR / ( MUR * RMSe ) ),MUM ) + MLU ) ) ) * MUR ) - ( ( RCSe - RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( AMS * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5959183673469388, "obj2": 0.258377148094059}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( ( FirstVNF_RAM_Server + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( Max( RMSe,Max( CS,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9081632653061225, "obj2": 0.03297553250641135}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( FirstVNF_Mem * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - ( FirstVNF_RAM - CRS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( Max( MUM,MUC ),RMSe ) * Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) ) - ( CS * ( ( RCSe * CS ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.3165434765290803}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.28792910387769866}, {"determining": "( ( PN * ( ( FirstVNF_RAM_Server - ( DDR * ( PN - MDR ) ) ) * ( ( AMS / CRS ) * ( FirstVNF_Mem - Max( ACS,Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( RMSe - MUC ) ,( MUM * RRSe ) ) * MLU ) / ( MUR + Max( ( CS - RRSe ),( MLU + RCSe ) ) ) ) * ( Max( Max( MUC,( ( Max( Min( MUC ,RCSe ),MUR ) / ( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21428571428571427, "obj2": 0.6988625363635802}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Max( ( ( MDR / ( ( PN * ( ACS - Const ) ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( PN * MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( Max( ( ( CS - RRSe ) + ( RMSe + RCSe ) ),Max( RMSe,Max( MUM,MUC ) ) ) * ( RRSe / ( DS / RMSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( Max( MUC,MUC ) + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( ( RMSe + RMSe ) - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RMSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( ( ( MUR / MUM ) - Max( MLU,RRSe ) ) * Min( CS ,MUC ) ) - RMSe ) ) ) ) )", "obj1": 0.5265306122448979, "obj2": 0.31947122994377547}, {"determining": "( ( AMS * Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR * RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RMSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,( RMSe * MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}], "30": [{"determining": "( ( ( ( ACS - FirstVNF_CPU_Server ) - DDR ) * ( AMS - Max( Min( FirstVNF_CPU_Server ,DDR ),DDR ) ) ) * ( Const * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( RMSe * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,( ( RMSe * ( ( RRSe * RRSe ) * RCSe ) ) * DS ) ) - MUR ) - ( MUM / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_CPU_Server ) - DDR ) * Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MRS * ( FirstVNF_Mem_Server / Min( Const ,RRS ) ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) * ( Const * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( RMSe * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,( ( RMSe * MLU ) * DS ) ) - MUR ) - Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.28792910387769866}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR * RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,( RMSe * MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6979591836734694, "obj2": 0.16488361531519719}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - DDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * Min( BR ,( ( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_Mem_Server ) / ( ( PN / DDR ) / ( RRS * FirstVNF_Mem ) ) ) - CRS ) ) ) ) )", "choosing": "( ( CS * MUC ) - ( DS - RRSe ) )", "obj1": 0.7204081632653061, "obj2": 0.1559324633644541}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + DDR ) + RRS ) ) - ( CRS / ( ARS / ACS ) ) ) ) ) )", "choosing": "( ( RMSe * DS ) - ( Max( MUC,MUM ) + ( CS + RCSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.056561851027454944}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( ( FirstVNF_RAM_Server - BR ),ACS ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( MDR - PN ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( RCSe,MUC ) ) ) - ( DS - ( ( ( CS * MUM ) - MUR ) * MUC ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,( MUR - MUM ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5428571428571428, "obj2": 0.30383892846681865}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,RMSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.17238911736912318}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,( BR + MRS ) ) + Max( FirstVNF_RAM_Server,Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( ( RMSe + Max( ( RCSe - RMSe ),RRSe ) ),MUC ) ),( MUM + ( CS - MUM ) ) ) * ( Min( Max( MUM,DS ) ,MUM ) / ( DS * RMSe ) ) ) ,( ( MUR - RMSe ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MLU,DS ) ,Min( DS ,RCSe ) ) ) ) - ( Min( Min( RCSe ,( MUR + RCSe ) ) ,( Max( RRSe,DS ) + DS ) ) + MUM ) ) ) ) )", "obj1": 0.5040816326530613, "obj2": 0.33155441240540867}, {"determining": "( ( ( MDR / ( ACS * ARS ) ) - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( DDR - FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + ( MUC - RMSe ) ) ) ) ),( Max( RCSe,( ( MUR + ( RCSe / ( DS + MUC ) ) ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * Min( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ,( RMSe * DS ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8368289799869595}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( ARS + Max( ( FirstVNF_CPU_Server + MDR ),Min( AMS ,Const ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + Min( RRSe ,( ( MUR / ( MLU + MUR ) ) + Min( MLU ,CS ) ) ) ) ) * MLU ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Min( RMSe ,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( ( MLU * MUC ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2408913626102001}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6811455926659161}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( Min( ( ACS - FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,Max( BR,MDR ) ) ) ) * ( FirstVNF_Mem_Server / BR ) )", "choosing": "Min( ( MUR * MUC ) ,( ( RMSe / MUR ) - ( RRSe * ( Max( MUC,Max( MUM,( ( CS + RRSe ) - MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.40445511315774585}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7510204081632653, "obj2": 0.11302130576149996}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.8346938775510204, "obj2": 0.0711102786069666}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( ( PN - DDR ) * Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( ( ( MUC / MLU ) - ( CS + RRSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( MUM,DS ) ) )", "obj1": 0.9428571428571428, "obj2": 0.027837534651785078}, {"determining": "( ( PN * ( ( FirstVNF_RAM_Server - ( DDR * ( PN - MDR ) ) ) * ( ( AMS / CRS ) * ( FirstVNF_Mem - Max( ACS,Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( RMSe - MUC ) ,( MUM * RRSe ) ) * MLU ) / ( MUR + Max( ( CS - RRSe ),( MLU + RCSe ) ) ) ) * ( Max( Max( MUC,( ( Max( Min( MUC ,RCSe ),MUR ) / ( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21428571428571427, "obj2": 0.6988625363635802}, {"determining": "( ( ( MDR * Const ) * ( ( ( ( ARS * ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) ) / MDR ) / AMS ) - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem - Min( Min( MDR ,AMS ) ,AMS ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUC - MUR ) / Min( ( RRSe - ( Min( ( DS + MUR ) ,MLU ) - ( MUM / CS ) ) ) ,MUC ) ) ,( ( RMSe / RRSe ) - ( ( ( MUC - MUC ) - Max( MUC,( ( RMSe * RRSe ) + Min( ( MLU - MUM ) ,MUM ) ) ) ) * CS ) ) )", "obj1": 0.8204081632653061, "obj2": 0.0759505779388541}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( Min( Const ,AMS ),MRS ) ) ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( Max( MUM,MUC ),RMSe ) ) - ( ( DS / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( MUM / ( Min( MUC ,MUM ) / ( DS + RRSe ) ) ) )", "obj1": 0.4857142857142857, "obj2": 0.3666849222312282}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) * ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ARS - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( CS ,( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( MUM / RRSe ) + ( RCSe + CS ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5664155101617917}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( ( Max( ( RRSe * MUM ),( MUM + ( RMSe / MUR ) ) ) + ( ( RCSe / RRSe ) + MLU ) ) + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7979591836734694, "obj2": 0.09169497126513493}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( FirstVNF_Mem_Server * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),( ( ( ( RCSe / RRSe ) + ( CS - MUC ) ) - RRSe ) + ( ( Max( ( RRSe * MUM ),( RCSe + ( RMSe / MUR ) ) ) + ( ( RCSe / RRSe ) + MLU ) ) + RCSe ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.7428571428571429, "obj2": 0.12221862780043238}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( ( BR + MRS ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( ( RMSe * CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.17959183673469387, "obj2": 0.7463751775975517}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.7877551020408163, "obj2": 0.1016596469048836}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.763265306122449, "obj2": 0.10619153580839678}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7693877551020408, "obj2": 0.10198783035198625}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( ( FirstVNF_RAM_Server + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( RCSe / RRSe ) + ( CS + ( RMSe / ( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ) ) )", "obj1": 0.9142857142857143, "obj2": 0.03147926440589848}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - Max( ( CRS - ( ( ( ACS - ACS ) + Min( AMS ,FirstVNF_RAM ) ) * MRS ) ),( ACS * Min( ( MRS - Max( FirstVNF_CPU_Server,ACS ) ) ,PN ) ) ) ) ) * ( ( ( MDR / ( ( PN + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( ACS + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,Max( CRS,MDR ) ) ) * ( ( ACS * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( DS,RRSe ) * Max( ( MUR / Max( CS,RCSe ) ),( RMSe - ( RCSe + RCSe ) ) ) ) ,Min( CS ,Max( Min( MUM ,RMSe ),Min( ( RMSe * CS ) ,Min( RCSe ,RMSe ) ) ) ) ) + MUM ) * DS ) - ( ( MUC / MUM ) + ( ( ( MUR + RRSe ) / Max( RRSe,CS ) ) * RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( AMS * Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / BR ) ) ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( ( ( MLU - RMSe ) + Min( MUM ,MUM ) ) ,DS ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2353824444448635}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( ( PN - MDR ) / FirstVNF_Mem_Server ) ) + ( PN - ( Max( ( ( MDR / ( ( ARS * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,MLU ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,( ( RRSe / CS ) + Max( MLU,MUR ) ) ) ) / RRSe ) + ( CS - MLU ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.019570610762925593}, {"determining": "( ( RRS * FirstVNF_CPU ) + Min( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_RAM ) ) ,( Min( ARS ,Max( ( ( DDR * MRS ) - ( Const + ( FirstVNF_RAM + Const ) ) ),( ( ( AMS - FirstVNF_Mem ) / DDR ) * AMS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( Max( Max( MUM,MUC ),MUM ) + MUM ) + MUR ) ,( ( RMSe + MUR ) - ( ( ( DS * ( ( ( MUC * MUM ) * MUM ) - ( MUC * Min( MUR ,RCSe ) ) ) ) - ( MUC - Max( RCSe,MUC ) ) ) * CS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( ( MDR - Const ) * ( ( Min( FirstVNF_CPU ,PN ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.7224489795918367, "obj2": 0.13279281627578754}, {"determining": "( ( ACS - ( BR + MRS ) ) + Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,Min( Min( FirstVNF_RAM ,( ACS + ( AMS - MDR ) ) ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( Max( ( ( CS - RRSe ) + ( RMSe + RCSe ) ),Max( RMSe,Max( MUM,MUC ) ) ) * ( RRSe / ( DS / RMSe ) ) ) + ( Max( Max( Max( RRSe,Max( MUM,MUC ) ),( ( CS - MUC ) + MUR ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( RMSe * RCSe ),( ( RMSe * RRSe ) + Min( Max( MUM,MLU ) ,MUM ) ) ) - ( ( ( ( MUR / MUM ) - Min( MLU ,RRSe ) ) * ( CS + MUC ) ) - RMSe ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3106126511844511}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( AMS - FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / FirstVNF_RAM ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM_Server + ( Const - FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( ( CS + CS ) / RRSe ) + ( RCSe + CS ) ) ) ),( Max( MUM,( ( RCSe / DS ) + ( ( ( MUC / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8908109447208762}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( PN - ( ( ( DDR * ( PN - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * Max( MRS,AMS ) ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - ( MDR * ( FirstVNF_CPU_Server - ACS ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.07959183673469387, "obj2": 0.8973641430261179}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_RAM ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR * RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + Max( RMSe,MUC ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,( RMSe * MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8469387755102041, "obj2": 0.0664439008721689}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.3693754666012872}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( Min( ARS ,( PN - CRS ) ) + ( ( RRS * MDR ) - ARS ) ),ARS ) ) - ( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( Min( MLU ,RMSe ),Max( RMSe,MUC ) ) ) ,Min( ( ( MUC / MUR ) / RCSe ) ,Max( MUR,RRSe ) ) ),RRSe ) * Max( RRSe,MUR ) ) + ( ( CS - MUC ) + MUR ) ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * ARS ) * ARS ) ) ),DDR ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) + Max( ( RRSe * MUM ),Max( MUR,MLU ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( ( ( MLU * ( ( RMSe + ( RRSe - CS ) ) * ( Min( RRSe ,RRSe ) / ( RMSe / DS ) ) ) ) - MUR ) - RCSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18889061338240667}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6489795918367347, "obj2": 0.19822807733549289}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( ( MDR + Max( Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - RCSe ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.7959183673469388, "obj2": 0.09884363555183537}, {"determining": "( ( ( PN - ( ( ( RRS / BR ) + FirstVNF_RAM ) / BR ) ) * ( ACS * Min( FirstVNF_RAM ,( Max( ( MDR * ( ACS + FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( ( ( CS / DS ) - MUC ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42857142857142855, "obj2": 0.420324446582125}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - ( CRS / ( Max( Max( ACS,( DDR - AMS ) ),PN ) - ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ACS ,MDR ) ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RRSe ) + ( Max( ( MUR / ( MUR * RMSe ) ),MUM ) + MLU ) ) ) * MUR ) - ( ( RCSe - RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5224489795918368, "obj2": 0.3189284973007594}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ( RRS * Min( ( Max( Const,FirstVNF_Mem ) - ( FirstVNF_RAM_Server + BR ) ) ,RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( ( RCSe / MUC ) * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.3747575729031833}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe * RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MUR ) ),RRSe ) * Max( RMSe,( RCSe / Min( RMSe ,RRSe ) ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.21043523020996904}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN - MDR ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( MUC / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.44693877551020406, "obj2": 0.3958336700812899}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.6510204081632653, "obj2": 0.194346638923008}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( Max( ( Max( FirstVNF_RAM_Server,Max( PN,FirstVNF_CPU ) ) - MRS ),MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,MUC ) ),Max( ( MUR - MUR ),( MLU - ( ( MUM + DS ) + ( RMSe * MUR ) ) ) ) ) * Max( ( Min( Min( Max( Min( Max( MUM,MUR ) ,MLU ),CS ) ,( MUR * MUM ) ) ,MLU ) + ( RCSe * RCSe ) ),MUR ) )", "obj1": 0.7244897959183674, "obj2": 0.13056990641162414}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Min( ( Min( DS ,RCSe ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - MUC ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0006276619887356751}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.3277544866290036}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.32086668229159176}, {"determining": "( ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( CS + ( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5664155101617917}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),( FirstVNF_RAM_Server + CRS ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8122448979591836, "obj2": 0.08176462630300951}, {"determining": "( ( Max( MDR,FirstVNF_Mem_Server ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( ( FirstVNF_RAM_Server + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( ( AMS * FirstVNF_Mem_Server ) * ACS ) - Min( ( FirstVNF_RAM_Server * BR ) ,( MDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe * ( MUC - RMSe ) ) - ( ( Max( RRSe,Min( ( RMSe / ( ( RCSe / MUC ) * ( RMSe * MLU ) ) ) ,Max( RMSe,MLU ) ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9, "obj2": 0.036390514124348905}, {"determining": "( ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_RAM ) * ( BR / MRS ) ) ) ,( CRS - MDR ) ) ) - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + Min( RRSe ,( RCSe + MLU ) ) ) ) ) / ( Max( ( RMSe + Min( Max( MUM,DS ) ,MUM ) ),( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}], "31": [{"determining": "( ( MDR / ( RRS - FirstVNF_Mem_Server ) ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,( ( MUC / MLU ) - ( CS + RRSe ) ) ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_CPU_Server ) - DDR ) * ( AMS - Max( Min( FirstVNF_CPU_Server ,DDR ),DDR ) ) ) * ( Const * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( RMSe * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,( ( RMSe * ( ( RRSe * RRSe ) * RCSe ) ) * DS ) ) - MUR ) - ( MUM / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + DDR ) + RRS ) ) - ( CRS / ( ARS / ACS ) ) ) ) ) )", "choosing": "( ( RMSe * DS ) - ( Max( MUC,MUM ) + ( CS + RCSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.056561851027454944}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,RMSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6775510204081633, "obj2": 0.17238911736912318}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( Min( ARS ,( PN - CRS ) ) + ( ( RRS * MDR ) - ARS ) ),ARS ) ) - ( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( Min( MLU ,RMSe ),Max( RMSe,MUC ) ) ) ,Min( ( ( MUC / MUR ) / RCSe ) ,Max( MUR,RRSe ) ) ),RRSe ) * Max( RRSe,MUR ) ) + ( ( CS - MUC ) + MUR ) ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( PN * Const ) ,( FirstVNF_Mem_Server * ( PN - MRS ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3310316845170566}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / BR ) - ( MDR - Min( Max( FirstVNF_RAM_Server,( MDR + ARS ) ) ,Const ) ) ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + Max( RRSe,RCSe ) ) ) ) * ( Max( Max( MUC,( RRSe / Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6938775510204082, "obj2": 0.1597402883367557}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( ( PN - MDR ) / FirstVNF_Mem_Server ) ) + ( PN - ( Max( ( ( MDR / ( ( ARS * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,MLU ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,( ( RRSe / CS ) + Max( MLU,MUR ) ) ) ) / RRSe ) + ( CS - MLU ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.019570610762925593}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( ( FirstVNF_RAM_Server - BR ),ACS ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( MDR - PN ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( RCSe,MUC ) ) ) - ( DS - ( ( ( CS * MUM ) - MUR ) * MUC ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,( MUR - MUM ) ) ) + ( CS + RCSe ) ) )", "obj1": 0.5428571428571428, "obj2": 0.30383892846681865}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.9877551020408163, "obj2": 0.013503994659185775}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6811455926659161}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ( RRS * Min( ( Max( Const,FirstVNF_Mem ) - ( FirstVNF_RAM_Server + BR ) ) ,RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( ( RCSe / MUC ) * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.3747575729031833}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.563265306122449, "obj2": 0.2893791944728908}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( DDR * FirstVNF_CPU ) - ACS ) + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( MUR,CS ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18889061338240667}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - DDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * Min( BR ,( ( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_Mem_Server ) / ( ( PN / DDR ) / ( RRS * FirstVNF_Mem ) ) ) - CRS ) ) ) ) )", "choosing": "( ( CS * MUC ) - ( DS - RRSe ) )", "obj1": 0.7204081632653061, "obj2": 0.1559324633644541}, {"determining": "( ( Max( MDR,FirstVNF_Mem_Server ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( ( FirstVNF_RAM_Server + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( ( AMS * FirstVNF_Mem_Server ) * ACS ) - Min( ( FirstVNF_RAM_Server * BR ) ,( MDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe * ( MUC - RMSe ) ) - ( ( Max( RRSe,Min( ( RMSe / ( ( RCSe / MUC ) * ( RMSe * MLU ) ) ) ,Max( RMSe,MLU ) ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9, "obj2": 0.036390514124348905}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.6428571428571429, "obj2": 0.20215668900323763}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( Min( Const ,AMS ),MRS ) ) ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( Max( MUM,MUC ),RMSe ) ) - ( ( DS / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( MUM / ( Min( MUC ,MUM ) / ( DS + RRSe ) ) ) )", "obj1": 0.4857142857142857, "obj2": 0.3666849222312282}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.8346938775510204, "obj2": 0.0711102786069666}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) * ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ARS - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( CS ,( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( MUM / RRSe ) + ( RCSe + CS ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5664155101617917}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.28792910387769866}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.3693754666012872}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * PN ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( ( ( MUC + ( RRSe + MUR ) ) / MUR ),( CS - RCSe ) ) ) * ( RCSe / CS ) )", "obj1": 0.7122448979591837, "obj2": 0.15889774985871752}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( MDR ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( RCSe / RRSe ) + Max( RMSe,( RCSe / Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.926530612244898, "obj2": 0.02912495237424742}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.30888879281751114}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - Max( ( CRS - ( ( ( ACS - ACS ) + Min( AMS ,FirstVNF_RAM ) ) * MRS ) ),( ACS * Min( ( MRS - Max( FirstVNF_CPU_Server,ACS ) ) ,PN ) ) ) ) ) * ( ( ( MDR / ( ( PN + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( ACS + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,Max( CRS,MDR ) ) ) * ( ( ACS * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( DS,RRSe ) * Max( ( MUR / Max( CS,RCSe ) ),( RMSe - ( RCSe + RCSe ) ) ) ) ,Min( CS ,Max( Min( MUM ,RMSe ),Min( ( RMSe * CS ) ,Min( RCSe ,RMSe ) ) ) ) ) + MUM ) * DS ) - ( ( MUC / MUM ) + ( ( ( MUR + RRSe ) / Max( RRSe,CS ) ) * RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( ( PN - ( ( ( RRS / BR ) + FirstVNF_RAM ) / BR ) ) * ( ACS * Min( FirstVNF_RAM ,( Max( ( MDR * ( ACS + FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( ( ( CS / DS ) - MUC ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42857142857142855, "obj2": 0.420324446582125}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( ( MDR - Const ) * ( ( Min( FirstVNF_CPU ,PN ) / Max( ( FirstVNF_CPU - ( FirstVNF_CPU_Server - ACS ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,DS ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.7306122448979592, "obj2": 0.12772242870586195}, {"determining": "( ( PN - ( MRS + BR ) ) + Min( Min( ( ( FirstVNF_Mem * ( ARS * Min( CRS ,ACS ) ) ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - CRS ) ) ) )", "choosing": "Min( ( MUC / Max( MLU,DS ) ) ,( ( RMSe - DS ) - ( CS * ( ( CS / MUR ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( RRS * AMS ) * ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) - MDR ) / BR ) )", "choosing": "( ( ( DS - Max( RMSe,DS ) ) / ( RMSe - MUC ) ) - ( ( RRSe - RMSe ) + ( MLU + RMSe ) ) )", "obj1": 0.7224489795918367, "obj2": 0.13279281627578754}, {"determining": "( ( Min( ( ACS - FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,Max( BR,MDR ) ) ) ) * ( FirstVNF_Mem_Server / BR ) )", "choosing": "Min( ( MUR * MUC ) ,( ( RMSe / MUR ) - ( RRSe * ( Max( MUC,Max( MUM,( ( CS + RRSe ) - MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.40445511315774585}, {"determining": "( ( PN - ( ( ( DDR * ( FirstVNF_CPU_Server - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * Max( MRS,AMS ) ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - ( MDR * ( FirstVNF_CPU_Server - ACS ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( DS * RMSe ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8857697852217642}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.3277544866290036}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2408913626102001}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.3178820698820492}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.6510204081632653, "obj2": 0.194346638923008}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( Max( Max( ( RMSe * CS ),MUR ),( CS + Max( MUM,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.18571428571428572, "obj2": 0.746254967119478}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_RAM ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR * RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + Max( RMSe,MUC ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,( RMSe * MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8469387755102041, "obj2": 0.06644390087216889}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( AMS - FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / FirstVNF_RAM ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM_Server + ( Const - FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( ( CS + CS ) / RRSe ) + ( RCSe + CS ) ) ) ),( Max( MUM,( ( RCSe / DS ) + ( ( ( MUC / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8908109447208762}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - ( CRS / ( Max( Max( ACS,( DDR - AMS ) ),PN ) - ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ACS ,MDR ) ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RRSe ) + ( Max( ( MUR / ( MUR * RMSe ) ),MUM ) + MLU ) ) ) * MUR ) - ( ( RCSe - RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( ARS + Max( ( FirstVNF_CPU_Server + MDR ),Min( AMS ,Const ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + Min( RRSe ,( ( MUR / ( MLU + MUR ) ) + Min( MLU ,CS ) ) ) ) ) * MLU ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Min( RMSe ,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( ( MLU * MUC ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2408913626102001}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( ( FirstVNF_RAM_Server + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( MUR,RCSe ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.9102040816326531, "obj2": 0.03239560130182131}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.07461396661271885}, {"determining": "( ( ( Const - RRS ) / ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) * ( ( Max( ( DDR - Min( RRS ,Const ) ),FirstVNF_RAM ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RCSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( Min( RMSe ,Max( DS,( CS * RCSe ) ) ) + ( CS + ( Min( MUM ,RRSe ) + Max( ( MLU + MUM ),MLU ) ) ) ) )", "obj1": 0.7571428571428571, "obj2": 0.10876774361705689}, {"determining": "( ( PN * ( ( FirstVNF_RAM_Server - ( DDR * ( PN - MDR ) ) ) * ( ( AMS / CRS ) * ( FirstVNF_Mem - Max( ACS,Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( RMSe - MUC ) ,( MUM * RRSe ) ) * MLU ) / ( MUR + Max( ( CS - RRSe ),( MLU + RCSe ) ) ) ) * ( Max( Max( MUC,( ( Max( Min( MUC ,RCSe ),MUR ) / ( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21428571428571427, "obj2": 0.6988625363635802}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / MDR ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUM,MUC ) ) - ( ( RCSe / RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.7877551020408163, "obj2": 0.09335479498733383}, {"determining": "( ( AMS * Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / BR ) ) ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( ( ( MLU - RMSe ) + Min( MUM ,MUM ) ) ,DS ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2353824444448635}, {"determining": "( ( ( PN - DDR ) * Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9489795918367347, "obj2": 0.022109691313257174}, {"determining": "( ( ( PN - DDR ) * Max( ( Min( ( MRS - ( ACS / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR * ( Min( ( ( ( MUC / MLU ) - ( RMSe + RRSe ) ) * RMSe ) ,MUM ) * RMSe ) ) ,( ( Min( MLU ,MLU ) - MUR ) - Max( MUM,DS ) ) )", "obj1": 0.9408163265306122, "obj2": 0.028917868438875786}, {"determining": "( ( ( MDR - Const ) * ( ( Min( FirstVNF_CPU ,PN ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.7448979591836735, "obj2": 0.11940148784167953}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),( FirstVNF_RAM_Server + CRS ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8122448979591836, "obj2": 0.08176462630300951}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.32086668229159176}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - ( Min( MUR ,( Max( Max( RMSe,MUR ),DS ) / RMSe ) ) / MUR ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.003541937821226448}, {"determining": "( ( ( PN - FirstVNF_CPU ) * ( ACS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( CS + ( CS - MUC ) ) ),Min( ( ( MLU - DS ) - ( Max( CS,MLU ) * MUC ) ) ,( MUR - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.5664155101617917}], "32": [{"determining": "( ( AMS / Min( ( Min( ACS ,( MDR / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( ( PN + ACS ) / PN ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( ( Max( RMSe,( Max( DS,RCSe ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( RRS - FirstVNF_Mem_Server ) ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,( ( MUC / MLU ) - ( CS + RRSe ) ) ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( Min( ARS ,( PN - CRS ) ) + ( ( RRS * MDR ) - ARS ) ),ARS ) ) - ( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( Min( MLU ,RMSe ),Max( RMSe,MUC ) ) ) ,Min( ( ( MUC / MUR ) / RCSe ) ,Max( MUR,RRSe ) ) ),RRSe ) * Max( RRSe,MUR ) ) + ( ( CS - MUC ) + MUR ) ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( PN * Const ) ,( FirstVNF_Mem_Server * ( PN - MRS ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3310316845170566}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / BR ) - ( MDR - Min( Max( FirstVNF_RAM_Server,( MDR + ARS ) ) ,Const ) ) ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + Max( RRSe,RCSe ) ) ) ) * ( Max( Max( MUC,( RRSe / Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.6428571428571429, "obj2": 0.20215668900323763}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * Max( DDR,BR ) ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,MUC ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9693877551020408, "obj2": 0.014558714038949414}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * PN ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( ( ( MUC + ( RRSe + MUR ) ) / MUR ),( CS - RCSe ) ) ) * ( RCSe / CS ) )", "obj1": 0.7122448979591837, "obj2": 0.15227810370896064}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( Min( ( ACS - FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,Max( BR,MDR ) ) ) ) * ( FirstVNF_Mem_Server / BR ) )", "choosing": "Min( ( MUR * MUC ) ,( ( RMSe / MUR ) - ( RRSe * ( Max( MUC,Max( MUM,( ( CS + RRSe ) - MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.40445511315774585}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.171124889340205}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6714285714285714, "obj2": 0.18889061338240667}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( ( FirstVNF_RAM_Server + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / ( MUM / ( MUC / Max( MLU,DS ) ) ) ) + Max( RMSe,RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RMSe / CS ) * MUC ) ) ,( MUR - MLU ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9, "obj2": 0.036160602547581584}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472916}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR * FirstVNF_RAM ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( CS,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5618720207594773}, {"determining": "( ( ( ( ( ( ( Min( AMS ,MDR ) * PN ) * ARS ) - ( ( FirstVNF_CPU + Min( RRS ,AMS ) ) / MRS ) ) - ACS ) - ( FirstVNF_Mem_Server / AMS ) ) / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( MUR + MUC ) ) ) * ( RRSe / ( DS - RMSe ) ) ) ,( ( DS - ( RRSe / MUC ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,Max( MLU,CS ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.6483302078302791}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + MDR ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) ) - ( ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.30268206971315514}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( ( FirstVNF_RAM_Server + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( MUR,RCSe ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.9102040816326531, "obj2": 0.03239560130182131}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.563265306122449, "obj2": 0.2893791944728908}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5673469387755102, "obj2": 0.28792910387769866}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( PN - ( ( ACS - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ( Const - ( FirstVNF_Mem - Max( ARS,Min( ( ( CRS / FirstVNF_Mem_Server ) / Max( BR,Min( ACS ,FirstVNF_CPU_Server ) ) ) ,ARS ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( Min( MLU ,RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( MUR - ( MUR * RMSe ) ) )", "obj1": 0.1816326530612245, "obj2": 0.7430575724669992}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ( FirstVNF_CPU * ARS ) ) * PN ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + ( CS * RCSe ) ) ) ) ),Max( ( ( MUC + ( RRSe + MUR ) ) / MUR ),( CS - RCSe ) ) ) * ( RCSe / CS ) )", "obj1": 0.7714285714285715, "obj2": 0.10327620807963343}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,MDR ) ,( FirstVNF_Mem_Server * ( ( MRS - Const ) - MDR ) ) ) )", "choosing": "Min( ( MUR + Min( RRSe ,DS ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MUM,DS ) ) ) ) - ( RMSe * MUC ) ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.05957896798615757}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6938775510204082, "obj2": 0.1597402883367557}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( FirstVNF_CPU_Server - ACS ) ),AMS ) - ARS ) - ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ARS / MRS ) / MRS ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7575418265884105}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - Max( ( CRS - ( ( ( ACS - ACS ) + Min( AMS ,FirstVNF_RAM ) ) * MRS ) ),( ACS * Min( ( MRS - Max( FirstVNF_CPU_Server,ACS ) ) ,PN ) ) ) ) ) * ( ( ( MDR / ( ( PN + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( ACS + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,Max( CRS,MDR ) ) ) * ( ( ACS * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( DS,RRSe ) * Max( ( MUR / Max( CS,RCSe ) ),( RMSe - ( RCSe + RCSe ) ) ) ) ,Min( CS ,Max( Min( MUM ,RMSe ),Min( ( RMSe * CS ) ,Min( RCSe ,RMSe ) ) ) ) ) + MUM ) * DS ) - ( ( MUC / MUM ) + ( ( ( MUR + RRSe ) / Max( RRSe,CS ) ) * RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.6510204081632653, "obj2": 0.194346638923008}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( ( RCSe / RRSe ) + ( CS + RCSe ) ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6857142857142857, "obj2": 0.16509988977746523}, {"determining": "( ( ( PN - ( ( ( RRS / BR ) + FirstVNF_RAM ) / BR ) ) * ( ACS * Min( FirstVNF_RAM ,( Max( ( MDR * ( ACS + FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( ( ( CS / DS ) - MUC ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42857142857142855, "obj2": 0.420324446582125}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ( RRS * Min( ( Max( Const,FirstVNF_Mem ) - ( FirstVNF_RAM_Server + BR ) ) ,RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( ( RCSe / MUC ) * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.3747575729031833}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.4489795918367347, "obj2": 0.3965216302486813}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( DDR * FirstVNF_CPU ) - ACS ) + Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( MUR,CS ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,MUC ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( Min( Const ,AMS ),MRS ) ) ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( Max( MUM,MUC ),RMSe ) ) - ( ( DS / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( MUM / ( Min( MUC ,MUM ) / ( DS + RRSe ) ) ) )", "obj1": 0.4857142857142857, "obj2": 0.3666849222312282}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( PN - ( MRS + BR ) ) + Min( Min( ( ( FirstVNF_Mem * ( ARS * Min( CRS ,ACS ) ) ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - CRS ) ) ) )", "choosing": "Min( ( MUC / Max( MLU,DS ) ) ,( ( RMSe - DS ) - ( CS * ( ( CS / MUR ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6811455926659161}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,Min( Max( PN,ACS ) ,( FirstVNF_CPU * ( MDR + ( CRS + ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( ( Max( CS,RCSe ) * DS ) - ( ( Max( Min( ( RMSe / Min( ( RMSe / RRSe ) ,( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( ( RMSe / MUR ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38440499727311134}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( ( PN - MDR ) / FirstVNF_Mem_Server ) ) + ( PN - ( Max( ( ( MDR / ( ( ARS * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,MLU ),( ( Min( MUM ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,( ( RRSe / CS ) + Max( MLU,MUR ) ) ) ) / RRSe ) + ( CS - MLU ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( MUM + ( CS - MUC ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9530612244897959, "obj2": 0.019570610762925593}, {"determining": "( ( PN - ( ( ( DDR * ( FirstVNF_CPU_Server - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * Max( MRS,AMS ) ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - ( MDR * ( FirstVNF_CPU_Server - ACS ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( DS * RMSe ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8857697852217642}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( ( PN - DDR ) * Max( ( ( Min( ACS ,( MDR / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RMSe / ( Max( DS,RCSe ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.9408163265306122, "obj2": 0.025511957090260332}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( AMS * Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / BR ) ) ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( ( ( MLU - RMSe ) + Min( MUM ,MUM ) ) ,DS ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2353824444448635}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( ( RCSe * Max( MUC,RRSe ) ),MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.7224489795918367, "obj2": 0.13279281627578754}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.07461396661271885}, {"determining": "( ( ARS + Max( ( FirstVNF_CPU_Server + MDR ),Min( AMS ,Const ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + Min( RRSe ,( ( MUR / ( MLU + MUR ) ) + Min( MLU ,CS ) ) ) ) ) * MLU ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Min( RMSe ,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( ( MLU * MUC ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2408913626102001}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.30888879281751114}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) / ( Const - RRS ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( CS + RCSe ) )", "obj1": 0.753061224489796, "obj2": 0.1111811434120418}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( MDR ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( RCSe / RRSe ) + Max( RMSe,( RCSe / Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.926530612244898, "obj2": 0.02912495237424742}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( AMS - FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / FirstVNF_RAM ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM_Server + ( Const - FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( ( CS + CS ) / RRSe ) + ( RCSe + CS ) ) ) ),( Max( MUM,( ( RCSe / DS ) + ( ( ( MUC / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8908109447208762}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - ( CRS / ( Max( Max( ACS,( DDR - AMS ) ),PN ) - ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ACS ,MDR ) ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RRSe ) + ( Max( ( MUR / ( MUR * RMSe ) ),MUM ) + MLU ) ) ) * MUR ) - ( ( RCSe - RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.3277544866290036}, {"determining": "( ( PN * ( ( FirstVNF_RAM_Server - ( DDR * ( PN - MDR ) ) ) * ( ( AMS / CRS ) * ( FirstVNF_Mem - Max( ACS,Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( RMSe - MUC ) ,( MUM * RRSe ) ) * MLU ) / ( MUR + Max( ( CS - RRSe ),( MLU + RCSe ) ) ) ) * ( Max( Max( MUC,( ( Max( Min( MUC ,RCSe ),MUR ) / ( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21428571428571427, "obj2": 0.6988625363635802}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + DDR ) + RRS ) ) - ( CRS / ( ARS / ACS ) ) ) ) ) )", "choosing": "( ( RMSe * DS ) - ( Max( MUC,MUM ) + ( CS + RCSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.056561851027454944}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),( FirstVNF_RAM_Server + CRS ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8122448979591836, "obj2": 0.08176462630300951}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.3693754666012872}, {"determining": "( ( Max( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ),Const ) * ( ( ( MDR / ( AMS * PN ) ) / Max( ( FirstVNF_CPU - Min( MDR ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( MUR - ( ( RCSe / RRSe ) + Max( ( DS - RRSe ),( RCSe / Min( RMSe ,RRSe ) ) ) ) )", "obj1": 0.926530612244898, "obj2": 0.02912495237424742}, {"determining": "( ( AMS / FirstVNF_Mem ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RMSe ) + ( CS + RCSe ) ) ) ),Max( ( ( MUC + ( ( RCSe - ( MUR + CS ) ) + MUR ) ) / MUR ),( CS - RCSe ) ) ) * ( RCSe / CS ) )", "obj1": 0.7795918367346939, "obj2": 0.10120856588095882}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.23265306122448978, "obj2": 0.6811455926659161}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.8734693877551021, "obj2": 0.056561851027454944}], "33": [{"determining": "( ( AMS * Min( Min( CRS ,FirstVNF_Mem_Server ) ,( ( PN + ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) * Min( PN ,MDR ) ) ) ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( MUM / Max( Max( ( DS + Max( ( RCSe * ( MLU + RCSe ) ),MUR ) ),Min( ( ( RRSe + DS ) * CS ) ,MLU ) ),Min( RCSe ,MUR ) ) ) * Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( RRSe * MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Min( ( Min( ACS ,( MDR / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( ( PN + ACS ) / PN ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( ( Max( RMSe,( Max( DS,RCSe ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.30888879281751114}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( PN - Min( ( ( FirstVNF_CPU * PN ) * ARS ) ,MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( BR * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU * ( RMSe / Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ,DS ) - Min( ( MUR + ( CS - MUC ) ) ,( Max( Min( Max( ( ( RCSe / RRSe ) + ( CS + RCSe ) ),Max( ( CS * MUC ),RMSe ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.1762709415073804}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( PN * Const ) ,( FirstVNF_Mem_Server * ( PN - MRS ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3310316845170566}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( Max( MDR,Const ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) / MUR ) ) * DS ) - ( MUR + ( CS - MUC ) ) )", "obj1": 0.7428571428571429, "obj2": 0.11715735327884386}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( MUM,DS ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.6428571428571429, "obj2": 0.20206579107522632}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( Min( ( ACS - FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,Max( BR,MDR ) ) ) ) * ( FirstVNF_Mem_Server / BR ) )", "choosing": "Min( ( MUR * MUC ) ,( ( RMSe / MUR ) - ( RRSe * ( Max( MUC,Max( MUM,( ( CS + RRSe ) - MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.40445511315774585}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),( FirstVNF_RAM_Server + CRS ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8122448979591836, "obj2": 0.08176462630300951}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.3272504783080771}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + MDR ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) ) - ( ( CS * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( DS / MUC ) ) ) ) ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5489795918367347, "obj2": 0.30268206971315514}, {"determining": "( ( ARS + Max( ( FirstVNF_CPU_Server + MDR ),Min( AMS ,Const ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + Min( RRSe ,( ( MUR / ( MLU + MUR ) ) + Min( MLU ,CS ) ) ) ) ) * MLU ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Min( RMSe ,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( ( MLU * MUC ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2408913626102001}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Const ) * ARS ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( ( MUM * Max( MUC,RRSe ) ),MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( MLU / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RRSe,MLU ) ) + ( RRSe - RRSe ) ) )", "obj1": 0.726530612244898, "obj2": 0.13049457107775655}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * Min( MDR ,( FirstVNF_Mem_Server * ( MDR - ( ARS + ARS ) ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) + ( ( ( Const / ARS ) + ( RRS - Const ) ) - CRS ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.8877551020408163, "obj2": 0.04633764181466351}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.641613825184119}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) / ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + ACS ) ,FirstVNF_CPU ) ),( MRS - ( FirstVNF_Mem / ( BR + FirstVNF_CPU ) ) ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( ( ( DS / ( RCSe / ( RRSe / MUR ) ) ) * RMSe ),MUM ) + RCSe ) ) ,( MUM - ( RMSe - MUR ) ) )", "obj1": 0.8469387755102041, "obj2": 0.07296043417208488}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( AMS / FirstVNF_Mem ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RMSe ) + ( CS + RCSe ) ) ) ),Max( ( ( MUC + ( ( RCSe - ( MUR + CS ) ) + MUR ) ) / MUR ),( CS - RCSe ) ) ) * ( RCSe / CS ) )", "obj1": 0.7795918367346939, "obj2": 0.10120856588095882}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - ( PN - ( BR + MRS ) ) ) ) ) )", "choosing": "( Max( MUM,( RMSe * RRSe ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8692278839600746}, {"determining": "( ( PN - ( ( ( ( FirstVNF_CPU / ACS ) + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * ( ( RRS - MDR ) / Min( ( ( ( AMS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( DS / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Min( Min( MUM ,CS ) ,MUR ),RCSe ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8322380205195701}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR * FirstVNF_RAM ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( CS,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5618720207594773}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.9204081632653062, "obj2": 0.02802363603452431}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( AMS - FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / FirstVNF_RAM ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM_Server + ( Const - FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( ( CS + CS ) / RRSe ) + ( RCSe + CS ) ) ) ),( Max( MUM,( ( RCSe / DS ) + ( ( ( MUC / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8908109447208762}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( AMS * Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / BR ) ) ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( ( ( MLU - RMSe ) + Min( MUM ,MUM ) ) ,DS ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2353824444448635}, {"determining": "( ( PN - ( ( ACS - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ( Const - ( FirstVNF_Mem - Max( ARS,Min( ( ( CRS / FirstVNF_Mem_Server ) / Max( BR,Min( ACS ,FirstVNF_CPU_Server ) ) ) ,ARS ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( Min( MLU ,RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( MUR - ( MUR * RMSe ) ) )", "obj1": 0.1816326530612245, "obj2": 0.7430575724669992}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.05957896798615756}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / BR ) - ( MDR - Min( Max( FirstVNF_RAM_Server,( MDR + ARS ) ) ,Const ) ) ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + Max( RRSe,RCSe ) ) ) ) * ( Max( Max( MUC,( RRSe / Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( FirstVNF_CPU_Server - ACS ) ),AMS ) - ARS ) - ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ARS / MRS ) / MRS ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7575418265884105}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - Max( ( CRS - ( ( ( ACS - ACS ) + Min( AMS ,FirstVNF_RAM ) ) * MRS ) ),( ACS * Min( ( MRS - Max( FirstVNF_CPU_Server,ACS ) ) ,PN ) ) ) ) ) * ( ( ( MDR / ( ( PN + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ARS ) ) * FirstVNF_RAM ) / ( ( ( ACS + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,Max( CRS,MDR ) ) ) * ( ( ACS * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( ( Max( DS,RRSe ) * Max( ( MUR / Max( CS,RCSe ) ),( RMSe - ( RCSe + RCSe ) ) ) ) ,Min( CS ,Max( Min( MUM ,RMSe ),Min( ( RMSe * CS ) ,Min( RCSe ,RMSe ) ) ) ) ) + MUM ) * DS ) - ( ( MUC / MUM ) + ( ( ( MUR + RRSe ) / Max( RRSe,CS ) ) * RCSe ) ) )", "obj1": 0.4306122448979592, "obj2": 0.416908974182718}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472915}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( ( PN - ( ( ( RRS / BR ) + FirstVNF_RAM ) / BR ) ) * ( ACS * Min( FirstVNF_RAM ,( Max( ( MDR * ( ACS + FirstVNF_CPU_Server ) ),FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( ( ( CS / DS ) - MUC ),MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.42857142857142855, "obj2": 0.420324446582125}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.29460056100668974}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ( RRS * Min( ( Max( Const,FirstVNF_Mem ) - ( FirstVNF_RAM_Server + BR ) ) ,RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( ( RCSe / MUC ) * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.3747575729031833}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.7979591836734694, "obj2": 0.09176116449976665}, {"determining": "( Max( Max( ARS,FirstVNF_RAM ),ACS ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - PN ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4489795918367347, "obj2": 0.39355861349111915}, {"determining": "( ( ( ( PN - ( Min( ARS ,FirstVNF_RAM ) * DDR ) ) - RRS ) - FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,( ( FirstVNF_RAM / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * BR ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( Max( RMSe,( ( MUM + DS ) * RMSe ) ),( MUM + ( CS - MUC ) ) ) / MUM ) + MUM ) ) ,Min( RCSe ,MUM ) )", "obj1": 0.3551020408163265, "obj2": 0.4956594083523935}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * PN ) ) + MRS ) ) + Min( ( ARS * ( ( FirstVNF_CPU / ACS ) * PN ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( ( ( MUC + ( RRSe + MUR ) ) / MUR ),Max( ( ( MUC + ( RRSe + MUR ) ) / MUR ),( CS - RCSe ) ) ) * ( RCSe / CS ) )", "obj1": 0.7183673469387755, "obj2": 0.1488267981346334}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.6510204081632653, "obj2": 0.194346638923008}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( ACS - FirstVNF_CPU_Server ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,MUC ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9775510204081632, "obj2": 0.009153328837347761}, {"determining": "( ( PN - ( MRS + BR ) ) + Min( Min( ( ( FirstVNF_Mem * ( ARS * Min( CRS ,ACS ) ) ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - CRS ) ) ) )", "choosing": "Min( ( MUC / Max( MLU,DS ) ) ,( ( RMSe - DS ) - ( CS * ( ( CS / MUR ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( Min( Const ,AMS ),MRS ) ) ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( Max( MUM,MUC ),RMSe ) ) - ( ( DS / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( MUM / ( Min( MUC ,MUM ) / ( DS + RRSe ) ) ) )", "obj1": 0.4857142857142857, "obj2": 0.3666849222312282}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.07442399557944307}, {"determining": "( ( PN - Min( ( ARS * ( ( FirstVNF_CPU / ACS ) * PN ) ) ,MRS ) ) + Min( Max( Min( ( Min( RRS ,FirstVNF_CPU ) * MRS ) ,FirstVNF_RAM ),PN ) ,FirstVNF_RAM ) )", "choosing": "( Max( Max( RMSe,Max( ( CS * Max( RMSe,Min( MUC ,DS ) ) ),( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( ( ( MUR + ( RRSe + MUR ) ) / MUR ),( CS - RCSe ) ) ) * ( RCSe / CS ) )", "obj1": 0.7020408163265306, "obj2": 0.15912621113376807}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5714285714285714, "obj2": 0.2859335081306804}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,Min( Max( PN,ACS ) ,( FirstVNF_CPU * ( MDR + ( CRS + ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( ( Max( CS,RCSe ) * DS ) - ( ( Max( Min( ( RMSe / Min( ( RMSe / RRSe ) ,( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( ( RMSe / MUR ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38440499727311134}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.6510204081632653, "obj2": 0.194346638923008}, {"determining": "( ( FirstVNF_RAM_Server * Max( ( Min( ARS ,( PN - CRS ) ) + ( ( RRS * MDR ) - ARS ) ),ARS ) ) - ( ACS - FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( Min( MLU ,RMSe ),Max( RMSe,MUC ) ) ) ,Min( ( ( MUC / MUR ) / RCSe ) ,Max( MUR,RRSe ) ) ),RRSe ) * Max( RRSe,MUR ) ) + ( ( CS - MUC ) + MUR ) ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + CS ) ) )", "obj1": 0.8979591836734694, "obj2": 0.04528525034267919}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( ( RCSe / RRSe ) + ( CS + RCSe ) ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6857142857142857, "obj2": 0.16509988977746523}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8224489795918367, "obj2": 0.07461396661271885}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ( FirstVNF_CPU * ARS ) ) * PN ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + ( CS * RCSe ) ) ) ) ),Max( ( ( MUC + ( RRSe + MUR ) ) / MUR ),( CS - RCSe ) ) ) * ( RCSe / CS ) )", "obj1": 0.7714285714285715, "obj2": 0.10327620807963343}, {"determining": "( ( ( PN - DDR ) * Max( ( ( Min( ACS ,( MDR / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RMSe / ( Max( DS,RCSe ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.9408163265306122, "obj2": 0.025511957090260332}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.171124889340205}, {"determining": "( ( PN - ( ( ( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * RMSe ),Max( Max( MUC,RRSe ),Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.763265306122449, "obj2": 0.10606018698625545}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( ( RCSe * Max( MUC,RRSe ) ),MUC ) ) ) - ( ( RCSe / DS ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.7204081632653061, "obj2": 0.1338779383731773}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + CRS ) + RRS ) ) ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( CS / ( DS * RMSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017327840310357334}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - ( CRS / ( Max( Max( ACS,( DDR - AMS ) ),PN ) - ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ACS ,MDR ) ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RRSe ) + ( Max( ( MUR / ( MUR * RMSe ) ),MUM ) + MLU ) ) ) * MUR ) - ( ( RCSe - RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( Min( FirstVNF_CPU ,PN ) * ARS ) ) ) - ( MRS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU * PN ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( MLU / RRSe ) + ( ( RMSe + RRSe ) / DS ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6836448273327452}, {"determining": "( ( PN * ( ( FirstVNF_RAM_Server - ( DDR * ( PN - MDR ) ) ) * ( ( AMS / CRS ) * ( FirstVNF_Mem - Max( ACS,Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( RMSe - MUC ) ,( MUM * RRSe ) ) * MLU ) / ( MUR + Max( ( CS - RRSe ),( MLU + RCSe ) ) ) ) * ( Max( Max( MUC,( ( Max( Min( MUC ,RCSe ),MUR ) / ( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21428571428571427, "obj2": 0.6988625363635802}], "34": [{"determining": "( Min( ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RRSe * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * Min( Min( CRS ,FirstVNF_Mem_Server ) ,( ( PN + ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) * Min( PN ,MDR ) ) ) ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( MUM / Max( Max( ( DS + Max( ( RCSe * ( MLU + RCSe ) ),MUR ) ),Min( ( ( RRSe + DS ) * CS ) ,MLU ) ),Min( RCSe ,MUR ) ) ) * Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( RRSe * MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) * ( Const * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( MDR * ( ACS * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( MUC + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( RMSe ,( ( CS / MLU ) * ( RRSe / MUC ) ) ) ) / ( RRSe - RCSe ) ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( ( RRSe * Max( RRSe,DS ) ) + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / Min( RMSe ,MUM ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7989423824491636}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) / ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( FirstVNF_CPU * PN ) ) ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8881439100939948}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU * ( ( Min( ( RRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + ACS ) * Min( Min( FirstVNF_CPU_Server ,RRS ) ,( ( ACS + PN ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + ( ( FirstVNF_CPU_Server + RRS ) / ARS ) )", "choosing": "( ( ( MLU - ( ( DS + MLU ) - ( RRSe * MUC ) ) ) / Max( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUR ),( MLU / RCSe ) ) ) * Min( ( ( DS * MUC ) + ( MUR / RCSe ) ) ,DS ) )", "obj1": 0.7142857142857143, "obj2": 0.1477541125516482}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( Min( FirstVNF_CPU ,PN ) * ARS ) ) ) - ( MRS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU * PN ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( MLU / RRSe ) + ( ( RMSe + RRSe ) / DS ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6836448273327452}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ( RRS * Min( ( Max( Const,FirstVNF_Mem ) - ( FirstVNF_RAM_Server + BR ) ) ,RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( ( RCSe / MUC ) * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.3747575729031833}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( PN - Min( ( ( FirstVNF_CPU * PN ) * ARS ) ,MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( BR * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU * ( RMSe / Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ,DS ) - Min( ( MUR + ( CS - MUC ) ) ,( Max( Min( Max( ( ( RCSe / RRSe ) + ( CS + RCSe ) ),Max( ( CS * MUC ),RMSe ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.1762709415073804}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( CS - MUC ) ) ) * ( Max( Max( MUC,( ( RMSe + RMSe ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5714285714285714, "obj2": 0.2859335081306804}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( DDR * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + CS ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( MUC - ( ( RCSe - ( RRSe / DS ) ) / RCSe ) ) ) ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04147977340782397}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( Min( Const ,AMS ),MRS ) ) ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( Max( MUM,MUC ),RMSe ) ) - ( ( DS / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( MUM / ( Min( MUC ,MUM ) / ( DS + RRSe ) ) ) )", "obj1": 0.4857142857142857, "obj2": 0.3666849222312282}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RCSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5183673469387755, "obj2": 0.3261340121031178}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) + ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_RAM / ARS ) ,Min( ARS ,PN ) ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( RMSe + CS ) - ( Max( ( MUR - RMSe ),( ( ( ( DS / ( MUC * RMSe ) ) - MUM ) + Max( DS,RMSe ) ) + CS ) ) - RRSe ) )", "obj1": 0.7020408163265306, "obj2": 0.15870090369386275}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3096532709590851}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) * ( ( RRS + CRS ) + ( FirstVNF_RAM + PN ) ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( ( ( RMSe / MUR ) / CS ),Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( MLU - MUC ) ) ),MUM ) + RCSe ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( CS + RRSe ) - ( MUC / MLU ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.8857142857142857, "obj2": 0.05371931166045628}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) / ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + ACS ) ,FirstVNF_CPU ) ),( MRS - ( FirstVNF_Mem / ( BR + FirstVNF_CPU ) ) ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( ( ( DS / ( RCSe / ( RRSe / MUR ) ) ) * RMSe ),MUM ) + RCSe ) ) ,( MUM - ( RMSe - MUR ) ) )", "obj1": 0.8469387755102041, "obj2": 0.07296043417208488}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - ( PN - ( BR + MRS ) ) ) ) ) )", "choosing": "( Max( MUM,( RMSe * RRSe ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8692278839600746}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.49795918367346936, "obj2": 0.3388580017752202}, {"determining": "( ( PN - ( ( ( ( FirstVNF_CPU / ACS ) + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * ( ( RRS - MDR ) / Min( ( ( ( AMS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( DS / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Min( Min( MUM ,CS ) ,MUR ),RCSe ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8322380205195701}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ( ( DDR * ( PN - MDR ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * Max( MRS,AMS ) ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21428571428571427, "obj2": 0.6954298040585456}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR * FirstVNF_RAM ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( CS,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5618720207594773}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( Min( ( ACS - FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,Max( BR,MDR ) ) ) ) * ( FirstVNF_Mem_Server / BR ) )", "choosing": "Min( ( MUR * MUC ) ,( ( RMSe / MUR ) - ( RRSe * ( Max( MUC,Max( MUM,( ( CS + RRSe ) - MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.40445511315774585}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.29460056100668974}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) * Min( PN ,( ( ( DDR * ( ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - Max( ( Min( Min( FirstVNF_Mem_Server ,Const ) ,BR ) - FirstVNF_CPU ),( PN / ( ACS + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.1673469387755102, "obj2": 0.7685632178846408}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( ( Max( RMSe,( Max( DS,RCSe ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6571428571428571, "obj2": 0.19047167065768686}, {"determining": "( ( PN - ( ( ACS - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ( Const - ( FirstVNF_Mem - Max( ARS,Min( ( ( CRS / FirstVNF_Mem_Server ) / Max( BR,Min( ACS ,FirstVNF_CPU_Server ) ) ) ,ARS ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( Min( MLU ,RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( MUR - ( MUR * RMSe ) ) )", "obj1": 0.1816326530612245, "obj2": 0.7430575724669992}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( PN * Const ) ,( FirstVNF_Mem_Server * ( PN - MRS ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3310316845170566}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( ( RCSe * Max( MUC,RRSe ) ),MUC ) ) ) - ( ( RCSe / DS ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.7204081632653061, "obj2": 0.1338779383731773}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.9204081632653062, "obj2": 0.02802363603452431}, {"determining": "( ( AMS * Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / BR ) ) ) - ( MDR - BR ) )", "choosing": "( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS - RRSe ) + ( CS * ( Max( MUM,RRSe ) - Min( ( ( MLU - RMSe ) + Min( MUM ,MUM ) ) ,DS ) ) ) ) ) * ( RRSe / ( DS * RMSe ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2353824444448635}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( FirstVNF_CPU_Server - ACS ) ),AMS ) - ARS ) - ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ARS / MRS ) / MRS ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7575418265884105}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Max( ACS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU_Server ) ,( Const * ( PN - MDR ) ) ) )", "choosing": "( ( MUM / RMSe ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.42857142857142855, "obj2": 0.41899321328263517}, {"determining": "( Max( Max( ARS,FirstVNF_RAM ),ACS ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - PN ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4489795918367347, "obj2": 0.39355861349111915}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6408163265306123, "obj2": 0.20239276266561498}, {"determining": "( ( ( ( PN - ( Min( ARS ,FirstVNF_RAM ) * DDR ) ) - RRS ) - FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,( ( FirstVNF_RAM / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * BR ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( Max( RMSe,( ( MUM + DS ) * RMSe ) ),( MUM + ( CS - MUC ) ) ) / MUM ) + MUM ) ) ,Min( RCSe ,MUM ) )", "obj1": 0.3551020408163265, "obj2": 0.4956594083523935}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( ( ACS + ARS ) * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR + ( ( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ) + MUM ) + RCSe ) ) ,( RRSe / ( RMSe * Min( RCSe ,DS ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.05957896798615756}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_RAM - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) * ( MDR - Const ) ) * ( CRS / ( ACS + RRS ) ) )", "choosing": "( ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) * ( MUM * ( RMSe + Max( MUC,RRSe ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12327220558558691}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.0741053699089517}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN - ( ( ( FirstVNF_CPU * PN ) * ACS ) + MRS ) ) - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( CS + RCSe ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.9346938775510204, "obj2": 0.022695790313429033}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,Min( Max( PN,ACS ) ,( FirstVNF_CPU * ( MDR + ( CRS + ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( ( Max( CS,RCSe ) * DS ) - ( ( Max( Min( ( RMSe / Min( ( RMSe / RRSe ) ,( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( ( RMSe / MUR ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38440499727311134}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.8081632653061225, "obj2": 0.08369848642695664}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) - MDR ) ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.019776494332519483}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( PN - ( BR + ( Min( RRS ,FirstVNF_CPU ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - PN ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( MUR + ( RRSe + MUR ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4387755102040816, "obj2": 0.41519638978800555}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - ( ( PN - MDR ) / FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) * ( RCSe / CS ) )", "obj1": 0.6959183673469388, "obj2": 0.1650703699536055}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2408913626102001}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7816326530612245, "obj2": 0.09570514754912882}, {"determining": "( ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( ( MUR + Max( ( CS - RRSe ),( MLU + RCSe ) ) ) / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( MUM,DS ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.7285714285714285, "obj2": 0.128960998930338}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.3272504783080771}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( ACS * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( ( MUM + DS ) * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.6310345064699756}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( ( PN - DDR ) * Max( ( ( Min( ACS ,( MDR / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( ( ( MDR / FirstVNF_RAM ) * FirstVNF_RAM ),Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( MUR + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RMSe / ( Max( DS,RCSe ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.019666935639339033}, {"determining": "( ( AMS / FirstVNF_CPU ) + Min( Min( ( AMS + ACS ) ,( AMS * FirstVNF_Mem ) ) ,( FirstVNF_CPU * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - Max( Min( MUR ,( Max( MUM,RMSe ) / RMSe ) ),MUR ) ) - ( ( Max( ( RMSe + MUC ),( MUM - DS ) ) * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( MLU / MUC ) ) ) ) ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.2987991108450622}, {"determining": "( ( MDR * Min( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server + RRS ) ) ,( Min( PN ,Min( ACS ,( CRS - DDR ) ) ) * ( ACS + PN ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.9877551020408163, "obj2": 0.004944388363882218}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472915}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - ( CRS / ( Max( Max( ACS,( DDR - AMS ) ),PN ) - ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,ARS ) ,Min( ACS ,MDR ) ) ) ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RRSe ) + ( Max( ( MUR / ( MUR * RMSe ) ),MUM ) + MLU ) ) ) * MUR ) - ( ( RCSe - RMSe ) + ( CS + RCSe ) ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9244897959183673, "obj2": 0.027035179323232066}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.641613825184119}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),( FirstVNF_RAM_Server + CRS ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8122448979591836, "obj2": 0.08176462630300951}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,( Max( PN,( FirstVNF_CPU_Server / PN ) ) * ( ( RRS + CRS ) + RRS ) ) ) ,( Min( PN ,MDR ) * ( PN + ARS ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ) + ( ( MUC - Max( RMSe,RCSe ) ) - MUC ) ) ) * ( CS / ( RRSe * RMSe ) ) )", "obj1": 0.9612244897959183, "obj2": 0.017327840310357334}], "35": [{"determining": "( ( AMS * Min( Min( CRS ,FirstVNF_Mem_Server ) ,( ( PN + ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) * Min( PN ,MDR ) ) ) ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( ( ( MUC + ( RRSe + MUR ) ) / MUR ),Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ) ) * ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( MDR / ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) ) * FirstVNF_RAM ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RRSe * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) * ( ( RRS + CRS ) + ( FirstVNF_RAM + PN ) ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( ( ( RMSe / MUR ) / CS ),Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( MLU - MUC ) ) ),MUM ) + RCSe ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( CS + RRSe ) - ( MUC / MLU ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.8857142857142857, "obj2": 0.05371931166045628}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ) ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN - ( ( ( FirstVNF_CPU * PN ) * ACS ) + MRS ) ) - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( CS + RCSe ) ),( ( MUC / MLU ) - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.9551020408163265, "obj2": 0.014629232180643326}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * ( AMS * Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / BR ) ) ) ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe * Max( MUC,RRSe ) ) ) ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.9857142857142858, "obj2": 0.004545692589676791}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ACS ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),RRSe ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7953758015891272}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2408913626102001}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR * FirstVNF_RAM ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( CS,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5618720207594773}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / MLU ) * Max( RMSe,RMSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6571428571428571, "obj2": 0.19042393987354125}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU * ( ( Min( ( RRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + ACS ) * Min( Min( FirstVNF_CPU_Server ,RRS ) ,( ( ACS + PN ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + ( ( FirstVNF_CPU_Server + RRS ) / ARS ) )", "choosing": "( ( ( MLU - ( ( DS + MLU ) - ( RRSe * MUC ) ) ) / Max( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUR ),( MLU / RCSe ) ) ) * Min( ( ( DS * MUC ) + ( MUR / RCSe ) ) ,DS ) )", "obj1": 0.7142857142857143, "obj2": 0.1477541125516482}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( Min( FirstVNF_CPU ,PN ) * ARS ) ) ) - ( MRS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU * PN ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( MLU / RRSe ) + ( ( RMSe + RRSe ) / DS ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6836448273327452}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * PN ) - Min( Min( PN ,FirstVNF_Mem ) ,( ( AMS * Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,BR ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + Max( PN,MRS ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) - ( ( RCSe / RRSe ) + ( Min( MUC ,RRSe ) + MLU ) ) ) * DS ) - ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * ( CS + DS ) ) ) ,Max( CS,MUM ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( MUC - CS ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.28275470803545516}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Max( ACS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU_Server ) ,( Const * ( PN - MDR ) ) ) )", "choosing": "( ( MUM / RMSe ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.42857142857142855, "obj2": 0.41899321328263517}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( ( PN - DDR ) * Max( ( ( Min( ACS ,( MDR / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( ( ( MDR / FirstVNF_RAM ) * FirstVNF_RAM ),Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR - RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.9081632653061225, "obj2": 0.0423181690762037}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.641613825184119}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3096532709590851}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( PN - ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( Max( PN,( FirstVNF_CPU_Server / PN ) ) * ( ( RRS + CRS ) + RRS ) ) ) )", "choosing": "( Max( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8608287122127187}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) + ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_RAM / ARS ) ,Min( ARS ,PN ) ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( RMSe + CS ) - ( Max( ( MUR - RMSe ),( ( ( ( DS / ( MUC * RMSe ) ) - MUM ) + Max( DS,RMSe ) ) + CS ) ) - RRSe ) )", "obj1": 0.7020408163265306, "obj2": 0.15870090369386275}, {"determining": "( ( PN - ( ( ( ( FirstVNF_CPU / ACS ) + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * ( ( RRS - MDR ) / Min( ( ( ( AMS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( DS / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Min( Min( MUM ,CS ) ,MUR ),RCSe ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8322380205195701}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( ( RCSe * Max( MUC,RRSe ) ),MUC ) ) ) - ( ( RCSe / DS ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.7204081632653061, "obj2": 0.1338779383731773}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( Min( ( ACS - FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,Max( BR,MDR ) ) ) ) * ( FirstVNF_Mem_Server / BR ) )", "choosing": "Min( ( MUR * MUC ) ,( ( RMSe / MUR ) - ( RRSe * ( Max( MUC,Max( MUM,( ( CS + RRSe ) - MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.40445511315774585}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server / Min( ( PN - ( ( ACS * FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - MDR ) ) ) * ( Min( FirstVNF_RAM ,Const ) * ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ( RRS * Min( ( Max( Const,FirstVNF_Mem ) - ( FirstVNF_RAM_Server + BR ) ) ,RRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( ( RCSe / MUC ) * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.463265306122449, "obj2": 0.3747575729031833}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.47551020408163264, "obj2": 0.3679640373323407}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.29460056100668974}, {"determining": "( ( PN - Min( ( ( FirstVNF_CPU * PN ) * ARS ) ,MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( BR * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU * ( RMSe / Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ,DS ) - Min( ( MUR + ( CS - MUC ) ) ,( Max( Min( Max( ( ( RCSe / RRSe ) + ( CS + RCSe ) ),Max( ( CS * MUC ),RMSe ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.1762709415073804}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( ( FirstVNF_RAM_Server - ( PN / ACS ) ) / ( ARS * ( FirstVNF_CPU * PN ) ) ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),MLU ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MLU + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.1673469387755102, "obj2": 0.764450730235122}, {"determining": "( ( PN - ( ( ACS - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) * ( Const - ( FirstVNF_Mem - Max( ARS,Min( ( ( CRS / FirstVNF_Mem_Server ) / Max( BR,Min( ACS ,FirstVNF_CPU_Server ) ) ) ,ARS ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( Min( MLU ,RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( MUR - ( MUR * RMSe ) ) )", "obj1": 0.1816326530612245, "obj2": 0.7430575724669992}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( PN * Const ) ,( FirstVNF_Mem_Server * ( PN - MRS ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3310316845170566}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( Max( Max( ARS,FirstVNF_RAM ),ACS ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - PN ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4489795918367347, "obj2": 0.39355861349111915}, {"determining": "( ( ( ( PN - ( Min( ARS ,FirstVNF_RAM ) * DDR ) ) - RRS ) - FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,( ( FirstVNF_RAM / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * BR ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( ( Max( Max( RMSe,( ( MUM + DS ) * RMSe ) ),( MUM + ( CS - MUC ) ) ) / MUM ) + MUM ) ) ,Min( RCSe ,MUM ) )", "obj1": 0.3551020408163265, "obj2": 0.4956594083523935}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( PN - ( BR + ( Min( RRS ,FirstVNF_CPU ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - PN ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( MUR + ( RRSe + MUR ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4387755102040816, "obj2": 0.41519638978800555}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.7714285714285715, "obj2": 0.10288489121209422}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.05957896798615756}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) / ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( FirstVNF_CPU * PN ) ) ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8881439100939948}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472915}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * CRS ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),( FirstVNF_RAM_Server + CRS ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,RRSe ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11039851602293661}, {"determining": "( ( PN / RRS ) + Min( ( ( PN - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ,( ( PN / MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe + RRSe ),Min( MUR ,( ( CS + MUR ) - RRSe ) ) ) - Max( ( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,RRSe ) ) ) - Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.41020408163265304, "obj2": 0.43589254718388876}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) - MDR ) ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.019776494332519483}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.49795918367346936, "obj2": 0.3388580017752202}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,Min( Max( PN,ACS ) ,( FirstVNF_CPU * ( MDR + ( CRS + ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( ( Max( CS,RCSe ) * DS ) - ( ( Max( Min( ( RMSe / Min( ( RMSe / RRSe ) ,( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( ( RMSe / MUR ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38440499727311134}, {"determining": "( ( ( MDR + Max( ( Min( DDR ,( ( FirstVNF_Mem * BR ) + FirstVNF_RAM ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( DS * CS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( MUM - CS ) )", "obj1": 0.746938775510204, "obj2": 0.11385519387333824}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6387755102040816, "obj2": 0.2036668276882519}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),( FirstVNF_RAM_Server + CRS ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8122448979591836, "obj2": 0.08176462630300951}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + ACS ) ,MRS ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * DS ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - MUM ) )", "obj1": 0.8428571428571429, "obj2": 0.0740323659964133}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( Min( Const ,AMS ),MRS ) ) ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( Max( MUM,MUC ),RMSe ) ) - ( ( DS / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( MUM / ( Min( MUC ,MUM ) / ( DS + RRSe ) ) ) )", "obj1": 0.4857142857142857, "obj2": 0.3666849222312282}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( FirstVNF_CPU_Server - ACS ) ),AMS ) - ARS ) - ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ARS / MRS ) / MRS ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7575418265884105}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.0741053699089517}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( ( Max( RMSe,( Max( DS,RCSe ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6469387755102041, "obj2": 0.19954623827738543}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_Mem_Server + Const ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( Min( ( RCSe - MUR ) ,RMSe ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.16974926198607343}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - ( ( PN - MDR ) / FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( Max( MUM,( CS + RCSe ) ),( CS - MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.6959183673469388, "obj2": 0.1635309311428686}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( ( RCSe / RRSe ) + ( CS + RCSe ) ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6877551020408164, "obj2": 0.16722603618522852}, {"determining": "( ( AMS / FirstVNF_CPU ) + Min( Min( ( AMS + ACS ) ,( AMS * FirstVNF_Mem ) ) ,( FirstVNF_CPU * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - Max( Min( MUR ,( Max( MUM,RMSe ) / RMSe ) ),MUR ) ) - ( ( Max( ( RMSe + MUC ),( MUM - DS ) ) * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( MLU / MUC ) ) ) ) ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.2987991108450622}, {"determining": "( ( PN - ( BR + ( Min( RRS ,FirstVNF_CPU ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - ( CRS * RRS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( MUR + ( RRSe + MUR ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.49387755102040815, "obj2": 0.3480860300742699}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),MRS ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUC + ( RMSe * ( ( RRSe / MUC ) - RRSe ) ) ) ,( ( RMSe / MUR ) - ( CS * ( Max( MUC,( ( ( RCSe / MUC ) * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.3114705234173488}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.3272504783080771}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( ACS * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( ( MUM + DS ) * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.6310345064699756}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( DDR * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9163265306122449, "obj2": 0.036942113343077836}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( BR + MRS ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + Max( Min( MUC ,RCSe ),MUR ) ) - MUC ) ) ) * ( ( Min( MUR ,( MLU + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8998762149004264}], "36": [{"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) + ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( BR - FirstVNF_Mem ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR - RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * Min( Min( CRS ,FirstVNF_Mem_Server ) ,( ( PN + ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) * Min( PN ,MDR ) ) ) ) - ( FirstVNF_CPU_Server - MDR ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),Max( ( ( MUC + ( RRSe + MUR ) ) / MUR ),Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ) ) * ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( Min( FirstVNF_CPU ,PN ) * ARS ) ) ) - ( MRS - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU * PN ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( MLU / RRSe ) + ( ( RMSe + RRSe ) / DS ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * ( RCSe / RRSe ) ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6836448273327452}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472915}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( AMS / FirstVNF_CPU ) + Min( Min( ( AMS + ACS ) ,( AMS * FirstVNF_Mem ) ) ,( FirstVNF_CPU * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - Max( Min( MUR ,( Max( MUM,RMSe ) / RMSe ) ),MUR ) ) - ( ( Max( ( RMSe + MUC ),( MUM - DS ) ) * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( MLU / MUC ) ) ) ) ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.2987991108450622}, {"determining": "( ( PN - ( ACS + RRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( MDR - ( PN - ( ( ( FirstVNF_CPU * PN ) - ACS ) + MRS ) ) ) ) ) )", "choosing": "Min( ( MUR + ( ( MUR * ( ( ( MUC + MLU ) * Min( Min( MUC ,MUC ) ,CS ) ) - ( MUC - ( MLU - ( RCSe + DS ) ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( MUR * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.01460268707611645}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.05957896798615756}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * PN ) - Min( Min( PN ,FirstVNF_Mem ) ,( ( AMS * Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,BR ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + Max( PN,MRS ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) - ( ( RCSe / RRSe ) + ( Min( MUC ,RRSe ) + MLU ) ) ) * DS ) - ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * ( CS + DS ) ) ) ,Max( CS,MUM ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( MUC - CS ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.28275470803545516}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) / ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( FirstVNF_CPU * PN ) ) ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8881439100939948}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ( PN - DDR ) * Max( ( ( Min( ACS ,( MDR / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( ( ( MDR / FirstVNF_RAM ) * FirstVNF_RAM ),Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( RRSe * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9346938775510204, "obj2": 0.027975902847348508}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.641613825184119}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( PN - ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( Max( PN,( FirstVNF_CPU_Server / PN ) ) * ( ( RRS + CRS ) + RRS ) ) ) )", "choosing": "( Max( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.10612244897959183, "obj2": 0.8608287122127187}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( ACS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( DS * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7775510204081633, "obj2": 0.09798976338111791}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Max( ACS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU_Server ) ,( Const * ( PN - MDR ) ) ) )", "choosing": "( ( MUM / RMSe ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.42857142857142855, "obj2": 0.41899321328263517}, {"determining": "( ( PN - ( ( ( ( FirstVNF_CPU / ACS ) + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * ( ( RRS - MDR ) / Min( ( ( ( AMS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( DS / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Min( Min( MUM ,CS ) ,MUR ),RCSe ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8322380205195701}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU * ( ( Min( ( RRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + ACS ) * Min( Min( FirstVNF_CPU_Server ,RRS ) ,( ( ACS + PN ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + ( ( FirstVNF_CPU_Server + RRS ) / ARS ) )", "choosing": "( ( ( MLU - ( ( DS + MLU ) - ( RRSe * MUC ) ) ) / Max( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUR ),( MLU / RCSe ) ) ) * Min( ( ( DS * MUC ) + ( MUR / RCSe ) ) ,DS ) )", "obj1": 0.7142857142857143, "obj2": 0.1477541125516482}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR * FirstVNF_RAM ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( CS,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5618720207594773}, {"determining": "( ( ( MDR + Max( ( Min( DDR ,( ( FirstVNF_Mem * BR ) + FirstVNF_RAM ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - Max( FirstVNF_CPU,MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - Min( ( RCSe / RRSe ) ,( CS + RCSe ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Min( DS ,MUM ) ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.7204081632653061, "obj2": 0.13302595367434508}, {"determining": "( ( Min( ( ACS - FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,Max( BR,MDR ) ) ) ) * ( FirstVNF_Mem_Server / BR ) )", "choosing": "Min( ( MUR * MUC ) ,( ( RMSe / MUR ) - ( RRSe * ( Max( MUC,Max( MUM,( ( CS + RRSe ) - MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.40445511315774585}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.463265306122449, "obj2": 0.37170189987493246}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( ( FirstVNF_RAM_Server - ( PN / ACS ) ) / ( ARS * ( FirstVNF_CPU * PN ) ) ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),MLU ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MLU + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.1673469387755102, "obj2": 0.764450730235122}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.0741053699089517}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( Min( Const ,AMS ),MRS ) ) ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( Max( MUM,MUC ),RMSe ) ) - ( ( DS / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( MUM / ( Min( MUC ,MUM ) / ( DS + RRSe ) ) ) )", "obj1": 0.4857142857142857, "obj2": 0.3666849222312282}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.7714285714285715, "obj2": 0.10288489121209422}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,Min( Max( PN,ACS ) ,( FirstVNF_CPU * ( MDR + ( CRS + ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( ( Max( CS,RCSe ) * DS ) - ( ( Max( Min( ( RMSe / Min( ( RMSe / RRSe ) ,( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( ( RMSe / MUR ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.46122448979591835, "obj2": 0.38440499727311134}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * DDR ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Min( DS ,CS ) - RRSe ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.9020408163265307, "obj2": 0.04670774363064288}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) * ( ( RRS + CRS ) + ( FirstVNF_RAM + PN ) ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( ( ( RMSe / MUR ) / CS ),Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( MLU - MUC ) ) ),MUM ) + RCSe ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( CS + RRSe ) - ( MUC / MLU ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.8857142857142857, "obj2": 0.05371931166045628}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) - Max( ( FirstVNF_CPU - Min( ( PN * FirstVNF_CPU ) ,FirstVNF_CPU ) ),( FirstVNF_RAM_Server + CRS ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Min( RMSe ,( ( MUR / RRSe ) * Max( RMSe,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8061224489795918, "obj2": 0.08388338645302522}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.47551020408163264, "obj2": 0.3679640373323407}, {"determining": "( MRS - ( MDR - BR ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - DS ),( MUR * RMSe ) ) / Max( Max( ( RCSe / ( RCSe * ( RRSe / DS ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / CS ) ) ) ,( RMSe * MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( ( DS / Max( ( Max( DS,RCSe ) / ( MUR - ( MUM / MUC ) ) ),( ( RRSe / MLU ) * MUR ) ) ) * RCSe ) ) )", "obj1": 0.9755102040816327, "obj2": 0.010714267368243584}, {"determining": "( Max( Max( ARS,FirstVNF_RAM ),ACS ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - PN ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4489795918367347, "obj2": 0.39355861349111915}, {"determining": "( ( PN - Min( ( ( FirstVNF_CPU * PN ) * ARS ) ,MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( BR * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU * ( RMSe / Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ,DS ) - Min( ( MUR + ( CS - MUC ) ) ,( Max( Min( Max( ( ( RCSe / RRSe ) + ( CS + RCSe ) ),Max( ( CS * MUC ),RMSe ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.1762709415073804}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ACS ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),RRSe ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7953758015891272}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2408913626102001}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.8816326530612245, "obj2": 0.05381915296701781}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ACS ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),RRSe ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7953758015891272}, {"determining": "( ( PN / RRS ) + Min( ( ( PN - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ,( ( PN / MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe + RRSe ),Min( MUR ,( ( CS + MUR ) - RRSe ) ) ) - Max( ( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,RRSe ) ) ) - Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.41020408163265304, "obj2": 0.43589254718388876}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( ( RCSe * Max( MUC,RRSe ) ),MUC ) ) ) - ( ( RCSe / DS ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.7448979591836735, "obj2": 0.12302750985053704}, {"determining": "( ( ARS * PN ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6163265306122448, "obj2": 0.2408913626102001}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( PN - ( BR / MRS ) ) + ( ( MRS - ( AMS + ( PN / RRS ) ) ) / ( Const + ( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) - Max( MUR,MUR ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * ( RMSe + MUR ) ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU * RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.33595204770342146}, {"determining": "( ( PN - ( BR + ( Min( RRS ,FirstVNF_CPU ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - ( CRS * RRS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( MUR + ( RRSe + MUR ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.49387755102040815, "obj2": 0.3480860300742699}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.6653061224489796, "obj2": 0.18244980689146678}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( DDR * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.0342849801731871}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( ( MDR * ( FirstVNF_CPU_Server - ACS ) ),AMS ) - ARS ) - ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ARS / MRS ) / MRS ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.17346938775510204, "obj2": 0.7575418265884105}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( MUC / Max( CS,RCSe ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + ( MLU / RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( Max( DDR,PN ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( MRS * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Max( Max( MUM,DS ),MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7081632653061225, "obj2": 0.15430805830238795}, {"determining": "( ( ARS / ( ( FirstVNF_RAM_Server / Max( DDR,BR ) ) * ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem * ( FirstVNF_Mem_Server - MDR ) ),FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( ( MUC / Min( ( RMSe + CS ) ,( MUM / RMSe ) ) ) ,( MUR - RMSe ) ) * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( Max( MUR,MUC ) ,( DS + MUR ) ) ) ) / MUR ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( MUR / MLU ) ) ) ,( MUM * RMSe ) ),RRSe ) * Max( RCSe,MUR ) ) + ( ( RRSe + ( CS - Min( RCSe ,DS ) ) ) + RCSe ) ) )", "obj1": 0.38571428571428573, "obj2": 0.4506980122899121}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( ( RCSe * Max( MUC,RRSe ) ),MUC ) ) ) - ( ( RCSe / DS ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( MLU,RRSe ) ) + ( MLU + RCSe ) ) )", "obj1": 0.7346938775510204, "obj2": 0.1272280351358181}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( PN * Const ) ,( FirstVNF_Mem_Server * ( PN - MRS ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3310316845170566}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM + Min( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( MUC - CS ) ) ),MUM ) ,RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RRSe * RMSe ) + Min( Max( RRSe,DS ) ,MUM ) ) ) - ( RMSe - ( RRSe - MUC ) ) ) ) ) )", "obj1": 0.8163265306122449, "obj2": 0.07796497900524937}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / MLU ) * Max( RMSe,RMSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6571428571428571, "obj2": 0.19042393987354125}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2045830672781153}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_Mem_Server + Const ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( Min( ( RCSe - MUR ) ,RMSe ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.16974926198607343}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) + ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_RAM / ARS ) ,Min( ARS ,PN ) ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( RMSe + CS ) - ( Max( ( MUR - RMSe ),( ( ( ( DS / ( MUC * RMSe ) ) - MUM ) + Max( DS,RMSe ) ) + CS ) ) - RRSe ) )", "obj1": 0.7020408163265306, "obj2": 0.15870090369386275}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( MRS / Const ) ) / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / MLU ) * Max( RMSe,RMSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.1091061154927938}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( Min( ( PN + ACS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) - MDR ) ) ) )", "choosing": "( ( CS * DS ) - ( ( Max( Min( ( RCSe + ( ( MUC * DS ) - ( RRSe / MUC ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( DS,MLU ) ) + Min( CS ,( RRSe / MUM ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.019776494332519483}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + ACS ) ,MRS ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * DS ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - MUM ) )", "obj1": 0.8428571428571429, "obj2": 0.0740323659964133}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5612244897959183, "obj2": 0.29460056100668974}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( Max( FirstVNF_CPU_Server,RRS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + MUR ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MUM,DS ) ) ) ) - ( ( MUR / RRSe ) - MUC ) ) ) ) )", "obj1": 0.5346938775510204, "obj2": 0.3096532709590851}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}], "37": [{"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) / ( ARS * ( FirstVNF_CPU * PN ) ) ) * DDR ),( FirstVNF_RAM - ARS ) ) * ( FirstVNF_CPU * Max( ( MDR / ( ( RRS / CRS ) + RRS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( RRSe - MUC ),( MLU / Max( Max( MUC,RCSe ),RRSe ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( ( MUM * MUR ) + CS ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) + ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( BR - FirstVNF_Mem ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR - RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR * FirstVNF_RAM ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( CS,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5618720207594773}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) / ( PN - FirstVNF_CPU ) ) * ( ( DDR * ACS ) * Max( MRS,BR ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6821910916976998}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_Mem_Server + Const ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( Min( ( RCSe - MUR ) ,RMSe ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.16974926198607343}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2045830672781153}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472915}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Max( ACS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU_Server ) ,( Const * ( PN - MDR ) ) ) )", "choosing": "( ( MUM / RMSe ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.42857142857142855, "obj2": 0.41899321328263517}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.641613825184119}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU * ( ( Min( ( RRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + ACS ) * Min( Min( FirstVNF_CPU_Server ,RRS ) ,( ( ACS + PN ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + ( ( FirstVNF_CPU_Server + RRS ) / ARS ) )", "choosing": "( ( ( MLU - ( ( DS + MLU ) - ( RRSe * MUC ) ) ) / Max( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUR ),( MLU / RCSe ) ) ) * Min( ( ( DS * MUC ) + ( MUR / RCSe ) ) ,DS ) )", "obj1": 0.7142857142857143, "obj2": 0.1477541125516482}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * ( DDR - BR ) ) ) ) * ( FirstVNF_Mem_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / MLU ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( ( Max( MUM,DS ) / RMSe ) ,MUR ) / MUR ) / ( DS * RMSe ) ) ) ) * ( ( RRSe + RCSe ) - DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( ( PN - DDR ) * Max( ( ( Min( ACS ,( MDR / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( ( ( MDR / FirstVNF_RAM ) * FirstVNF_RAM ),Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( RRSe * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9346938775510204, "obj2": 0.027975902847348508}, {"determining": "( Min( ( ACS * Const ) ,FirstVNF_RAM_Server ) + ( PN - ( Max( ( ( ( ( FirstVNF_CPU * PN ) * FirstVNF_CPU_Server ) / MDR ) * AMS ),( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Min( Max( RMSe,Max( MUM,MUC ) ) ,( MUM + ( CS - MUC ) ) ) * ( RCSe + ( ( RMSe + ( Max( MLU,( RCSe / DS ) ) + RMSe ) ) / RCSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5816326530612245, "obj2": 0.2768235331708784}, {"determining": "( ( PN - ( ( ( ( FirstVNF_CPU / ACS ) + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * ( ( RRS - MDR ) / Min( ( ( ( AMS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( DS / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Min( Min( MUM ,CS ) ,MUR ),RCSe ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8322380205195701}, {"determining": "( ( PN - ( MRS + ( ( ( CRS / Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_CPU_Server ) ) ) * PN ) * ARS ) ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * AMS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( MUM,Max( Max( RMSe,Max( MUM,( MUR + MLU ) ) ),( MUC - ( CS - MUC ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.36763588208724746}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * DDR ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Min( DS ,CS ) - RRSe ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.9020408163265307, "obj2": 0.04670774363064288}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) / ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( FirstVNF_CPU * PN ) ) ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8881439100939948}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( DDR * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9204081632653062, "obj2": 0.0342849801731871}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( PN * Const ) ,( FirstVNF_Mem_Server * ( PN - MRS ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3310316845170566}, {"determining": "( ( PN - ( BR + ( Min( RRS ,FirstVNF_CPU ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - ( CRS * RRS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.4816326530612245, "obj2": 0.35618779739642187}, {"determining": "( ( ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( RRS ,FirstVNF_Mem_Server ) ,( ( PN + DDR ) * Min( PN ,RRS ) ) ) ) ) + MRS ) - PN ) + Min( ( ( ( PN * PN ) * ARS ) + MRS ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Min( MUM ,( RCSe / ( MUM - MUM ) ) ) * DS ) - ( ( CS + MUR ) * ( RCSe / ( DS - DS ) ) ) )", "obj1": 0.6918367346938775, "obj2": 0.15784821311424369}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) ,MDR ) ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( ( Max( MUC,( RRSe + ( ( ( MLU - DS ) + RMSe ) * MUM ) ) ) * MUC ) / ( DS * RMSe ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7436848766893017}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MRS / ( Max( FirstVNF_CPU_Server,RRS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + MUR ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MUM,DS ) ) ) ) - ( ( ( MUC - MUC ) - DS ) - MUC ) ) ) ) )", "obj1": 0.5183673469387755, "obj2": 0.32421278769935824}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( MUC / Max( CS,RCSe ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + ( MLU / RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( DDR + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8489795918367347, "obj2": 0.07157967450332528}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( PN - Min( ( ( FirstVNF_CPU * PN ) * ARS ) ,MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( BR * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU * ( RMSe / Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ,DS ) - Min( ( MUR + ( CS - MUC ) ) ,( Max( Min( Max( ( ( RCSe / RRSe ) + ( CS + RCSe ) ),Max( ( CS * MUC ),RMSe ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.1762709415073804}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * PN ) - Min( Min( PN ,FirstVNF_Mem ) ,( ( AMS * Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,BR ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + Max( PN,MRS ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) - ( ( RCSe / RRSe ) + ( Min( MUC ,RRSe ) + MLU ) ) ) * DS ) - ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * ( CS + DS ) ) ) ,Max( CS,MUM ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( MUC - CS ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( AMS - ( ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( ( MDR - MRS ) - FirstVNF_RAM_Server ) ) ) * ( MRS * MRS ) )", "choosing": "( Max( Max( MLU,Max( MUM,( ( RRSe / RCSe ) + ( CS + RCSe ) ) ) ),( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,( ( ( CS / MLU ) * ( RRSe / MLU ) ) / RMSe ) ) / RRSe ) + ( Min( ( MUC + RRSe ) ,RMSe ) - MUC ) ) ) * ( Max( Max( MUC,( ( ( DS - CS ) - Max( DS,DS ) ) / ( CS + ( CS - ( MUC - RMSe ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7190681850009053}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.463265306122449, "obj2": 0.37170189987493246}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( ( PN - ( BR + FirstVNF_CPU_Server ) ) ,( ACS - Min( ( FirstVNF_Mem * Const ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MUM,DS ) ) ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),( ( ( DS * Min( ( DS / ( MUR + DS ) ) ,RMSe ) ) + Max( ( ( MUM + RRSe ) + RRSe ),MUR ) ) / CS ) ) )", "obj1": 0.43673469387755104, "obj2": 0.414248197409906}, {"determining": "( ( Min( ( ACS - FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,Max( BR,MDR ) ) ) ) * ( FirstVNF_Mem_Server / BR ) )", "choosing": "Min( ( MUR * MUC ) ,( ( RMSe / MUR ) - ( RRSe * ( Max( MUC,Max( MUM,( ( CS + RRSe ) - MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.40445511315774585}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ACS ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),RRSe ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7953758015891272}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ACS ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),RRSe ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7953758015891272}, {"determining": "( ( PN / RRS ) + Min( ( ( PN - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ,( ( PN / MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe + RRSe ),Min( MUR ,( ( CS + MUR ) - RRSe ) ) ) - Max( ( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,RRSe ) ) ) - Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.41020408163265304, "obj2": 0.43589254718388876}, {"determining": "( ( PN - ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( Min( PN ,( FirstVNF_CPU_Server / PN ) ) * ( ( ( CRS - MRS ) + CRS ) + RRS ) ) ) )", "choosing": "( Max( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ),( ( RCSe / RMSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( ( ( ( RMSe * DS ) / Max( MUM,( RCSe - DS ) ) ) * MLU ) / RRSe ) / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8691436010879081}, {"determining": "( ( ( MDR + Max( ( Min( DDR ,( ( FirstVNF_Mem * BR ) + FirstVNF_RAM ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU_Server * ( ACS - PN ) ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - Max( FirstVNF_CPU,MRS ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - Min( ( RCSe / RRSe ) ,( CS + RCSe ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Min( DS ,MUM ) ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.7204081632653061, "obj2": 0.13302595367434508}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7040816326530612, "obj2": 0.15191722520996853}, {"determining": "( ( PN - ( BR / MRS ) ) + ( ( MRS - ( AMS + ( PN / RRS ) ) ) / ( Const + ( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) - Max( MUR,MUR ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * ( RMSe + MUR ) ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU * RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.33595204770342146}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * ( PN - ( RRS + MRS ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( CS + RCSe ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.6510204081632653, "obj2": 0.19697974096072546}, {"determining": "( ( PN - ( ( ( PN * BR ) * ARS ) + MRS ) ) + Min( ( CRS - PN ) ,( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( CS * DS ),( ( RCSe / RRSe ) + ( ( ( MUC - MLU ) - CS ) + RCSe ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.39183673469387753, "obj2": 0.4502422038542735}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8306122448979592, "obj2": 0.07197081473372366}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) - Max( ( FirstVNF_CPU - Min( ( PN * FirstVNF_CPU ) ,FirstVNF_CPU ) ),( FirstVNF_RAM_Server + CRS ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Min( RMSe ,( ( MUR / RRSe ) * Max( RMSe,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8061224489795918, "obj2": 0.08388338645302522}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( ACS ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe * ( ( DS / RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7489795918367347, "obj2": 0.11257686415164544}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.6653061224489796, "obj2": 0.18244980689146678}, {"determining": "( ( ARS - MRS ) + ( PN - ( Const - ( FirstVNF_CPU_Server * Max( Const,( ( FirstVNF_CPU - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) * DDR ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( MUC,MLU ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MLU + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.07959183673469387, "obj2": 0.8935279675563241}, {"determining": "( ( AMS / FirstVNF_CPU ) + Min( Min( ( AMS + ACS ) ,( AMS * FirstVNF_Mem ) ) ,( FirstVNF_CPU * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - Max( Min( MUR ,( Max( MUM,RMSe ) / RMSe ) ),MUR ) ) - ( ( Max( ( RMSe + MUC ),( MUM - DS ) ) * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( MLU / MUC ) ) ) ) ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.2987991108450622}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.28275470803545516}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( MRS / Const ) ) / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / MLU ) * Max( RMSe,RMSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.1091061154927938}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.7714285714285715, "obj2": 0.10288489121209422}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * PN ) - Min( Max( FirstVNF_CPU_Server,Const ) ,( ( FirstVNF_CPU_Server + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - BR ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( ( RMSe + MUR ) * ( RRSe + MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24705420251973279}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( ( ( RRS + CRS ) + RRS ) ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( ( RCSe * Max( MUC,RRSe ) ),MUC ) ) ) - ( ( RCSe / DS ) + ( CS + RCSe ) ) ) * DS ) - Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) )", "obj1": 0.7816326530612245, "obj2": 0.09718285821093689}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * DS ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9224489795918367, "obj2": 0.034007689593402585}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( Max( PN,FirstVNF_Mem_Server ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.05957896798615756}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.573469387755102, "obj2": 0.28211041185119845}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( Max( MRS,BR ) + FirstVNF_RAM_Server ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - MUC ) - ( DS * ( MUM / MUR ) ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MLU + MLU ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5265306122448979, "obj2": 0.3189844462475241}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( PN * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.8816326530612245, "obj2": 0.05381915296701781}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( ( AMS + FirstVNF_Mem ) ,FirstVNF_Mem ) ),MRS ) ) ,FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( PN - MDR ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR - RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( Min( MUC ,RCSe ) / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / MUR ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.44693877551020406, "obj2": 0.3977420677796537}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * PN ) + ARS ) ) * FirstVNF_RAM ) / ( ( ( MDR + ( ACS - AMS ) ) / Min( ( FirstVNF_RAM - ( ( ACS * FirstVNF_CPU_Server ) * ( Const - FirstVNF_Mem ) ) ) ,( CRS - MDR ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( BR - FirstVNF_Mem ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( MLU * DS ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8591836734693877, "obj2": 0.0636732642769957}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.7653061224489796, "obj2": 0.10710054664877598}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.15693643508390287}, {"determining": "( ( PN - ( RRS + MRS ) ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,ARS ) ) / FirstVNF_CPU_Server ),MRS ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * MUM ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.0658300157446266}, {"determining": "( ( ( MDR + Max( ( FirstVNF_RAM_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( ( ACS - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.12054250165263336}, {"determining": "( ( AMS * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) - ( MDR - BR ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.563265306122449, "obj2": 0.29366343934378747}, {"determining": "( ( ( Const / ( FirstVNF_RAM * Const ) ) - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),Min( ARS ,FirstVNF_RAM_Server ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ARS ,Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( MLU - RCSe ) + ( Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUR ) ) ) ) + MUR ) ) ,( ( Max( ( ( Min( MLU ,MUR ) * CS ) + MUR ),( MUR + RRSe ) ) * ( CS * MLU ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MLU,DS ) ) ) ) - ( ( MUR / RRSe ) - MUC ) ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3822444574185637}], "38": [{"determining": "( ( ARS / MRS ) + ( PN - ( Max( Min( CRS ,Min( MRS ,CRS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( RRS + ( RRS + CRS ) ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),( ( DS / ( DS / RCSe ) ) / MUM ) ) + RCSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Min( MUC ,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) - Max( MUM,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) / ( ARS * ( FirstVNF_CPU * PN ) ) ) * DDR ),( FirstVNF_RAM - ARS ) ) * ( FirstVNF_CPU * Max( ( MDR / ( ( RRS / CRS ) + RRS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( RRSe - MUC ),( MLU / Max( Max( MUC,RCSe ),RRSe ) ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( ( MUM * MUR ) + CS ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * PN ) - Min( Max( FirstVNF_CPU_Server,Const ) ,( ( FirstVNF_CPU_Server + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - BR ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( ( RMSe + MUR ) * ( RRSe + MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24705420251973279}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR * FirstVNF_RAM ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( CS,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5618720207594773}, {"determining": "( ( PN - ( DDR - Min( ( ( DDR - RRS ) * FirstVNF_RAM_Server ) ,MDR ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( ( ( ACS - RRS ) * FirstVNF_CPU ) / MDR ),( Max( RRS,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUM ) - ( CS * ( Max( MUC,( Max( ( CS - DS ),( MLU + RCSe ) ) + ( Max( MUM,DS ) / MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5428571428571428, "obj2": 0.30102266515743853}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) / ( PN - FirstVNF_CPU ) ) * ( ( DDR * ACS ) * Max( MRS,BR ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6821910916976998}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_Mem_Server + Const ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( Min( ( RCSe - MUR ) ,RMSe ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.16974926198607343}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * ( PN - ( RRS + MRS ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( CS + RCSe ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.6510204081632653, "obj2": 0.19697974096072546}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2045830672781153}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( Max( MRS,BR ) + FirstVNF_RAM_Server ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - MUC ) - ( DS * ( MUM / MUR ) ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MLU + MLU ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5265306122448979, "obj2": 0.3189844462475241}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.7967683752106915}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.641613825184119}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( PN - ( ( ( ( FirstVNF_CPU / ACS ) + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * ( ( RRS - MDR ) / Min( ( ( ( AMS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( DS / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Min( Min( MUM ,CS ) ,MUR ),RCSe ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8322380205195701}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MRS / ( Max( FirstVNF_CPU_Server,RRS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + MUR ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MUM,DS ) ) ) ) - ( ( ( MUC - MUC ) - DS ) - MUC ) ) ) ) )", "obj1": 0.5183673469387755, "obj2": 0.32421278769935824}, {"determining": "( ( PN - ( MRS + ( ( ( CRS / Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_CPU_Server ) ) ) * PN ) * ARS ) ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * AMS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( MUM,Max( Max( RMSe,Max( MUM,( MUR + MLU ) ) ),( MUC - ( CS - MUC ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.36763588208724746}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( FirstVNF_Mem_Server,MDR ) ) ) * ( ( ACS - Const ) * Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Min( RCSe ,MUM ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.6936974554577039}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( MLU * DS ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8204081632653061, "obj2": 0.07713350013245114}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( PN * Const ) ,( FirstVNF_Mem_Server * ( PN - MRS ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3310316845170566}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,ACS ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0026627066234697658}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "Min( ( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.9040816326530612, "obj2": 0.043265973809448896}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5591836734693878, "obj2": 0.29008177509014405}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) ,MDR ) ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( ( Max( MUC,( RRSe + ( ( ( MLU - DS ) + RMSe ) * MUM ) ) ) * MUC ) / ( DS * RMSe ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7436848766893017}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * PN ) - Min( Min( PN ,FirstVNF_Mem ) ,( ( AMS * Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,BR ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + Max( PN,MRS ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) - ( ( RCSe / RRSe ) + ( Min( MUC ,RRSe ) + MLU ) ) ) * DS ) - ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * ( CS + DS ) ) ) ,Max( CS,MUM ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( MUC - CS ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( MUC / Max( CS,RCSe ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + ( MLU / RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7714285714285715, "obj2": 0.100620427975695}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( AMS / FirstVNF_CPU ) + Min( Min( ( AMS + ACS ) ,( AMS * FirstVNF_Mem ) ) ,( FirstVNF_CPU * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),Min( RMSe ,Max( DS,( CS * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( RMSe - Max( Min( MUR ,( Max( MUM,RMSe ) / RMSe ) ),MUR ) ) - ( ( Max( ( RMSe + MUC ),( MUM - DS ) ) * ( Max( MUM,RRSe ) - Min( DS ,( ( MLU - RMSe ) + ( MLU / MUC ) ) ) ) ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.2987991108450622}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( PN - Min( ( ( FirstVNF_CPU * PN ) * ARS ) ,MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( BR * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU * ( RMSe / Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ,DS ) - Min( ( MUR + ( CS - MUC ) ) ,( Max( Min( Max( ( ( RCSe / RRSe ) + ( CS + RCSe ) ),Max( ( CS * MUC ),RMSe ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.1762709415073804}, {"determining": "( ( ( ( ACS - Const ) * MRS ) - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( RMSe + MUC ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.20408163265306123, "obj2": 0.7184341795109934}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.463265306122449, "obj2": 0.37170189987493246}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( Max( MDR,Const ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) - Max( ( FirstVNF_CPU - Min( ( PN * FirstVNF_CPU ) ,FirstVNF_CPU ) ),( FirstVNF_RAM_Server + CRS ) ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ,Min( RMSe ,( ( MUR / RRSe ) * Max( RMSe,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8061224489795918, "obj2": 0.08388338645302522}, {"determining": "( ( RRS * ( FirstVNF_RAM + Min( FirstVNF_CPU ,Min( BR ,FirstVNF_Mem_Server ) ) ) ) + Min( ( ( FirstVNF_Mem_Server * Min( ( FirstVNF_Mem_Server - Min( Const ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ,Const ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( RMSe - ( Max( MUM,( MLU * MUM ) ) / Min( CS ,MUM ) ) ) * RMSe ) * Max( MUR,( CS * MUC ) ) )", "obj1": 0.9612244897959183, "obj2": 0.013524498466014598}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472915}, {"determining": "( ( ( MDR + Max( ( Min( DDR ,( ( FirstVNF_Mem * BR ) + FirstVNF_RAM ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.7346938775510204, "obj2": 0.12680114984190127}, {"determining": "( ( PN - ( BR + ( Min( RRS ,FirstVNF_CPU ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR * ( PN - Max( MDR,ARS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + ( ( CS * CS ) * MUM ) ) ) ) * DS ) - ( ( Max( MUM,Max( Max( RMSe,Max( MUM,( MUR + MLU ) ) ),( MUC - ( CS - MUC ) ) ) ) + RCSe ) + ( MUR + ( CS - MUM ) ) ) )", "obj1": 0.4959183673469388, "obj2": 0.34907059781741157}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( PN - ( BR / MRS ) ) + ( ( MRS - ( AMS + ( PN / RRS ) ) ) / ( Const + ( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) - Max( MUR,MUR ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * ( RMSe + MUR ) ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU * RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.33595204770342146}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7040816326530612, "obj2": 0.15191722520996853}, {"determining": "( ( ARS - MRS ) + ( PN - ( Const - Min( PN ,DDR ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( MUC,MLU ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MLU + ( ( RRSe * RMSe ) + Min( Max( RRSe,DS ) ,MUM ) ) ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8831374475014656}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( DDR + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8489795918367347, "obj2": 0.07157967450332528}, {"determining": "( Max( FirstVNF_CPU,Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,AMS ) ) - Min( AMS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( Max( Min( RCSe ,RCSe ),RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ARS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + MUR ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MUM,DS ) ) ) ) - ( ( MUR / RRSe ) - MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.40093400924245703}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8755102040816326, "obj2": 0.05577777054446395}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR - RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.6591836734693878, "obj2": 0.18554872247483237}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * DS ) ) ,Max( RMSe,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9448979591836735, "obj2": 0.01795744848621377}, {"determining": "( ( PN - ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( Min( PN ,( FirstVNF_CPU_Server / PN ) ) * ( ( ( CRS - MRS ) + CRS ) + RRS ) ) ) )", "choosing": "( Max( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ),( ( RCSe / RMSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( ( ( ( RMSe * DS ) / Max( MUM,( RCSe - DS ) ) ) * MLU ) / RRSe ) / ( DS * RMSe ) ) )", "obj1": 0.10408163265306122, "obj2": 0.8691436010879081}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( ( PN - ( BR + FirstVNF_CPU_Server ) ) ,( ACS - Min( ( FirstVNF_Mem * Const ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MUM,DS ) ) ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),( ( ( DS * Min( ( DS / ( MUR + DS ) ) ,RMSe ) ) + Max( ( ( MUM + RRSe ) + RRSe ),MUR ) ) / CS ) ) )", "obj1": 0.43673469387755104, "obj2": 0.414248197409906}, {"determining": "( ( ( ACS * ( ( Max( Max( Max( MRS,MDR ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + MLU ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14489795918367346, "obj2": 0.7938971269837471}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUR ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8306122448979592, "obj2": 0.07197081473372366}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * ARS ) ,Max( ACS,FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU_Server ) ,( Const * ( PN - MDR ) ) ) )", "choosing": "( ( MUM / RMSe ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.42857142857142855, "obj2": 0.41899321328263517}, {"determining": "( ( ( Const / ( FirstVNF_RAM * Const ) ) - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),Min( ARS ,FirstVNF_RAM_Server ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ARS ,Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( MLU - RCSe ) + ( Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUR ) ) ) ) + MUR ) ) ,( ( Max( ( ( Min( MLU ,MUR ) * CS ) + MUR ),( MUR + RRSe ) ) * ( CS * MLU ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MLU,DS ) ) ) ) - ( ( MUR / RRSe ) - MUC ) ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3822444574185637}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9469387755102041, "obj2": 0.017803505170117716}, {"determining": "( ( PN / RRS ) + Min( ( ( PN - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ,( ( PN / MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RCSe + RRSe ),Min( MUR ,( ( CS + MUR ) - RRSe ) ) ) - Max( ( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,RRSe ) ) ) - Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.41020408163265304, "obj2": 0.43589254718388876}, {"determining": "( ( PN - ( BR + ( Min( RRS ,FirstVNF_CPU ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - ( CRS * RRS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.4816326530612245, "obj2": 0.35618779739642187}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * ( DDR - BR ) ) ) ) * ( FirstVNF_Mem_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / MLU ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( ( Max( MUM,DS ) / RMSe ) ,MUR ) / MUR ) / ( DS * RMSe ) ) ) ) * ( ( RRSe + RCSe ) - DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * MRS ) ,DDR ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( ( ACS - FirstVNF_CPU_Server ) - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUR * RRSe ) / RCSe ) + ( ( DS + ( ( MUC / MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( Max( Min( ( RMSe * ( ( DS / RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) )", "obj1": 0.8040816326530612, "obj2": 0.08733823779843292}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( ( PN - ( BR + MRS ) ) ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MUM,DS ) ) ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.3877551020408163, "obj2": 0.4500520169532964}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * DDR ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Min( DS ,CS ) - RRSe ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.011340373313906221}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) / ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( FirstVNF_CPU * PN ) ) ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8881439100939948}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.9673469387755103, "obj2": 0.011921032748296376}, {"determining": "( ( ARS * PN ) - ( MDR - ( ( ( Const - ARS ) * ( FirstVNF_RAM / Min( ARS ,MDR ) ) ) * ( ( RRS + CRS ) + RRS ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) + ( ( Max( RRSe,MLU ) * RCSe ) + RMSe ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.09464214475036248}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.8959183673469387, "obj2": 0.04904068002263243}, {"determining": "( ( ( PN - DDR ) * Max( ( ( Min( ACS ,( MDR / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( ( ( MDR / ( FirstVNF_CPU * Min( MRS ,MDR ) ) ) * FirstVNF_RAM ),Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( RRSe * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MLU ) - ( CS * ( Max( MUC,( ( MUC * RRSe ) + Min( ( MUC / MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.9326530612244898, "obj2": 0.02922155035246799}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU * ( ( Min( ( RRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + ACS ) * Min( Min( FirstVNF_CPU_Server ,RRS ) ,( ( ACS + PN ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + ( ( FirstVNF_CPU_Server + RRS ) / ARS ) )", "choosing": "( ( ( MLU - ( ( DS + MLU ) - ( RRSe * MUC ) ) ) / Max( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUR ),( MLU / RCSe ) ) ) * Min( ( ( DS * MUC ) + ( MUR / RCSe ) ) ,DS ) )", "obj1": 0.7142857142857143, "obj2": 0.1477541125516482}, {"determining": "( ( ( MDR + Max( ( Min( DDR ,( ( FirstVNF_Mem * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( Min( Min( MUM ,RCSe ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.7183673469387755, "obj2": 0.13430428339603787}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Max( ( ( ( FirstVNF_Mem_Server * PN ) - ARS ) / FirstVNF_CPU_Server ),MRS ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR - RMSe ) ) / Max( ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.44693877551020406, "obj2": 0.3975703416497787}], "39": [{"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( Min( MUM ,RMSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / MRS ) + ( PN - ( Max( Min( CRS ,Min( MRS ,CRS ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( RRS + ( RRS + CRS ) ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),( ( DS / ( DS / RCSe ) ) / MUM ) ) + RCSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Min( MUC ,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) - Max( MUM,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( BR + Max( ( ( FirstVNF_RAM_Server / MDR ) / ( ACS + PN ) ),ARS ) ) * ( ( Min( ( ACS - AMS ) ,( ARS + RRS ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_CPU_Server ) * ( AMS * ACS ) )", "choosing": "( Max( MLU,MUR ) * ( MUC * ( ( CS - ( ( DS * DS ) - RRSe ) ) * RMSe ) ) )", "obj1": 0.07551020408163266, "obj2": 0.90426448663288}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8755102040816326, "obj2": 0.05577777054446395}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.8346938775510204, "obj2": 0.07152879304189211}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( FirstVNF_Mem,Const ) ) ),FirstVNF_CPU ) ) - ( PN + Min( ARS ,( ( FirstVNF_Mem_Server * ACS ) - DDR ) ) ) ) * ( MDR - Const ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "Min( ( ( Max( Max( Max( RMSe,Max( ( MLU * RCSe ),MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) + MUR ) ,( Max( MLU,( RMSe + ( ( RMSe / RMSe ) * Max( RCSe,( MUM + Min( RMSe ,RMSe ) ) ) ) ) ) - ( CS * ( Max( MUC,( ( CS * RRSe ) + Min( Max( MUM,DS ) ,MLU ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.10368394909872525}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( PN - ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server * Min( ( PN - ( BR + MRS ) ) ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( ( Min( ( ( Max( RRSe,MUM ) * MLU ) + Min( ( DS / MUC ) ,MUC ) ) ,Min( ( ( CS / MLU ) * ( RRSe / MLU ) ) ,RMSe ) ) / RRSe ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( ( RMSe / RMSe ) * MUM ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.7448979591836735, "obj2": 0.12186892453343967}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) / ( PN - FirstVNF_CPU ) ) * ( ( DDR * ACS ) * Max( MRS,BR ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6821910916976998}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7040816326530612, "obj2": 0.15191722520996853}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * ( PN - ( RRS + MRS ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( CS + RCSe ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.6918367346938775, "obj2": 0.16821038426785634}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( ( PN - DDR ) * Max( ( ( Min( ACS ,( MDR / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( ( ( MDR / ( FirstVNF_CPU * Min( MRS ,MDR ) ) ) * FirstVNF_RAM ),Min( ARS ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.9102040816326531, "obj2": 0.04113639207692926}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2352395530324529}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MUR / ( Min( RRSe ,RRSe ) - Max( DS,MUR ) ) ) + ( RMSe / RRSe ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( RMSe ,RCSe ),MUR ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8628939486609767}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2045830672781153}, {"determining": "( ( ( MRS - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,( FirstVNF_CPU_Server * ARS ) ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RRSe + RCSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( ( ( ( MUC / ( DS - MUC ) ) / DS ) + Min( MUR ,RRSe ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9285714285714286, "obj2": 0.030830504168895687}, {"determining": "( ( PN - ( ( ( ( FirstVNF_CPU / ACS ) + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * ( ( RRS - MDR ) / Min( ( ( ( AMS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( DS / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Min( Min( MUM ,CS ) ,MUR ),RCSe ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8322380205195701}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * PN ) - Min( Max( FirstVNF_CPU_Server,Const ) ,( ( FirstVNF_CPU_Server + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - BR ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( ( RMSe + MUR ) * ( RRSe + MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24705420251973279}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( FirstVNF_Mem_Server,MDR ) ) ) * ( ( ACS - Const ) * Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Min( RCSe ,MUM ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.6936974554577039}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) / ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( FirstVNF_CPU * PN ) ) ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8881439100939948}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR * FirstVNF_RAM ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( CS,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5618720207594773}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * ( DDR - BR ) ) ) ) * ( FirstVNF_Mem_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / MLU ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( ( Max( MUM,DS ) / RMSe ) ,MUR ) / MUR ) / ( DS * RMSe ) ) ) ) * ( ( RRSe + RCSe ) - DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5591836734693878, "obj2": 0.29008177509014405}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5591836734693878, "obj2": 0.29008177509014405}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU * ( ( Min( ( RRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + ACS ) * Min( Min( FirstVNF_CPU_Server ,RRS ) ,( ( ACS + PN ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + ( ( FirstVNF_CPU_Server + RRS ) / ARS ) )", "choosing": "( ( ( MLU - ( ( DS + MLU ) - ( RRSe * MUC ) ) ) / Max( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUR ),( MLU / RCSe ) ) ) * Min( ( ( DS * MUC ) + ( MUR / RCSe ) ) ,DS ) )", "obj1": 0.7142857142857143, "obj2": 0.1477541125516482}, {"determining": "( ( ( MDR + Max( ( Min( DDR ,( ( FirstVNF_Mem * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_Mem - ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * ( ( PN - MDR ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( Min( Min( MUM ,RCSe ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.7183673469387755, "obj2": 0.13430428339603787}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) ,MDR ) ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( ( Max( MUC,( RRSe + ( ( ( MLU - DS ) + RMSe ) * MUM ) ) ) * MUC ) / ( DS * RMSe ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7436848766893017}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( MUC / Max( CS,RCSe ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + ( MLU / RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( ( Const / ( FirstVNF_RAM * Const ) ) - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),Min( ARS ,FirstVNF_RAM_Server ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ARS ,Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( MLU - RCSe ) + ( Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUR ) ) ) ) + MUR ) ) ,( ( Max( ( ( Min( MLU ,MUR ) * CS ) + MUR ),( MUR + RRSe ) ) * ( CS * MLU ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MLU,DS ) ) ) ) - ( ( MUR / RRSe ) - MUC ) ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3822444574185637}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( CRS / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - ( MDR + ( FirstVNF_Mem_Server / ACS ) ) ) ) ) ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( ( MLU / RMSe ),Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( Max( DS,( DS * MUM ) ) - MUR ) - ( CS * ( Max( DS,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8795918367346939, "obj2": 0.05431141576864138}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( ( ACS * ( ( Max( Max( Max( MRS,MDR ),RRS ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MLU ),( CS + MLU ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7103362588447805}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.463265306122449, "obj2": 0.37170189987493246}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( PN - ( BR / MRS ) ) + ( ( MRS - ( AMS + ( PN / RRS ) ) ) / ( Const + ( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) - Max( MUR,MUR ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * ( RMSe + MUR ) ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU * RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.33595204770342146}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR - RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.6591836734693878, "obj2": 0.18554872247483237}, {"determining": "( ( ARS - MRS ) + ( PN - ( Const - Min( PN ,DDR ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( MUC,MLU ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MLU + ( ( RRSe * RMSe ) + Min( Max( RRSe,DS ) ,MUM ) ) ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8831374475014656}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.8959183673469387, "obj2": 0.04881877015699226}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( PN * Const ) ,( FirstVNF_Mem_Server * ( PN - MRS ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) )", "obj1": 0.5020408163265306, "obj2": 0.3310316845170566}, {"determining": "( ( PN - ( MRS + ( ( ( CRS / Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_CPU_Server ) ) ) * PN ) * ARS ) ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * AMS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR - RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.7285714285714285, "obj2": 0.13032316144960415}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( PN - ( CRS * RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4241782185462024}, {"determining": "( ( Min( ARS ,( Const - FirstVNF_Mem_Server ) ) - ( BR + AMS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( MDR - PN ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( ( RMSe + Max( MUM,MUC ) ),( ( CS + RCSe ) - ( CS - MUC ) ) ),Min( MUC ,( MLU + ( CS - RCSe ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5142857142857142, "obj2": 0.328405035683697}, {"determining": "( ( PN - ( MRS + ( ( ( CRS / Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_CPU_Server ) ) ) * PN ) * ARS ) ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * AMS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( MUM,Max( Max( RMSe,Max( MUM,( MUR + MLU ) ) ),( MUC - ( CS - MUC ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.36763588208724746}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * PN ) - Min( Min( PN ,FirstVNF_Mem ) ,( ( AMS * Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,BR ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + Max( PN,MRS ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) - ( ( RCSe / RRSe ) + ( Min( MUC ,RRSe ) + MLU ) ) ) * DS ) - ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * ( CS + DS ) ) ) ,Max( CS,MUM ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( MUC - CS ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * ( PN - ( RRS + MRS ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( MUM / Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( RMSe / RRSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6469387755102041, "obj2": 0.19876628950762212}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.39591836734693875, "obj2": 0.4457862710776431}, {"determining": "( Max( FirstVNF_RAM,( MDR + ( FirstVNF_Mem_Server * ( FirstVNF_CPU + ( Max( BR,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ACS ) ) ) ) ) * Max( FirstVNF_CPU_Server,( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM - RRSe ) * ( ( Min( MUR ,( Max( MUM,DS ) / Min( MUC ,MUM ) ) ) - Max( ( DS - ( ( Max( CS,RRSe ) - MUR ) * MUC ) ),( ( DS / ( Max( DS,RRSe ) * ( RMSe - MUC ) ) ) / Max( Max( MUC,RRSe ),( RCSe + CS ) ) ) ) ) / ( DS * ( MUC + ( RRSe + ( RCSe / MUC ) ) ) ) ) )", "obj1": 0.22040816326530613, "obj2": 0.688172841430399}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MRS / ( Max( FirstVNF_CPU_Server,RRS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + MUR ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MUM,DS ) ) ) ) - ( ( ( MUC - MUC ) - DS ) - MUC ) ) ) ) )", "obj1": 0.5183673469387755, "obj2": 0.32421278769935824}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( MRS * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - Min( FirstVNF_Mem ,( CRS + FirstVNF_CPU ) ) ) ) ) ,( ACS / ACS ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,( RRSe - RMSe ) ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe / RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.2924739648439405}, {"determining": "( ( PN - Min( ( ( FirstVNF_CPU * PN ) * ARS ) ,MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( BR * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU * ( RMSe / Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ,DS ) - Min( ( MUR + ( CS - MUC ) ) ,( Max( Min( Max( ( ( RCSe / RRSe ) + ( CS + RCSe ) ),Max( ( CS * MUC ),RMSe ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.1762709415073804}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ARS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + MUR ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MUM,DS ) ) ) ) - ( ( MUR / RRSe ) - MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.40093400924245703}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_Mem_Server + Const ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( Min( ( RCSe - MUR ) ,RMSe ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.16974926198607343}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( ( PN - FirstVNF_CPU ),MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( Min( MUC ,RCSe ),MUR ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.9387755102040817, "obj2": 0.027514978489453414}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( FirstVNF_Mem * Max( ACS,AMS ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem * ( PN - MDR ) ) ) )", "choosing": "Min( Max( MLU,CS ) ,( ( RMSe - MUR ) - ( CS * ( ( MUC - ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5428571428571428, "obj2": 0.30102266515743853}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "Min( ( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.9040816326530612, "obj2": 0.043265973809448896}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( ( PN - ( BR + MRS ) ) ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.4775510204081633, "obj2": 0.3629436292289883}, {"determining": "( ( PN - ( BR + ( Min( RRS ,FirstVNF_CPU ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR * ( PN - Max( MDR,ARS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + ( ( CS * CS ) * MUM ) ) ) ) * DS ) - ( ( Max( MUM,Max( Max( RMSe,Max( MUM,( MUR + MLU ) ) ),( MUC - ( CS - MUC ) ) ) ) + RCSe ) + ( MUR + ( CS - MUM ) ) ) )", "obj1": 0.4959183673469388, "obj2": 0.34907059781741157}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( Max( Max( BR,( Const + FirstVNF_Mem ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( RMSe / ( RRSe * MUM ) ) + ( RMSe / DS ) ) + Min( RCSe ,( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( CS / MUC ) ) )", "obj1": 0.14285714285714285, "obj2": 0.7967683752106915}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( PN - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_CPU ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS - ( ( MUC - ( ( MUM + MLU ) + DS ) ) * RRSe ) ) + Max( MUM,MUC ) ) * ( Max( Max( RMSe,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6530612244897959, "obj2": 0.19556215279492076}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.641613825184119}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( FirstVNF_Mem_Server * ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + MDR ) - MDR ) ) ,Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( ( MUC + ( ( ( RCSe * RRSe ) / ( MUM / MUR ) ) - ( Min( RMSe ,MUM ) + CS ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5469387755102041, "obj2": 0.2994050856359822}, {"determining": "( ( ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( ( ( FirstVNF_RAM_Server / ACS ) * ( ARS / ARS ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) + MRS ) - PN ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) / ( ( RRSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( Max( Min( RCSe ,RCSe ),RMSe ) / Max( RMSe,Max( RMSe,DS ) ) ) ,Max( CS,( Max( MUM,CS ) + ( RRSe * MUM ) ) ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6775510204081633, "obj2": 0.17451679905241158}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * DDR ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Min( DS ,CS ) - RRSe ) - ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.9775510204081632, "obj2": 0.011340373313906221}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.01460268707611645}, {"determining": "( ( PN - ( DDR - Min( ( ( DDR - RRS ) * FirstVNF_RAM_Server ) ,MDR ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( ( ( ACS - RRS ) * FirstVNF_CPU ) / MDR ),( Max( RRS,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUM ) - ( CS * ( Max( MUC,( Max( ( CS - DS ),( MLU + RCSe ) ) + ( Max( MUM,DS ) / MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.3167435013157477}, {"determining": "( ( ARS * PN ) - ( MDR - ( ( ( Const - ARS ) * ( FirstVNF_RAM / Min( ARS ,MDR ) ) ) * ( ( RRS + CRS ) + RRS ) ) ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) + ( ( Max( RRSe,MLU ) * RCSe ) + RMSe ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7857142857142857, "obj2": 0.09464214475036248}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472915}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( Max( MRS,BR ) + FirstVNF_RAM_Server ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( CS - MUC ) - ( DS * ( MUM / MUR ) ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( MLU + MLU ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5265306122448979, "obj2": 0.3189844462475241}, {"determining": "( ( PN - ( BR + ( Min( RRS ,( FirstVNF_CPU_Server * ( ACS - RRS ) ) ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - ( CRS * RRS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,Min( CS ,RRSe ) ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.4387755102040816, "obj2": 0.4131493602910999}], "40": [{"determining": "( ( Min( ( Max( RRS,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) * CRS ) ,( Max( RRS,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) - CRS ) * ( ( ( Const * PN ) - ARS ) / Max( MRS,MDR ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + Max( Min( DS ,MUR ),Max( MUR,DS ) ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) - Max( MUM,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( Min( MUM ,RMSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_Mem_Server - Const ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUC ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.07142857142857142, "obj2": 0.901339875077667}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( ( PN - ( BR + MRS ) ) - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,Max( RRSe,MLU ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.06003005305299767}, {"determining": "( ( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) - ACS ) ,( ( MDR * FirstVNF_RAM ) * FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU_Server * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( CS,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,MUC ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.5618720207594773}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( ACS - PN ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) - ( Min( RCSe ,MUM ) + Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.8346938775510204, "obj2": 0.07078830408948654}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( ACS - ( CRS * RRS ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,Max( RMSe,Max( RMSe,MUC ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.17551020408163265, "obj2": 0.7622207475417168}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( PN - ( CRS * RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.42653061224489797, "obj2": 0.4241782185462024}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) / ( PN - FirstVNF_CPU ) ) * ( ( DDR * ACS ) * Max( MRS,BR ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6821910916976998}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8918367346938776, "obj2": 0.04703049968845122}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( AMS / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.641613825184119}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.39183673469387753, "obj2": 0.44489114058472673}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MUR / ( Min( RRSe ,RRSe ) - Max( DS,MUR ) ) ) + ( RMSe / RRSe ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( RMSe ,RCSe ),MUR ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8628939486609767}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) / ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( FirstVNF_CPU * PN ) ) ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.0836734693877551, "obj2": 0.8881439100939948}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * ( PN - ( RRS + MRS ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.6959183673469388, "obj2": 0.16571908925761744}, {"determining": "( ( PN - ( ( ( ( FirstVNF_CPU / ACS ) + FirstVNF_Mem ) * FirstVNF_CPU_Server ) * ( ( RRS - MDR ) / Min( ( ( ( AMS * Const ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,( ( DS / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Min( Min( MUM ,CS ) ,MUR ),RCSe ) / ( DS * RMSe ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8322380205195701}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * PN ) - Min( Max( FirstVNF_CPU_Server,Const ) ,( ( FirstVNF_CPU_Server + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - BR ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( ( RMSe + MUR ) * ( RRSe + MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24705420251973279}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( FirstVNF_Mem_Server,MDR ) ) ) * ( ( ACS - Const ) * Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Min( RCSe ,MUM ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.6936974554577039}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.9714285714285714, "obj2": 0.00980475030388501}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472915}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2045830672781153}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) ,MDR ) ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( ( Max( MUC,( RRSe + ( ( ( MLU - DS ) + RMSe ) * MUM ) ) ) * MUC ) / ( DS * RMSe ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7436848766893017}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( ( ACS * Max( ( Max( Max( BR,( CRS + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( MUC * ( MUR * MLU ) ) + Max( ( MUR / DS ),( DS * MLU ) ) ) ),Max( CS,( Min( ( CS * MLU ) ,MUC ) + DS ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( ( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.6243056021540195}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( MUC / Max( CS,RCSe ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + ( MLU / RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5408163265306123, "obj2": 0.30087060325932774}, {"determining": "Min( ( ARS - MRS ) ,( PN - ( Max( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) / ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( FirstVNF_CPU * PN ) ) ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.9183673469387755, "obj2": 0.03556331625998126}, {"determining": "( ( ( Const / ( FirstVNF_RAM * Const ) ) - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),Min( ARS ,FirstVNF_RAM_Server ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ARS ,Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( MLU - RCSe ) + ( Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUR ) ) ) ) + MUR ) ) ,( ( Max( ( ( Min( MLU ,MUR ) * CS ) + MUR ),( MUR + RRSe ) ) * ( CS * MLU ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MLU,DS ) ) ) ) - ( ( MUR / RRSe ) - MUC ) ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3822444574185637}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( Max( ( MDR * FirstVNF_Mem ),FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( FirstVNF_CPU - PN ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( ( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / MUC ),MUC ),MUC ) / ( ( RRSe - RMSe ) * RMSe ) ) )", "obj1": 0.14285714285714285, "obj2": 0.7967683752106915}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,Min( CS ,RRSe ) ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7510204081632653, "obj2": 0.11191039613440716}, {"determining": "( ( ( ACS * ( ( Max( Max( Max( MRS,MDR ),RRS ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MLU ),( CS + MLU ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7103362588447805}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.810204081632653, "obj2": 0.08547743476052166}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.4061224489795918, "obj2": 0.4402330492795022}, {"determining": "( ( PN - ( ( ARS * ( ( ACS / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RRSe ) + ( CS + ( RRSe + ( RCSe + RCSe ) ) ) ) ) * DS ) - ( ( Max( Min( Max( Max( Min( RCSe ,RCSe ),RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7428571428571429, "obj2": 0.11907955857364165}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( Max( Max( BR,( Const + FirstVNF_Mem ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( RMSe / ( RRSe * MUM ) ) + ( RMSe / DS ) ) + Min( RCSe ,( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( CS / MUC ) ) )", "obj1": 0.14285714285714285, "obj2": 0.7967683752106915}, {"determining": "( ( PN - ( BR + ( Min( RRS ,( FirstVNF_CPU_Server * ( ACS - RRS ) ) ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - ( CRS * RRS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.49387755102040815, "obj2": 0.34591007468043067}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( FirstVNF_Mem_Server / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( ( CS - DS ) * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.573469387755102, "obj2": 0.280652975808547}, {"determining": "( ( PN - ( BR + ( Min( RRS ,( FirstVNF_CPU_Server * ( ACS - RRS ) ) ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - ( CRS * RRS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,Min( CS ,RRSe ) ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.4387755102040816, "obj2": 0.4131493602910999}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( ( PN - ( BR + MRS ) ) ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.4775510204081633, "obj2": 0.3629436292289883}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( DDR + ( ( BR * ( BR + MRS ) ) / Max( ARS,( CRS - ARS ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( RMSe,MUC ) ) / ( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - ( MUM / MUC ) ) - ( CS * ( Max( ( Min( Min( RRSe ,CS ) ,MUM ) * ( DS - ( CS - DS ) ) ),( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( Max( RMSe,Max( RMSe,( MUM + RCSe ) ) ) - ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.38751624927076284}, {"determining": "( ( ARS - MRS ) + ( PN - ( Const - Min( PN ,DDR ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),Max( MUM,MUC ) ),( MUM + ( ( Max( MUC,MLU ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MLU + ( ( RRSe * RMSe ) + Min( Max( RRSe,DS ) ,MUM ) ) ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8831374475014656}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7040816326530612, "obj2": 0.15191722520996853}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2352395530324529}, {"determining": "( Min( Min( BR ,MRS ) ,CRS ) + Min( ( ( FirstVNF_Mem_Server * Min( ( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ,Const ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( ( ( MUR - RMSe ) / ( Max( MUR,RCSe ) + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MLU ) ) / RCSe ) ) ) )", "obj1": 0.44693877551020406, "obj2": 0.39219298640665556}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( Max( ( CS - DS ),( MLU + RCSe ) ) + ( Max( MUM,DS ) / MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5612244897959183, "obj2": 0.28879097066462517}, {"determining": "( ( PN - Min( ( ( FirstVNF_CPU * PN ) * ARS ) ,MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( BR * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MLU * ( RMSe / Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ,DS ) - Min( ( MUR + ( CS - MUC ) ) ,( Max( Min( Max( ( ( RCSe / RRSe ) + ( CS + RCSe ) ),Max( ( CS * MUC ),RMSe ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.1762709415073804}, {"determining": "( ( PN - ( BR / MRS ) ) + ( ( MRS - ( AMS + ( PN / RRS ) ) ) / ( Const + ( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) - Max( MUR,MUR ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * ( RMSe + MUR ) ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU * RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.33595204770342146}, {"determining": "( ( PN - ( MRS + ( ( ( CRS / Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_CPU_Server ) ) ) * PN ) * ARS ) ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * AMS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( MUM,Max( Max( RMSe,Max( MUM,( MUR + MLU ) ) ),( MUC - ( CS - MUC ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.36763588208724746}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * PN ) - Min( Min( PN ,FirstVNF_Mem ) ,( ( AMS * Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,BR ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + Max( PN,MRS ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) - ( ( RCSe / RRSe ) + ( Min( MUC ,RRSe ) + MLU ) ) ) * DS ) - ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * ( CS + DS ) ) ) ,Max( CS,MUM ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( MUC - CS ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( FirstVNF_Mem_Server * ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + MDR ) - MDR ) ) ,Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( ( MUC + ( ( ( RCSe * RRSe ) / ( MUM / MUR ) ) - ( Min( RMSe ,MUM ) + CS ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5469387755102041, "obj2": 0.2994050856359822}, {"determining": "( ( PN - ( ( ( PN * PN ) * Min( DDR ,RRS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - ( ACS - Min( PN ,BR ) ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * PN ) ) )", "choosing": "( Max( Max( MUC,RCSe ),RRSe ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.35570071552325844}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - Min( FirstVNF_Mem ,( CRS + FirstVNF_CPU ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5530612244897959, "obj2": 0.29034778950311846}, {"determining": "( ( ( MRS - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,( FirstVNF_CPU_Server * ARS ) ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RRSe + RCSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( ( ( ( MUC / ( DS - MUC ) ) / DS ) + Min( MUR ,RRSe ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9285714285714286, "obj2": 0.030830504168895687}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU * ( ( Min( ( RRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + ACS ) * Min( Min( FirstVNF_CPU_Server ,RRS ) ,( ( ACS + PN ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + ( ( FirstVNF_CPU_Server + RRS ) / ARS ) )", "choosing": "( ( ( MLU - ( ( DS + MLU ) - ( RRSe * MUC ) ) ) / Max( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUR ),( MLU / RCSe ) ) ) * Min( ( ( DS * MUC ) + ( MUR / RCSe ) ) ,DS ) )", "obj1": 0.7142857142857143, "obj2": 0.1477541125516482}, {"determining": "( ( PN - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_CPU ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS - ( ( MUC - ( ( MUM + MLU ) + DS ) ) * RRSe ) ) + Max( MUM,MUC ) ) * ( Max( Max( RMSe,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6530612244897959, "obj2": 0.19556215279492076}, {"determining": "( ( PN * ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( ( ( FirstVNF_CPU - PN ) * FirstVNF_CPU ) / MDR ),( Max( RRS,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( ( PN - MDR ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( ( Max( RMSe,Max( MUM,MUC ) ) * ( ( ( MUM / RRSe ) * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( Max( ( CS - DS ),( MLU + RCSe ) ) + ( MUM / Max( MUM,DS ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8183673469387756, "obj2": 0.08076268983458763}, {"determining": "( ( ( PN - RRS ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( Const ,PN ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "Min( ( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + Min( Max( MUM,DS ) ,Max( RMSe,RRSe ) ) ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.9040816326530612, "obj2": 0.04303862515518573}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.463265306122449, "obj2": 0.37170189987493246}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( ( ( FirstVNF_RAM_Server + ACS ) * ( ARS / ARS ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( Max( Min( RCSe ,RCSe ),RMSe ) / Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,( Max( MUM,CS ) + ( RRSe * MUM ) ) ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.9918367346938776, "obj2": 0.0026627066234697658}, {"determining": "( ( Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - Min( FirstVNF_Mem ,( CRS + FirstVNF_CPU ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,Min( MUM ,RCSe ) ) ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.826530612244898, "obj2": 0.07540300578999025}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * ( PN - ( RRS + MRS ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( Max( ( CS - DS ),( MLU + RCSe ) ) + ( Max( MUM,DS ) / MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.6857142857142857, "obj2": 0.16798552474450634}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( FirstVNF_Mem,Const ) ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.7755102040816326, "obj2": 0.10099356134075382}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * ( DDR - BR ) ) ) ) * ( FirstVNF_Mem_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / MLU ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( ( Max( MUM,DS ) / RMSe ) ,MUR ) / MUR ) / ( DS * RMSe ) ) ) ) * ( ( RRSe + RCSe ) - DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( CRS,MDR ) ) ) * ( ( ACS - Const ) * MRS ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RRSe - ( MLU * ( ( ( RRSe / RRSe ) * RCSe ) - Max( MUC,( RMSe + Min( Min( RCSe ,CS ) ,MUM ) ) ) ) ) ) ,( ( RMSe + ( Min( DS ,Min( Max( ( RMSe + MUC ),Max( RRSe,DS ) ) ,CS ) ) + MUR ) ) - ( MUC - RMSe ) ) )", "obj1": 0.4020408163265306, "obj2": 0.4418777386951677}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_Mem_Server + Const ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe * ( ( DS / RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6714285714285714, "obj2": 0.17441329274430878}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.10837044073228112}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server - Min( Const ,( ARS - Min( Max( AMS,DDR ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),MUM ) + MUR ) ) ,( ( RMSe - ( ( Min( ( Max( MUM,MLU ) - ( DS - RCSe ) ) ,CS ) + MUR ) - RCSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MUM,DS ) ) ) ) - ( ( MUR / RRSe ) - MUC ) ) ) ) )", "obj1": 0.44081632653061226, "obj2": 0.40093400924245703}, {"determining": "( ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM + DDR ) ) + Min( Min( FirstVNF_Mem_Server ,( ACS + PN ) ) ,( CRS * RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,( MUR + DS ) ) ),Min( RMSe ,Max( DS,( RMSe * RCSe ) ) ) ),MUM ) + MUM ) ) ,( ( ( MUR + RRSe ) / MLU ) / Max( ( CS + RMSe ),DS ) ) )", "obj1": 0.4897959183673469, "obj2": 0.35281723197728015}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / Max( Max( MRS,RRS ),ACS ) ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.9551020408163265, "obj2": 0.01460268707611645}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),Min( FirstVNF_Mem ,DDR ) ) / ( ( FirstVNF_CPU * BR ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( ACS - RRS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( CS * Max( Max( ( RMSe / DS ),( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( RMSe - MUC ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.9489795918367347, "obj2": 0.022109691313257174}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,ARS ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( MUR / RRSe ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7163265306122449, "obj2": 0.14304090058915275}], "41": [{"determining": "( ( ( ( ACS - Max( Min( PN ,Min( FirstVNF_CPU ,( CRS / AMS ) ) ),MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) * MDR ) ) ),( ACS - Max( Max( Max( ACS,( FirstVNF_Mem + FirstVNF_CPU ) ),FirstVNF_RAM ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RMSe + ( ( RMSe * MLU ) / RCSe ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( ( MLU * DS ) * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - ( ( ( RRSe + RRSe ) - DS ) * ( MUM / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( RRS,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) * CRS ) ,( Max( RRS,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) - CRS ) * ( ( ( Const * PN ) - ARS ) / Max( MRS,MDR ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + Max( Min( DS ,MUR ),Max( MUR,DS ) ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,MUC ) ) ) - Max( MUM,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * Min( ( PN - MDR ) ,Const ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - ( Const - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / ( DS * ( MUM / MUC ) ) ) + ( RMSe / DS ) ) + ( RCSe - RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUC ),Min( ( DS + MUC ) ,Max( RCSe,RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.0673469387755102, "obj2": 0.9102521132069613}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN - MDR ) ) - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / CS ) ) ) ) )", "obj1": 0.8693877551020408, "obj2": 0.05668944013945707}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU_Server - Min( ( ACS - PN ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,( DDR + FirstVNF_Mem ) ),ACS ) ) / BR ) ) )", "choosing": "Min( ( ( ( Max( Max( MUM,( RRSe * RMSe ) ),( Min( RMSe ,DS ) * Max( MLU,DS ) ) ) * CS ) / RRSe ) + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( MUR ,MUC ) ) ) - ( Min( RCSe ,MUM ) + Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.8346938775510204, "obj2": 0.07074513694562083}, {"determining": "( ( PN - ( BR / MRS ) ) + ( ( MRS - ( AMS + ( PN / RRS ) ) ) / ( Const + ( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) - Max( MUR,MUR ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * ( RMSe + MUR ) ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU * RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.33595204770342146}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5557216236445778}, {"determining": "( ( PN + ( BR + MRS ) ) + Min( ( FirstVNF_Mem_Server * ( PN - MDR ) ) ,Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( FirstVNF_CPU_Server * ( ACS - ( ACS * FirstVNF_Mem_Server ) ) ),( Const + FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( Max( DS,RCSe ) - Min( RCSe ,RRSe ) ) - ( CS - Max( RCSe,MUC ) ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - ( MUC - RCSe ) ) - ( CS * ( Max( MUC,( ( RRSe * RMSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( CS - MUC ) ) ) ) )", "obj1": 0.5204081632653061, "obj2": 0.3217465609903481}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( FirstVNF_Mem_Server,MDR ) ) ) * ( ( ACS - Const ) * Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Min( RCSe ,MUM ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.6936974554577039}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) / ( PN - FirstVNF_CPU ) ) * ( ( DDR * ACS ) * Max( MRS,BR ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6821910916976998}, {"determining": "( ( ( PN - RRS ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( Const ,PN ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "Min( ( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + Min( Max( MUM,DS ) ,Max( RMSe,RRSe ) ) ) ) ) * DS ) - ( ( ( MUM * Max( DS,MUR ) ) * Max( RMSe,MUR ) ) * ( CS + RCSe ) ) ) ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) )", "obj1": 0.9040816326530612, "obj2": 0.04303862515518573}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( PN - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_CPU ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS - ( ( MUC - ( ( MUM + MLU ) + DS ) ) * RRSe ) ) + Max( MUM,MUC ) ) * ( Max( Max( RMSe,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6530612244897959, "obj2": 0.19556215279492076}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * PN ) - Min( Min( PN ,FirstVNF_Mem ) ,( ( AMS * Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,BR ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + Max( PN,MRS ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) - ( ( RCSe / RRSe ) + ( Min( MUC ,RRSe ) + MLU ) ) ) * DS ) - ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * ( CS + DS ) ) ) ,Max( CS,MUM ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( MUC - CS ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ( ( ARS - MRS ) + ( PN - ( Const - Min( PN ,DDR ) ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( Max( RMSe,RMSe ) / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8279433485600763}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( MDR,Const ) ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,RRSe ) ) ) - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.7836734693877551, "obj2": 0.09610104243262756}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( PN - ( ( FirstVNF_CPU * PN ) * RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( RMSe,Max( CS,MUC ) ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.4204081632653061, "obj2": 0.4210924692774602}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_CPU_Server * ACS ) - ( ( ACS / MDR ) * Max( DDR,FirstVNF_Mem ) ) ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + Max( MLU,( CS / RRSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8098438540666819}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) ,MDR ) ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( ( Max( MUC,( RRSe + ( ( ( MLU - DS ) + RMSe ) * MUM ) ) ) * MUC ) / ( DS * RMSe ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7436848766893017}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472915}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - Min( FirstVNF_Mem ,( CRS + Const ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RRSe * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.3152616891575871}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( ( PN - MDR ) - Min( FirstVNF_Mem ,( CRS + FirstVNF_CPU ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( Min( MUR ,( ( MLU - DS ) / RMSe ) ) ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8775510204081632, "obj2": 0.05580682036805473}, {"determining": "( ( PN - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) * ( ( RRS - MDR ) / Min( ( ( ( FirstVNF_Mem_Server * PN ) * Max( FirstVNF_Mem_Server,Const ) ) - FirstVNF_RAM ) ,( CRS - Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( ARS ,( AMS / FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( Min( Max( RCSe,( CS - MUR ) ) ,( MUR - MUC ) ) / RRSe ) + ( ( RCSe + RCSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) * ( Max( Max( MUC,( Max( ( ( RCSe + RRSe ) * ( MUM * RCSe ) ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RCSe ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6755252297739431}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * PN ) - Min( Max( FirstVNF_CPU_Server,Const ) ,( ( FirstVNF_CPU_Server + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - BR ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( ( RMSe + MUR ) * ( RRSe + MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24705420251973279}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( ( ( ( Max( ( Min( FirstVNF_Mem_Server ,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) * ( FirstVNF_CPU * PN ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + Max( RMSe,DS ) ) + ( RCSe + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),( ( RCSe - MUM ) - RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.17142857142857143, "obj2": 0.7678251285905909}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.10837044073228112}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( ( ACS * ( ( Max( Max( Max( MRS,MDR ),RRS ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MLU ),( CS + MLU ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7103362588447805}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5408163265306123, "obj2": 0.30087060325932774}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( PN - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),Min( ARS ,FirstVNF_RAM_Server ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( Max( PN,FirstVNF_CPU_Server ) ,ARS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUM + ( Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUR ) ) ) ) + MUR ) ) ,( ( Max( ( ( Min( MLU ,RCSe ) * CS ) + MUR ),( MUR + RRSe ) ) * ( CS * MLU ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MLU,DS ) ) ) ) - ( ( MUR / ( ( RRSe / RCSe ) + ( DS + RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.4326530612244898, "obj2": 0.4143492841290804}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.4061224489795918, "obj2": 0.4402330492795022}, {"determining": "( ( PN - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_CPU ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS - ( ( MUC - ( ( MUM + MLU ) + DS ) ) * RRSe ) ) + Max( MUM,MUC ) ) * ( Max( Max( RMSe,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.7326530612244898, "obj2": 0.12831334823484955}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_Mem_Server + Const ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR - RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.6408163265306123, "obj2": 0.2038733567858854}, {"determining": "( ( PN - ( BR + ( Min( RRS ,( FirstVNF_CPU_Server * ( ACS - RRS ) ) ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - ( CRS * RRS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.49387755102040815, "obj2": 0.34591007468043067}, {"determining": "( ( PN - ( ( PN - ( BR + MRS ) ) + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe - MUR ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.9836734693877551, "obj2": 0.006365035922019442}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( MUC / Max( CS,RCSe ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + ( MLU / RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "Min( ( ARS - MRS ) ,( PN - ( Max( ( ( ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) / ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( FirstVNF_CPU * PN ) ) ) * DDR ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * AMS ) ),( MDR * ( ACS - Min( PN ,BR ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.9183673469387755, "obj2": 0.03556331625998126}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( ( PN - ( BR + MRS ) ) ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( ( CS - MUM ) * ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( CS + RCSe ) + ( Max( Min( ( RMSe * ( ( DS - RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) ) )", "obj1": 0.4775510204081633, "obj2": 0.3629436292289883}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7040816326530612, "obj2": 0.15191722520996853}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * ( PN - ( RRS + MRS ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.6959183673469388, "obj2": 0.16571908925761744}, {"determining": "( Min( Min( BR ,MRS ) ,CRS ) + Min( ( ( FirstVNF_Mem_Server * Min( ( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ,Const ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( ( ( MUR - RMSe ) / ( Max( MUR,RCSe ) + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MLU ) ) / RCSe ) ) ) )", "obj1": 0.44693877551020406, "obj2": 0.39219298640665556}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.39183673469387753, "obj2": 0.44489114058472673}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2045830672781153}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( Max( Max( BR,( Const + FirstVNF_Mem ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( RMSe / ( RRSe * MUM ) ) + ( RMSe / DS ) ) + Min( RCSe ,( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( CS / MUC ) ) )", "obj1": 0.14285714285714285, "obj2": 0.7967683752106915}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2352395530324529}, {"determining": "( ( Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( BR + MRS ) ) + Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,Min( MUM ,RCSe ) ) ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( CS + RCSe ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.047831688915484546}, {"determining": "( ( PN - ( MRS + ( ( ( CRS / Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_CPU_Server ) ) ) * PN ) * ARS ) ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * AMS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( MUM,Max( Max( RMSe,Max( MUM,( MUR + MLU ) ) ),( MUC - ( CS - MUC ) ) ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.47346938775510206, "obj2": 0.36763588208724746}, {"determining": "( ( PN - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_CPU ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS - ( ( MUC - ( ( MUM + MLU ) + DS ) ) * RRSe ) ) + Max( MUM,MUC ) ) * ( Max( Max( RMSe,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.7326530612244898, "obj2": 0.12831334823484955}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,RRSe ) * ( ( Max( MUC,( RRSe + ( ( ( RRSe - DS ) + RMSe ) * MUM ) ) ) * MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9448979591836735, "obj2": 0.01852025252754609}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU_Server ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5469387755102041, "obj2": 0.2987753752617916}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_CPU * PN ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe * ( ( MUC / RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6632653061224489, "obj2": 0.19115985931706206}, {"determining": "( ( PN - ( FirstVNF_CPU + MRS ) ) + Min( Min( ( PN + ACS ) ,( ( MRS * PN ) - MRS ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( MUR - MUR ) ) ,( ( RCSe - MUR ) - ( CS * ( RCSe / RRSe ) ) ) )", "obj1": 0.5285714285714286, "obj2": 0.31837048026380665}, {"determining": "( ( ( Const / ( FirstVNF_RAM * Const ) ) - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),Min( ARS ,FirstVNF_RAM_Server ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ARS ,Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( MLU - RCSe ) + ( Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUR ) ) ) ) + MUR ) ) ,( ( Max( ( ( Min( MLU ,MUR ) * CS ) + MUR ),( MUR + RRSe ) ) * ( CS * MLU ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MLU,DS ) ) ) ) - ( ( MUR / RRSe ) - MUC ) ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3822444574185637}, {"determining": "( ( PN - ( ( ( PN * PN ) * Min( DDR ,RRS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - ( ACS - Min( PN ,BR ) ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * PN ) ) )", "choosing": "( Max( Max( MUC,RCSe ),RRSe ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.35570071552325844}, {"determining": "( ( PN - ( BR + ( Min( RRS ,( FirstVNF_CPU_Server * ( ACS - RRS ) ) ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - ( CRS * RRS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,Min( CS ,RRSe ) ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.4387755102040816, "obj2": 0.4131493602910999}, {"determining": "( ( ( FirstVNF_CPU_Server - ACS ) - ( ( ( PN * FirstVNF_RAM ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( Min( CRS ,FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( CS / MUC ) ) ) + RCSe ) ) ) * DS ) - ( ( ( ( ( ( MLU - RCSe ) * MLU ) / CS ) / RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.8040816326530612, "obj2": 0.08647088163079221}, {"determining": "( Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_Mem_Server - Const ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.7714285714285715, "obj2": 0.1007512259302893}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU * ( ( Min( ( RRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + ACS ) * Min( Min( FirstVNF_CPU_Server ,RRS ) ,( ( ACS + PN ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + ( ( FirstVNF_CPU_Server + RRS ) / ARS ) )", "choosing": "( ( ( MLU - ( ( DS + MLU ) - ( RRSe * MUC ) ) ) / Max( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUR ),( MLU / RCSe ) ) ) * Min( ( ( DS * MUC ) + ( MUR / RCSe ) ) ,DS ) )", "obj1": 0.7142857142857143, "obj2": 0.1477541125516482}, {"determining": "( Min( FirstVNF_Mem ,( Min( PN ,BR ) * ( ( ACS - Const ) * ( Max( Const,BR ) / MDR ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( RCSe - RMSe ) ,( MUR - DS ) ) ) * ( ( ( RMSe / MUC ) * CS ) / ( Min( MUR ,( Max( MUC,( CS / Max( MUR,CS ) ) ) / CS ) ) / MUR ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6250365982813254}, {"determining": "( ( ( MRS - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,( FirstVNF_CPU_Server * ARS ) ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RRSe + RCSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( ( ( ( MUC / ( DS - MUC ) ) / DS ) + Min( MUR ,RRSe ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9285714285714286, "obj2": 0.030830504168895687}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,ARS ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - Min( ( MDR * ( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_CPU_Server ) ) ,( ( RRS + ACS ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / RMSe ) - ( ( Max( Min( ( MUR - MUR ) ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7163265306122449, "obj2": 0.14304090058915275}, {"determining": "( ( PN - ( ( ( PN * PN ) - ARS ) + MRS ) ) + Min( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Max( ( RMSe / ( ( RMSe / MUC ) * ( RMSe / MLU ) ) ),Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.463265306122449, "obj2": 0.37170189987493246}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_Mem - PN ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( ( MLU + ( MLU + RCSe ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( DS + ( MUR / ( CS - MUC ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.16943532897054114}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * ( FirstVNF_RAM - MRS ) ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Min( CS ,MLU ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5673469387755102, "obj2": 0.2870540652020648}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MUR / ( Min( RRSe ,RRSe ) - Max( DS,MUR ) ) ) + ( RMSe / RRSe ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( RMSe ,RCSe ),MUR ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8628939486609767}, {"determining": "( ( PN - ( ( ARS * ( ( ACS / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RRSe + RCSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( ( ( ( MUC / ( DS - MUC ) ) / DS ) + Min( MUR ,RRSe ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7693877551020408, "obj2": 0.10317284881952694}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( ( FirstVNF_CPU_Server + ( ( ( ARS - RRS ) * ( PN / CRS ) ) / FirstVNF_Mem ) ) - ( Min( ( ARS / Const ) ,Const ) * PN ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( Min( DS ,( MUM / MUC ) ) - DS ) ),Min( RMSe ,MUC ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( CS,Max( MUR,Max( MLU,( RRSe + RMSe ) ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.9428571428571428, "obj2": 0.025327091109681756}, {"determining": "( ( ( PN - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,MDR ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RMSe / CS ) * MUC ) ) ,( MUR - MLU ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9346938775510204, "obj2": 0.028112719000186838}, {"determining": "( ( PN - ( ( ARS * ( ( ACS / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RRSe ) + ( CS + ( RRSe + ( RCSe + RCSe ) ) ) ) ) * DS ) - ( ( Max( Min( Max( Max( Min( RCSe ,RCSe ),RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.11916064885544839}, {"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_Mem_Server - Const ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUC ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8881266268389953}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * MUC ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU + RCSe ) ) )", "obj1": 0.6653061224489796, "obj2": 0.1850563037459543}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) + Min( ( ACS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Min( ( RRSe * MUM ) ,Max( RCSe,MUM ) ),( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.07142857142857142, "obj2": 0.901339875077667}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - RMSe ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}], "42": [{"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * Min( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) ,MDR ) ) ),( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - Max( Min( PN ,Min( FirstVNF_CPU ,( CRS / AMS ) ) ),MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) * MDR ) ) ),( ACS - Max( Max( Max( ACS,( FirstVNF_Mem + FirstVNF_CPU ) ),FirstVNF_RAM ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RMSe + ( ( RMSe * MLU ) / RCSe ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( ( MLU * DS ) * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - ( ( ( RRSe + RRSe ) - DS ) * ( MUM / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * Min( ( PN - MDR ) ,Const ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - ( Const - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / ( DS * ( MUM / MUC ) ) ) + ( RMSe / DS ) ) + ( RCSe - RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUC ),Min( ( DS + MUC ) ,Max( RCSe,RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.0673469387755102, "obj2": 0.9102521132069613}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( Min( ( FirstVNF_RAM_Server + RRS ) ,FirstVNF_CPU_Server ) ,( Min( FirstVNF_Mem ,Min( ACS ,( CRS - DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Const * AMS ) ) + FirstVNF_CPU ) + ACS ) ) ) ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,( CRS + FirstVNF_CPU ) ) - MDR ) )", "choosing": "( ( RRSe * DS ) - Min( CS ,MUR ) )", "obj1": 0.5897959183673469, "obj2": 0.2639850194214412}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( FirstVNF_Mem_Server,MDR ) ) ) * ( ( ACS - Const ) * Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Min( RCSe ,MUM ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.6936974554577039}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * PN ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * MLU ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5714285714285714, "obj2": 0.28226009560317644}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * Max( RMSe,Max( MUM,MUC ) ) ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( RMSe,MLU ) ) ) ,Max( RMSe,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7591836734693878, "obj2": 0.10837044073228112}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU_Server ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( ( PN * PN ) - MDR ) ) ) )", "choosing": "Min( ( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.06449058364060774}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ( ( ( Max( ( Min( FirstVNF_Mem_Server ,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) * ( FirstVNF_CPU * PN ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + Max( RMSe,DS ) ) + ( RCSe + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),( ( RCSe - MUM ) - RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.17142857142857143, "obj2": 0.7678251285905909}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( BR + MRS ) ) + Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,Min( MUM ,RCSe ) ) ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( CS + RCSe ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.04783168891548454}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( Max( ( RRSe * MUM ),( MUM + MLU ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.4061224489795918, "obj2": 0.4402330492795022}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) / ( PN - FirstVNF_CPU ) ) * ( ( DDR * ACS ) * Max( MRS,BR ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6821910916976998}, {"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_Mem_Server - Const ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUC ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8881266268389953}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_Mem - PN ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( ( MLU + ( MLU + RCSe ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( DS + ( MUR / ( CS - MUC ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.16943532897054114}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( Max( Max( BR,( Const + FirstVNF_Mem ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( RMSe / ( RRSe * MUM ) ) + ( RMSe / DS ) ) + Min( RCSe ,( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( CS / MUC ) ) )", "obj1": 0.14285714285714285, "obj2": 0.7967683752106915}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * PN ) - Min( Min( PN ,FirstVNF_Mem ) ,( ( AMS * Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,BR ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + Max( PN,MRS ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) - ( ( RCSe / RRSe ) + ( Min( MUC ,RRSe ) + MLU ) ) ) * DS ) - ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * ( CS + DS ) ) ) ,Max( CS,MUM ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( MUC - CS ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ( ( ARS - MRS ) + ( PN - ( Const - Min( PN ,DDR ) ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( Max( RMSe,RMSe ) / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8279433485600763}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * PN ) - Min( Max( FirstVNF_CPU_Server,Const ) ,( ( FirstVNF_CPU_Server + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - BR ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( ( RMSe + MUR ) * ( RRSe + MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24705420251973279}, {"determining": "( ( PN - ( BR / MRS ) ) + ( ( MRS - ( AMS + ( PN / RRS ) ) ) / ( Const + ( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) - Max( MUR,MUR ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * ( RMSe + MUR ) ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU * RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.33595204770342146}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( PN - ( ( ( PN * PN ) * Min( DDR ,RRS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - ( ACS - Min( PN ,BR ) ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * PN ) ) )", "choosing": "( Max( Max( MUC,RCSe ),RRSe ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.35570071552325844}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( PN - ( ( FirstVNF_CPU * PN ) * RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( RMSe,Max( CS,MUC ) ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.4204081632653061, "obj2": 0.4210924692774602}, {"determining": "( ( PN - ( BR + ( Min( RRS ,( FirstVNF_CPU_Server * ( ACS - RRS ) ) ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - ( CRS * RRS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.49387755102040815, "obj2": 0.34591007468043067}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5557216236445778}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( ( Max( ( Min( FirstVNF_Mem_Server ,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.33022491584676955}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_CPU_Server * ACS ) - ( ( ACS / MDR ) * Max( DDR,FirstVNF_Mem ) ) ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + Max( MLU,( CS / RRSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8098438540666819}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - RMSe ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MUR / ( Min( RRSe ,RRSe ) - Max( DS,MUR ) ) ) + ( RMSe / RRSe ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( RMSe ,RCSe ),MUR ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8628939486609767}, {"determining": "( Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( FirstVNF_CPU_Server * ( RRS - ACS ) ) ),( CRS - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) + ( CRS / AMS ) )", "choosing": "Min( ( MUM / ( RRSe + ( Min( ( DS * MUM ) ,( MUR - Max( ( RMSe / RRSe ),( RCSe * CS ) ) ) ) - MUM ) ) ) ,( ( RMSe * MUR ) - ( CS * ( Max( MUC,( ( MUM * RMSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8122448979591836, "obj2": 0.07986062150134544}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7040816326530612, "obj2": 0.15191722520996853}, {"determining": "( ( PN - ( ( ( ( ACS - Min( ( FirstVNF_CPU * AMS ) ,Const ) ) * PN ) * ARS ) + MRS ) ) + Min( ( ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / FirstVNF_Mem ) ) ) + Max( CRS,MDR ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - ( ( RMSe - RMSe ) / MUC ) ) ) / RCSe ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.3974382802604095}, {"determining": "( ( PN - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) * ( ( RRS - MDR ) / Min( ( ( ( FirstVNF_Mem_Server * PN ) * Max( FirstVNF_Mem_Server,Const ) ) - FirstVNF_RAM ) ,( CRS - Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( ARS ,( AMS / FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( Min( Max( RCSe,( CS - MUR ) ) ,( MUR - MUC ) ) / RRSe ) + ( ( RCSe + RCSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) * ( Max( Max( MUC,( Max( ( ( RCSe + RRSe ) * ( MUM * RCSe ) ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RCSe ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6755252297739431}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( ( RCSe + ( RMSe - RMSe ) ),RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.9673469387755103, "obj2": 0.011921032748296376}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU_Server - Min( ( ACS - PN ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,( DDR + FirstVNF_Mem ) ),ACS ) ) / BR ) ) )", "choosing": "Min( ( ( ( Max( Max( MUM,( RRSe * RMSe ) ),( Min( RMSe ,DS ) * Max( MLU,DS ) ) ) * CS ) / RRSe ) + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( MUR ,MUC ) ) ) - ( Min( RCSe ,MUM ) + Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.8346938775510204, "obj2": 0.07074513694562083}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( RRS * PN ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,RRS ),ACS ) ) / BR ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( MUC - CS ) )", "obj1": 0.8244897959183674, "obj2": 0.0768505920224455}, {"determining": "( ( RRS - ( MRS + ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_RAM - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - ( FirstVNF_CPU - AMS ) ) ) ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) * Min( RRSe ,( RCSe + ( RMSe - RMSe ) ) ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( RCSe + CS ) ) ) + ( Max( MUM,DS ) - Min( ( MLU + RCSe ) ,RMSe ) ) ) ) * ( Max( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9448979591836735, "obj2": 0.01847252174340047}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( PN - ( ( ARS * ( ( ACS / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RRSe ) + ( CS + ( RRSe + ( RCSe + RCSe ) ) ) ) ) * DS ) - ( ( Max( Min( Max( Max( Min( RCSe ,RCSe ),RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.11916064885544839}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Min( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( ACS - MDR ) ) ) ,( CRS - MDR ) ) / Min( ( ( FirstVNF_Mem_Server / MDR ) / CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - ( ARS - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * ( ARS - ( FirstVNF_Mem + CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( ( Min( Min( MUR ,DS ) ,Max( RMSe,MLU ) ) / DS ) * Max( MUR,RMSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.45819976227887577}, {"determining": "( ( PN - ( BR + ( Min( RRS ,( FirstVNF_CPU_Server * ( ACS - RRS ) ) ) * MRS ) ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * ( MDR + ( ACS - ( CRS * RRS ) ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,Min( CS ,RRSe ) ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.4387755102040816, "obj2": 0.4131493602910999}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( ( ACS * ( ( Max( Max( Max( MRS,MDR ),RRS ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MLU ),( CS + MLU ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7103362588447805}, {"determining": "( ( PN - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),Min( ARS ,FirstVNF_RAM_Server ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( Max( PN,FirstVNF_CPU_Server ) ,ARS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUM + ( Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUR ) ) ) ) + MUR ) ) ,( ( Max( ( ( Min( MLU ,RCSe ) * CS ) + MUR ),( MUR + RRSe ) ) * ( CS * MLU ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MLU,DS ) ) ) ) - ( ( MUR / ( ( RRSe / RCSe ) + ( DS + RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.4326530612244898, "obj2": 0.4143492841290804}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) ,MDR ) ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( ( Max( MUC,( RRSe + ( ( ( MLU - DS ) + RMSe ) * MUM ) ) ) * MUC ) / ( DS * RMSe ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7436848766893017}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( MUC / Max( CS,RCSe ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + ( MLU / RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( MDR,Const ) ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "( ( ( DS - ( ( MUC - ( ( MUM + MLU ) + DS ) ) * RRSe ) ) + Max( MUM,MUC ) ) * ( Max( Max( RMSe,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.726530612244898, "obj2": 0.1317208152066349}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( FirstVNF_CPU_Server * ( PN - FirstVNF_CPU_Server ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) ,( ARS * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( ( MLU * RCSe ),MUC ) ),( ( CS - Max( RCSe,MUC ) ) - ( DS * ( MUM / MUC ) ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUR ) * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( MUM,DS ) - MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.30733593926176134}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2352395530324529}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN - MDR ) ) - ( RRS * FirstVNF_CPU_Server ) ) + Min( Max( ( FirstVNF_Mem_Server * Min( ( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ,Const ) ),FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS * RMSe ) / ( MUR / Min( MUR ,Max( ( ( MUM / MUM ) - DS ),CS ) ) ) ) * Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.0583765195064075}, {"determining": "( ( ( MRS - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,( FirstVNF_CPU_Server * ARS ) ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RRSe + RCSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( ( ( ( MUC / ( DS - MUC ) ) / DS ) + Min( MUR ,RRSe ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9285714285714286, "obj2": 0.030830504168895687}, {"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) * MDR ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * RMSe ) ,DS ) + ( ( ( ( MUM * RRSe ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUC ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.07755102040816327, "obj2": 0.8955233855920757}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2045830672781153}, {"determining": "( ( ( Const / ( FirstVNF_RAM * Const ) ) - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),Min( ARS ,FirstVNF_RAM_Server ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ARS ,Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( MLU - RCSe ) + ( Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUR ) ) ) ) + MUR ) ) ,( ( Max( ( ( Min( MLU ,MUR ) * CS ) + MUR ),( MUR + RRSe ) ) * ( CS * MLU ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MLU,DS ) ) ) ) - ( ( MUR / RRSe ) - MUC ) ) ) ) )", "obj1": 0.46122448979591835, "obj2": 0.3822444574185637}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( PN - ( ( ( FirstVNF_CPU * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( FirstVNF_CPU * PN ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe * ( ( MUC / RCSe ) * MUC ) ) ,Max( RMSe,MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6632653061224489, "obj2": 0.19115985931706206}, {"determining": "( Min( FirstVNF_Mem ,( Min( PN ,BR ) * ( ( ACS - Const ) * ( Max( Const,BR ) / MDR ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( RCSe - RMSe ) ,( MUR - DS ) ) ) * ( ( ( RMSe / MUC ) * CS ) / ( Min( MUR ,( Max( MUC,( CS / Max( MUR,CS ) ) ) / CS ) ) / MUR ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6250365982813254}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * ( PN - ( RRS + MRS ) ) ) ) + MRS ) ) + Min( ( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) / FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( FirstVNF_Mem * ACS ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUM + ( Max( MUM,Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUR ) ) ) ) + ( MLU / MLU ) ) ) ,( ( Max( ( ( Min( MLU ,RCSe ) * CS ) + MUR ),( MUR + RRSe ) ) * ( CS * RCSe ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( MUM ,Max( MLU,DS ) ) ) ) - ( ( MUR / ( ( RRSe / RCSe ) + ( DS + RCSe ) ) ) - MUC ) ) ) ) )", "obj1": 0.7020408163265306, "obj2": 0.16517062139659652}, {"determining": "( ( PN - ( ( PN - ( BR + MRS ) ) + MRS ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( ( ( ( Const - ARS ) * ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) * ( ( RRS + CRS ) + RRS ) ) - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe - MUR ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.9816326530612245, "obj2": 0.007166225149052759}, {"determining": "( ( PN - ( DDR * ACS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * MUM ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.9081632653061225, "obj2": 0.041732191914679945}, {"determining": "( ( Max( CRS,( ACS + Max( PN,CRS ) ) ) * PN ) - ( MDR - BR ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5571428571428572, "obj2": 0.29445367532606836}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.3877551020408163, "obj2": 0.4521139308509459}, {"determining": "( ( MRS - Const ) + Min( ( ( Min( Const ,( ACS - Min( Max( FirstVNF_Mem,ARS ) ,Const ) ) ) * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( RMSe + RMSe ) - Max( Min( ( RMSe / ( Max( RMSe,MLU ) * ( RMSe / RMSe ) ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.39183673469387753, "obj2": 0.44489114058472673}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU * ( ( Min( ( RRS + FirstVNF_Mem ) ,FirstVNF_CPU ) + ACS ) * Min( Min( FirstVNF_CPU_Server ,RRS ) ,( ( ACS + PN ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + ( ( FirstVNF_CPU_Server + RRS ) / ARS ) )", "choosing": "( ( ( MLU - ( ( DS + MLU ) - ( RRSe * MUC ) ) ) / Max( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUR ),( MLU / RCSe ) ) ) * Min( ( ( DS * MUC ) + ( MUR / RCSe ) ) ,DS ) )", "obj1": 0.7142857142857143, "obj2": 0.1477541125516482}, {"determining": "( ( ( Max( ( Min( ACS ,FirstVNF_RAM ) * MDR ),FirstVNF_CPU ) * ( ( RRS - MDR ) / Min( ( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) - PN ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ( DDR - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( DS,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC / Max( MUC,RRSe ) ) ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.5552383460455531}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * MUC ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU + RCSe ) ) )", "obj1": 0.6653061224489796, "obj2": 0.1850563037459543}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.9612244897959183, "obj2": 0.015904536901672716}, {"determining": "( ( PN - ( ( ARS * ( ( ACS / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RRSe + RCSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( ( ( ( MUC / ( DS - MUC ) ) / DS ) + Min( MUR ,RRSe ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7693877551020408, "obj2": 0.10317284881952694}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MLU ),( CS + MLU ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6, "obj2": 0.26169816369364324}, {"determining": "( ( PN - ( BR + MRS ) ) + ( PN - ( CRS - Const ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + ( RCSe / MLU ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RRSe * MUM ) + Min( Max( MUM,DS ) ,MUM ) ) ) - Max( RMSe,MUC ) ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.31534739780208765}, {"determining": "( ( PN - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_CPU ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS - ( ( MUC - ( ( MUM + MLU ) + DS ) ) * RRSe ) ) + Max( MUM,MUC ) ) * ( Max( Max( RMSe,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6530612244897959, "obj2": 0.19556215279492076}, {"determining": "( ( PN - ( ( ARS * ( ( ACS / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RRSe ) + ( CS + ( RRSe + ( RCSe + RCSe ) ) ) ) ) * DS ) - ( ( Max( Min( Max( Max( Min( RCSe ,RCSe ),RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.11916064885544839}, {"determining": "( ( PN - ( ( ( PN * PN ) - ARS ) + MRS ) ) + Min( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Max( ( RMSe / ( ( RMSe / MUC ) * ( RMSe / MLU ) ) ),Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.463265306122449, "obj2": 0.37170189987493246}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472915}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( MDR,Const ) ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RCSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,RRSe ) ) ) - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.7836734693877551, "obj2": 0.09610104243262756}, {"determining": "( ( PN - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),Min( ARS ,FirstVNF_RAM_Server ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( Max( PN,FirstVNF_CPU_Server ) ,ARS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.4530612244897959, "obj2": 0.3847616920782456}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * MUC ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU + RCSe ) ) )", "obj1": 0.6653061224489796, "obj2": 0.1850563037459543}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MLU ),( CS + MLU ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.09591836734693877, "obj2": 0.8719235955782604}], "43": [{"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * Min( ( PN - MDR ) ,Const ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - ( Const - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / ( DS * ( MUM / MUC ) ) ) + ( RMSe / DS ) ) + ( RCSe - RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUC ),Min( ( DS + MUC ) ,Max( RCSe,RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.0673469387755102, "obj2": 0.9102521132069613}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( ( CRS / CRS ) / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Max( ARS,DDR ) ) ) ) ) )", "choosing": "( Min( MUC ,RMSe ) - ( ( Max( Min( ( RMSe - ( ( RCSe / RMSe ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * Min( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) ,MDR ) ) ),( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( PN - MDR ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / ( DS * ( MUM / MUC ) ) ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUC ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.0673469387755102, "obj2": 0.9102521132069613}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN - MDR ) ) - ( RRS * FirstVNF_CPU_Server ) ) + Min( Max( ( FirstVNF_Mem_Server * Min( ( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ,Const ) ),FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS * RMSe ) / ( MUR / Min( MUR ,Max( ( ( MUM / MUM ) - DS ),CS ) ) ) ) * Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) )", "obj1": 0.8653061224489796, "obj2": 0.0583765195064075}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( PN - ( ( ( PN * PN ) * Min( DDR ,RRS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - ( ACS - Min( PN ,BR ) ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * PN ) ) )", "choosing": "( Max( Max( MUC,RCSe ),RRSe ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.35570071552325844}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( FirstVNF_Mem_Server,MDR ) ) ) * ( ( ACS - Const ) * Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Min( RCSe ,MUM ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.6936974554577039}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( FirstVNF_CPU_Server * ( PN - FirstVNF_CPU_Server ) ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) ,( ARS * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( ( MLU * RCSe ),MUC ) ),( ( CS - Max( RCSe,MUC ) ) - ( DS * ( MUM / MUC ) ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUR ) * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( MUM,DS ) - MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.536734693877551, "obj2": 0.30733593926176134}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2045830672781153}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / MDR ) ) * ( MDR / ( RRS - ( FirstVNF_Mem + AMS ) ) ) ) * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( ( ( ( MUC / ( MUM - CS ) ) - ( CS + RRSe ) ) / RRSe ) + ( CS + RCSe ) ) - ( CS * DS ) ) * DS ) - ( DS + ( DS + ( CS - MUC ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.15831146551537686}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ( ( ( Max( ( Min( FirstVNF_Mem_Server ,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) * ( FirstVNF_CPU * PN ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + Max( RMSe,DS ) ) + ( RCSe + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),( ( RCSe - MUM ) - RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.17142857142857143, "obj2": 0.7678251285905909}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( PN - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_CPU ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS - ( ( MUC - ( ( MUM + MLU ) + DS ) ) * RRSe ) ) + Max( MUM,MUC ) ) * ( Max( Max( RMSe,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6530612244897959, "obj2": 0.19556215279492076}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( ( MRS - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,( FirstVNF_CPU_Server * ARS ) ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RRSe + RCSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( ( ( ( MUC / ( DS - MUC ) ) / DS ) + Min( MUR ,RRSe ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9285714285714286, "obj2": 0.030830504168895687}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) / ( PN - FirstVNF_CPU ) ) * ( ( DDR * ACS ) * Max( MRS,BR ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6821910916976998}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( ARS + ACS ) * Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( DDR / MRS ) * ARS ) ) ) ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( Min( RRSe ,( MLU - ( RMSe / MLU ) ) ) + RCSe ) ) ) * DS ) - ( DS + ( MUR + ( ( RCSe / RRSe ) - MUC ) ) ) )", "obj1": 0.7142857142857143, "obj2": 0.1445656649790729}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( RMSe / RRSe ) ) ) ,( RMSe - ( ( MUC * RCSe ) + ( MUM + MUR ) ) ) ),RRSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.5877551020408164, "obj2": 0.26994593033915715}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( Max( Max( BR,( Const + FirstVNF_Mem ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( RMSe / ( RRSe * MUM ) ) + ( RMSe / DS ) ) + Min( RCSe ,( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( CS / MUC ) ) )", "obj1": 0.14285714285714285, "obj2": 0.7967683752106915}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * PN ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * MLU ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5714285714285714, "obj2": 0.28226009560317644}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU_Server - Min( ( ACS - PN ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,( DDR + FirstVNF_Mem ) ),ACS ) ) / BR ) ) )", "choosing": "Min( ( ( ( Max( Max( MUM,( RRSe * RMSe ) ),( Min( RMSe ,DS ) * Max( MLU,DS ) ) ) * CS ) / RRSe ) + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( MUR ,MUC ) ) ) - ( Min( RCSe ,MUM ) + Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.8346938775510204, "obj2": 0.07074513694562083}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ( ( ARS - MRS ) + ( PN - ( Const - Min( PN ,DDR ) ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( Max( RMSe,RMSe ) / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8279433485600763}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * PN ) - Min( Max( FirstVNF_CPU_Server,Const ) ,( ( FirstVNF_CPU_Server + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - BR ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( ( RMSe + MUR ) * ( RRSe + MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24705420251973279}, {"determining": "( ( PN - ( BR / MRS ) ) + ( ( MRS - ( AMS + ( PN / RRS ) ) ) / ( Const + ( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) - Max( MUR,MUR ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * ( RMSe + MUR ) ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU * RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.33595204770342146}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( DS + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.16943532897054114}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( PN - ( ( ( ( ACS - Min( ( FirstVNF_CPU * AMS ) ,Const ) ) * PN ) * ARS ) + MRS ) ) + Min( ( ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / FirstVNF_Mem ) ) ) + Max( CRS,MDR ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( ( ( MUR - RMSe ) / ( MUC + ( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - ( ( RMSe - RMSe ) / MUC ) ) ) / RCSe ) ) ) )", "obj1": 0.44285714285714284, "obj2": 0.3974382802604095}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + Min( RRSe ,( RCSe + ( RMSe - RMSe ) ) ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9448979591836735, "obj2": 0.018307047547288426}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_CPU_Server * ACS ) - ( ( ACS / MDR ) * Max( DDR,FirstVNF_Mem ) ) ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + Max( MLU,( CS / RRSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8098438540666819}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( PN - ( ( FirstVNF_CPU * PN ) * RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( RMSe,Max( CS,MUC ) ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.4061224489795918, "obj2": 0.4316316539139774}, {"determining": "( ( Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( BR + MRS ) ) + Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,Min( MUM ,RCSe ) ) ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( CS + RCSe ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.04783168891548454}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MUR / ( Min( RRSe ,RRSe ) - Max( DS,MUR ) ) ) + ( RMSe / RRSe ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( RMSe ,RCSe ),MUR ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8628939486609767}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7040816326530612, "obj2": 0.15191722520996853}, {"determining": "( ( PN - ( ( ARS * ( ( ACS / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RRSe + RCSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( ( ( ( MUC / ( DS - MUC ) ) / DS ) + Min( MUR ,RRSe ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7693877551020408, "obj2": 0.10317284881952694}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) ,MDR ) ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( ( Max( MUC,( RRSe + ( ( ( MLU - DS ) + RMSe ) * MUM ) ) ) * MUC ) / ( DS * RMSe ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7436848766893017}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( Min( FirstVNF_Mem ,( Min( PN ,BR ) * ( ( ACS - Const ) * ( Max( Const,BR ) / MDR ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( RCSe - RMSe ) ,( MUR - DS ) ) ) * ( ( ( RMSe / MUC ) * CS ) / ( Min( MUR ,( Max( MUC,( CS / Max( MUR,CS ) ) ) / CS ) ) / MUR ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6250365982813254}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( RRS * PN ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,RRS ),ACS ) ) / BR ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR - RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / Max( Min( RMSe ,RMSe ),( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.7979591836734694, "obj2": 0.09141103095046278}, {"determining": "( ( PN - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) * ( ( RRS - MDR ) / Min( ( ( ( FirstVNF_Mem_Server * PN ) * Max( FirstVNF_Mem_Server,Const ) ) - FirstVNF_RAM ) ,( CRS - Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( ARS ,( AMS / FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( Min( Max( RCSe,( CS - MUR ) ) ,( MUR - MUC ) ) / RRSe ) + ( ( RCSe + RCSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) * ( Max( Max( MUC,( Max( ( ( RCSe + RRSe ) * ( MUM * RCSe ) ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RCSe ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6755252297739431}, {"determining": "( ( Min( Min( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( BR + MRS ) ) + Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,MUM ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( CS + RCSe ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.04783168891548454}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * Min( DS ,RCSe ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9244897959183673, "obj2": 0.03733798841503811}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * PN ) - Min( Min( PN ,FirstVNF_Mem ) ,( ( AMS * Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,BR ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + Max( PN,MRS ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) - ( ( RCSe / RRSe ) + ( Min( MUC ,RRSe ) + MLU ) ) ) * DS ) - ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * ( CS + DS ) ) ) ,Max( CS,MUM ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( MUC - CS ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem_Server * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( ( RCSe + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.4, "obj2": 0.4444910741101684}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( FirstVNF_Mem_Server + ( PN - ( ( FirstVNF_CPU * PN ) * RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) - Max( Max( ( RMSe / ( ( RMSe / MUC ) * ( RMSe / MLU ) ) ),Max( RMSe,MLU ) ),Max( CS,MLU ) ) )", "obj1": 0.43673469387755104, "obj2": 0.4080210159437396}, {"determining": "( ( PN - ( ( ( FirstVNF_RAM_Server * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( ( ACS - Min( FirstVNF_CPU_Server ,MRS ) ) ,Const ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS - DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( MUC / RMSe ) ) ) + ( ( RCSe / Min( CS ,DS ) ) / MUR ) ) ) ) * CS ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) * ( RMSe / MLU ) ) ) ,Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.463265306122449, "obj2": 0.37170189987493246}, {"determining": "( ( PN - ( DDR * ACS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * MUM ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.9081632653061225, "obj2": 0.041732191914679945}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( ( ACS * ( ( Max( Max( Max( MRS,MDR ),RRS ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MLU ),( CS + MLU ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7103362588447805}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUM / ( RRSe + ( Min( ( DS * MUM ) ,( MUR - Max( ( RMSe / RRSe ),( RCSe * CS ) ) ) ) - MUM ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.9571428571428572, "obj2": 0.014328649682997715}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Max( ( ( AMS + RRS ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( Max( ( CS - RMSe ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.08775510204081632, "obj2": 0.8870894450041076}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_Mem - PN ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( ( MLU + ( MLU + RCSe ) ) * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( DS + ( MUR / ( CS - MUC ) ) ) )", "obj1": 0.6795918367346939, "obj2": 0.16943532897054114}, {"determining": "( ( ( FirstVNF_Mem_Server * ( PN - MDR ) ) - ( RRS * FirstVNF_CPU_Server ) ) + Min( Max( ( FirstVNF_Mem_Server * Min( ( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ,Const ) ),FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Min( RCSe ,MUM ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.7224489795918367, "obj2": 0.1336023664867492}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( MUC / Max( CS,RCSe ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + ( MLU / RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( MUM + ( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * ( DS * RCSe ) ) / RMSe ) + ( RMSe / RCSe ) ) + ( RCSe + RCSe ) ) ) ) * ( CS - ( MUM - CS ) ) )", "obj1": 0.07346938775510205, "obj2": 0.8970313723427785}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ACS ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( ( PN * PN ) - MDR ) ) ) )", "choosing": "Min( ( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,CS ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8510204081632653, "obj2": 0.06575253149945581}, {"determining": "( ( PN - ( MRS + ( ( PN * PN ) * MDR ) ) ) + Min( Min( ( FirstVNF_RAM / PN ) ,FirstVNF_CPU ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( Min( DS ,Min( MUR ,( ( MUM - RMSe ) * RMSe ) ) ) / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( RRSe / Max( Max( Min( MUC ,RCSe ),RRSe ),( CS + Max( RRSe,DS ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.455952904065653}, {"determining": "( ( PN - ( ( ( PN * PN ) - ARS ) + MRS ) ) + Min( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * CS ) - ( ( Max( Max( ( RMSe / ( ( RMSe / MUC ) * ( RMSe / MLU ) ) ),Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.463265306122449, "obj2": 0.37170189987493246}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2352395530324529}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - RMSe ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( ( ( CRS - FirstVNF_RAM_Server ) - FirstVNF_RAM ) - ( Max( FirstVNF_CPU,PN ) * RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( CS,DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * ( MUC - MUC ) ) - ( ( Max( Max( ( RMSe / ( ( RMSe / MUC ) * ( RMSe / MLU ) ) ),Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.45510204081632655, "obj2": 0.3765114236363082}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / Max( Max( MRS,RRS ),ACS ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( MUR - RRSe ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7448979591836735, "obj2": 0.11553507415763073}, {"determining": "( ( PN - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( Max( PN,FirstVNF_CPU_Server ) ,ARS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MLU,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.3895923532292114}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * FirstVNF_CPU_Server ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( ( PN * PN ) - MDR ) ) ) )", "choosing": "Min( ( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.8530612244897959, "obj2": 0.06449058364060774}, {"determining": "( ( ( ( Min( Min( PN ,PN ) ,ARS ) / ( MRS * ( MDR - ( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( MDR,Const ) ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "Min( MUC ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,RRSe ) ) ) - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.7816326530612245, "obj2": 0.09756234417216379}, {"determining": "( ( PN - ( ( ARS * ( ( ACS / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + ( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RRSe / RRSe ) + ( CS + ( RRSe + ( RCSe + RCSe ) ) ) ) ) * DS ) - ( ( Max( Min( Max( Max( Min( RCSe ,RCSe ),RMSe ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) + ( CS - MUC ) ) ) )", "obj1": 0.7571428571428571, "obj2": 0.11032079439767907}, {"determining": "( ( ( Max( ( Min( ACS ,FirstVNF_RAM ) * MDR ),FirstVNF_CPU ) * ( ( RRS - MDR ) / Min( ( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) - PN ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ( DDR - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( DS,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( MUC / Max( MUC,RRSe ) ) ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.5552383460455531}, {"determining": "( ( Max( CRS,( ACS + Max( PN,CRS ) ) ) * PN ) - ( MDR - BR ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5571428571428572, "obj2": 0.29445367532606836}, {"determining": "( ( PN - ( DDR * ACS ) ) + Min( ( ( FirstVNF_Mem_Server * Max( Const,( Min( ( FirstVNF_Mem * ARS ) ,Const ) - ACS ) ) ) / FirstVNF_CPU_Server ) ,Min( ( CRS - ( BR * CRS ) ) ,MDR ) ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( ( DS - MUR ) / RRSe ) + Min( ( RCSe + ( RMSe - RMSe ) ) ,RRSe ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( MUC,( RMSe / ( RMSe + RMSe ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9102040816326531, "obj2": 0.041104529925944266}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( ( Const / MRS ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * RRSe ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU + RCSe ) ) )", "obj1": 0.6653061224489796, "obj2": 0.1850563037459543}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( MDR,Const ) ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,Min( CS ,RRSe ) ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.11721240363758194}, {"determining": "( ( PN - ( BR + MRS ) ) + ( PN - ( CRS - Const ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + ( RCSe / MLU ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RRSe * MUM ) + Min( Max( MUM,DS ) ,MUM ) ) ) - Max( RMSe,MUC ) ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.31534739780208765}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( ( Max( ( Min( FirstVNF_Mem_Server ,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.33022491584676955}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( ( Min( FirstVNF_Mem_Server ,Const ) - Const ) / ( ( RRS - ACS ) * PN ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( RMSe / MLU ) ) )", "obj1": 0.5673469387755102, "obj2": 0.28619737357030484}, {"determining": "( ( ( ( ( FirstVNF_CPU * PN ) * ( ( ACS * Const ) / ACS ) ) + MRS ) - RRS ) + Max( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * DDR ) ,Const ) ) ) ) / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + Max( ( ( MUR - RMSe ) / Max( Min( RMSe ,RMSe ),( MUC / ( CS + RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ) ) ) * ( ( MUC + ( RCSe * MUR ) ) / MUM ) )", "obj1": 0.9673469387755103, "obj2": 0.011913545059857375}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / Min( MDR ,DDR ) ) ) - FirstVNF_RAM_Server ) * ( ( Min( ( Min( FirstVNF_CPU_Server ,DDR ) + PN ) ,FirstVNF_Mem_Server ) / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,( RMSe / MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( ( Max( Min( MUM ,RCSe ),Max( DS,CS ) ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5557216236445778}, {"determining": "( ( Max( CRS,( ACS + Max( PN,CRS ) ) ) * PN ) - ( MDR - BR ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5571428571428572, "obj2": 0.29445367532606836}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( Min( DDR ,ACS ) * PN ) * ARS ) / ( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( MDR,Const ) ) ) - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUC / MUM ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,Min( MUR ,Min( ( RRSe + RMSe ) ,RMSe ) ) )", "obj1": 0.7836734693877551, "obj2": 0.0960043141061595}, {"determining": "( ( Max( MDR,PN ) * ( ( ( ( CRS * ( Const / MRS ) ) / ( ( FirstVNF_CPU * ( Const / FirstVNF_Mem_Server ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( CRS + CRS ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) * ( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,( ( RMSe / ( Max( RMSe,CS ) + RCSe ) ) + ( ( MUC * RCSe ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * ( ( RMSe * RMSe ) / Max( Max( MUC,( Max( Max( Min( RCSe ,CS ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09278096271472915}], "44": [{"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * Min( ( PN - MDR ) ,Const ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - ( Const - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / ( DS * ( MUM / MUC ) ) ) + ( RMSe / DS ) ) + ( RCSe - RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUC ),Min( ( DS + MUC ) ,Max( RCSe,RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.0673469387755102, "obj2": 0.9102521132069613}, {"determining": "( ( PN * ( DDR - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( AMS - ( PN + RRS ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR + MLU ) ) ) ) * ( ( RMSe / MUR ) / ( DS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( ( CRS / CRS ) / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Max( ARS,DDR ) ) ) ) ) )", "choosing": "( Min( MUC ,RMSe ) - ( ( Max( Min( ( RMSe - ( ( RCSe / RMSe ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * Min( BR ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / ( DS * ( MUM / MUC ) ) ) + ( RMSe / DS ) ) + ( MUM + RCSe ) ) ) ) * ( Min( RMSe ,MUM ) / ( DS * RMSe ) ) )", "obj1": 0.0673469387755102, "obj2": 0.9102521132069613}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,Max( MRS,AMS ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( MUC,RRSe ) ) ) ,( RMSe - ( ( MUC * RCSe ) + ( MUM + MUR ) ) ) ),RRSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.4346938775510204, "obj2": 0.4064422780153936}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( PN - ( BR / MRS ) ) + ( ( MRS - ( AMS + ( PN / RRS ) ) ) / ( Const + ( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) - Max( MUR,MUR ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * ( RMSe + MUR ) ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU * RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.33595204770342146}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( FirstVNF_Mem_Server,MDR ) ) ) * ( ( ACS - Const ) * Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Min( RCSe ,MUM ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.6936974554577039}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2045830672781153}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ( ( ( Max( ( Min( FirstVNF_Mem_Server ,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) * ( FirstVNF_CPU * PN ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + Max( RMSe,DS ) ) + ( RCSe + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),( ( RCSe - MUM ) - RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.17142857142857143, "obj2": 0.7678251285905909}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( Min( Min( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( BR + MRS ) ) + Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( ( MUC / MLU ) - ( CS + RRSe ) ) / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( DS + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8734693877551021, "obj2": 0.056104621807671444}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + Min( RRSe ,( RCSe + ( RMSe - RMSe ) ) ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9448979591836735, "obj2": 0.018307047547288426}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) / ( PN - FirstVNF_CPU ) ) * ( ( DDR * ACS ) * Max( MRS,BR ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6821910916976998}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( PN - ( ( ( PN * PN ) * Min( DDR ,RRS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - ( ACS - Min( PN ,BR ) ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * PN ) ) )", "choosing": "( Max( Max( MUC,RCSe ),RRSe ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.35570071552325844}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( ARS + ACS ) * Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( DDR / MRS ) * ARS ) ) ) ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( Min( RRSe ,( MLU - ( RMSe / MLU ) ) ) + RCSe ) ) ) * DS ) - ( DS + ( MUR + ( ( RCSe / RRSe ) - MUC ) ) ) )", "obj1": 0.7142857142857143, "obj2": 0.1445656649790729}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( Max( Max( BR,( Const + FirstVNF_Mem ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( RMSe / ( RRSe * MUM ) ) + ( RMSe / DS ) ) + Min( RCSe ,( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( CS / MUC ) ) )", "obj1": 0.14285714285714285, "obj2": 0.7967683752106915}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * PN ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * MLU ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5714285714285714, "obj2": 0.28226009560317644}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - RMSe ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( ( MRS / ARS ) - ( Max( FirstVNF_CPU,PN ) * RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( CS,DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * ( MUC - MUC ) ) - ( ( Min( DS ,MLU ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.48367346938775513, "obj2": 0.35988826375245003}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MUR / ( Min( RRSe ,RRSe ) - Max( DS,MUR ) ) ) + ( RMSe / RRSe ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( RMSe ,RCSe ),MUR ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8628939486609767}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * PN ) - Min( Min( PN ,FirstVNF_Mem ) ,( ( AMS * Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,BR ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + Max( PN,MRS ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) - ( ( RCSe / RRSe ) + ( Min( MUC ,RRSe ) + MLU ) ) ) * DS ) - ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * ( CS + DS ) ) ) ,Max( CS,MUM ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( MUC - CS ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( PN - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_CPU ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS - ( ( MUC - ( ( MUM + MLU ) + DS ) ) * RRSe ) ) + Max( MUM,MUC ) ) * ( Max( Max( RMSe,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6530612244897959, "obj2": 0.19556215279492076}, {"determining": "( ( ( MRS - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,( FirstVNF_CPU_Server * ARS ) ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RRSe + RCSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( ( ( ( MUC / ( DS - MUC ) ) / DS ) + Min( MUR ,RRSe ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9285714285714286, "obj2": 0.030830504168895687}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ( ( ARS - MRS ) + ( PN - ( Const - Min( PN ,DDR ) ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( Max( RMSe,RMSe ) / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11836734693877551, "obj2": 0.8279433485600763}, {"determining": "( Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( MUM + ( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * ( DS * RCSe ) ) / RMSe ) + ( RMSe / RCSe ) ) + ( RCSe + RCSe ) ) ) ) * ( CS - ( MUM - CS ) ) )", "obj1": 0.07346938775510205, "obj2": 0.8970313723427785}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * PN ) - Min( Max( FirstVNF_CPU_Server,Const ) ,( ( FirstVNF_CPU_Server + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - BR ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( ( RMSe + MUR ) * ( RRSe + MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24705420251973279}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( Max( ACS,MDR ) + Min( Min( ( PN + ARS ) ,( FirstVNF_CPU * Max( ( MDR / ACS ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( ( PN * PN ) - MDR ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,( CS * Max( MLU,CS ) ) ) + ( Max( RCSe,RCSe ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.8183673469387756, "obj2": 0.08732601907587807}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem_Server * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( Max( ( MUM - MUC ),( Max( Max( MUC,RCSe ),RRSe ) / MLU ) ),( MUM + ( ( ( RCSe + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) + ( ( RCSe / RRSe ) + Max( RMSe,Max( RMSe,RMSe ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( MUM + RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.4, "obj2": 0.4444910741101684}, {"determining": "( ( MDR / Min( AMS ,FirstVNF_Mem_Server ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( PN - ( PN - MDR ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( RRSe * MUR ) ) + RCSe ) ) ) * CS ) - ( RMSe * MUR ) )", "obj1": 0.46530612244897956, "obj2": 0.37021459689907293}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / Min( MDR ,DDR ) ) ) - FirstVNF_RAM_Server ) * ( ( Min( ( Min( FirstVNF_CPU_Server ,DDR ) + PN ) ,FirstVNF_Mem_Server ) / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,( RMSe / MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( ( Max( Min( MUM ,RCSe ),Max( DS,CS ) ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5557216236445778}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( ( Const / MRS ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( MUR,MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * RRSe ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU + RCSe ) ) )", "obj1": 0.6653061224489796, "obj2": 0.1850563037459543}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / RMSe ) * ( RMSe / RRSe ) ) ) ,( RMSe - ( ( MUC * RCSe ) + ( MUM + MUR ) ) ) ),RRSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.5877551020408164, "obj2": 0.26994593033915715}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( PN - ( ( FirstVNF_CPU * PN ) * ( FirstVNF_Mem_Server * PN ) ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / MUC ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( RMSe,( RCSe / RRSe ) ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.4061224489795918, "obj2": 0.4282080442506063}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( ( ( CRS - FirstVNF_RAM_Server ) - FirstVNF_RAM ) - ( Max( FirstVNF_CPU,PN ) * RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( CS,DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * ( MUC - MUC ) ) - ( ( Max( Max( ( RMSe / ( ( RMSe / MUC ) * ( RMSe / MLU ) ) ),Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.45510204081632655, "obj2": 0.3765114236363082}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) ,MDR ) ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( ( Max( MUC,( RRSe + ( ( ( MLU - DS ) + RMSe ) * MUM ) ) ) * MUC ) / ( DS * RMSe ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7436848766893017}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( FirstVNF_CPU * Min( AMS ,DDR ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( RMSe - MUR ) - ( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUM ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) ,( MUR + ( ( ( CS / MLU ) + DS ) - CS ) ) )", "obj1": 0.5428571428571428, "obj2": 0.30368722482041716}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( Min( FirstVNF_Mem ,( Min( PN ,BR ) * ( ( ACS - Const ) * ( Max( Const,BR ) / MDR ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( RCSe - RMSe ) ,( MUR - DS ) ) ) * ( ( ( RMSe / MUC ) * CS ) / ( Min( MUR ,( Max( MUC,( CS / Max( MUR,CS ) ) ) / CS ) ) / MUR ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6250365982813254}, {"determining": "( ( PN - ( ( ( PN * PN ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,DS ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.455952904065653}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( PN - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) * ( ( RRS - MDR ) / Min( ( ( ( FirstVNF_Mem_Server * PN ) * Max( FirstVNF_Mem_Server,Const ) ) - FirstVNF_RAM ) ,( CRS - Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( ARS ,( AMS / FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( Min( Max( RCSe,( CS - MUR ) ) ,( MUR - MUC ) ) / RRSe ) + ( ( RCSe + RCSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) * ( Max( Max( MUC,( Max( ( ( RCSe + RRSe ) * ( MUM * RCSe ) ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RCSe ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6755252297739431}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( ( DDR + ARS ) * ( MDR / ( ( FirstVNF_CPU * PN ) + ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( CS + RCSe ) + ( Max( RMSe,MLU ) / MUC ) ) ) * DS ) - ( ( Max( RMSe,Max( CS,RMSe ) ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6836734693877551, "obj2": 0.16364500040115512}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * BR ) ,RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + Min( RRSe ,( RCSe + ( RMSe - RMSe ) ) ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * Max( ( ( MUR - RMSe ) / Max( Min( RMSe ,RMSe ),( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ) )", "obj1": 0.9673469387755103, "obj2": 0.011738250874035709}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( Max( RMSe,RMSe ) / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5897959183673469, "obj2": 0.2695752088243538}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU_Server - Min( ( ACS - PN ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,( DDR + FirstVNF_Mem ) ),ACS ) ) / BR ) ) )", "choosing": "Min( ( ( ( Max( Max( MUM,( RRSe * RMSe ) ),( Min( RMSe ,DS ) * Max( MLU,DS ) ) ) * CS ) / RRSe ) + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( MUR ,MUC ) ) ) - ( Min( RCSe ,MUM ) + Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.8346938775510204, "obj2": 0.07074513694562083}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( PN - ( MRS - FirstVNF_Mem ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( PN / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ) * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + RMSe ) + RCSe ) + ( ( ( MUC / MLU ) - ( MUM + RRSe ) ) / RRSe ) ) ) * DS ) - ( ( MUC * ( RCSe / ( Max( DS,( DS * RCSe ) ) * CS ) ) ) + MUC ) )", "obj1": 0.8204081632653061, "obj2": 0.07488050547434065}, {"determining": "( ( PN - ( ( ARS * ( ( BR / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( MRS + PN ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( DS * CS ) - ( ( RCSe / RRSe ) + ( RCSe + RCSe ) ) ) * DS ) - ( MUM + MUM ) )", "obj1": 0.6714285714285714, "obj2": 0.1736887222445075}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,RRSe ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RRSe * MUM ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5163265306122449, "obj2": 0.3223382578569468}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_CPU_Server * ACS ) - ( ( ACS / MDR ) * Max( DDR,FirstVNF_Mem ) ) ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + Max( MLU,( CS / RRSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8098438540666819}, {"determining": "( ( PN - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( Max( PN,FirstVNF_CPU_Server ) ,ARS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MLU,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.3895923532292114}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( MUC / Max( CS,RCSe ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + ( MLU / RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( Min( Min( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( BR + MRS ) ) + Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,MUM ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( CS + RCSe ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.04783168891548454}, {"determining": "( ( PN - ( DDR * ACS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * MUM ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.9061224489795918, "obj2": 0.042914527221951854}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( RRS * PN ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,RRS ),ACS ) ) / BR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( DS + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8, "obj2": 0.08766613351240513}, {"determining": "( ( PN - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) * ( ( RRS - MDR ) / Min( ( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8945131436198676}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2352395530324529}, {"determining": "( ( Max( CRS,( ACS + Max( PN,CRS ) ) ) * PN ) - ( MDR - BR ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5551020408163265, "obj2": 0.2956273965825767}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / Max( Max( MRS,RRS ),FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( MUR - RRSe ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.035118516221224784}, {"determining": "( ( PN - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_CPU ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS - ( ( MUC - ( ( MUM + MLU ) + DS ) ) * RRSe ) ) + Max( MUM,MUC ) ) * ( Max( Max( RMSe,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.7326530612244898, "obj2": 0.12831334823484955}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( MUR - RMSe ) ) / Max( Max( ( ( MUR - RMSe ) / Max( Min( RMSe ,RMSe ),( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.6551020408163265, "obj2": 0.18872374587878163}, {"determining": "( ( PN - ( BR + MRS ) ) + ( PN - ( CRS - Const ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( RMSe + ( RCSe / MLU ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RRSe * MUM ) + Min( Max( MUM,DS ) ,MUM ) ) ) - Max( RMSe,MUC ) ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.31534739780208765}, {"determining": "( ( ( ACS * ( ( Max( Max( Max( MRS,MDR ),RRS ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MLU ),( CS + MLU ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7103362588447805}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( ARS + ACS ) * Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( DDR / MRS ) * ARS ) ) ) ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8591836734693877, "obj2": 0.058119318686990266}, {"determining": "( ( FirstVNF_CPU - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( Max( FirstVNF_CPU,Max( ( PN - DDR ),MRS ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( ( Max( Min( RCSe ,MUM ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + Max( MLU,DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ),Max( RMSe,Max( MUM,( ( RCSe / ( MLU + ( RCSe - RRSe ) ) ) + ( CS + RCSe ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.7224489795918367, "obj2": 0.1336023664867492}, {"determining": "( ( Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( BR + MRS ) ) + Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,Min( MUM ,RCSe ) ) ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( CS + RCSe ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.889795918367347, "obj2": 0.04783168891548454}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / MDR ) ) * ( MDR / ( RRS - ( FirstVNF_Mem + AMS ) ) ) ) * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( ( ( ( MUC / ( MUM - CS ) ) - ( CS + RRSe ) ) / RRSe ) + ( CS + RCSe ) ) - ( CS * DS ) ) * DS ) - ( DS + ( DS + ( CS - MUC ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.15831146551537686}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( ( Min( FirstVNF_Mem_Server ,Const ) - Const ) / ( ( RRS - ACS ) * PN ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( RMSe / MLU ) ) )", "obj1": 0.5673469387755102, "obj2": 0.28619737357030484}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( ( Max( ( Min( FirstVNF_Mem_Server ,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.33022491584676955}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( MDR,Const ) ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + Min( RRSe ,( RCSe + ( RMSe - RMSe ) ) ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.736734693877551, "obj2": 0.12480529650449437}, {"determining": "( ( ( ( Min( Min( PN ,PN ) ,ARS ) / ( MRS * ( MDR - ( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( MDR,Const ) ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "Min( MUC ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,RRSe ) ) ) - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.7816326530612245, "obj2": 0.09756234417216379}, {"determining": "( ( Max( CRS,( ACS + Max( Min( PN ,PN ),CRS ) ) ) * PN ) - ( MDR - BR ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * MUM ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) / ( DS * RMSe ) ) )", "obj1": 0.563265306122449, "obj2": 0.29407800194647804}, {"determining": "( ( MDR * ( ( ( MDR / ( Min( ( DDR / RRS ) ,FirstVNF_CPU_Server ) * ARS ) ) / Max( ( FirstVNF_CPU_Server - Min( ( ACS - PN ) ,FirstVNF_CPU ) ),RRS ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,( DDR + FirstVNF_Mem ) ),ACS ) ) / BR ) ) )", "choosing": "Min( ( ( ( Max( Max( MUM,( RRSe * RMSe ) ),( Min( RMSe ,DS ) * Max( MLU,DS ) ) ) * CS ) / RRSe ) + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + Max( CS,MUC ) ) ),MUM ) + RMSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - Max( RRSe,RMSe ) ) )", "obj1": 0.8306122448979592, "obj2": 0.0727661801092021}, {"determining": "( MDR * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,( DDR + FirstVNF_Mem ) ),ACS ) ) / BR ) ) )", "choosing": "Min( ( ( ( Max( Max( MUM,( RRSe * RMSe ) ),( Min( RMSe ,DS ) * Max( MLU,DS ) ) ) * CS ) / RRSe ) + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( Max( MUM,DS ) / CS ) )", "obj1": 0.7714285714285715, "obj2": 0.10268117416953132}, {"determining": "( ( PN - ( MRS + ( ( PN * PN ) * MDR ) ) ) + Min( Min( ( FirstVNF_RAM / PN ) ,FirstVNF_CPU ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( Min( DS ,Min( MUR ,( ( MUM - RMSe ) * RMSe ) ) ) / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( RRSe / Max( Max( Min( MUC ,RCSe ),RRSe ),( CS + Max( RRSe,DS ) ) ) ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.455952904065653}, {"determining": "( ( ACS - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( Min( ( FirstVNF_Mem_Server * ARS ) ,Const ) - ACS ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - ( MDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( MUR,RRSe ) - MUM ) * Min( ( Min( ( MUM + RMSe ) ,MUR ) / MUR ) ,( DS * RMSe ) ) )", "obj1": 0.4, "obj2": 0.4444910741101684}, {"determining": "( ( Max( CRS,( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) ) ) * PN ) - ( MDR - BR ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( MUM + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9795918367346939, "obj2": 0.008525666848612086}], "45": [{"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * Min( ( PN - MDR ) ,Const ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - ( Const - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / ( DS * ( MUM / MUC ) ) ) + ( RMSe / DS ) ) + ( RCSe - RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUC ),Min( ( DS + MUC ) ,Max( RCSe,RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.0673469387755102, "obj2": 0.9102521132069613}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( DDR - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( AMS - ( PN + RRS ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR + MLU ) ) ) ) * ( ( RMSe / MUR ) / ( DS * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / MRS ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( PN - MDR ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * RRSe ) / ( DS * ( MUM / MUC ) ) ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( DS,( Max( Max( Min( MUC ,RCSe ),MUC ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.0673469387755102, "obj2": 0.9102521132069613}, {"determining": "( ( Min( Min( ARS ,FirstVNF_RAM ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * Min( ( ( RRS - FirstVNF_RAM_Server ) / ( ( ( ACS / FirstVNF_CPU_Server ) + Max( ( MRS / ( ACS + PN ) ),ARS ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_Mem + Max( MRS,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( RMSe,( ( Min( ( MUR * MUR ) ,RMSe ) - RCSe ) - RMSe ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( Min( CS ,RRSe ) - ( CS * ( Max( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ),MUC ) - ( MUC - RMSe ) ) ) ) )", "obj1": 0.3489795918367347, "obj2": 0.5064921645157973}, {"determining": "( ( ( Const - FirstVNF_Mem_Server ) / ( ACS * ( ACS - FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ( MRS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,Max( CS,Max( MLU,CS ) ) ) + ( ( MUC / Min( RMSe ,RMSe ) ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.633172530929101}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( Const - PN ) * ( RRS - ACS ) ) )", "choosing": "Min( ( MUR + ( CS + ( ( CS - ( Min( RRSe ,CS ) / RRSe ) ) + MUM ) ) ) ,( ( MLU - MUR ) - Max( DS,( Min( MUC ,RMSe ) / ( ( RMSe / ( RCSe * ( RRSe / DS ) ) ) - MUC ) ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.6541846396279032}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / Min( MDR ,DDR ) ) ) - FirstVNF_RAM_Server ) * ( ( Min( ( Min( FirstVNF_CPU_Server ,DDR ) + PN ) ,FirstVNF_Mem_Server ) / CRS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( AMS * PN ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( MUM + DS ) / ( MUC * Min( ( MUR + MUC ) ,MUC ) ) ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,( RMSe / MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( RMSe,MUR ) ) + ( ( Max( Min( MUM ,RCSe ),Max( DS,CS ) ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.5557216236445778}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( MDR - MDR ) / ( ( FirstVNF_RAM - ( Max( RRS,FirstVNF_CPU ) * ( BR / MRS ) ) ) + Max( FirstVNF_Mem_Server,MDR ) ) ) * ( ( ACS - Const ) * Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Min( RCSe ,MUM ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + Max( RMSe,DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.21836734693877552, "obj2": 0.6936974554577039}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU * Max( ( MDR / ( ACS * FirstVNF_CPU ) ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - RMSe ),Max( MUM,MUC ) ),( MUM + ( ( Max( ( RRSe * MUM ),Max( MUM,MLU ) ) + ( ( RCSe / RRSe ) + Max( MUM,Max( RMSe,MUC ) ) ) ) - MUC ) ) ) * ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) )", "obj1": 0.09183673469387756, "obj2": 0.8723475435269319}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Max( ( ( Min( PN ,DDR ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_RAM * ACS ) ) ,FirstVNF_Mem_Server ) ) - ACS ),RRS ) ) * ( Const * ( ACS - ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "Min( ( RCSe + RCSe ) ,( ( Min( MUR ,RMSe ) / Min( MUC ,( ( DS / RMSe ) + ( ( MLU - RMSe ) * MUC ) ) ) ) - ( RMSe - MUR ) ) )", "obj1": 0.2857142857142857, "obj2": 0.587548496374059}, {"determining": "( ( FirstVNF_CPU_Server * ( ACS / FirstVNF_CPU_Server ) ) * ( ACS / ( ( ( Max( CRS,Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) / BR ) - ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( Min( MUM ,MLU ) / MUC ) - ( MUR - RRSe ) ) ,( ( ( MUC + RMSe ) / MLU ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( MUC - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.336734693877551, "obj2": 0.5253493492299034}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Const + Min( FirstVNF_CPU ,( MRS + ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) ) / Const ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RCSe + RRSe ) * Max( MUM,RCSe ) ) ) ) * DS ) - ( ( Max( Min( ( RMSe - ( ( RCSe / CS ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4122448979591837, "obj2": 0.4262668182129564}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RMSe / RRSe ) + ( Min( Max( ( MLU * RMSe ),Max( RMSe,Max( CS,MUC ) ) ) ,Max( CS,MLU ) ) + ( Max( MUC,RRSe ) * MUM ) ) ) ) * Max( Max( Max( MUC,( Max( Max( Min( MUM ,RCSe ),MUR ),( CS + DS ) ) / RRSe ) ),MUC ),( DS * RMSe ) ) )", "obj1": 0.636734693877551, "obj2": 0.2045830672781153}, {"determining": "( ( PN - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) * ( ( RRS - MDR ) / Min( ( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_Mem_Server ,Const ) ) - FirstVNF_RAM ) ,( CRS - Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.08571428571428572, "obj2": 0.8945131436198676}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) - RRS ) ) * ( FirstVNF_CPU_Server * ( ACS / ( FirstVNF_RAM - ( ARS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Max( Max( RMSe,Max( MUM,MUC ) ),( MUM + ( CS - MUC ) ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,RMSe ) ,Min( DS ,RCSe ) ) ) ) - ( MUC - MLU ) ) ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6059441655270023}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) * ( FirstVNF_RAM_Server / Max( ( MRS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + ( ( RCSe * MLU ) / MLU ) ) * ( RRSe / ( DS * RMSe ) ) ) ,( ( ( RCSe + CS ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,MUC ) ,Min( RRSe ,RCSe ) ) ) ) - ( MUC - RMSe ) ) ) - Max( MUC,MLU ) ) )", "obj1": 0.35918367346938773, "obj2": 0.48974886080630947}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * BR ) ,RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + Min( RRSe ,( RCSe + ( RMSe - RMSe ) ) ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * Max( ( ( MUR - RMSe ) / Max( Min( RMSe ,RMSe ),( MUC / ( CS * RCSe ) ) ) ),( RCSe - ( ( MUM + ( RRSe - MUC ) ) / RCSe ) ) ) )", "obj1": 0.9673469387755103, "obj2": 0.011738250874035709}, {"determining": "( ( AMS - RRS ) * ( PN * ( DDR - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RRSe + Min( MUR ,( ( MLU + RMSe ) * MUR ) ) ) ,( Max( ( Max( MUC,MLU ) * MUC ),( MUM + ( CS - ( MUR - MLU ) ) ) ) * ( RRSe / ( DS * RMSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.5708693259259471}, {"determining": "( ( ( ( ( Max( ( Min( FirstVNF_Mem_Server ,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) * ( FirstVNF_CPU * PN ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + Max( RMSe,DS ) ) + ( RCSe + ( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),( ( RCSe - MUM ) - RCSe ) ) / ( DS * RMSe ) ) )", "obj1": 0.17142857142857143, "obj2": 0.7678251285905909}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) * ( ( ( Max( MRS,AMS ) - ( ( FirstVNF_CPU * PN ) * ARS ) ) - ACS ) * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),( ( AMS + ( ACS - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8137255417820648}, {"determining": "( Max( RRS,( FirstVNF_Mem / Max( FirstVNF_CPU,Max( RRS,( MDR + ( FirstVNF_Mem_Server / ARS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( Max( Min( ( MLU * RRSe ) ,RMSe ),MUC ),DS ),RMSe ) / ( RMSe * ( MUR * RMSe ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.7856130275083035}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,( Max( FirstVNF_RAM_Server,( FirstVNF_CPU / Min( DDR ,ACS ) ) ) * FirstVNF_RAM ) ) - CRS ) * ( Max( MRS,MDR ) / ( ( FirstVNF_Mem_Server * PN ) - ARS ) ) )", "choosing": "( ( ( Max( RMSe,MUR ) * Max( Min( Max( RMSe,RMSe ) ,Min( RMSe ,( ( RCSe / RMSe ) * Max( CS,MLU ) ) ) ),RRSe ) ) + ( MUR + ( ( MUC / RRSe ) + MLU ) ) ) - ( ( ( MUM * Max( ( RMSe - ( MUM + ( MUM * CS ) ) ),Min( CS ,CS ) ) ) - ( ( RCSe / RRSe ) + ( CS + Min( DS ,( ( MLU - RMSe ) + ( DS / DS ) ) ) ) ) ) * DS ) )", "obj1": 0.3673469387755102, "obj2": 0.4824523417326499}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) / ( PN - FirstVNF_CPU ) ) * ( ( DDR * ACS ) * Max( MRS,BR ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.22857142857142856, "obj2": 0.6821910916976998}, {"determining": "( ( PN - Min( ( ( DDR * ( ( FirstVNF_CPU_Server * ( ACS - PN ) ) / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) - FirstVNF_RAM_Server ) ,( ( AMS / CRS ) * Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( ( ( ARS * AMS ) + Max( ACS,CRS ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( AMS * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( Max( MLU,MUC ),MUR ),( Max( MUM,( ( RCSe / RRSe ) + ( ( Max( MUC,RRSe ) * RRSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) + ( ( Min( MUR ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( ( CS + MLU ),( Max( Max( Min( MUM ,MUC ),RMSe ),( DS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS - RMSe ) ) )", "obj1": 0.17755102040816326, "obj2": 0.7506762385663855}, {"determining": "( ( ( MDR - Const ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,FirstVNF_CPU_Server ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "( ( Max( Max( MUM,MUC ),Max( MUM,( ( RCSe / RRSe ) + Min( RRSe ,( RCSe + ( RMSe - RMSe ) ) ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.7612244897959184, "obj2": 0.11370353844158233}, {"determining": "( ( ( Const - ARS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server * ( ACS - Max( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ),Max( MDR,Min( ARS ,DDR ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( Max( Max( Min( DS ,MUM ),( ( ( MUC / MLU ) - ( CS + RRSe ) ) + MUR ) ),MUM ) + RCSe ) ) ,( Min( RRSe ,MUM ) - MUR ) )", "obj1": 0.32448979591836735, "obj2": 0.5429077805760478}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( DDR + FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) - ( ( ( ARS / AMS ) / MRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) * ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( Min( MUM ,CS ),( MUM + ( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) + ( Min( CS ,RRSe ) + RCSe ) ) - MUC ) ) ) * Max( Min( ( DS / ( MUR * ( ( RMSe + RCSe ) - MUR ) ) ) ,RRSe ),( Min( Min( ( DS / Max( ( RRSe + MUC ),( MLU - RMSe ) ) ) ,( DS * ( ( CS - MUC ) - MUM ) ) ) ,RRSe ) - ( Max( RMSe,RRSe ) * ( DS * Max( ( MUR + ( MUC * MUM ) ),( ( MUC + MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7076444024419656}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( ARS + ACS ) * Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( DDR / MRS ) * ARS ) ) ) ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8571428571428571, "obj2": 0.059895473883792634}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU_Server - Min( ( ACS - PN ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,( DDR + FirstVNF_Mem ) ),ACS ) ) / BR ) ) )", "choosing": "Min( ( ( ( Max( Max( MUM,( RRSe * RMSe ) ),( Min( RMSe ,DS ) * Max( MLU,DS ) ) ) * CS ) / RRSe ) + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( MUR ,MUC ) ) ) - ( Min( RCSe ,MUM ) + Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.8346938775510204, "obj2": 0.07074513694562083}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( Max( Max( BR,( Const + FirstVNF_Mem ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( RMSe / ( RRSe * MUM ) ) + ( RMSe / DS ) ) + Min( RCSe ,( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( CS / MUC ) ) )", "obj1": 0.14285714285714285, "obj2": 0.7967683752106915}, {"determining": "( ( ( FirstVNF_Mem - ARS ) - ( RRS - CRS ) ) * ( MRS / ARS ) )", "choosing": "( Max( MUM,( ( Min( DS ,MLU ) / RRSe ) + ( CS / Min( Max( ( CS / ( CS - CS ) ),MUR ) ,RCSe ) ) ) ) * ( Max( ( MUC - Min( MUR ,RMSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.15918367346938775, "obj2": 0.773545181770418}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ,( FirstVNF_CPU * Max( ( FirstVNF_CPU_Server * ( PN - FirstVNF_CPU_Server ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - Max( RCSe,MUC ) ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( ( Min( MUC ,( ( DS * ( RCSe * CS ) ) / MUR ) ) / MUR ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5428571428571428, "obj2": 0.3016675578151621}, {"determining": "( ( ( ( MDR / ( ( FirstVNF_CPU * ( ( BR + FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) + ARS ) ) * AMS ) / ( Min( AMS ,( FirstVNF_CPU - ( MRS + ARS ) ) ) + ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - MRS ) + BR ) ) - FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_CPU_Server * Min( ( Max( CRS,FirstVNF_RAM_Server ) / DDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MUC - MUC ) - RCSe ),( RMSe - MUR ) ) / Max( Max( ( ( MUR - RMSe ) / Max( ( ( RCSe - RCSe ) / ( MUC + RCSe ) ),Min( RMSe ,RMSe ) ) ),( RCSe - ( ( MUM + ( RRSe - MUR ) ) / RCSe ) ) ),MUM ) ) - ( MLU * DS ) )", "obj1": 0.37755102040816324, "obj2": 0.46910272899867544}, {"determining": "( ( PN * Max( Min( Max( BR,CRS ) ,ACS ),Max( FirstVNF_Mem_Server,( Max( ACS,( CRS / Min( PN ,MDR ) ) ) - FirstVNF_RAM ) ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( MUC * MUR ) - ( ( Max( DS,DS ) / RRSe ) - ( RCSe + CS ) ) ) * DS ) - ( Min( RRSe ,RRSe ) + MUM ) )", "obj1": 0.6326530612244898, "obj2": 0.21899665293362341}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,Max( MRS,AMS ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( MUC,RRSe ) ) ) ,( RMSe - ( ( MUC * RCSe ) + ( MUM + MUR ) ) ) ),RRSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.4346938775510204, "obj2": 0.4064422780153936}, {"determining": "( ( ARS / ( FirstVNF_Mem_Server + RRS ) ) * ( DDR / ( FirstVNF_RAM_Server - BR ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,( MUR - RRSe ) )", "obj1": 0.3, "obj2": 0.5811277671774889}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + Min( RRSe ,( RCSe + ( RMSe - RMSe ) ) ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9448979591836735, "obj2": 0.018307047547288426}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( MUR / ( Min( RRSe ,RRSe ) - Max( DS,MUR ) ) ) + ( RMSe / RRSe ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( RMSe ,RCSe ),MUR ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.1, "obj2": 0.8628939486609767}, {"determining": "( ( ( MRS - DDR ) * ( ACS * ( FirstVNF_RAM - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) / ( ( FirstVNF_CPU * PN ) * BR ) ) ) ) ) * ( ( FirstVNF_CPU * Min( MRS ,( FirstVNF_CPU_Server * ARS ) ) ) * ( RRS - ACS ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RRSe + RCSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( ( ( ( MUC / ( DS - MUC ) ) / DS ) + Min( MUR ,RRSe ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.9285714285714286, "obj2": 0.030830504168895687}, {"determining": "( ( PN - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_CPU ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( DS - ( ( MUC - ( ( MUM + MLU ) + DS ) ) * RRSe ) ) + Max( MUM,MUC ) ) * ( Max( Max( RMSe,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.6530612244897959, "obj2": 0.19556215279492076}, {"determining": "( Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( MUM + ( Min( ( MUC * MUR ) ,DS ) + ( ( ( ( MUM * ( DS * RCSe ) ) / RMSe ) + ( RMSe / RCSe ) ) + ( RCSe + RCSe ) ) ) ) * ( CS - ( MUM - CS ) ) )", "obj1": 0.07346938775510205, "obj2": 0.8970313723427785}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * PN ) - Min( Max( FirstVNF_CPU_Server,Const ) ,( ( FirstVNF_CPU_Server + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) - BR ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( ( RMSe + MUR ) * ( RRSe + MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.6081632653061224, "obj2": 0.24705420251973279}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( ( ( CRS - FirstVNF_RAM_Server ) - FirstVNF_RAM ) - ( Max( FirstVNF_CPU,PN ) * RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( CS,DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * ( MUC - MUC ) ) - ( ( Max( Max( ( RMSe / ( ( RMSe / MUC ) * ( RMSe / MLU ) ) ),Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.45510204081632655, "obj2": 0.3765114236363082}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( PN - ( PN - MDR ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( MUC * MUR ) ) + RCSe ) ) ) * CS ) - ( ( Max( Max( ( RMSe / ( ( RMSe / MUC ) * ( RMSe / MLU ) ) ),Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.44693877551020406, "obj2": 0.3934768613611526}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,Max( MRS,AMS ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( MUC,RRSe ) ) ) ,( RMSe - ( ( MUC * RCSe ) + ( MUM + MUR ) ) ) ),RRSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.4346938775510204, "obj2": 0.4064422780153936}, {"determining": "( ( ( ( FirstVNF_CPU * PN ) * ( ( FirstVNF_CPU_Server * ACS ) - ( ( ACS / MDR ) * Max( DDR,FirstVNF_Mem ) ) ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + Max( MLU,( CS / RRSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.14081632653061224, "obj2": 0.8098438540666819}, {"determining": "( ( FirstVNF_CPU - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( Max( FirstVNF_CPU,Max( ( PN - DDR ),MRS ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - Min( RCSe ,( ( RRSe + RCSe ) * ( MUM * RCSe ) ) ) ) * DS ) - ( ( Max( ( ( ( MUC / ( DS - MUC ) ) / DS ) + Min( MUR ,RRSe ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7673469387755102, "obj2": 0.10231622228806295}, {"determining": "( ( PN - ( ( ( DDR * ( ( FirstVNF_CPU_Server - ( ACS - PN ) ) * ( ( Const * FirstVNF_CPU ) * ARS ) ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU / CRS ) * Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,( Min( DDR ,Const ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ARS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUM + ( ( RCSe / RRSe ) / Max( RMSe,RCSe ) ) ) + ( CS - MUC ) ),Max( RMSe,Max( RRSe,( ( CS - MUM ) + ( CS + RCSe ) ) ) ) ) * ( MLU - MUC ) )", "obj1": 0.19591836734693877, "obj2": 0.7242700745249605}, {"determining": "( Max( ACS,MDR ) + Min( Min( ( PN + ARS ) ,( FirstVNF_CPU * Max( ( MDR / ACS ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( ( PN * PN ) - MDR ) ) ) )", "choosing": "( ( ( ( CS / DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + MLU ) - ( Min( DS ,( CS * Max( MLU,CS ) ) ) + ( Max( RCSe,RCSe ) + ( Min( ( Min( MUR ,MUC ) * RCSe ) ,RMSe ) / ( MUR + Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.8183673469387756, "obj2": 0.08732601907587807}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( MDR / ( ( RRS - ACS ) * PN ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * MLU ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5714285714285714, "obj2": 0.28226009560317644}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * MLU ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7081632653061225, "obj2": 0.15078315646845022}, {"determining": "( ( ( ( ACS - Max( FirstVNF_CPU,MDR ) ) / ACS ) - ( ACS - CRS ) ) * Max( ( FirstVNF_RAM - ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_Mem ) ) ,MDR ) ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RRSe ) * ( ( Max( MUC,( RRSe + ( ( ( MLU - DS ) + RMSe ) * MUM ) ) ) * MUC ) / ( DS * RMSe ) ) )", "obj1": 0.18571428571428572, "obj2": 0.7436848766893017}, {"determining": "( ( PN - ( ( FirstVNF_RAM_Server * PN ) + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( FirstVNF_CPU * Min( AMS ,DDR ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( RMSe - MUR ) - ( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUM ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) ,( MUR + ( ( ( CS / MLU ) + RMSe ) - CS ) ) )", "obj1": 0.7448979591836735, "obj2": 0.11817406010827734}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( FirstVNF_Mem * CRS ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * ( ( FirstVNF_RAM * ARS ) / BR ) ) - FirstVNF_Mem_Server ) - RRS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.5324553233784476}, {"determining": "( ( DDR + ( CRS + Max( DDR,CRS ) ) ) + ( BR - ( Min( FirstVNF_RAM_Server ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) ) ) * ( Max( ACS,( Const - FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( RMSe,Max( Max( MUR,RCSe ),MUC ) ),Min( MLU ,( DS - DS ) ) ) * ( ( DS * RMSe ) / ( MUR / Min( MUR ,( ( MLU - DS ) / RMSe ) ) ) ) )", "obj1": 0.18775510204081633, "obj2": 0.7309732135744582}, {"determining": "( Min( FirstVNF_Mem ,( Min( PN ,BR ) * ( ( ACS - Const ) * ( Max( Const,BR ) / MDR ) ) ) ) * ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,Min( ( RCSe - RMSe ) ,( MUR - DS ) ) ) * ( ( ( RMSe / MUC ) * CS ) / ( Min( MUR ,( Max( MUC,( CS / Max( MUR,CS ) ) ) / CS ) ) / MUR ) ) )", "obj1": 0.2693877551020408, "obj2": 0.6250365982813254}, {"determining": "( ( ( PN - DDR ) * ( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( Const / CRS ) ) / ACS ) / MRS ) ) * ACS ) ) * ( FirstVNF_CPU_Server * ( ARS * ( AMS - BR ) ) ) )", "choosing": "Min( Max( Min( MUR ,MUR ),MUR ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe + RRSe ) + Min( Max( RCSe,DS ) ,MUM ) ) ) - ( RMSe - MLU ) ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.6178764701249686}, {"determining": "( ( PN - ( Max( ( Min( ACS ,DDR ) * MDR ),FirstVNF_CPU ) * ( ( RRS - MDR ) / Min( ( ( ( FirstVNF_Mem_Server * PN ) * Max( FirstVNF_Mem_Server,Const ) ) - FirstVNF_RAM ) ,( CRS - Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) * Min( ARS ,( AMS / FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( Min( Max( RCSe,( CS - MUR ) ) ,( MUR - MUC ) ) / RRSe ) + ( ( RCSe + RCSe ) + ( ( MLU / RMSe ) + ( RMSe / DS ) ) ) ) ) * ( Max( Max( MUC,( Max( ( ( RCSe + RRSe ) * ( MUM * RCSe ) ),( ( RMSe / CS ) + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RCSe ) ) )", "obj1": 0.23877551020408164, "obj2": 0.6755252297739431}, {"determining": "( ( PN - ( BR / MRS ) ) + ( ( MRS - ( AMS + ( PN / RRS ) ) ) / ( Const + ( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( ( ( RCSe / RRSe ) + ( CS + RCSe ) ) - Max( MUR,MUR ) ) * DS ) - ( ( Max( Min( ( RMSe + ( Max( RMSe,RRSe ) * ( RMSe + MUR ) ) ) ,Max( ( ( RMSe / DS ) + MUC ),MLU ) ),DS ) * Max( RMSe,MUR ) ) + ( MLU * RCSe ) ) )", "obj1": 0.49795918367346936, "obj2": 0.33595204770342146}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / Max( Max( MRS,RRS ),FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),( MUR - RRSe ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.9244897959183673, "obj2": 0.035118516221224784}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( ( MRS / ARS ) - ( Max( FirstVNF_CPU,PN ) * RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( CS,DS ) - ( ( DS + Max( RRSe,MLU ) ) + ( ( DS + ( ( MUC * MLU ) * ( RMSe / MUC ) ) ) + RCSe ) ) ) * ( MUC - MUC ) ) - ( ( Min( DS ,MLU ) / RRSe ) + ( CS + RCSe ) ) )", "obj1": 0.4775510204081633, "obj2": 0.3636472691290024}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM / Max( ( MLU / DS ),Max( MUM,MUC ) ) ) - ( ( CS + RRSe ) + ( RCSe / RRSe ) ) ) * DS ) - ( ( Max( RMSe,MUR ) * Max( Min( ( RMSe / ( ( RCSe / RMSe ) * Max( MUC,RRSe ) ) ) ,( RCSe - ( ( MUC * RCSe ) + ( MUM + MUR ) ) ) ),RRSe ) ) + ( CS + RCSe ) ) )", "obj1": 0.5836734693877551, "obj2": 0.2722610470555226}, {"determining": "( ( ARS - MRS ) + ( PN - ( Max( ( MDR * ( ( FirstVNF_RAM_Server - ( MDR / ARS ) ) / ( ARS * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) ),FirstVNF_RAM_Server ) * ( Min( MRS ,AMS ) * Max( Min( ( ARS / CRS ) ,ACS ),( Const - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( Max( ( CS - MUC ),Max( MUM,MUC ) ),( MUM + ( Max( Min( ( RRSe * MUM ) ,Max( MUM,MLU ) ),( ( RCSe / RRSe ) + Max( Max( RMSe,RMSe ),RMSe ) ) ) - MUC ) ) ) * ( ( Min( ( DS + Max( MUM,RCSe ) ) ,( Max( MUM,DS ) / RMSe ) ) / MUR ) / ( Min( ( Min( ( MUC * ( DS / MUR ) ) ,( RCSe / MUC ) ) + RCSe ) ,( ( MUR / ( MLU * ( MLU / RCSe ) ) ) * MUC ) ) * RMSe ) ) )", "obj1": 0.10816326530612246, "obj2": 0.8541122990797967}, {"determining": "( Max( FirstVNF_CPU_Server,( PN / PN ) ) * ( FirstVNF_CPU * ( FirstVNF_Mem - MRS ) ) )", "choosing": "( ( CS / RRSe ) * ( ( DS * RMSe ) / Min( Max( MUC,( RRSe / ( RMSe + RMSe ) ) ) ,MUC ) ) )", "obj1": 0.24285714285714285, "obj2": 0.6674729951177149}, {"determining": "( ( ( Min( Min( PN ,PN ) ,ARS ) / ( Max( ( CRS + AMS ),MDR ) * Max( MDR,( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ( Max( DDR,FirstVNF_CPU ) * ( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "( ( MUM / Max( DS,RCSe ) ) * ( DS - MLU ) )", "obj1": 0.11428571428571428, "obj2": 0.8487430767601356}, {"determining": "( ( ( ACS * ( ( Max( Max( Max( MRS,MDR ),RRS ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MLU ),( CS + MLU ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7103362588447805}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / MDR ) ) * ( MDR / ( RRS - ( FirstVNF_Mem + AMS ) ) ) ) * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( ( ( ( MUC / ( MUM - CS ) ) - ( CS + RRSe ) ) / RRSe ) + ( CS + RCSe ) ) - ( CS * DS ) ) * DS ) - ( DS + ( DS + ( CS - MUC ) ) ) )", "obj1": 0.6979591836734694, "obj2": 0.15831146551537686}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Const + FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( RMSe,Max( MUM,( ( Max( RMSe,RMSe ) / RRSe ) + ( CS + RCSe ) ) ) ),( Max( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ),( ( RCSe / RRSe ) + ( ( ( MLU / RMSe ) + ( RMSe / DS ) ) + ( Max( MUC,RRSe ) * RRSe ) ) ) ) + ( ( Min( MUR ,( ( RMSe / DS ) / RMSe ) ) / MUR ) / ( DS * RMSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUM ,RMSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.5387755102040817, "obj2": 0.31471311073787933}, {"determining": "( ( PN - ( ( ( PN * Max( Max( ( MRS * FirstVNF_Mem ),CRS ),( FirstVNF_Mem_Server * ( PN - MDR ) ) ) ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( Max( PN,FirstVNF_CPU_Server ) ,ARS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MLU,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.45102040816326533, "obj2": 0.3895923532292114}, {"determining": "( ( ( ACS * ( ( Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) / ( PN - FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( MUM,( MUC / Max( CS,RCSe ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + ( MLU / RRSe ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.11632653061224489, "obj2": 0.8354884966141591}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( ( ( Max( ( Min( FirstVNF_Mem_Server ,ACS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ),FirstVNF_CPU ) / FirstVNF_CPU_Server ) - FirstVNF_RAM ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( ( RMSe * RRSe ) + ( Max( RCSe,MUC ) * Min( DS ,RCSe ) ) ) + ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.5122448979591837, "obj2": 0.33022491584676955}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( FirstVNF_CPU * Min( AMS ,DDR ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( ( RMSe - MUR ) - ( ( Min( MUC ,( ( DS * ( MUR * CS ) ) / MUR ) ) / MUM ) * ( Max( MUC,( ( RMSe * RRSe ) + Min( Max( MUM,DS ) ,MUM ) ) ) - ( RMSe - MUC ) ) ) ) ,( MUR + ( ( ( CS / MLU ) + DS ) - CS ) ) )", "obj1": 0.49183673469387756, "obj2": 0.34615379854226186}, {"determining": "( ( RRS - ( ( ( FirstVNF_CPU * PN ) * ( FirstVNF_RAM / ACS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,RRS ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( Max( RCSe,Max( MUM,( ( RCSe / RRSe ) + Min( RRSe ,( RCSe + ( RMSe - RMSe ) ) ) ) ) ) / ( Max( MUM,( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) + ( Max( MUM,DS ) - MUC ) ) ) * ( Max( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.9448979591836735, "obj2": 0.018307047547288426}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem_Server * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( DS + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.40408163265306124, "obj2": 0.4329184246144406}, {"determining": "( ( PN - ( DDR * ACS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * MUM ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.9061224489795918, "obj2": 0.042914527221951854}, {"determining": "( ( PN - ( DDR * ACS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - Max( Min( ( RMSe / ( ( RMSe / RMSe ) * MUM ) ) ,Max( RMSe,MLU ) ),RRSe ) )", "obj1": 0.9061224489795918, "obj2": 0.042914527221951854}, {"determining": "( ( PN - ( ( ( PN * PN ) * Min( DDR ,RRS ) ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - ( ACS - Min( PN ,BR ) ) ) ) ) / FirstVNF_CPU_Server ) ,( ( PN - MDR ) * PN ) ) )", "choosing": "( Max( Max( MUC,RCSe ),RRSe ) - ( ( Max( Min( ( RMSe / ( ( RMSe / RRSe ) - ( RMSe / MLU ) ) ) ,Max( ( ( RMSe + RCSe ) * RRSe ),RMSe ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.4857142857142857, "obj2": 0.35570071552325844}, {"determining": "( ( Min( Min( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( BR + MRS ) ) + Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,BR ) )", "choosing": "( ( Max( Max( RMSe,Max( MUM,Min( MUM ,RCSe ) ) ),( ( DS * ( MUM / MUC ) ) - RRSe ) ) * DS ) - ( DS + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8857142857142857, "obj2": 0.04908701289295588}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM ) * PN ) - Min( Min( PN ,FirstVNF_Mem ) ,( ( AMS * Min( ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,BR ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem + Max( PN,MRS ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) - ( ( RCSe / RRSe ) + ( Min( MUC ,RRSe ) + MLU ) ) ) * DS ) - ( ( Max( Min( Max( ( Min( MUM ,MLU ) + Max( CS,DS ) ),( RCSe * ( CS + DS ) ) ) ,Max( CS,MUM ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( MUC - CS ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.2296019879305917}, {"determining": "( ( Max( MDR,PN ) * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU - Min( ( RRS * PN ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,RRS ),ACS ) ) / BR ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( DS + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8, "obj2": 0.08766613351240513}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( ARS + ACS ) * Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( DDR / MRS ) * ARS ) ) ) ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( Min( RRSe ,( MLU - ( RMSe / MLU ) ) ) + RCSe ) ) ) * DS ) - ( DS + ( MUR + ( ( RCSe / RRSe ) - MUC ) ) ) )", "obj1": 0.7142857142857143, "obj2": 0.1445656649790729}, {"determining": "( ( Min( Min( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( BR + MRS ) ) + Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( ( MUC / MLU ) - ( CS + RRSe ) ) / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( DS + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8734693877551021, "obj2": 0.056104621807671444}, {"determining": "( ( Min( Min( Max( ( FirstVNF_RAM - ( MDR / Const ) ),AMS ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) - ( BR + MRS ) ) + Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( MUC ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( RMSe ,RRSe ) ) ) - Max( MUM,DS ) ) ) ) ) )", "obj1": 0.8918367346938776, "obj2": 0.0469939379680388}, {"determining": "( ( MDR * ( ( ( MDR / ( ( FirstVNF_CPU * ( FirstVNF_CPU * PN ) ) * ARS ) ) / Max( ( FirstVNF_CPU_Server - Min( ( ACS - PN ) ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( Max( CRS,Max( Max( MRS,( DDR + FirstVNF_Mem ) ),ACS ) ) / BR ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( RMSe / ( RRSe * MUM ) ) + ( RMSe / DS ) ) + Min( RCSe ,( ( RCSe / RRSe ) + Max( RMSe,RMSe ) ) ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MUR ),( CS + Max( RRSe,MLU ) ) ) / RRSe ) ),MUC ) / ( CS / MUC ) ) )", "obj1": 0.7959183673469388, "obj2": 0.09230974660151865}, {"determining": "( ( PN - ( ( ( PN * PN ) * MDR ) + MRS ) ) + Min( ( ( FirstVNF_Mem_Server * Min( Const ,( ACS - Min( ARS ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / ( RMSe * ( RRSe + CS ) ) ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( RRSe ,RCSe ),CS ),( CS + Max( RRSe,DS ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.3836734693877551, "obj2": 0.454591824368897}, {"determining": "( ( PN - ( ( ( PN * PN ) * MDR ) + MRS ) ) + Min( ( ( ( MDR + ( PN - ( PN - MDR ) ) ) * Min( Const ,( ACS - Min( ( FirstVNF_Mem * ARS ) ,Const ) ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / RMSe ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),CS ),( CS + Max( RRSe,DS ) ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.3795918367346939, "obj2": 0.45940001690703786}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( ( Min( ( MRS - ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( RRS / CRS ) ) * ( MDR / ( RRS - FirstVNF_Mem_Server ) ) ) * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( ( ( MUC / MLU ) - ( CS + RRSe ) ) / RRSe ) + ( ( MUM + RMSe ) + RCSe ) ) ) * DS ) - ( DS + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8204081632653061, "obj2": 0.07488050547434065}, {"determining": "( ( AMS / Min( ( Min( ACS ,Min( MDR ,( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) - FirstVNF_Mem ) ,( RRS + MDR ) ) ) - ( MDR - BR ) )", "choosing": "( ( ( ( RMSe / MUR ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) - DS ) - ( ( CS + RCSe ) + ( ( ( Max( RMSe,( ( RCSe / MUR ) * Max( RMSe,MLU ) ) ) * Max( RMSe,MLU ) ) + RRSe ) * Max( RMSe,( Max( MUM,CS ) - RRSe ) ) ) ) )", "obj1": 0.6020408163265306, "obj2": 0.2569230937068227}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( ( MUM / Max( ( RCSe / MUC ),Min( MLU ,( ( RRSe / DS ) / RRSe ) ) ) ) + RCSe ) ) ,( Min( ( MUR + ( ( CS * ( MUM - MUR ) ) - Min( DS ,DS ) ) ) ,CS ) - ( RCSe + Max( MUM,( Max( ( MUC + Max( CS,MLU ) ),RCSe ) - Max( ( MUM * ( MLU - MUM ) ),( MUM - RRSe ) ) ) ) ) ) )", "obj1": 0.6632653061224489, "obj2": 0.18499382619622215}, {"determining": "( ( PN - ( BR + MRS ) ) + Min( Min( ( PN + ACS ) ,( FirstVNF_CPU * Max( ( ( Min( FirstVNF_Mem_Server ,Const ) - Const ) / ( ( RRS - ACS ) * PN ) ),( Const - FirstVNF_Mem ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Min( MUM ,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - MUC ) ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( RMSe / MLU ) ) )", "obj1": 0.5673469387755102, "obj2": 0.28619737357030484}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Min( ACS ,( MDR / ( Max( FirstVNF_RAM,MRS ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( Max( ( MLU * CS ),Max( RMSe,Max( RMSe,MUC ) ) ) ,Max( CS,MLU ) ),RRSe ) * Max( MUM,CS ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6142857142857143, "obj2": 0.2352395530324529}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( ARS + ACS ) * Min( FirstVNF_Mem_Server ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( DDR / MRS ) * ARS ) ) ) ) ,( ( PN - MDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( ( Max( Min( MUM ,RCSe ),MUR ) * Max( RMSe,MUR ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.8591836734693877, "obj2": 0.058119318686990266}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( CS + RCSe ) ) ) * DS ) - ( Max( Max( Max( RMSe,Max( MUM,MUC ) ),( ( DS * ( MUM / MUC ) ) - ( CS - Max( RCSe,MUC ) ) ) ),Min( MUC ,RMSe ) ) + ( MUR + ( CS - MUC ) ) ) )", "obj1": 0.6673469387755102, "obj2": 0.1805088310749984}, {"determining": "( ( ( ( Min( Min( PN ,PN ) ,ARS ) / ( MRS * ( MDR - ( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( MDR,Const ) ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,MUM ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( CS + RCSe ) ) ) - ( RMSe - MUC ) ) ) ) )", "obj1": 0.7836734693877551, "obj2": 0.09531112501967545}, {"determining": "( ( PN - ( ( ARS * ( ( FirstVNF_CPU / ACS ) * Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( ( PN + ACS ) * Min( PN ,MDR ) ) ) ) ) + MRS ) ) + Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,( DDR * ( MDR / ( ( FirstVNF_CPU * PN ) * ARS ) ) ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Min( MUC ,RMSe ) - ( ( Max( Min( ( RMSe - ( ( RCSe / RMSe ) * MUC ) ) ,( MLU - MUR ) ),( RMSe / MUR ) ) * Max( MUC,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.7204081632653061, "obj2": 0.14160977443784303}, {"determining": "( ( ( ( Min( Min( PN ,PN ) ,ARS ) / ( MRS * ( MDR - ( ARS / CRS ) ) ) ) / FirstVNF_RAM_Server ) * ( ( ( ( FirstVNF_CPU * PN ) * ARS ) / Max( ( FirstVNF_CPU - Min( ( CRS - CRS ) ,Max( MDR,Const ) ) ),FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) / ( FirstVNF_CPU * PN ) ) )", "choosing": "Min( ( ( ( Max( Max( MUM,( RRSe * RMSe ) ),( Min( RMSe ,DS ) * Max( MLU,DS ) ) ) * CS ) / RRSe ) + ( Max( Max( Max( RMSe,Max( RMSe,MUC ) ),( MUM + ( CS - MUC ) ) ),MUM ) + RMSe ) ) ,( ( RMSe - Max( MLU,Min( CS ,RRSe ) ) ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( Max( RCSe,DS ) - MUM ) ) ) - ( ( MLU - ( MUM - Min( MUR ,MUC ) ) ) - ( Min( RCSe ,MUM ) + Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.7775510204081633, "obj2": 0.09876812480617088}, {"determining": "( ( PN - ( Min( MDR ,( MRS / FirstVNF_Mem ) ) - MRS ) ) + ( ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_CPU ) / FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( Max( MUM,( ( RCSe / RRSe ) + ( ( ( ( RRSe * MUM ) / RMSe ) + ( RMSe / DS ) ) + ( RCSe + RCSe ) ) ) ) * ( Max( Max( MUC,( Max( Max( Min( MUC ,RCSe ),MLU ),( CS + MLU ) ) / RRSe ) ),MUC ) / ( DS * RMSe ) ) )", "obj1": 0.7326530612244898, "obj2": 0.12787691763904707}, {"determining": "( ( PN - ( ( ( PN * PN ) * ARS ) + MRS ) ) + Min( ( ( FirstVNF_CPU * ( MDR + ( PN * PN ) ) ) / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) - ( ( RCSe / RRSe ) + ( ( DS + ( Max( RRSe,DS ) * MUR ) ) + RCSe ) ) ) * CS ) - ( ( Max( Max( ( RMSe / ( ( RMSe / MUC ) * ( RMSe / MLU ) ) ),Max( RMSe,MLU ) ),Max( CS,MLU ) ) * Max( RMSe,MUR ) ) + ( CS + RCSe ) ) )", "obj1": 0.46530612244897956, "obj2": 0.37021459689907293}, {"determining": "( ( Min( Min( ( PN + Min( FirstVNF_CPU_Server ,DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( PN - ( ACS - FirstVNF_CPU_Server ) ) ) ) - ( BR + MRS ) ) + Min( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( PN - MDR ) ) ) )", "choosing": "Min( ( MUR + ( Max( Max( Max( RMSe,Max( MUM,Min( MUM ,RCSe ) ) ),( ( DS * ( MUM / MUC ) ) - RRSe ) ),Min( MUC ,RMSe ) ) + RCSe ) ) ,( ( RMSe - MUR ) - ( CS * ( Max( MUC,( ( RMSe * RRSe ) + ( CS + RCSe ) ) ) - ( RMSe - ( ( ( MUC / MLU ) - ( CS + RRSe ) ) / RRSe ) ) ) ) ) )", "obj1": 0.5306122448979592, "obj2": 0.31525906656943825}]}