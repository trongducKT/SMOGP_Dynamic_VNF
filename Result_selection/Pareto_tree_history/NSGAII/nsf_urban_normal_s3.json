{"1": [{"determining": "( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) )", "choosing": "Max( ( MUC * MUM ),( RMSe / MUC ) )", "obj1": 0.3408163265306122, "obj2": 0.6597415581184105}, {"determining": "( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MUC * MLU ) / ( RCSe + MUR ) )", "obj1": 0.2163265306122449, "obj2": 0.8035616769315168}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - MRS ) )", "choosing": "Max( Max( DS,MLU ),Max( CS,MUC ) )", "obj1": 0.27346938775510204, "obj2": 0.7425770092898633}, {"determining": "( ( BR / BR ) / ( MRS / FirstVNF_Mem ) )", "choosing": "Min( Max( MLU,MUM ) ,Max( RMSe,MUM ) )", "obj1": 0.35714285714285715, "obj2": 0.635409345647041}, {"determining": "( ( DDR - MDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) )", "choosing": "Max( Max( DS,MUM ),( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) / ( ACS / AMS ) )", "choosing": "( ( MUM / MUM ) * Min( RMSe ,CS ) )", "obj1": 0.3551020408163265, "obj2": 0.6446158976979064}, {"determining": "( Max( FirstVNF_CPU,Const ) / Min( MDR ,BR ) )", "choosing": "( Min( MUM ,RRSe ) * ( MLU + RCSe ) )", "obj1": 0.3326530612244898, "obj2": 0.6734509516062075}, {"determining": "( ( FirstVNF_RAM_Server + Const ) / ( FirstVNF_CPU + MRS ) )", "choosing": "( Max( RCSe,MUR ) + ( MUC * RMSe ) )", "obj1": 0.37142857142857144, "obj2": 0.6352614904680741}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ARS ) )", "choosing": "Max( Min( CS ,RCSe ),( MLU - RMSe ) )", "obj1": 0.35306122448979593, "obj2": 0.6461887333901254}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) / ( ACS / BR ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.22448979591836735, "obj2": 0.7756302412734745}, {"determining": "( ( CRS - FirstVNF_Mem ) - ( FirstVNF_CPU / CRS ) )", "choosing": "( ( RMSe / DS ) - Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - Min( Min( MDR ,Const ) ,( AMS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM + DS ) * Min( MLU ,DS ) ) ,Max( ( MUC - RRSe ),( RRSe * MUR ) ) )", "obj1": 0.4489795918367347, "obj2": 0.5340767636942728}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ACS / BR ) )", "choosing": "( Min( Max( CS,RRSe ) ,( MUC / RCSe ) ) * ( Min( MUR ,RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.5387755102040817, "obj2": 0.47785546951212116}, {"determining": "( ( ( Const * CRS ) * ( AMS / MRS ) ) / ( ( Const + Const ) + Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Max( Min( ( RMSe * MUR ) ,MUC ),( DS + Min( RCSe ,MUC ) ) )", "obj1": 0.39591836734693875, "obj2": 0.5923420540318635}, {"determining": "( ( DDR + PN ) / ( ARS - MRS ) )", "choosing": "( Min( Min( MLU ,MUM ) ,MLU ) * Max( ( RMSe * DS ),( MUM - DS ) ) )", "obj1": 0.2755102040816326, "obj2": 0.7267907255000796}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.4306122448979592, "obj2": 0.5572570991007024}, {"determining": "( ( RRS / ( ARS * ARS ) ) - Max( ( DDR - BR ),MDR ) )", "choosing": "Min( Max( ( RCSe + MUR ),( MUC - MUM ) ) ,Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( MRS + Const ) ) / Max( ( CRS - Const ),CRS ) )", "choosing": "( Max( ( RCSe - RCSe ),( MUC * MLU ) ) + ( ( RRSe + MUM ) / Max( RRSe,MLU ) ) )", "obj1": 0.9102040816326531, "obj2": 0.09869991260272473}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( ACS / ( PN - ACS ) ) )", "choosing": "( Max( ( MLU + MUC ),( MLU * RRSe ) ) * ( ( MUM - DS ) * Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM_Server ) + ( Const + FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server + RRS ) / ( FirstVNF_RAM_Server / DDR ) ) )", "choosing": "( ( Min( RCSe ,RMSe ) * ( DS + CS ) ) - ( ( RRSe / CS ) / ( RRSe - DS ) ) )", "obj1": 0.3122448979591837, "obj2": 0.6943003349997712}, {"determining": "Max( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + Max( MRS,MRS ) ),Min( Min( AMS ,PN ) ,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RMSe - RCSe ) - ( MUM + MLU ) ) + ( ( RMSe - MLU ) + Max( MLU,RCSe ) ) )", "obj1": 0.2714285714285714, "obj2": 0.7491726717340224}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( Const + FirstVNF_RAM ) ) - ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_Mem_Server + CRS ) * ( MRS * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * PN ) - ( Const + PN ) ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) * Max( MLU,MUR ) ) + ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ) * ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) )", "obj1": 0.6918367346938775, "obj2": 0.32585451749202143}, {"determining": "Min( ( Max( Min( MDR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + MRS ) ) - ( ( Const + CRS ) + Max( DDR,FirstVNF_RAM_Server ) ) ) ,( Min( Min( FirstVNF_CPU ,FirstVNF_Mem ) ,( AMS / MRS ) ) / ( ( ARS / ARS ) - Min( MRS ,BR ) ) ) )", "choosing": "Min( ( ( Min( MUC ,MUC ) / RRSe ) + RRSe ) ,( ( ( RCSe / MUM ) * ( RRSe + MUM ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( BR + FirstVNF_CPU_Server ) ,( MRS + CRS ) ) ,( ( RRS / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) )", "choosing": "( Min( ( ( RRSe - CS ) - ( MUM * MUR ) ) ,( Max( RRSe,RCSe ) / ( MUR * DS ) ) ) * ( Max( ( MUC - DS ),( MUR + MUC ) ) / Min( Min( MUM ,MUM ) ,( DS * MUR ) ) ) )", "obj1": 0.4204081632653061, "obj2": 0.5626198880259854}, {"determining": "( Min( ( Max( MRS,FirstVNF_RAM_Server ) + ( ACS - Const ) ) ,Min( ( MRS - FirstVNF_RAM ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - Min( ( ( FirstVNF_CPU_Server + ACS ) / ( FirstVNF_RAM_Server - Const ) ) ,( Max( ACS,RRS ) / ( MDR / CRS ) ) ) )", "choosing": "( Max( CS,( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( FirstVNF_CPU_Server / ARS ) ) ,( RRS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * RRSe ) + Min( MUR ,MUC ) ) - Max( Max( MLU,MUC ),( MUM / RCSe ) ) ) + ( ( ( RMSe * MUR ) - Max( MUR,DS ) ) + Max( ( MUR / RRSe ),Max( MUC,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,( ( ( AMS - FirstVNF_RAM ) / ( ARS / FirstVNF_Mem ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - DS ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( Min( DDR ,RRS ) * ( BR - AMS ) ),( ( MRS / MDR ) + ( PN * CRS ) ) ),( ( Min( ARS ,RRS ) + ( MDR - Const ) ) * ( ( BR * FirstVNF_Mem ) * ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( MLU ,RMSe ) + ( MUR / RCSe ) ) / ( ( MUM / RMSe ) - ( MUM * RCSe ) ) ) * Min( ( Max( RRSe,RRSe ) / Max( RRSe,RMSe ) ) ,( ( MUR - MUC ) - Min( MUR ,DS ) ) ) )", "obj1": 0.2571428571428571, "obj2": 0.7540026737618264}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.23265306122448978, "obj2": 0.7591834957868508}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( ( CRS * MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( ( Min( MUC ,MUC ) + ( RRSe / CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( MUC * MUC ) ,( RRSe - MLU ) ) ) )", "obj1": 0.3306122448979592, "obj2": 0.6931907843652358}, {"determining": "( Max( FirstVNF_RAM_Server,Min( ( FirstVNF_Mem_Server - ACS ) ,MDR ) ) * ( FirstVNF_Mem_Server * MRS ) )", "choosing": "( ( ( Max( RRSe,MUC ) / Min( MUM ,MUR ) ) / ( ( DS * MUM ) - Min( RCSe ,RCSe ) ) ) + Min( ( ( RCSe / DS ) / Max( DS,RCSe ) ) ,Min( Min( MUC ,MUC ) ,( MLU * RRSe ) ) ) )", "obj1": 0.3040816326530612, "obj2": 0.7130803838952366}], "2": [{"determining": "( ( ( ( RRS + CRS ) - ARS ) * ACS ) / ( ACS / BR ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - MDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) )", "choosing": "Max( Max( DS,MUM ),( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) / ( ACS / CRS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.19795918367346937, "obj2": 0.7997866428163932}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,AMS )", "choosing": "( ( CS + Min( ( MUR - MLU ) ,( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8, "obj2": 0.09281943668330467}, {"determining": "( Min( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( Const + FirstVNF_RAM ) ) - ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_Mem_Server + CRS ) * ( MRS * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * PN ) - ( Const + PN ) ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) ) )", "obj1": 0.6857142857142857, "obj2": 0.3210443044214056}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.5510204081632653, "obj2": 0.33871938723166567}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ,Min( RRS ,Const ) )", "choosing": "( ( MUC - MUM ) * MUC )", "obj1": 0.9428571428571428, "obj2": 0.06058337514047258}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( Const + FirstVNF_RAM ) ) - ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,( ( DDR + PN ) / ( ARS - MRS ) ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) * Max( MLU,MUR ) ) + ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ) * ( ( Min( Min( MLU ,MUM ) ,MLU ) * Max( ( RMSe * DS ),( MUM - DS ) ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) )", "obj1": 0.6693877551020408, "obj2": 0.3373312532385526}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ACS / BR ) )", "choosing": "( Min( Max( CS,RRSe ) ,( MUC / RCSe ) ) * ( Min( MUR ,RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.5448979591836735, "obj2": 0.4626297575658328}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ACS / BR ) )", "choosing": "( ( MUM / MUC ) + Min( RMSe ,MUM ) )", "obj1": 0.5102040816326531, "obj2": 0.5019715400351134}, {"determining": "( ( FirstVNF_Mem - ( MRS + Const ) ) / ( ACS / AMS ) )", "choosing": "( ( MUM / MUM ) * Min( RMSe ,( ( RRSe + MUM ) / Max( RRSe,MLU ) ) ) )", "obj1": 0.9183673469387755, "obj2": 0.09000199578398875}, {"determining": "( ( ARS - MRS ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Min( MLU ,MUM ) ,MLU ) * Max( ( RMSe * DS ),( MUM - DS ) ) ) ,Min( RRSe ,DS ) )", "obj1": 0.39387755102040817, "obj2": 0.5875508928246689}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.45714285714285713, "obj2": 0.5319099023363068}, {"determining": "( ( ( Const * CRS ) * ( AMS / MRS ) ) / ( ( Const + Const ) + Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Max( Min( ( RMSe * MUR ) ,MUC ),( DS + Min( RCSe ,MUC ) ) )", "obj1": 0.3653061224489796, "obj2": 0.6284913666032165}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( ACS / BR ) )", "choosing": "( ( MUM / MUM ) * Min( RMSe ,CS ) )", "obj1": 0.5387755102040817, "obj2": 0.4768009634763645}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( MUC * MUC ) ,( RRSe - MLU ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6931209905055745}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - FirstVNF_RAM_Server ) ),( Max( RRS,MDR ) - Max( PN,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,DS ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MUR ) ) / Max( MUR,MUC ) ) )", "obj1": 0.336734693877551, "obj2": 0.6472975776250911}, {"determining": "( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) )", "choosing": "Max( ( MUC * MUM ),MUC )", "obj1": 0.3040816326530612, "obj2": 0.6759798058899421}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,MLU ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / ( ( RRSe + MUR ) + ( MUM * ( MUC * MUM ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.6587909738348128}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_RAM ) )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( MUC - MUC ) ,( RRSe - MLU ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7297185123086917}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) * ( ACS * ARS ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( MUC - MUM ) ) + ( ( RRSe + MUM ) / Max( RRSe,MLU ) ) )", "obj1": 0.2714285714285714, "obj2": 0.7169193405288636}, {"determining": "( ( FirstVNF_Mem - ( MRS + Const ) ) / Max( ( ( DDR - MDR ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),CRS ) )", "choosing": "( Max( ( RCSe - RCSe ),( MUC * Max( DS,MUM ) ) ) + ( ( RRSe + MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.9204081632653062, "obj2": 0.08718208389872774}, {"determining": "( ( DDR + PN ) / ( ARS - MRS ) )", "choosing": "Min( ( RRSe + MUR ) ,Min( RRSe ,DS ) )", "obj1": 0.4163265306122449, "obj2": 0.580811972418717}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.44693877551020406, "obj2": 0.5448658614145931}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUC * MUM ),( RMSe / MUC ) )", "obj1": 0.3489795918367347, "obj2": 0.6313026099267145}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.42244897959183675, "obj2": 0.5559459344109425}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.23265306122448978, "obj2": 0.7591834957868508}, {"determining": "( ( FirstVNF_Mem / Max( Max( FirstVNF_RAM_Server,AMS ),( FirstVNF_RAM - Const ) ) ) * Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MUC * MLU ) / RRSe )", "obj1": 0.21428571428571427, "obj2": 0.7861745813073489}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.23265306122448978, "obj2": 0.7591834957868508}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / ACS )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),( RMSe / MUC ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( MUC * MUC ) ,( RRSe - MLU ) ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7273553755722642}, {"determining": "( Min( Min( ( BR + FirstVNF_CPU_Server ) ,( MRS + CRS ) ) ,( ( RRS / FirstVNF_Mem ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) )", "choosing": "( Min( ( ( RRSe - CS ) - ( MUM * MUR ) ) ,( Max( RRSe,RCSe ) / ( MUR * DS ) ) ) * ( Max( ( MUC - DS ),( MUR + MUC ) ) / Min( Min( MUM ,MUM ) ,( DS * MUR ) ) ) )", "obj1": 0.4204081632653061, "obj2": 0.5626198880259854}, {"determining": "Min( ( ( FirstVNF_RAM * CRS ) + ( FirstVNF_RAM + CRS ) ) ,Max( ( ( FirstVNF_RAM_Server / ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + ( ( CS + RCSe ) + Min( RCSe ,RRSe ) ) ) )", "obj1": 0.23061224489795917, "obj2": 0.7740527957367687}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) / ( ACS / BR ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.22448979591836735, "obj2": 0.7756302412734745}, {"determining": "( ( FirstVNF_RAM / ACS ) - Min( Min( MDR ,Const ) ,( AMS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM + DS ) * Min( MLU ,DS ) ) ,Max( ( MUC - RRSe ),( RRSe * MUR ) ) )", "obj1": 0.4489795918367347, "obj2": 0.5340767636942728}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) / ( ACS / BR ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.2163265306122449, "obj2": 0.7829546464749224}, {"determining": "( ( CRS - FirstVNF_Mem ) - ( FirstVNF_CPU / CRS ) )", "choosing": "( ( RMSe / DS ) - Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( ARS * ARS ) ) - Max( ( DDR - BR ),MDR ) )", "choosing": "Min( Max( ( RCSe + MUR ),( MUC - MUM ) ) ,Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( ACS / ( PN - ACS ) ) )", "choosing": "( Max( ( MLU + MUC ),( MLU * RRSe ) ) * ( ( MUM - DS ) * Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( MDR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + MRS ) ) - ( ( Const + CRS ) + Max( DDR,FirstVNF_RAM_Server ) ) ) ,( Min( Min( FirstVNF_CPU ,FirstVNF_Mem ) ,( AMS / MRS ) ) / ( ( ARS / ARS ) - Min( MRS ,BR ) ) ) )", "choosing": "Min( ( ( Min( MUC ,MUC ) / RRSe ) + RRSe ) ,( ( ( RCSe / MUM ) * ( RRSe + MUM ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,FirstVNF_RAM_Server ) + ( ACS - Const ) ) ,Min( ( MRS - FirstVNF_RAM ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - Min( ( ( FirstVNF_CPU_Server + ACS ) / ( FirstVNF_RAM_Server - Const ) ) ,( Max( ACS,RRS ) / ( MDR / CRS ) ) ) )", "choosing": "( Max( CS,( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( FirstVNF_CPU_Server / ARS ) ) ,( RRS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * RRSe ) + Min( MUR ,MUC ) ) - Max( Max( MLU,MUC ),( MUM / RCSe ) ) ) + ( ( ( RMSe * MUR ) - Max( MUR,DS ) ) + Max( ( MUR / RRSe ),Max( MUC,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,( ( ( AMS - FirstVNF_RAM ) / ( ARS / FirstVNF_Mem ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - DS ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - MDR ) - Min( ACS ,Const ) )", "choosing": "Max( Max( DS,MUM ),( Min( MUM ,MLU ) - ( MUC + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - MDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) )", "choosing": "Max( Max( DS,MUM ),( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( FirstVNF_CPU_Server / ARS ) ) ,( RRS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS * RRSe ) + Min( MUR ,MUC ) ) - Max( Max( MLU,MUC ),( MUM / RCSe ) ) ) + ( ( ( RMSe * MUR ) - Max( MUR,DS ) ) + Max( ( MUR / RRSe ),Max( MUC,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( FirstVNF_CPU_Server / ARS ) ) ,( RRS + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MUC + MLU ) ,MUM ) + ( ( CS - RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - ( FirstVNF_CPU / CRS ) ) + ( FirstVNF_RAM_Server - MRS ) )", "choosing": "Max( ( RMSe / DS ),( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem ) - ( FirstVNF_CPU / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / DS ) - Max( Max( DS,MLU ),Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem ) - ( Const / CRS ) )", "choosing": "( ( MUM / DS ) - Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem ) - ( FirstVNF_CPU / CRS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) )", "choosing": "Max( Max( DS,MUM ),( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - MDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) )", "choosing": "Max( Max( DS,MUM ),( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( CRS - FirstVNF_Mem ) - ( FirstVNF_CPU / CRS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) )", "choosing": "( ( RMSe / DS ) - ( Max( DS,MLU ) + Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + CRS ) - ARS ) * ACS ) / ( ACS / BR ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_CPU / CRS ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8468108713507319}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( Const + FirstVNF_RAM ) ) - ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,( ( DDR + PN ) / ( ARS - MRS ) ) )", "choosing": "Min( ( ( Min( MUC ,MUC ) / RRSe ) + RRSe ) ,( ( ( RCSe / MUM ) * ( RRSe + MUM ) ) / MUM ) )", "obj1": 0.7142857142857143, "obj2": 0.2891227629238028}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.5510204081632653, "obj2": 0.33871938723166567}, {"determining": "Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( Max( ( ( MDR - MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,MLU ) - ( MUC + MLU ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / Max( MUR,MUC ) ) ) )", "obj1": 0.7836734693877551, "obj2": 0.10752671986395332}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) / Max( DDR,BR ) ) ) )", "choosing": "( ( RMSe + RRSe ) / ( MUR * RCSe ) )", "obj1": 0.46530612244897956, "obj2": 0.45288387938916785}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,AMS )", "choosing": "( ( CS + Min( ( MUR - MLU ) ,( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8, "obj2": 0.09281943668330467}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.6265306122448979, "obj2": 0.32802880525194644}, {"determining": "( ( FirstVNF_Mem - ( MRS - Const ) ) / Max( ( ( DDR - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ),CRS ) )", "choosing": "( Max( ( RCSe - RCSe ),( MUC * Max( DS,CS ) ) ) + ( ( RRSe + MUM ) / Max( RRSe,MUC ) ) )", "obj1": 0.9163265306122449, "obj2": 0.09230857811323231}, {"determining": "( Min( Const ,Min( ( BR + MRS ) ,BR ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( ( CS + ( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.17346938775510204, "obj2": 0.8290340629265052}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ,Min( RRS ,Const ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.963265306122449, "obj2": 0.040362945721622065}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.463265306122449, "obj2": 0.5312661841644353}, {"determining": "( Min( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( Const + FirstVNF_RAM ) ) - ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_Mem_Server + CRS ) * ( MRS * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * PN ) - ( Const + PN ) ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.673469387755102, "obj2": 0.3175103172234162}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) * ( ( PN - FirstVNF_CPU ) * FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe - RCSe ) ,Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) ) ) + ( ( RRSe + MUM ) / Max( RRSe,MLU ) ) )", "obj1": 0.9979591836734694, "obj2": 0.0006704972556648238}, {"determining": "( ( ARS - MRS ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Min( MLU ,MUM ) ,MLU ) * Max( ( RMSe * DS ),( MUM - DS ) ) ) ,Min( RRSe ,DS ) )", "obj1": 0.39387755102040817, "obj2": 0.5875508928246689}, {"determining": "( Min( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( Const + FirstVNF_RAM ) ) - ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_Mem_Server + CRS ) * ( MRS * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * PN ) - ( Const + PN ) ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) ) )", "obj1": 0.6959183673469388, "obj2": 0.31297159480356923}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ,Min( RRS ,Const ) )", "choosing": "( ( MUC - MUM ) * MUC )", "obj1": 0.9428571428571428, "obj2": 0.06058337514047258}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - FirstVNF_RAM_Server ) ),( Max( RRS,MDR ) - Max( PN,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,DS ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MUR ) ) / Max( MUR,MUC ) ) )", "obj1": 0.336734693877551, "obj2": 0.6472975776250911}, {"determining": "( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) )", "choosing": "Max( ( MUC * MUM ),MUC )", "obj1": 0.3040816326530612, "obj2": 0.6759798058899421}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,MLU ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / ( ( RRSe + MUR ) + ( MUM * ( MUC * MUM ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.6587909738348128}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.4163265306122449, "obj2": 0.5585129477203541}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( MUC * MUC ) ,( RRSe - MLU ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6931209905055745}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) - ( RRS - FirstVNF_RAM ) ) ,Min( RRS ,Const ) )", "choosing": "( ( MUR - MUR ) * MUC )", "obj1": 0.2510204081632653, "obj2": 0.7481407442101848}, {"determining": "( ( FirstVNF_Mem - ( MRS + Const ) ) / Max( ( ( DDR - MDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ),CRS ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.9244897959183673, "obj2": 0.08302138141895989}, {"determining": "( ( CRS - BR ) - ( ( DDR - MDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( Max( Max( DS,MUM ),( MLU / MUC ) ) ,MUC ) )", "obj1": 0.15306122448979592, "obj2": 0.8463124866812569}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUC * MUM ),( RMSe / MUC ) )", "obj1": 0.3489795918367347, "obj2": 0.6313026099267145}, {"determining": "( ( ( Const * CRS ) * ( AMS / MRS ) ) / ( ( Const + Const ) + Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.19795918367346937, "obj2": 0.7997866428163932}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( ACS / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Max( ( MUC + MUC ),( MLU * RRSe ) ) * ( ( MUM - DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.9510204081632653, "obj2": 0.0445618957638672}, {"determining": "( ( ARS - MRS ) * Min( PN ,CRS ) )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / Min( CS ,RCSe ) )", "obj1": 0.22244897959183674, "obj2": 0.7640829258027216}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) * ( ACS * ARS ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( MUC - MUM ) ) + ( ( RRSe + MUM ) / Max( RRSe,MLU ) ) )", "obj1": 0.2714285714285714, "obj2": 0.7169193405288636}, {"determining": "( ( ( Const * CRS ) * ( AMS / MRS ) ) / ( ( Const + Const ) + Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "Max( Min( ( RMSe * MUR ) ,MUC ),( DS + Min( RCSe ,MUC ) ) )", "obj1": 0.3653061224489796, "obj2": 0.6284913666032165}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) * ( ACS * ARS ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( MUC - MUM ) ) + ( ( RRSe + MUM ) / Max( RRSe,MLU ) ) )", "obj1": 0.2795918367346939, "obj2": 0.7089454729748119}, {"determining": "Min( ( ( FirstVNF_RAM * CRS ) + ( FirstVNF_RAM + CRS ) ) ,Max( ( ( FirstVNF_RAM_Server / ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "Max( Min( ( RMSe * MUR ) ,MUC ),( DS + Min( RCSe ,MUC ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6210120707084545}, {"determining": "( ( ( Const * CRS ) * ( AMS / MRS ) ) / BR )", "choosing": "Max( RCSe,( DS + Min( RCSe ,MUC ) ) )", "obj1": 0.39183673469387753, "obj2": 0.6037077411929543}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.42244897959183675, "obj2": 0.5559459344109425}, {"determining": "( ( MDR * ACS ) / ( ACS / BR ) )", "choosing": "Max( ( ( RMSe * MUR ) + MUC ),( DS + Min( RCSe ,MUC ) ) )", "obj1": 0.3836734693877551, "obj2": 0.6113194359205074}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) / ( ACS / CRS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.19795918367346937, "obj2": 0.7997866428163932}, {"determining": "Min( ( ( FirstVNF_RAM * CRS ) + ( FirstVNF_RAM + CRS ) ) ,Max( ( ( FirstVNF_RAM_Server / ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + Max( MUC,CS ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7920125102343016}, {"determining": "( ( ACS / ACS ) - Min( Min( MDR ,Const ) ,( AMS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM + CS ) * Min( MLU ,DS ) ) ,Max( ( MUC - RRSe ),( RRSe * MUR ) ) )", "obj1": 0.43673469387755104, "obj2": 0.5452380564745533}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / ACS )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),( RMSe / MUC ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( MUC * MUC ) ,( RRSe - MLU ) ) ) )", "obj1": 0.2612244897959184, "obj2": 0.7273553755722642}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_RAM ) )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( MUC - MUC ) ,( RRSe - MLU ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7297185123086917}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,DS ) * ( MUM / RCSe ) )", "obj1": 0.2163265306122449, "obj2": 0.7821830567297203}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( ARS - MRS ) * Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.23265306122448978, "obj2": 0.7591834957868508}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.23265306122448978, "obj2": 0.7591834957868508}, {"determining": "( ( FirstVNF_RAM / ACS ) - Min( Min( MDR ,Const ) ,( AMS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM + DS ) * Min( MLU ,DS ) ) ,Max( ( MUC - RRSe ),( RRSe * MUR ) ) )", "obj1": 0.4489795918367347, "obj2": 0.5340767636942728}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.45714285714285713, "obj2": 0.5319099023363068}, {"determining": "( ( ( RRS + ( PN - FirstVNF_CPU ) ) - ARS ) / ( PN - FirstVNF_CPU ) )", "choosing": "Min( ( ( CS / MLU ) * MUR ) ,Min( Min( CS ,MLU ) ,DS ) )", "obj1": 0.44693877551020406, "obj2": 0.5408701471666626}, {"determining": "( ( ( RRS + RRS ) - ARS ) / ( PN - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,DS ) )", "obj1": 0.44285714285714284, "obj2": 0.5443246375648315}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) / ( ACS / Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( RMSe / DS ) - Max( Max( DS,MLU ),Max( CS,MUC ) ) ) ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.21428571428571427, "obj2": 0.7840575202712111}, {"determining": "( ( FirstVNF_Mem - ( MRS + Const ) ) / Max( ( ( DDR - MDR ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),CRS ) )", "choosing": "( Max( ( RCSe - RCSe ),( MUC * Max( DS,MUM ) ) ) + ( ( RRSe + MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.9204081632653062, "obj2": 0.08718208389872774}], "4": [{"determining": "( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem ) - ( FirstVNF_CPU / CRS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) )", "choosing": "( ( RMSe / DS ) - ( Max( DS,MLU ) + Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM * CRS ) + ( FirstVNF_RAM + CRS ) ) ,Max( ( ( FirstVNF_RAM_Server / ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( CRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + Max( ( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) ),CS ) ) )", "obj1": 0.1346938775510204, "obj2": 0.8628313094379569}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) / Max( DDR,BR ) ) ) )", "choosing": "( ( RMSe + RRSe ) / ( MUR * RCSe ) )", "obj1": 0.46530612244897956, "obj2": 0.45288387938916785}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.5510204081632653, "obj2": 0.33871938723166567}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( Const + FirstVNF_RAM ) ) - ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,( ( DDR + PN ) / ( ARS - MRS ) ) )", "choosing": "Min( ( ( Min( MUC ,MUC ) / RRSe ) + RRSe ) ,( ( ( RCSe / MUM ) * ( RRSe + MUM ) ) / MUM ) )", "obj1": 0.7142857142857143, "obj2": 0.2891227629238028}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.573469387755102, "obj2": 0.29395012330734815}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,( ( BR + MRS ) * ( ( FirstVNF_Mem_Server * ACS ) / ( ACS / Max( CRS,FirstVNF_RAM ) ) ) ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( Min( RMSe ,RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + MUM ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.1726863614668055}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,AMS )", "choosing": "( ( CS + Min( ( MUR - MLU ) ,( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8, "obj2": 0.09281943668330467}, {"determining": "( ( FirstVNF_Mem - ( MRS - Const ) ) / Max( ( ( DDR - FirstVNF_CPU ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ),CRS ) )", "choosing": "( Max( ( RCSe - RCSe ),( MUC * Max( DS,CS ) ) ) + ( ( RRSe + MUM ) / Max( RRSe,MUC ) ) )", "obj1": 0.9163265306122449, "obj2": 0.09230857811323231}, {"determining": "( Min( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( Const + FirstVNF_RAM ) ) - ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_Mem_Server + CRS ) * ( MRS * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * PN ) - ( Const + PN ) ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,DS ) )", "obj1": 0.7612244897959184, "obj2": 0.2373010989325151}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * MDR ) ) ) / ACS )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),( RMSe / MUC ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * ( Max( ( Min( MUC ,MUC ) + Max( RCSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) ) ) ) )", "obj1": 0.45714285714285713, "obj2": 0.517900367700613}, {"determining": "Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / Min( CS ,RCSe ) )", "obj1": 0.7714285714285715, "obj2": 0.10077120393338335}, {"determining": "( ( ARS - MRS ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Min( MLU ,MUM ) ,MLU ) * Max( ( RMSe * DS ),( MUM - DS ) ) ) ,Min( RRSe ,DS ) )", "obj1": 0.39387755102040817, "obj2": 0.5875508928246689}, {"determining": "( Min( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( FirstVNF_CPU + FirstVNF_RAM ) ) - ( Max( AMS,MDR ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_Mem_Server + CRS ) * ( MRS * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * PN ) - ( Const + PN ) ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,Min( Min( CS ,MLU ) ,DS ) )", "obj1": 0.763265306122449, "obj2": 0.23697505365598898}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( ACS / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Min( ( ( RMSe / DS ) - Max( Max( DS,MLU ),Max( CS,MUC ) ) ) ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.9734693877551021, "obj2": 0.024734614347138507}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - BR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) * Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MUC * MUM ) ),( Min( MUM ,MLU ) - ( MUC + RRSe ) ) ),( ( ( RMSe * MLU ) - Min( RMSe ,MLU ) ) / Max( MUR,MUC ) ) )", "obj1": 0.37551020408163266, "obj2": 0.5974695503238281}, {"determining": "( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) )", "choosing": "Max( ( MUC * MUM ),MUC )", "obj1": 0.3040816326530612, "obj2": 0.6759798058899421}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.4163265306122449, "obj2": 0.5585129477203541}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( MUC * MUC ) ,( RRSe - MLU ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6931209905055745}, {"determining": "( ( Const + ( ( BR + MRS ) + ( ( Const + Min( ( BR + MRS ) ,BR ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,( MUR + ( Min( CS ,RCSe ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8370421921481318}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( CS,( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.17346938775510204, "obj2": 0.8095887329512247}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - ( ( FirstVNF_Mem_Server * ACS ) / ( ACS / BR ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( ( Min( RMSe ,RCSe ) * ( MLU / RCSe ) ) ,MUM ) ,DS ) )", "obj1": 0.9959183673469387, "obj2": 0.002277893361461204}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.24285714285714285, "obj2": 0.7429152809269007}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ,Min( RRS ,Const ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.963265306122449, "obj2": 0.040362945721622065}, {"determining": "( ( Const + ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.22244897959183674, "obj2": 0.7538256616261748}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,MLU ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Max( ( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / Max( MUR,MUC ) ),MLU ) ) / ( ( RRSe + MUR ) + ( MUM * ( MUC * MUM ) ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.6274026664157978}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( ACS / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Max( ( MUC + MUC ),( MLU * RRSe ) ) * ( ( MUM - DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.9510204081632653, "obj2": 0.0445618957638672}, {"determining": "( ( FirstVNF_RAM / ACS ) - Min( Min( MDR ,Const ) ,( AMS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM + DS ) * Min( MLU ,DS ) ) ,Max( ( MUC - RRSe ),( RRSe * MUR ) ) )", "obj1": 0.4489795918367347, "obj2": 0.5340767636942728}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,DS ) * ( MUM / RCSe ) )", "obj1": 0.2163265306122449, "obj2": 0.7821830567297203}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,MLU ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / ( ( RRSe + MUR ) + ( MUM * ( MUC * MUM ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.6587909738348128}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_CPU_Server - ARS ) ) ) - ACS ) ) )", "choosing": "( Max( Min( MUC ,MUC ),( RMSe * RRSe ) ) * ( ( MUM - DS ) * Min( ( ( RMSe / DS ) - Max( Max( DS,MLU ),Max( RRSe,MUC ) ) ) ,RCSe ) ) )", "obj1": 0.9408163265306122, "obj2": 0.06246737133781542}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * PN ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( Max( CS,Max( MUR,MUC ) ) + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),( RMSe / MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.789795918367347, "obj2": 0.09803021885376506}, {"determining": "( ( FirstVNF_Mem - ( MRS + Const ) ) / Max( ( ( DDR - MDR ) - PN ),CRS ) )", "choosing": "( Max( ( RCSe - RCSe ),( MUC * Max( DS,MUM ) ) ) + Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) ) )", "obj1": 0.926530612244898, "obj2": 0.0810698779263136}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - FirstVNF_RAM_Server ) ),( Max( RRS,MDR ) - Max( PN,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,DS ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MUR ) ) / Max( MUR,MUC ) ) )", "obj1": 0.336734693877551, "obj2": 0.6472975776250911}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server / ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) )", "obj1": 0.1816326530612245, "obj2": 0.8084608127993449}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUC * MUM ),( RMSe / MUC ) )", "obj1": 0.3489795918367347, "obj2": 0.6313026099267145}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) * ( ACS * ARS ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( MUC - MUM ) ) + ( ( RRSe + MUM ) / Max( RRSe,MLU ) ) )", "obj1": 0.2714285714285714, "obj2": 0.7169193405288636}, {"determining": "( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) )", "choosing": "Max( ( MUC * MUM ),( ( RRSe + MUM ) / Max( RRSe,MLU ) ) )", "obj1": 0.3224489795918367, "obj2": 0.6573918480727944}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,( MUR + ( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.15306122448979592, "obj2": 0.8435381124634908}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.573469387755102, "obj2": 0.29395012330734815}, {"determining": "( ( Const + Min( ( BR + MRS ) ,( MRS - MDR ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RRSe ) / ( CS * RCSe ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.2510204081632653, "obj2": 0.7296103826201455}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_CPU / AMS ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / ( RRSe + MLU ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8468108713507319}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) / ( ACS / BR ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.42653061224489797, "obj2": 0.5475724740004853}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / ( ( ( MDR - AMS ) - Min( ACS ,Const ) ) + ( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( CS ,MLU ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / ( ( RRSe + MUR ) + ( MUM * ( MUC * MUM ) ) ) ) )", "obj1": 0.3346938775510204, "obj2": 0.6523054694314179}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) * ( ACS * ARS ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( MUC - MUM ) ) + ( ( RRSe + MUM ) / Max( RRSe,MLU ) ) )", "obj1": 0.2795918367346939, "obj2": 0.7089454729748119}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) / ( MDR / BR ) )", "choosing": "Min( ( ( CS / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.44081632653061226, "obj2": 0.5402402247518744}, {"determining": "( ( ( Const * CRS ) * ( AMS / MRS ) ) / ( ( Const + Const ) + Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.19795918367346937, "obj2": 0.7997866428163932}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) - ( PN - FirstVNF_RAM ) ) ,Const )", "choosing": "( ( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / Max( MUR,MUC ) ) * MUC )", "obj1": 0.20408163265306123, "obj2": 0.7930781082531241}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.42244897959183675, "obj2": 0.5559459344109425}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( ARS - ( ( MDR / MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( RMSe + RMSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.26326530612244897, "obj2": 0.7226560951285321}], "5": [{"determining": "( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ACS ) - Min( Min( MDR ,Const ) ,( AMS * FirstVNF_RAM ) ) )", "choosing": "( Max( CS,( MUR + ( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.1306122448979592, "obj2": 0.8722661386336849}, {"determining": "( ( Const + Min( ( BR + ACS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + MUR ) / ( CS * RCSe ) )", "obj1": 0.45918367346938777, "obj2": 0.445972561927041}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) ,( ( FirstVNF_Mem_Server * ACS ) / ( ACS / Max( CRS,FirstVNF_RAM ) ) ) ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * Max( Max( RRSe,MLU ),MUC ) ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + MUM ) ) ) )", "obj1": 0.689795918367347, "obj2": 0.27148516000532824}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,AMS )", "choosing": "( ( CS + Min( ( MUR - MLU ) ,( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8, "obj2": 0.09281943668330467}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.5510204081632653, "obj2": 0.33871938723166567}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,CS ) ,RCSe ) )", "obj1": 0.9163265306122449, "obj2": 0.08741787614049619}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - Const ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( RMSe + RRSe ) / ( CS * RCSe ) )", "obj1": 0.5510204081632653, "obj2": 0.33871938723166567}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.573469387755102, "obj2": 0.29395012330734815}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_Mem_Server ,( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( CS,( MUR + ( Max( ( Min( ( RRSe - MUC ) ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7183673469387755, "obj2": 0.20071759338156445}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,( ( FirstVNF_Mem_Server * ACS ) / ( ACS / Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( MUC * MUC ) ,( RRSe - MLU ) ) ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + MUM ) ) ) )", "obj1": 0.7061224489795919, "obj2": 0.26959150932420906}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * MDR ) ) ) / ACS )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),( RMSe / MUC ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * ( Max( ( Min( MUC ,MUC ) + Max( RCSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) ) ) ) )", "obj1": 0.45714285714285713, "obj2": 0.517900367700613}, {"determining": "Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / Min( CS ,RCSe ) )", "obj1": 0.7714285714285715, "obj2": 0.10077120393338335}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,( ( BR + MRS ) * ( ( FirstVNF_Mem_Server * ACS ) / ( ACS / Max( CRS,FirstVNF_RAM ) ) ) ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( Min( RMSe ,RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + MUM ) ) ) )", "obj1": 0.7673469387755102, "obj2": 0.1726863614668055}, {"determining": "( ( ARS - MRS ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Min( MLU ,MUM ) ,MLU ) * Max( ( RMSe * DS ),( MUM - DS ) ) ) ,Min( RRSe ,DS ) )", "obj1": 0.39387755102040817, "obj2": 0.5875508928246689}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5673469387755102, "obj2": 0.2967124928810841}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( CRS * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_CPU_Server - ARS ) ) ) - ACS ) ) )", "choosing": "( Max( Min( MUC ,MUC ),( RMSe * RRSe ) ) * ( ( MUM - DS ) * Min( ( ( RMSe / DS ) - Max( Max( DS,MLU ),Max( RRSe,MUC ) ) ) ,RCSe ) ) )", "obj1": 0.9408163265306122, "obj2": 0.06246737133781542}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,DS ) * ( MUM / RCSe ) )", "obj1": 0.2163265306122449, "obj2": 0.7821830567297203}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MLU / RCSe ) )", "obj1": 0.9734693877551021, "obj2": 0.024707851406478368}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,( ( FirstVNF_Mem_Server * ACS ) / ( ACS / Min( CRS ,FirstVNF_RAM ) ) ) ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Min( MUC ,MUC ) * Max( RRSe,CS ) ),Max( Min( RRSe ,MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( MUC * MUC ) ,( RRSe - MLU ) ) ) )", "obj1": 0.7408163265306122, "obj2": 0.19460951502651802}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( ( ( Const + Min( ( BR + MRS ) ,BR ) ) * Max( Max( ( ACS - ARS ),( MDR - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ),MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( CS * RCSe ) * MUM ),Min( RMSe ,MUC ) )", "obj1": 0.363265306122449, "obj2": 0.6120754289580563}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Max( MLU,MUM ) ,DS ) )", "obj1": 0.4142857142857143, "obj2": 0.5630049994591796}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - ( ( FirstVNF_Mem_Server * ACS ) / ( ACS / BR ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( ( Min( RMSe ,RCSe ) * ( MLU / RCSe ) ) ,MUM ) ,DS ) )", "obj1": 0.9959183673469387, "obj2": 0.002277893361461204}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,AMS ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,( ( FirstVNF_Mem_Server * ACS ) / ( ACS / Max( CRS,FirstVNF_RAM ) ) ) ) ) ),( Min( CRS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( RRSe + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + MUM ) ) ) )", "obj1": 0.7571428571428571, "obj2": 0.18272506783835313}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_CPU ) )", "choosing": "( Max( CS,( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.16938775510204082, "obj2": 0.8222310621587542}, {"determining": "( ( Const + ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.22244897959183674, "obj2": 0.7538256616261748}, {"determining": "( ( FirstVNF_RAM / ACS ) - Min( Min( MDR ,Const ) ,( AMS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM + DS ) * Min( MLU ,DS ) ) ,Max( ( MUC - RRSe ),( RRSe * MUR ) ) )", "obj1": 0.4489795918367347, "obj2": 0.5340767636942728}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( ACS / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Max( ( MUC + MUC ),( MLU * RRSe ) ) * ( ( MUM - DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.9510204081632653, "obj2": 0.0445618957638672}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( CS + Min( ( MUR - MLU ) ,( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.2979591836734694, "obj2": 0.6685433871996854}, {"determining": "Min( ( ( FirstVNF_RAM * CRS ) + ( FirstVNF_RAM + CRS ) ) ,Max( ( ( FirstVNF_RAM_Server / ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( CRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + Max( ( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) ),CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8359139847924262}, {"determining": "( ( FirstVNF_Mem - ( MRS + Const ) ) / Max( ( ( DDR - MDR ) - PN ),CRS ) )", "choosing": "( Max( ( RCSe - RCSe ),( MUC * Max( DS,MUM ) ) ) + Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) ) )", "obj1": 0.926530612244898, "obj2": 0.0810698779263136}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( ACS * ARS ) )", "choosing": "( Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) + ( ( RRSe + MUM ) / Max( RRSe,MLU ) ) )", "obj1": 0.29591836734693877, "obj2": 0.6857248476497689}, {"determining": "( ( ( Const * CRS ) * ( AMS / MRS ) ) / ( ( Const + Const ) + Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.19795918367346937, "obj2": 0.7997866428163932}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * PN ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( Max( CS,Max( MUR,MUC ) ) + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),( RMSe / MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.789795918367347, "obj2": 0.09803021885376506}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( ( ( ACS - ARS ) * ( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) * MUM ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.4326530612244898, "obj2": 0.5379710529796526}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,MLU ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / ( ( RRSe + MUR ) + ( MUM * ( MUC * MUM ) ) ) ) )", "obj1": 0.3122448979591837, "obj2": 0.6587909738348128}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - FirstVNF_RAM_Server ) ),( Max( RRS,MDR ) - Max( PN,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,DS ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MUR ) ) / Max( MUR,MUC ) ) )", "obj1": 0.336734693877551, "obj2": 0.6472975776250911}, {"determining": "( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) )", "obj1": 0.35306122448979593, "obj2": 0.628655101723156}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( MUC * MUC ) ,( RRSe - MLU ) ) ) )", "obj1": 0.2836734693877551, "obj2": 0.6931209905055745}, {"determining": "Min( ( ( Max( CRS,DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),( RMSe / MUC ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * ( Max( ( Min( MUC ,MUC ) + Max( RCSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.714096596228819}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - BR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) * Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MUC * MUM ) ),( Min( MUM ,MLU ) - ( MUC + RRSe ) ) ),( ( ( RMSe * MLU ) - Min( RMSe ,MLU ) ) / Max( MUR,MUC ) ) )", "obj1": 0.37551020408163266, "obj2": 0.5974695503238281}, {"determining": "( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) )", "choosing": "Max( ( MUC * MUM ),( ( RRSe + MUM ) / Max( RRSe,MLU ) ) )", "obj1": 0.3224489795918367, "obj2": 0.6573918480727944}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.573469387755102, "obj2": 0.29395012330734815}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,MLU ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( ( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / Max( MUR,MUC ) ) ,MLU ) ) / ( ( RRSe + MUR ) + ( MUM * ( MUC * MUM ) ) ) ) )", "obj1": 0.37755102040816324, "obj2": 0.5969014432441504}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server / ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) ) - ACS ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8368443049489374}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( ARS - ( ( MDR / MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( RMSe + RMSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.26326530612244897, "obj2": 0.7226560951285321}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( CS,( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.17346938775510204, "obj2": 0.8095887329512247}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( ACS / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "Min( ( ( CS / MLU ) * MUR ) ,Min( Min( CS ,MLU ) ,DS ) )", "obj1": 0.9673469387755103, "obj2": 0.030824860093779015}, {"determining": "( Min( Const ,Min( Min( BR ,MRS ) ,( MRS - MDR ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * DS ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.23877551020408164, "obj2": 0.7475251431001217}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / ( ( ( MDR - AMS ) - Min( ACS ,Const ) ) + ( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( CS ,MLU ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / ( ( RRSe + MUR ) + ( MUM * ( MUC * MUM ) ) ) ) )", "obj1": 0.3346938775510204, "obj2": 0.6523054694314179}], "6": [{"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( ARS - ( ( MDR / MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( RRSe + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ACS ) - Min( Min( MDR ,Const ) ,( AMS * FirstVNF_RAM ) ) )", "choosing": "( Max( CS,( MUR + ( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.1306122448979592, "obj2": 0.8722661386336849}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5387755102040817, "obj2": 0.30607022728961425}, {"determining": "( ( Const + Min( ( BR + ACS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + MUR ) / ( CS * RCSe ) )", "obj1": 0.45918367346938777, "obj2": 0.445972561927041}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( RRSe,( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / ( ( RRSe + MUR ) + ( MUM * ( MUC * MUM ) ) ) ) )", "obj1": 0.7163265306122449, "obj2": 0.23901695276044874}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,AMS )", "choosing": "( ( CS + Min( ( MUR - MLU ) ,( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8, "obj2": 0.09281943668330467}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,CS ) ,RCSe ) )", "obj1": 0.9163265306122449, "obj2": 0.08741787614049619}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,RRS ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS / RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.6265306122448979, "obj2": 0.25606425526023274}, {"determining": "( ( Const + ( ( BR + MRS ) + FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - ( DDR + ACS ) ) ) )", "choosing": "( ( MUR + RRSe ) / ( CS * RMSe ) )", "obj1": 0.45510204081632655, "obj2": 0.4614813459487137}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server * PN ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,( MUR + ( ( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ) / Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7387755102040816, "obj2": 0.12417222817608065}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_Mem_Server ,( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,( ACS - ARS ) ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( CS,( MUR + ( Max( ( Min( ( RRSe - MUC ) ,MUC ) + MUR ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7204081632653061, "obj2": 0.1999205998815854}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * RCSe ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.6163265306122448, "obj2": 0.26803392207986054}, {"determining": "( ( FirstVNF_RAM / ACS ) - Min( Min( MDR ,Const ) ,( AMS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM + DS ) * Min( MLU ,DS ) ) ,Max( ( MUC - RRSe ),( RRSe * MUR ) ) )", "obj1": 0.4489795918367347, "obj2": 0.5340767636942728}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.37551020408163266, "obj2": 0.5765321383877697}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Max( MLU,MUM ) ,DS ) )", "obj1": 0.4142857142857143, "obj2": 0.5630049994591796}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - Max( FirstVNF_CPU_Server,CRS ) ) / ( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ) - Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( CS + ( ( MUR - MLU ) - ( ( ( RMSe + RCSe ) - ( Min( RMSe ,RCSe ) * ( MLU / RCSe ) ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.06239975450257591}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server / ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) ) - ACS ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8368443049489374}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( ACS / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Max( ( MUC + MUC ),( MLU * RRSe ) ) * ( ( MUM - DS ) * Min( MLU ,RRSe ) ) )", "obj1": 0.9510204081632653, "obj2": 0.0445618957638672}, {"determining": "Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7428571428571429, "obj2": 0.1229498535509581}, {"determining": "( ( ( Const * CRS ) * ( AMS / MRS ) ) / ( ( Const + Const ) + Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.19795918367346937, "obj2": 0.7997866428163932}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( FirstVNF_Mem - ( ( MDR - MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( RMSe + RCSe ) ,( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.21020408163265306, "obj2": 0.7720478404678593}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( CS,( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.17346938775510204, "obj2": 0.8095887329512247}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( ( ( ACS - ARS ) * ( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) * MUM ) ,Min( Min( CS ,MUM ) ,DS ) )", "obj1": 0.4326530612244898, "obj2": 0.5379710529796526}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - BR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( Min( ( BR + MRS ) ,( ( FirstVNF_Mem_Server * ACS ) / ( ACS / Max( CRS,FirstVNF_RAM ) ) ) ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MUC * MUM ) ),( Min( MUM ,MLU ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MLU ) ) / Max( MUC,MUC ) ) )", "obj1": 0.37142857142857144, "obj2": 0.6051331138068564}, {"determining": "( Min( Const ,Min( Min( BR ,MRS ) ,( MRS - MDR ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * DS ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.23877551020408164, "obj2": 0.7475251431001217}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,MRS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + Min( ( MUC / MUM ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.3081632653061224, "obj2": 0.6506020369550457}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - FirstVNF_RAM_Server ) ),( Max( RRS,MDR ) - Max( PN,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) + ( MLU * MUM ) ),( Min( MUM ,DS ) - ( MUC + RRSe ) ) ),( ( Max( RMSe,MLU ) - Min( RMSe ,MUR ) ) / Max( MUR,MUC ) ) )", "obj1": 0.336734693877551, "obj2": 0.6472975776250911}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.573469387755102, "obj2": 0.29395012330734815}, {"determining": "( ( FirstVNF_Mem - ( MRS + Const ) ) / Max( ( ( DDR - MDR ) - PN ),CRS ) )", "choosing": "( Max( ( RCSe - RCSe ),( MUC * Max( DS,MUM ) ) ) + Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) ) )", "obj1": 0.926530612244898, "obj2": 0.0810698779263136}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - FirstVNF_CPU ) )", "choosing": "( Max( CS,( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.16938775510204082, "obj2": 0.8222310621587542}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Max( MLU,MUM ) ,DS ) )", "obj1": 0.42244897959183675, "obj2": 0.5559459344109425}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( ( ( Const + Min( ( BR + MRS ) ,BR ) ) * Max( Max( ( ACS - ARS ),( MDR - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ),MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( CS * RCSe ) * MUM ),Min( RMSe ,MUC ) )", "obj1": 0.363265306122449, "obj2": 0.6120754289580563}, {"determining": "Min( ( ( FirstVNF_RAM * CRS ) + ( FirstVNF_RAM + CRS ) ) ,Max( ( ( FirstVNF_RAM_Server / ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( CRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + Max( ( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) ),CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8359139847924262}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_CPU ,( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( CS,( MUR + ( Min( ( Min( ( RRSe - MUC ) ,MUC ) + Max( RRSe,CS ) ) ,Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7183673469387755, "obj2": 0.20071759338156445}, {"determining": "( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR + DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * MUM ) )", "obj1": 0.28775510204081634, "obj2": 0.6848960412440089}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.7816326530612245, "obj2": 0.0967687922477335}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,DS ) * ( MUM / RCSe ) )", "obj1": 0.3510204081632653, "obj2": 0.6469092965156694}, {"determining": "( ( Const + ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.22244897959183674, "obj2": 0.7538256616261748}, {"determining": "Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / Min( CS ,RCSe ) )", "obj1": 0.7714285714285715, "obj2": 0.10077120393338335}, {"determining": "Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / Min( CS ,RCSe ) )", "obj1": 0.7714285714285715, "obj2": 0.10077120393338335}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ACS / FirstVNF_CPU ) )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),( RMSe / MUC ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * ( Max( ( Min( MUC ,MUC ) + Max( RCSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7367548980255937}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.573469387755102, "obj2": 0.29395012330734815}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5673469387755102, "obj2": 0.2967124928810841}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Min( Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,RCSe ) ) ,MUC ) * ( MLU / RCSe ) )", "obj1": 0.9612244897959183, "obj2": 0.03270561123114555}, {"determining": "( ( ( Const * CRS ) * ( AMS / MRS ) ) / ( ( Const + Const ) + Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.7707116453223507}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MLU / RCSe ) )", "obj1": 0.9734693877551021, "obj2": 0.024707851406478368}, {"determining": "( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) )", "obj1": 0.35306122448979593, "obj2": 0.628655101723156}, {"determining": "( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.3, "obj2": 0.6579975092146907}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MLU / RCSe ) )", "obj1": 0.9734693877551021, "obj2": 0.024707851406478368}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - ( ( FirstVNF_Mem_Server * ACS ) / ( ACS / BR ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( ( Min( RMSe ,RCSe ) * ( MLU / RCSe ) ) ,MUM ) ,DS ) )", "obj1": 0.9959183673469387, "obj2": 0.002277893361461204}], "7": [{"determining": "( ( ACS / ACS ) - Min( Min( MDR ,Const ) ,( AMS * FirstVNF_RAM ) ) )", "choosing": "( Max( CS,( MUR + ( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.1306122448979592, "obj2": 0.8722661386336849}, {"determining": "( Min( Const ,Min( Min( BR ,MRS ) ,( MRS - MDR ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,( MUR + ( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( ARS - ( ( MDR / MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( RRSe + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ACS ) - Min( Min( MDR ,Const ) ,( AMS * FirstVNF_RAM ) ) )", "choosing": "( Max( CS,( MUR + ( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.1306122448979592, "obj2": 0.8722661386336849}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5359123352371727}, {"determining": "( Max( Max( Max( ACS,ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) + ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS - RCSe ) )", "obj1": 0.5204081632653061, "obj2": 0.42475204359723645}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5285714285714286, "obj2": 0.3137410884682314}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.35714285714285715, "obj2": 0.5660770675152016}, {"determining": "( ( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,RRS ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS / RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.7020408163265306, "obj2": 0.20388993858120957}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_CPU ,( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC + Min( ( MUC / MLU ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.6346938775510204, "obj2": 0.2507642223107228}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.44285714285714284, "obj2": 0.4636484025428562}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,CS ) ,RCSe ) )", "obj1": 0.9163265306122449, "obj2": 0.08741787614049619}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,ARS ) )", "choosing": "( CS + ( Max( ( RMSe + RRSe ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8040816326530612, "obj2": 0.09069289021242864}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,( ( ( PN * FirstVNF_RAM_Server ) + Max( PN,MRS ) ) + ( ( Const * FirstVNF_CPU_Server ) - Min( ACS ,ACS ) ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( ( RRSe / RMSe ) ,Min( MLU ,CS ) ) - ( Max( MUC,MUC ) * Max( RRSe,MUC ) ) ) - Max( ( Min( MUR ,MUM ) + Min( CS ,RRSe ) ),( ( MUM / MUM ) - ( RCSe - RMSe ) ) ) ) + ( ( Min( ( RRSe * MUC ) ,( RMSe + CS ) ) + Max( Max( RCSe,RCSe ),Max( MUM,CS ) ) ) + Max( ( Max( MLU,RRSe ) / ( RMSe - CS ) ),Min( ( MUR * RMSe ) ,Min( RCSe ,MUM ) ) ) ) ),Min( ( ( ( ( MUM + RRSe ) + ( MUM + MLU ) ) * ( ( MUM - MLU ) * ( CS / MLU ) ) ) - ( ( ( CS / MUR ) + Min( MUM ,RMSe ) ) + Min( ( RRSe + MUR ) ,( MUR * MUR ) ) ) ) ,( ( ( ( CS + MUM ) - Min( MUM ,MUM ) ) - ( Min( RCSe ,RMSe ) - ( CS / RMSe ) ) ) / Min( ( Max( RMSe,DS ) / ( RRSe + MUR ) ) ,Max( ( MLU + MUR ),( DS + MUR ) ) ) ) ) ) * ( ( ( Max( ( ( RMSe - MUR ) - Min( MUC ,MLU ) ),Min( Min( RRSe ,RRSe ) ,( MUC / MUM ) ) ) * ( ( Max( RCSe,MUM ) * ( RCSe - DS ) ) / Max( ( RCSe + RMSe ),( CS - MLU ) ) ) ) * ( Max( ( ( MUM + RRSe ) * ( DS + DS ) ),Min( ( RCSe / MUM ) ,Min( MUR ,DS ) ) ) * Min( ( Min( CS ,CS ) / ( RRSe / MUC ) ) ,( ( MUM - DS ) - ( MLU / DS ) ) ) ) ) * ( Min( ( Min( Min( RRSe ,MUM ) ,( RCSe - MUR ) ) * Max( ( MLU - CS ),Max( RMSe,RMSe ) ) ) ,Min( ( ( RCSe * MUR ) + Max( RCSe,MLU ) ) ,( Max( MLU,RCSe ) / ( RMSe / MUR ) ) ) ) / Max( ( ( ( CS + DS ) - Max( MUC,RRSe ) ) * Max( Max( MUC,DS ),Max( MUM,RMSe ) ) ),Min( ( ( RRSe * MUM ) / Min( MUM ,CS ) ) ,Min( ( CS * RMSe ) ,( RMSe - DS ) ) ) ) ) ) ) - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),Min( ( Max( ( MLU * MUR ),( CS - RRSe ) ) + ( ( RRSe / CS ) / ( MUM * DS ) ) ) ,( ( Min( RMSe ,MUR ) - ( CS * RCSe ) ) - Max( ( RCSe + MLU ),Max( DS,MUM ) ) ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / RRSe ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6074279261410261}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( ARS - AMS ) - Min( BR ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( MUR + ( ( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ) * Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7285714285714285, "obj2": 0.19522998911227676}, {"determining": "( ( Const + Min( ( BR + ACS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + MUR ) / ( CS * RCSe ) )", "obj1": 0.45918367346938777, "obj2": 0.445972561927041}, {"determining": "( Max( Max( ( FirstVNF_Mem_Server - ARS ),( MRS - MDR ) ),( PN - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS / ( CS + RCSe ) )", "obj1": 0.5142857142857142, "obj2": 0.43773654951403673}, {"determining": "( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR + DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * MUM ) )", "obj1": 0.28775510204081634, "obj2": 0.6848960412440089}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( ( ( FirstVNF_Mem - ( MRS + Const ) ) / Max( ( ( DDR - MDR ) - PN ),CRS ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.3183673469387755, "obj2": 0.6309083816738259}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,RCSe ) ),( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.19387755102040816, "obj2": 0.7936041394617913}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * PN ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,( MUR + ( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7387755102040816, "obj2": 0.12417222817608065}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.2653061224489796, "obj2": 0.7058512974046721}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_RAM_Server ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) ,( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6558734592331171}, {"determining": "( ( Const + Const ) * Max( Max( ( ACS - MRS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( DS + RRSe ) / ( CS * RCSe ) )", "obj1": 0.6122448979591837, "obj2": 0.26656265767703247}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( FirstVNF_Mem - ( ( MDR - MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( Min( ( RMSe + RCSe ) ,( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.21020408163265306, "obj2": 0.7720478404678593}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * RCSe ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.5938775510204082, "obj2": 0.2775879110142}, {"determining": "( Min( Const ,Min( Min( BR ,MRS ) ,FirstVNF_RAM ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,( ( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) / ( CS * DS ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.1346938775510204, "obj2": 0.8480777705290596}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,MRS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + Min( ( MUC / MUM ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.3081632653061224, "obj2": 0.6506020369550457}, {"determining": "( ( Const + ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.22244897959183674, "obj2": 0.7538256616261748}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ACS / FirstVNF_CPU ) )", "choosing": "( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),( RMSe / MUC ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * ( Max( ( Min( MUC ,MUC ) + Max( RCSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + ( Min( ( MUR / MUR ) ,( RCSe / RMSe ) ) * Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7367548980255937}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - Max( ( ACS - ARS ),( MRS - MDR ) ) ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( ( ( MUC + RRSe ) / ( CS * RCSe ) ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5653061224489796, "obj2": 0.299040270700495}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - Max( FirstVNF_CPU_Server,CRS ) ) / ( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ) - Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( CS + ( ( MUR - MLU ) - ( ( ( RMSe + RCSe ) - ( Min( RMSe ,RCSe ) * ( MLU / RCSe ) ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.936734693877551, "obj2": 0.06239975450257591}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5387755102040817, "obj2": 0.30607022728961425}, {"determining": "( ( Const + ( ( BR + MRS ) + FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - ( DDR + ACS ) ) ) )", "choosing": "( ( MUR + RRSe ) / ( CS * RMSe ) )", "obj1": 0.45510204081632655, "obj2": 0.4614813459487137}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,BR ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( DS,( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.17346938775510204, "obj2": 0.8095887329512247}, {"determining": "( ( FirstVNF_Mem - ( MRS + Const ) ) / Max( ( ( DDR - MDR ) - PN ),CRS ) )", "choosing": "( Max( ( RCSe - RCSe ),( MUC * Max( DS,MUM ) ) ) + Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUM ) ,DS ) ) )", "obj1": 0.926530612244898, "obj2": 0.0810698779263136}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * RCSe ) ) ) ) / ( ( MUC + RRSe ) * RCSe ) )", "obj1": 0.5816326530612245, "obj2": 0.284079742527155}, {"determining": "( ( ( Const * CRS ) * ( AMS / MRS ) ) / ( ( Const + Const ) + Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "( Min( RMSe ,RCSe ) * ( MLU / RCSe ) )", "obj1": 0.22040816326530613, "obj2": 0.7707116453223507}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MLU / RCSe ) )", "obj1": 0.9734693877551021, "obj2": 0.024707851406478368}, {"determining": "Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / Min( CS ,RCSe ) )", "obj1": 0.7714285714285715, "obj2": 0.10077120393338335}, {"determining": "Min( ( ( FirstVNF_RAM * CRS ) + ( FirstVNF_RAM + CRS ) ) ,Max( ( ( FirstVNF_RAM_Server / ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( CRS * FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + Max( ( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) ),CS ) ) )", "obj1": 0.15510204081632653, "obj2": 0.8359139847924262}, {"determining": "( ( ACS - ARS ) / ( PN - FirstVNF_CPU ) )", "choosing": "( Max( CS,( Max( ( MUC * MUM ),MUC ) + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.1673469387755102, "obj2": 0.8332890152682816}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * DS ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.7448979591836735, "obj2": 0.11870948011103427}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Min( RMSe ,MUC ) * ( MLU / RCSe ) )", "obj1": 0.9734693877551021, "obj2": 0.024707851406478368}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.7816326530612245, "obj2": 0.0967687922477335}, {"determining": "( ( ( RRS + CRS ) - ARS ) / ( PN - ( ( FirstVNF_Mem_Server * ACS ) / ( ACS / BR ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( ( Min( RMSe ,RCSe ) * ( MLU / RCSe ) ) ,MUM ) ,DS ) )", "obj1": 0.9959183673469387, "obj2": 0.002277893361461204}, {"determining": "Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / Min( CS ,RCSe ) )", "obj1": 0.7714285714285715, "obj2": 0.10077120393338335}, {"determining": "( ( ( Const * CRS ) - ( AMS / MRS ) ) / ( ( Const + Const ) + Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "( ( MUC / RRSe ) / ( CS * RCSe ) )", "obj1": 0.2612244897959184, "obj2": 0.7255948293190642}, {"determining": "( Min( Const ,Min( Min( BR ,MRS ) ,( MRS - MDR ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * DS ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.23877551020408164, "obj2": 0.7475251431001217}, {"determining": "( ( Const + ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.24081632653061225, "obj2": 0.7464375294382289}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,AMS )", "choosing": "( ( CS + Min( ( MUR - MLU ) ,( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8, "obj2": 0.09281943668330467}], "8": [{"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( ARS - ( ( MDR / MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( RRSe + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Min( Min( BR ,MRS ) ,( MRS - MDR ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,( MUR + ( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),( ( ( ACS - ARS ) / ( PN - FirstVNF_CPU ) ) * RRS ) ) ) )", "choosing": "( ( ( Max( ( MUC * MUM ),MUC ) + ( MUC / DS ) ) + RRSe ) / ( CS * RCSe ) )", "obj1": 0.12448979591836734, "obj2": 0.8623061036578186}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,CS ) ,RCSe ) )", "obj1": 0.9163265306122449, "obj2": 0.08741787614049619}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ( ACS - ARS ) - ( MRS - MDR ) ),( PN - Max( DDR,ACS ) ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,MUR ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( ( DS / ( CS * RCSe ) ) * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5224489795918368, "obj2": 0.31926259448105754}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,ARS ) )", "choosing": "( CS + ( Max( ( RMSe + RRSe ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.08959991979034784}, {"determining": "( Max( Max( Max( ACS,ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) + ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS - RCSe ) )", "obj1": 0.5204081632653061, "obj2": 0.42475204359723645}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( MUC * MUM ) / ( CS * RCSe ) )", "obj1": 0.6693877551020408, "obj2": 0.22858806669549686}, {"determining": "( ( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,RRS ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS / RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.4163265306122449, "obj2": 0.5144246380857613}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.44285714285714284, "obj2": 0.4636484025428562}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * PN ) / ( BR - RRS ) ) ) ,AMS )", "choosing": "( Max( CS,( MUR + ( CS / MUM ) ) ) * ( MUR + CS ) )", "obj1": 0.736734693877551, "obj2": 0.12766708306102958}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( Max( CRS,MRS ) ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.6346938775510204, "obj2": 0.2482713002861724}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( ARS - AMS ) - Min( BR ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( MUR + ( ( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ) * Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7285714285714285, "obj2": 0.19522998911227676}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( RCSe - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),Min( ( Max( ( MLU * MUR ),( CS - RRSe ) ) + ( ( RRSe / CS ) / ( MUM * DS ) ) ) ,( ( Min( RMSe ,MUR ) - ( CS * RCSe ) ) - Max( ( RCSe + MLU ),Max( DS,MUM ) ) ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / MUC ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5544468887389126}, {"determining": "( ( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,RRS ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS / RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.7020408163265306, "obj2": 0.20388993858120957}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - Max( ( ACS - ARS ),( MRS - MDR ) ) ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( ( ( MUC + RRSe ) / ( CS * RCSe ) ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5653061224489796, "obj2": 0.299040270700495}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_CPU ,( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( ARS + MRS ) ,BR ) ) ),( ( ACS * FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC + Min( ( ( Min( RMSe ,MUC ) * ( MLU / RMSe ) ) / MLU ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.46530612244897956, "obj2": 0.44566704432771614}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,RCSe ) ),( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.19387755102040816, "obj2": 0.7936041394617913}, {"determining": "( Max( Max( ( FirstVNF_Mem_Server - ARS ),( MRS - MDR ) ),( PN - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS / ( CS + RCSe ) )", "obj1": 0.5142857142857142, "obj2": 0.43773654951403673}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * MUR ) )", "obj1": 0.23673469387755103, "obj2": 0.7328281390142971}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.3551020408163265, "obj2": 0.584443772874222}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.24285714285714285, "obj2": 0.7134887067239531}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_RAM_Server ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) ,( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6558734592331171}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,BR ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( DS,( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.17346938775510204, "obj2": 0.8095887329512247}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( ARS - ( ( MDR / ( ( FirstVNF_Mem_Server * ACS ) / ( ACS / BR ) ) ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( MUR + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + MUM ) ) ) )", "obj1": 0.9714285714285714, "obj2": 0.01200280482364871}, {"determining": "( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR + DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * MUM ) )", "obj1": 0.28775510204081634, "obj2": 0.6848960412440089}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.35714285714285715, "obj2": 0.5660770675152016}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,( ( ( PN * FirstVNF_RAM_Server ) + Max( PN,MRS ) ) + ( ( Const * FirstVNF_CPU_Server ) - Min( ACS ,ACS ) ) ) ) ) ) ) + ( ( ( ( MRS - FirstVNF_Mem_Server ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( Min( RMSe ,MUC ) - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),Min( ( Max( ( MLU * MUR ),( CS - RRSe ) ) + ( ( RRSe / CS ) / ( MUM * DS ) ) ) ,( ( Min( RMSe ,MUR ) - ( CS * RCSe ) ) - Max( ( RCSe + MLU ),Max( DS,MUM ) ) ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / RRSe ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.32653061224489793, "obj2": 0.630721902255977}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,MRS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + Min( ( MUC / MUM ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.3081632653061224, "obj2": 0.6506020369550457}, {"determining": "( ( Const + Min( ACS ,BR ) ) * Min( ( ( ARS - ( ( MDR - MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( CS,( MUR + ( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / DS ),Max( RMSe,MUR ) ) ) / DS ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.15306122448979592, "obj2": 0.8316094777529073}, {"determining": "( ( ACS - ARS ) / ( Min( PN ,CRS ) + ( MDR - PN ) ) )", "choosing": "( Max( CS,( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.6061224489795919, "obj2": 0.2542507632393992}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_CPU ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( MDR - PN ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC + MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,RCSe ) ),( MUR + ( MUC / DS ) ) ) * ( ( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) ) + CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8158132916488803}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * RCSe ) ) ) ) / ( ( MUC + RRSe ) * RCSe ) )", "obj1": 0.5816326530612245, "obj2": 0.284079742527155}, {"determining": "( ( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) ) / ( PN - ( ( RRS * ACS ) / ( ACS / BR ) ) ) )", "choosing": "Min( ( ( MUC / MLU ) * MUR ) ,Min( Min( ( ( MLU / RCSe ) * ( RCSe / RCSe ) ) ,MUM ) ,DS ) )", "obj1": 0.963265306122449, "obj2": 0.03310275345524022}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5359123352371727}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,( ( ( PN * FirstVNF_RAM_Server ) + Max( PN,MRS ) ) + ( ( Const * FirstVNF_CPU_Server ) - Min( ACS ,ACS ) ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( ( RRSe / RMSe ) ,Min( MLU ,CS ) ) - ( Max( MUC,MUC ) * Max( RRSe,MUC ) ) ) - Max( ( Min( MUR ,MUM ) + Min( CS ,RRSe ) ),( ( MUM / MUM ) - ( RCSe - RMSe ) ) ) ) + ( ( Min( ( RRSe * MUC ) ,( RMSe + CS ) ) + Max( Max( RCSe,RCSe ),Max( MUM,CS ) ) ) + Max( ( Max( MLU,RRSe ) / ( RMSe - CS ) ),Min( ( MUR * RMSe ) ,Min( RCSe ,MUM ) ) ) ) ),Min( ( ( ( ( MUM + RRSe ) + ( MUM + MLU ) ) * ( ( MUM - MLU ) * ( CS / MLU ) ) ) - ( ( ( CS / MUR ) + Min( MUM ,RMSe ) ) + Min( ( RRSe + MUR ) ,( MUR * MUR ) ) ) ) ,( ( ( ( CS + MUM ) - Min( MUM ,MUM ) ) - ( Min( RCSe ,RMSe ) - ( CS / RMSe ) ) ) / Min( ( Max( RMSe,DS ) / ( RRSe + MUR ) ) ,Max( ( MLU + MUR ),( DS + MUR ) ) ) ) ) ) * ( ( ( Max( ( ( RMSe - MUR ) - Min( MUC ,MLU ) ),Min( Min( RRSe ,RRSe ) ,( MUC / MUM ) ) ) * ( ( Max( RCSe,MUM ) * ( RCSe - DS ) ) / Max( ( RCSe + RMSe ),( CS - MLU ) ) ) ) * ( Max( ( ( MUM + RRSe ) * ( DS + DS ) ),Min( ( RCSe / MUM ) ,Min( MUR ,DS ) ) ) * Min( ( Min( CS ,CS ) / ( RRSe / MUC ) ) ,( ( MUM - DS ) - ( MLU / DS ) ) ) ) ) * ( Min( ( Min( Min( RRSe ,MUM ) ,( RCSe - MUR ) ) * Max( ( MLU - CS ),Max( RMSe,RMSe ) ) ) ,Min( ( ( RCSe * MUR ) + Max( RCSe,MLU ) ) ,( Max( MLU,RCSe ) / ( RMSe / MUR ) ) ) ) / Max( ( ( ( CS + DS ) - Max( MUC,RRSe ) ) * Max( Max( MUC,DS ),Max( MUM,RMSe ) ) ),Min( ( ( RRSe * MUM ) / Min( MUM ,CS ) ) ,Min( ( CS * RMSe ) ,( RMSe - DS ) ) ) ) ) ) ) - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),Min( ( Max( ( MLU * MUR ),( CS - RRSe ) ) + ( ( RRSe / CS ) / ( MUM * DS ) ) ) ,( ( Min( RMSe ,MUR ) - ( CS * RCSe ) ) - Max( ( RCSe + MLU ),Max( DS,MUM ) ) ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / RRSe ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6074279261410261}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ACS / FirstVNF_CPU ) ) ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),( RMSe / MUC ) ) ) ),( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.20408163265306123, "obj2": 0.7778438007482656}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,( ( ( PN * FirstVNF_RAM_Server ) + Max( PN,MRS ) ) + ( ( Const * FirstVNF_CPU_Server ) - Min( ACS ,ACS ) ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( Min( ( RRSe / RMSe ) ,Min( MLU ,CS ) ) - ( Max( MUC,MUC ) * Max( RRSe,MUC ) ) ) - Max( ( Min( MUR ,MUM ) + Min( CS ,RRSe ) ),( ( MUM / MUM ) - ( RCSe - RMSe ) ) ) ) + ( ( Min( ( RRSe * MUC ) ,( RMSe + CS ) ) + Max( Max( RCSe,RCSe ),Max( MUM,CS ) ) ) + Max( ( Max( MLU,RRSe ) / ( RMSe - CS ) ),Min( ( MUR * RMSe ) ,Min( RCSe ,MUM ) ) ) ) ),Min( ( ( ( ( MUM + RRSe ) + ( MUM + MLU ) ) * ( ( MUM - MLU ) * ( CS / MLU ) ) ) - ( ( ( CS / MUR ) + Min( MUM ,RMSe ) ) + Min( ( RRSe + MUR ) ,( MUR * MUR ) ) ) ) ,( ( ( ( CS + MUM ) - Min( MUM ,MUM ) ) - ( Min( RCSe ,RMSe ) - ( CS / RMSe ) ) ) / Min( ( Max( RMSe,DS ) / ( RRSe + MUR ) ) ,Max( ( MLU + MUR ),( DS + MUR ) ) ) ) ) ) * ( ( ( Max( ( ( RMSe - MUR ) - Min( MUC ,MLU ) ),Min( Min( RRSe ,RRSe ) ,( MUC / MUM ) ) ) * ( ( Max( RCSe,MUM ) * ( RCSe - DS ) ) / Max( ( RCSe + RMSe ),( CS - MLU ) ) ) ) * ( Max( ( ( MUM + RRSe ) * ( DS + DS ) ),Min( ( RCSe / MUM ) ,Min( MUR ,DS ) ) ) * Min( ( Min( CS ,CS ) / ( RRSe / MUC ) ) ,( ( MUM - DS ) - ( MLU / DS ) ) ) ) ) * ( Min( ( Min( Min( RRSe ,MUM ) ,( RCSe - MUR ) ) * Max( ( MLU - CS ),Max( RMSe,RMSe ) ) ) ,Min( ( ( RCSe * MUR ) + Max( RCSe,MLU ) ) ,( Max( MLU,RCSe ) / ( RMSe / MUR ) ) ) ) / Max( ( ( ( CS + DS ) - Max( MUC,RRSe ) ) * Max( Max( MUC,DS ),Max( MUM,RMSe ) ) ),Min( ( ( RRSe * MUM ) / Min( MUM ,CS ) ) ,Min( ( CS * RMSe ) ,( RMSe - DS ) ) ) ) ) ) ) - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),Min( ( Max( ( MLU * MUR ),( CS - RRSe ) ) + ( ( RRSe / CS ) / ( MUM * DS ) ) ) ,( ( Min( RMSe ,MUR ) - ( CS * RCSe ) ) - Max( ( RCSe + MLU ),Max( DS,MUM ) ) ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / RRSe ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6074279261410261}, {"determining": "( Min( Const ,Min( Min( BR ,MRS ) ,( ( Const + ( ( ARS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,( ( Max( ( Min( MUC ,MUR ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) / CS ) ) ) / ( CS * RCSe ) )", "obj1": 0.14081632653061224, "obj2": 0.8396036145606598}, {"determining": "( ( RRS + ( MDR * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( Max( CS,Max( MUR,MUC ) ) / Min( CS ,RCSe ) )", "obj1": 0.9448979591836735, "obj2": 0.045908697825062406}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + Max( ( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) ),CS ) ) )", "obj1": 0.610204081632653, "obj2": 0.2509513880617656}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5387755102040817, "obj2": 0.30607022728961425}, {"determining": "( ( Const + ( ( BR + MRS ) + FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - ( DDR + ACS ) ) ) )", "choosing": "( ( MUR + RRSe ) / ( CS * RMSe ) )", "obj1": 0.45510204081632655, "obj2": 0.4614813459487137}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( CRS * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * DS ) ) ) ) / ( CS * CS ) )", "obj1": 0.7448979591836735, "obj2": 0.11870948011103427}, {"determining": "( ( Const + ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * RCSe ) ) ) ) / ( ( MUC + RRSe ) * RCSe ) )", "obj1": 0.21428571428571427, "obj2": 0.7697140631506357}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.27755102040816326, "obj2": 0.7012135604408187}, {"determining": "( ( Const + ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.22244897959183674, "obj2": 0.7538256616261748}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * RCSe ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.5938775510204082, "obj2": 0.2775879110142}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5285714285714286, "obj2": 0.3137410884682314}, {"determining": "( ( RRS + ( MDR * Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( ( MUC + Min( ( MUC / MLU ) ,MUR ) ) * ( MLU / RCSe ) )", "obj1": 0.9673469387755103, "obj2": 0.027438863922881182}, {"determining": "( ( Const + ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.22244897959183674, "obj2": 0.7538256616261748}], "9": [{"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( ARS - ( ( MDR / MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( RRSe + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( ARS - ( ( MDR / MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( RRSe + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ACS ,BR ) ) * Min( ( ( ARS - ( ( MDR - MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - ( CS + RMSe ) ) ),Max( CS,( MUR + ( Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),Max( ( RRSe / DS ),Max( RMSe,MUR ) ) ) / DS ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.12244897959183673, "obj2": 0.8753534973072951}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,CS ) ,RCSe ) )", "obj1": 0.9163265306122449, "obj2": 0.08741787614049619}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ( ACS - ARS ) - ( MRS - MDR ) ),( PN - Max( DDR,ACS ) ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,MUR ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( ( DS / ( CS * RCSe ) ) * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5224489795918368, "obj2": 0.31926259448105754}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,Min( ( ( ( CRS * DDR ) + ( ACS - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,ARS ) )", "choosing": "( CS + ( Max( ( RMSe + RRSe ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.08959991979034784}, {"determining": "( Max( Max( Max( ACS,ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) + ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS - RCSe ) )", "obj1": 0.5204081632653061, "obj2": 0.42475204359723645}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_CPU ,( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( ARS + MRS ) ,BR ) ) ),( ( ACS * FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC + Min( ( ( Min( RMSe ,MUC ) * ( MLU / RMSe ) ) / MLU ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.46530612244897956, "obj2": 0.44566704432771614}, {"determining": "( ( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,RRS ) ),( BR * DDR ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS / RRSe ) - ( CS + RMSe ) ) ),Max( CS,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.3408163265306122, "obj2": 0.585873258738093}, {"determining": "( Max( Max( ( FirstVNF_Mem_Server - ARS ),( MRS - MDR ) ),( PN - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS / ( CS + RCSe ) )", "obj1": 0.5142857142857142, "obj2": 0.43773654951403673}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,( MUR + ( CS / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7326530612244898, "obj2": 0.12949800689178542}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( ARS - AMS ) - Min( BR ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( MUR + ( ( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ) * Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7285714285714285, "obj2": 0.19522998911227676}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( RRS - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,( ( ( PN * FirstVNF_RAM_Server ) + Max( PN,MRS ) ) + ( ( Const * FirstVNF_CPU_Server ) - Min( ACS ,ACS ) ) ) ) ) ) ) + ( ( ( ( MRS - FirstVNF_Mem_Server ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( Min( RMSe ,MUC ) - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),( ( MLU / RCSe ) * ( MLU / RCSe ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / RRSe ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6305545011234207}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( MUC * MUM ) / ( CS * RCSe ) )", "obj1": 0.6693877551020408, "obj2": 0.22858806669549686}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.4346938775510204, "obj2": 0.5008232496656866}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.35714285714285715, "obj2": 0.5660770675152016}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.24285714285714285, "obj2": 0.7134887067239531}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.44285714285714284, "obj2": 0.4636484025428562}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * MUR ) )", "obj1": 0.23673469387755103, "obj2": 0.7328281390142971}, {"determining": "( ( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( CRS - AMS ) - Min( ACS ,RRS ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS / RRSe ) - ( CS * RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.689795918367347, "obj2": 0.21240249449357573}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( FirstVNF_RAM + ARS ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( ( RRSe + RRSe ) / ( CS * MUM ) ) / ( CS * RCSe ) )", "obj1": 0.7775510204081633, "obj2": 0.0983098989364295}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / ARS ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),( ( BR - DDR ) * ( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( MUC * MUM ) / ( MUM * RCSe ) )", "obj1": 0.6571428571428571, "obj2": 0.24634037761254468}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * RCSe ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.5938775510204082, "obj2": 0.2775879110142}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),( ( ( ACS - ARS ) / ( PN - FirstVNF_CPU ) ) * RRS ) ) ) )", "choosing": "( ( ( Max( ( MUC * MUM ),MUC ) + ( MUC / DS ) ) + RRSe ) / ( CS * RCSe ) )", "obj1": 0.12448979591836734, "obj2": 0.8623061036578186}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( CRS * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * DS ) ) ) ) / ( CS * CS ) )", "obj1": 0.746938775510204, "obj2": 0.1167845095965978}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) - Max( AMS,FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( RRSe,( Max( RRSe,MLU ) * MUC ) ) / ( CS * RCSe ) )", "obj1": 0.2653061224489796, "obj2": 0.6997043631500651}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( Max( CRS,MRS ) ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.6346938775510204, "obj2": 0.2482713002861724}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( RCSe - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),Min( ( Max( ( MLU * MUR ),( CS - RRSe ) ) + ( ( RRSe / CS ) / ( MUM * DS ) ) ) ,( ( Min( RMSe ,MUR ) - ( CS * RCSe ) ) - Max( ( RCSe + MLU ),Max( DS,MUM ) ) ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / MUC ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5544468887389126}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ACS / FirstVNF_CPU ) ) ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),( RMSe / MUC ) ) ) ),( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.20408163265306123, "obj2": 0.7778438007482656}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5387755102040817, "obj2": 0.30607022728961425}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,MRS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + Min( ( MUC / MUM ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.3081632653061224, "obj2": 0.6506020369550457}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_RAM_Server ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) ,( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6558734592331171}, {"determining": "( ( Const + ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.21224489795918366, "obj2": 0.7635354942050718}, {"determining": "( ( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_RAM_Server ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) ,( ( CS * RCSe ) - Min( Min( ( MUC / ( CS + RMSe ) ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.9428571428571428, "obj2": 0.047163896035474745}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - BR ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * DS ) ) ) ) / ( CS * ( CS / DS ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005585315264756701}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( Max( CRS,MRS ) ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * MRS ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( RRSe + RMSe ) ) / ( CS * RCSe ) )", "obj1": 0.4530612244897959, "obj2": 0.4575368423311218}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( ARS - ( ( MDR / ( ( FirstVNF_Mem_Server * ACS ) / ( ACS / BR ) ) ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( MUR + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( CS - ( DS + MUM ) ) ) )", "obj1": 0.9714285714285714, "obj2": 0.01200280482364871}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.4061224489795918, "obj2": 0.5359123352371727}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * MUM ) )", "obj1": 0.2897959183673469, "obj2": 0.6751500766752199}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * MUR ) )", "obj1": 0.3183673469387755, "obj2": 0.6323318602256899}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.3551020408163265, "obj2": 0.584443772874222}, {"determining": "( Min( Const ,Min( Min( BR ,MRS ) ,( ( Const + ( ( ARS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,( ( Max( ( Min( MUC ,MUR ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) / CS ) ) ) / ( CS * RCSe ) )", "obj1": 0.14081632653061224, "obj2": 0.8396036145606598}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + Max( ( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) ),CS ) ) )", "obj1": 0.610204081632653, "obj2": 0.2509513880617656}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_CPU ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( MDR - PN ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC + MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,RCSe ) ),( MUR + ( MUC / DS ) ) ) * ( ( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) ) + CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8158132916488803}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( Max( CRS,DDR ),( MDR - PN ) ) )", "choosing": "( ( CS - ( DS + RCSe ) ) * ( MUR + CS ) )", "obj1": 0.4306122448979592, "obj2": 0.5141805319055643}, {"determining": "( Max( ( ACS / ARS ),( MRS - ACS ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,RRS ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MUR - ( MUR * MUR ) ) - ( ( MLU / RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS - RCSe ) )", "obj1": 0.41020408163265304, "obj2": 0.5156537030092517}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( ( ACS * FirstVNF_Mem ) - Const ) ) ) ,Min( ( ( ( CRS * DDR ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,ARS ) )", "choosing": "( ( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) ) + ( Max( ( RMSe + RRSe ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8, "obj2": 0.09275288609860922}, {"determining": "( ( Const + ( ( AMS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.22244897959183674, "obj2": 0.7538256616261748}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( CS,( MUR + ( MUC / DS ) ) ) * Min( ( ( MLU / RCSe ) * ( MLU / RCSe ) ) ,MUM ) )", "obj1": 0.9612244897959183, "obj2": 0.03948529308534384}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( RCSe - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),Min( ( Max( ( MLU * MUR ),( CS - RRSe ) ) + ( ( RRSe / CS ) / ( MUM * DS ) ) ) ,( ( Min( RMSe ,MUR ) - ( CS * RCSe ) ) - Max( ( RCSe + MLU ),Max( DS,MUM ) ) ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / RRSe ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5544468887389126}, {"determining": "( ( RRS + ( MDR * Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) ) + ( FirstVNF_Mem_Server / ( Min( Min( ( ACS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ,Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ARS ) ) ) - ACS ) ) )", "choosing": "( ( MUC + Min( ( MUC / MLU ) ,MUR ) ) * ( MLU / RCSe ) )", "obj1": 0.9673469387755103, "obj2": 0.027438863922881182}], "10": [{"determining": "Min( ( ( ( FirstVNF_RAM_Server + BR ) - Max( ARS,PN ) ) / ( ( CRS * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MUR - RRSe ) * ( MLU + DS ) ) ) ) ) ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ( BR + MRS ) ,BR ) ) * Min( ( ( ARS - ( ( MDR / MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) * Min( PN ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( CS + ( ( MUR - RRSe ) - ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( RRSe + RMSe ) ) ) ) ) + ( Max( ( RMSe + MUR ),Min( RMSe ,MUC ) ) / ( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ACS ,BR ) ) * Min( ( ( ARS - ( ( MDR - MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( Max( ( MUC * MUM ),MUC ) + ( MUC / DS ) ) + RRSe ) / ( CS * RCSe ) )", "obj1": 0.10408163265306122, "obj2": 0.8790969695832717}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,CS ) ,RCSe ) )", "obj1": 0.9163265306122449, "obj2": 0.08741787614049619}, {"determining": "( Max( Max( ( FirstVNF_Mem_Server - ARS ),( MRS - MDR ) ),( PN - Max( DDR,ACS ) ) ) / Max( ( AMS + FirstVNF_RAM_Server ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RRSe,MLU ),MUC ) / ( CS + RCSe ) )", "obj1": 0.4857142857142857, "obj2": 0.40422790625428767}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ( ACS - ARS ) - ( MRS - MDR ) ),( PN - Max( DDR,ACS ) ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,MUR ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( ( DS / ( CS * RCSe ) ) * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5224489795918368, "obj2": 0.31926259448105754}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,Min( ( ( ( CRS * DDR ) + ( ACS - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,ARS ) )", "choosing": "( CS + ( Max( ( RMSe + RRSe ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.08959991979034784}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,( MUR + ( CS / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7326530612244898, "obj2": 0.12949800689178542}, {"determining": "( ( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,RRS ) ),( BR * DDR ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS / RRSe ) - ( CS + RMSe ) ) ),Max( CS,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.3408163265306122, "obj2": 0.585873258738093}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) )", "choosing": "( Max( ( ( MUR * CS ) - ( ( CS * RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5673469387755102, "obj2": 0.2967124928810841}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( ARS - AMS ) - Min( BR ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( MUR + ( ( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ) * Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7285714285714285, "obj2": 0.19522998911227676}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + Max( ( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) ),CS ) ) )", "obj1": 0.9346938775510204, "obj2": 0.05807333782174495}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.4346938775510204, "obj2": 0.5008232496656866}, {"determining": "( ( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( MDR - AMS ) * ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + MUR ) - ( MUR * MUR ) ) - ( ( MUR / RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,Max( CS,Max( Max( RRSe,MLU ),MUC ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.47959183673469385, "obj2": 0.43083810001811595}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.44285714285714284, "obj2": 0.4636484025428562}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + Max( ( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) ),CS ) ) )", "obj1": 0.610204081632653, "obj2": 0.2509513880617656}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_CPU ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( MDR - PN ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC + MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,RCSe ) ),( MUR + ( MUC / DS ) ) ) * ( ( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) ) + CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8158132916488803}, {"determining": "( ( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( CRS - AMS ) - Min( ACS ,RRS ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS / RRSe ) - ( CS * RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.689795918367347, "obj2": 0.21240249449357573}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / ARS ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),( ( BR - DDR ) * ( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( MUC * MUM ) / ( MUM * RCSe ) )", "obj1": 0.6571428571428571, "obj2": 0.24634037761254468}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_CPU ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,( FirstVNF_RAM + ARS ) ),Max( ( MDR - PN ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC + MLU ) ,MUR ) ,( MLU / RCSe ) ),( MUR + ( MUC / DS ) ) ) * ( ( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) ) + CS ) )", "obj1": 0.17551020408163265, "obj2": 0.813981904448284}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( RRS - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,( ( ( PN * FirstVNF_RAM_Server ) + Max( PN,MRS ) ) + ( ( Const * FirstVNF_CPU_Server ) - Min( ACS ,ACS ) ) ) ) ) ) ) + ( ( ( ( MRS - FirstVNF_Mem_Server ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( Min( RMSe ,MUC ) - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),( ( MLU / RCSe ) * ( MLU / RCSe ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / RRSe ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6305545011234207}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_CPU ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + ACS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( MDR - PN ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( CS,Max( ( RRSe * MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7848735612078944}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( ACS * FirstVNF_Mem ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( RCSe / ( CS * RCSe ) )", "obj1": 0.21224489795918366, "obj2": 0.7537895197306558}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( MUC * MUM ) / ( CS * RCSe ) )", "obj1": 0.6693877551020408, "obj2": 0.22858806669549686}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( BR / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( Max( CS,Max( MUR,( ( MUC + DS ) / ( CS * DS ) ) ) ) / ( CS * CS ) )", "obj1": 0.27346938775510204, "obj2": 0.6824165731305493}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * MUM ) )", "obj1": 0.2897959183673469, "obj2": 0.6751500766752199}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.35714285714285715, "obj2": 0.5660770675152016}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( Max( CRS,MRS ) ,Const ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( CS,Max( MUR,( ( Max( ( Min( MUC ,MUR ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) / CS ) ) ) / ( CS * RCSe ) )", "obj1": 0.7163265306122449, "obj2": 0.20043435211644514}, {"determining": "( Max( ( ACS / ARS ),( MRS - ACS ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,RRS ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MUR - ( MUR * MUR ) ) - ( ( MLU / RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS - RCSe ) )", "obj1": 0.41020408163265304, "obj2": 0.5156537030092517}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.3081632653061224, "obj2": 0.64924379883897}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR + Const ) ) ) ,AMS )", "choosing": "( ( MUC * MUM ) / ( CS + RCSe ) )", "obj1": 0.773469387755102, "obj2": 0.10093788642959486}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( Max( CRS,MRS ) ,Const ) ),( ( ( MRS + FirstVNF_RAM_Server ) * ( ACS * MRS ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( RRSe + RMSe ) ) / ( CS * RCSe ) )", "obj1": 0.5897959183673469, "obj2": 0.28044254495483356}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_RAM_Server ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) ,( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6558734592331171}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),( ( ( ACS - ARS ) / ( PN - FirstVNF_CPU ) ) * RRS ) ) ) )", "choosing": "( ( ( Max( ( MUC * MUM ),MUC ) + ( MUC / DS ) ) + RRSe ) / ( CS * RCSe ) )", "obj1": 0.12448979591836734, "obj2": 0.8623061036578186}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( RCSe - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),Min( ( Max( ( MLU * MUR ),( CS - RRSe ) ) + ( ( RRSe / CS ) / ( MUM * DS ) ) ) ,( ( Min( RMSe ,MUR ) - ( CS * RCSe ) ) - Max( ( RCSe + MLU ),Max( DS,MUM ) ) ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / MUC ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5544468887389126}, {"determining": "( Min( Const ,Min( Min( BR ,MRS ) ,( ( Const + ( ( ARS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,( ( Max( ( Min( MUC ,MUR ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) / CS ) ) ) / ( CS * RCSe ) )", "obj1": 0.14081632653061224, "obj2": 0.8396036145606598}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( MRS - MDR ) ) / Max( Max( CRS,DDR ),( MDR - PN ) ) )", "choosing": "( ( CS - ( ( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ) * Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) + RCSe ) ) * ( MUR + CS ) )", "obj1": 0.5979591836734693, "obj2": 0.27717910085955777}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_CPU ,( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( ARS + MRS ) ,BR ) ) ),( ( ACS * FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC + Min( ( ( Min( RMSe ,MUC ) * ( MLU / RMSe ) ) / MLU ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.46530612244897956, "obj2": 0.44566704432771614}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - BR ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * DS ) ) ) ) / ( CS * ( CS / DS ) ) )", "obj1": 0.9857142857142858, "obj2": 0.005585315264756701}, {"determining": "( Min( Const ,Min( Min( BR ,MRS ) ,( ( Const + ( ( ARS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,( ( Max( ( Min( MUC ,MUR ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) / CS ) ) ) / ( CS * RCSe ) )", "obj1": 0.14081632653061224, "obj2": 0.8396036145606598}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ACS / FirstVNF_CPU ) ) ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),( RMSe / MUC ) ) ) ),( MUR + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.20408163265306123, "obj2": 0.7778438007482656}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( MUR + RCSe ) / ( CS * DS ) ) ) ) / ( CS * CS ) )", "obj1": 0.746938775510204, "obj2": 0.1167845095965978}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5387755102040817, "obj2": 0.30607022728961425}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) - Const ) ) ) ,AMS )", "choosing": "( ( Max( CS,( MUR + ( CS / DS ) ) ) * ( MUR + CS ) ) / ( CS * RCSe ) )", "obj1": 0.4020408163265306, "obj2": 0.5411068245083227}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / ARS ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),( ( BR - DDR ) * ( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( MUC * MUM ) / ( MUM * RCSe ) )", "obj1": 0.6857142857142857, "obj2": 0.22467027804149461}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.3551020408163265, "obj2": 0.584443772874222}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - MRS ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( MDR - PN ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Min( RMSe ,MUC ) - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),( ( MLU / RCSe ) * ( MLU / RCSe ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( Min( DS ,RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / RRSe ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.25918367346938775, "obj2": 0.7097630305899549}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.24285714285714285, "obj2": 0.7134887067239531}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( Max( CRS,DDR ),( MDR - PN ) ) )", "choosing": "( ( CS - ( DS + RCSe ) ) * ( MUR + CS ) )", "obj1": 0.4306122448979592, "obj2": 0.5141805319055643}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * MUR ) )", "obj1": 0.22448979591836735, "obj2": 0.7481519393762491}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( CRS * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * DS ) ) ) ) / ( CS * CS ) )", "obj1": 0.746938775510204, "obj2": 0.1167845095965978}], "11": [{"determining": "( ( Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC / MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,Max( ( Min( MUC ,MUC ) + Max( RRSe,CS ) ),( RMSe / MUC ) ) ) ),( MLU + ( MUC / DS ) ) ) * ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + BR ) - Max( ARS,PN ) ) / ( ( CRS * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MUR - RRSe ) * ( MLU + DS ) ) ) ) ) ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ACS ,BR ) ) * Min( ( ( ARS - ( ( MDR - MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( Max( ( MUC * MUM ),MUC ) + ( MUC / DS ) ) + RRSe ) / ( CS * RCSe ) )", "obj1": 0.10408163265306122, "obj2": 0.8790969695832717}, {"determining": "( Max( Max( ( FirstVNF_Mem_Server - ARS ),( MRS - MDR ) ),( PN - Max( DDR,ACS ) ) ) / Max( ( AMS + FirstVNF_RAM_Server ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RRSe,MLU ),MUC ) / ( CS + RCSe ) )", "obj1": 0.4857142857142857, "obj2": 0.40422790625428767}, {"determining": "Min( ( Max( Max( CRS,DDR ),( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) - ( BR - Const ) ) ) ,Min( ( ( ( CRS * DDR ) + ( ACS - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,ARS ) )", "choosing": "( CS + ( Max( ( RMSe + RRSe ),Min( RMSe ,MUC ) ) / ( CS - ( DS + RCSe ) ) ) )", "obj1": 0.8061224489795918, "obj2": 0.08959991979034784}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ( ACS - ARS ) - ( MRS - MDR ) ),( PN - Max( DDR,ACS ) ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,MUR ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( ( DS / ( CS * RCSe ) ) * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5224489795918368, "obj2": 0.31926259448105754}, {"determining": "Min( ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( Max( ( MLU * MUR ),( CS - RRSe ) ) + ( ( RRSe / CS ) / ( MUM * DS ) ) ) / ( CS * DS ) ) ) ) / ( CS * CS ) )", "obj1": 0.9142857142857143, "obj2": 0.07750915650744598}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + Max( ( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) ),CS ) ) )", "obj1": 0.9346938775510204, "obj2": 0.05807333782174495}, {"determining": "Min( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) + ( MDR - BR ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( MUC + RCSe ) / ( CS * ( ( RMSe + RCSe ) - ( MUR * MUR ) ) ) ) ) ) / ( CS * ( CS / DS ) ) )", "obj1": 0.9836734693877551, "obj2": 0.006753648327276952}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.3408163265306122, "obj2": 0.5803582695351474}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( RRS - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,( ( ( PN * FirstVNF_RAM_Server ) + Max( PN,MRS ) ) + ( ( Const * FirstVNF_CPU_Server ) - Min( ACS ,ACS ) ) ) ) ) ) ) + ( ( ( ( MRS - FirstVNF_Mem_Server ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( Min( RMSe ,MUC ) - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),( ( MLU / RCSe ) * ( MLU / RCSe ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / RRSe ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.32448979591836735, "obj2": 0.6305545011234207}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( Const + ( ( ARS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( MUC * MUM ) / CS )", "obj1": 0.6836734693877551, "obj2": 0.21095350051091652}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.24285714285714285, "obj2": 0.7134887067239531}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * MUR ) )", "obj1": 0.22448979591836735, "obj2": 0.7481519393762491}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_CPU ,( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( ARS + MRS ) ,BR ) ) ),( ( ACS * FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC + Min( ( ( Min( RMSe ,MUC ) * ( MLU / RMSe ) ) / MLU ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.46530612244897956, "obj2": 0.44566704432771614}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,( MUR + ( CS / DS ) ) ) * ( MUR + CS ) )", "obj1": 0.7326530612244898, "obj2": 0.12949800689178542}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.4346938775510204, "obj2": 0.5008232496656866}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) - Const ) ) ) ,AMS )", "choosing": "( Max( ( ( MUR - ( MUR * MUR ) ) - ( ( MLU / RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS - RCSe ) )", "obj1": 0.7306122448979592, "obj2": 0.1804202547639397}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_CPU ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( MDR - PN ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC + MLU ) ,MUR ) ,Min( Min( CS ,MUC ) ,RCSe ) ),( MUR + ( MUC / DS ) ) ) * ( ( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) ) + CS ) )", "obj1": 0.16122448979591836, "obj2": 0.8158132916488803}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / ARS ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),( ( BR - DDR ) * ( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( MUC * MUM ) / ( MUM * RCSe ) )", "obj1": 0.6571428571428571, "obj2": 0.24634037761254468}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_CPU ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,( FirstVNF_RAM + ARS ) ),Max( ( MDR - PN ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( Min( Min( ( MUC + MLU ) ,MUR ) ,( MLU / RCSe ) ),( MUR + ( MUC / DS ) ) ) * ( ( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) ) + CS ) )", "obj1": 0.17551020408163265, "obj2": 0.813981904448284}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_CPU ,( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( ARS + MRS ) ,BR ) ) ),( ( ACS * FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC + Min( ( ( Min( RMSe ,MUC ) * ( MLU / RMSe ) ) / MLU ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.636734693877551, "obj2": 0.2496576115707298}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) )", "choosing": "( Max( ( ( MUR * CS ) - ( ( CS * RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5673469387755102, "obj2": 0.2967124928810841}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( CS,Max( MUR,( ( MUR + RCSe ) / ( CS * DS ) ) ) ) / ( CS * CS ) )", "obj1": 0.746938775510204, "obj2": 0.11668868371778643}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( RCSe - ( ( Max( Max( ( Max( ( RCSe * RCSe ),( RMSe / RCSe ) ) / ( ( MLU - RRSe ) * ( MLU + DS ) ) ),Max( ( ( MUC - DS ) / ( DS + DS ) ),( Min( MUM ,MUR ) + ( RCSe + CS ) ) ) ),Min( ( Max( ( MLU * MUR ),( CS - RRSe ) ) + ( ( RRSe / CS ) / ( MUM * DS ) ) ) ,( ( Min( RMSe ,MUR ) - ( CS * RCSe ) ) - Max( ( RCSe + MLU ),Max( DS,MUM ) ) ) ) ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / MUC ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.3877551020408163, "obj2": 0.5544468887389126}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( Max( ( Max( MDR,Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( PN * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( ARS / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) )", "choosing": "( Max( ( ( MUR * CS ) - ( ( CS * RRSe ) - ( CS + RMSe ) ) ),Max( ( ( Min( ( Max( MUM,MUR ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( ( DS / ( CS * RCSe ) ) * RCSe ) - ( CS + RMSe ) ) ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5897959183673469, "obj2": 0.2759874505963304}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( Max( CRS,MRS ) ,Const ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( CS,Max( MUR,( ( Max( ( Min( MUC ,MUR ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) / CS ) ) ) / ( CS * RCSe ) )", "obj1": 0.7163265306122449, "obj2": 0.20043435211644514}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_CPU ,( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( ARS + MRS ) ,BR ) ) ),( ( ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) * FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( DS + Min( ( ( Min( RMSe ,MUC ) * ( MLU / RMSe ) ) / MLU ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.3979591836734694, "obj2": 0.5372565938196971}, {"determining": "( ( Max( ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_CPU ) ) ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( MDR - PN ),( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7848735612078944}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_RAM_Server ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Min( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) ,( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.29591836734693877, "obj2": 0.6558734592331171}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.35714285714285715, "obj2": 0.5660770675152016}, {"determining": "( ( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,RRS ) ),( BR * DDR ) ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5755102040816327, "obj2": 0.2916285070664019}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,( MDR - BR ) )", "choosing": "( ( ( MUC + RCSe ) / ( CS * DS ) ) * ( MUR + CS ) )", "obj1": 0.7653061224489796, "obj2": 0.11196382966747023}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( Max( ( ( Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( CS * RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.5387755102040817, "obj2": 0.30607022728961425}, {"determining": "( ( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Const ) ),( Min( ACS ,FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) / Max( ( ( MDR - AMS ) * ( DDR / ( ( ( RRS + RRS ) - ARS ) / ( ( FirstVNF_RAM + ARS ) - FirstVNF_RAM ) ) ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe + MUR ) - ( MUR * MUR ) ) - ( ( MUR / RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,Max( CS,Max( Max( RRSe,MLU ),MUC ) ) ) ) / ( CS * RCSe ) )", "obj1": 0.47959183673469385, "obj2": 0.43083810001811595}, {"determining": "( ( Const + Min( ( BR + Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) ) ,BR ) ) * Min( FirstVNF_CPU ,( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,Min( ( ARS + MRS ) ,BR ) ) ),( ( ACS * FirstVNF_CPU ) / ( CRS + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC + Min( ( ( Min( RMSe ,MUC ) * ( MLU / RMSe ) ) / MLU ) ,MUR ) ) / ( CS * RCSe ) )", "obj1": 0.4448979591836735, "obj2": 0.46180297792618696}, {"determining": "( ( FirstVNF_Mem - ARS ) / ( ( FirstVNF_RAM + ARS ) - Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) )", "choosing": "Min( Min( ( MUC / MLU ) ,MUR ) ,( CS * RCSe ) )", "obj1": 0.9326530612244898, "obj2": 0.06613515272464934}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / ( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ( ACS - ARS ) - ( MRS - MDR ) ),( PN - Max( DDR,ACS ) ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) ) )", "choosing": "( ( Max( ( ( Min( ( Max( MUM,MUR ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) - ( MUR * MUR ) ) - ( ( ( DS / ( CS * RCSe ) ) * RCSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) ) / ( CS * RCSe ) )", "obj1": 0.6, "obj2": 0.26846545916285197}, {"determining": "( ( Const + Min( ( BR + MRS ) ,FirstVNF_Mem ) ) * Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) )", "choosing": "( ( MUC + RRSe ) / ( CS * RCSe ) )", "obj1": 0.44285714285714284, "obj2": 0.4636484025428562}, {"determining": "( ( Const + Min( ACS ,BR ) ) * Min( ( ( ARS - ( ( MDR - MRS ) - Min( ACS ,Min( ( BR + MRS ) ,BR ) ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( Max( ( MUC * MUM ),MUC ) + ( MUC / DS ) ) + RRSe ) / ( CS * RCSe ) )", "obj1": 0.1306122448979592, "obj2": 0.8484932666326694}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( CRS * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( Max( ( ( ( RMSe + RCSe ) - ( MUR * MUR ) ) - ( ( CS * RCSe ) - Min( Min( ( MUC / MLU ) ,MUR ) ,Max( ( MUC * MUM ),MUC ) ) ) ),Max( RRSe,MUC ) ) / ( CS * RCSe ) )", "obj1": 0.7795918367346939, "obj2": 0.09720601593663243}, {"determining": "( Max( ( ACS / ARS ),( MRS - ACS ) ) / Max( ( ( MDR - AMS ) - Min( ACS ,RRS ) ),( ( ( MRS + FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MUR - ( MUR * MUR ) ) - ( ( MLU / RRSe ) - ( CS + RMSe ) ) ),Max( RRSe,MUC ) ) / ( CS - RCSe ) )", "obj1": 0.41020408163265304, "obj2": 0.5156537030092517}, {"determining": "( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR * DDR ),( ( ( ACS - ARS ) / ( PN - FirstVNF_CPU ) ) * RRS ) ) ) )", "choosing": "( ( ( Max( ( MUC * MUM ),MUC ) + ( MUC / DS ) ) + RRSe ) / ( CS * RCSe ) )", "obj1": 0.12448979591836734, "obj2": 0.8623061036578186}, {"determining": "( Min( Const ,Min( Min( BR ,MRS ) ,( ( Const + ( ( ARS + FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( MUR,( ( Max( ( Min( MUC ,MUR ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / DS ) / CS ) ) ) / ( CS * RCSe ) )", "obj1": 0.14081632653061224, "obj2": 0.8396036145606598}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( FirstVNF_RAM_Server - Max( DDR,ACS ) ) ) / Max( ( ( MDR - AMS ) - Min( Max( CRS,MRS ) ,Const ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( CS,Max( MUR,( ( Max( ( Min( MUC ,MUR ) + Max( RRSe,CS ) ),Max( ( RRSe / MUC ),Max( RMSe,MUR ) ) ) / ( CS / DS ) ) / CS ) ) ) / ( CS * RCSe ) )", "obj1": 0.2, "obj2": 0.7735735276570165}, {"determining": "( RRS + ( ( ( ( MRS - FirstVNF_Mem_Server ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( Min( RMSe ,MUC ) - ( ( ( ( Max( CS,Max( Max( RRSe,MLU ),MUC ) ) / ( CS * RCSe ) ) + CS ) + ( ( ( ( ( MLU + CS ) * ( RRSe + MUC ) ) * ( ( DS + RMSe ) - ( MUR * MUM ) ) ) * ( Max( ( DS - MUM ),( CS / MUM ) ) + Min( ( RCSe + RMSe ) ,( DS * RRSe ) ) ) ) * Min( Max( ( Max( DS,CS ) / Max( MUR,CS ) ),( ( RCSe / DS ) - ( RRSe / MLU ) ) ) ,( ( ( MUR * DS ) / Min( RRSe ,MLU ) ) * ( ( CS + CS ) * Min( DS ,MUM ) ) ) ) ) ) - ( ( ( ( ( ( CS - MUR ) / Min( DS ,MUC ) ) * Max( Min( CS ,MLU ),( RMSe / MUC ) ) ) - Min( ( ( MUC + MUR ) - ( MUM - CS ) ) ,Min( ( RRSe + MUC ) ,Max( RRSe,MLU ) ) ) ) + ( Min( ( Max( DS,MUM ) - Max( RCSe,DS ) ) ,( Min( RMSe ,RMSe ) * ( MUR + RCSe ) ) ) + ( Max( Min( RRSe ,MUC ),( RMSe - DS ) ) + ( Min( CS ,DS ) - ( MUM / RCSe ) ) ) ) ) * ( ( ( Max( ( MLU * DS ),Max( MUR,MLU ) ) / ( Max( MUR,MUC ) * ( MUC + RCSe ) ) ) / ( ( ( MUC - MUR ) + ( MUM - MUC ) ) * ( ( MUM + MUC ) + Max( DS,DS ) ) ) ) + Min( ( ( ( RMSe * RRSe ) - ( CS / RRSe ) ) / Max( ( MLU / MUM ),( MUR / MLU ) ) ) ,( ( ( MUC * RMSe ) + ( RMSe * RMSe ) ) + Max( ( MUR * CS ),( MUC / RRSe ) ) ) ) ) ) ) )", "obj1": 0.3081632653061224, "obj2": 0.6481321386116098}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) - Const ) ) ) ,AMS )", "choosing": "( ( Max( CS,( MUR + ( CS / DS ) ) ) * ( MUR + CS ) ) / ( CS * RCSe ) )", "obj1": 0.40816326530612246, "obj2": 0.528148273982639}, {"determining": "( ( ( ( Min( ( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_RAM / AMS ) ) + ( ( CRS - PN ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ,( ( ( MDR / FirstVNF_Mem_Server ) / ( Const + MRS ) ) / ( ( CRS + BR ) - ( DDR / ACS ) ) ) ) - Max( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Min( CRS ,FirstVNF_Mem_Server ) ),Min( ( AMS / DDR ) ,Max( FirstVNF_RAM,PN ) ) ),( ( ( FirstVNF_RAM_Server + BR ) - Max( FirstVNF_RAM,PN ) ) + ( ( CRS / AMS ) - Min( CRS ,PN ) ) ) ) ) / ( Min( ( Min( ( BR * CRS ) ,( MRS - PN ) ) * ( Max( ACS,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ,( ( Min( MDR ,ACS ) - ( CRS / CRS ) ) / ( ( FirstVNF_RAM / AMS ) - ( AMS / FirstVNF_Mem_Server ) ) ) ) + ( Min( ( ( PN + ACS ) - ( FirstVNF_RAM_Server - PN ) ) ,( ( MDR + FirstVNF_CPU ) - Max( Const,Const ) ) ) * ( Max( ( AMS - AMS ),Max( FirstVNF_RAM_Server,RRS ) ) / Max( ( FirstVNF_RAM_Server / DDR ),Min( Const ,RRS ) ) ) ) ) ) - Max( Max( ( Max( ( ( DDR + FirstVNF_CPU ) / Min( Const ,RRS ) ),Max( Min( FirstVNF_CPU ,RRS ),Min( PN ,RRS ) ) ) + ( ( ( PN - RRS ) + ( MDR + FirstVNF_RAM ) ) / ( ( DDR + PN ) + ( DDR + MDR ) ) ) ),( Min( Min( ( ARS * FirstVNF_CPU_Server ) ,( Const + RRS ) ) ,Max( ( MRS + ARS ),( Const - FirstVNF_Mem_Server ) ) ) * Max( Min( ( FirstVNF_Mem_Server - BR ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR + BR ) - ( FirstVNF_Mem - RRS ) ) ) ) ),Min( ( ( ( ( BR / AMS ) - ( FirstVNF_RAM_Server - DDR ) ) + ( ( BR / PN ) - ( FirstVNF_CPU_Server + RRS ) ) ) + Max( Min( Max( BR,FirstVNF_CPU ) ,Min( AMS ,FirstVNF_Mem ) ),Min( ( AMS + FirstVNF_CPU ) ,Min( AMS ,Const ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,MDR ) + Min( MRS ,ARS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ACS + BR ) ) ) ,Max( ( ACS - ARS ),( MRS - MDR ) ) ) ) ) ) + ( ( ( ( ( Min( Max( PN,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) * ( ( RRS - DDR ) + Min( ACS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( DDR ,DDR ) / ( CRS * Const ) ) / ( ( FirstVNF_Mem_Server * PN ) * ( DDR - ARS ) ) ) ) + Min( ( ( ( DDR * ARS ) * ( DDR + CRS ) ) - Max( ( CRS / ACS ),( FirstVNF_CPU * ARS ) ) ) ,( Min( ( PN * DDR ) ,( FirstVNF_Mem_Server * DDR ) ) - ( Min( ARS ,ACS ) - ( Const * BR ) ) ) ) ) * Min( ( Max( Max( ( PN / PN ),Min( MRS ,ACS ) ),Max( ( FirstVNF_Mem_Server / DDR ),Min( PN ,FirstVNF_Mem ) ) ) - Max( Max( ( BR + FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ),( Min( RRS ,MRS ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server + RRS ) * ( RRS - FirstVNF_CPU_Server ) ) / Min( Min( DDR ,DDR ) ,( BR + FirstVNF_Mem_Server ) ) ) + ( ( ( FirstVNF_CPU_Server - ARS ) * Min( Const ,FirstVNF_RAM_Server ) ) * ( ( BR * ARS ) / ( Const - PN ) ) ) ) ) ) - ( Min( Max( ( ( Min( FirstVNF_RAM ,BR ) + Min( AMS ,DDR ) ) + Max( ( PN * PN ),( DDR - BR ) ) ),Max( ( Min( RRS ,CRS ) + ( FirstVNF_RAM - ACS ) ),( Min( ACS ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ,( ( ( Max( FirstVNF_Mem_Server,CRS ) / ( ACS * FirstVNF_CPU ) ) * ( ( FirstVNF_Mem - ACS ) + Max( FirstVNF_CPU_Server,ARS ) ) ) - Min( Max( Min( MDR ,Const ),( Const - FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server - DDR ) ) ) ) ) - Min( ( ( ( Min( FirstVNF_RAM_Server ,MDR ) + Max( ACS,CRS ) ) * Max( Min( CRS ,CRS ),( MRS - CRS ) ) ) + Max( ( ( CRS - MDR ) - ( FirstVNF_Mem - BR ) ),( Max( Const,FirstVNF_RAM_Server ) + ( PN * MDR ) ) ) ) ,( ( ( Min( CRS ,ARS ) + Max( MRS,FirstVNF_Mem ) ) / ( ( ARS - FirstVNF_Mem ) * Min( BR ,MRS ) ) ) + ( ( ( AMS * AMS ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem / FirstVNF_Mem ) + Min( AMS ,Const ) ) ) ) ) ) ) )", "choosing": "( Max( CS,Max( MUR,Min( ( Max( MUM,RMSe ) - ( MUR * RRSe ) ) ,( RRSe - MLU ) ) ) ) / ( CS * CS ) )", "obj1": 0.31020408163265306, "obj2": 0.6361780157656174}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) / Max( Max( CRS,DDR ),( MDR - PN ) ) )", "choosing": "( ( CS - ( DS + RCSe ) ) * ( MUR + CS ) )", "obj1": 0.4306122448979592, "obj2": 0.5141805319055643}, {"determining": "( Max( Max( ( ACS - ARS ),( MRS - MDR ) ),Max( Max( ( ACS - ARS ),( MRS - MDR ) ),( Max( RRS,MDR ) - Max( DDR,ACS ) ) ) ) / ( MDR - PN ) )", "choosing": "( ( Max( ( MLU / RCSe ),Max( RCSe,CS ) ) - ( Min( MUM ,MLU ) / CS ) ) + ( ( ( MLU / MUM ) * ( RRSe - RCSe ) ) + Max( ( Min( ( RCSe - RCSe ) ,( MUC * MUM ) ) + ( ( RMSe / DS ) / Max( RRSe,MLU ) ) ),CS ) ) )", "obj1": 0.610204081632653, "obj2": 0.2509513880617656}, {"determining": "Min( ( ( Min( PN ,CRS ) + ( MDR - PN ) ) / ( ( ( ( Max( ( DDR / FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,ACS ) ) - ( ( FirstVNF_RAM_Server + RRS ) * ( AMS * FirstVNF_Mem ) ) ) / Max( Min( Max( CRS,MRS ) ,( FirstVNF_RAM + ARS ) ),Max( ( BR - DDR ),( FirstVNF_CPU * RRS ) ) ) ) * FirstVNF_RAM_Server ) / ( BR - Const ) ) ) ,AMS )", "choosing": "( ( MUC * MUM ) / ( CS * RCSe ) )", "obj1": 0.6693877551020408, "obj2": 0.22858806669549686}]}