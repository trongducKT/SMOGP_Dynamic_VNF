{"1": [{"determining": "( ( MDR + CRS ) - Max( MDR,RRS ) )", "choosing": "( ( CS - MUR ) / ( MUC - DS ) )", "obj1": 0.9795539033457249, "obj2": 0.022723958261800372}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( MUM + MLU ) - Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN * MDR ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( RRSe * DS ) / ( DS * CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5599825965249527}, {"determining": "( ( ARS - MRS ) + ( AMS * ACS ) )", "choosing": "Min( ( DS * RMSe ) ,Max( MUC,DS ) )", "obj1": 0.4851301115241636, "obj2": 0.420532463431453}, {"determining": "( ( FirstVNF_RAM - ARS ) - Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / DS ) + ( CS * DS ) )", "obj1": 0.8977695167286245, "obj2": 0.09351094929464425}, {"determining": "( Min( BR ,AMS ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * RRSe ) * ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / MUC ) )", "obj1": 0.4721189591078067, "obj2": 0.4670790536200024}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU * AMS ) )", "choosing": "( ( RMSe / RCSe ) + ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) + ( BR * Const ) )", "choosing": "( ( RRSe / MUR ) / ( RMSe * MUR ) )", "obj1": 0.17843866171003717, "obj2": 0.6994941159080312}, {"determining": "( ( ( CRS - ACS ) * DDR ) + Max( FirstVNF_RAM,BR ) )", "choosing": "( ( ( CS / RCSe ) - ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( CS ,MUC ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0015969091477757282}, {"determining": "Min( ( ( DDR / FirstVNF_RAM ) + RRS ) ,( MDR / BR ) )", "choosing": "Min( ( Min( MLU ,MUR ) - ( MLU + MUM ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.26022304832713755, "obj2": 0.589021216956482}, {"determining": "( Max( PN,( MDR - CRS ) ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MLU,CS ) + RRSe ) * ( RRSe + ( MLU * MUR ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( Min( ( AMS / MDR ) ,RRS ) * ( DDR + ( FirstVNF_Mem_Server / CRS ) ) )", "choosing": "( ( Min( RCSe ,RMSe ) - ( RRSe + DS ) ) * ( Max( RMSe,DS ) - ( MUR - RRSe ) ) )", "obj1": 0.09479553903345725, "obj2": 0.8561741144229604}, {"determining": "( Max( ( FirstVNF_Mem + MRS ),Min( MDR ,MDR ) ) - Max( ( AMS * Const ),( FirstVNF_CPU_Server * BR ) ) )", "choosing": "( ( ( MLU * MUC ) + Min( CS ,DS ) ) + ( Max( CS,DS ) - ( CS + DS ) ) )", "obj1": 0.9163568773234201, "obj2": 0.06934375565138157}, {"determining": "Max( Max( Min( BR ,RRS ),( RRS / BR ) ),Max( ( FirstVNF_Mem / MRS ),( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RMSe / MUR ) + ( DS - MUM ) ) * ( Max( MUR,RRSe ) - ( MLU * MLU ) ) )", "obj1": 0.36988847583643125, "obj2": 0.5204488176410459}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( PN ,FirstVNF_Mem_Server ) ),( Max( ARS,PN ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( MUM - MUM ) / ( MUC * MUC ) ) )", "obj1": 0.21933085501858737, "obj2": 0.6717849243282316}, {"determining": "( ( ACS / RRS ) + Max( Min( FirstVNF_CPU_Server ,DDR ),( FirstVNF_Mem * PN ) ) )", "choosing": "Min( ( ( RMSe * DS ) + ( MUR + RRSe ) ) ,( ( MUM + MUM ) * ( MUR / DS ) ) )", "obj1": 0.44052044609665425, "obj2": 0.4852682899561431}, {"determining": "( Min( Min( Const ,FirstVNF_RAM_Server ) ,( ARS - FirstVNF_Mem ) ) + ( ( MDR - FirstVNF_RAM ) - Max( MRS,Const ) ) )", "choosing": "( ( ( MUR * MUM ) / MUC ) + ( MLU - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( MUR,Min( RMSe ,MLU ) ) )", "obj1": 0.9219330855018587, "obj2": 0.0612145106220065}, {"determining": "( Min( ACS ,RRS ) - Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe + RRSe ) + ( MUM * RMSe ) ),( ( MUR / RCSe ) + Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - ( ARS / PN ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Max( Max( ( MLU + MUC ),( CS * MUR ) ),( ( DS + CS ) + ( DS - MLU ) ) ),( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( CS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server + AMS ) * ( FirstVNF_RAM_Server - BR ) ) / ( ( MRS / RRS ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( ( CRS - FirstVNF_Mem ) ,( FirstVNF_RAM + PN ) ) ) )", "choosing": "Max( ( Min( MUR ,DS ) + MUM ),Min( CS ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( CRS * CRS ) / Min( CRS ,FirstVNF_CPU ) ) + ( Min( DDR ,FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ),Min( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( MRS / FirstVNF_RAM ) ) ,( ( FirstVNF_Mem_Server / PN ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * CS ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.3141263940520446, "obj2": 0.552070199655045}, {"determining": "Min( Min( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( MDR,MRS ) ) ,Min( Max( RRS,BR ) ,( CRS + FirstVNF_RAM_Server ) ) ) ,( Min( ( Const + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( RRS * MRS ) ) ) )", "choosing": "Min( Min( DS ,( CS * ( RCSe + RMSe ) ) ) ,( RCSe + RMSe ) )", "obj1": 0.5260223048327137, "obj2": 0.40744379175532935}, {"determining": "( Max( ( ( PN - FirstVNF_RAM_Server ) - Min( FirstVNF_RAM ,ACS ) ),( ( ACS / RRS ) - ( RRS - DDR ) ) ) - ( ( ( ACS / BR ) + ( RRS - FirstVNF_CPU_Server ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,MRS ) ) ) )", "choosing": "Max( Min( MUR ,MUC ),( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ACS * DDR ),Min( MDR ,PN ) ) + ( ( ARS + PN ) - ( FirstVNF_RAM_Server + Const ) ) ) / ( Max( ( CRS - PN ),( FirstVNF_Mem / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + ( Const / ACS ) ) ) )", "choosing": "Max( ( ( ( DS / MUC ) / ( MUR / RMSe ) ) * Max( ( MUR - MUC ),( RCSe - RCSe ) ) ),( ( ( MUM * MLU ) - ( MUC / RCSe ) ) + ( Max( MUC,MUM ) * Min( RRSe ,MLU ) ) ) )", "obj1": 0.42193308550185876, "obj2": 0.5158130029288286}, {"determining": "( Max( FirstVNF_CPU,PN ) / Min( BR ,( FirstVNF_RAM / ( BR / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( ( RMSe / MLU ) - ( RRSe * MUM ) ) ) - ( ( ( MUM / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.11152416356877323, "obj2": 0.7685397105355445}, {"determining": "( ( ( Max( AMS,MDR ) / ( FirstVNF_CPU * MDR ) ) + ( ( CRS - CRS ) / ( CRS / FirstVNF_CPU_Server ) ) ) / Min( Max( Max( FirstVNF_RAM,FirstVNF_Mem ),Min( RRS ,RRS ) ) ,( ( ACS - FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - MRS ) + Max( FirstVNF_Mem,AMS ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( Const * FirstVNF_RAM_Server ) ) ) * ( ( ( AMS / BR ) / ( DDR * FirstVNF_RAM_Server ) ) / Max( ( AMS / CRS ),Max( RRS,RRS ) ) ) )", "choosing": "( ( MUR / RCSe ) / Max( CS,MUC ) )", "obj1": 0.2527881040892193, "obj2": 0.6426093682605103}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM / Min( PN ,PN ) ) )", "choosing": "Min( ( ( RCSe - MLU ) - Max( MUM,Max( RMSe,MUC ) ) ) ,( CS - Max( ( DS + RRSe ),RMSe ) ) )", "obj1": 0.10966542750929369, "obj2": 0.7841448448081222}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( MDR / RRS ) ) / Max( ( FirstVNF_CPU / DDR ),( FirstVNF_Mem_Server * ARS ) ) ) / Min( ( ( FirstVNF_RAM / AMS ) - Min( FirstVNF_CPU_Server ,PN ) ) ,( Max( BR,BR ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( ( RCSe / MUM ) + ( RCSe * RRSe ) ),Max( ( MLU / RMSe ),( MUR + CS ) ) ) ,( Max( Min( RMSe ,MUC ),Min( MUC ,RCSe ) ) * Max( ( MUM / MUM ),( RMSe * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( FirstVNF_RAM_Server - MRS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM + MLU ),( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( MUM + MLU ) - Min( MUM ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( CRS * CRS ) / Min( CRS ,FirstVNF_CPU ) ) + ( Min( DDR ,FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ),Min( Min( ( Min( RRS ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) + Min( PN ,( Const - FirstVNF_CPU ) ) ) ,( MRS / FirstVNF_RAM ) ) ,( ( FirstVNF_Mem_Server / PN ) + Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * CS ),Max( MUC,DS ) ) ),( ( MUM - ( MUR / RMSe ) ) + ( MUM / Min( MUM ,DS ) ) ) )", "obj1": 0.09293680297397769, "obj2": 0.8252183179068706}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( MUC * DS ) / Max( RRSe,RCSe ) )", "obj1": 0.6338289962825279, "obj2": 0.2854038222883156}, {"determining": "( ( FirstVNF_RAM * ARS ) - Min( RRS ,Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Max( ( MLU + MUC ),( CS * MUR ) ) + ( MLU * DS ) )", "obj1": 0.7973977695167286, "obj2": 0.19163481351135023}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( RRS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MRS ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( PN / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( RMSe / MLU ) / ( MLU + RCSe ) ) ,( Max( MUM,MUC ) / Max( MUC,MUR ) ) ) / ( ( Min( MUR ,MLU ) / ( MLU / MUR ) ) - ( ( MUM * MLU ) / Max( RCSe,CS ) ) ) ) / Max( ( Max( ( RRSe + MUR ),Max( CS,CS ) ) * ( ( CS * MLU ) - ( CS * RRSe ) ) ),( Min( Min( MLU ,RMSe ) ,( MLU + DS ) ) - ( ( MUR / RCSe ) * ( RMSe * RCSe ) ) ) ) ) ,( ( ( ( Min( MUC ,MUR ) * ( RCSe / DS ) ) - Min( ( RRSe + RCSe ) ,( RCSe * CS ) ) ) / Max( Max( ( RRSe / RMSe ),( DS + DS ) ),( ( RRSe * RRSe ) - ( MUC - MLU ) ) ) ) - ( ( ( Min( RMSe ,RMSe ) / ( DS - CS ) ) * Max( Max( MUM,MUR ),Max( MLU,MUR ) ) ) / ( ( Max( RRSe,MUC ) + ( RRSe / RCSe ) ) / Min( Max( CS,MLU ) ,Min( MLU ,MLU ) ) ) ) ) ) - Min( Max( ( ( ( Max( MLU,MLU ) + ( RCSe * MUM ) ) - Min( Min( RCSe ,MUC ) ,Min( CS ,MUC ) ) ) - ( Max( ( MUR * RCSe ),( RRSe * MUR ) ) + ( ( MLU / CS ) * Max( MUM,RCSe ) ) ) ),( Max( ( ( MUR / MLU ) * ( RRSe * MLU ) ),( ( MUM / MUM ) - ( MUR / MUM ) ) ) / ( Max( ( RCSe - CS ),Max( RMSe,MUR ) ) * ( ( DS - MUM ) * ( MUC * MLU ) ) ) ) ) ,( ( ( ( ( MUC - MLU ) / ( DS - RCSe ) ) * Min( ( RMSe - MLU ) ,( RMSe * RCSe ) ) ) * Min( Min( ( RMSe + RCSe ) ,Min( RRSe ,RMSe ) ) ,( ( CS / CS ) - ( MUC * MUR ) ) ) ) * Max( ( Max( ( DS + RRSe ),( MUC * DS ) ) * ( ( RRSe - RCSe ) - ( MUR - DS ) ) ),( Min( Min( DS ,MUR ) ,Max( DS,MUR ) ) / ( Max( MUR,RMSe ) * ( MUC * MUR ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( MLU + RMSe ) * ( RCSe + RRSe ) ),Min( Max( DS,CS ) ,( RMSe - MLU ) ) ) * Min( Min( ( MUC + MUR ) ,( RRSe + RCSe ) ) ,( Min( MUM ,RMSe ) * ( CS * MUR ) ) ) ) + ( Max( ( ( CS * RMSe ) + Min( RRSe ,MLU ) ),Min( Max( CS,RRSe ) ,( MUM / RRSe ) ) ) * ( ( ( MUR * MUC ) * ( CS * DS ) ) + Min( ( MUR + MUM ) ,Min( MUC ,MUM ) ) ) ) ) / ( ( ( ( ( RRSe / DS ) + ( MUR - MUR ) ) * ( ( MUC - MUC ) * ( RCSe - MUR ) ) ) * ( ( ( MUR + MUM ) / ( MLU - CS ) ) - ( ( DS * RRSe ) + ( MUM * RCSe ) ) ) ) * ( ( ( ( DS - MUC ) + ( DS - MLU ) ) * Max( ( CS - RCSe ),( RCSe / MUR ) ) ) * Min( ( ( MUR + MLU ) + ( DS - RMSe ) ) ,( Max( CS,CS ) * ( DS - MLU ) ) ) ) ) ) / Max( Min( ( Max( ( ( CS * RRSe ) / Max( CS,MUC ) ),Max( ( RMSe * RMSe ),Max( CS,MLU ) ) ) * ( ( ( MUR / MUR ) * Min( MLU ,RCSe ) ) * ( ( RCSe - MUC ) * ( MLU - MUC ) ) ) ) ,( ( ( ( RCSe + DS ) - ( MUR - RMSe ) ) / ( ( MUR + DS ) - Min( CS ,MLU ) ) ) - ( Min( Max( DS,RCSe ) ,( DS / MUR ) ) / ( ( MLU + MLU ) / ( RRSe + RMSe ) ) ) ) ),( Max( ( Max( ( MLU - MLU ),Min( RRSe ,MUM ) ) / ( Max( RCSe,RMSe ) - ( MUC * MUR ) ) ),( ( Min( MUC ,RRSe ) * Min( MUM ,CS ) ) * Max( ( MUR - RCSe ),Max( DS,RMSe ) ) ) ) + ( Min( ( ( RCSe / MUM ) / ( MLU - RMSe ) ) ,( Min( MUR ,CS ) - ( MUC + MUM ) ) ) + ( ( Min( MUR ,RMSe ) * ( RRSe / RMSe ) ) + ( Min( RRSe ,CS ) * ( DS / DS ) ) ) ) ) ) ) )", "obj1": 0.7174721189591078, "obj2": 0.24124067937677382}, {"determining": "Min( Min( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( MDR,MRS ) ) ,Min( Max( RRS,BR ) ,( CRS + FirstVNF_RAM_Server ) ) ) ,( Min( ( Const + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( RRS * MRS ) ) ) )", "choosing": "Min( Min( DS ,( CS * ( RCSe + RMSe ) ) ) ,( RCSe + RMSe ) )", "obj1": 0.5260223048327137, "obj2": 0.40744379175532935}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM / Min( PN ,PN ) ) )", "choosing": "Min( ( ( RCSe - MLU ) - Max( MUM,Max( RMSe,MUC ) ) ) ,( CS - Max( ( DS + RRSe ),RMSe ) ) )", "obj1": 0.12453531598513011, "obj2": 0.756113316540546}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( DS ,( ( ( MUR / MUC ) + ( RRSe * CS ) ) + ( Min( MUC ,RCSe ) / ( MUM - DS ) ) ) )", "obj1": 0.8382899628252788, "obj2": 0.1066245212966398}, {"determining": "Max( ( ( Max( Min( ( Max( ( ACS + BR ),Max( BR,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( DDR / PN ) ) ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( Const / AMS ) ) / ( ( FirstVNF_RAM_Server + BR ) + ( AMS / BR ) ) ) ),Min( ( Max( ( CRS / DDR ),Max( FirstVNF_CPU_Server,PN ) ) + ( ( AMS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / PN ) ) ) ,Min( ( Min( Const ,FirstVNF_Mem_Server ) * ( MDR - ACS ) ) ,( ( FirstVNF_CPU * CRS ) * Max( CRS,FirstVNF_RAM ) ) ) ) ) - ( ( Min( ( ( Const * CRS ) + ( FirstVNF_RAM + MRS ) ) ,Max( ( CRS * CRS ),Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ACS / FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,PN ) ) / ( ( PN * AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) ) - ( ( ( Min( FirstVNF_Mem_Server ,AMS ) + Min( DDR ,ACS ) ) * ( ( MDR - CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) - ( Min( ( AMS + FirstVNF_Mem_Server ) ,( Const / FirstVNF_CPU ) ) + ( Min( Const ,CRS ) + Max( PN,FirstVNF_RAM ) ) ) ) ) ) / ( ( ( Min( ( Min( ACS ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - CRS ) ) ,Max( ( FirstVNF_RAM_Server + Const ),( FirstVNF_CPU * ACS ) ) ) / Max( Max( Max( CRS,FirstVNF_CPU ),Min( BR ,PN ) ),( ( ARS + FirstVNF_Mem_Server ) - ( DDR * FirstVNF_CPU ) ) ) ) - ( Min( Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,( AMS + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU - MRS ) + Min( CRS ,MDR ) ) ) - ( Max( ( ARS - AMS ),( AMS * DDR ) ) * ( ( DDR * MDR ) / Max( CRS,FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) + ( MDR / PN ) ) + Min( Min( Const ,BR ) ,( Const + RRS ) ) ) + Min( ( ( ARS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) ) ,Max( ( MDR * ACS ),( MRS / MRS ) ) ) ) / ( Max( ( Min( FirstVNF_CPU ,DDR ) * ( PN * ACS ) ),Min( Min( AMS ,DDR ) ,Min( Const ,FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_CPU ,ACS ) + Min( FirstVNF_CPU ,BR ) ) - Min( ( RRS + MDR ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( ACS - ACS ),Min( FirstVNF_RAM_Server ,MDR ) ) * ( Max( MDR,MDR ) * Max( DDR,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_Mem ,BR ) / ( Const + ACS ) ) / ( ( MRS - FirstVNF_RAM_Server ) * Min( ACS ,BR ) ) ) ) + ( Min( Max( ( FirstVNF_Mem / PN ),( BR - FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) - ( Const + AMS ) ) ) * Max( ( ( FirstVNF_CPU_Server - Const ) / ( PN * PN ) ),Min( ( ARS / Const ) ,Min( CRS ,RRS ) ) ) ) ) - Min( Min( ( ( ( MRS + ACS ) - Max( FirstVNF_RAM_Server,DDR ) ) / ( Min( MDR ,ACS ) + Min( CRS ,FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * Max( BR,AMS ) ) + Min( ( AMS * ACS ) ,( RRS / FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem / PN ) ,Max( MDR,Const ) ),( Min( RRS ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) * ( Min( ACS ,FirstVNF_Mem ) - ( AMS * ACS ) ) ) ) ) ),Min( ( ( ( Max( ( Const * FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( PN ,ACS ) ) ) - ( Min( ( RRS / FirstVNF_Mem ) ,Max( MDR,BR ) ) * ( ( ACS + ACS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) + Max( ( ( ( CRS * FirstVNF_Mem_Server ) / ( AMS * MRS ) ) / ( ( ARS - MRS ) + ( MRS / Const ) ) ),( ( Min( FirstVNF_CPU_Server ,DDR ) - ( FirstVNF_RAM_Server * PN ) ) / Min( ( FirstVNF_RAM - FirstVNF_Mem ) ,( Const / FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( ( ARS / FirstVNF_CPU ) - ( MDR + FirstVNF_RAM ) ),Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,( RRS - MDR ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ,( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( CRS - FirstVNF_RAM ) ) ) ) * ( ( ( Max( FirstVNF_RAM,MRS ) - ( DDR / BR ) ) / Min( ( AMS * FirstVNF_Mem_Server ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) * ( ( Max( DDR,BR ) - Min( PN ,MRS ) ) / Min( ( FirstVNF_Mem_Server + BR ) ,( MRS + MRS ) ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( Max( ( ( Min( RRSe ,DS ) / Max( MUC,CS ) ) * ( ( RRSe + RMSe ) * Max( MLU,MUC ) ) ),( Min( ( RCSe - RCSe ) ,Min( RRSe ,RMSe ) ) * Max( ( CS * RRSe ),Min( RRSe ,MUR ) ) ) ) ,Max( Min( ( ( RCSe + RMSe ) + ( RRSe * CS ) ) ,( ( MUC * DS ) + ( MUC + MUR ) ) ),( ( Min( MUR ,MUR ) + Min( MLU ,CS ) ) + ( ( CS / DS ) / ( MUR * MUR ) ) ) ) ) - Min( ( Max( ( Min( CS ,RRSe ) * ( MLU + MUM ) ),( ( DS * MUC ) * ( DS + RCSe ) ) ) - Min( Min( Max( DS,RCSe ) ,( MUR / CS ) ) ,( Max( DS,RMSe ) * Max( RMSe,MUC ) ) ) ) ,Max( Max( ( ( CS - MUR ) + ( RMSe * RCSe ) ),( ( MUC + CS ) + ( RCSe / RCSe ) ) ),( Min( ( RRSe / CS ) ,( MUR * CS ) ) * ( ( DS / MLU ) * ( RCSe + RCSe ) ) ) ) ) ) / Max( ( ( Max( ( ( CS * RCSe ) - ( DS - MUR ) ),Max( Max( MUC,DS ),Max( DS,CS ) ) ) - Max( ( ( MUR - MUM ) - Max( RCSe,RCSe ) ),( ( RMSe + MUM ) / ( RMSe - MUR ) ) ) ) * ( ( ( Min( RRSe ,RMSe ) / ( MUR * MLU ) ) + Max( Min( MUC ,CS ),Max( RMSe,RRSe ) ) ) - ( Min( Max( MUM,RCSe ) ,( RCSe * DS ) ) * ( ( RMSe + MUC ) - Max( CS,DS ) ) ) ) ),( Min( ( ( ( DS / MUM ) * ( RCSe * RMSe ) ) / ( ( DS * MUM ) / ( RCSe - DS ) ) ) ,( ( ( MUR + MUR ) / ( RMSe / MUM ) ) / ( ( RCSe - RRSe ) + ( RRSe / RCSe ) ) ) ) + ( Min( ( Max( MUR,RMSe ) * ( RRSe + RRSe ) ) ,( ( RMSe / MUC ) - ( DS * RRSe ) ) ) - ( ( ( MUR + CS ) - ( RRSe * MLU ) ) - ( ( MLU / MLU ) / ( RRSe / RRSe ) ) ) ) ) ) ) ,( ( ( Min( Min( ( ( MUC / MUR ) + Max( RCSe,RCSe ) ) ,Min( ( CS - MLU ) ,Max( RMSe,MUC ) ) ) ,( Min( Min( RCSe ,MUC ) ,( CS / RCSe ) ) + ( ( RCSe / MLU ) / ( MUM + MUC ) ) ) ) / Max( Min( Min( ( MUC + RRSe ) ,Min( CS ,DS ) ) ,( ( MUC / RRSe ) * Min( MUM ,MUM ) ) ),( Max( ( MUC / RRSe ),Min( RRSe ,CS ) ) - Max( ( MUM - RRSe ),( MUR + RMSe ) ) ) ) ) + Max( ( ( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) * ( ( ( MLU * MUR ) / Min( DS ,RMSe ) ) - ( Max( MUR,MUR ) + Max( CS,DS ) ) ) ),Min( Max( ( ( RRSe + RCSe ) / ( RMSe - MLU ) ),( Max( MUC,RCSe ) / ( MUC / DS ) ) ) ,Min( ( Max( CS,RMSe ) * ( MLU + MLU ) ) ,( Max( DS,DS ) - ( RCSe + RMSe ) ) ) ) ) ) / ( Max( Min( ( ( ( CS / RMSe ) - ( MUR + MUR ) ) + Max( ( MLU * RMSe ),( MLU - RMSe ) ) ) ,( Min( ( DS / MLU ) ,Max( MLU,RRSe ) ) + ( ( MUC - DS ) - Max( RMSe,RMSe ) ) ) ),( ( Max( ( MUM + MUC ),( RMSe / RRSe ) ) - ( ( MUC - MUR ) - ( CS - RRSe ) ) ) * ( ( ( MUR / MUC ) + ( MUM + RMSe ) ) / ( ( DS - CS ) * ( RMSe / MLU ) ) ) ) ) - Max( Min( ( Max( Max( RRSe,MLU ),( DS + CS ) ) * Max( ( CS - CS ),( RMSe + RMSe ) ) ) ,( ( ( RRSe - DS ) - ( MLU * DS ) ) + ( ( MLU - MLU ) * ( RRSe - MUR ) ) ) ),Min( ( Min( Min( RMSe ,CS ) ,Max( DS,RMSe ) ) * ( ( RCSe * CS ) + Max( RCSe,RCSe ) ) ) ,( ( ( DS / DS ) * ( CS + DS ) ) + ( ( MUC * RRSe ) / ( RRSe - CS ) ) ) ) ) ) ) )", "obj1": 0.6895910780669146, "obj2": 0.27719237188167256}, {"determining": "( ( ( Max( AMS,MDR ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) + ( ( CRS - CRS ) / ( CRS / FirstVNF_CPU_Server ) ) ) / Min( Max( Max( FirstVNF_RAM,FirstVNF_Mem ),Min( RRS ,RRS ) ) ,( ( ACS - FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.3271375464684015, "obj2": 0.5277824431154504}, {"determining": "( Min( RRS ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + Min( PN ,( Const - FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * CS ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.36988847583643125, "obj2": 0.48761979070287415}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( Max( ARS,PN ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( MUM - MUM ) / ( CS + MLU ) ) )", "obj1": 0.2174721189591078, "obj2": 0.6701921483465206}, {"determining": "Min( Min( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( MDR,MRS ) ) ,Min( Max( RRS,BR ) ,( CRS + FirstVNF_RAM_Server ) ) ) ,( Min( ( Const + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( RRS * MRS ) ) ) )", "choosing": "Min( Min( DS ,( CS * ( RCSe + RMSe ) ) ) ,( RCSe + RMSe ) )", "obj1": 0.5260223048327137, "obj2": 0.40744379175532935}, {"determining": "Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.2211895910780669, "obj2": 0.6160867756801631}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Max( Max( ( MLU + MUC ),( CS * MUR ) ),( ( DS + CS ) + ( DS - MLU ) ) ),( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) )", "obj1": 0.9553903345724907, "obj2": 0.034438982895633054}, {"determining": "( ( ( Max( Min( FirstVNF_RAM ,Const ),( MDR * PN ) ) - Max( BR,ACS ) ) - ( Max( MDR,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( DDR / ACS ) * Max( BR,BR ) ) - ( Max( FirstVNF_RAM_Server,MRS ) * Max( FirstVNF_RAM_Server,DDR ) ) ) )", "choosing": "( ( MUM - RRSe ) + ( DS + ( ( RMSe + DS ) / Max( RMSe,MUM ) ) ) )", "obj1": 0.40148698884758366, "obj2": 0.4846745075072562}, {"determining": "( ( FirstVNF_RAM - ARS ) - Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( MUC ,CS ) + ( RMSe * MUR ) ),( ( RCSe - RMSe ) + ( RMSe + MUC ) ) )", "obj1": 0.8977695167286245, "obj2": 0.0871964566253944}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / MUC ) )", "obj1": 0.4721189591078067, "obj2": 0.4670790536200024}, {"determining": "( Max( ( ACS - BR ),( ACS * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "Max( Max( RMSe,CS ),Max( MLU,Min( Min( MUC ,RRSe ) ,( CS * MUC ) ) ) )", "obj1": 0.44981412639405205, "obj2": 0.470568780028067}, {"determining": "( ( ( ( ACS / RRS ) + Max( Min( FirstVNF_CPU_Server ,DDR ),( FirstVNF_Mem * PN ) ) ) - MRS ) + ( AMS * ACS ) )", "choosing": "Min( ( DS * RMSe ) ,Max( RMSe,DS ) )", "obj1": 0.4851301115241636, "obj2": 0.420532463431453}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( PN - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( Max( ( ( MLU * MUC ) / ( DS / RRSe ) ),Max( RRSe,MUM ) ) * Min( DS ,RCSe ) )", "obj1": 0.8475836431226765, "obj2": 0.10246942951640634}, {"determining": "Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( RRSe * DS ) / ( DS * CS ) )", "obj1": 0.28810408921933084, "obj2": 0.5706926720608413}, {"determining": "( ( FirstVNF_RAM * PN ) + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( RRSe,MUR ) / ( RMSe * MUR ) )", "obj1": 0.18587360594795538, "obj2": 0.6932532866712031}, {"determining": "Max( Max( Min( BR ,RRS ),( RRS / BR ) ),Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RRSe,MUR ) / ( RMSe * MUR ) )", "obj1": 0.17843866171003717, "obj2": 0.6994941159080312}, {"determining": "Min( Min( ( DDR / Max( FirstVNF_RAM,RRS ) ) ,RRS ) ,( MDR / BR ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( MLU + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.24349442379182157, "obj2": 0.6002907823991882}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( MUR,Min( RMSe ,MLU ) ) )", "obj1": 0.9219330855018587, "obj2": 0.0612145106220065}, {"determining": "( ( FirstVNF_RAM * PN ) + ( BR * Const ) )", "choosing": "( ( RRSe / MUR ) / ( RMSe * MUR ) )", "obj1": 0.17843866171003717, "obj2": 0.6994941159080312}, {"determining": "( Min( ( ( Max( FirstVNF_CPU_Server,MRS ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU_Server ) ) ,ARS ) * ( FirstVNF_RAM / Min( PN ,PN ) ) )", "choosing": "Min( ( ( RCSe - MLU ) - Max( MUM,Max( RCSe,MUC ) ) ) ,( CS - Max( ( DS + RRSe ),RMSe ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7814411665632309}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM / ( Max( PN,ACS ) / PN ) ) ) )", "choosing": "( Min( Min( ( ( ( Min( RRSe ,RRSe ) * Min( MUC ,RRSe ) ) + Max( ( MUM / DS ),( MUM / CS ) ) ) / ( ( ( MUC / DS ) * ( MLU - DS ) ) / ( ( CS * CS ) / ( MLU + MUM ) ) ) ) ,( RMSe * RRSe ) ) ,( Min( RMSe ,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.8068388464972678}, {"determining": "( ( ACS / RRS ) + PN )", "choosing": "Min( ( ( RMSe * DS ) + ( MUR + RRSe ) ) ,( Max( ( MUR - DS ),Max( RRSe,MUM ) ) * Min( DS ,RCSe ) ) )", "obj1": 0.5111524163568774, "obj2": 0.4162165414546846}, {"determining": "( ( MDR + CRS ) - Max( MDR,RRS ) )", "choosing": "( ( CS - MUR ) / ( MUC - DS ) )", "obj1": 0.9795539033457249, "obj2": 0.022723958261800372}, {"determining": "Max( Min( MDR ,MRS ),Min( ( PN * MDR ) ,Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - CS ) * Max( RCSe,RMSe ) )", "obj1": 0.31226765799256506, "obj2": 0.546079279857186}, {"determining": "Min( Min( ( DDR / FirstVNF_RAM ) ,RRS ) ,( MDR / AMS ) )", "choosing": "Min( ( Min( RRSe ,MUR ) + ( MLU + MUM ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.26022304832713755, "obj2": 0.589021216956482}, {"determining": "( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) )", "choosing": "( ( ( RMSe / MUR ) + ( DS - MUM ) ) * ( Max( MUR,RRSe ) - ( MLU * MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.014760376955044919}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( Max( AMS,MDR ) / ( FirstVNF_CPU * MDR ) ) + ( ( CRS - CRS ) / ( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUR ,Max( MUR,Min( RMSe ,MLU ) ) )", "obj1": 0.9089219330855018, "obj2": 0.07422066491115219}, {"determining": "Min( ( ( DDR / FirstVNF_RAM ) + RRS ) ,( MDR / BR ) )", "choosing": "Min( ( Min( MLU ,MUR ) - ( MLU + MUM ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.26022304832713755, "obj2": 0.589021216956482}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) / Min( BR ,( FirstVNF_RAM / ( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - MUC ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.11152416356877323, "obj2": 0.7685397105355445}, {"determining": "( ( ( CRS - ACS ) * DDR ) + Max( FirstVNF_RAM,BR ) )", "choosing": "( ( ( CS / RCSe ) - ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( CS ,MUC ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0015969091477757282}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( ( CRS - FirstVNF_Mem ) ,( FirstVNF_RAM + PN ) ) ) ) )", "choosing": "( ( MUC - CS ) / Min( MUM ,( Min( MUR ,DS ) + MUM ) ) )", "obj1": 0.3066914498141264, "obj2": 0.5520727157661331}, {"determining": "( Max( FirstVNF_CPU,PN ) / Min( BR ,( FirstVNF_RAM / ( BR / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( ( RMSe / MLU ) - ( RRSe * MUM ) ) ) - ( ( ( MUM / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.11152416356877323, "obj2": 0.7685397105355445}, {"determining": "( Max( ( FirstVNF_Mem + MRS ),Min( MDR ,MDR ) ) - Max( ( AMS * Const ),( FirstVNF_CPU_Server * BR ) ) )", "choosing": "( ( ( MLU * MUC ) + Min( CS ,DS ) ) + ( Max( CS,DS ) - ( CS + DS ) ) )", "obj1": 0.9163568773234201, "obj2": 0.06934375565138157}, {"determining": "Min( ( PN * MDR ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( RRSe * DS ) / ( DS * CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5599825965249527}, {"determining": "( ( ARS - MRS ) + ( AMS * ACS ) )", "choosing": "Min( ( DS * RMSe ) ,Max( MUC,DS ) )", "obj1": 0.4851301115241636, "obj2": 0.420532463431453}, {"determining": "Min( ( PN * MDR ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( RRSe * DS ) / ( DS * CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5599825965249527}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( MUR,Min( RMSe ,MLU ) ) )", "obj1": 0.9200743494423792, "obj2": 0.06301102676068836}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUR - DS ),Max( RRSe,MUM ) ) * Min( DS ,RCSe ) )", "obj1": 0.8438661710037175, "obj2": 0.10480572924643314}, {"determining": "( Max( PN,( MDR - CRS ) ) / ( PN - FirstVNF_RAM ) )", "choosing": "( ( Max( MLU,DS ) + RRSe ) * ( RRSe + ( MLU * MUR ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( Max( PN,( MDR - CRS ) ) / ( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MLU,CS ) + RRSe ) * ( RRSe + ( MLU * MUR ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( Min( BR ,AMS ) - ( BR + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * RRSe ) * ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU * AMS ) )", "choosing": "( ( RMSe / RCSe ) + ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Max( PN,( MDR - CRS ) ) / ( PN - FirstVNF_RAM ) )", "choosing": "( ( ( CS / RCSe ) + ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( CS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - MRS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM + MLU ),( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( ( Min( ( Max( ( ACS - ACS ),Min( FirstVNF_RAM_Server ,MDR ) ) * ( Max( MDR,MDR ) * Max( DDR,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_Mem ,BR ) / ( Const + ACS ) ) / ( ( MRS - FirstVNF_RAM_Server ) * Min( ACS ,BR ) ) ) ) + ( Min( Max( ( FirstVNF_Mem / PN ),( BR - FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) - ( Const + AMS ) ) ) * Max( ( ( FirstVNF_CPU_Server - Const ) / ( PN * PN ) ),Min( ( ARS / Const ) ,Min( CRS ,RRS ) ) ) ) ) - Min( Min( ( ( ( MRS + ACS ) - Max( FirstVNF_RAM_Server,DDR ) ) / ( Min( MDR ,ACS ) + Min( CRS ,FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * Max( BR,AMS ) ) + Min( ( AMS * ACS ) ,( RRS / FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem / PN ) ,Max( MDR,Const ) ),( Min( RRS ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) * ( Min( ACS ,FirstVNF_Mem ) - ( AMS * ACS ) ) ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.08921933085501858, "obj2": 0.789454550533417}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( MLU + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.5130111524163569, "obj2": 0.28791008995849443}, {"determining": "Min( ( ( ( ( ( ( ( PN - FirstVNF_Mem ) - ( CRS - DDR ) ) / Min( ( FirstVNF_RAM / PN ) ,( BR * FirstVNF_CPU ) ) ) - Min( Min( Min( FirstVNF_Mem_Server ,CRS ) ,( PN - DDR ) ) ,( ( FirstVNF_Mem_Server * MDR ) * ( RRS / BR ) ) ) ) / ( Max( ( ( BR + FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * ACS ) ),( ( FirstVNF_Mem / ARS ) + Min( PN ,RRS ) ) ) - ( ( ( CRS / ARS ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) - ( Max( ARS,CRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) * Min( Min( Max( ( ( FirstVNF_Mem + PN ) * Max( FirstVNF_RAM,BR ) ),Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,Max( RRS,MDR ) ) ) ,Max( ( ( PN - MRS ) - ( FirstVNF_RAM * BR ) ),( ( FirstVNF_Mem_Server + BR ) + ( PN + FirstVNF_CPU_Server ) ) ) ) ,Min( Min( Min( ( BR * Const ) ,Min( BR ,FirstVNF_Mem ) ) ,( Min( DDR ,CRS ) - ( ARS + FirstVNF_Mem_Server ) ) ) ,Min( Max( ( DDR + RRS ),( DDR - ARS ) ) ,Max( ( RRS / CRS ),Min( FirstVNF_CPU ,AMS ) ) ) ) ) ) - ( ( Min( Max( Max( ( FirstVNF_RAM * BR ),( BR - FirstVNF_CPU_Server ) ),( Min( CRS ,FirstVNF_Mem ) / Max( PN,BR ) ) ) ,( ( ( Const + FirstVNF_Mem_Server ) / ( BR / RRS ) ) / ( Min( AMS ,FirstVNF_CPU ) / ( AMS + AMS ) ) ) ) - ( Min( ( Min( CRS ,FirstVNF_RAM_Server ) / ( CRS * DDR ) ) ,Min( ( FirstVNF_Mem - MRS ) ,Max( PN,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU_Server * ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) * ( Min( AMS ,PN ) - ( ARS * ARS ) ) ) ) ) / ( ( Min( ( ( RRS - MDR ) / ( BR * ARS ) ) ,( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + Min( MRS ,FirstVNF_RAM_Server ) ) ) + ( ( ( ARS + FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server / ACS ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) / Max( ARS,CRS ) ) ) ) + ( Min( ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( RRS / AMS ) ) ,( ( RRS * CRS ) + ( FirstVNF_RAM / FirstVNF_RAM ) ) ) + ( Max( Max( MRS,AMS ),( MRS + ACS ) ) * ( ( FirstVNF_RAM_Server / AMS ) - Max( ACS,ACS ) ) ) ) ) ) ) ,( ( Max( ( ( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( DDR * RRS ) ) + ( ( ACS * ACS ) * Max( FirstVNF_Mem,MRS ) ) ) - ( ( ( MDR * AMS ) * Min( ARS ,MDR ) ) - Max( Max( BR,FirstVNF_RAM_Server ),( DDR / FirstVNF_RAM_Server ) ) ) ),( ( ( Max( FirstVNF_Mem_Server,DDR ) + ( Const - Const ) ) * ( ( ARS + PN ) * ( DDR * PN ) ) ) * ( ( ( ARS + FirstVNF_Mem_Server ) / ( FirstVNF_Mem + CRS ) ) + Max( ( RRS + MRS ),Min( MRS ,ARS ) ) ) ) ) + Min( ( ( ( Max( ACS,DDR ) - ( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( PN - PN ) ) ) - Min( ( Max( RRS,PN ) * ( AMS - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ,( ( ( ( MDR + FirstVNF_CPU ) / ( BR - MRS ) ) - ( ( DDR * FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,MRS ) ) ) * ( ( ( AMS * ARS ) * ( DDR - FirstVNF_RAM ) ) - ( ( MDR + FirstVNF_CPU ) * ( PN + DDR ) ) ) ) ) ) - Min( ( ( ( ( ( MDR + FirstVNF_CPU_Server ) - ( FirstVNF_Mem + CRS ) ) / Max( ( DDR / RRS ),( ARS + FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_RAM_Server * PN ) - ( PN + MDR ) ) ,Min( ( AMS / CRS ) ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) - ( Max( Min( ( PN / AMS ) ,Max( FirstVNF_RAM,CRS ) ),( ( ACS * FirstVNF_Mem ) - ( BR * RRS ) ) ) + Min( ( ( BR / MRS ) - Min( DDR ,FirstVNF_CPU ) ) ,Min( ( BR * FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( Min( ( Max( MRS,ARS ) / ( BR + CRS ) ) ,( Min( FirstVNF_CPU ,ACS ) * Min( RRS ,DDR ) ) ) - ( ( ( MDR * ARS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM - MRS ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) + ( ( Min( ( FirstVNF_Mem_Server * MDR ) ,( CRS * FirstVNF_Mem ) ) - ( ( BR - FirstVNF_CPU_Server ) / Max( DDR,BR ) ) ) / ( ( ( PN - BR ) * Max( FirstVNF_CPU,MDR ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_RAM - ARS ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,CS ) - Min( Max( RCSe,Max( Min( ( MUR - RCSe ) ,RCSe ),Max( MUM,( MUC * RRSe ) ) ) ) ,MUM ) )", "obj1": 0.7713754646840149, "obj2": 0.2330703963522516}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7973977695167286, "obj2": 0.12906934629832026}, {"determining": "Max( ( MDR * MRS ),( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( CS + MUM ) ) + ( ( MUR * DS ) / MUC ) ) * ( ( MUC * DS ) / Max( RRSe,RCSe ) ) )", "obj1": 0.4888475836431227, "obj2": 0.38947888040036094}, {"determining": "( Max( ( ACS - BR ),( FirstVNF_RAM_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( RMSe + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.41821561338289964, "obj2": 0.4443450466396857}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( MUC * DS ) / Max( RRSe,RCSe ) )", "obj1": 0.6338289962825279, "obj2": 0.2854038222883156}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( ( CRS - MRS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( ( MUM + MLU ),Max( MLU,CS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.0702980566768606}, {"determining": "( ( ( ( ACS / RRS ) + Max( Min( FirstVNF_CPU_Server ,DDR ),( FirstVNF_Mem * PN ) ) ) - MRS ) + ( AMS * ACS ) )", "choosing": "Min( ( DS * RMSe ) ,Max( RMSe,DS ) )", "obj1": 0.4851301115241636, "obj2": 0.420532463431453}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Max( Max( ( MLU + MUC ),( CS * MUR ) ),( ( DS + CS ) + ( DS - MLU ) ) ),( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) )", "obj1": 0.9553903345724907, "obj2": 0.034438982895633054}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( RRS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MRS ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( PN / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( RMSe / MLU ) / ( MLU + RCSe ) ) ,( Max( MUM,MUC ) / Max( MUC,MUR ) ) ) / ( ( Min( MUR ,MLU ) / ( MLU / MUR ) ) - ( ( MUM * MLU ) / Max( RCSe,CS ) ) ) ) / Max( ( Max( ( RRSe + MUR ),Max( CS,CS ) ) * ( ( CS * MLU ) - ( CS * RRSe ) ) ),( Min( Min( MLU ,RMSe ) ,( MLU + DS ) ) - ( ( MUR / RCSe ) * ( RMSe * RCSe ) ) ) ) ) ,( ( ( ( Min( MUC ,MUR ) * ( RCSe / DS ) ) - Min( ( RRSe + RCSe ) ,( RCSe * CS ) ) ) / Max( Max( ( RRSe / RMSe ),( DS + DS ) ),( ( RRSe * RRSe ) - ( MUC - MLU ) ) ) ) - ( ( ( Min( RMSe ,RMSe ) / ( DS - CS ) ) * Max( Max( MUM,MUR ),Max( MLU,MUR ) ) ) / ( ( Max( RRSe,MUC ) + ( RRSe / RCSe ) ) / Min( Max( CS,MLU ) ,Min( MLU ,MLU ) ) ) ) ) ) - Min( Max( ( ( ( Max( MLU,MLU ) + ( RCSe * MUM ) ) - Min( Min( RCSe ,MUC ) ,Min( CS ,MUC ) ) ) - ( Max( ( MUR * RCSe ),( RRSe * MUR ) ) + ( ( MLU / CS ) * Max( MUM,RCSe ) ) ) ),( Max( ( ( MUR / MLU ) * ( RRSe * MLU ) ),( ( MUM / MUM ) - ( MUR / MUM ) ) ) / ( Max( ( RCSe - CS ),Max( RMSe,MUR ) ) * ( ( DS - MUM ) * ( MUC * MLU ) ) ) ) ) ,( ( ( ( ( MUC - MLU ) / ( DS - RCSe ) ) * Min( ( RMSe - MLU ) ,( RMSe * RCSe ) ) ) * Min( Min( ( RMSe + RCSe ) ,Min( RRSe ,RMSe ) ) ,( ( CS / CS ) - ( MUC * MUR ) ) ) ) * Max( ( Max( ( DS + RRSe ),( MUC * DS ) ) * ( ( RRSe - RCSe ) - ( MUR - DS ) ) ),( Min( Min( DS ,MUR ) ,Max( DS,MUR ) ) / ( Max( MUR,RMSe ) * ( MUC * MUR ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( MLU + RMSe ) * ( RCSe + RRSe ) ),Min( Max( DS,CS ) ,( RMSe - MLU ) ) ) * Min( Min( ( MUC + MUR ) ,( RRSe + RCSe ) ) ,( Min( MUM ,RMSe ) * ( CS * MUR ) ) ) ) + ( Max( ( ( CS * RMSe ) + Min( RRSe ,MLU ) ),Min( Max( CS,RRSe ) ,( MUM / RRSe ) ) ) * ( ( ( MUR * MUC ) * ( CS * DS ) ) + Min( ( MUR + MUM ) ,Min( MUC ,MUM ) ) ) ) ) / ( ( ( ( ( RRSe / DS ) + ( MUR - MUR ) ) * ( ( MUC - MUC ) * ( RCSe - MUR ) ) ) * ( ( ( MUR + MUM ) / ( MLU - CS ) ) - ( ( DS * RRSe ) + ( MUM * RCSe ) ) ) ) * ( ( ( ( DS - MUC ) + ( DS - MLU ) ) * Max( ( CS - RCSe ),( RCSe / MUR ) ) ) * Min( ( ( MUR + MLU ) + ( DS - RMSe ) ) ,( Max( CS,CS ) * ( DS - MLU ) ) ) ) ) ) / Max( Min( ( Max( ( ( CS * RRSe ) / Max( CS,MUC ) ),Max( ( RMSe * RMSe ),Max( CS,MLU ) ) ) * ( ( ( MUR / MUR ) * Min( MLU ,RCSe ) ) * ( ( RCSe - MUC ) * ( MLU - MUC ) ) ) ) ,( ( ( ( RCSe + DS ) - ( MUR - RMSe ) ) / ( ( MUR + DS ) - Min( CS ,MLU ) ) ) - ( Min( Max( DS,RCSe ) ,( DS / MUR ) ) / ( ( MLU + MLU ) / ( RRSe + RMSe ) ) ) ) ),( Max( ( Max( ( MLU - MLU ),Min( RRSe ,MUM ) ) / ( Max( RCSe,RMSe ) - ( MUC * MUR ) ) ),( ( Min( MUC ,RRSe ) * Min( MUM ,CS ) ) * Max( ( MUR - RCSe ),Max( DS,RMSe ) ) ) ) + ( Min( ( ( RCSe / MUM ) / ( MLU - RMSe ) ) ,( Min( MUR ,CS ) - ( MUC + MUM ) ) ) + ( ( Min( MUR ,RMSe ) * ( RRSe / RMSe ) ) + ( Min( RRSe ,CS ) * ( DS / DS ) ) ) ) ) ) ) )", "obj1": 0.7174721189591078, "obj2": 0.24124067937677382}, {"determining": "( ( ( Max( Min( FirstVNF_RAM ,Const ),( MDR * PN ) ) - Max( BR,ACS ) ) - ( Max( MDR,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) / ( ( ( DDR / ACS ) * Max( BR,BR ) ) - ( Max( FirstVNF_RAM_Server,MRS ) * Max( FirstVNF_RAM_Server,DDR ) ) ) )", "choosing": "( ( MUM - RRSe ) + ( DS + ( ( RMSe + DS ) / Max( RMSe,MUM ) ) ) )", "obj1": 0.40148698884758366, "obj2": 0.4846745075072562}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( PN - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( Max( ( ( MLU * MUC ) / ( DS / RRSe ) ),Max( RRSe,MUM ) ) * Min( DS ,RCSe ) )", "obj1": 0.8475836431226765, "obj2": 0.10246942951640634}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( ( CRS - FirstVNF_Mem ) ,( FirstVNF_RAM + PN ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( MUC - CS ) + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.34386617100371747, "obj2": 0.5086657046899428}, {"determining": "( Min( RRS ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + Min( PN ,( Const - FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * CS ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.36988847583643125, "obj2": 0.48761979070287415}, {"determining": "( ( FirstVNF_RAM * Max( PN,( MDR - CRS ) ) ) + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( RRSe / ( RMSe * MUR ) )", "obj1": 0.1895910780669145, "obj2": 0.6906456543020433}, {"determining": "Max( ( ( Max( Min( ( Max( ( ACS + BR ),Max( BR,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( DDR / PN ) ) ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( Const / AMS ) ) / ( ( FirstVNF_RAM_Server + BR ) + ( AMS / BR ) ) ) ),Min( ( Max( ( CRS / DDR ),Max( FirstVNF_CPU_Server,PN ) ) + ( ( AMS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / PN ) ) ) ,Min( ( Min( Const ,FirstVNF_Mem_Server ) * ( MDR - ACS ) ) ,( ( FirstVNF_CPU * CRS ) * Max( CRS,FirstVNF_RAM ) ) ) ) ) - ( ( Min( ( ( Const * CRS ) + ( FirstVNF_RAM + MRS ) ) ,Max( ( CRS * CRS ),Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ACS / FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,PN ) ) / ( ( PN * AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) ) - ( ( ( Min( FirstVNF_Mem_Server ,AMS ) + Min( DDR ,ACS ) ) * ( ( MDR - CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) - ( Min( ( AMS + FirstVNF_Mem_Server ) ,( Const / FirstVNF_CPU ) ) + ( Min( Const ,CRS ) + Max( PN,FirstVNF_RAM ) ) ) ) ) ) / ( ( ( Min( ( Min( ACS ,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - CRS ) ) ,Max( ( FirstVNF_RAM_Server + Const ),( FirstVNF_CPU * ACS ) ) ) / Max( Max( Max( CRS,FirstVNF_CPU ),Min( BR ,PN ) ),( ( ARS + FirstVNF_Mem_Server ) - ( DDR * FirstVNF_CPU ) ) ) ) - ( Min( Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,( AMS + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU - MRS ) + Min( CRS ,MDR ) ) ) - ( Max( ( ARS - AMS ),( AMS * DDR ) ) * ( ( DDR * MDR ) / Max( CRS,FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) + ( MDR / PN ) ) + Min( Min( Const ,BR ) ,( Const + RRS ) ) ) + Min( ( ( ARS * FirstVNF_Mem ) / ( FirstVNF_CPU * AMS ) ) ,Max( ( MDR * ACS ),( MRS / MRS ) ) ) ) / ( Max( ( Min( FirstVNF_CPU ,DDR ) * ( PN * ACS ) ),Min( Min( AMS ,DDR ) ,Min( Const ,FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_CPU ,ACS ) + Min( FirstVNF_CPU ,BR ) ) - Min( ( RRS + MDR ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) ) ),Max( ( ( Min( ( Max( ( ACS - ACS ),Min( FirstVNF_RAM_Server ,MDR ) ) * ( Max( MDR,MDR ) * Max( DDR,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_Mem ,BR ) / ( Const + ACS ) ) / ( ( MRS - FirstVNF_RAM_Server ) * Min( ACS ,BR ) ) ) ) + ( Min( Max( ( FirstVNF_Mem / PN ),( BR - FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) - ( Const + AMS ) ) ) * Max( ( ( FirstVNF_CPU_Server - Const ) / ( PN * PN ) ),Min( ( ARS / Const ) ,Min( CRS ,RRS ) ) ) ) ) - Min( Min( ( ( ( MRS + ACS ) - Max( FirstVNF_RAM_Server,DDR ) ) / ( Min( MDR ,ACS ) + Min( CRS ,FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * Max( BR,AMS ) ) + Min( ( AMS * ACS ) ,( RRS / FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem / PN ) ,Max( MDR,Const ) ),( Min( RRS ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) * ( Min( ACS ,FirstVNF_Mem ) - ( AMS * ACS ) ) ) ) ) ),Min( ( ( ( Max( ( Const * FirstVNF_CPU ),Min( CRS ,FirstVNF_RAM ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( PN ,ACS ) ) ) - ( Min( ( RRS / FirstVNF_Mem ) ,Max( MDR,BR ) ) * ( ( ACS + ACS ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) + Max( ( ( ( CRS * FirstVNF_Mem_Server ) / ( AMS * MRS ) ) / ( ( ARS - MRS ) + ( MRS / Const ) ) ),( ( Min( FirstVNF_CPU_Server ,DDR ) - ( FirstVNF_RAM_Server * PN ) ) / Min( ( FirstVNF_RAM - FirstVNF_Mem ) ,( Const / FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( ( ARS / FirstVNF_CPU ) - ( MDR + FirstVNF_RAM ) ),Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,( RRS - MDR ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ,( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - ( CRS - FirstVNF_RAM ) ) ) ) * ( ( ( Max( FirstVNF_RAM,MRS ) - ( DDR / BR ) ) / Min( ( AMS * FirstVNF_Mem_Server ) ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) * ( ( Max( DDR,BR ) - Min( PN ,MRS ) ) / Min( ( FirstVNF_Mem_Server + BR ) ,( MRS + MRS ) ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( Max( ( ( Min( RRSe ,DS ) / Max( MUC,CS ) ) * ( ( RRSe + RMSe ) * Max( MLU,MUC ) ) ),( Min( ( RCSe - RCSe ) ,Min( RRSe ,RMSe ) ) * Max( ( CS * RRSe ),Min( RRSe ,MUR ) ) ) ) ,Max( Min( ( ( RCSe + RMSe ) + ( RRSe * CS ) ) ,( ( MUC * DS ) + ( MUC + MUR ) ) ),( ( Min( MUR ,MUR ) + Min( MLU ,CS ) ) + ( ( CS / DS ) / ( MUR * MUR ) ) ) ) ) - Min( ( Max( ( Min( CS ,RRSe ) * ( MLU + MUM ) ),( ( DS * MUC ) * ( DS + RCSe ) ) ) - Min( Min( Max( DS,RCSe ) ,( MUR / CS ) ) ,( Max( DS,RMSe ) * Max( RMSe,MUC ) ) ) ) ,Max( Max( ( ( CS - MUR ) + ( RMSe * RCSe ) ),( ( MUC + CS ) + ( RCSe / RCSe ) ) ),( Min( ( RRSe / CS ) ,( MUR * CS ) ) * ( ( DS / MLU ) * ( RCSe + RCSe ) ) ) ) ) ) / Max( ( ( Max( ( ( CS * RCSe ) - ( DS - MUR ) ),Max( Max( MUC,DS ),Max( DS,CS ) ) ) - Max( ( ( MUR - MUM ) - Max( RCSe,RCSe ) ),( ( RMSe + MUM ) / ( RMSe - MUR ) ) ) ) * ( ( ( Min( RRSe ,RMSe ) / ( MUR * MLU ) ) + Max( Min( MUC ,CS ),Max( RMSe,RRSe ) ) ) - ( Min( Max( MUM,RCSe ) ,( RCSe * DS ) ) * ( ( RMSe + MUC ) - Max( CS,DS ) ) ) ) ),( Min( ( ( ( DS / MUM ) * ( RCSe * RMSe ) ) / ( ( DS * MUM ) / ( RCSe - DS ) ) ) ,( ( ( MUR + MUR ) / ( RMSe / MUM ) ) / ( ( RCSe - RRSe ) + ( RRSe / RCSe ) ) ) ) + ( Min( ( Max( MUR,RMSe ) * ( RRSe + RRSe ) ) ,( ( RMSe / MUC ) - ( DS * RRSe ) ) ) - ( ( ( MUR + CS ) - ( RRSe * MLU ) ) - ( ( MLU / MLU ) / ( RRSe / RRSe ) ) ) ) ) ) ) ,( ( ( Min( Min( ( ( MUC / MUR ) + Max( RCSe,RCSe ) ) ,Min( ( CS - MLU ) ,Max( RMSe,MUC ) ) ) ,( Min( Min( RCSe ,MUC ) ,( CS / RCSe ) ) + ( ( RCSe / MLU ) / ( MUM + MUC ) ) ) ) / Max( Min( Min( ( MUC + RRSe ) ,Min( CS ,DS ) ) ,( ( MUC / RRSe ) * Min( MUM ,MUM ) ) ),( Max( ( MUC / RRSe ),Min( RRSe ,CS ) ) - Max( ( MUM - RRSe ),( MUR + RMSe ) ) ) ) ) + Max( ( ( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) * ( ( ( MLU * MUR ) / Min( DS ,RMSe ) ) - ( Max( MUR,MUR ) + Max( CS,DS ) ) ) ),Min( Max( ( ( RRSe + RCSe ) / ( RMSe - MLU ) ),( Max( MUC,RCSe ) / ( MUC / DS ) ) ) ,Min( ( Max( CS,RMSe ) * ( MLU + MLU ) ) ,( Max( DS,DS ) - ( RCSe + RMSe ) ) ) ) ) ) / ( Max( Min( ( ( ( CS / RMSe ) - ( MUR + MUR ) ) + Max( ( MLU * RMSe ),( MLU - RMSe ) ) ) ,( Min( ( DS / MLU ) ,Max( MLU,RRSe ) ) + ( ( MUC - DS ) - Max( RMSe,RMSe ) ) ) ),( ( Max( ( MUM + MUC ),( RMSe / RRSe ) ) - ( ( MUC - MUR ) - ( CS - RRSe ) ) ) * ( ( ( MUR / MUC ) + ( MUM + RMSe ) ) / ( ( DS - CS ) * ( RMSe / MLU ) ) ) ) ) - Max( Min( ( Max( Max( RRSe,MLU ),( DS + CS ) ) * Max( ( CS - CS ),( RMSe + RMSe ) ) ) ,( ( ( RRSe - DS ) - ( MLU * DS ) ) + ( ( MLU - MLU ) * ( RRSe - MUR ) ) ) ),Min( ( Min( Min( RMSe ,CS ) ,Max( DS,RMSe ) ) * ( ( RCSe * CS ) + Max( RCSe,RCSe ) ) ) ,( ( ( DS / DS ) * ( CS + DS ) ) + ( ( MUC * RRSe ) / ( RRSe - CS ) ) ) ) ) ) ) )", "obj1": 0.6895910780669146, "obj2": 0.27719237188167256}, {"determining": "( ( ( Max( AMS,MDR ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) + ( ( CRS - CRS ) / ( CRS / FirstVNF_CPU_Server ) ) ) / Min( Max( Max( FirstVNF_RAM,FirstVNF_Mem ),Min( RRS ,RRS ) ) ,( ( ACS - FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.3271375464684015, "obj2": 0.5277824431154504}, {"determining": "Max( Min( MDR ,MRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + MLU ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.20817843866171004, "obj2": 0.6396425890323755}, {"determining": "( ( ( PN - ACS ) - Min( ( DDR / FirstVNF_RAM ) ,RRS ) ) + Max( FirstVNF_RAM,BR ) )", "choosing": "( ( Min( ( Min( MLU ,MUR ) + ( MLU + MUM ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) ) / ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( CS ,MUC ) ) )", "obj1": 0.6970260223048327, "obj2": 0.25681448170677723}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( MUR,Min( RMSe ,MLU ) ) )", "obj1": 0.9219330855018587, "obj2": 0.0612145106220065}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( ( ( MLU * MUC ) - ( DS / RRSe ) ),Max( ( MLU + ( MUC * MUM ) ),MUM ) ) * Min( DS ,RCSe ) )", "obj1": 0.8308550185873605, "obj2": 0.127140220210333}, {"determining": "( Max( FirstVNF_CPU,PN ) / Min( BR ,( FirstVNF_RAM / ( BR / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( ( RMSe / MLU ) - ( RRSe * MUM ) ) ) - ( ( ( MUM / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7388221477812323}, {"determining": "Max( ( Max( Min( FirstVNF_CPU_Server ,DDR ),( FirstVNF_Mem * PN ) ) + MRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.2825278810408922, "obj2": 0.5553467761257209}, {"determining": "Max( ( FirstVNF_RAM / FirstVNF_CPU_Server ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * MLU )", "obj1": 0.275092936802974, "obj2": 0.5882052488716862}, {"determining": "( ( FirstVNF_RAM * PN ) + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Max( RRSe,MUR ) / ( RMSe * MUR ) )", "obj1": 0.15427509293680297, "obj2": 0.7157000721463523}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( MUC * DS ) / Max( RRSe,RCSe ) )", "obj1": 0.6338289962825279, "obj2": 0.2854038222883156}, {"determining": "( ( MDR + CRS ) - Max( MDR,RRS ) )", "choosing": "( ( CS - MUR ) / ( MUC - DS ) )", "obj1": 0.9795539033457249, "obj2": 0.022723958261800372}, {"determining": "Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.2211895910780669, "obj2": 0.6160867756801631}, {"determining": "Max( Min( MDR ,MRS ),Min( ( PN * MDR ) ,Min( FirstVNF_Mem ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( RMSe - CS ) * Max( ( Max( RMSe,CS ) / RMSe ),RMSe ) )", "obj1": 0.31226765799256506, "obj2": 0.5458173487174758}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( ( CRS - FirstVNF_Mem ) ,( FirstVNF_RAM + PN ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.20817843866171004, "obj2": 0.6396425890323755}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( Max( ARS,PN ) / Min( ( MDR / BR ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( MUM - MUM ) / ( CS + MLU ) ) )", "obj1": 0.1654275092936803, "obj2": 0.7086936283697821}, {"determining": "( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) )", "choosing": "( ( ( RMSe / MUR ) + ( DS - MUM ) ) * ( Max( MUR,RRSe ) - ( MLU * MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.014760376955044919}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) / Min( BR ,( FirstVNF_RAM / ( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - MUC ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.12825278810408922, "obj2": 0.7492757730610747}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( DS ,( ( ( MUR / MUC ) + ( RRSe * CS ) ) + ( Min( MUC ,RCSe ) / ( MUM - DS ) ) ) )", "obj1": 0.8382899628252788, "obj2": 0.1066245212966398}, {"determining": "( Min( ( ( Max( FirstVNF_CPU_Server,MRS ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU_Server ) ) ,ARS ) * ( FirstVNF_RAM / Min( PN ,PN ) ) )", "choosing": "Min( ( ( RCSe - MLU ) - Max( MUM,Max( RCSe,MUC ) ) ) ,( CS - Max( ( DS + RRSe ),RMSe ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7814411665632309}, {"determining": "Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.2211895910780669, "obj2": 0.6160867756801631}, {"determining": "Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) )", "choosing": "Min( ( DS * RMSe ) ,Max( RMSe,DS ) )", "obj1": 0.4851301115241636, "obj2": 0.420532463431453}, {"determining": "Max( ( MDR + MRS ),Min( ( PN * Min( Min( ( DDR / CRS ) ,RRS ) ,( MDR / BR ) ) ) ,Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe - RRSe ) * RMSe )", "obj1": 0.2992565055762082, "obj2": 0.5542607542423307}, {"determining": "( ( ( CRS - ACS ) * DDR ) + Max( FirstVNF_RAM,BR ) )", "choosing": "( ( ( CS / RCSe ) - ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( CS ,MUC ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0015969091477757282}, {"determining": "Min( Min( ( DDR / Max( FirstVNF_RAM,RRS ) ) ,RRS ) ,( MDR / BR ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( MLU + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.24349442379182157, "obj2": 0.6002907823991882}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM / Min( PN ,PN ) ) )", "choosing": "Min( ( ( RCSe - MLU ) - Max( MUM,Max( RMSe,MUC ) ) ) ,( CS - Max( ( DS + RRSe ),RMSe ) ) )", "obj1": 0.10966542750929369, "obj2": 0.7791333176906174}, {"determining": "( Max( ( FirstVNF_Mem + MRS ),Min( MDR ,MDR ) ) - Max( ( AMS * Const ),( FirstVNF_CPU_Server * BR ) ) )", "choosing": "( ( ( MLU * MUC ) + Min( CS ,DS ) ) + ( Max( CS,DS ) - ( CS + DS ) ) )", "obj1": 0.9163568773234201, "obj2": 0.06934375565138157}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( ( CRS - FirstVNF_Mem ) ,( FirstVNF_RAM + PN ) ) ) ) )", "choosing": "( ( MUC - CS ) / Min( MUM ,( Min( MUR ,DS ) + MUM ) ) )", "obj1": 0.3066914498141264, "obj2": 0.5520727157661331}, {"determining": "( Max( FirstVNF_CPU,PN ) / Min( BR ,( FirstVNF_RAM / ( BR / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( ( RMSe / MLU ) - ( RRSe * MUM ) ) ) - ( ( ( MUM / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.11152416356877323, "obj2": 0.7685397105355445}, {"determining": "Max( Max( Min( BR ,RRS ),( RRS / BR ) ),Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RRSe,MUR ) / ( RMSe * MUR ) )", "obj1": 0.17843866171003717, "obj2": 0.6994941159080312}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( Max( ARS,PN ) / Min( BR ,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( MLU + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.24349442379182157, "obj2": 0.6002907823991882}, {"determining": "Min( Min( ( DDR / FirstVNF_RAM ) ,RRS ) ,( MDR / PN ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( MLU + RMSe ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.2527881040892193, "obj2": 0.595325400258136}, {"determining": "( ( FirstVNF_RAM * PN ) + ( BR * Const ) )", "choosing": "( ( RRSe / MUR ) / ( RMSe * MUR ) )", "obj1": 0.17843866171003717, "obj2": 0.6994941159080312}], "4": [{"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( FirstVNF_RAM_Server + BR ) ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUC - CS ) * MUC ) ,Max( MUR,Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - CRS ) ) / ( PN - FirstVNF_RAM ) )", "choosing": "( ( ( CS / RCSe ) + ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( CS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + CRS ) - BR )", "choosing": "( ( ( ( CS / RCSe ) + ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( CS ,MUC ) ) ) / Min( MUC ,DS ) )", "obj1": 0.06691449814126393, "obj2": 0.8682651864352428}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( MLU + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.5130111524163569, "obj2": 0.28791008995849443}, {"determining": "( Min( ( ( Min( Min( ( ( FirstVNF_CPU / RRS ) / ( FirstVNF_RAM + MRS ) ) ,Max( ( MDR - MDR ),( Const - MDR ) ) ) ,( ( ( BR + MDR ) * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( RRS,Const ) * ( FirstVNF_Mem_Server + MRS ) ) ) ) * Min( ( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / MRS ) ) + ( ( PN * ACS ) - ( FirstVNF_RAM_Server + DDR ) ) ) ,( ( Min( MRS ,FirstVNF_Mem ) - Min( BR ,PN ) ) - Max( ( FirstVNF_RAM - ACS ),Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) * Max( Min( ( ( ( MRS + FirstVNF_Mem_Server ) - ( RRS + MDR ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / CRS ) ) ) ,( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( FirstVNF_Mem + DDR ) ) / ( ( MDR + RRS ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ),( ( ( Min( CRS ,MDR ) / ( FirstVNF_CPU_Server - ACS ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),Max( MRS,FirstVNF_Mem_Server ) ) ) - Min( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( ARS * MRS ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ) ) ) ,( ( ( ( ( ( PN / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,MRS ) ) * ( ( FirstVNF_Mem_Server - MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) / Max( ( Min( DDR ,ACS ) * ( FirstVNF_CPU * CRS ) ),Max( ( FirstVNF_RAM_Server * Const ),( PN * FirstVNF_CPU_Server ) ) ) ) + ( ( ( Min( ARS ,FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU + MDR ),( PN + ACS ) ) ) * Max( ( ( Const + Const ) / ( ARS / ARS ) ),Max( ( CRS - CRS ),( AMS / RRS ) ) ) ) ) / ( Max( Min( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( FirstVNF_Mem - RRS ) ) ,( ( Const / MRS ) + ( BR / MRS ) ) ),( ( ( BR * FirstVNF_RAM_Server ) - Max( ARS,DDR ) ) - Min( ( ARS / FirstVNF_RAM_Server ) ,Min( CRS ,ACS ) ) ) ) * ( ( Max( ( Const * ARS ),( FirstVNF_CPU_Server * DDR ) ) / ( ( FirstVNF_Mem - AMS ) - ( RRS - AMS ) ) ) - ( Max( Max( RRS,RRS ),Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ( Min( CRS ,DDR ) / ( CRS * MRS ) ) ) ) ) ) ) + ( ( ( Max( Min( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( ACS / CRS ) ) ,Min( ( FirstVNF_Mem_Server + DDR ) ,( FirstVNF_CPU * CRS ) ) ),( Min( Max( FirstVNF_Mem_Server,BR ) ,Min( AMS ,BR ) ) * ( ( FirstVNF_Mem_Server + CRS ) * Min( FirstVNF_Mem_Server ,DDR ) ) ) ) * ( Max( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( FirstVNF_CPU * MRS ) ),( Max( FirstVNF_RAM,ACS ) * Min( FirstVNF_CPU_Server ,Const ) ) ) * Min( ( ( Const + FirstVNF_RAM ) / ( ACS / PN ) ) ,( ( ARS + PN ) - Min( BR ,FirstVNF_Mem ) ) ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,MRS ) ) - ( Max( AMS,FirstVNF_CPU ) / Min( MRS ,MRS ) ) ) + Min( ( ( AMS * FirstVNF_RAM ) * ( AMS + Const ) ) ,( ( ARS * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,CRS ) ) ) ) + Min( Min( ( ( FirstVNF_Mem + DDR ) * ( CRS + FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - ( PN * RRS ) ) ) ,Min( ( Max( FirstVNF_Mem,Const ) + ( FirstVNF_RAM + ARS ) ) ,Max( ( FirstVNF_RAM * PN ),Min( AMS ,MRS ) ) ) ) ) ) + Min( ( Min( ( ( ( FirstVNF_Mem + ARS ) / Max( AMS,FirstVNF_CPU ) ) + Min( Max( ACS,FirstVNF_CPU ) ,( BR * Const ) ) ) ,Min( Min( ( FirstVNF_CPU - BR ) ,( ACS - FirstVNF_RAM ) ) ,( ( FirstVNF_RAM / MDR ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ) * ( ( ( Min( ACS ,CRS ) * ( MRS * DDR ) ) - ( ( DDR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MDR ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU * ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,( Max( MDR,PN ) / ( ARS / ARS ) ) ) / ( Min( ( RRS / FirstVNF_Mem ) ,( CRS + FirstVNF_CPU ) ) * ( Max( RRS,MDR ) * Max( Const,CRS ) ) ) ) - Max( ( Max( ( DDR - DDR ),Max( FirstVNF_Mem_Server,PN ) ) + ( ( FirstVNF_RAM_Server * CRS ) / ( FirstVNF_Mem - FirstVNF_CPU ) ) ),( ( Max( MRS,ARS ) * Max( PN,AMS ) ) - Max( ( Const * FirstVNF_Mem ),Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( MUR + MLU ) / ( MUR + ( DS / MUR ) ) )", "obj1": 0.7490706319702602, "obj2": 0.2089632566660487}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( MUC * DS ) / Max( RRSe,RCSe ) )", "obj1": 0.6338289962825279, "obj2": 0.2854038222883156}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) ) ) * ARS ) )", "choosing": "Min( ( ( ( ( RMSe / MUR ) + ( DS - MUM ) ) * ( Max( MUR,RRSe ) - ( MLU * MLU ) ) ) + ( MLU + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.5037174721189591, "obj2": 0.38218204579324994}, {"determining": "( Min( RRS ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) + Min( PN ,( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.7862453531598513, "obj2": 0.164251762728348}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( ( RMSe - RRSe ) * RMSe )", "obj1": 0.44423791821561337, "obj2": 0.3901927685888734}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( ( CRS - MRS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( ( MUM + MLU ),Max( MLU,CS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.0702980566768606}, {"determining": "( Max( ( ACS - BR ),( FirstVNF_RAM_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( RMSe + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.41821561338289964, "obj2": 0.4443450466396857}, {"determining": "Max( Min( MDR ,MRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + MLU ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.17286245353159851, "obj2": 0.6638432299795867}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( PN - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( Max( ( ( MLU * MUC ) / ( DS / RRSe ) ),Max( RRSe,MUM ) ) * Min( DS ,RCSe ) )", "obj1": 0.8475836431226765, "obj2": 0.10246942951640634}, {"determining": "( Min( RRS ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + Min( PN ,( Const - FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * CS ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.37732342007434944, "obj2": 0.4807308959899988}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( RRS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MRS ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( PN / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUM + MLU ),( MLU - CS ) )", "obj1": 0.6858736059479554, "obj2": 0.26043773160457323}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( ( CRS - FirstVNF_Mem ) ,( FirstVNF_RAM + PN ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.08921933085501858, "obj2": 0.789454550533417}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( Max( ARS,PN ) / Min( ( MDR / BR ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( MUM - MUM ) / ( CS + MLU ) ) )", "obj1": 0.1654275092936803, "obj2": 0.7086936283697821}, {"determining": "Max( Min( ( Const - FirstVNF_CPU ) ,MRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * CS ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.2695167286245353, "obj2": 0.5707370716919543}, {"determining": "( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.41821561338289964, "obj2": 0.4443450466396857}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9330855018587361, "obj2": 0.039318440631927375}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( MUC * DS ) / Max( RRSe,RCSe ) )", "obj1": 0.6338289962825279, "obj2": 0.2854038222883156}, {"determining": "Max( ( MDR * MRS ),( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( CS + MUM ) ) + ( ( MUR * DS ) / MUC ) ) * ( ( MUC * DS ) / Max( RRSe,RCSe ) ) )", "obj1": 0.4888475836431227, "obj2": 0.38947888040036094}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) / Min( BR ,( FirstVNF_RAM / ( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - MUC ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.12825278810408922, "obj2": 0.7492757730610747}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( RRS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MRS ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( PN / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( RMSe / MLU ) / ( MLU + RCSe ) ) ,( Max( MUM,MUC ) / Max( MUC,MUR ) ) ) / ( ( Min( MUR ,MLU ) / ( MLU / MUR ) ) - ( ( MUM * MLU ) / Max( RCSe,CS ) ) ) ) / Max( ( Max( ( RRSe + MUR ),Max( CS,CS ) ) * ( ( CS * MLU ) - ( CS * RRSe ) ) ),( Min( Min( MLU ,RMSe ) ,( MLU + DS ) ) - ( ( MUR / RCSe ) * ( RMSe * RCSe ) ) ) ) ) ,( ( ( ( Min( MUC ,MUR ) * ( RCSe / DS ) ) - Min( ( RRSe + RCSe ) ,( RCSe * CS ) ) ) / Max( Max( ( RRSe / RMSe ),( DS + DS ) ),( ( RRSe * RRSe ) - ( MUC - MLU ) ) ) ) - ( ( ( Min( RMSe ,RMSe ) / ( DS - CS ) ) * Max( Max( MUM,MUR ),Max( MLU,MUR ) ) ) / ( ( Max( RRSe,MUC ) + ( RRSe / RCSe ) ) / Min( Max( CS,MLU ) ,Min( MLU ,MLU ) ) ) ) ) ) - Min( Max( ( ( ( Max( MLU,MLU ) + ( RCSe * MUM ) ) - Min( Min( RCSe ,MUC ) ,Min( CS ,MUC ) ) ) - ( Max( ( MUR * RCSe ),( RRSe * MUR ) ) + ( ( MLU / CS ) * Max( MUM,RCSe ) ) ) ),( Max( ( ( MUR / MLU ) * ( RRSe * MLU ) ),( ( MUM / MUM ) - ( MUR / MUM ) ) ) / ( Max( ( RCSe - CS ),Max( RMSe,MUR ) ) * ( ( DS - MUM ) * ( MUC * MLU ) ) ) ) ) ,( ( ( ( ( MUC - MLU ) / ( DS - RCSe ) ) * Min( ( RMSe - MLU ) ,( RMSe * RCSe ) ) ) * Min( Min( ( RMSe + RCSe ) ,Min( RRSe ,RMSe ) ) ,( ( CS / CS ) - ( MUC * MUR ) ) ) ) * Max( ( Max( ( DS + RRSe ),( MUC * DS ) ) * ( ( RRSe - RCSe ) - ( MUR - DS ) ) ),( Min( Min( DS ,MUR ) ,Max( DS,MUR ) ) / ( Max( MUR,RMSe ) * ( MUC * MUR ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( MLU + RMSe ) * ( RCSe + RRSe ) ),Min( Max( DS,CS ) ,( RMSe - MLU ) ) ) * Min( Min( ( MUC + MUR ) ,( RRSe + RCSe ) ) ,( Min( MUM ,RMSe ) * ( CS * MUR ) ) ) ) + ( Max( ( ( CS * RMSe ) + Min( RRSe ,MLU ) ),Min( Max( CS,RRSe ) ,( MUM / RRSe ) ) ) * ( ( ( MUR * MUC ) * ( CS * DS ) ) + Min( ( MUR + MUM ) ,Min( MUC ,MUM ) ) ) ) ) / ( ( ( ( ( RRSe / DS ) + ( MUR - MUR ) ) * ( ( MUC - MUC ) * ( RCSe - MUR ) ) ) * ( ( ( MUR + MUM ) / ( MLU - CS ) ) - ( ( DS * RRSe ) + ( MUM * RCSe ) ) ) ) * ( ( ( ( DS - MUC ) + ( DS - MLU ) ) * Max( ( CS - RCSe ),( RCSe / MUR ) ) ) * Min( ( ( MUR + MLU ) + ( DS - RMSe ) ) ,( Max( CS,CS ) * ( DS - MLU ) ) ) ) ) ) / Max( Min( ( Max( ( ( CS * RRSe ) / Max( CS,MUC ) ),Max( ( RMSe * RMSe ),Max( CS,MLU ) ) ) * ( ( ( MUR / MUR ) * Min( MLU ,RCSe ) ) * ( ( RCSe - MUC ) * ( MLU - MUC ) ) ) ) ,( ( ( ( RCSe + DS ) - ( MUR - RMSe ) ) / ( ( MUR + DS ) - Min( CS ,MLU ) ) ) - ( Min( Max( DS,RCSe ) ,( DS / MUR ) ) / ( ( MLU + MLU ) / ( RRSe + RMSe ) ) ) ) ),( Max( ( Max( ( MLU - MLU ),Min( RRSe ,MUM ) ) / ( Max( RCSe,RMSe ) - ( MUC * MUR ) ) ),( ( Min( MUC ,RRSe ) * Min( MUM ,CS ) ) * Max( ( MUR - RCSe ),Max( DS,RMSe ) ) ) ) + ( Min( ( ( RCSe / MUM ) / ( MLU - RMSe ) ) ,( Min( MUR ,CS ) - ( MUC + MUM ) ) ) + ( ( Min( MUR ,RMSe ) * ( RRSe / RMSe ) ) + ( Min( RRSe ,CS ) * ( DS / DS ) ) ) ) ) ) ) )", "obj1": 0.7174721189591078, "obj2": 0.24124067937677382}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( MUC / RMSe ) - RMSe ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7955390334572491, "obj2": 0.13022333374923914}, {"determining": "Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19516728624535315, "obj2": 0.6456575405149494}, {"determining": "Max( ( Max( Min( FirstVNF_CPU_Server ,DDR ),( FirstVNF_Mem * PN ) ) + MRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.2825278810408922, "obj2": 0.5553467761257209}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / ( MDR - CRS ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * MUR ) ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7629582210775745}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( RRS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MRS ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( PN / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( Min( ( ( RMSe / MLU ) / ( MLU + RCSe ) ) ,( Max( MUM,MUC ) / Max( MUC,MUR ) ) ) / ( ( Min( MUR ,MLU ) / ( MLU / MUR ) ) - ( ( MUM * MLU ) / Max( RCSe,CS ) ) ) ) / Max( ( Max( ( RRSe + MUR ),Max( CS,CS ) ) * ( ( CS * MLU ) - ( CS * RRSe ) ) ),( Min( Min( MLU ,RMSe ) ,( MLU + DS ) ) - ( ( MUR / RCSe ) * ( RMSe * RCSe ) ) ) ) ) ,( ( ( ( Min( MUC ,MUR ) * ( RCSe / DS ) ) - Min( ( RRSe + RCSe ) ,( RCSe * CS ) ) ) / Max( Max( ( RRSe / RMSe ),( DS + DS ) ),( ( RRSe * RRSe ) - ( MUC - MLU ) ) ) ) - ( ( ( Min( RMSe ,RMSe ) / ( DS - CS ) ) * Max( Max( MUM,MUR ),Max( MLU,MUR ) ) ) / ( ( Max( RRSe,MUC ) + ( RRSe / RCSe ) ) / Min( Max( CS,MLU ) ,Min( MLU ,MLU ) ) ) ) ) ) - Min( Max( ( ( ( Max( MLU,MLU ) + ( RCSe * MUM ) ) - Min( Min( RCSe ,MUC ) ,Min( CS ,MUC ) ) ) - ( Max( ( MUR * RCSe ),( RRSe * MUR ) ) + ( ( MLU / CS ) * Max( MUM,RCSe ) ) ) ),( Max( ( ( MUR / MLU ) * ( RRSe * MLU ) ),( ( MUM / MUM ) - ( MUR / MUM ) ) ) / ( Max( ( RCSe - CS ),Max( RMSe,MUR ) ) * ( ( DS - MUM ) * ( MUC * MLU ) ) ) ) ) ,( ( ( ( ( MUC - MLU ) / ( DS - RCSe ) ) * Min( ( RMSe - MLU ) ,( RMSe * RCSe ) ) ) * Min( Min( ( RMSe + RCSe ) ,Min( RRSe ,RMSe ) ) ,( ( CS / CS ) - ( MUC * MUR ) ) ) ) * Max( ( Max( ( DS + RRSe ),( MUC * DS ) ) * ( ( RRSe - RCSe ) - ( MUR - DS ) ) ),( Min( Min( DS ,MUR ) ,Max( DS,MUR ) ) / ( Max( MUR,RMSe ) * ( MUC * MUR ) ) ) ) ) ) ) * ( ( ( ( Max( ( ( MLU + RMSe ) * ( RCSe + RRSe ) ),Min( Max( DS,CS ) ,( RMSe - MLU ) ) ) * Min( Min( ( MUC + MUR ) ,( RRSe + RCSe ) ) ,( Min( MUM ,RMSe ) * ( CS * MUR ) ) ) ) + ( Max( ( ( CS * RMSe ) + Min( RRSe ,MLU ) ),Min( Max( CS,RRSe ) ,( MUM / RRSe ) ) ) * ( ( ( MUR * MUC ) * ( CS * DS ) ) + Min( ( MUR + MUM ) ,Min( MUC ,MUM ) ) ) ) ) / ( ( ( ( ( RRSe / DS ) + ( MUR - MUR ) ) * ( ( MUC - MUC ) * ( RCSe - MUR ) ) ) * ( ( ( MUR + MUM ) / ( MLU - CS ) ) - ( ( DS * RRSe ) + ( MUM * RCSe ) ) ) ) * ( ( ( ( DS - MUC ) + ( DS - MLU ) ) * Max( ( CS - RCSe ),( RCSe / MUR ) ) ) * Min( ( ( MUR + MLU ) + ( DS - RMSe ) ) ,( Max( CS,CS ) * ( DS - MLU ) ) ) ) ) ) / Max( Min( ( Max( ( ( CS * RRSe ) / Max( CS,MUC ) ),Max( ( RMSe * RMSe ),Max( CS,MLU ) ) ) * ( ( ( MUR / MUR ) * Min( MLU ,RCSe ) ) * ( ( RCSe - MUC ) * ( MLU - MUC ) ) ) ) ,( ( ( ( RCSe + DS ) - ( MUR - RMSe ) ) / ( ( MUR + DS ) - Min( CS ,MLU ) ) ) - ( Min( Max( DS,RCSe ) ,( DS / MUR ) ) / ( ( MLU + MLU ) / ( RRSe + RMSe ) ) ) ) ),( Max( ( Max( ( MLU - MLU ),Min( RRSe ,MUM ) ) / ( Max( RCSe,RMSe ) - ( MUC * MUR ) ) ),( ( Min( MUC ,RRSe ) * Min( MUM ,CS ) ) * Max( ( MUR - RCSe ),Max( DS,RMSe ) ) ) ) + ( Min( ( ( RCSe / MUM ) / ( MLU - RMSe ) ) ,( Min( MUR ,CS ) - ( MUC + MUM ) ) ) + ( ( Min( MUR ,RMSe ) * ( RRSe / RMSe ) ) + ( Min( RRSe ,CS ) * ( DS / DS ) ) ) ) ) ) ) )", "obj1": 0.7174721189591078, "obj2": 0.24124067937677382}, {"determining": "Max( Min( MDR ,MRS ),( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.22676579925650558, "obj2": 0.6023652366738316}, {"determining": "Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.21189591078066913, "obj2": 0.6340714205854783}, {"determining": "( ( MDR + CRS ) - Max( MRS,RRS ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( ( RMSe / MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.1449814126394052, "obj2": 0.7264720234394445}, {"determining": "( ( ( Max( AMS,MDR ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) + ( ( CRS - CRS ) / ( CRS / FirstVNF_CPU_Server ) ) ) / Min( Max( Max( FirstVNF_RAM,FirstVNF_Mem ),Min( RRS ,RRS ) ) ,( ( ACS - FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.3271375464684015, "obj2": 0.5277824431154504}, {"determining": "Max( Min( DDR ,MRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( DS + MUM ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3345724907063197, "obj2": 0.5161269697926504}, {"determining": "( ( ( PN - ACS ) - Min( Max( FirstVNF_RAM,RRS ) ,RRS ) ) + Max( FirstVNF_RAM,BR ) )", "choosing": "( ( Min( ( Min( MLU ,MUR ) + ( MLU + MUM ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) ) / ( DS / DS ) ) + ( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) * Min( CS ,MUC ) ) )", "obj1": 0.7007434944237918, "obj2": 0.25102969588490254}, {"determining": "( ( MDR + CRS ) - Max( MDR,RRS ) )", "choosing": "( ( CS - MUR ) / ( MUC - DS ) )", "obj1": 0.9795539033457249, "obj2": 0.022723958261800372}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * CS ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.35315985130111527, "obj2": 0.49925022536809854}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + PN ) ) ) )", "choosing": "Max( Max( Max( ( MLU + MUC ),( CS * MUR ) ),( ( DS + CS ) + ( DS * MLU ) ) ),( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.029690592893449996}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7992565055762082, "obj2": 0.12761569347475687}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( ( Min( ( Max( ( ACS - ACS ),Min( FirstVNF_RAM_Server ,MDR ) ) * ( Max( MDR,MDR ) * Max( DDR,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_Mem ,BR ) / ( Const + ACS ) ) / ( ( MRS - FirstVNF_RAM_Server ) * Min( ACS ,BR ) ) ) ) + ( Min( Max( ( FirstVNF_Mem / PN ),( BR - ( FirstVNF_RAM_Server + BR ) ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) - ( Const + AMS ) ) ) * Max( ( ( FirstVNF_CPU_Server - Const ) / ( PN * PN ) ),Min( ( ARS / Const ) ,Min( CRS ,RRS ) ) ) ) ) - Min( Min( ( ( ( MRS + ACS ) - Max( FirstVNF_RAM_Server,DDR ) ) / ( Min( MDR ,ACS ) + Min( CRS ,FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * Max( BR,AMS ) ) + Min( ( AMS * ACS ) ,( RRS / FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem / PN ) ,Max( MDR,Const ) ),( Min( RRS ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) * ( Min( ACS ,FirstVNF_Mem ) - ( AMS * ACS ) ) ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( ( CS * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7844627233020353}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( ( ( MLU * MUC ) - ( DS / RRSe ) ),Max( ( MLU + ( MUC * MUM ) ),MUM ) ) * Min( DS ,RCSe ) )", "obj1": 0.8308550185873605, "obj2": 0.127140220210333}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( MUR,Min( RMSe ,MLU ) ) )", "obj1": 0.9219330855018587, "obj2": 0.0612145106220065}, {"determining": "( Max( ( FirstVNF_Mem + MRS ),Min( MDR ,MDR ) ) - Max( ( AMS * Const ),( Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) ) * BR ) ) )", "choosing": "( ( ( MLU * MUC ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) ) + ( Max( CS,DS ) - ( CS + DS ) ) )", "obj1": 0.9107806691449815, "obj2": 0.0641544213166601}, {"determining": "Min( Min( ( DDR / FirstVNF_RAM ) ,RRS ) ,( MDR / PN ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( MLU + RMSe ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.2527881040892193, "obj2": 0.595325400258136}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( ( ( MLU * MUC ) * ( DS / RRSe ) ),Max( ( MLU + ( MUC * CS ) ),MUM ) ) * Min( DS ,RCSe ) )", "obj1": 0.8327137546468402, "obj2": 0.12420236351182709}, {"determining": "( Max( ( ACS - BR ),( FirstVNF_RAM_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.36059479553903345, "obj2": 0.4897590385568019}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM / ( ( ( FirstVNF_RAM * PN ) + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe + MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( Max( RRSe,MUR ) / ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.09665427509293681, "obj2": 0.7636975622211525}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( ( Min( ( Max( ( ACS - ACS ),Min( FirstVNF_RAM_Server ,MDR ) ) * ( Max( MDR,MDR ) * Max( DDR,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_Mem ,BR ) / ( Const + ACS ) ) / ( ( MRS - FirstVNF_RAM_Server ) * Min( ACS ,BR ) ) ) ) + ( Min( Max( ( FirstVNF_Mem / PN ),( BR - FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) - ( Const + AMS ) ) ) * Max( ( ( FirstVNF_CPU_Server - Const ) / ( PN * PN ) ),Min( ( ARS / Const ) ,Min( CRS ,RRS ) ) ) ) ) - Min( Min( ( ( ( MRS + ACS ) - Max( FirstVNF_RAM_Server,DDR ) ) / ( Min( MDR ,ACS ) + Min( CRS ,FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * Max( BR,AMS ) ) + Min( ( AMS * ACS ) ,( RRS / FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem / PN ) ,Max( MDR,Const ) ),( Min( RRS ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) * ( Min( ACS ,FirstVNF_Mem ) - ( AMS * ACS ) ) ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.08921933085501858, "obj2": 0.789454550533417}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Max( Max( ( MLU + MUC ),( CS * MUR ) ),( ( DS + CS ) + ( DS - MLU ) ) ),( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) )", "obj1": 0.9553903345724907, "obj2": 0.034438982895633054}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( DS ,( ( ( MUR / MUC ) + ( RRSe * CS ) ) + ( Min( MUC ,RCSe ) / ( MUM - DS ) ) ) )", "obj1": 0.8382899628252788, "obj2": 0.1066245212966398}, {"determining": "( ( ( PN - ACS ) - Min( ( DDR / FirstVNF_RAM ) ,RRS ) ) + Max( FirstVNF_RAM,BR ) )", "choosing": "( ( Min( ( Min( MLU ,MUR ) + ( MLU + MUM ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) ) / ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( CS ,MUC ) ) )", "obj1": 0.6970260223048327, "obj2": 0.25681448170677723}], "5": [{"determining": "( ( ( Min( ( Max( ( ACS - ACS ),Min( FirstVNF_RAM_Server ,MDR ) ) * ( Max( MDR,MDR ) * Max( DDR,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_Mem ,BR ) / ( Const + ACS ) ) / ( ( MRS - FirstVNF_RAM_Server ) * Min( ACS ,BR ) ) ) ) + ( Min( Max( ( FirstVNF_Mem / PN ),( BR - FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) - ( Const + AMS ) ) ) * Max( ( ( FirstVNF_CPU_Server - Const ) / ( PN * PN ) ),Min( ( ARS / Const ) ,Min( CRS ,RRS ) ) ) ) ) + CRS ) - BR )", "choosing": "( ( ( ( CS / RCSe ) + ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( ( CS * DS ) ,MUC ) ) ) / Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( FirstVNF_RAM_Server + BR ) ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUC - CS ) * MUC ) ,Max( MUR,Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.05762081784386617, "obj2": 0.8437656920782769}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4851301115241636, "obj2": 0.29855571467363745}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Max( ( Max( ( ( ( MUR / MUC ) + ( RRSe * CS ) ) + ( Min( MUC ,RCSe ) / ( MUM - DS ) ) ),DS ) / CS ),Max( ( RCSe * MUM ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.5204460966542751, "obj2": 0.2794147736422374}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( ( RMSe - RRSe ) * RMSe )", "obj1": 0.4479553903345725, "obj2": 0.38437806066885416}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( DS ,( MLU - CS ) )", "obj1": 0.41263940520446096, "obj2": 0.42787730929656276}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( ( ( MLU * MUC ) - ( DS / RRSe ) ),Max( ( MLU + ( MUC * MUM ) ),MUM ) ) * Min( DS ,RCSe ) )", "obj1": 0.654275092936803, "obj2": 0.27476438100088957}, {"determining": "( Min( RRS ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + Min( PN ,( Const - FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * CS ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.37732342007434944, "obj2": 0.4807308959899988}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( ( CRS - MRS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( ( MUM + MLU ),Max( MLU,CS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.0702980566768606}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( DS - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.741635687732342, "obj2": 0.18481227980938653}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / ( MDR - ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7063890305515513}, {"determining": "( ( Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) ) * BR ) + Min( PN ,( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) )", "obj1": 0.7230483271375465, "obj2": 0.20924945867760528}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.14976930410150227}, {"determining": "( Max( FirstVNF_CPU_Server,PN ) / Min( BR ,( FirstVNF_RAM / ( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - MUC ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.12825278810408922, "obj2": 0.7492757730610747}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( RRS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MRS ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( PN / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUR ) + ( MLU + MUM ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) ) / ( DS / DS ) ) + ( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) * Min( CS ,MUC ) ) )", "obj1": 0.6914498141263941, "obj2": 0.2284591994251441}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( MUC / RMSe ) - RMSe ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8438661710037175, "obj2": 0.10116960631545696}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM / ( ( ( FirstVNF_RAM * PN ) + ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe + MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( Max( RRSe,MUR ) / ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08178438661710037, "obj2": 0.8428239558628478}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.2825278810408922, "obj2": 0.5441818311594024}, {"determining": "Max( Min( Min( ( ( ( MRS + ACS ) - Max( FirstVNF_RAM_Server,DDR ) ) / ( Min( MDR ,ACS ) + Min( CRS ,FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * Max( BR,AMS ) ) + Min( ( AMS * ACS ) ,( RRS / FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem / PN ) ,Max( MDR,Const ) ),( Min( RRS ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) * ( Min( ACS ,FirstVNF_Mem ) - ( AMS * ACS ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( ( CS * MUR ) * ( CS * MUM ) ) ) ) / RMSe ) )", "obj1": 0.1579925650557621, "obj2": 0.687173961813386}, {"determining": "( ( MDR + CRS ) - BR )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.1895910780669145, "obj2": 0.6358591178232232}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Max( PN,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( ( ( MUC * DS ) / Max( RRSe,MUM ) ) + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.3345724907063197, "obj2": 0.494818257234616}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( ( Min( ( Max( ( ACS - ACS ),Min( FirstVNF_RAM_Server ,MDR ) ) * ( Max( MDR,MDR ) * Max( DDR,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_Mem ,BR ) / ( Const + ACS ) ) / ( ( MRS - FirstVNF_RAM_Server ) * Min( ACS ,BR ) ) ) ) + ( Min( Max( ( FirstVNF_Mem / PN ),( BR - FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) - ( Const + AMS ) ) ) * Max( ( ( FirstVNF_CPU_Server - Const ) / ( PN * PN ) ),Min( ( ARS / Const ) ,Min( CRS ,RRS ) ) ) ) ) - Min( Min( ( ( ( MRS + ACS ) - Max( FirstVNF_RAM_Server,DDR ) ) / ( Min( MDR ,ACS ) + Min( CRS ,FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * Max( BR,AMS ) ) + Min( ( AMS * ACS ) ,( RRS / FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem / PN ) ,Max( MDR,Const ) ),( Min( RRS ,FirstVNF_Mem_Server ) / ( Min( RRS ,FirstVNF_Mem_Server ) + RRS ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) * ( Min( ACS ,FirstVNF_Mem ) - ( AMS * ACS ) ) ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ) * ( CS * MUM ) ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7902787300403029}, {"determining": "Max( ( MDR / FirstVNF_Mem_Server ),( ACS - MDR ) )", "choosing": "( ( ( ( RMSe / CS ) - ( CS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * CS )", "obj1": 0.31784386617100374, "obj2": 0.5306199227548964}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.7862453531598513, "obj2": 0.13676838149065484}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * PN ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( MLU ,MUR ) + Min( MLU ,( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.5111524163568774, "obj2": 0.28783162637008236}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / PN ) / ( MDR - CRS ) ) ) * ARS ) )", "choosing": "Min( ( ( ( ( RMSe / MUR ) + ( DS - MUM ) ) * Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) ) + ( MLU + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.4200743494423792, "obj2": 0.391364123381544}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( RRS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MRS ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( PN / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUM + MLU ),( MLU - CS ) )", "obj1": 0.6858736059479554, "obj2": 0.26043773160457323}, {"determining": "Max( ( MDR - MRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + MLU ) / MUC ) ) * ( Max( RMSe,CS ) - RMSe ) )", "obj1": 0.17843866171003717, "obj2": 0.6626164068150012}, {"determining": "Max( Min( MDR ,MRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + MLU ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.17286245353159851, "obj2": 0.6638432299795867}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( RRS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,RRS ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MDR ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( PN / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Max( MLU,( RRSe - CS ) )", "obj1": 0.6728624535315985, "obj2": 0.26741174255581285}, {"determining": "( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.3308550185873606, "obj2": 0.5247190520213265}, {"determining": "Max( ( MDR * MRS ),( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( CS + MUM ) ) + ( ( MUR * DS ) / MUC ) ) * ( ( MUC * DS ) / Max( RRSe,RCSe ) ) )", "obj1": 0.2100371747211896, "obj2": 0.6252494125676095}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM / ( ( ( FirstVNF_RAM * PN ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( Max( RRSe,MUR ) / ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "Max( Min( MDR ,MRS ),Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUM + RMSe ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) - RMSe ) )", "obj1": 0.2732342007434944, "obj2": 0.5646494330356153}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( MUR,Min( RMSe ,MLU ) ) )", "obj1": 0.9219330855018587, "obj2": 0.0612145106220065}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( AMS * FirstVNF_RAM_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( MUC / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.2211895910780669, "obj2": 0.6247062259618785}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9330855018587361, "obj2": 0.039318440631927375}, {"determining": "Max( Min( Max( Min( MDR ,MRS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( Max( ARS,PN ) / Min( ( MDR / BR ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5737183585393923}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7992565055762082, "obj2": 0.12761569347475687}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( ( ( MLU * MUC ) - ( DS / RRSe ) ),Max( ( MLU + ( MUC * MUM ) ),MUM ) ) * Min( DS ,RCSe ) )", "obj1": 0.8308550185873605, "obj2": 0.127140220210333}, {"determining": "( ( Min( ( ARS - FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( ( MLU * MUC ) * ( DS / MUC ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.027450498378790364}, {"determining": "( Max( ( ACS - BR ),( FirstVNF_RAM_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.36059479553903345, "obj2": 0.4897590385568019}, {"determining": "( ( MDR + CRS ) - Max( MDR,RRS ) )", "choosing": "( ( CS - MUR ) / ( MUC - DS ) )", "obj1": 0.9795539033457249, "obj2": 0.022723958261800372}, {"determining": "Min( Min( ( DDR / FirstVNF_RAM ) ,RRS ) ,( MDR / PN ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( MLU + RMSe ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.2527881040892193, "obj2": 0.595325400258136}, {"determining": "( ( MDR + CRS ) - FirstVNF_RAM )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( ( RMSe / MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RMSe / CS ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.015375014491431842}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( Max( ARS,PN ) / Min( ( MDR / BR ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.22676579925650558, "obj2": 0.6023652366738316}, {"determining": "( ( MDR + CRS ) - BR )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7815408127353363}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Max( Max( ( MLU + MUC ),( CS * MUR ) ),( ( DS + CS ) + ( DS - MLU ) ) ),( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) )", "obj1": 0.949814126394052, "obj2": 0.038354391928973254}, {"determining": "( Max( ( FirstVNF_Mem + MRS ),Min( MDR ,MDR ) ) - Max( ( AMS * Const ),( Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) ) * BR ) ) )", "choosing": "( ( ( MLU * MUC ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) ) + ( Max( CS,DS ) - ( CS + DS ) ) )", "obj1": 0.9107806691449815, "obj2": 0.0641544213166601}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4256505576208178, "obj2": 0.39133338017553376}], "6": [{"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.05762081784386617, "obj2": 0.8437656920782769}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),( Max( RMSe,CS ) / RMSe ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Max( ( ACS - ACS ),Min( FirstVNF_RAM_Server ,MDR ) ) * ( Max( MDR,MDR ) * Max( DDR,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_Mem ,BR ) / ( Const + ACS ) ) / ( ( MRS - FirstVNF_RAM_Server ) * Min( ACS ,BR ) ) ) ) + ( Min( Max( ( FirstVNF_Mem / PN ),( BR - FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) - ( Const + AMS ) ) ) * Max( ( ( FirstVNF_CPU_Server - Const ) / ( PN * PN ) ),Min( ( ARS / Const ) ,Min( CRS ,RRS ) ) ) ) ) + CRS ) - BR )", "choosing": "( ( ( ( CS / RCSe ) + ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( ( CS * DS ) ,MUC ) ) ) / Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.05762081784386617, "obj2": 0.8437656920782769}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( ( ( MUC / RMSe ) - RMSe ),Max( ( MLU + ( MUC * MUM ) ),MUM ) ) * Min( DS ,RCSe ) )", "obj1": 0.6449814126394052, "obj2": 0.2780845950639556}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( ( RMSe - RRSe ) * RMSe )", "obj1": 0.4479553903345725, "obj2": 0.38437806066885416}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Max( ( Max( ( ( ( MUR / MUC ) + ( RRSe * CS ) ) + ( Min( MUC ,RCSe ) / ( MUM - DS ) ) ),DS ) / CS ),Max( ( RCSe * MUM ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.5204460966542751, "obj2": 0.27919985886829646}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) ,( MLU - CS ) )", "obj1": 0.3587360594795539, "obj2": 0.45677263038738575}, {"determining": "( ( Min( ( ARS + FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.39219330855018586, "obj2": 0.42664704632352046}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Max( PN,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( ( ( MUC * DS ) / Max( RRSe,MUM ) ) + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.3345724907063197, "obj2": 0.494818257234616}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( DS - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.741635687732342, "obj2": 0.18481227980938653}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( ( CRS - MRS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( ( MUM + MLU ),Max( MLU,CS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.0702980566768606}, {"determining": "( ( Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) ) * BR ) + Min( PN ,( FirstVNF_Mem - FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) )", "obj1": 0.7230483271375465, "obj2": 0.20924945867760528}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - MRS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.2302193831891185}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,RRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RRSe,CS ) / RMSe ) )", "obj1": 0.4795539033457249, "obj2": 0.3046893244119039}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( ( ( ( ( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) - Min( Min( ( ( ( MRS + ACS ) - Max( FirstVNF_RAM_Server,DDR ) ) / ( Min( MDR ,ACS ) + Min( CRS ,FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * Max( BR,AMS ) ) + Min( ( AMS * ACS ) ,( RRS / FirstVNF_CPU ) ) ) ) ,( Max( Min( ( FirstVNF_Mem / PN ) ,Max( MDR,Const ) ),( Min( RRS ,FirstVNF_Mem_Server ) / ( Min( RRS ,FirstVNF_Mem_Server ) + RRS ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) / Max( DDR,FirstVNF_CPU_Server ) ) * ( Min( ACS ,FirstVNF_Mem ) - ( AMS * ACS ) ) ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( Min( Max( RRSe,RRSe ) ,( MUR - RRSe ) ) * ( CS * MUM ) ) ) )", "obj1": 0.08178438661710037, "obj2": 0.7953228327812242}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( MUC / RMSe ) - RMSe ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8494423791821561, "obj2": 0.09766388575849347}, {"determining": "( ( MDR + CRS ) - BR )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.1895910780669145, "obj2": 0.6358591178232232}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS - RRSe ) ) ) )", "obj1": 0.8252788104089219, "obj2": 0.11275406423838889}, {"determining": "Max( Min( MDR ,BR ),( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( CS + MUM ) ) + ( ( MUR + MLU ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.1579925650557621, "obj2": 0.6763794741892963}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.14976930410150227}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) ) )", "obj1": 0.40892193308550184, "obj2": 0.4038866381294241}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7936802973977695, "obj2": 0.12682007262076028}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( AMS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MRS ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( PN / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( DS * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) )", "obj1": 0.6895910780669146, "obj2": 0.22202461342235233}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.7862453531598513, "obj2": 0.13676838149065484}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM / ( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( MUC,RMSe ) ) ) )", "obj1": 0.12267657992565056, "obj2": 0.756639037524718}, {"determining": "Min( Min( ( DDR / FirstVNF_RAM ) ,RRS ) ,( MDR / PN ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( MLU + RMSe ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.2527881040892193, "obj2": 0.595325400258136}, {"determining": "Max( ( MDR / FirstVNF_Mem_Server ),( ACS - MDR ) )", "choosing": "( ( ( ( RMSe / CS ) - ( CS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * CS )", "obj1": 0.31784386617100374, "obj2": 0.5306199227548964}, {"determining": "Max( Min( MDR ,MRS ),Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUM + RMSe ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) - RMSe ) )", "obj1": 0.2732342007434944, "obj2": 0.5646494330356153}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / ( MDR - ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7063890305515513}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( Max( ARS,PN ) / Min( ( MDR / BR ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.22676579925650558, "obj2": 0.6023652366738316}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / BR ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( DS / ( MUC * CS ) )", "obj1": 0.2825278810408922, "obj2": 0.5441818311594024}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / ( MDR - ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ACS ) ) / ( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) )", "obj1": 0.12825278810408922, "obj2": 0.7244873325511026}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( RRS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MRS ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( AMS / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ),( MLU - CS ) )", "obj1": 0.6784386617100372, "obj2": 0.22664210113071706}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( MUR,Min( RMSe ,MLU ) ) )", "obj1": 0.9219330855018587, "obj2": 0.0612145106220065}, {"determining": "Max( ( MDR * MRS ),( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( CS + MUM ) ) + ( ( MUR * DS ) / MUC ) ) * ( ( MUC * DS ) / Max( RRSe,RCSe ) ) )", "obj1": 0.2100371747211896, "obj2": 0.6252494125676095}, {"determining": "Max( ( MDR - MRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + MLU ) / MUC ) ) * ( Max( RMSe,CS ) - RMSe ) )", "obj1": 0.17843866171003717, "obj2": 0.6626164068150012}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM / ( ( ( FirstVNF_RAM * PN ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( Max( RRSe,MUR ) / ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "( ( MDR + CRS ) - BR )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7815408127353363}, {"determining": "( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.3308550185873606, "obj2": 0.5247190520213265}, {"determining": "Max( Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( Max( ARS,PN ) / Min( ( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) / BR ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU - ( DS + MUM ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.2174721189591078, "obj2": 0.6163081365957541}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.027322143077214613}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Max( Max( ( MLU + MUC ),( CS * MUR ) ),( ( DS + CS ) + ( DS - MLU ) ) ),( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) )", "obj1": 0.949814126394052, "obj2": 0.038354391928973254}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9330855018587361, "obj2": 0.039318440631927375}, {"determining": "Max( Min( Max( Min( MDR ,MRS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( Max( ARS,PN ) / Min( ( MDR / BR ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5737183585393923}, {"determining": "( ( Min( MDR ,Min( AMS ,ACS ) ) * ( Min( MDR ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ( ( ACS - MDR ) / ( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - Max( ( CS * ( RMSe / RCSe ) ),Max( MUC,DS ) ) )", "obj1": 0.9739776951672863, "obj2": 0.022504466633670887}, {"determining": "( Max( ( FirstVNF_Mem + MRS ),Min( MDR ,MDR ) ) - Max( ( AMS * Const ),( Max( Min( MDR ,MRS ),( DDR / FirstVNF_Mem ) ) * BR ) ) )", "choosing": "( ( ( MLU * MUC ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) ) + ( Max( CS,DS ) - ( CS + DS ) ) )", "obj1": 0.9107806691449815, "obj2": 0.0641544213166601}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4795539033457249, "obj2": 0.3046893244119039}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8382899628252788, "obj2": 0.10132007579548877}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / PN ) / ( MDR - CRS ) ) ) * ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.5, "obj2": 0.28723261913231496}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Max( ( Max( ( ( ( MUR / MUC ) + ( RRSe * CS ) ) + ( Min( MUC ,RCSe ) / ( MUM - DS ) ) ),DS ) / CS ),Max( ( RCSe * CS ),Max( MUC,MUC ) ) ),( RRSe - RMSe ) )", "obj1": 0.5074349442379182, "obj2": 0.2840504399488838}], "7": [{"determining": "( ( ( Min( ( Max( ( CRS - ACS ),Min( FirstVNF_RAM_Server ,MDR ) ) * ( Max( MDR,MDR ) * Max( DDR,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_Mem ,BR ) / ( Const + ACS ) ) / ( ( MRS - FirstVNF_RAM_Server ) * Min( ACS ,BR ) ) ) ) + ( Min( Max( ( FirstVNF_Mem / PN ),( BR - FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) - ( Const + AMS ) ) ) * Max( ( ( FirstVNF_CPU_Server - Const ) / ( PN * PN ) ),Min( ( ARS / Const ) ,Min( CRS ,RRS ) ) ) ) ) + CRS ) - BR )", "choosing": "( ( ( ( MUR / RCSe ) + ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( ( CS * DS ) ,MUC ) ) ) / Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),( Max( RMSe,CS ) / RMSe ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8441518444256668}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( FirstVNF_CPU_Server - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( ( RMSe - RRSe ) * RMSe ) )", "obj1": 0.5613382899628253, "obj2": 0.2607610514599027}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.5985130111524164, "obj2": 0.23941326052085235}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Max( PN,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( ( ( MUC * DS ) / Max( RRSe,MUM ) ) + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.3345724907063197, "obj2": 0.494818257234616}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( ( CRS - MRS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( ( MUM + MLU ),Max( MLU,CS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.0702980566768606}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.185888445661512}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7211895910780669, "obj2": 0.16740509712456864}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.14976930410150227}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) ,( MLU - CS ) )", "obj1": 0.4256505576208178, "obj2": 0.37987319060073704}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( MUC / RMSe ) - RMSe ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8494423791821561, "obj2": 0.09766388575849347}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4052044609665427, "obj2": 0.39953032475299227}, {"determining": "( ( Min( ( ARS + FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.39219330855018586, "obj2": 0.42664704632352046}, {"determining": "Max( Min( ARS ,FirstVNF_Mem ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06505576208178439, "obj2": 0.8252899747448705}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( AMS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MRS ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( PN / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) / CS ),Max( ( DS * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) )", "obj1": 0.6895910780669146, "obj2": 0.22027393988971164}, {"determining": "( ( MDR + CRS ) - BR )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.1895910780669145, "obj2": 0.6358591178232232}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Max( ( Max( ( ( ( MUR / MUC ) + ( RRSe * CS ) ) + ( Min( MUC ,RCSe ) / ( MUM - DS ) ) ),DS ) / CS ),Max( ( RCSe * CS ),Max( MUC,MUC ) ) ),( RRSe - RMSe ) )", "obj1": 0.4591078066914498, "obj2": 0.33392089985364537}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) + Max( ( ACS - PN ),( Min( ARS ,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,CS ) - ( DS + MUM ) ) - ( ( RCSe + DS ) / ( RMSe * ( DS / RRSe ) ) ) ) ,( MLU - CS ) )", "obj1": 0.36988847583643125, "obj2": 0.4422310837674538}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7732342007434945, "obj2": 0.13467837609593505}, {"determining": "( ( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM / ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Min( BR ,( FirstVNF_RAM / ( FirstVNF_CPU_Server / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( DS / MUM ) * ( RCSe + MLU ) ) )", "obj1": 0.11524163568773234, "obj2": 0.7350866321506857}, {"determining": "Max( Min( MDR ,BR ),( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( CS + MUM ) ) + ( ( MUR + MLU ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.1579925650557621, "obj2": 0.6763794741892963}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - MRS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.2302193831891185}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) + ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + MLU ) ) ,( MLU - CS ) )", "obj1": 0.3587360594795539, "obj2": 0.45677263038738575}, {"determining": "( AMS / ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) * ARS ) )", "choosing": "Max( Max( ( Max( ( Max( RRSe,MUR ) / ( ( DS + MUM ) * MUR ) ),RMSe ) / CS ),Max( ( RCSe * MUM ),Max( MUC,DS ) ) ),( RRSe - MUM ) )", "obj1": 0.44423791821561337, "obj2": 0.35534557391178345}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3104089219330855, "obj2": 0.5300395912499116}, {"determining": "( Min( Max( Max( ( ( ( Max( MDR,FirstVNF_RAM ) * Min( RRS ,FirstVNF_Mem ) ) * Min( ( MRS - DDR ) ,( FirstVNF_RAM_Server * ACS ) ) ) + Min( ( Min( BR ,BR ) + ( FirstVNF_RAM * DDR ) ) ,( ( FirstVNF_Mem_Server / PN ) + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( Min( Min( ( PN / AMS ) ,( MDR + FirstVNF_RAM_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / ACS ) ) ) / ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + MRS ) ) + ( ( MDR + Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ),( ( Min( ( Max( FirstVNF_CPU,MDR ) / ( PN * AMS ) ) ,Max( ( PN * FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) ) * ( ( Min( MDR ,FirstVNF_RAM ) * Min( Const ,ACS ) ) / ( ( BR * AMS ) - ( PN * FirstVNF_RAM ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( BR * RRS ) ) - ( ( FirstVNF_RAM_Server - RRS ) + ( CRS + ARS ) ) ) * Min( ( Max( BR,MDR ) + ( MRS * ARS ) ) ,( ( ACS + DDR ) + ( PN + Const ) ) ) ) ) ) ,( ( Max( ( ( ( CRS / BR ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( Max( BR,MRS ) * ( FirstVNF_RAM_Server + DDR ) ) ),( ( ( ACS + PN ) + ( BR - FirstVNF_Mem_Server ) ) + Min( Max( MDR,PN ) ,( ACS * AMS ) ) ) ) - Max( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( CRS * ARS ) ) + ( Max( FirstVNF_RAM,PN ) * ( CRS + ARS ) ) ),( Max( ( PN * BR ),( DDR - ARS ) ) - ( ( FirstVNF_RAM_Server / RRS ) * Min( PN ,FirstVNF_CPU ) ) ) ) ) * ( ( ( ( Min( CRS ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,DDR ) ) / ( ( MRS + PN ) * ( CRS / FirstVNF_CPU_Server ) ) ) + ( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),Min( BR ,CRS ) ) - Max( ( MRS / CRS ),( RRS + CRS ) ) ) ) - ( Max( ( Min( FirstVNF_Mem ,CRS ) + Min( CRS ,FirstVNF_CPU ) ),( ( FirstVNF_Mem_Server * MRS ) * ( ARS * PN ) ) ) - Min( ( Max( AMS,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU / MDR ) + ( AMS + MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( ( Max( CRS,DDR ) - ( FirstVNF_CPU_Server / RRS ) ),( ( FirstVNF_CPU + PN ) - Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( Max( ( FirstVNF_RAM_Server * ACS ),Max( DDR,MDR ) ) + Min( Max( Const,MRS ) ,Max( RRS,FirstVNF_RAM ) ) ) ) * ( ( ( ( MRS + BR ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem - Const ) ,Max( ARS,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_Mem * ACS ) + ( FirstVNF_Mem_Server + ARS ) ) * Min( ( FirstVNF_Mem_Server - MDR ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) ) ) - Max( ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,( CRS / BR ) ) - Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),( AMS - Const ) ) ) - ( ( Max( ARS,DDR ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_CPU + MDR ) ) ) ),( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,CRS ) ) + Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),( CRS - FirstVNF_CPU_Server ) ) ) / Max( ( Max( Const,AMS ) + Max( PN,ARS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( MDR - CRS ) ) ) ) ) ) ,Min( ( ( Max( ( Min( PN ,FirstVNF_Mem_Server ) / ( RRS + ARS ) ),( ( CRS - ARS ) / ( RRS * Const ) ) ) - ( ( ( MDR + MDR ) - ( Const + FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + AMS ) * ( MRS * CRS ) ) ) ) * Max( Max( ( ( AMS / DDR ) / ( ACS * BR ) ),( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,PN ) ) ),Max( Max( ( FirstVNF_CPU / RRS ),Min( PN ,DDR ) ),Max( Max( FirstVNF_CPU_Server,MRS ),( MRS - FirstVNF_RAM ) ) ) ) ) ,( ( Max( ( Min( ACS ,FirstVNF_CPU ) + ( MRS * Const ) ),( Min( Const ,FirstVNF_CPU_Server ) - ( AMS * FirstVNF_RAM ) ) ) / Max( Min( ( RRS - Const ) ,( AMS + MDR ) ),Min( ( PN - CRS ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) / ( ( ( ( CRS + FirstVNF_CPU ) * ( Const / DDR ) ) + ( ( FirstVNF_CPU / PN ) * ( FirstVNF_Mem * DDR ) ) ) - ( ( Min( AMS ,MRS ) - Max( FirstVNF_Mem,Const ) ) / ( ( CRS - DDR ) / Min( MRS ,MRS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ),( MLU - CS ) )", "obj1": 0.6784386617100372, "obj2": 0.22664210113071706}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_CPU_Server * ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Max( Max( ( MLU + MUC ),( CS * MUR ) ),( ( DS + CS ) + ( DS - MLU ) ) ),( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( CS + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) )", "obj1": 0.9776951672862454, "obj2": 0.018917359261996846}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.2825278810408922, "obj2": 0.5441818311594024}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe - MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7020055011529114}, {"determining": "( ( ( Min( ( ACS - MDR ) ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( CS * ( RMSe / RCSe ) ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8104089219330854, "obj2": 0.11750952084434156}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Max( ( Max( ( ( ( MUR / MUC ) + ( RRSe * CS ) ) + ( Min( MUC ,RCSe ) / ( MUM - DS ) ) ),DS ) / CS ),Max( ( RCSe * MUM ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.5204460966542751, "obj2": 0.27919985886829646}, {"determining": "Max( ( MDR - MRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + MLU ) / MUC ) ) * ( Max( RMSe,CS ) - RMSe ) )", "obj1": 0.17843866171003717, "obj2": 0.6626164068150012}, {"determining": "( Min( ( ACS / BR ) ,( FirstVNF_CPU_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - CS ) ),( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( Min( Max( RRSe,RRSe ) ,( MUR - RRSe ) ) * ( CS * MUM ) ) ) )", "obj1": 0.08178438661710037, "obj2": 0.7953228327812242}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / ( MDR - ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( AMS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( ( MUR + DS ) / MUC ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) )", "obj1": 0.14869888475836432, "obj2": 0.699271462329308}, {"determining": "( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.3308550185873606, "obj2": 0.5247190520213265}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4795539033457249, "obj2": 0.3046893244119039}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.027322143077214613}, {"determining": "Max( ( MDR - MRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.2527881040892193, "obj2": 0.579782616805306}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) ,( MLU - CS ) )", "obj1": 0.3587360594795539, "obj2": 0.45677263038738575}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS + MUR ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.2302193831891185}, {"determining": "Max( Min( Max( Min( MDR ,MRS ),( FirstVNF_RAM / FirstVNF_Mem ) ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ),( Max( ARS,PN ) / Min( ( MDR / BR ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5935892126170415}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / ( MDR - ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ACS ) ) / ( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) )", "obj1": 0.12825278810408922, "obj2": 0.7244873325511026}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM / ( ( ( FirstVNF_RAM * PN ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( Max( RRSe,MUR ) / ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "Max( Min( MDR ,MRS ),Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUM + RMSe ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) - RMSe ) )", "obj1": 0.2732342007434944, "obj2": 0.5646494330356153}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.9256505576208178, "obj2": 0.049082806536725}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM / ( ( ( FirstVNF_RAM * PN ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( Max( RRSe,MUR ) / ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Max( ( Max( ( ( ( MUR / MUC ) + ( RRSe * CS ) ) + ( Min( MUC ,RCSe ) / ( MUM - DS ) ) ),DS ) / CS ),Max( ( RCSe * MUM ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.5204460966542751, "obj2": 0.27919985886829646}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4888475836431227, "obj2": 0.29998406835733066}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,( MRS - FirstVNF_RAM ) ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Max( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ),( MLU - CS ) ) ,( MLU - CS ) )", "obj1": 0.45353159851301117, "obj2": 0.345303944844472}, {"determining": "( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR + MLU ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.17100371747211895, "obj2": 0.6647021096296668}], "8": [{"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Max( ( CRS - ACS ),Min( FirstVNF_RAM_Server ,MDR ) ) * ( Max( MDR,MDR ) * Max( DDR,FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_Mem ,BR ) / ( Const + ACS ) ) / ( ( MRS - FirstVNF_RAM_Server ) * Min( ACS ,BR ) ) ) ) + ( Min( Max( ( FirstVNF_Mem / PN ),( BR - FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) - ( Const + AMS ) ) ) * Max( ( ( FirstVNF_CPU_Server - Const ) / ( PN * PN ) ),Min( ( ARS / Const ) ,Min( CRS ,RRS ) ) ) ) ) + CRS ) - BR )", "choosing": "( ( ( ( MUR / RCSe ) + ( DS / DS ) ) + ( Min( RMSe ,MUR ) * Min( ( CS * DS ) ,MUC ) ) ) / Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8441518444256668}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( FirstVNF_CPU_Server - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( ( RMSe - RRSe ) * RMSe ) )", "obj1": 0.5613382899628253, "obj2": 0.2607610514599027}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.5985130111524164, "obj2": 0.23941326052085235}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( Max( MUR,( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19516728624535315, "obj2": 0.6327710038491544}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - MRS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.2302193831891185}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,FirstVNF_CPU_Server ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.6951672862453532, "obj2": 0.20726997632388572}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.6579925650557621, "obj2": 0.20765938810296555}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3104089219330855, "obj2": 0.5300395912499116}, {"determining": "Max( Min( MDR ,MRS ),Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( MUM + RMSe ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) - RMSe ) )", "obj1": 0.2732342007434944, "obj2": 0.5646494330356153}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ( Max( ARS,PN ) / Min( ( MDR / BR ) ,FirstVNF_RAM ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( ( DS + MUM ) * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.9591078066914498, "obj2": 0.02434384237167176}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Max( PN,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( MLU ,MUR ) + ( ( ( MUC * DS ) / Max( RRSe,MUM ) ) + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) )", "obj1": 0.3345724907063197, "obj2": 0.494818257234616}, {"determining": "( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.3308550185873606, "obj2": 0.5247190520213265}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.79055852313977}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + RCSe ) ) )", "obj1": 0.2342007434944238, "obj2": 0.589143398044998}, {"determining": "( ( Min( ( Const * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( CS / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9330855018587361, "obj2": 0.03931844063192737}, {"determining": "( ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( CS * ( MUC / RCSe ) ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU / MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8364312267657993, "obj2": 0.10232490804378679}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS + MUR ) ) ) )", "obj1": 0.8011152416356877, "obj2": 0.1344406551482647}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( ( CRS - MRS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( ( MUM + MLU ),Max( MLU,CS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.0702980566768606}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( RMSe / CS ) - ( DS + MUM ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.724907063197026, "obj2": 0.16576577641983678}, {"determining": "( AMS / ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( MUR / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4423791821561338, "obj2": 0.35436474617623787}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7732342007434945, "obj2": 0.13467837609593505}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * Max( ( FirstVNF_Mem / AMS ),( CRS - AMS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RMSe - ( DS + MUM ) ) + ( ( MUR + MUC ) / ( RMSe * ( MUM / MUC ) ) ) ) ,( MLU - CS ) )", "obj1": 0.9107806691449815, "obj2": 0.06396538029853523}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + MLU ) ) ,( MLU - CS ) )", "obj1": 0.34014869888475835, "obj2": 0.4744264810388476}, {"determining": "Max( ( MDR - MRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.2527881040892193, "obj2": 0.579782616805306}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * PN ) )", "choosing": "( DS / ( DS + CS ) )", "obj1": 0.2825278810408922, "obj2": 0.5441818311594024}, {"determining": "( ( Min( ( ARS + FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.39219330855018586, "obj2": 0.42664704632352046}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( MUC / RMSe ) - RMSe ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8494423791821561, "obj2": 0.09766388575849347}, {"determining": "( Min( ( ACS / BR ) ,( FirstVNF_CPU_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - CS ) ),( ( ( MUC + RMSe ) / ( CS * DS ) ) - ( Min( Max( RRSe,RRSe ) ,( MUR - RRSe ) ) * ( CS * MUM ) ) ) )", "obj1": 0.08178438661710037, "obj2": 0.7953228327812242}, {"determining": "( ( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) * ARS ) )", "choosing": "Max( Max( ( Max( ( Max( ( ( MUR + MLU ) / MUC ),MUR ) / ( ( DS + MUM ) * MUR ) ),RMSe ) / CS ),Max( ( RCSe * MUM ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.4962825278810409, "obj2": 0.29257904422721326}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Max( ( Max( ( ( ( MUR / MUC ) + ( RRSe * CS ) ) + ( Min( MUC ,RCSe ) / ( MUM - DS ) ) ),DS ) / CS ),Max( ( RCSe * MUM ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.5204460966542751, "obj2": 0.27919985886829646}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4312267657992565, "obj2": 0.3652260219815207}, {"determining": "( ( ( Min( ( ACS - MDR ) ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( CS * ( RMSe / RCSe ) ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8104089219330854, "obj2": 0.11750952084434156}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4052044609665427, "obj2": 0.39953032475299227}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( ( MUM + MLU ),Min( MLU ,CS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.0702980566768606}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / ( MDR - ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ACS ) ) / ( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( ( ( RMSe / CS ) - ( DS + CS ) ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) )", "obj1": 0.14684014869888476, "obj2": 0.681486394840677}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,( MRS - FirstVNF_RAM ) ) ) ,( ( ARS / AMS ) - ( FirstVNF_CPU_Server + RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Max( ( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ),( MLU - DS ) ) ,( MLU - CS ) )", "obj1": 0.39776951672862454, "obj2": 0.41795987399103623}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM / ( ( ( FirstVNF_RAM * PN ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( Max( RRSe,MUR ) / ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "Max( Min( MDR ,BR ),( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( CS + MUM ) ) + ( ( MUR + MLU ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.1579925650557621, "obj2": 0.6763794741892963}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4144981412639405, "obj2": 0.3934440702622859}, {"determining": "Max( Min( ARS ,ACS ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8170561805676242}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_CPU_Server * ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Max( Max( ( MLU + MUC ),( CS * MUR ) ),( ( DS + CS ) + ( DS - MLU ) ) ),( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( CS + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) )", "obj1": 0.9776951672862454, "obj2": 0.018917359261996846}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.2342007434944238, "obj2": 0.589143398044998}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7211895910780669, "obj2": 0.16740509712456864}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe - MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7020055011529114}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) + Max( ( ACS - PN ),( Min( ARS ,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,CS ) - ( DS + MUM ) ) - ( ( RCSe + DS ) / ( RMSe * ( DS / RRSe ) ) ) ) ,( MLU - CS ) )", "obj1": 0.3736059479553903, "obj2": 0.4409248507409082}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.45353159851301117, "obj2": 0.33790178285466516}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.516728624535316, "obj2": 0.2832990996935312}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) + ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - MLU ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.185888445661512}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,( ( FirstVNF_CPU * AMS ) - FirstVNF_Mem_Server ) ) ) ) ) ),Min( ARS ,FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + ( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) ) / ( CS * DS ) ) - ( ( MUC * MUR ) - ( CS * MUM ) ) ) )", "obj1": 0.06319702602230483, "obj2": 0.8251176420619802}], "9": [{"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ( ARS / AMS ) - ( CRS - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RRSe - RMSe ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + Min( PN ,FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.12825278810408922, "obj2": 0.7397423079341812}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3104089219330855, "obj2": 0.5300395912499116}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.3271375464684015, "obj2": 0.48660608829725716}, {"determining": "Max( Min( MDR ,MRS ),( Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + MLU ) / MUC ) ) * ( Max( RMSe,Min( ( ( RMSe - ( DS + MUM ) ) + ( ( MUR + DS ) / ( RMSe * ( DS / MUC ) ) ) ) ,( MLU - CS ) ) ) / RMSe ) )", "obj1": 0.1654275092936803, "obj2": 0.6617157186297298}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.5985130111524164, "obj2": 0.23941326052085235}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( ( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),Min( ( Min( MLU ,MUR ) + ( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) ) )", "obj1": 0.21561338289962825, "obj2": 0.6272828925422692}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + MLU ) ) ,( MLU - CS ) )", "obj1": 0.34014869888475835, "obj2": 0.4744264810388476}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.6579925650557621, "obj2": 0.20765938810296555}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.36988847583643125, "obj2": 0.4602040150399443}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,FirstVNF_CPU_Server ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS + FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS - MLU ) ) )", "obj1": 0.4739776951672863, "obj2": 0.33772979462897174}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - MRS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.2302193831891185}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.23234200743494424, "obj2": 0.5975744610289486}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.6115241635687733, "obj2": 0.23296699868786036}, {"determining": "( ( Min( ( Const * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( CS / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9330855018587361, "obj2": 0.03931844063192737}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM - ( ( ( FirstVNF_RAM * PN ) + ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "( AMS / ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( MUR / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.27137546468401486, "obj2": 0.5638966714513398}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),Max( RMSe,CS ) )", "obj1": 0.9089219330855018, "obj2": 0.05520676049471126}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) + Max( ( ACS - PN ),( Min( ARS ,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,CS ) - ( DS + MUM ) ) - ( ( RCSe + DS ) / ( RMSe * ( DS / RRSe ) ) ) ) ,( MLU - CS ) )", "obj1": 0.3736059479553903, "obj2": 0.4409248507409082}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19516728624535315, "obj2": 0.6327710038491544}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_CPU_Server * ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Max( Max( ( MLU + MUC ),( CS * MUR ) ),( ( DS + CS ) + ( DS - MLU ) ) ),( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( CS + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) )", "obj1": 0.9776951672862454, "obj2": 0.018917359261996846}, {"determining": "( ( ( Min( ( ACS - MDR ) ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( CS * ( RMSe / MLU ) ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.15180802737139376}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) + ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - MLU ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.185888445661512}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ( Max( ARS,PN ) / Min( ( MDR / BR ) ,FirstVNF_RAM ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( ( DS + MUM ) * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.9591078066914498, "obj2": 0.02434384237167176}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * PN ) )", "choosing": "( DS / ( DS + CS ) )", "obj1": 0.2825278810408922, "obj2": 0.5441818311594024}, {"determining": "Max( Min( ARS ,ACS ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8170561805676242}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem + ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( RCSe * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7870250458309603}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,( ARS * AMS ) ) ) * ARS ) )", "choosing": "Max( Max( ( Max( ( ( ( MUR / MUC ) + ( ( RMSe / CS ) * CS ) ) + ( Min( MUC ,RCSe ) / ( MUM - DS ) ) ),DS ) / CS ),Max( ( RCSe * MUM ),Max( MUC,DS ) ) ),( RRSe - RMSe ) )", "obj1": 0.516728624535316, "obj2": 0.27525057987005036}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( ( CRS - MRS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( ( MUM + MLU ),Max( MLU,CS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.0702980566768606}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS + MUR ) ) ) )", "obj1": 0.8011152416356877, "obj2": 0.1344406551482647}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4052044609665427, "obj2": 0.39953032475299227}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / ( MDR - ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( MDR + CRS ) - Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) )", "obj1": 0.14312267657992564, "obj2": 0.7020055011529114}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.29739776951672864, "obj2": 0.5438252987333981}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( CS * MUM ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.002151243006290409}, {"determining": "( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) )", "obj1": 0.828996282527881, "obj2": 0.10673942698968711}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4312267657992565, "obj2": 0.3652260219815207}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( AMS / ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) - RMSe ) )", "obj1": 0.9275092936802974, "obj2": 0.048032037852736506}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,FirstVNF_CPU_Server ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.6951672862453532, "obj2": 0.20726997632388572}, {"determining": "( AMS / ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( MUR / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4423791821561338, "obj2": 0.35436474617623787}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7211895910780669, "obj2": 0.16740509712456864}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4144981412639405, "obj2": 0.3934440702622859}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( ( RMSe - RRSe ) * RMSe ) )", "obj1": 0.5613382899628253, "obj2": 0.2607610514599027}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe / CS ) - ( DS + CS ) ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.7713754646840149, "obj2": 0.13530649928529587}, {"determining": "( ( ( Min( ( ACS - MDR ) ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( CS * ( RMSe / RCSe ) ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8104089219330854, "obj2": 0.11750952084434156}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4888475836431227, "obj2": 0.3063650712311101}, {"determining": "( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - ( ( ( ( Max( ( FirstVNF_Mem + FirstVNF_Mem ),Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) * ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( DS + CS ) ) + ( ( MUR + DS ) / MUC ) ) * ( MUC / RMSe ) )", "obj1": 0.26579925650557623, "obj2": 0.5780738395164721}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( Max( MUR,( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19516728624535315, "obj2": 0.6327710038491544}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( ( MUM + MLU ),Min( MLU ,CS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.0702980566768606}], "10": [{"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ( ARS / AMS ) - ( CRS - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ( ARS / AMS ) - ( CRS - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RRSe - RMSe ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( Max( MUR,( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.14312267657992564, "obj2": 0.6842013136754982}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( ( RMSe - RRSe ) * RMSe ) )", "obj1": 0.5613382899628253, "obj2": 0.2607610514599027}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4052044609665427, "obj2": 0.39953032475299227}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) + Max( ( ACS - PN ),( Min( ARS ,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,CS ) - ( DS + MUM ) ) - ( ( RCSe + DS ) / ( RMSe * ( DS / RRSe ) ) ) ) ,( MLU - CS ) )", "obj1": 0.3736059479553903, "obj2": 0.4409248507409082}, {"determining": "( ( ( Min( ( ACS - MDR ) ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( CS * ( RMSe / MLU ) ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.15180802737139376}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / FirstVNF_CPU_Server )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * ( RRSe / MUC ) ) ) )", "obj1": 0.1412639405204461, "obj2": 0.7306993678838425}, {"determining": "Max( Min( ARS ,ACS ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0762081784386617, "obj2": 0.8170561805676242}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4646840148698885, "obj2": 0.3275043380546412}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM - ( ( ( FirstVNF_RAM * PN ) + ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( ( DS / ( DS * CS ) ) + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6877323420074349, "obj2": 0.20518303151684963}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + Min( PN ,FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Min( RMSe ,( MUR - RRSe ) ),( ( ( ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.12267657992565056, "obj2": 0.7397089716194073}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.5985130111524164, "obj2": 0.23941326052085235}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.6579925650557621, "obj2": 0.20765938810296555}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( ( ( AMS * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,RRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),Min( ( Min( MLU ,MUR ) + ( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) + ( MUC * CS ) ) ) ,( ( RMSe / CS ) / ( MUC * RRSe ) ) ) )", "obj1": 0.21561338289962825, "obj2": 0.6272828925422692}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe / CS ) - ( DS + CS ) ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.7713754646840149, "obj2": 0.13530649928529587}, {"determining": "( DDR / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + ( RRSe - ( ( MUR + DS ) / MUC ) ) ) ) + ( RCSe + MLU ) ) ,( MLU - CS ) )", "obj1": 0.31970260223048325, "obj2": 0.5049726939848422}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - MRS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.2302193831891185}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( Max( ARS,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( AMS ,FirstVNF_CPU_Server ) + Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUM ,( MLU - CS ) )", "obj1": 0.3587360594795539, "obj2": 0.45677263038738575}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.7936802973977695, "obj2": 0.13023990201444122}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_CPU_Server * ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.9330855018587361, "obj2": 0.03930768299794375}, {"determining": "( ( ( Min( ( ACS - MDR ) ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( CS * ( RMSe / RCSe ) ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8345724907063197, "obj2": 0.1025397435613209}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + MLU ) ) ,( MLU - CS ) )", "obj1": 0.34014869888475835, "obj2": 0.4744264810388476}, {"determining": "( ( ( ( PN - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( MUR * RMSe ) )", "obj1": 0.8996282527881041, "obj2": 0.048111041003064056}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.6115241635687733, "obj2": 0.23296699868786036}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7211895910780669, "obj2": 0.16740509712456864}, {"determining": "( AMS / Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) ,ARS ) )", "choosing": "( ( CS - RMSe ) - ( MUM / ( RMSe * ( DS + MUM ) ) ) )", "obj1": 0.8810408921933085, "obj2": 0.07766058657924507}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_CPU_Server * ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Max( Max( ( MLU + MUC ),( CS * MUR ) ),( ( DS + CS ) + ( DS - MLU ) ) ),( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( CS + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) )", "obj1": 0.9776951672862454, "obj2": 0.018917359261996846}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,MDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) ),( ( ( ( ( MUM / CS ) - ( DS + MUM ) ) + ( RMSe + CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.22676579925650558, "obj2": 0.5978421913024589}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem + ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( RCSe * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7870250458309603}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_CPU ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( ( MUR + DS ) / MUC ) ) ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.5315985130111525, "obj2": 0.26921074789345284}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( DS / ( DS * ( DS * CS ) ) )", "obj1": 0.08364312267657993, "obj2": 0.7948618200344861}, {"determining": "( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) )", "obj1": 0.2843866171003718, "obj2": 0.5410010214425489}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + RRS ) + Min( ARS ,CRS ) ) * ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - Min( DS ,MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5781555616926297}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( CS * MUM ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.002151243006290409}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,AMS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + ACS ) ) ) )", "choosing": "Max( ( RCSe / ( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( MUR / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4312267657992565, "obj2": 0.3652260219815207}, {"determining": "( AMS / ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) * ARS ) * ARS ) )", "choosing": "( Max( Min( RCSe ,Min( MUR ,RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.258364312267658, "obj2": 0.5709293214938352}, {"determining": "( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( ( CRS - MRS ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,Max( ( MUM + MLU ),Max( MLU,CS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.0702980566768606}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4144981412639405, "obj2": 0.3934440702622859}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.3048327137546468, "obj2": 0.5225234765819675}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4888475836431227, "obj2": 0.3063650712311101}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) + ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - MLU ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.185888445661512}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( AMS / ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) - RMSe ) )", "obj1": 0.9275092936802974, "obj2": 0.048032037852736506}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.185888445661512}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.3048327137546468, "obj2": 0.5225234765819675}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,Min( DS ,MUM ) ) + ( RCSe + MLU ) ) ,( MLU - CS ) )", "obj1": 0.45724907063197023, "obj2": 0.34816285476178616}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.18401486988847585, "obj2": 0.6446708142046479}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,ARS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) + Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( MUR + ( ( DS - CS ) * MUC ) ) - ( DS + MUM ) ) + ( ( MUR + DS ) / ( RMSe * ( DS / RRSe ) ) ) ) ,( MLU - CS ) )", "obj1": 0.36988847583643125, "obj2": 0.4455896604847716}], "11": [{"determining": "( ( Max( ( ( Max( Max( ( Const * FirstVNF_CPU ),Min( FirstVNF_Mem ,ARS ) ),( Max( MDR,Const ) - ( PN + ACS ) ) ) * ( Max( Min( MRS ,ARS ),Min( MRS ,CRS ) ) - ( ( CRS + MRS ) + ( FirstVNF_Mem_Server / MRS ) ) ) ) * ( Max( Max( Max( FirstVNF_Mem,Const ),Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),( ( PN * ACS ) - ( MDR + Const ) ) ) * ( ( Min( PN ,ACS ) + ( FirstVNF_CPU - MDR ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ),Max( Max( ( ( ( MDR / FirstVNF_CPU_Server ) / ( MRS / DDR ) ) * ( Min( ARS ,Const ) - Max( DDR,ARS ) ) ),Max( Max( ( PN - MDR ),Min( FirstVNF_CPU ,CRS ) ),( ( ACS * PN ) * Max( FirstVNF_Mem_Server,PN ) ) ) ),( ( Min( Min( AMS ,FirstVNF_CPU ) ,Max( MRS,DDR ) ) * ( ( PN - AMS ) - ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) - ( ( ( PN * ARS ) + Min( DDR ,MDR ) ) + ( ( FirstVNF_CPU - PN ) * ( PN / AMS ) ) ) ) ) ) / Min( ( ( ( Min( Min( AMS ,MDR ) ,Max( ACS,FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_CPU ,AMS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) - Min( Min( ( DDR * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) ,( ( FirstVNF_RAM_Server * PN ) * ( FirstVNF_CPU - RRS ) ) ) ) - ( ( Max( Max( MRS,ARS ),( ACS / MDR ) ) + Max( Min( AMS ,ACS ),( MDR / ARS ) ) ) + Max( ( Max( RRS,MDR ) + ( ACS / MRS ) ),( Min( Const ,CRS ) - ( RRS + Const ) ) ) ) ) ,( ( ( ( Min( ARS ,Const ) - Min( FirstVNF_CPU_Server ,DDR ) ) * Min( ( RRS * BR ) ,( RRS + AMS ) ) ) * ( Max( ( CRS * FirstVNF_CPU ),( DDR - BR ) ) * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) * ( Min( Max( ( BR + CRS ),Min( FirstVNF_Mem_Server ,ACS ) ) ,( Max( FirstVNF_CPU_Server,Const ) / Max( ARS,MDR ) ) ) - ( ( ( FirstVNF_CPU / MRS ) * Max( FirstVNF_CPU_Server,RRS ) ) / ( ( ARS + BR ) / ( DDR - FirstVNF_CPU ) ) ) ) ) ) ) - ( ( Max( ( Max( Max( Min( AMS ,Const ),( FirstVNF_Mem / ACS ) ),Max( ( PN - RRS ),Max( MDR,FirstVNF_Mem_Server ) ) ) + Max( ( ( FirstVNF_CPU * ACS ) * Min( CRS ,ACS ) ),Min( Min( FirstVNF_Mem_Server ,ARS ) ,( DDR * CRS ) ) ) ),( ( ( Max( ARS,CRS ) / ( FirstVNF_CPU / FirstVNF_RAM ) ) / ( ( ACS / AMS ) * Max( FirstVNF_Mem,DDR ) ) ) - ( ( ( MRS / Const ) + ( FirstVNF_Mem_Server - AMS ) ) - Max( ( AMS * FirstVNF_Mem_Server ),Max( RRS,MDR ) ) ) ) ) + ( ( ( Min( Max( FirstVNF_RAM_Server,ACS ) ,( RRS / CRS ) ) + ( ( RRS + RRS ) / ( RRS / FirstVNF_RAM ) ) ) + Max( ( ( FirstVNF_CPU_Server + ACS ) * ( FirstVNF_CPU / FirstVNF_RAM ) ),( ( DDR - FirstVNF_RAM ) - ( FirstVNF_CPU * ACS ) ) ) ) + Min( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) - ( MRS * PN ) ) * Max( ( Const + FirstVNF_CPU ),( ACS / MDR ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) / Min( ARS ,PN ) ) ,( ( ACS * FirstVNF_Mem ) - ( FirstVNF_Mem + CRS ) ) ) ) ) ) * Min( ( Min( ( ( ( FirstVNF_Mem / BR ) - ( Const - BR ) ) * Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,Min( Max( ( MDR + ACS ),( DDR - FirstVNF_Mem_Server ) ) ,( Max( ARS,FirstVNF_RAM_Server ) + ( ARS * ARS ) ) ) ) + Min( Min( ( ( DDR / MDR ) / ( ARS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( FirstVNF_RAM + RRS ) ) ) ,Min( ( Min( Const ,RRS ) + Min( CRS ,FirstVNF_RAM_Server ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Max( ARS,ARS ) ) ) ) ) ,( Min( ( Max( Max( DDR,FirstVNF_Mem_Server ),( FirstVNF_CPU * CRS ) ) / ( Max( RRS,RRS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ( CRS / ARS ) ) ,( Max( MDR,FirstVNF_Mem ) * Max( MRS,Const ) ) ) ) - ( ( ( Min( MDR ,BR ) + ( BR / FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM + MRS ) - ( DDR + ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,RRS ) ),( ( DDR / CRS ) * ( ACS + Const ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUR / ( Max( ( RRSe + MUC ),( MUC + RCSe ) ) - RCSe ) ) / ( RRSe - MUM ) ) ,MLU ),( MLU + ( Min( ( RMSe / ( MUR * MLU ) ) ,( ( ( RCSe * RCSe ) / MLU ) * ( DS * DS ) ) ) / Min( ( ( RMSe - Max( MUC,MUC ) ) / RRSe ) ,( Max( ( MUC - RRSe ),MUM ) - RRSe ) ) ) ) ) - ( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ( ARS / AMS ) - ( CRS - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( ( Min( ( ACS - MDR ) ,( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.3587360594795539, "obj2": 0.4177372498012808}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "( ( DS - RMSe ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.9684014869888475, "obj2": 0.017921643721574353}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( FirstVNF_RAM * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) )", "choosing": "( Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) * ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.42936802973977695, "obj2": 0.3644397818027577}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.48698884758364314, "obj2": 0.30139785740094877}, {"determining": "( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( ACS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( MUC,DS ) / CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) )", "obj1": 0.35687732342007433, "obj2": 0.4697819107674198}, {"determining": "Max( Min( ARS ,ACS ),Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( ( MUM / ( RMSe * ( DS / RRSe ) ) ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.13382899628252787, "obj2": 0.7171376201271622}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - MRS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.2302193831891185}, {"determining": "( ( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) / ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) * ARS ) * ARS ) )", "choosing": "( Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5697523196422359}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.18401486988847585, "obj2": 0.6446708142046479}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.6579925650557621, "obj2": 0.20765938810296555}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_CPU ) / ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( ( ( ( RMSe / CS ) - ( ( RMSe / CS ) + MUM ) ) + ( RMSe / CS ) ) - MUM ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.40148698884758366, "obj2": 0.4000060001817112}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + Min( PN ,FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Min( RMSe ,( MUR - RRSe ) ),( ( ( ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.12267657992565056, "obj2": 0.7397089716194073}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,CRS ) ) * ( ( ARS / AMS ) / ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,Const ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU * ( ( MUR + MUM ) / ( RMSe * ( DS / RRSe ) ) ) ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.11221802972557851}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( Max( MUR,( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) ) )", "obj1": 0.17472118959107807, "obj2": 0.6609756158051295}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.20446096654275092, "obj2": 0.6259029168545873}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( Max( Min( DS ,Min( MUR ,RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5450204245011241}, {"determining": "( ( ( Min( ( ACS - MDR ) ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( CS * ( RMSe / MLU ) ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.15180802737139376}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( PN ,CRS ) ) / ARS ) )", "choosing": "( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) * ( ( RMSe - RRSe ) * RMSe ) )", "obj1": 0.5650557620817844, "obj2": 0.25993516394664623}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( ACS - MDR ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.15985130111524162, "obj2": 0.6797918847606038}, {"determining": "( ( ( ( PN - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( MUR * RMSe ) )", "obj1": 0.8996282527881041, "obj2": 0.048111041003064056}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) * CS ) ) ) ,( MLU - CS ) )", "obj1": 0.32899628252788105, "obj2": 0.4955137305739148}, {"determining": "( DDR / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + ( RRSe - ( ( MUR + DS ) / MUC ) ) ) ) + ( RCSe + MLU ) ) ,( MLU - CS ) )", "obj1": 0.31970260223048325, "obj2": 0.5049726939848422}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.20817843866171004, "obj2": 0.6100280049229833}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,Min( DS ,MUM ) ) + ( RCSe + MLU ) ) ,( MLU - CS ) )", "obj1": 0.45724907063197023, "obj2": 0.34816285476178616}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) * ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.7342007434944238, "obj2": 0.15673040076914715}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe / CS ) - ( DS + CS ) ) - ( MUM / ( RMSe * ( DS / ( ( ( ( CS * MUM ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) ) ) ) )", "obj1": 0.8475836431226765, "obj2": 0.1004655865600404}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.6115241635687733, "obj2": 0.23296699868786036}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7973977695167286, "obj2": 0.12770437185547512}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) - ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) )", "obj1": 0.13940520446096655, "obj2": 0.6870548123497645}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,MDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) ),( ( ( ( ( MUM / CS ) - ( DS + MUM ) ) + ( RMSe + CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.22676579925650558, "obj2": 0.5978421913024589}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4646840148698885, "obj2": 0.3275043380546412}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_CPU_Server * ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.9330855018587361, "obj2": 0.03930768299794375}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8412131249105225}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( ( RMSe - RRSe ) * RMSe ) )", "obj1": 0.5613382899628253, "obj2": 0.2607610514599027}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM - ( ( ( FirstVNF_RAM * PN ) + ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( AMS / ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) - RMSe ) )", "obj1": 0.9275092936802974, "obj2": 0.04803203785273649}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ( ACS - MDR ) ,( BR + ACS ) ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( AMS ,FirstVNF_CPU_Server ) + Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUM ,( ( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) - CS ) )", "obj1": 0.5, "obj2": 0.28461956477712597}, {"determining": "Max( Min( ARS ,ACS ),( DDR - FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,RCSe ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8177173233100176}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4144981412639405, "obj2": 0.3934440702622859}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + Max( RCSe,MLU ) ) ,( MLU - CS ) )", "obj1": 0.34014869888475835, "obj2": 0.4744264810388476}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS + MUR ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.19599457263661743}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.3048327137546468, "obj2": 0.5225234765819675}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( ( DS / ( DS * CS ) ) + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6877323420074349, "obj2": 0.20518303151684963}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),PN ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( DS * CS ) ) )", "obj1": 0.10966542750929369, "obj2": 0.7545266408573137}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.5985130111524164, "obj2": 0.23941326052085235}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem + ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( RCSe * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7870250458309603}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_CPU ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( ( MUR + DS ) / MUC ) ) ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.5315985130111525, "obj2": 0.26921074789345284}], "12": [{"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ( ARS / AMS ) - ( CRS - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + ( RRSe - ( ( MUR + DS ) / MUC ) ) ) ) + ( RCSe + MLU ) ) ,( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Max( Max( ( Const * FirstVNF_CPU ),Min( FirstVNF_Mem ,ARS ) ),( Max( MDR,Const ) - ( PN + ACS ) ) ) * ( Max( Min( MRS ,ARS ),Min( MRS ,CRS ) ) - ( ( CRS + MRS ) + ( FirstVNF_Mem_Server / MRS ) ) ) ) * ( Max( Max( Max( FirstVNF_Mem,Const ),Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),( ( PN * ACS ) - ( MDR + Const ) ) ) * ( ( Min( PN ,ACS ) + ( FirstVNF_CPU - MDR ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - ( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ),Max( Max( ( ( ( MDR / FirstVNF_CPU_Server ) / ( MRS / DDR ) ) * ( Min( ARS ,Const ) - Max( DDR,ARS ) ) ),Max( Max( ( PN - MDR ),Min( FirstVNF_CPU ,CRS ) ),( ( ACS * PN ) * Max( FirstVNF_Mem_Server,PN ) ) ) ),( ( Min( Min( AMS ,FirstVNF_CPU ) ,Max( MRS,DDR ) ) * ( ( PN - AMS ) - ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) - ( ( ( PN * ARS ) + Min( DDR ,MDR ) ) + ( ( FirstVNF_CPU - PN ) * ( PN / AMS ) ) ) ) ) ) / Min( ( ( ( Min( Min( AMS ,MDR ) ,Max( ACS,FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_CPU ,AMS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) - Min( Min( ( DDR * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) ,( ( FirstVNF_RAM_Server * PN ) * ( FirstVNF_CPU - RRS ) ) ) ) - ( ( Max( Max( MRS,ARS ),( ACS / MDR ) ) + Max( Min( AMS ,ACS ),( MDR / ARS ) ) ) + Max( ( Max( RRS,MDR ) + ( ACS / MRS ) ),( Min( Const ,CRS ) - ( RRS + Const ) ) ) ) ) ,( ( ( ( Min( ARS ,Const ) - Min( FirstVNF_CPU_Server ,DDR ) ) * Min( ( RRS * BR ) ,( RRS + AMS ) ) ) * ( Max( ( CRS * FirstVNF_CPU ),( DDR - BR ) ) * ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) * ( Min( Max( ( BR + CRS ),Min( FirstVNF_Mem_Server ,ACS ) ) ,( Max( FirstVNF_CPU_Server,Const ) / Max( ARS,MDR ) ) ) - ( ( ( FirstVNF_CPU / MRS ) * Max( FirstVNF_CPU_Server,RRS ) ) / ( ( ARS + BR ) / ( DDR - FirstVNF_CPU ) ) ) ) ) ) ) - ( ( Max( ( Max( Max( Min( AMS ,Const ),( FirstVNF_Mem / ACS ) ),Max( ( PN - RRS ),Max( MDR,FirstVNF_Mem_Server ) ) ) + Max( ( ( FirstVNF_CPU * ACS ) * Min( CRS ,ACS ) ),Min( Min( FirstVNF_Mem_Server ,ARS ) ,( DDR * CRS ) ) ) ),( ( ( Max( ARS,CRS ) / ( FirstVNF_CPU / FirstVNF_RAM ) ) / ( ( ACS / AMS ) * Max( FirstVNF_Mem,DDR ) ) ) - ( ( ( MRS / Const ) + ( FirstVNF_Mem_Server - AMS ) ) - Max( ( AMS * FirstVNF_Mem_Server ),Max( RRS,MDR ) ) ) ) ) + ( ( ( Min( Max( FirstVNF_RAM_Server,ACS ) ,( RRS / CRS ) ) + ( ( RRS + RRS ) / ( RRS / FirstVNF_RAM ) ) ) + Max( ( ( FirstVNF_CPU_Server + ACS ) * ( FirstVNF_CPU / FirstVNF_RAM ) ),( ( DDR - FirstVNF_RAM ) - ( FirstVNF_CPU * ACS ) ) ) ) + Min( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) - ( MRS * PN ) ) * Max( ( Const + FirstVNF_CPU ),( ACS / MDR ) ) ) ,Min( ( ( MDR / FirstVNF_RAM ) / Min( ARS ,PN ) ) ,( ( ACS * FirstVNF_Mem ) - ( FirstVNF_Mem + CRS ) ) ) ) ) ) * Min( ( Min( ( ( ( FirstVNF_Mem / BR ) - ( Const - BR ) ) * Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,Min( Max( ( MDR + ACS ),( DDR - FirstVNF_Mem_Server ) ) ,( Max( ARS,FirstVNF_RAM_Server ) + ( ARS * ARS ) ) ) ) + Min( Min( ( ( DDR / MDR ) / ( ARS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( FirstVNF_RAM + RRS ) ) ) ,Min( ( Min( Const ,RRS ) + Min( CRS ,FirstVNF_RAM_Server ) ) ,Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Max( ARS,ARS ) ) ) ) ) ,( Min( ( Max( Max( DDR,FirstVNF_Mem_Server ),( FirstVNF_CPU * CRS ) ) / ( Max( RRS,RRS ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - ( CRS / ARS ) ) ,( Max( MDR,FirstVNF_Mem ) * Max( MRS,Const ) ) ) ) - ( ( ( Min( MDR ,BR ) + ( BR / FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM + MRS ) - ( DDR + ARS ) ) ) * Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,RRS ) ),( ( DDR / CRS ) * ( ACS + Const ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( MUR / ( Max( ( RRSe + MUC ),( MUC + RCSe ) ) - RCSe ) ) / ( RRSe - MUM ) ) ,MLU ),( MLU + ( Min( ( RMSe / ( MUR * MLU ) ) ,( ( ( RCSe * RCSe ) / MLU ) * ( DS * DS ) ) ) / Min( ( ( RMSe - Max( MUC,MUC ) ) / RRSe ) ,( Max( ( MUC - RRSe ),MUM ) - RRSe ) ) ) ) ) - ( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7973977695167286, "obj2": 0.12770437185547512}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.671003717472119, "obj2": 0.1875144346298563}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + Min( PN ,FirstVNF_RAM ) ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,Min( MLU ,( MUR - RRSe ) ) ) / RMSe ) )", "obj1": 0.13197026022304834, "obj2": 0.6854535589114058}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( Max( Min( DS ,Min( MUR ,RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5450204245011241}, {"determining": "( DDR / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( DDR / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MUC * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.16680128349242043}, {"determining": "( ( Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + Const ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / RMSe ) - ( DS + MUM ) ) + ( CS * MUM ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.7453531598513011, "obj2": 0.15046509127651012}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.34572490706319703, "obj2": 0.43967319042074876}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_CPU ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( ( MUR + DS ) / MUC ) ) ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.5315985130111525, "obj2": 0.26921074789345284}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,CRS ) ) * ( ( ARS / AMS ) / ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,Const ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU * ( ( MUR + MUM ) / ( RMSe * ( DS / RRSe ) ) ) ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.11221802972557851}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + Min( PN ,FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Min( RMSe ,( MUR - RRSe ) ),( ( ( ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.12267657992565056, "obj2": 0.7397089716194073}, {"determining": "( ( ( ( PN - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( MUR * RMSe ) )", "obj1": 0.8996282527881041, "obj2": 0.048111041003064056}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.6579925650557621, "obj2": 0.20765938810296555}, {"determining": "( ( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) / ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) * ARS ) * ARS ) )", "choosing": "( Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5697523196422359}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4144981412639405, "obj2": 0.3934440702622859}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) / ( CS * DS ) ) - ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.20446096654275092, "obj2": 0.6259029168545873}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "( ( DS - RMSe ) - ( MUM / ( RMSe / CS ) ) )", "obj1": 0.9535315985130112, "obj2": 0.023690394901991124}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.3903345724907063, "obj2": 0.3972363711981537}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( Max( RMSe,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.5817843866171004, "obj2": 0.25742611161729617}, {"determining": "( ( Min( ( ACS - MDR ) ,( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.3587360594795539, "obj2": 0.4177372498012808}, {"determining": "( ( ( PN / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( ( ( CS * MUM ) + ( RMSe / CS ) ) - MUM ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( CS - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.6115241635687733, "obj2": 0.23269292050023854}, {"determining": "Max( Min( ARS ,ACS ),( DDR - FirstVNF_Mem ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,RCSe ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8177173233100176}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,MDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) ),( ( ( ( ( MUM / CS ) - ( DS + MUM ) ) + ( RMSe + CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.22676579925650558, "obj2": 0.5978421913024589}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.18401486988847585, "obj2": 0.6446708142046479}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_CPU_Server * ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.9330855018587361, "obj2": 0.03930768299794375}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ( ACS - MDR ) ,( BR + ACS ) ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( AMS ,FirstVNF_CPU_Server ) + Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUM ,( ( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) - CS ) )", "obj1": 0.5, "obj2": 0.28461956477712597}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( DS / ( DS * ( DS * CS ) ) )", "obj1": 0.07992565055762081, "obj2": 0.7994871295720622}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / FirstVNF_Mem ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( DS * Max( MUR,( ( DS - CS ) * MUC ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.004839465712923337}, {"determining": "( ( ( Min( ( ACS - MDR ) ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * CRS ) ) - ACS ) - ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( Max( MUR,( ( DS - CS ) + MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) ) )", "obj1": 0.4795539033457249, "obj2": 0.3046424418775113}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.8420074349442379, "obj2": 0.09968455149171948}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + Max( RCSe,MLU ) ) ,( MLU - CS ) )", "obj1": 0.34014869888475835, "obj2": 0.4744264810388476}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4646840148698885, "obj2": 0.3275043380546412}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( Max( MUR,( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / MUM ) ) )", "obj1": 0.1579925650557621, "obj2": 0.6755047900631445}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem + ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( RCSe * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7870250458309603}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * RMSe ) )", "obj1": 0.8754646840148699, "obj2": 0.0662475600341751}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.23234200743494424, "obj2": 0.5823522794914832}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM - ( ( ( FirstVNF_RAM * PN ) + ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.3048327137546468, "obj2": 0.5225234765819675}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( AMS / ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) * ( Max( RMSe,CS ) - RMSe ) )", "obj1": 0.9275092936802974, "obj2": 0.04803203785273649}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) * CS ) ) ) ,( MLU - CS ) )", "obj1": 0.32899628252788105, "obj2": 0.4955137305739148}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) * ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.7342007434944238, "obj2": 0.15673040076914715}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.3048327137546468, "obj2": 0.5225234765819675}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.6449814126394052, "obj2": 0.23145844196912146}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - MRS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.2302193831891185}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / MUC ) ) * ( ( RMSe - RRSe ) * RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.26302784769430976}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.48698884758364314, "obj2": 0.30139785740094877}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8321718787814563}], "13": [{"determining": "( ( Min( Min( PN ,ACS ) ,( Min( AMS ,ACS ) * CRS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUR / Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ( ARS / AMS ) - ( CRS - RRS ) ) ) / AMS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + ( RRSe - ( ( MUR + DS ) / MUC ) ) ) ) + ( RCSe + MLU ) ) ,( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.671003717472119, "obj2": 0.1875144346298563}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + Min( PN ,FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Min( RMSe ,( MUR - RRSe ) ),( ( ( ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.12267657992565056, "obj2": 0.7397089716194073}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) * CS ) ) ) ,( MLU - CS ) )", "obj1": 0.32899628252788105, "obj2": 0.4955137305739148}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.34572490706319703, "obj2": 0.43967319042074876}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( RMSe * CS ) ) ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.6579925650557621, "obj2": 0.20765938810296555}, {"determining": "( ( Min( ( ACS - MDR ) ,( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.3587360594795539, "obj2": 0.4177372498012808}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + Max( RCSe,MLU ) ) ,( MLU - CS ) )", "obj1": 0.34014869888475835, "obj2": 0.4744264810388476}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.13197026022304834, "obj2": 0.6854535589114058}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( Max( Min( DS ,Min( MUR ,RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5450204245011241}, {"determining": "( ( ( ( PN - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( MUR * RMSe ) )", "obj1": 0.8996282527881041, "obj2": 0.048111041003064056}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.5, "obj2": 0.2845102412815898}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "( ( DS - RMSe ) - ( MUM / ( RMSe / CS ) ) )", "obj1": 0.9535315985130112, "obj2": 0.023690394901991124}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ACS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - ( RMSe * ( RRSe / RRSe ) ) ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.45353159851301117, "obj2": 0.35837149402484997}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM - ( ( ( FirstVNF_RAM * PN ) + ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "( DDR / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( DDR / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MUC * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.16680128349242043}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,MDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) ),( ( ( ( ( MUM / CS ) - ( DS + MUM ) ) + ( RMSe + CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.22676579925650558, "obj2": 0.5978421913024589}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + BR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.18401486988847585, "obj2": 0.6446708142046479}, {"determining": "( ( Max( ( ACS - MDR ),( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) * ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4070631970260223, "obj2": 0.3895820969514588}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,PN ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.5929368029739777, "obj2": 0.2378433594982412}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( Max( RMSe,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.5817843866171004, "obj2": 0.25742611161729617}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.7676579925650557, "obj2": 0.13910998871930544}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( ( Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.40450517724570784}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.3048327137546468, "obj2": 0.5225234765819675}, {"determining": "( DDR / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.09851301115241635, "obj2": 0.7755304610394618}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( CRS - RRS ) ) ) / FirstVNF_RAM ) * ARS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( Min( CS ,( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.21189591078066913, "obj2": 0.618441722299953}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.26765799256505574, "obj2": 0.5545326894410959}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * RMSe ) )", "obj1": 0.8754646840148699, "obj2": 0.0662475600341751}, {"determining": "( ( ( PN / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( Max( ( ACS - PN ),( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( ( ( CS * MUM ) + ( RMSe / CS ) ) - MUM ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( CS - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.6115241635687733, "obj2": 0.23269292050023854}, {"determining": "( ( ( Min( ( ACS - MDR ) ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / AMS ) * CRS ) ) - ACS ) - ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( Max( MUR,( ( DS - CS ) + MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) ) )", "obj1": 0.4795539033457249, "obj2": 0.3046424418775113}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.8420074349442379, "obj2": 0.09968455149171948}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,CRS ) ) * ( ( ARS / AMS ) / ( FirstVNF_CPU_Server - RRS ) ) ) / Min( Min( Const ,FirstVNF_CPU_Server ) ,Max( ( ACS - PN ),( Min( ARS ,Const ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU * ( ( MUR + MUM ) / ( RMSe * ( DS / RRSe ) ) ) ) - ( MUM / ( RMSe * ( DS / RRSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.11221802972557851}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.3048327137546468, "obj2": 0.5225234765819675}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6245353159851301, "obj2": 0.21902874071654002}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.23234200743494424, "obj2": 0.5823522794914832}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) ) ,( MLU - CS ) )", "obj1": 0.4628252788104089, "obj2": 0.3300981655454661}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem + ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( RCSe * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.09107806691449814, "obj2": 0.7951729015991019}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.4646840148698885, "obj2": 0.3275043380546412}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + MDR ) + Min( ARS ,CRS ) ) * ( ( ARS + AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) ) / FirstVNF_CPU ) / ARS ) )", "choosing": "( ( ( ( RMSe / DS ) - ( DS + CS ) ) + ( ( ( ( DS + MUM ) * ( ( RMSe * CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( ( MUR + DS ) / MUC ) ) ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.5315985130111525, "obj2": 0.26921074789345284}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8321718787814563}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS + RRSe ) ) ) )", "obj1": 0.7862453531598513, "obj2": 0.13676838149065484}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( CS + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8152693108595899}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_CPU_Server * ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.9330855018587361, "obj2": 0.03930768299794375}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) * ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.7342007434944238, "obj2": 0.15673040076914715}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / FirstVNF_Mem ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( DS * Max( MUR,( ( DS - CS ) * MUC ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.004839465712923337}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_CPU ) / ARS ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( ( DS - MUM ) * ( RRSe / ( ( MUR + DS ) / MUC ) ) ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.5315985130111525, "obj2": 0.26921074789345284}], "14": [{"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM - ( ( ( FirstVNF_RAM * PN ) + ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( PN ,ACS ) ,( Min( AMS ,ACS ) * CRS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUR / Max( DS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + Min( PN ,FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Min( RMSe ,( MUR - RRSe ) ),( ( ( ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.12267657992565056, "obj2": 0.7397089716194073}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.13197026022304834, "obj2": 0.6854535589114058}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.671003717472119, "obj2": 0.1875144346298563}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) * Min( ( ACS - MDR ) ,( BR / ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS - MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.15055762081784388, "obj2": 0.6693953193084763}, {"determining": "( ( Max( ( ACS - MDR ),( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) * ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4070631970260223, "obj2": 0.3895820969514588}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.34572490706319703, "obj2": 0.43967319042074876}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_CPU_Server * ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.9330855018587361, "obj2": 0.03930768299794375}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ACS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - ( RMSe * ( RRSe / RRSe ) ) ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.45353159851301117, "obj2": 0.35837149402484997}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.2825278810408922, "obj2": 0.5198009372027576}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( FirstVNF_CPU_Server - RRS ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3104089219330855, "obj2": 0.5030401355879989}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) * ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.7342007434944238, "obj2": 0.15673040076914715}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( DS + RRSe ) ) ) )", "obj1": 0.7862453531598513, "obj2": 0.13676838149065484}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.5, "obj2": 0.2845102412815898}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + RRS ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( DS / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.3828996282527881, "obj2": 0.4043014432803673}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "( ( DS - RMSe ) - ( MUM / ( RMSe / CS ) ) )", "obj1": 0.9535315985130112, "obj2": 0.023690394901991124}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.5464684014869888, "obj2": 0.26667655187694916}, {"determining": "( DDR / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( DDR / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MUC * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.16680128349242043}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM - ( ( ( FirstVNF_RAM * PN ) + ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( MUM + CS ) ) ) ) ,( MLU - CS ) )", "obj1": 0.32899628252788105, "obj2": 0.49311890112588425}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * RMSe ) )", "obj1": 0.8754646840148699, "obj2": 0.0662475600341751}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS + AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) ) / FirstVNF_CPU ) / ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6508559852258062}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_CPU ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.8178438661710037, "obj2": 0.1217024197813649}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,MDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) ),( ( ( ( ( MUM / CS ) - ( DS + MUM ) ) + ( RMSe + CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.22676579925650558, "obj2": 0.5978421913024589}, {"determining": "( ( ( ( PN - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( MUR * RMSe ) )", "obj1": 0.8996282527881041, "obj2": 0.048111041003064056}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( DDR / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( Max( ( ACS - MDR ),( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.09851301115241635, "obj2": 0.7735227491896287}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( Max( Min( DS ,Min( MUR ,RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5450204245011241}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( Max( Max( ( Max( RMSe,DS ) / CS ),Max( ( RCSe * ( RMSe / CS ) ),Max( MUC,DS ) ) ),( RRSe - ( ( MUR + DS ) / MUC ) ) ) * ( DS / RRSe ) ) ) )", "obj1": 0.5817843866171004, "obj2": 0.25742611161729617}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( CRS - RRS ) ) ) / FirstVNF_RAM ) * ARS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( Min( CS ,( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.21189591078066913, "obj2": 0.618441722299953}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + Max( RCSe,MLU ) ) ,( MLU - CS ) )", "obj1": 0.34014869888475835, "obj2": 0.4744264810388476}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( CS + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8152693108595899}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( AMS * Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) / ( CS * DS ) ) * ( Min( ( RMSe / CS ) ,( DS + MUM ) ) * ( CS * MUM ) ) ) )", "obj1": 0.08736059479553904, "obj2": 0.8128128197851384}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) ) ,( MLU - CS ) )", "obj1": 0.4628252788104089, "obj2": 0.3300981655454661}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS + MLU ) ) )", "obj1": 0.8940520446096655, "obj2": 0.05845769423727219}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( CS + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.21189591078066913, "obj2": 0.618441722299953}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( Min( PN ,FirstVNF_RAM ) / FirstVNF_RAM )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( DS + MUM ) ) ,( MLU - CS ) )", "obj1": 0.26394052044609667, "obj2": 0.5746855943555216}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8321718787814563}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6635687732342007, "obj2": 0.19706047501683133}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4721189591078067, "obj2": 0.30742848606357803}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( ( ( Min( PN ,FirstVNF_RAM ) / FirstVNF_Mem ) - ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) ),( ( ( DS * ( DS * Max( MUR,( ( DS - CS ) * MUC ) ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.25464684014869887, "obj2": 0.581408243819924}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - ( ( BR - ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "( ( DS - MUC ) - ( MUM / ( Max( RMSe,( DS * RMSe ) ) / CS ) ) )", "obj1": 0.49256505576208176, "obj2": 0.29651373072473275}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.23234200743494424, "obj2": 0.5823522794914832}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( ARS * FirstVNF_CPU ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) ) )", "obj1": 0.5929368029739777, "obj2": 0.23731007287334838}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,Max( MUR,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.7676579925650557, "obj2": 0.13910998871930544}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6245353159851301, "obj2": 0.21902874071654002}], "15": [{"determining": "( ( Min( AMS ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM - ( ( ( FirstVNF_RAM * PN ) + ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + Min( PN ,FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Min( RMSe ,( MUR - RRSe ) ),( ( ( ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.12267657992565056, "obj2": 0.7397089716194073}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.13197026022304834, "obj2": 0.6854535589114058}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( FirstVNF_CPU_Server - RRS ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3104089219330855, "obj2": 0.5030401355879989}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.32342007434944237, "obj2": 0.4606467213342358}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( AMS * Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.7904894732042034}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) + Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( DS + DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.34954568179029555}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4389410589640484}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) * ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.7342007434944238, "obj2": 0.15673040076914715}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MDR ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS * MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6933085501858736, "obj2": 0.18305855935892912}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,Max( MUR,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.7676579925650557, "obj2": 0.13910998871930544}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( ( Max( ( ACS - MDR ),( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) * ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4070631970260223, "obj2": 0.3895820969514588}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( MLU,RMSe ) - ( MUM / ( RMSe * ( DS + DS ) ) ) )", "obj1": 0.845724907063197, "obj2": 0.10261695204565777}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS + AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) ) / FirstVNF_CPU ) / ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6508559852258062}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( DDR / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( DDR / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MUC * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.16680128349242043}, {"determining": "( DDR / ( ( Min( PN ,FirstVNF_RAM ) / FirstVNF_Mem ) * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( RMSe / CS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06319702602230483, "obj2": 0.811458114412496}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.5, "obj2": 0.2845102412815898}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.2100371747211896, "obj2": 0.640478198624751}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( ARS * FirstVNF_CPU ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) ) )", "obj1": 0.5929368029739777, "obj2": 0.23731007287334838}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "Max( Min( ( ( MUR / DS ) + ( CS * DS ) ) ,( RCSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.570631970260223, "obj2": 0.2529958789438614}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM - ( ( ( FirstVNF_RAM * PN ) + ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * RMSe ) )", "obj1": 0.8754646840148699, "obj2": 0.0662475600341751}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4721189591078067, "obj2": 0.30742848606357803}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + RRS ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( DS / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.3828996282527881, "obj2": 0.4043014432803673}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_CPU ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.8178438661710037, "obj2": 0.1217024197813649}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,MDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) ),( ( ( ( ( MUM / CS ) - ( DS + MUM ) ) + ( RMSe + CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.22676579925650558, "obj2": 0.5978421913024589}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.15055762081784388, "obj2": 0.6673930719581804}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.2825278810408922, "obj2": 0.5198009372027576}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) ) ,( MLU - CS ) )", "obj1": 0.4628252788104089, "obj2": 0.3300981655454661}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,( Min( ( Min( ( FirstVNF_CPU + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + ( CS + MLU ) ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.16728624535315986, "obj2": 0.6656154023293334}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_CPU_Server * ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.9330855018587361, "obj2": 0.03930768299794375}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.275092936802974, "obj2": 0.556589606549528}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_CPU ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) * CS ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.8234200743494424, "obj2": 0.11503549845813635}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( Max( Min( DS ,Min( MUR ,RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5450204245011241}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.25650557620817843, "obj2": 0.5679754156663709}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.23234200743494424, "obj2": 0.5823522794914832}, {"determining": "( ( ( ( PN - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( MUR * RMSe ) )", "obj1": 0.8996282527881041, "obj2": 0.048111041003064056}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.4399725492331352}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS + ( ( RRSe / CS ) - ( DS + MUM ) ) ) ) )", "obj1": 0.9275092936802974, "obj2": 0.04513540569388792}, {"determining": "( ( ( Min( PN ,( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( Min( ( RMSe / CS ) ,( DS + MUM ) ) / RRSe ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.26443375538704295}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "( ( DS - RMSe ) - ( MUM / ( RMSe / CS ) ) )", "obj1": 0.9535315985130112, "obj2": 0.023690394901991124}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( Const + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM_Server ) * ARS ) )", "choosing": "Min( ( ( ( RMSe / CS ) + ( DS + MUM ) ) + ( RCSe + MLU ) ) ,( Max( MLU,RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.3955951837740534}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5836431226765799, "obj2": 0.24123148848961848}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( CS + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.21189591078066913, "obj2": 0.618441722299953}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}], "16": [{"determining": "( ( Min( AMS ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( BR * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.11895910780669144, "obj2": 0.7053223985425809}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,Max( MUR,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.7676579925650557, "obj2": 0.13910998871930544}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2788104089219331, "obj2": 0.517798330489535}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3104089219330855, "obj2": 0.4948534105288929}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / Min( BR ,( FirstVNF_RAM - ( ( ( FirstVNF_RAM * PN ) + ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( Min( Min( ( RRSe - CS ) ,( RMSe * RRSe ) ) ,( Max( RMSe,MLU ) - ( RRSe * MUM ) ) ) - ( ( ( DS / MUM ) * ( RCSe + MLU ) ) + ( ( DS - MUM ) * Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7585599241000389}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MDR ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS * MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6933085501858736, "obj2": 0.18305855935892912}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) ) / ( Min( ( ACS + MRS ) ,( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( DS / ( DS * CS ) ) ) ),CS ) / RMSe ) )", "obj1": 0.258364312267658, "obj2": 0.5395703502138907}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4349442379182156, "obj2": 0.34825266507500013}, {"determining": "( ( ( ( PN - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( MUR * RMSe ) )", "obj1": 0.8996282527881041, "obj2": 0.048111041003064056}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) * ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.7342007434944238, "obj2": 0.15673040076914715}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7992565055762082, "obj2": 0.1216334015479546}, {"determining": "( ( Max( ( ACS - MDR ),( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) * ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4070631970260223, "obj2": 0.3895820969514588}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6691449814126395, "obj2": 0.18995262867334914}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.2100371747211896, "obj2": 0.640478198624751}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( ARS * FirstVNF_CPU ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) ) )", "obj1": 0.5929368029739777, "obj2": 0.23731007287334838}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "Max( Min( ( ( MUR / DS ) + ( CS * DS ) ) ,( RCSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.570631970260223, "obj2": 0.2529958789438614}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.5111524163568774, "obj2": 0.2786695063970818}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4721189591078067, "obj2": 0.30742848606357803}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( AMS * Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) + ( RMSe / CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.7904894732042034}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.4399725492331352}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.32342007434944237, "obj2": 0.4606467213342358}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( RMSe / CS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.09851301115241635, "obj2": 0.7716858041901923}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Min( Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.48698884758364314, "obj2": 0.2964810008193427}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Min( ( Min( ( RMSe / CS ) ,( DS + MUM ) ) + ( RCSe + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) ) ,( MLU - CS ) )", "obj1": 0.4628252788104089, "obj2": 0.3300981655454661}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * RMSe ) )", "obj1": 0.8754646840148699, "obj2": 0.0662475600341751}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( ( ARS / AMS ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( RRSe / RRSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.31784386617100374, "obj2": 0.46744468477369383}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - ( ( ARS / FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "( ( DS - RMSe ) - ( MUM / ( RMSe / CS ) ) )", "obj1": 0.9535315985130112, "obj2": 0.023690394901991124}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.4399725492331352}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,( Min( ( Min( ( FirstVNF_CPU + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + ( CS + MLU ) ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.16728624535315986, "obj2": 0.6656154023293334}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.23234200743494424, "obj2": 0.5823522794914832}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,FirstVNF_Mem ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6245353159851301, "obj2": 0.21902874071654002}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,MDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - MUM ) ),( ( ( ( ( MUM / CS ) - ( DS + MUM ) ) + ( RMSe + CS ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.22676579925650558, "obj2": 0.5978421913024589}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6245353159851301, "obj2": 0.21902874071654002}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + CRS ) + Min( ARS ,CRS ) ) * ( ( ARS + AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) ) / FirstVNF_CPU ) / ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6508559852258062}, {"determining": "( DDR / ( FirstVNF_Mem * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0724907063197026, "obj2": 0.8026984152009088}, {"determining": "( DDR / ( ( Min( PN ,FirstVNF_RAM ) / FirstVNF_Mem ) * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( RMSe / CS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8204766241963646}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS + ( ( RRSe / CS ) - ( DS + MUM ) ) ) ) )", "obj1": 0.9275092936802974, "obj2": 0.04513540569388792}, {"determining": "( ( ( Min( PN ,( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( Min( ( RMSe / CS ) ,( DS + MUM ) ) / RRSe ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.26443375538704295}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( MLU,RMSe ) - ( MUM / ( RMSe * ( DS + DS ) ) ) )", "obj1": 0.845724907063197, "obj2": 0.10261695204565777}, {"determining": "( DDR / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( DDR / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MUC * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.16680128349242043}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.13197026022304834, "obj2": 0.6854535589114058}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.24907063197026022, "obj2": 0.5739504805265185}], "17": [{"determining": "( ( Min( AMS ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) ) ) - ACS ) - Min( MDR ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( DS / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.08364312267657993, "obj2": 0.7514236714663235}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2788104089219331, "obj2": 0.517798330489535}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) ) / ( Min( ( ACS + MRS ) ,( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( DS / ( DS * CS ) ) ) ),CS ) / RMSe ) )", "obj1": 0.258364312267658, "obj2": 0.5395703502138907}, {"determining": "( ( Min( ( ACS - MDR ) ,( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7317354654657119}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MDR ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS * MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6933085501858736, "obj2": 0.18305855935892912}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * RMSe ) )", "obj1": 0.8754646840148699, "obj2": 0.0662475600341751}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,Max( MUR,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.7676579925650557, "obj2": 0.13910998871930544}, {"determining": "( ( ( ( PN - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( MUR * RMSe ) )", "obj1": 0.8996282527881041, "obj2": 0.048111041003064056}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) * ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.7342007434944238, "obj2": 0.15673040076914715}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( DDR / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( DDR / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MUC * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.16680128349242043}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6691449814126395, "obj2": 0.18995262867334914}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( ARS * FirstVNF_CPU ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8364312267657993, "obj2": 0.09857322984022433}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7992565055762082, "obj2": 0.1216334015479546}, {"determining": "( ( Min( AMS ,( Min( AMS ,( FirstVNF_CPU_Server - RRS ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - ( MLU - RMSe ) ) ) )", "obj1": 0.8271375464684015, "obj2": 0.11278109831951481}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.46096654275092935, "obj2": 0.3186092569274632}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3104089219330855, "obj2": 0.4948534105288929}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.23234200743494424, "obj2": 0.5823522794914832}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * Max( ( ARS / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * MDR ) )", "choosing": "( ( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.44423791821561337, "obj2": 0.33817732835110575}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.13197026022304834, "obj2": 0.6854535589114058}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,( Min( ( Min( ( FirstVNF_CPU + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + ( CS + MLU ) ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.14684014869888476, "obj2": 0.6806200031112286}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.24907063197026022, "obj2": 0.5739504805265185}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19888475836431227, "obj2": 0.6052368694270446}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6096654275092936, "obj2": 0.22859731098149358}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( ( ARS / AMS ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( RRSe / RRSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.31784386617100374, "obj2": 0.46744468477369383}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,( Min( ( Min( ( FirstVNF_CPU + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + ( DS + MLU ) ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.1970260223048327, "obj2": 0.6358767659206656}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( ( RMSe / CS ) * CS ) )", "obj1": 0.7899628252788105, "obj2": 0.1385388720504088}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4721189591078067, "obj2": 0.30742848606357803}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS + ( ( RRSe / CS ) - ( DS + MUM ) ) ) ) )", "obj1": 0.9312267657992565, "obj2": 0.04308002920245392}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( BR * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.5111524163568774, "obj2": 0.2786695063970818}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( ( ARS / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( MUR / CS ) ) )", "obj1": 0.9535315985130112, "obj2": 0.023690394901991124}, {"determining": "( DDR / ( ( Min( PN ,FirstVNF_RAM ) / FirstVNF_Mem ) * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( RMSe / CS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8204766241963646}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Min( Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.49814126394052044, "obj2": 0.2925817342256335}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( ( ( FirstVNF_Mem + ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) / RRSe ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.4409432695211862}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.11895910780669144, "obj2": 0.7053223985425809}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.21189591078066913, "obj2": 0.5948557326417849}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Min( Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + ( DS * RMSe ) ) ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.5762081784386617, "obj2": 0.24565993938110225}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.4399725492331352}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.5557620817843866, "obj2": 0.26128028270337944}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( FirstVNF_CPU_Server * ARS ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "Max( Min( ( ( MUR / DS ) + ( CS * DS ) ) ,( RCSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( Max( RMSe,MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.570631970260223, "obj2": 0.2529958789438614}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.1654275092936803, "obj2": 0.6660087055729363}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS + ( ( RRSe / CS ) - ( DS + MUM ) ) ) ) )", "obj1": 0.9275092936802974, "obj2": 0.04513540569388792}], "18": [{"determining": "( ( Min( AMS ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) ) ) - ACS ) - Min( MDR ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( DS / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) ) ) - ACS ) - Min( MDR ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( DS / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) / RRSe ) ) ) )", "obj1": 0.395910780669145, "obj2": 0.3981113526076652}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ( ACS - MDR ) ,( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7317354654657119}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2788104089219331, "obj2": 0.517798330489535}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,Max( MUR,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.7676579925650557, "obj2": 0.13910998871930544}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) * ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.7342007434944238, "obj2": 0.15673040076914715}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.08364312267657993, "obj2": 0.7514236714663235}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( DDR / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( DDR / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MUC * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.16680128349242043}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5608719943499737}, {"determining": "( Min( PN ,FirstVNF_RAM ) / ( ( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.4399725492331352}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( ARS * FirstVNF_CPU ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( RMSe - RRSe ) / CS ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.8364312267657993, "obj2": 0.09857322984022433}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3104089219330855, "obj2": 0.4948534105288929}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19888475836431227, "obj2": 0.6052368694270446}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.21189591078066913, "obj2": 0.5948557326417849}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) ) ) ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.13197026022304834, "obj2": 0.6854535589114058}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,CRS ) ) * Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( RCSe / MUC ) )", "obj1": 0.8754646840148699, "obj2": 0.0662475600341751}, {"determining": "( ( ( ( PN - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( MUR * RMSe ) )", "obj1": 0.8996282527881041, "obj2": 0.048111041003064056}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,( Min( ( Min( ( FirstVNF_CPU + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + ( DS + MLU ) ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.1970260223048327, "obj2": 0.6358767659206656}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( ( RMSe / CS ) * CS ) )", "obj1": 0.7899628252788105, "obj2": 0.1385388720504088}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * Max( ( ARS / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * MDR ) )", "choosing": "( ( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.44423791821561337, "obj2": 0.33817732835110575}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,CRS ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MLU ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6612301327640788}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4349442379182156, "obj2": 0.3474299203145045}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) + ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3382899628252788, "obj2": 0.45891869386673856}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( ( ARS / AMS ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( RRSe / RRSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.31784386617100374, "obj2": 0.46744468477369383}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7992565055762082, "obj2": 0.1216334015479546}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) / Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( ( ( PN / FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( Min( MUR ,RRSe ) / MUC ) ) * ( Max( CS,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.2732342007434944, "obj2": 0.5345336911089185}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe / CS ) - ( DS + MUM ) ) + ( ( MUR - RRSe ) / MUC ) ) * ( Max( RMSe,( DS * RMSe ) ) / RMSe ) )", "obj1": 0.19144981412639406, "obj2": 0.64438315549586}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.11895910780669144, "obj2": 0.7053223985425809}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR - ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.5111524163568774, "obj2": 0.2786695063970818}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) ) / ( Min( ( ACS + MRS ) ,( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( DS / ( DS * CS ) ) ) ),CS ) / RMSe ) )", "obj1": 0.258364312267658, "obj2": 0.5395703502138907}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.45724907063197023, "obj2": 0.3221200979635941}, {"determining": "( ( Min( AMS ,( Min( AMS ,( FirstVNF_CPU_Server - RRS ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - ( MLU - RMSe ) ) ) )", "obj1": 0.8252788104089219, "obj2": 0.11385750096863063}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.11895910780669144, "obj2": 0.7053223985425809}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / BR )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - DS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.2342007434944238, "obj2": 0.5801461926296131}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.08364312267657993, "obj2": 0.7514236714663235}, {"determining": "( ( Min( ( ARS * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( Max( RMSe,CS ) - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.14869888475836432, "obj2": 0.6768861802831316}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6933085501858736, "obj2": 0.18305855935892912}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3104089219330855, "obj2": 0.4948534105288929}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( ( ARS / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( MUR / CS ) ) )", "obj1": 0.9535315985130112, "obj2": 0.023690394901991124}, {"determining": "( ( ( ACS / BR ) + ( MRS * AMS ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / DS ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5947955390334573, "obj2": 0.23953283410337334}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6821561338289963, "obj2": 0.18607979440605274}], "19": [{"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / CS ) - ( DS + MUM ) ) ,Max( MLU,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) ) ) - ACS ) - Min( MDR ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( DS / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( ARS * FirstVNF_CPU ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUM - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - Max( MLU,MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5855018587360595, "obj2": 0.2476165860817653}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + ( DS + MLU ) ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9330855018587361, "obj2": 0.039323819448919176}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_Mem ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + RMSe ) ) ,( ( MUR / ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.29182156133828996, "obj2": 0.49391183699211616}, {"determining": "( ( Min( ( ACS - MDR ) ,( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7317354654657119}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) + ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.4851301115241636, "obj2": 0.30130775533595133}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.08364312267657993, "obj2": 0.7514236714663235}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2788104089219331, "obj2": 0.517798330489535}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( ( ARS / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( MUR / CS ) ) )", "obj1": 0.9535315985130112, "obj2": 0.023690394901991124}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6933085501858736, "obj2": 0.18305855935892912}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR - ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.5111524163568774, "obj2": 0.2786695063970818}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19888475836431227, "obj2": 0.6052368694270446}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7992565055762082, "obj2": 0.1216334015479546}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,Max( MUR,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.7676579925650557, "obj2": 0.13910998871930544}, {"determining": "( ARS / ( ARS * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( MUR + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06505576208178439, "obj2": 0.8109485008435832}, {"determining": "( ( Min( ( MRS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( MUM * ( MUR + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.33643122676579923, "obj2": 0.4560847563740174}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( ARS * FirstVNF_CPU ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - DS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.3159851301115242, "obj2": 0.4814618286263308}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / ( RRSe / RRSe ) ) ,MLU ) ) * ( DS + CS ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6561901389389785}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( ARS * FirstVNF_CPU ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,FirstVNF_RAM_Server ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.19158279583204915}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( Max( ( ( RRSe * MUR ) * ( ( DS * MUM ) * MUR ) ),RMSe ) - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7453531598513011, "obj2": 0.15031833797726873}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MUR - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - BR ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.5, "obj2": 0.28292224540264294}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,( Min( ( Min( ( FirstVNF_CPU + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + ( DS + MLU ) ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.1970260223048327, "obj2": 0.6358767659206656}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4628252788104089, "obj2": 0.31737356954487783}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( ( RMSe / CS ) * CS ) )", "obj1": 0.7899628252788105, "obj2": 0.1385388720504088}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,CRS ) ) * Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( RCSe / MUC ) )", "obj1": 0.8754646840148699, "obj2": 0.0662475600341751}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( ARS * FirstVNF_CPU ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.6394052044609665, "obj2": 0.21248730720012587}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem_Server / AMS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) + ( RMSe / RMSe ) )", "obj1": 0.22676579925650558, "obj2": 0.5746444234484166}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.6189591078066915, "obj2": 0.22212964569911534}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4349442379182156, "obj2": 0.3474299203145045}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - Min( BR ,( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / MLU ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.18587360594795538, "obj2": 0.6480050171203419}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( DDR ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * Min( ( RMSe / CS ) ,MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.1171003717472119, "obj2": 0.7118719057752476}, {"determining": "( ( ( ( PN - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( MUR * RMSe ) )", "obj1": 0.8996282527881041, "obj2": 0.048111041003064056}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.24535315985130113, "obj2": 0.5608719943499737}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,( ACS + MRS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + MLU ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2620817843866171, "obj2": 0.5320852282323324}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.8977695167286245, "obj2": 0.04867921569526381}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.11895910780669144, "obj2": 0.7035607935297784}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) / RRSe ) ) ) )", "obj1": 0.395910780669145, "obj2": 0.3981113526076652}, {"determining": "( ( ( ACS / BR ) + ( MRS * AMS ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / DS ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5947955390334573, "obj2": 0.23953283410337334}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6115241635687733, "obj2": 0.2318016760339641}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * Max( ( ARS / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * MDR ) )", "choosing": "( ( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.44423791821561337, "obj2": 0.33817732835110575}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.21933085501858737, "obj2": 0.5891920834100771}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.08364312267657993, "obj2": 0.7514236714663235}], "20": [{"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( ( ARS / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "( DS / ( ( RMSe / CS ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / CS ) - ( DS + MUM ) ) ,Max( MLU,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( MDR ,( Min( FirstVNF_Mem ,AMS ) - ( BR / ( Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server + MDR ) ) * Min( Min( FirstVNF_RAM ,CRS ) ,Min( ( FirstVNF_CPU * AMS ) ,FirstVNF_Mem_Server ) ) ) ) ) ),( Max( ( ACS / BR ),( FirstVNF_CPU_Server * ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,Max( RMSe,CS ) ),( ( ( CS + MLU ) - ( CS * DS ) ) * ( ( MUC * MUR ) * ( CS * MUM ) ) ) )", "obj1": 0.055762081784386616, "obj2": 0.8436242377381333}, {"determining": "( ( Min( ( MRS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( MUM * ( MUR + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.33643122676579923, "obj2": 0.4560847563740174}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / ( RRSe / RRSe ) ) ,MLU ) ) * ( DS + CS ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6262768949456566}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.38806006538206805}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7323420074349443, "obj2": 0.1688171028751665}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.3141263940520446, "obj2": 0.4767290997251779}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.13940520446096655, "obj2": 0.6738412796140117}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6933085501858736, "obj2": 0.18305855935892912}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19888475836431227, "obj2": 0.6052368694270446}, {"determining": "( ( Min( ( ACS - MDR ) ,( BR + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ARS ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7317354654657119}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * Min( FirstVNF_Mem ,ARS ) ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( MUM * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4144981412639405, "obj2": 0.36555243633582324}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.5724907063197026, "obj2": 0.2471515819803106}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_Mem ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + RMSe ) ) ,( ( MUR / ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.29182156133828996, "obj2": 0.49391183699211616}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( Min( ACS ,MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.08178438661710037, "obj2": 0.7587630671086477}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.11895910780669144, "obj2": 0.7035607935297784}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,( ACS + Max( FirstVNF_Mem,ARS ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + RMSe ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.21933085501858737, "obj2": 0.5877198610745035}, {"determining": "( ( Min( ( ARS * ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( DDR + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( ( DS + RRSe ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.8308550185873605, "obj2": 0.10980610208114464}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) - Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06373792054613876}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MUR - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( ( ARS / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( MUR / CS ) ) )", "obj1": 0.9535315985130112, "obj2": 0.023690394901991124}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,Max( MUR,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.7676579925650557, "obj2": 0.13910998871930544}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7992565055762082, "obj2": 0.1216334015479546}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( ARS * FirstVNF_CPU ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,FirstVNF_RAM_Server ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Max( Max( ( Max( MUC,DS ) / CS ),Max( ( RCSe * ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) ),Max( MUC,DS ) ) ),( RRSe - RMSe ) ) - ( MUM / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.19158279583204915}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * Max( ( ARS / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * MDR ) )", "choosing": "( ( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.44423791821561337, "obj2": 0.33817732835110575}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( DDR ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * Min( ( RMSe / CS ) ,MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.1171003717472119, "obj2": 0.7118719057752476}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( BR + ACS ) ) ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe / CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.27703153097892735}, {"determining": "( ARS / Min( Min( FirstVNF_CPU_Server ,ARS ) ,( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( MUM * DS ) ) - ( ( CS + ( ( ( MUR + DS ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8371522522471879}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( ( RMSe / CS ) * CS ) )", "obj1": 0.7899628252788105, "obj2": 0.1385388720504088}, {"determining": "( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem_Server / AMS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) * RMSe ) ) / MUC ) ) + ( RMSe / RMSe ) )", "obj1": 0.23977695167286245, "obj2": 0.5631335169458114}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6115241635687733, "obj2": 0.2318016760339641}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "Max( ( DS * CS ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.9070631970260223, "obj2": 0.04676884649483985}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6654275092936803, "obj2": 0.20263928331907327}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( AMS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( DS + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.8903345724907064, "obj2": 0.057527891294884816}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,( ACS + MRS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + MLU ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.47026022304832715, "obj2": 0.30658022411089275}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ARS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( ACS - DDR ) ,( BR + ACS ) ) - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - DS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2825278810408922, "obj2": 0.5143337127034266}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( Max( ( ( RRSe * MUR ) * ( ( DS * MUM ) * MUR ) ),RMSe ) - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7453531598513011, "obj2": 0.15031833797726873}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.24907063197026022, "obj2": 0.546204343721122}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,( ACS + MRS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + MLU ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2620817843866171, "obj2": 0.5320852282323324}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( ARS * FirstVNF_CPU ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUM - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - Max( MLU,MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.9460966542750929, "obj2": 0.037821269240897945}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,( ( RMSe / ( RRSe / RRSe ) ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6614445813930072}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) + ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) + ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.48698884758364314, "obj2": 0.29653421086051995}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / ( RRSe / RRSe ) ) ,MLU ) ) * ( DS + CS ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6561901389389785}], "21": [{"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / CS ) - ( DS + MUM ) ) ,Max( MLU,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( ( ARS / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "( DS / ( ( RMSe / CS ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( RCSe + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8428783929100382}, {"determining": "( ( Min( ( MRS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( MUM * ( MUR + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.33643122676579923, "obj2": 0.4560847563740174}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19888475836431227, "obj2": 0.6052368694270446}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( MUM * ( DS + DS ) ) ) )", "obj1": 0.8698884758364313, "obj2": 0.09197852752006629}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.13940520446096655, "obj2": 0.6738412796140117}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * Max( ( ARS / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * MDR ) )", "choosing": "( ( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.44423791821561337, "obj2": 0.33817732835110575}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.38806006538206805}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + RMSe ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9052044609665427, "obj2": 0.04601415483234014}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6115241635687733, "obj2": 0.2318016760339641}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.3141263940520446, "obj2": 0.4767290997251779}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.4107806691449814, "obj2": 0.3764302538680671}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + Const ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( MLU / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06373792054613875}, {"determining": "( ( Min( ( ARS * ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( DDR + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( ( DS + RRSe ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.8308550185873605, "obj2": 0.10980610208114464}, {"determining": "( ARS / Min( Min( FirstVNF_CPU_Server ,ARS ) ,( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( MUM * DS ) ) - ( ( CS + ( ( ( MUR + DS ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8371522522471879}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.45353159851301117, "obj2": 0.32440394738802625}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.08178438661710037, "obj2": 0.7587630671086477}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.5724907063197026, "obj2": 0.2471515819803106}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MUR - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / PN ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( DS + DS ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.8382899628252788, "obj2": 0.10043621857321093}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,Max( MUR,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.7676579925650557, "obj2": 0.13910998871930544}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( ( DS + CS ) / MUR ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7433413736466619}, {"determining": "( ( Min( ( ACS + ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( Min( Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / RRSe ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.70817843866171, "obj2": 0.1763552660718589}, {"determining": "( ( BR + ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ARS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7295149198796331}, {"determining": "( ( ( Min( PN ,ACS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * Min( FirstVNF_Mem ,ARS ) ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6115241635687733, "obj2": 0.2318016760339641}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.12267657992565056, "obj2": 0.7013668752132741}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / ( RRSe / RRSe ) ) ,MLU ) ) * ( DS + CS ) ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6272235889430897}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,( ( RMSe / ( RRSe / RRSe ) ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.8903345724907064, "obj2": 0.05297841184373208}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / DS )", "obj1": 0.7862453531598513, "obj2": 0.13473572044137186}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,( ( DS - CS ) * MUC ) ) / RMSe ) )", "obj1": 0.23234200743494424, "obj2": 0.569956336987949}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.5724907063197026, "obj2": 0.2471515819803106}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7992565055762082, "obj2": 0.1216334015479546}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7323420074349443, "obj2": 0.1688171028751665}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( BR + ACS ) ) ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe / CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.27703153097892735}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( Max( ( ( RRSe * MUR ) * ( ( DS + MUM ) * MUR ) ),RMSe ) - RRSe ) ),( Max( Min( DS ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - RMSe ) / ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7453531598513011, "obj2": 0.15031833797726873}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_Mem ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + RMSe ) ) ,( ( MUR / ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.29182156133828996, "obj2": 0.49391183699211616}, {"determining": "( ( Min( MDR ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM - ( DS - CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( ARS * FirstVNF_CPU ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUM - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - Max( MLU,MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.9460966542750929, "obj2": 0.037821269240897945}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.3104089219330855, "obj2": 0.4909821012437031}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( CS + MLU ) ) )", "obj1": 0.6654275092936803, "obj2": 0.20263928331907327}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / ( RRSe / RRSe ) ) ,MLU ) ) * ( DS + CS ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6262768949456566}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,( ACS + Max( FirstVNF_Mem,ARS ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + RMSe ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.21933085501858737, "obj2": 0.5877198610745035}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) / ( RRSe + MLU ) ) )", "obj1": 0.6728624535315985, "obj2": 0.18857865831893358}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( ( ARS / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( MUR / CS ) ) )", "obj1": 0.9535315985130112, "obj2": 0.023690394901991124}], "22": [{"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + MUR ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( RCSe + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8428783929100382}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / CS ) - ( DS + MUM ) ) ,Max( MLU,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( RCSe + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8428783929100382}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) )", "obj1": 0.7639405204460966, "obj2": 0.08992855513491384}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + Const ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( MLU / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06373792054613875}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}, {"determining": "( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6951672862453532, "obj2": 0.12388325848418605}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / MUM ) * ( ( ( DS + CS ) / MUR ) + MLU ) ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15242486943384248}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM ) / ( ( ( ( RRS + Min( ARS ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) ) - ACS ) - Min( ( ARS / FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( MUR / CS ) ) )", "obj1": 0.49256505576208176, "obj2": 0.29620841180592294}, {"determining": "( ( Min( ( ACS + ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.4399725492331352}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.08178438661710037, "obj2": 0.7587630671086477}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * BR ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - DS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.26579925650557623, "obj2": 0.535488593102498}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19888475836431227, "obj2": 0.6052368694270446}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( BR + ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ARS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7295149198796331}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) ) )", "obj1": 0.5724907063197026, "obj2": 0.24620671511740888}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * Max( ( ARS / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * MDR ) )", "choosing": "( ( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.44423791821561337, "obj2": 0.33817732835110575}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.25650557620817843, "obj2": 0.5529191389802054}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4628252788104089, "obj2": 0.31737356954487783}, {"determining": "( ( ( ACS / BR ) + ( ACS * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6189591078066915, "obj2": 0.22475875806107823}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( ARS ,CRS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / DS ) ,MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.17286245353159851, "obj2": 0.635858284524823}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ( MRS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( MUM * ( MUR + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.33643122676579923, "obj2": 0.4560847563740174}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.13940520446096655, "obj2": 0.6738412796140117}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.12267657992565056, "obj2": 0.7013668752132741}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.38806006538206805}, {"determining": "( ( ( ACS / BR ) + Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( ( MLU * MUC ) * ( DS / RRSe ) ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.2406389150424522}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RRSe / MLU ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.6840148698884758, "obj2": 0.13470561598807734}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / ( RRSe / RRSe ) ) ,MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.1524163568773234, "obj2": 0.6603827703086081}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe / CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.27703153097892735}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.4107806691449814, "obj2": 0.3764302538680671}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MUR - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / Min( ( ACS - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( BR + ACS ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / RMSe ) ,MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.6959511316043488}, {"determining": "( ARS / Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) )", "choosing": "Max( Min( ( ( ( ( DS / RRSe ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + DS ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06319702602230483, "obj2": 0.8303032736361332}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.3104089219330855, "obj2": 0.4909821012437031}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9330855018587361, "obj2": 0.03937634724247035}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,( ( DS - CS ) * MUC ) ) / RMSe ) )", "obj1": 0.23234200743494424, "obj2": 0.569956336987949}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.45353159851301117, "obj2": 0.32440394738802625}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.28810408921933084, "obj2": 0.5017121997346469}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * Max( ( ARS / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( Min( RCSe ,( MUR - MUC ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.31784386617100374, "obj2": 0.473151999614289}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + RMSe ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9052044609665427, "obj2": 0.04601415483234014}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / ( RRSe / RRSe ) ) ,MLU ) ) * ( DS + CS ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6262768949456566}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,( ACS + Max( FirstVNF_Mem,ARS ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + RMSe ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.21933085501858737, "obj2": 0.5877198610745035}, {"determining": "( FirstVNF_CPU_Server / ( ARS * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) / ( CS * MUM ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8023759480018602}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_Mem ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + RMSe ) ) ,( ( MUR / ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.29182156133828996, "obj2": 0.49391183699211616}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( BR + ACS ) ) ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe / CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.27703153097892735}], "23": [{"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,Max( BR,AMS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( RCSe + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8428783929100382}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + MUR ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS / Min( ( FirstVNF_CPU_Server + ARS ) ,Min( ( Min( ( ARS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,( RRS - ACS ) ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( CS + RRSe ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + DS ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8428783929100382}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + Const ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( MLU / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06373792054613875}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) )", "obj1": 0.7639405204460966, "obj2": 0.08992855513491384}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / MUM ) * ( ( ( DS + CS ) / MUR ) + MLU ) ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15242486943384248}, {"determining": "( ( ( ACS / BR ) + ( ACS * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6189591078066915, "obj2": 0.22475875806107823}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19888475836431227, "obj2": 0.6052368694270446}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.4107806691449814, "obj2": 0.3764302538680671}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.21933085501858737, "obj2": 0.5848143873065319}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.38806006538206805}, {"determining": "( ( ( ACS / BR ) + Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( ( MLU * MUC ) * ( DS / RRSe ) ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.2406389150424522}, {"determining": "( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( DS + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.70817843866171, "obj2": 0.1175658025604444}, {"determining": "( ( ( ACS / BR ) + ( ACS * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.9479553903345725, "obj2": 0.02748258335489257}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( ( ACS - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( DDR - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( RRSe - CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / RMSe ) ),CS ) / RMSe ) )", "obj1": 0.3475836431226766, "obj2": 0.43529693871908365}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.7379182156133829, "obj2": 0.09970703972084147}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,ARS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUR / MUR ) + ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.27137546468401486, "obj2": 0.5295625297889043}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.7616599451012558}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / Min( ( ACS - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( BR + ACS ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / RMSe ) ,MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.11524163568773234, "obj2": 0.7057943880926199}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / RMSe ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.29739776951672864, "obj2": 0.490711526754663}, {"determining": "( DDR / ( ARS * ARS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.08364312267657993, "obj2": 0.7514236714663235}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.25650557620817843, "obj2": 0.5529191389802054}, {"determining": "( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS / ( DS * ( ( MUM / ( RMSe / CS ) ) + ( DS + CS ) ) ) )", "obj1": 0.48141263940520446, "obj2": 0.30123003087205436}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS + PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( DS / ( RMSe * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( Max( MLU,MUC ) * ( DS / RRSe ) ) ) ) ) * ( CS + MLU ) ) )", "obj1": 0.5687732342007435, "obj2": 0.25478274497476616}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( ARS * AMS ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4628252788104089, "obj2": 0.31737356954487783}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4349442379182156, "obj2": 0.34825266507500013}, {"determining": "( ( BR + ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ARS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7295149198796331}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * Max( ( ARS / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * MDR ) )", "choosing": "( ( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.44423791821561337, "obj2": 0.33817732835110575}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MUR - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( RMSe - RMSe ) - ( MUM / ( RMSe / CS ) ) )", "obj1": 0.5130111524163569, "obj2": 0.27703153097892735}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( FirstVNF_CPU_Server - DDR ) ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( ( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) / RMSe ) )", "obj1": 0.23605947955390336, "obj2": 0.5572135471619849}, {"determining": "( ( Min( ( MRS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( MUM * ( MUR + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.33643122676579923, "obj2": 0.4560847563740174}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( MLU / CS ) - ( DS + MUM ) ) ,Max( MLU,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.5390334572490706, "obj2": 0.27685470043603067}, {"determining": "( ARS / Min( ( FirstVNF_CPU_Server + ARS ) ,Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + DS ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8373130721965383}, {"determining": "( ( Min( ( ACS + ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( ARS / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * ARS ) )", "choosing": "Max( Min( ( ( MLU / CS ) - ( DS + MUM ) ) ,Max( MLU,RRSe ) ),( ( DS / RRSe ) / ( CS + MLU ) ) )", "obj1": 0.5018587360594795, "obj2": 0.2931862430848491}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( Max( ACS,MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / ( RRSe / RRSe ) ) ,MLU ) ) * ( DS + CS ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6262768949456566}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( ( AMS - RRS ) + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,( ( ( ( RMSe / CS ) - ( DS + CS ) ) - CS ) * MUC ) ) / RMSe ) )", "obj1": 0.2620817843866171, "obj2": 0.5323113506360786}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + ( ( RRSe / CS ) + MLU ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.13557504263654913}, {"determining": "( DDR / ( ARS * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUM ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8119298323101454}, {"determining": "( ARS / Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + RMSe ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.1691449814126394, "obj2": 0.6463071285110364}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RRSe ) ),( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) ) )", "obj1": 0.5724907063197026, "obj2": 0.24620671511740888}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( BR + ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ARS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.10408921933085502, "obj2": 0.7295149198796331}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( ( ACS + MRS ),Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( MUR - CS ) + RMSe ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.912639405204461, "obj2": 0.04301678758864816}], "24": [{"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( RCSe + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8428783929100382}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,Max( BR,AMS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS / Min( ( FirstVNF_CPU_Server + ARS ) ,Min( ( Min( ( ARS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,( RRS - ACS ) ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( CS + RRSe ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + DS ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8428783929100382}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( MLU * MUC ) - ( RRSe / RRSe ) )", "obj1": 0.8401486988847584, "obj2": 0.0672773202833568}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}, {"determining": "( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( Max( RMSe,CS ) / RMSe ) / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( DS + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.14987029686309267}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + Const ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( MLU / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06373792054613875}, {"determining": "( ARS / Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + RMSe ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.1579925650557621, "obj2": 0.6650824063130801}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / Min( ( ACS - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( BR + ACS ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / RMSe ) ,MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.11524163568773234, "obj2": 0.7057943880926199}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( ( ACS + MRS ),Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( MUR - CS ) + RMSe ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.912639405204461, "obj2": 0.04301678758864816}, {"determining": "( ( ( ACS / BR ) + ( ACS * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6189591078066915, "obj2": 0.22475875806107823}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19888475836431227, "obj2": 0.6052368694270446}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,ARS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUR / MUR ) + ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) )", "obj1": 0.7639405204460966, "obj2": 0.08992855513491384}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( Const ,ACS ) ) * ( ( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS / MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( DS + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6224840346291016}, {"determining": "( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS / ( DS * ( ( MUM / ( RMSe / CS ) ) + ( DS + CS ) ) ) )", "obj1": 0.48141263940520446, "obj2": 0.30123003087205436}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.38806006538206805}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.7616599451012558}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.28810408921933084, "obj2": 0.5017121997346469}, {"determining": "( ( Min( ( MRS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( MUM * ( MUR + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.33643122676579923, "obj2": 0.4560847563740174}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.27137546468401486, "obj2": 0.5295625297889043}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( ( DS - CS ) * MUC ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.35687732342007433, "obj2": 0.43421096670327697}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.21933085501858737, "obj2": 0.5848143873065319}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS + PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( DS / ( RMSe * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( Max( MLU,MUC ) * ( DS / RRSe ) ) ) ) ) * ( CS + MLU ) ) )", "obj1": 0.5687732342007435, "obj2": 0.25478274497476616}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( DDR / ( ARS * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUM ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8119298323101454}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.4107806691449814, "obj2": 0.3764302538680671}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( FirstVNF_CPU_Server - DDR ) ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4349442379182156, "obj2": 0.3472025041944633}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem + ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ACS ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MUM ) / ( CS * DS ) ) / CS ) - Min( DS ,MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + ( ( RRSe / CS ) + MLU ) ) ) )", "obj1": 0.6840148698884758, "obj2": 0.13478417985280508}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS - MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.22304832713754646, "obj2": 0.5793700403106711}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( ( ACS - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( DDR - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( RRSe - CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / RMSe ) ),CS ) / RMSe ) )", "obj1": 0.3475836431226766, "obj2": 0.43529693871908365}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * Max( ( ARS / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * MDR ) )", "choosing": "( ( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.44423791821561337, "obj2": 0.33817732835110575}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5315985130111525, "obj2": 0.2747442918705881}, {"determining": "( ARS / Min( ( FirstVNF_CPU_Server + ARS ) ,Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + DS ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8373130721965383}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,RRS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) - ( CS * DS ) ) - ( ( ( ( ( MLU * MUC ) * ( DS / RRSe ) ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7156133828996283, "obj2": 0.11383146271131657}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,FirstVNF_RAM_Server ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / MLU ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.17100371747211895, "obj2": 0.6462692433834055}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / RMSe ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.29739776951672864, "obj2": 0.490711526754663}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - MUM ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9368029739776952, "obj2": 0.037196834386050884}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( AMS - FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * MUC ) ) - MUC ) ) * ( ( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) / RMSe ) )", "obj1": 0.2342007434944238, "obj2": 0.557348347891889}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) * Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe / CS ) + MLU ) / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( MLU / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.604089219330855, "obj2": 0.2368401521305808}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( ACS + MRS ) - Max( ACS,ARS ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( ( ( ( MUM * ( DS + RCSe ) ) + DS ) / CS ) / RMSe ) )", "obj1": 0.7323420074349443, "obj2": 0.10257744579305463}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MUR - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( PN + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( RRSe / RRSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4066479550203725}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ARS ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( RMSe / CS ) ) )", "obj1": 0.7602230483271375, "obj2": 0.0902471710929049}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.7397769516728625, "obj2": 0.09886472222920588}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) + ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ARS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * ( MUR + ( ( RMSe - CS ) * RMSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.11152416356877323, "obj2": 0.7271790161297103}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9739776951672863, "obj2": 0.022601046484938322}], "25": [{"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( RCSe + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8428783929100382}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,Max( BR,AMS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS / Min( ( FirstVNF_CPU_Server + ARS ) ,Min( ( Min( ( ARS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,( RRS - ACS ) ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( CS + RRSe ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + DS ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8428783929100382}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS + MUM ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.20402678443555594}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( PN + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( ( MLU - RMSe ) - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS * CS ) + RMSe ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.8382899628252788, "obj2": 0.08896618869967336}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS + PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( DS / ( RMSe * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( Max( MLU,MUC ) * ( DS / RRSe ) ) ) ) ) * ( CS + MLU ) ) )", "obj1": 0.5687732342007435, "obj2": 0.25478274497476616}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.07992565055762081, "obj2": 0.7616599451012558}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem + ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ACS ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MUM ) / ( CS * DS ) ) / CS ) - Min( DS ,MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + ( ( RRSe / CS ) + MLU ) ) ) )", "obj1": 0.6840148698884758, "obj2": 0.13478417985280508}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,RRS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) - ( CS * DS ) ) - ( ( ( ( ( MLU * MUC ) * ( DS / RRSe ) ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7156133828996283, "obj2": 0.11383146271131657}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) * Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe / CS ) + MLU ) / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( MLU / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.604089219330855, "obj2": 0.2368401521305808}, {"determining": "( ( ( ACS / BR ) + ( ACS * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6189591078066915, "obj2": 0.22475875806107823}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,FirstVNF_RAM ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,DS ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6635687732342007, "obj2": 0.14896607533548958}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.15055762081784388, "obj2": 0.6675556740430869}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / Min( ( ACS - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( BR + ACS ) ) )", "choosing": "( DS / ( DS * ( Min( ( DS / MUM ) ,Min( ( RMSe / RMSe ) ,MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.11895910780669144, "obj2": 0.7017345017726864}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.4107806691449814, "obj2": 0.3764302538680671}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) )", "obj1": 0.7657992565055762, "obj2": 0.08978719953477769}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.38806006538206805}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,ARS ) - FirstVNF_CPU_Server ) ) / ( Min( Min( ( FirstVNF_CPU_Server + ARS ) ,Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,ACS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUR / MUR ) / ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7406641115756426}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * Max( ( ARS / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * MDR ) )", "choosing": "( ( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.44423791821561337, "obj2": 0.33817732835110575}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.47026022304832715, "obj2": 0.31604548150255574}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / RMSe ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.29739776951672864, "obj2": 0.490711526754663}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( MLU * MUC ) - ( RRSe / RRSe ) )", "obj1": 0.8401486988847584, "obj2": 0.0672773202833568}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.24907063197026022, "obj2": 0.5465388063750892}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.19888475836431227, "obj2": 0.6052368694270446}, {"determining": "( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "( ( MLU * MUC ) - ( RRSe / RRSe ) )", "obj1": 0.966542750929368, "obj2": 0.019100865896456088}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + Const ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( MLU / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06373792054613875}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) + ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ARS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * ( MUR + ( ( RMSe - CS ) * RMSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.11152416356877323, "obj2": 0.7271790161297103}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,( ( ( ACS / BR ) + ( FirstVNF_CPU_Server * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - MUM ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9368029739776952, "obj2": 0.037196834386050884}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( ( DS - CS ) * MUC ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.35687732342007433, "obj2": 0.43421096670327697}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - MUM ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.5037174721189591, "obj2": 0.2891832325813083}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( FirstVNF_CPU_Server - DDR ) ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4349442379182156, "obj2": 0.3472025041944633}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) * DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.34386617100371747, "obj2": 0.45163118138867375}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,FirstVNF_RAM_Server ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / MLU ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.17100371747211895, "obj2": 0.6462692433834055}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,AMS ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.4083393376214036}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS - MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.22304832713754646, "obj2": 0.5793700403106711}, {"determining": "( ( ARS / Min( ( FirstVNF_CPU_Server + ARS ) ,Min( ( Min( ( ARS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) ) / ( ARS * ARS ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( RCSe + ( MUR / MUR ) ) + Min( ( ( MUR / MUM ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8117612423509789}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5297397769516728, "obj2": 0.2757071415853269}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.32342007434944237, "obj2": 0.45590757547969907}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Max( ( ACS + MRS ),Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( DS + CS ) + RMSe ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9869888475836431, "obj2": 0.0029248751926024648}, {"determining": "( ARS / Min( ( FirstVNF_CPU_Server + ARS ) ,Min( ( Min( ( ARS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + DS ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8320107768830575}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / RMSe ) ),CS ) / RMSe ) )", "obj1": 0.26765799256505574, "obj2": 0.5311852142974062}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * MUC ) ) / MUC ) ) * ( ( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) / RMSe ) )", "obj1": 0.2342007434944238, "obj2": 0.557348347891889}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( Min( AMS ,ACS ) * ARS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.17472118959107807, "obj2": 0.6298615285154624}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + Min( Min( ( ( ACS - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( ( DS + DS ) * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.1895910780669145, "obj2": 0.6138436834311682}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.27137546468401486, "obj2": 0.5295625297889043}], "26": [{"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe / CS ) + MLU ) / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( ( RRSe / CS ) - ( DS + MUM ) ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) * ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,RRS ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,Max( BR,AMS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6059479553903345, "obj2": 0.20288705399648765}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6635687732342007, "obj2": 0.1489542512471292}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( MLU * MUC ) - ( RRSe / RRSe ) )", "obj1": 0.8401486988847584, "obj2": 0.0672773202833568}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.79182156133829, "obj2": 0.082987492340228}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( ( MLU * MUC ) * ( DS / RRSe ) ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,DS ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7137546468401487, "obj2": 0.11296598982593349}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS + PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( DS / ( RMSe * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( Max( MLU,MUC ) * ( DS / RRSe ) ) ) ) ) * ( CS + MLU ) ) )", "obj1": 0.5687732342007435, "obj2": 0.25478274497476616}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3475836431226766, "obj2": 0.4268688033130587}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( ( MLU - RMSe ) - CS ) * MUC ) ) / MUC ) ) * CS )", "obj1": 0.9144981412639405, "obj2": 0.040121522640748954}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,AMS ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.4083393376214036}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( Min( AMS ,ACS ) * ARS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + DS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.120817843866171, "obj2": 0.6978090707084545}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.15055762081784388, "obj2": 0.6675556740430869}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.8847583643122676, "obj2": 0.05904856956452346}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3903345724907063, "obj2": 0.37356644546154005}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5297397769516728, "obj2": 0.2757071415853269}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) * DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.34386617100371747, "obj2": 0.45163118138867375}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS + PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( ( MLU * MUC ) * ( DS / RRSe ) ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.24051460623249868}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( FirstVNF_RAM_Server + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( Min( ( MUR + DS ) ,MUC ) / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7695002148809943}, {"determining": "( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RMSe / CS ) + ( ( MLU * MUC ) - ( RRSe / RRSe ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.13136765788319477}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + Const ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( MLU / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06373792054613875}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) * Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe / CS ) + MLU ) / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( MLU / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.604089219330855, "obj2": 0.2368401521305808}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM_Server - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( DS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4516728624535316, "obj2": 0.3284204672413143}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( FirstVNF_CPU_Server - DDR ) ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4349442379182156, "obj2": 0.3472025041944633}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,FirstVNF_RAM_Server ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / MLU ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.17100371747211895, "obj2": 0.6462692433834055}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( MDR ,RRS ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.47769516728624534, "obj2": 0.30102273249380557}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem + ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ACS ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( CRS / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( ( MLU * MUC ) - ( RRSe - RRSe ) )", "obj1": 0.7490706319702602, "obj2": 0.10878362896137335}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( Max( ( ACS + MRS ),Max( FirstVNF_Mem,Const ) ) * Max( ( ACS - MDR ),( BR + ACS ) ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,FirstVNF_RAM_Server ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RMSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / MLU ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),( ( DS - CS ) * MUC ) ) / RMSe ) )", "obj1": 0.21933085501858737, "obj2": 0.6026974623372486}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * MUC ) ) / MUC ) ) * ( ( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) / RMSe ) )", "obj1": 0.2342007434944238, "obj2": 0.557348347891889}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS - MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.22304832713754646, "obj2": 0.5793700403106711}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) + ACS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ARS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * ( MUR + ( ( RMSe - CS ) * RMSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7205231827058387}, {"determining": "( ( ( ACS / BR ) + ( ACS * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( RMSe - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.9460966542750929, "obj2": 0.028334220710061503}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( PN,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - MUM ) + ( ( MUR + MUC ) / MUC ) ) - CS )", "obj1": 0.5055762081784386, "obj2": 0.2889195008429823}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( RMSe / CS ) - MUM ) + ( ( MUR + DS ) / MUC ) ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.16356877323420074, "obj2": 0.6622620450308107}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS * MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / CS ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2862453531598513, "obj2": 0.5096225180811498}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,RRS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) - ( CS * DS ) ) - ( ( ( ( ( MLU * MUC ) * ( DS / RRSe ) ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7397769516728625, "obj2": 0.11134172142883553}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - MDR ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( DS / ( RMSe * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( ( DS + DS ) / RRSe ) ) ) ) ) * ( CS + MLU ) ) )", "obj1": 0.4944237918215613, "obj2": 0.295917206035134}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.27695167286245354, "obj2": 0.5167624898105309}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) )", "obj1": 0.7620817843866171, "obj2": 0.09051491428957403}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MLU * MUC ) - ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) )", "obj1": 0.7657992565055762, "obj2": 0.08978719953477769}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * Max( ( ARS / AMS ),( FirstVNF_CPU_Server - RRS ) ) ) / FirstVNF_RAM ) * MDR ) )", "choosing": "( ( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.44423791821561337, "obj2": 0.33817732835110575}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.24907063197026022, "obj2": 0.5465388063750892}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ACS ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MUM ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + ( ( RRSe / CS ) + MLU ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.13685279597209712}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.47026022304832715, "obj2": 0.31604548150255574}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / RMSe ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.29739776951672864, "obj2": 0.490711526754663}], "27": [{"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,BR ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( MUM * ( DS + DS ) ) + DS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe / CS ) + MLU ) / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( ( RRSe / CS ) - ( DS + MUM ) ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( FirstVNF_RAM_Server - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( CS * DS ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MUM ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + ( ( RRSe / CS ) + MLU ) ) ) )", "obj1": 0.6226765799256505, "obj2": 0.18709541301114116}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3903345724907063, "obj2": 0.37356644546154005}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( MLU * MUC ) - ( RRSe / RRSe ) )", "obj1": 0.8401486988847584, "obj2": 0.0672773202833568}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( Max( ( ACS + MRS ),Max( FirstVNF_Mem,Const ) ) * Max( ( ACS - MDR ),( BR + ACS ) ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,FirstVNF_RAM_Server ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RMSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / MLU ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),( ( DS - CS ) * MUC ) ) / RMSe ) )", "obj1": 0.21933085501858737, "obj2": 0.6026974623372486}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,AMS ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.4083393376214036}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / RMSe ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.29739776951672864, "obj2": 0.490711526754663}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( Max( ( ACS + MRS ),Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,FirstVNF_RAM_Server ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( RMSe / CS ) - MUM ) + ( ( MUR + DS ) / MUC ) ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.1895910780669145, "obj2": 0.622107665225686}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) * DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.34386617100371747, "obj2": 0.45163118138867375}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6059479553903345, "obj2": 0.20288705399648765}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + Const ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * CS ) + ( DS + CS ) ) ) )", "obj1": 0.44423791821561337, "obj2": 0.3281130887857078}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) * Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe / CS ) + MLU ) / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( MLU / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.604089219330855, "obj2": 0.2368401521305808}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS - MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.22304832713754646, "obj2": 0.5793700403106711}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.47026022304832715, "obj2": 0.31604548150255574}, {"determining": "( ( Min( AMS ,Min( Min( AMS ,ACS ) ,ARS ) ) - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( FirstVNF_RAM_Server + ACS ) ) ) ) - ( Max( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ),Min( AMS ,FirstVNF_RAM_Server ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS / ( DS * ( ( ( MUC / MUM ) * ( ( Min( ( MUR + DS ) ,CS ) / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.09665427509293681, "obj2": 0.7339845229407155}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( ( ( RMSe + DS ) / MUC ) / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.07434944237918216, "obj2": 0.7747017398806397}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ACS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( Const ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) + ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.26765799256505574, "obj2": 0.5224136185776179}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( ( MLU * MUC ) * ( DS / RRSe ) ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,DS ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7137546468401487, "obj2": 0.11296598982593349}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.14312267657992564, "obj2": 0.6722309305668411}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS + PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( DS / ( RMSe * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( Max( MLU,MUC ) * ( DS / RRSe ) ) ) ) ) * ( CS + MLU ) ) )", "obj1": 0.5687732342007435, "obj2": 0.25478274497476616}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5297397769516728, "obj2": 0.2757071415853269}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + MUM ) * ( CS * MUM ) ) ) )", "obj1": 0.5724907063197026, "obj2": 0.23984370739102318}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ACS ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6635687732342007, "obj2": 0.1489542512471292}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.79182156133829, "obj2": 0.082987492340228}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / CS ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.7323420074349443, "obj2": 0.1026517621653229}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( Min( AMS ,ACS ) * ARS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + DS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.12453531598513011, "obj2": 0.697499020175925}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) ) )", "obj1": 0.8921933085501859, "obj2": 0.056323653653416725}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6635687732342007, "obj2": 0.1489542512471292}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3475836431226766, "obj2": 0.4268688033130587}, {"determining": "( ( Min( ARS ,Min( AMS ,( ACS + MRS ) ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( RMSe / CS ) - MUM ) + ( ( MUR + DS ) / MUC ) ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) ) ),CS ) / RMSe ) )", "obj1": 0.18773234200743494, "obj2": 0.6438582648395514}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( RRSe / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6606019648664802}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) * MUC ) ) / MUC ) ) * ( ( ( MUR + ( ( RMSe - CS ) * RMSe ) ) / MUC ) / RMSe ) )", "obj1": 0.2342007434944238, "obj2": 0.557348347891889}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + Const ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( MLU / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06373792054613875}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( FirstVNF_RAM_Server + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( Min( ( MUR + DS ) ,MUC ) / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7527617073963753}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * ARS ) ) - ACS ) - Min( BR ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + RCSe ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9144981412639405, "obj2": 0.04002556750462901}, {"determining": "( ( Min( AMS ,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( Max( Min( RCSe ,( MUR - MUC ) ),( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + Max( RMSe,CS ) ) - MUM ) / ( CS + MLU ) ) ) * ( ( MUR + ( ( DS - CS ) * MUC ) ) / MUC ) ) * ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9330855018587361, "obj2": 0.03931306181493557}, {"determining": "( ( ( ACS / BR ) + ( ACS * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( DS + MLU ) / ( CS * DS ) ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.949814126394052, "obj2": 0.02612354939388299}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS * MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / CS ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2862453531598513, "obj2": 0.5096225180811498}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ( Min( AMS ,ACS ) * ARS ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( ( ( MUR + DS ) / MUC ) / CS ) + MLU ) + ( ( MUR + DS ) / MUC ) ) - CS )", "obj1": 0.5111524163568774, "obj2": 0.28799381404756336}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem + ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) / Min( ACS ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS / CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6951672862453532, "obj2": 0.12374544730270326}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.24907063197026022, "obj2": 0.5465388063750892}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( FirstVNF_CPU_Server - DDR ) ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4349442379182156, "obj2": 0.3472025041944633}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) * ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / MUM ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.47769516728624534, "obj2": 0.30102273249380557}], "28": [{"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( ARS + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) / ( DS + ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( DS,CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,BR ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( MUM * ( DS + DS ) ) + DS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( FirstVNF_RAM_Server - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( CS * DS ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.79182156133829, "obj2": 0.082987492340228}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( MLU * MUC ) - ( RRSe / RRSe ) )", "obj1": 0.8401486988847584, "obj2": 0.0672773202833568}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( RRSe / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6606019648664802}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6356877323420075, "obj2": 0.17229360618023973}, {"determining": "( ( Min( ARS ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( DS / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / RMSe ) )", "obj1": 0.9776951672862454, "obj2": 0.0189307827721007}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) * ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / MUM ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.18773234200743494, "obj2": 0.629036379619265}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6059479553903345, "obj2": 0.20288705399648765}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.14312267657992564, "obj2": 0.6722309305668411}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + Const ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( MLU / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06373792054613875}, {"determining": "( ACS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( ( MLU * MUC ) * ( DS / RRSe ) ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,DS ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.09739944910625714}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( FirstVNF_CPU_Server - DDR ) ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4349442379182156, "obj2": 0.3472025041944633}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( ARS - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( DS + MLU ) / ( CS * DS ) ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( MUM + MLU ) ) )", "obj1": 0.6802973977695167, "obj2": 0.13510510498865075}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * ARS ) ) - ACS ) - Min( BR ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + RCSe ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9144981412639405, "obj2": 0.04002556750462901}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS + PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( DS / ( RMSe * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( Max( MLU,MUC ) * ( DS / RRSe ) ) ) ) ) * ( CS + MLU ) ) )", "obj1": 0.5687732342007435, "obj2": 0.25478274497476616}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem + ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) / Min( ACS ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS / CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6951672862453532, "obj2": 0.12374544730270326}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe * CS ) ) - ( ( ( MUR / MUR ) + ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3754646840148699, "obj2": 0.38547961686225335}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( Max( ( ACS + MRS ),Max( FirstVNF_Mem,Const ) ) * Max( ( ACS - MDR ),( BR + ACS ) ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,FirstVNF_RAM_Server ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RMSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / MLU ) - ( DS + CS ) ) + ( ( ( ( RRSe / RRSe ) * ( DS + DS ) ) + DS ) / CS ) ),( ( DS - CS ) * MUC ) ) / RMSe ) )", "obj1": 0.21933085501858737, "obj2": 0.6026974623372486}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( DS / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) * DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.3345724907063197, "obj2": 0.4608959544641443}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.24907063197026022, "obj2": 0.5465388063750892}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3475836431226766, "obj2": 0.4268688033130587}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS - MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.22304832713754646, "obj2": 0.5793700403106711}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) * Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe / CS ) + MLU ) / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( MLU / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.604089219330855, "obj2": 0.2368401521305808}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3903345724907063, "obj2": 0.37356644546154005}, {"determining": "( ( Min( ( Max( ( BR + ACS ),CRS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM / MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) / MUC ) ) - MUM ) ) * ( Min( ( MUR + ( ( RMSe - CS ) * RMSe ) ) ,MUC ) / RMSe ) )", "obj1": 0.3048327137546468, "obj2": 0.4848190133541084}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.1171003717472119, "obj2": 0.7044036718825261}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( FirstVNF_RAM_Server + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( Min( ( MUR + DS ) ,MUC ) / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7527617073963753}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,BR ) ) * Min( ( ACS - MDR ) ,( FirstVNF_RAM_Server + ACS ) ) ) ) - ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,FirstVNF_RAM_Server ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( DS / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7205840401521929}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,AMS ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.4083393376214036}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ACS ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6635687732342007, "obj2": 0.1489542512471292}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / CS ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6635687732342007, "obj2": 0.1489542512471292}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / RMSe ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.26022304832713755, "obj2": 0.5343430633718441}, {"determining": "( ( ( ACS / BR ) + ( ACS * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( DS + MLU ) / ( CS * DS ) ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.949814126394052, "obj2": 0.02612354939388299}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + MUM ) * ( CS * MUM ) ) ) )", "obj1": 0.5724907063197026, "obj2": 0.23984370739102318}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( ( ( ( ( ( ( RMSe / CS ) - MUM ) + ( ( MUR + DS ) / MUC ) ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ) - CS ) / RMSe ) )", "obj1": 0.1895910780669145, "obj2": 0.622107665225686}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5297397769516728, "obj2": 0.2757071415853269}, {"determining": "( ( Min( AMS ,( Min( FirstVNF_CPU_Server ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + RRSe ) ) ) )", "obj1": 0.47026022304832715, "obj2": 0.3160421561733525}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) ) )", "obj1": 0.8921933085501859, "obj2": 0.056323653653416725}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( ( ARS * FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) + ( DS + CS ) ) + ( ( ( ( RRSe / CS ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.23048327137546468, "obj2": 0.5687477684591465}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( Min( AMS ,ACS ) * ARS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + DS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.12453531598513011, "obj2": 0.697499020175925}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ( Min( AMS ,ACS ) * ARS ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( ( ( ( ( ( MUR + DS ) / MUC ) / CS ) + MLU ) + ( ( MUR + DS ) / MUC ) ) - CS )", "obj1": 0.4628252788104089, "obj2": 0.3252528851585657}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + ( RMSe / RMSe ) ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.34014869888475835, "obj2": 0.4313636485757018}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( ( ( RMSe + DS ) / MUC ) / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.0724907063197026, "obj2": 0.776859857983884}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + Const ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( FirstVNF_RAM_Server - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) ) )", "choosing": "( DS / ( ( DS * CS ) + ( DS + CS ) ) )", "obj1": 0.5966542750929368, "obj2": 0.23814237372603891}], "29": [{"determining": "( ( ( AMS - ( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( ARS + ACS ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) / ( DS + ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( DS,CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( ( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( FirstVNF_CPU_Server - DDR ) ) - PN ),( AMS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4349442379182156, "obj2": 0.3472025041944633}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( MUM * ( DS + DS ) ) + DS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.49814126394052044, "obj2": 0.28833816336909485}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * ARS ) ) - ACS ) - Min( BR ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + RCSe ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9144981412639405, "obj2": 0.04002556750462901}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Max( ( ARS * FirstVNF_CPU ),Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + DS ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( RRSe / CS ) ) + ( RMSe / RMSe ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.2843866171003718, "obj2": 0.5026320328829614}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.45724907063197023, "obj2": 0.31482449703704546}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,AMS ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.4083393376214036}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( ( Min( AMS ,ACS ) * ( ACS + MRS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS - CS )", "obj1": 0.5278810408921933, "obj2": 0.26955681139003473}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6356877323420075, "obj2": 0.17229360618023973}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) ) )", "obj1": 0.8921933085501859, "obj2": 0.056323653653416725}, {"determining": "( ( Min( AMS ,( Max( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ),( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) * ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( CS / CS ) + MLU ) - DS ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.17286245353159851, "obj2": 0.6419176413112672}, {"determining": "( ( ( Min( CRS ,Min( AMS ,ACS ) ) * ARS ) / ( Min( ( ACS + MRS ) ,( FirstVNF_Mem + ARS ) ) * Min( ( PN - MDR ) ,( BR + ACS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ACS ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( RMSe / CS ) - MUM ) + ( ( MUR + DS ) / MUC ) ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.7397769516728625, "obj2": 0.09884714764283817}, {"determining": "( ( ( ( ACS - MDR ) / ( ( ( ( ( FirstVNF_Mem + Const ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( MLU / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06373792054613875}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( RRSe / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6606019648664802}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS + PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3252788104089219, "obj2": 0.4557816517791704}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6059479553903345, "obj2": 0.20288705399648765}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - AMS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + ( RMSe / RMSe ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.2620817843866171, "obj2": 0.530423470005662}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS + PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( DS / ( RMSe * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( Max( MLU,MUC ) * ( DS / RRSe ) ) ) ) ) * ( CS + MLU ) ) )", "obj1": 0.5687732342007435, "obj2": 0.25478274497476616}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.79182156133829, "obj2": 0.082987492340228}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7769516728624535, "obj2": 0.09040071486655331}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3475836431226766, "obj2": 0.4268688033130587}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( ( PN - RRS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( DS + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7100371747211895, "obj2": 0.1176005826337148}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.09665427509293681, "obj2": 0.7255416161874926}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS + ACS ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( DS / ( RMSe * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( RRSe / CS ) ) * ( CS + MLU ) ) )", "obj1": 0.48141263940520446, "obj2": 0.30213009835215815}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( MLU * MUC ) - ( RRSe / RRSe ) )", "obj1": 0.8401486988847584, "obj2": 0.0672773202833568}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( MLU * MUC ) - ( RRSe / RRSe ) )", "obj1": 0.8401486988847584, "obj2": 0.0672773202833568}, {"determining": "( ( Min( AMS ,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( MUM / ( DS - CS ) ) )", "obj1": 0.9479553903345725, "obj2": 0.032614657212962216}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( DS + MLU ) / ( CS * DS ) ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.6282527881040892, "obj2": 0.18187833651683263}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * MDR ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + ( RMSe / RMSe ) ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / MUR ) - ( MUM + MUM ) ) + ( ( ( MUR - RRSe ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7490665368734212}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.14312267657992564, "obj2": 0.6722309305668411}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) * Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe / CS ) + MLU ) / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( MLU / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.604089219330855, "obj2": 0.2368401521305808}, {"determining": "( ( Min( ( ACS + Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) ) ,Max( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( DS * ( DS + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.13568773234200743, "obj2": 0.6878187004038441}, {"determining": "( ( ( ACS / BR ) + ( ACS * AMS ) ) / ( ( ARS * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + MUM ) * ( CS * MUM ) ) ) )", "obj1": 0.05762081784386617, "obj2": 0.8266386556167472}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + MUM ) * ( CS * MUM ) ) ) )", "obj1": 0.5724907063197026, "obj2": 0.23984370739102318}, {"determining": "( ACS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( ( MLU * MUC ) * ( DS / RRSe ) ) - ( MLU - MLU ) ) + ( ( RCSe + MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,DS ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.09739944910625714}, {"determining": "( ( Min( ( Max( ( BR + ACS ),CRS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM / MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) / MUC ) ) - MUM ) ) * ( Min( ( MUR + ( ( RMSe - CS ) * RMSe ) ) ,MUC ) / RMSe ) )", "obj1": 0.3048327137546468, "obj2": 0.4848190133541084}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( ( ARS * FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) + ( DS + CS ) ) + ( ( ( ( RRSe / CS ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.23048327137546468, "obj2": 0.5687477684591465}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe * CS ) ) - ( ( ( MUR / MUR ) + ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3754646840148699, "obj2": 0.38547961686225335}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3903345724907063, "obj2": 0.37356644546154005}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( ( ( ( ( ( ( RMSe / CS ) - MUM ) + ( ( MUR + DS ) / MUC ) ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ) - CS ) / RMSe ) )", "obj1": 0.1895910780669145, "obj2": 0.622107665225686}, {"determining": "( ( Min( ARS ,( AMS / ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.29739776951672864, "obj2": 0.490711526754663}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( ( ( RMSe + DS ) / MUC ) / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.0724907063197026, "obj2": 0.776859857983884}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6258854563413294}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - CS ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.4684014869888476, "obj2": 0.3084413203087523}], "30": [{"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( ( FirstVNF_CPU - ( Max( ACS,FirstVNF_Mem_Server ) + ( Min( CRS ,DDR ) * FirstVNF_Mem ) ) ) - ( Max( Min( FirstVNF_Mem_Server ,MDR ),FirstVNF_CPU_Server ) + ( PN * ( CRS / Min( ( Min( Const ,( FirstVNF_Mem * ACS ) ) - ARS ) ,MDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( ( Min( Min( DS ,MUR ) ,( MUR * MLU ) ) * Max( ( MLU * CS ),( DS + RMSe ) ) ) * ( ( ( DS / MUC ) + ( MUM + RCSe ) ) / ( ( MUR / MUC ) * Min( RRSe ,MUM ) ) ) ) ,Min( ( ( Max( MUM,RRSe ) * Min( CS ,RRSe ) ) + ( ( RMSe + MUC ) + ( MLU * RMSe ) ) ) ,( ( ( MUM + DS ) - ( RMSe - RRSe ) ) * ( Max( RRSe,RMSe ) / Min( RCSe ,MUM ) ) ) ) ) + ( Min( ( ( ( MUC * MUR ) - Max( MUM,DS ) ) - Max( ( MUC - DS ),Min( MLU ,RRSe ) ) ) ,( ( ( MUC - RMSe ) + ( MUR - DS ) ) * ( ( MUC / RRSe ) + Min( MUR ,DS ) ) ) ) / ( ( Min( Max( MUR,MUM ) ,Min( RCSe ,MLU ) ) + ( ( MLU + RCSe ) + ( MUM * RRSe ) ) ) + ( Max( Max( DS,CS ),( CS - MUM ) ) / Min( Min( DS ,RMSe ) ,( RMSe / RCSe ) ) ) ) ) ) * ( ( ( ( Min( ( CS / MLU ) ,( MLU + RCSe ) ) / Max( Min( MUC ,RRSe ),( MUM * DS ) ) ) + ( ( Max( RMSe,MUM ) + ( MLU * RMSe ) ) + Min( ( RCSe + DS ) ,Max( MUM,MUM ) ) ) ) + ( ( ( Min( RRSe ,RMSe ) + Max( MUM,MLU ) ) + Max( ( MUR / RRSe ),( MUM * RMSe ) ) ) + Max( Min( ( MUC * RMSe ) ,( MLU - RRSe ) ),Min( ( MLU / RRSe ) ,( MUC - RMSe ) ) ) ) ) - Min( Min( Max( Min( ( RRSe - CS ) ,Min( MUC ,RRSe ) ),( ( MUC * MUM ) - Max( RRSe,RRSe ) ) ) ,Max( ( ( MLU - RCSe ) * Max( CS,RMSe ) ),( ( MUC / CS ) - ( CS - RRSe ) ) ) ) ,Min( ( ( ( MUC * MUR ) + Max( MUC,RCSe ) ) + ( Min( RCSe ,RCSe ) - ( MUM - RCSe ) ) ) ,( ( ( MUC * MLU ) * ( DS * RMSe ) ) - ( ( RMSe + RRSe ) + ( RRSe - RMSe ) ) ) ) ) ) ) ,( ( Max( ( ( ( Min( DS ,MUR ) - Min( CS ,RCSe ) ) * Max( ( MLU + MUC ),( MUC / MUR ) ) ) / ( ( ( RMSe + DS ) - ( MUR - DS ) ) * ( ( RRSe - MUM ) * Min( MUM ,RMSe ) ) ) ),( ( Min( ( RMSe / RCSe ) ,( MUC - MLU ) ) + ( ( RRSe * MUR ) * ( DS * CS ) ) ) / ( ( Max( RCSe,MUC ) - ( RRSe / MUC ) ) + Min( Min( RCSe ,DS ) ,( RRSe - RRSe ) ) ) ) ) - ( Min( ( Max( ( MUR - MUC ),Min( RRSe ,MUM ) ) + ( ( MUC * MUC ) + ( MUR * RMSe ) ) ) ,( ( Min( RMSe ,DS ) / ( RRSe / MUC ) ) / Min( ( RCSe + MUC ) ,( MUM * MUC ) ) ) ) * ( ( ( ( RCSe * RRSe ) * Max( DS,MUM ) ) + ( ( RMSe + CS ) - ( MLU * DS ) ) ) - ( ( Max( DS,MUR ) + ( MUC * RRSe ) ) * Min( ( RRSe / MUR ) ,( RRSe + MLU ) ) ) ) ) ) * Max( ( ( ( ( Max( RRSe,RCSe ) - ( RCSe - MUM ) ) + Max( Min( CS ,MUR ),( RCSe + RMSe ) ) ) / ( Max( ( RCSe - MUC ),Min( RRSe ,MUR ) ) / ( Min( MLU ,RMSe ) - ( MUM + DS ) ) ) ) * Min( Min( Min( ( MUR / RMSe ) ,( MUR / DS ) ) ,Max( Min( MUM ,RRSe ),Max( RMSe,MUR ) ) ) ,( Max( Min( RCSe ,RCSe ),Min( RRSe ,MUR ) ) - ( ( RRSe - DS ) + ( MUC + RCSe ) ) ) ) ),( Max( ( ( ( MUM / RCSe ) * ( RCSe * CS ) ) * Max( ( RMSe * RCSe ),( MUC * RRSe ) ) ),( ( Min( MUR ,RRSe ) - Min( RMSe ,RRSe ) ) - ( Max( DS,CS ) / ( MUC / CS ) ) ) ) * ( ( ( ( MLU / RCSe ) - ( RMSe + MUC ) ) / ( ( RMSe * MLU ) + ( MUM + RMSe ) ) ) * Max( Min( Max( RMSe,RRSe ) ,Min( MUM ,RMSe ) ),( Min( MUC ,RCSe ) * ( MLU * RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ARS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / RMSe ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06557319964159278}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.09665427509293681, "obj2": 0.7255416161874926}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( MUM * ( DS + DS ) ) + DS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.49814126394052044, "obj2": 0.28833816336909485}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) * Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( ( ( RMSe / CS ) + MLU ) / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( ( MLU / MUM ) / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.604089219330855, "obj2": 0.2368401521305808}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( ( ACS - MDR ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8736059479553904, "obj2": 0.05534441654170142}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6059479553903345, "obj2": 0.20288705399648765}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8066914498141264, "obj2": 0.07548639103976934}, {"determining": "( AMS / ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.6988263237435596}, {"determining": "( ( Min( PN ,( Min( FirstVNF_Mem ,ARS ) * ( Min( AMS ,ACS ) * ARS ) ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe * CS ) ) - ( ( ( MUR + MUR ) + ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) )", "obj1": 0.9814126394052045, "obj2": 0.013885209680737557}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + ( CS + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7443797436781392}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.79182156133829, "obj2": 0.082987492340228}, {"determining": "( ( Min( ( PN * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( ACS * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( RMSe * ( CS + ( DS + CS ) ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3394339098256049}, {"determining": "( ( Min( FirstVNF_Mem ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( PN,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS + PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + AMS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( DS / ( RMSe * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) / ( Max( MLU,MUC ) * ( DS / RRSe ) ) ) ) ) * ( CS + MLU ) ) )", "obj1": 0.5687732342007435, "obj2": 0.25478274497476616}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) - Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,DDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / MUC ) + MLU ) ) - ( MUR + ( Max( DS,CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.6877323420074349, "obj2": 0.13061688341845634}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( DS + ( ( ( RMSe / CS ) - ( RRSe + RMSe ) ) + ( RMSe / CS ) ) ) ) + ( ( MUR + DS ) / MUC ) ) - ( Max( RMSe,CS ) / ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) ) )", "obj1": 0.8996282527881041, "obj2": 0.05220200084669912}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.33271375464684017, "obj2": 0.4448533396126613}, {"determining": "( ( Min( AMS ,( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ARS ) ) - ACS ) - Min( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( ( ( ( RMSe + DS ) - MUC ) / CS ) + MLU ) )", "obj1": 0.9646840148698885, "obj2": 0.028446606583889388}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( AMS / ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ARS * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MLU - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + ( RMSe / RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.275092936802974, "obj2": 0.5123736601057967}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( DS - CS )", "obj1": 0.7620817843866171, "obj2": 0.08928134358078131}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6635687732342007, "obj2": 0.14893602224790062}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / DS ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2211895910780669, "obj2": 0.5808985964763576}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + MUM ) * ( CS * MUM ) ) ) )", "obj1": 0.5724907063197026, "obj2": 0.23984370739102318}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( BR,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / MUR ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( DS + MLU ) / ( CS * DS ) ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.620817843866171, "obj2": 0.18639124918702998}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( DS,( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05762081784386617, "obj2": 0.8246311654996352}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Max( ( ARS * FirstVNF_CPU ),Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + DS ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( RRSe / CS ) ) + ( RMSe / RMSe ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.2843866171003718, "obj2": 0.5026320328829614}, {"determining": "( ( Min( ( Max( ( BR + ACS ),CRS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM / MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) / MUC ) ) - MUM ) ) * ( Min( ( MUR + ( ( RMSe - CS ) * RMSe ) ) ,MUC ) / RMSe ) )", "obj1": 0.3048327137546468, "obj2": 0.4848190133541084}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - DS ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.4795539033457249, "obj2": 0.2986034622048865}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( RRSe / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6747211895910781, "obj2": 0.14389561535804138}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - PN ) ,( BR + ACS ) ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( DS / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.1661619286800314}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,MDR ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( ( RRSe / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.39776951672862454, "obj2": 0.3691393680343693}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe * CS ) ) - ( ( ( MUR / MUR ) + ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.23977695167286245, "obj2": 0.5549020079615329}, {"determining": "( ( Min( ( Max( ( BR + ACS ),CRS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM / MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) / MUC ) ) - MUM ) ) * ( Min( ( MUR + ( ( RMSe - CS ) * RMSe ) ) ,MUC ) / RMSe ) )", "obj1": 0.21933085501858737, "obj2": 0.6029465750043504}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( ( DS - CS ) * MUC ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9200743494423792, "obj2": 0.03746555116876084}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( ( Max( RMSe,CS ) / ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4251575019098184}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.45724907063197023, "obj2": 0.31482449703704546}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( ( ( RMSe + DS ) / MUC ) / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.0724907063197026, "obj2": 0.776859857983884}, {"determining": "( ( Min( ARS ,( AMS / ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.29739776951672864, "obj2": 0.490711526754663}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + ( RMSe / RMSe ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.09107806691449814, "obj2": 0.7393556983026176}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,AMS ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.4083393376214036}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * ARS ) ) - ACS ) - Min( BR ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + RCSe ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9144981412639405, "obj2": 0.04002556750462901}, {"determining": "( ( PN - RRS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,ACS ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1200359961478206}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( RRSe / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6606019648664802}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS - CS )", "obj1": 0.5278810408921933, "obj2": 0.26955681139003473}], "31": [{"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ACS - ( ARS * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ARS * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + ( CS / RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( ( FirstVNF_CPU - ( Max( ACS,FirstVNF_Mem_Server ) + ( Min( CRS ,DDR ) * FirstVNF_Mem ) ) ) - ( Max( Min( FirstVNF_Mem_Server ,MDR ),FirstVNF_CPU_Server ) + ( PN * ( CRS / Min( ( Min( Const ,( FirstVNF_Mem * ACS ) ) - ARS ) ,MDR ) ) ) ) )", "choosing": "Min( ( ( Min( ( ( Min( Min( DS ,MUR ) ,( MUR * MLU ) ) * Max( ( MLU * CS ),( DS + RMSe ) ) ) * ( ( ( DS / MUC ) + ( MUM + RCSe ) ) / ( ( MUR / MUC ) * Min( RRSe ,MUM ) ) ) ) ,Min( ( ( Max( MUM,RRSe ) * Min( CS ,RRSe ) ) + ( ( RMSe + MUC ) + ( MLU * RMSe ) ) ) ,( ( ( MUM + DS ) - ( RMSe - RRSe ) ) * ( Max( RRSe,RMSe ) / Min( RCSe ,MUM ) ) ) ) ) + ( Min( ( ( ( MUC * MUR ) - Max( MUM,DS ) ) - Max( ( MUC - DS ),Min( MLU ,RRSe ) ) ) ,( ( ( MUC - RMSe ) + ( MUR - DS ) ) * ( ( MUC / RRSe ) + Min( MUR ,DS ) ) ) ) / ( ( Min( Max( MUR,MUM ) ,Min( RCSe ,MLU ) ) + ( ( MLU + RCSe ) + ( MUM * RRSe ) ) ) + ( Max( Max( DS,CS ),( CS - MUM ) ) / Min( Min( DS ,RMSe ) ,( RMSe / RCSe ) ) ) ) ) ) * ( ( ( ( Min( ( CS / MLU ) ,( MLU + RCSe ) ) / Max( Min( MUC ,RRSe ),( MUM * DS ) ) ) + ( ( Max( RMSe,MUM ) + ( MLU * RMSe ) ) + Min( ( RCSe + DS ) ,Max( MUM,MUM ) ) ) ) + ( ( ( Min( RRSe ,RMSe ) + Max( MUM,MLU ) ) + Max( ( MUR / RRSe ),( MUM * RMSe ) ) ) + Max( Min( ( MUC * RMSe ) ,( MLU - RRSe ) ),Min( ( MLU / RRSe ) ,( MUC - RMSe ) ) ) ) ) - Min( Min( Max( Min( ( RRSe - CS ) ,Min( MUC ,RRSe ) ),( ( MUC * MUM ) - Max( RRSe,RRSe ) ) ) ,Max( ( ( MLU - RCSe ) * Max( CS,RMSe ) ),( ( MUC / CS ) - ( CS - RRSe ) ) ) ) ,Min( ( ( ( MUC * MUR ) + Max( MUC,RCSe ) ) + ( Min( RCSe ,RCSe ) - ( MUM - RCSe ) ) ) ,( ( ( MUC * MLU ) * ( DS * RMSe ) ) - ( ( RMSe + RRSe ) + ( RRSe - RMSe ) ) ) ) ) ) ) ,( ( Max( ( ( ( Min( DS ,MUR ) - Min( CS ,RCSe ) ) * Max( ( MLU + MUC ),( MUC / MUR ) ) ) / ( ( ( RMSe + DS ) - ( MUR - DS ) ) * ( ( RRSe - MUM ) * Min( MUM ,RMSe ) ) ) ),( ( Min( ( RMSe / RCSe ) ,( MUC - MLU ) ) + ( ( RRSe * MUR ) * ( DS * CS ) ) ) / ( ( Max( RCSe,MUC ) - ( RRSe / MUC ) ) + Min( Min( RCSe ,DS ) ,( RRSe - RRSe ) ) ) ) ) - ( Min( ( Max( ( MUR - MUC ),Min( RRSe ,MUM ) ) + ( ( MUC * MUC ) + ( MUR * RMSe ) ) ) ,( ( Min( RMSe ,DS ) / ( RRSe / MUC ) ) / Min( ( RCSe + MUC ) ,( MUM * MUC ) ) ) ) * ( ( ( ( RCSe * RRSe ) * Max( DS,MUM ) ) + ( ( RMSe + CS ) - ( MLU * DS ) ) ) - ( ( Max( DS,MUR ) + ( MUC * RRSe ) ) * Min( ( RRSe / MUR ) ,( RRSe + MLU ) ) ) ) ) ) * Max( ( ( ( ( Max( RRSe,RCSe ) - ( RCSe - MUM ) ) + Max( Min( CS ,MUR ),( RCSe + RMSe ) ) ) / ( Max( ( RCSe - MUC ),Min( RRSe ,MUR ) ) / ( Min( MLU ,RMSe ) - ( MUM + DS ) ) ) ) * Min( Min( Min( ( MUR / RMSe ) ,( MUR / DS ) ) ,Max( Min( MUM ,RRSe ),Max( RMSe,MUR ) ) ) ,( Max( Min( RCSe ,RCSe ),Min( RRSe ,MUR ) ) - ( ( RRSe - DS ) + ( MUC + RCSe ) ) ) ) ),( Max( ( ( ( MUM / RCSe ) * ( RCSe * CS ) ) * Max( ( RMSe * RCSe ),( MUC * RRSe ) ) ),( ( Min( MUR ,RRSe ) - Min( RMSe ,RRSe ) ) - ( Max( DS,CS ) / ( MUC / CS ) ) ) ) * ( ( ( ( MLU / RCSe ) - ( RMSe + MUC ) ) / ( ( RMSe * MLU ) + ( MUM + RMSe ) ) ) * Max( Min( Max( RMSe,RRSe ) ,Min( MUM ,RMSe ) ),( Min( MUC ,RCSe ) * ( MLU * RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ARS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / RMSe ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( RRSe / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6606019648664802}, {"determining": "( DDR / ( ARS * ARS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( DS / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.12453531598513011, "obj2": 0.6929959232671099}, {"determining": "( ( PN - RRS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,ACS ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1200359961478206}, {"determining": "( ( Min( ( PN * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( ACS * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( RMSe * ( CS + ( DS + CS ) ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3394339098256049}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.33271375464684017, "obj2": 0.4448533396126613}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / DS ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2211895910780669, "obj2": 0.5808985964763576}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) * Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.24907063197026022, "obj2": 0.5465388063750892}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / Min( DS ,( ( DS * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.1970260223048327, "obj2": 0.6071516153952035}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( ( ( RMSe + DS ) / MUC ) / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.0724907063197026, "obj2": 0.776859857983884}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.741635687732342, "obj2": 0.09753528947612086}, {"determining": "( ( ARS * FirstVNF_CPU ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( MUM / ( RMSe * ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MLU + MUM ) ) + ( RMSe / CS ) ) ) ) )", "obj1": 0.12267657992565056, "obj2": 0.719519534965027}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6299017360514835}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - PN ) ,( BR + ACS ) ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( DS / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.1661619286800314}, {"determining": "( ( Min( PN ,( Min( FirstVNF_Mem ,ARS ) * ( Min( AMS ,ACS ) * ARS ) ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe * CS ) ) - ( ( ( MUR + MUR ) + ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) )", "obj1": 0.9814126394052045, "obj2": 0.013885209680737557}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS - CS )", "obj1": 0.5278810408921933, "obj2": 0.26955681139003473}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - DS ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.17286245353159851, "obj2": 0.6419176413112672}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + ( CS + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7443797436781392}, {"determining": "( ( Min( AMS ,( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ARS ) ) - ACS ) - Min( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( ( ( ( RMSe + DS ) - MUC ) / CS ) + MLU ) )", "obj1": 0.9628252788104089, "obj2": 0.029148723551909984}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.09665427509293681, "obj2": 0.7255416161874926}, {"determining": "( ( Min( ( Max( ( BR + ACS ),CRS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM / MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) / MUC ) ) - MUM ) ) * ( Min( ( MUR + ( ( RMSe - CS ) * RMSe ) ) ,MUC ) / RMSe ) )", "obj1": 0.21933085501858737, "obj2": 0.6029465750043504}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( ( Max( RMSe,CS ) / ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4251575019098184}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.45724907063197023, "obj2": 0.31482449703704546}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( AMS + ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ARS * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + ( RMSe / RCSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.275092936802974, "obj2": 0.5123736601057967}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.38661710037174724, "obj2": 0.3973073012649108}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Max( ( ARS * FirstVNF_CPU ),Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + DS ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( RRSe / CS ) ) + ( RMSe / RMSe ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.2843866171003718, "obj2": 0.5026320328829614}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( ( DS - CS ) * MUC ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9200743494423792, "obj2": 0.03746555116876084}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( ( ACS - MDR ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( DS - CS ) ) ,MUR ) ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8717472118959108, "obj2": 0.05569601927613118}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06557319964159278}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06557319964159278}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( MUM * ( DS + DS ) ) + DS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * RMSe ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5037174721189591, "obj2": 0.28296036635796334}, {"determining": "( AMS / ( ( Max( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ),( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( DS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8066914498141264, "obj2": 0.07548639103976934}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + MUM ) * ( CS * MUM ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.22350631508232874}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,AMS ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.38847583643122674, "obj2": 0.38473575786200304}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.79182156133829, "obj2": 0.082987492340228}, {"determining": "( ( Min( ARS ,( AMS / ACS ) ) * ( ( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( FirstVNF_CPU_Server - DDR ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUC ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3550185873605948, "obj2": 0.4169845193982637}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.604089219330855, "obj2": 0.20516503815092663}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( AMS / ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ARS * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MLU - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + ( RMSe / RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.275092936802974, "obj2": 0.5123736601057967}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + MUM ) * ( CS * MUM ) ) ) )", "obj1": 0.5929368029739777, "obj2": 0.22306269076203336}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( DS + MLU ) / ( CS * DS ) ),CS ) - Min( DS ,( MUR - RRSe ) ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.6356877323420075, "obj2": 0.17896557836876373}, {"determining": "( ( Min( ( Max( ( BR + ACS ),CRS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM / MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) / MUC ) ) - MUM ) ) * ( Min( ( MUR + ( ( RMSe - CS ) * RMSe ) ) ,MUC ) / RMSe ) )", "obj1": 0.3048327137546468, "obj2": 0.4848190133541084}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( ACS - PN ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * CS )", "obj1": 0.4851301115241636, "obj2": 0.2980376241548009}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) - Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,Min( ARS ,ARS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,DDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( RRSe / MUM ) / MUC ) + MLU ) ) - ( MUR + ( Max( DS,CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.6877323420074349, "obj2": 0.1304789348872553}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) / ( ( FirstVNF_CPU_Server + ARS ) - Min( Min( ( Min( ACS ,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) ) )", "choosing": "Max( DS,( ( ( CS + MLU ) / ( CS * DS ) ) - ( Max( CS,( ( ( RMSe / CS ) + MLU ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06505576208178439, "obj2": 0.8201204298577583}], "32": [{"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) - Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - Min( ( ACS - MDR ) ,ACS ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,DDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( RRSe / MUM ) / MUC ) + MLU ) ) - ( MUR + ( Max( DS,CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ACS - ( ARS * FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ARS * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + ( CS / RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ARS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ( AMS * FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( ( DS - CS ) * MUC ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9200743494423792, "obj2": 0.03746555116876084}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( ( ACS - MDR ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( DS - CS ) ) ,MUR ) ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8717472118959108, "obj2": 0.05569601927613118}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) + ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5631970260223048, "obj2": 0.2573719447190572}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / Min( DS ,( ( DS * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.1970260223048327, "obj2": 0.6071516153952035}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( RRSe / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6606019648664802}, {"determining": "( ( Min( ( PN * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( ACS * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( RMSe * ( CS + ( DS + CS ) ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3394339098256049}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) * Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.24907063197026022, "obj2": 0.5465388063750892}, {"determining": "( ( Min( ( ACS - MDR ) ,Min( BR ,ACS ) ) * ( Min( ARS ,ACS ) * FirstVNF_CPU_Server ) ) / Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Min( ( ACS - FirstVNF_RAM ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( RCSe ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( ( ( MUC / RMSe ) - RMSe ) - ( ( DS - MUM ) + ( ( MLU * MUC ) * ( DS / RRSe ) ) ) ) ) / ( CS * MLU ) ) )", "obj1": 0.42379182156133827, "obj2": 0.36390382424977263}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.33271375464684017, "obj2": 0.4448533396126613}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),CRS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) + ( ( ( ( RMSe + DS ) / MUC ) / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.0724907063197026, "obj2": 0.7740095617366677}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + MUM ) * ( CS * MUM ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.22350631508232874}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( Max( ARS,ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + MDR ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( DS + ( DS + MUR ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6848408287114728}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( MUM * ( DS + DS ) ) + DS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * RMSe ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5037174721189591, "obj2": 0.28296036635796334}, {"determining": "( ( Min( ARS ,( AMS / ACS ) ) * ( ( Min( Min( ( Max( AMS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( FirstVNF_CPU_Server - DDR ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUC ) ) + ( RMSe / CS ) ) - ( MUR + ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3550185873605948, "obj2": 0.416832777464084}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6299017360514835}, {"determining": "( ( Min( ( Max( ( BR + ACS ),CRS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM / MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) / MUC ) ) - MUM ) ) * ( Min( ( MUR + ( ( RMSe - CS ) * RMSe ) ) ,MUC ) / RMSe ) )", "obj1": 0.3048327137546468, "obj2": 0.4848190133541084}, {"determining": "( DDR / ( ARS * ARS ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( DS / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.12453531598513011, "obj2": 0.6929959232671099}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ARS * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( RRSe / CS ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + ( RMSe / RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.26022304832713755, "obj2": 0.5393483311167853}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ( ARS * FirstVNF_Mem_Server ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS * MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( RCSe - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - Min( DS ,MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.4033457249070632, "obj2": 0.3757145073000925}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - DS ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.17286245353159851, "obj2": 0.6419176413112672}, {"determining": "( ( Min( AMS ,( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ARS ) ) - ACS ) - Min( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( ( ( ( RMSe + DS ) - MUC ) / CS ) + MLU ) )", "obj1": 0.9628252788104089, "obj2": 0.029148723551909984}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( Min( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - DDR ),( BR + ACS ) ) ) ,( AMS - ACS ) ) ,( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( DS ,( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7181028724796085}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - AMS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( RRS - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( ( Max( RMSe,CS ) / ( MUM - ( ( ( RMSe / CS ) - ( DS + CS ) ) * ( DS + DS ) ) ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4251575019098184}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,ARS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( BR * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / DS ) * ( DS + DS ) ) + DS ) / CS ) ),MUR ) / RMSe ) )", "obj1": 0.21933085501858737, "obj2": 0.586874656129773}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUM ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3828996282527881, "obj2": 0.3977834637200213}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( FirstVNF_CPU_Server - DDR ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / CS ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.9776951672862454, "obj2": 0.01074196813310056}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( DS + MUM ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6152416356877324, "obj2": 0.1951276427432229}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( DS / ( DS * ( ( MUC * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + ( CS + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7443797436781392}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( DS + MLU ) / ( CS * DS ) ),CS ) - Min( DS ,( MUR - RRSe ) ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.6356877323420075, "obj2": 0.17896557836876373}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.775092936802974, "obj2": 0.08718636980859132}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.45724907063197023, "obj2": 0.31482449703704546}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) - Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,Min( ARS ,ARS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,DDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1200359961478206}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) / ( ( FirstVNF_CPU_Server + ARS ) - Min( Min( ( Min( ACS ,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) ) )", "choosing": "Max( DS,( ( ( CS + MLU ) / ( CS * DS ) ) - ( Max( CS,( ( ( RMSe / CS ) + MLU ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.06505576208178439, "obj2": 0.8201204298577583}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem_Server ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( PN * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS + DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + Min( RMSe ,RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.2732342007434944, "obj2": 0.5137319131619034}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06557319964159278}, {"determining": "( ( PN - RRS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,ACS ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1200359961478206}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06557319964159278}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( FirstVNF_RAM_Server - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,ACS ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( DS - CS ) - ( DS + CS ) ) + ( ( MUR + DS ) + ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6635687732342007, "obj2": 0.1491632186909062}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,AMS ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.38847583643122674, "obj2": 0.38473575786200304}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RRSe / DS ) * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.2211895910780669, "obj2": 0.5808985964763576}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.604089219330855, "obj2": 0.20458045034919872}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( ( Max( RRSe,CS ) * ( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8066914498141264, "obj2": 0.07548639103976934}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( MUM * ( DS + DS ) ) + DS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * RMSe ) ) ,MUR ) ) ) * ( CS * CS ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.0921894241455793}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + MUM ) * ( CS * MUM ) ) ) )", "obj1": 0.5929368029739777, "obj2": 0.22306269076203336}], "33": [{"determining": "( ( ( AMS - ( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) - Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - Min( ( ACS - MDR ) ,ACS ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,DDR ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( RRSe / MUM ) / MUC ) + MLU ) ) - ( MUR + ( Max( DS,CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( ( Min( ( PN * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( ACS * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( RMSe * ( CS + ( DS + CS ) ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3394339098256049}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem_Server ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( PN * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS + DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + Min( RMSe ,RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.2732342007434944, "obj2": 0.5137319131619034}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( Min( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - DDR ),( BR + ACS ) ) ) ,( AMS - ACS ) ) ,( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( DS ,( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7181028724796085}, {"determining": "( ( Min( ARS ,Min( AMS ,ACS ) ) * ( ( Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ( ACS + MRS ) * Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.24907063197026022, "obj2": 0.5465388063750892}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server * RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUC ) * ( ( DS / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.4070631970260223, "obj2": 0.35388322347652573}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( DS / ( DS * ( ( MUC * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + ( CS + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7443797436781392}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( ( DS - CS ) * MUC ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9200743494423792, "obj2": 0.03746555116876084}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.5741325584760466}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / CS ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5669144981412639, "obj2": 0.24218073050579042}, {"determining": "( ( Min( ARS ,( AMS / ACS ) ) * ( ( Min( Min( ( Max( AMS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,( ARS * ARS ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUC ) ) + ( RMSe / CS ) ) - ( MUR + ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.30111524163568776, "obj2": 0.49282366375696796}, {"determining": "( AMS / ( Max( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ),Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( DS + MUR ) / ( CS * DS ) ),CS ) - Min( DS ,( MUR - RRSe ) ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.6468401486988847, "obj2": 0.1706159718053157}, {"determining": "( Max( Min( ( ACS - MDR ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( BR * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( RMSe / CS ) - ( DS + CS ) ) + ( ( ( ( RMSe / CS ) + MLU ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.26022304832713755, "obj2": 0.5380010804606317}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) / ( ( FirstVNF_CPU_Server + MRS ) - Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) ) )", "choosing": "Max( ( ( ( RMSe / CS ) + MLU ) * ( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7408647046208738}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + FirstVNF_RAM_Server ) * ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_Mem_Server - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + ( ( MUM * ( DS + DS ) ) + DS ) ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) * ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.39776951672862454, "obj2": 0.36133113008604756}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( FirstVNF_RAM_Server - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,ACS ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7379182156133829, "obj2": 0.11199766050779816}, {"determining": "( ( Min( ( ARS * FirstVNF_Mem_Server ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS * MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( RCSe - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - Min( DS ,MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3847583643122677, "obj2": 0.38464676236549095}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "Min( ( Max( Min( ( ( ( ( DDR + RRS ) / Min( FirstVNF_Mem ,RRS ) ) + ( ( FirstVNF_CPU_Server * MRS ) * ( DDR + Const ) ) ) + ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_Mem_Server,Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ,( ( Max( ( Const / CRS ),( ACS - PN ) ) - ( ( CRS * MRS ) + ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) * ( ( ( AMS - FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,AMS ) ) * ( ( ACS * CRS ) + Min( MDR ,PN ) ) ) ) ),( ( Min( Min( Min( CRS ,FirstVNF_RAM_Server ) ,( BR * ARS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),Min( MRS ,FirstVNF_RAM_Server ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem ) ) - Max( ( CRS * MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( Max( ARS,RRS ) + ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - Max( FirstVNF_RAM,AMS ) ) ) * ( Max( Min( FirstVNF_RAM ,ACS ),Max( FirstVNF_RAM,BR ) ) - ( ( ACS / MRS ) * Max( FirstVNF_Mem,AMS ) ) ) ) ) ) + Min( ( ( Min( ( ( DDR - FirstVNF_Mem_Server ) * ( MRS - ARS ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) * ( ( ( BR / FirstVNF_RAM_Server ) * Min( AMS ,MRS ) ) - ( Min( ACS ,DDR ) + ( MDR * CRS ) ) ) ) - ( ( ( ( MDR / MDR ) + Max( Const,AMS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,RRS ) ) ) + ( ( ( BR / BR ) / ( RRS * FirstVNF_RAM ) ) * ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_CPU_Server + RRS ) ) ) ) ) ,Max( Min( ( ( Max( CRS,BR ) * ( ARS / PN ) ) / ( ( FirstVNF_RAM + AMS ) / ( AMS * DDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + ( FirstVNF_CPU * PN ) ) ,( ( FirstVNF_Mem_Server + AMS ) / Min( ACS ,FirstVNF_Mem ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,RRS ) - Min( FirstVNF_RAM ,DDR ) ) - Min( ( FirstVNF_Mem - RRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) ) + Max( ( Min( AMS ,RRS ) + Min( FirstVNF_Mem ,ACS ) ),( ( RRS / RRS ) * Min( ACS ,CRS ) ) ) ) ) ) ) ,( Min( Max( Max( Min( Min( ( MDR + MDR ) ,Min( BR ,FirstVNF_Mem_Server ) ) ,Max( ( ARS / FirstVNF_Mem ),( Const - Const ) ) ),( Max( Min( MRS ,FirstVNF_RAM ),Min( MDR ,PN ) ) + Min( Min( CRS ,FirstVNF_CPU_Server ) ,( PN * BR ) ) ) ),( ( ( ( BR / ACS ) / Max( RRS,MRS ) ) / ( ( ARS / ARS ) - ( PN + PN ) ) ) + ( ( Min( ACS ,FirstVNF_CPU ) * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( Const - Const ) * ( FirstVNF_Mem + PN ) ) ) ) ) ,( Min( ( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ) - Max( ( FirstVNF_RAM - FirstVNF_CPU_Server ),( AMS + ACS ) ) ) ,Max( ( Min( DDR ,ARS ) / ( PN * MDR ) ),( Max( ACS,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU ,MRS ) ) ) ) / ( ( ( ( DDR - CRS ) * Max( PN,MDR ) ) - ( ( MDR / DDR ) * ( MRS + FirstVNF_RAM ) ) ) * Max( ( ( AMS * RRS ) - ( MDR / FirstVNF_Mem ) ),( Max( PN,DDR ) + Min( ACS ,AMS ) ) ) ) ) ) * ( ( ( Min( Max( ( FirstVNF_CPU_Server - MDR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,Min( ( FirstVNF_Mem * BR ) ,( CRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ACS ,MRS ) * Max( ACS,ACS ) ) - ( Max( MDR,FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,RRS ) ) ) ) - Max( ( ( ( MDR + ARS ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * Max( ( ARS - MRS ),Min( ARS ,FirstVNF_CPU ) ) ),( Max( Max( AMS,DDR ),( ACS / FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_Mem_Server + CRS ) ,( BR + ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server * CRS ) + ( FirstVNF_CPU_Server + MRS ) ) / Max( Min( AMS ,BR ),( ARS - FirstVNF_Mem ) ) ) + ( ( ( DDR - Const ) + ( RRS * FirstVNF_Mem ) ) - ( ( AMS + CRS ) - Max( RRS,FirstVNF_Mem_Server ) ) ) ) - Min( ( Min( ( RRS + FirstVNF_CPU ) ,Min( BR ,AMS ) ) - Max( ( FirstVNF_RAM - Const ),( PN + FirstVNF_CPU_Server ) ) ) ,Max( ( ( FirstVNF_Mem_Server * ACS ) / Max( ACS,FirstVNF_CPU ) ),( ( ARS * Const ) / Min( CRS ,CRS ) ) ) ) ) ) ) )", "choosing": "( ( DS + RRSe ) / Min( CS ,RCSe ) )", "obj1": 0.9572490706319703, "obj2": 0.03079323625395689}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( Max( ARS,ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( DS + ( DS + CS ) ) ) )", "obj1": 0.15055762081784388, "obj2": 0.672799784891193}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / Min( DS ,( ( DS * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.1970260223048327, "obj2": 0.6071516153952035}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) + ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5631970260223048, "obj2": 0.2573719447190572}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,ACS ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( DS - CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6635687732342007, "obj2": 0.1487175226765734}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( ( ACS - MDR ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( DS - CS ) ) ,MUR ) ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8717472118959108, "obj2": 0.05569601927613118}, {"determining": "( ( PN - RRS ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,ACS ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * AMS ) ) )", "choosing": "Max( Min( ( ( ( ( MUR / DS ) + ( CS * DS ) ) / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.6877323420074349, "obj2": 0.13024567875076992}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( ( Max( RRSe,CS ) * ( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8066914498141264, "obj2": 0.07548639103976934}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUM ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.37732342007434944, "obj2": 0.403710163254801}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( Max( ARS,ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + MDR ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( DS + ( DS + MUR ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6848408287114728}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.19330855018587362, "obj2": 0.6087821396130884}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( ( Min( ( Max( ( BR + ACS ),CRS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM / MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) / MUC ) ) - MUM ) ) * ( Min( ( MUR + ( ( RMSe - CS ) * RMSe ) ) ,MUC ) / RMSe ) )", "obj1": 0.3048327137546468, "obj2": 0.4848190133541084}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.775092936802974, "obj2": 0.08718636980859132}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_CPU_Server - RRS ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( DS - CS ) ) ,MUR ) ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MUC ) ) ) )", "obj1": 0.8029739776951673, "obj2": 0.07569048864842473}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06557319964159278}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.604089219330855, "obj2": 0.20458045034919872}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.9052044609665427, "obj2": 0.04403059394457041}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) - ( DS + CS ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6298816713472205}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06557319964159278}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) - Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,Min( ARS ,ARS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( Max( ( ( MLU + DS ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.7100371747211895, "obj2": 0.1176005826337148}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( ACS - MDR ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + DDR ) ) ) ) )", "choosing": "Max( Max( Max( RRSe,CS ),( DS - RRSe ) ),( CS * DS ) )", "obj1": 0.8940520446096655, "obj2": 0.05275313247118945}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( MUM * ( DS + DS ) ) + DS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( MUC + ( CS * RMSe ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5037174721189591, "obj2": 0.28296036635796334}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),ACS ) ) * ( ( ARS - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - DS ) + ( ( ( MUM * ( DS + DS ) ) + CS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.4795539033457249, "obj2": 0.2986034622048865}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - Min( FirstVNF_CPU_Server ,DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - DDR ) ,( BR + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( CS + ( ( ( RMSe / CS ) + MLU ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ),( ( ( ( ( ( ( MLU + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( MUC - CS ) * MUC ) ) ) / ( CS / MLU ) ) )", "obj1": 0.3345724907063197, "obj2": 0.44427880358710586}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,( ( FirstVNF_CPU_Server / ACS ) - ( PN - RRS ) ) ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( MUR / DS ) + ( CS * DS ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.18898551292836355}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),CRS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) + ( ( ( ( RMSe + DS ) / MUC ) / CS ) + MLU ) ) + ( DS + CS ) ) ) )", "obj1": 0.0724907063197026, "obj2": 0.7740095617366677}, {"determining": "( ( Min( ARS ,( AMS / ACS ) ) * ( ( Min( Min( ( Max( AMS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( FirstVNF_CPU_Server - DDR ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / RCSe ) - ( DS + MUC ) ) + ( RMSe / CS ) ) - ( MUR + ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.35687732342007433, "obj2": 0.4162430553151938}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( RRSe / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + ( MUR - RRSe ) ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6728624535315985, "obj2": 0.1439163707253561}], "34": [{"determining": "( Const / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( ( ( ARS * AMS ) - ( AMS - RRS ) ) ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( ( DS - CS ) * MUC ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( CS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( Max( ACS,FirstVNF_RAM_Server ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - ( ( ( ( RMSe / CS ) + MLU ) + DS ) / CS ) ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8289276199780494}, {"determining": "( ( Min( ( PN * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( ACS * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( RMSe * ( CS + ( DS + CS ) ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3394339098256049}, {"determining": "Min( ( Max( Min( ( ( ( ( DDR + RRS ) / Min( FirstVNF_Mem ,RRS ) ) + ( ( FirstVNF_CPU_Server * MRS ) * ( DDR + Const ) ) ) + ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_Mem_Server,Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ,( ( Max( ( Const / CRS ),( ACS - PN ) ) - ( ( CRS * MRS ) + ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) * ( ( ( AMS - FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,AMS ) ) * ( ( ACS * CRS ) + Min( MDR ,PN ) ) ) ) ),( ( Min( Min( Min( CRS ,FirstVNF_RAM_Server ) ,( BR * ARS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),Min( MRS ,FirstVNF_RAM_Server ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem ) ) - Max( ( CRS * MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( Max( ARS,RRS ) + ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - Max( FirstVNF_RAM,AMS ) ) ) * ( Max( Min( FirstVNF_RAM ,ACS ),Max( FirstVNF_RAM,BR ) ) - ( ( ACS / MRS ) * Max( FirstVNF_Mem,AMS ) ) ) ) ) ) + Min( ( ( Min( ( ( DDR - FirstVNF_Mem_Server ) * ( MRS - ARS ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) * ( ( ( BR / FirstVNF_RAM_Server ) * Min( AMS ,MRS ) ) - ( Min( ACS ,DDR ) + ( MDR * CRS ) ) ) ) - ( ( ( ( MDR / MDR ) + Max( Const,AMS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,RRS ) ) ) + ( ( ( BR / BR ) / ( RRS * FirstVNF_RAM ) ) * ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_CPU_Server + RRS ) ) ) ) ) ,Max( Min( ( ( Max( CRS,BR ) * ( ARS / PN ) ) / ( ( FirstVNF_RAM + AMS ) / ( AMS * DDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + ( FirstVNF_CPU * PN ) ) ,( ( FirstVNF_Mem_Server + AMS ) / Min( ACS ,FirstVNF_Mem ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,RRS ) - Min( FirstVNF_RAM ,DDR ) ) - Min( ( FirstVNF_Mem - RRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) ) + Max( ( Min( AMS ,RRS ) + Min( FirstVNF_Mem ,ACS ) ),( ( RRS / RRS ) * Min( ACS ,CRS ) ) ) ) ) ) ) ,( Min( Max( Max( Min( Min( ( MDR + MDR ) ,Min( BR ,FirstVNF_Mem_Server ) ) ,Max( ( ARS / FirstVNF_Mem ),( Const - Const ) ) ),( Max( Min( MRS ,FirstVNF_RAM ),Min( MDR ,PN ) ) + Min( Min( CRS ,FirstVNF_CPU_Server ) ,( PN * BR ) ) ) ),( ( ( ( BR / ACS ) / Max( RRS,MRS ) ) / ( ( ARS / ARS ) - ( PN + PN ) ) ) + ( ( Min( ACS ,FirstVNF_CPU ) * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( Const - Const ) * ( FirstVNF_Mem + PN ) ) ) ) ) ,( Min( ( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ) - Max( ( FirstVNF_RAM - FirstVNF_CPU_Server ),( AMS + ACS ) ) ) ,Max( ( Min( DDR ,ARS ) / ( PN * MDR ) ),( Max( ACS,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU ,MRS ) ) ) ) / ( ( ( ( DDR - CRS ) * Max( PN,MDR ) ) - ( ( MDR / DDR ) * ( MRS + FirstVNF_RAM ) ) ) * Max( ( ( AMS * RRS ) - ( MDR / FirstVNF_Mem ) ),( Max( PN,DDR ) + Min( ACS ,AMS ) ) ) ) ) ) * ( ( ( Min( Max( ( FirstVNF_CPU_Server - MDR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,Min( ( FirstVNF_Mem * BR ) ,( CRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ACS ,MRS ) * Max( ACS,ACS ) ) - ( Max( MDR,FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,RRS ) ) ) ) - Max( ( ( ( MDR + ARS ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * Max( ( ARS - MRS ),Min( ARS ,FirstVNF_CPU ) ) ),( Max( Max( AMS,DDR ),( ACS / FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_Mem_Server + CRS ) ,( BR + ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server * CRS ) + ( FirstVNF_CPU_Server + MRS ) ) / Max( Min( AMS ,BR ),( ARS - FirstVNF_Mem ) ) ) + ( ( ( DDR - Const ) + ( RRS * FirstVNF_Mem ) ) - ( ( AMS + CRS ) - Max( RRS,FirstVNF_Mem_Server ) ) ) ) - Min( ( Min( ( RRS + FirstVNF_CPU ) ,Min( BR ,AMS ) ) - Max( ( FirstVNF_RAM - Const ),( PN + FirstVNF_CPU_Server ) ) ) ,Max( ( ( FirstVNF_Mem_Server * ACS ) / Max( ACS,FirstVNF_CPU ) ),( ( ARS * Const ) / Min( CRS ,CRS ) ) ) ) ) ) ) )", "choosing": "( ( DS + RRSe ) / Min( CS ,RCSe ) )", "obj1": 0.9572490706319703, "obj2": 0.03079323625395689}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / CS ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5669144981412639, "obj2": 0.24218073050579042}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + Min( ( ACS - MDR ) ,( BR + ACS ) ) ) + Min( ARS ,( ( FirstVNF_CPU_Server / ACS ) - ( PN - RRS ) ) ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - ( ( RMSe / MUM ) - ( MLU - MUC ) ) ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( MUR / DS ) + ( CS * DS ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5966542750929368, "obj2": 0.20920152528104083}, {"determining": "( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.4721189591078067, "obj2": 0.30893965188309125}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( MUM * ( DS + DS ) ) + DS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( MUC + ( CS * RMSe ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5037174721189591, "obj2": 0.28296036635796334}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7360594795539034, "obj2": 0.10767997817869356}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( Min( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - DDR ),( BR + ACS ) ) ) ,( AMS - ACS ) ) ,( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( DS ,( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7181028724796085}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( Max( ARS,ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( DS + ( DS + CS ) ) ) )", "obj1": 0.1579925650557621, "obj2": 0.6599763882498041}, {"determining": "( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( ( ( RRSe / CS ) + MLU ) / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8680297397769516, "obj2": 0.054025668118060866}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,( ARS * FirstVNF_CPU ) ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - ( ( RMSe / CS ) + MLU ) ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.9888475836431226, "obj2": 0.006499201011438388}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( Min( Min( ( Min( ( ACS + MRS ) ,( ACS - MDR ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) ,( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( Min( RCSe ,MUM ) / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.2100371747211896, "obj2": 0.5957162945237724}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.5741325584760466}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - Min( FirstVNF_CPU_Server ,DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - DDR ) ,( BR + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( CS + ( ( ( RMSe / CS ) + MLU ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ),( ( ( ( ( ( ( MLU + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( MUC - CS ) * MUC ) ) ) / ( CS / MLU ) ) )", "obj1": 0.3345724907063197, "obj2": 0.44427880358710586}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,( ( FirstVNF_CPU_Server / ACS ) - ( PN - RRS ) ) ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( Max( ACS,MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( RCSe / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6468401486988847, "obj2": 0.1642671605961209}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( DS / ( DS * ( ( MUC * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + ( CS + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7443797436781392}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),ACS ) ) * ( ( ARS - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - DS ) + ( ( ( MUM * ( DS + DS ) ) + CS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.4795539033457249, "obj2": 0.2986034622048865}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5278810408921933, "obj2": 0.2762099209428964}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( RCSe - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.6338289962825279, "obj2": 0.17977311065569165}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) / ( Min( ( ACS + MRS ) ,Max( Max( ARS,ACS ),ARS ) ) - Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( DS * ( DS + ( DS + RMSe ) ) ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.09665427509293681, "obj2": 0.7408297823458407}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) * CRS ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( DS + ( DS + CS ) ) ) )", "obj1": 0.14869888475836432, "obj2": 0.6723922440122443}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( CS + ( ( ( RMSe / CS ) + MLU ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3420074349442379, "obj2": 0.4300935391114077}, {"determining": "( AMS / ( Max( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ),Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.120817843866171, "obj2": 0.7007707550601263}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.17472118959107807, "obj2": 0.6339947291981847}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( PN * FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + RRSe ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + Min( RMSe ,RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.2843866171003718, "obj2": 0.507229188302453}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) + ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5631970260223048, "obj2": 0.2573719447190572}, {"determining": "( ( Min( ( ARS * FirstVNF_Mem_Server ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS * MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( RCSe - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - Min( DS ,MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3847583643122677, "obj2": 0.38464676236549095}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( ( Max( RRSe,CS ) * ( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8066914498141264, "obj2": 0.07548639103976934}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUM ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.37732342007434944, "obj2": 0.403710163254801}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server * RRS ) ) ) ,ACS ) ) ) )", "choosing": "( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) / ( DS * ( ( DS * ( ( ( DS / MUC ) * ( ( DS / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8111722296054252}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06557319964159278}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem_Server ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( PN * FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS + DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + Min( RMSe ,RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.2732342007434944, "obj2": 0.5137319131619034}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( ACS - MDR ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + DDR ) ) ) ) )", "choosing": "Max( Max( Max( RRSe,CS ),( DS - RRSe ) ),( CS * DS ) )", "obj1": 0.8940520446096655, "obj2": 0.05275313247118945}, {"determining": "( ( Min( ( Max( ( BR + ACS ),CRS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM / MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) / MUC ) ) - MUM ) ) * ( Min( ( MUR + ( ( RMSe - CS ) * RMSe ) ) ,MUC ) / RMSe ) )", "obj1": 0.3048327137546468, "obj2": 0.4848190133541084}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( MUM * ( DS + DS ) ) + DS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( MUC + ( CS * RMSe ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.0921894241455793}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( ( DS - CS ) * MUC ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9200743494423792, "obj2": 0.03746555116876084}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.604089219330855, "obj2": 0.20458045034919872}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + Const ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( BR - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS + ( MLU * ( DS + RMSe ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.24907063197026022, "obj2": 0.541106159991039}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,ACS ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( DS - CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6635687732342007, "obj2": 0.1487175226765734}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.79182156133829, "obj2": 0.082987492340228}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( Max( ARS,ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + MDR ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( DS + ( DS + MUR ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6848408287114728}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6289420333885303}, {"determining": "( ( Min( ARS ,( AMS / ACS ) ) * ( ( Min( Min( ( Max( AMS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( FirstVNF_CPU_Server - DDR ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( PN - RRS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUC ) ) + ( RMSe / CS ) ) - ( MUR + ( CS + MLU ) ) ) / ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) ) )", "obj1": 0.26579925650557623, "obj2": 0.5314904182324958}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + FirstVNF_RAM_Server ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUC ) ) + ( RMSe / CS ) ) - ( MUR + ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.39219330855018586, "obj2": 0.3724576348069469}], "35": [{"determining": "( ( ( AMS - ( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( ( ( ARS * AMS ) - ( AMS - RRS ) ) ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( ( DS - CS ) * MUC ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( CS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( Max( ACS,FirstVNF_RAM_Server ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ( ACS + MRS ) * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - ( ( ( ( RMSe / CS ) + MLU ) + DS ) / CS ) ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( DS + ( DS + CS ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8438356671245044}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( DS / ( DS * ( ( MUC * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + ( CS + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7443797436781392}, {"determining": "Min( ( Max( Min( ( ( ( ( DDR + RRS ) / Min( FirstVNF_Mem ,RRS ) ) + ( ( FirstVNF_CPU_Server * MRS ) * ( DDR + Const ) ) ) + ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_Mem_Server,Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ,( ( Max( ( Const / CRS ),( ACS - PN ) ) - ( ( CRS * MRS ) + ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) * ( ( ( AMS - FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,AMS ) ) * ( ( ACS * CRS ) + Min( MDR ,PN ) ) ) ) ),( ( Min( Min( Min( CRS ,FirstVNF_RAM_Server ) ,( BR * ARS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),Min( MRS ,FirstVNF_RAM_Server ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem ) ) - Max( ( CRS * MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( Max( ARS,RRS ) + ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - Max( FirstVNF_RAM,AMS ) ) ) * ( Max( Min( FirstVNF_RAM ,ACS ),Max( FirstVNF_RAM,BR ) ) - ( ( ACS / MRS ) * Max( FirstVNF_Mem,AMS ) ) ) ) ) ) + Min( ( ( Min( ( ( DDR - FirstVNF_Mem_Server ) * ( MRS - ARS ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) * ( ( ( BR / FirstVNF_RAM_Server ) * Min( AMS ,MRS ) ) - ( Min( ACS ,DDR ) + ( MDR * CRS ) ) ) ) - ( ( ( ( MDR / MDR ) + Max( Const,AMS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,RRS ) ) ) + ( ( ( BR / BR ) / ( RRS * FirstVNF_RAM ) ) * ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_CPU_Server + RRS ) ) ) ) ) ,Max( Min( ( ( Max( CRS,BR ) * ( ARS / PN ) ) / ( ( FirstVNF_RAM + AMS ) / ( AMS * DDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + ( FirstVNF_CPU * PN ) ) ,( ( FirstVNF_Mem_Server + AMS ) / Min( ACS ,FirstVNF_Mem ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,RRS ) - Min( FirstVNF_RAM ,DDR ) ) - Min( ( FirstVNF_Mem - RRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) ) + Max( ( Min( AMS ,RRS ) + Min( FirstVNF_Mem ,ACS ) ),( ( RRS / RRS ) * Min( ACS ,CRS ) ) ) ) ) ) ) ,( Min( Max( Max( Min( Min( ( MDR + MDR ) ,Min( BR ,FirstVNF_Mem_Server ) ) ,Max( ( ARS / FirstVNF_Mem ),( Const - Const ) ) ),( Max( Min( MRS ,FirstVNF_RAM ),Min( MDR ,PN ) ) + Min( Min( CRS ,FirstVNF_CPU_Server ) ,( PN * BR ) ) ) ),( ( ( ( BR / ACS ) / Max( RRS,MRS ) ) / ( ( ARS / ARS ) - ( PN + PN ) ) ) + ( ( Min( ACS ,FirstVNF_CPU ) * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( Const - Const ) * ( FirstVNF_Mem + PN ) ) ) ) ) ,( Min( ( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ) - Max( ( FirstVNF_RAM - FirstVNF_CPU_Server ),( AMS + ACS ) ) ) ,Max( ( Min( DDR ,ARS ) / ( PN * MDR ) ),( Max( ACS,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU ,MRS ) ) ) ) / ( ( ( ( DDR - CRS ) * Max( PN,MDR ) ) - ( ( MDR / DDR ) * ( MRS + FirstVNF_RAM ) ) ) * Max( ( ( AMS * RRS ) - ( MDR / FirstVNF_Mem ) ),( Max( PN,DDR ) + Min( ACS ,AMS ) ) ) ) ) ) * ( ( ( Min( Max( ( FirstVNF_CPU_Server - MDR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,Min( ( FirstVNF_Mem * BR ) ,( CRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ACS ,MRS ) * Max( ACS,ACS ) ) - ( Max( MDR,FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,RRS ) ) ) ) - Max( ( ( ( MDR + ARS ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * Max( ( ARS - MRS ),Min( ARS ,FirstVNF_CPU ) ) ),( Max( Max( AMS,DDR ),( ACS / FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_Mem_Server + CRS ) ,( BR + ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server * CRS ) + ( FirstVNF_CPU_Server + MRS ) ) / Max( Min( AMS ,BR ),( ARS - FirstVNF_Mem ) ) ) + ( ( ( DDR - Const ) + ( RRS * FirstVNF_Mem ) ) - ( ( AMS + CRS ) - Max( RRS,FirstVNF_Mem_Server ) ) ) ) - Min( ( Min( ( RRS + FirstVNF_CPU ) ,Min( BR ,AMS ) ) - Max( ( FirstVNF_RAM - Const ),( PN + FirstVNF_CPU_Server ) ) ) ,Max( ( ( FirstVNF_Mem_Server * ACS ) / Max( ACS,FirstVNF_CPU ) ),( ( ARS * Const ) / Min( CRS ,CRS ) ) ) ) ) ) ) )", "choosing": "( ( DS + RRSe ) / Min( CS ,RCSe ) )", "obj1": 0.9572490706319703, "obj2": 0.03079323625395689}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6596680806943186}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( ( DS - CS ) * MUC ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.9200743494423792, "obj2": 0.03746555116876084}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ( Max( ( BR + ACS ),CRS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM / MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) / MUC ) ) - MUM ) ) * ( Min( ( MUR + ( ( RMSe - CS ) * RMSe ) ) ,MUC ) / RMSe ) )", "obj1": 0.3048327137546468, "obj2": 0.4848190133541084}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( CS + ( ( ( RMSe / CS ) + MLU ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3420074349442379, "obj2": 0.4300935391114077}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( ACS - MDR ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + DDR ) ) ) ) )", "choosing": "Max( Max( Max( RRSe,CS ),( DS - RRSe ) ),( CS * DS ) )", "obj1": 0.8940520446096655, "obj2": 0.05275313247118945}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( Min( Min( ( Min( ( ACS + MRS ) ,( ACS - MDR ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) ,( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.24028486952676642}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / DDR ) ) ,Max( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( MLU / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.17286245353159851, "obj2": 0.6328087356151113}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( Min( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - DDR ),( BR + ACS ) ) ) ,( AMS - ACS ) ) ,( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( DS ,( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7181028724796085}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( MUC * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + ( CS + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.41000186203079264}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,ACS ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( DS - CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - MUM ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / CS ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6635687732342007, "obj2": 0.1487175226765734}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + Const ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + Min( RMSe ,RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.2843866171003718, "obj2": 0.5065292543479699}, {"determining": "( AMS / ( Max( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ),Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.120817843866171, "obj2": 0.7007707550601263}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( Min( Min( ( Min( ( ACS + MRS ) ,( ACS - MDR ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) ,( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( Min( RCSe ,MUM ) / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.4628252788104089, "obj2": 0.32688217218432813}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ) ) - ( Min( ( ACS + MRS ) ,Max( Max( ARS,ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( DS + ( DS + ( ( ( RMSe / CS ) + MLU ) + DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.016709561952670163}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ,Max( ( Max( ACS,ACS ) - Min( FirstVNF_CPU_Server ,DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( ACS + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MUR ) ,( ( CS + ( ( ( RMSe / CS ) + MLU ) + Min( ( CS - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( MUC - CS ) * MUC ) ) ) / ( CS / MLU ) ) )", "obj1": 0.41821561338289964, "obj2": 0.3698380729721438}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + ACS ) - DDR ) ) ,Max( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,( AMS * ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / ( MUC + CS ) ) / ( ( RRSe / CS ) + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5609670915354324}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( ( Max( RRSe,CS ) * ( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8066914498141264, "obj2": 0.07548639103976934}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( Min( Min( ( Min( ( ACS + MRS ) ,( ACS - MDR ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) ,( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( Min( RCSe ,MUM ) / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.2100371747211896, "obj2": 0.5957162945237724}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06557319964159278}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) + ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5631970260223048, "obj2": 0.2573719447190572}, {"determining": "( ( Min( ( ARS * FirstVNF_Mem_Server ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS * MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( RCSe - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - Min( DS ,MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3847583643122677, "obj2": 0.38464676236549095}, {"determining": "( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( AMS + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( ( RMSe / CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( ( ( RRSe / CS ) + MLU ) / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7788104089219331, "obj2": 0.09114173265635273}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS / MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( ( MUM * ( DS + DS ) ) + MUR ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( MUC + ( CS * RMSe ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.516728624535316, "obj2": 0.27600073507338796}, {"determining": "( ( Min( ( PN * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( ACS * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) - ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "( DS / ( RMSe * ( CS + ( DS + CS ) ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3394339098256049}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / CS ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5669144981412639, "obj2": 0.24218073050579042}, {"determining": "( Const / ( Max( ACS,FirstVNF_RAM_Server ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "( DS / ( DS * ( DS + ( DS + CS ) ) ) )", "obj1": 0.137546468401487, "obj2": 0.6813114143635494}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,ACS ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( Min( RCSe ,MUM ) / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6877323420074349, "obj2": 0.13070047875863394}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - Min( FirstVNF_CPU_Server ,DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - DDR ) ,( BR + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( CS + ( ( ( RMSe / CS ) + MLU ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ),( ( ( ( ( ( ( MLU + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( MUC - CS ) * MUC ) ) ) / ( CS / MLU ) ) )", "obj1": 0.3345724907063197, "obj2": 0.44427880358710586}, {"determining": "( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( ACS + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( ( ( RRSe / CS ) + MLU ) / MUM ) - ( MUC + ( CS * RMSe ) ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8345724907063197, "obj2": 0.07064162372877009}, {"determining": "( ( Min( ARS ,( AMS / ACS ) ) * ( ( Min( Min( ( Max( AMS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( FirstVNF_CPU_Server - DDR ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / CRS ) ) / ( PN - RRS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUC ) ) + ( RMSe / CS ) ) - ( MUR + ( CS + MLU ) ) ) / ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) ) )", "obj1": 0.26579925650557623, "obj2": 0.5314904182324958}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( PN * FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + RRSe ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + Min( RMSe ,RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.3271375464684015, "obj2": 0.45658687963969063}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,( ( FirstVNF_CPU_Server / ACS ) - ( PN - RRS ) ) ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( ( DS + CS ) / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6338289962825279, "obj2": 0.17605262137920571}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + Min( ( ACS - MDR ) ,( BR + ACS ) ) ) + Min( ARS ,( ( FirstVNF_CPU_Server / ACS ) - ( PN - RRS ) ) ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),Min( MRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - ( ( RMSe / MUM ) - ( MLU - MUC ) ) ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( MUR / DS ) + ( CS * DS ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5966542750929368, "obj2": 0.20920152528104083}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ) * Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - Const ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( DS / ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( RMSe + CS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.13676594056340627}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * ( ( ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) - ( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( RCSe + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.19330855018587362, "obj2": 0.6087821396130884}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) + ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + FirstVNF_RAM_Server ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MUR ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + MUC ) ) + ( RMSe / CS ) ) - ( MUR + ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.39219330855018586, "obj2": 0.3724576348069469}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) - Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( MLU * ( DS + CS ) ) ) + ( DS + MUC ) ) ) )", "obj1": 0.24907063197026022, "obj2": 0.541106159991039}, {"determining": "( Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( ( ( RRSe / CS ) + MLU ) / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8680297397769516, "obj2": 0.054025668118060866}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ARS ) ) - ( Min( ( ACS + MRS ) ,Max( Max( ARS,ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + MDR ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( DS + ( DS + MUR ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6848408287114728}, {"determining": "( AMS / ( ( ( ( FirstVNF_Mem + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / MUR ) + ( RMSe / RRSe ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.6263940520446096, "obj2": 0.18432248992055636}, {"determining": "( ( Min( ( ACS + FirstVNF_CPU ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) / ( Min( ( ACS + MRS ) ,Max( Max( ARS,ACS ),ARS ) ) - Min( Min( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),ACS ) ) ,Min( AMS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( DS * ( DS + ( DS + RMSe ) ) ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.09851301115241635, "obj2": 0.739416006092041}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( RCSe - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - ( DS + MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.6171003717472119, "obj2": 0.1922799341838816}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU_Server ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( PN * FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( CS / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - DS ) + ( ( ( MUM * ( DS + DS ) ) + CS ) / RCSe ) ),CS ) / RMSe ) )", "obj1": 0.4275092936802974, "obj2": 0.3519665670581631}], "36": [{"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( ACS - MDR ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + DDR ) ) ) ) )", "choosing": "Max( Max( Max( RRSe,CS ),( DS - RRSe ) ),( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( Max( ACS,FirstVNF_RAM_Server ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ( ACS + MRS ) * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - ( ( ( ( RMSe / CS ) + MLU ) + DS ) / CS ) ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( DS + ( DS + CS ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8438356671245044}, {"determining": "( ( ( AMS - ( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU / RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const / ( Max( ACS,FirstVNF_RAM_Server ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ( ACS + MRS ) * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( Min( ( ( ( ( RMSe / CS ) - ( DS + MUM ) ) + ( ( ( ( RMSe / MUC ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) - ( DS + CS ) ) ) - ( ( ( ( RMSe / CS ) + MLU ) + DS ) / CS ) ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( DS + ( DS + CS ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8438356671245044}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ) * Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( ( PN * FirstVNF_RAM_Server ) + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( DS / ( DS * CS ) )", "obj1": 0.7509293680297398, "obj2": 0.0926400194306788}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( ACS + FirstVNF_Mem ) + FirstVNF_RAM_Server ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - RRS ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( RMSe / CS ) + MLU ) / CS ) - ( DS + MUC ) ) + ( RMSe / CS ) ) - ( MUR + ( CS + MLU ) ) ) / ( CS + MLU ) ) )", "obj1": 0.5018587360594795, "obj2": 0.28536755600103425}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6914498141263941, "obj2": 0.1267236521540036}, {"determining": "( DDR / Max( ARS,ARS ) )", "choosing": "Max( Min( Max( RRSe,DS ) ,( MUR - RRSe ) ),( ( ( CS + MLU ) / ( CS * RRSe ) ) - ( ( CS + ( ( RCSe + MUM ) + Min( ( ( MUR / MUR ) + ( RMSe / CS ) ) ,( CS + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.800624240991422}, {"determining": "( ( Min( ( ACS + MRS ) ,Max( Max( Min( ( ACS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( DS / ( DS * ( ( MUC * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + ( CS + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.07806691449814127, "obj2": 0.7443797436781392}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( Min( Min( ( Min( ( ACS + MRS ) ,( ACS - MDR ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) ,( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( Min( RCSe ,MUM ) / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.4628252788104089, "obj2": 0.32688217218432813}, {"determining": "( ( Min( ( Max( ( BR + ACS ),CRS ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( FirstVNF_RAM / MRS ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RMSe - CS ) / MUC ) ) - MUM ) ) * ( Min( ( MUR + ( ( RMSe - CS ) * RMSe ) ) ,MUC ) / RMSe ) )", "obj1": 0.3048327137546468, "obj2": 0.4848190133541084}, {"determining": "( ( Min( AMS ,( Min( AMS ,ACS ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ) ) - ( Min( ( ACS + MRS ) ,Max( Max( ARS,ACS ),ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( DS / ( DS * ( DS + ( DS + ( ( ( RMSe / CS ) + MLU ) + DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.016709561952670163}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( Min( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - DDR ),( BR + ACS ) ) ) ,( AMS - ACS ) ) ,( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( Min( DS ,( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7181028724796085}, {"determining": "( ( Min( ( ARS * FirstVNF_Mem_Server ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS * MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( RCSe - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - Min( DS ,MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3847583643122677, "obj2": 0.38464676236549095}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,( ( FirstVNF_CPU_Server / ACS ) - ( PN - RRS ) ) ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( ( DS + CS ) / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6338289962825279, "obj2": 0.17605262137920571}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / DDR ) ) ,Max( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( MLU / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.17286245353159851, "obj2": 0.6328087356151113}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6596680806943186}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7695167286245354, "obj2": 0.09024903927289975}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "( DS / ( DS * ( Min( DS ,( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.1583747017695968}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * FirstVNF_Mem ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.09107806691449814, "obj2": 0.7343229337055793}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) - Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( MLU * ( DS + CS ) ) ) + ( DS + MUC ) ) ) )", "obj1": 0.24907063197026022, "obj2": 0.541106159991039}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - ( ( ARS * AMS ) - ( AMS - RRS ) ) ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( PN * FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( MUM / CS ) - ( DS + MUM ) ) ,( ( MUR + ( ( RCSe / CS ) * MUC ) ) + MUC ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - DS ) + ( ( ( MUM * ( DS + DS ) ) + CS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.17100371747211895, "obj2": 0.6453579590489918}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,Const ) ) * ( ( Min( ( Min( ( ACS + MRS ) ,Max( CRS,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * Min( Min( ARS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * CRS ) ) / Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( Min( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) ,( DS + MUM ) ) + ( RMSe * MUR ) ) - ( ( ( MUR / MUR ) - ( RMSe / CS ) ) + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.3141263940520446, "obj2": 0.4643627655788589}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,ACS ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) / ( ( FirstVNF_CPU_Server + ARS ) - Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - ( ARS * FirstVNF_RAM ) ) ,( BR + ACS ) ) ) ,Min( RRS ,ACS ) ) ) )", "choosing": "Max( ( Max( RRSe,CS ) * ( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.7973977695167286, "obj2": 0.07833986875714036}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( ( FirstVNF_CPU_Server - DDR ) - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( MLU * ( DS + ( ( RMSe - CS ) * RMSe ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.43308550185873607, "obj2": 0.334058336119895}, {"determining": "( ( Min( ( Max( ( BR + ACS ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ,Max( FirstVNF_Mem,Const ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( MUC * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + ( CS + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.41000186203079264}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - Min( FirstVNF_CPU_Server ,DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( CS + ( ( ( RMSe / CS ) + MLU ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( MUC - CS ) * MUC ) ) ) / ( CS / MLU ) ) )", "obj1": 0.41821561338289964, "obj2": 0.36745785296259215}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) + ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5631970260223048, "obj2": 0.2573719447190572}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) / ACS ) / ( ( ( ACS + MRS ) + Max( FirstVNF_Mem,ARS ) ) * Min( Min( Min( ( Min( ( ACS + MRS ) ,( ACS - MDR ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,( AMS - ACS ) ) ,( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( CS * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.24028486952676642}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( ( BR + ACS ) ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( ( DS - CS ) - ( DS + CS ) ) + ( ( MUR + DS ) / ( CS * DS ) ) ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.34386617100371747, "obj2": 0.42815473944612475}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MDR ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + Min( RMSe ,RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.275092936802974, "obj2": 0.5208461424530775}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( ( Max( RRSe,CS ) * ( MUR - RRSe ) ),( ( ( MLU - CS ) / ( MUC * DS ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8066914498141264, "obj2": 0.07548639103976934}, {"determining": "( ( Min( ARS ,( AMS / ACS ) ) * ( ( Min( Min( ( Max( AMS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( FirstVNF_CPU_Server - DDR ) ) ) ,( FirstVNF_CPU_Server * AMS ) ) * Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + ACS ) - DDR ) ) ,Max( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ) / CRS ) ) / ( PN - RRS ) )", "choosing": "Max( Min( ( ( RMSe / CS ) / MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / MLU ) - ( DS + MUC ) ) + ( RMSe / CS ) ) - ( MUR + ( CS + MLU ) ) ) / ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) ) )", "obj1": 0.05947955390334572, "obj2": 0.8167128290241148}, {"determining": "Min( ( Max( Min( ( ( ( ( DDR + RRS ) / Min( FirstVNF_Mem ,RRS ) ) + ( ( FirstVNF_CPU_Server * MRS ) * ( DDR + Const ) ) ) + ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_Mem_Server,Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ,( ( Max( ( Const / CRS ),( ACS - PN ) ) - ( ( CRS * MRS ) + ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) * ( ( ( AMS - FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,AMS ) ) * ( ( ACS * CRS ) + Min( MDR ,PN ) ) ) ) ),( ( Min( Min( Min( CRS ,FirstVNF_RAM_Server ) ,( BR * ARS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),Min( MRS ,FirstVNF_RAM_Server ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem ) ) - Max( ( CRS * MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( Max( ARS,RRS ) + ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - Max( FirstVNF_RAM,AMS ) ) ) * ( Max( Min( FirstVNF_RAM ,ACS ),Max( FirstVNF_RAM,BR ) ) - ( ( ACS / MRS ) * Max( FirstVNF_Mem,AMS ) ) ) ) ) ) + Min( ( ( Min( ( ( DDR - FirstVNF_Mem_Server ) * ( MRS - ARS ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) * ( ( ( BR / FirstVNF_RAM_Server ) * Min( AMS ,MRS ) ) - ( Min( ACS ,DDR ) + ( MDR * CRS ) ) ) ) - ( ( ( ( MDR / MDR ) + Max( Const,AMS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,RRS ) ) ) + ( ( ( BR / BR ) / ( RRS * FirstVNF_RAM ) ) * ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_CPU_Server + RRS ) ) ) ) ) ,Max( Min( ( ( Max( CRS,BR ) * ( ARS / PN ) ) / ( ( FirstVNF_RAM + AMS ) / ( AMS * DDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + ( FirstVNF_CPU * PN ) ) ,( ( FirstVNF_Mem_Server + AMS ) / Min( ACS ,FirstVNF_Mem ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,RRS ) - Min( FirstVNF_RAM ,DDR ) ) - Min( ( FirstVNF_Mem - RRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) ) + Max( ( Min( AMS ,RRS ) + Min( FirstVNF_Mem ,ACS ) ),( ( RRS / RRS ) * Min( ACS ,CRS ) ) ) ) ) ) ) ,( Min( Max( Max( Min( Min( ( MDR + MDR ) ,Min( BR ,FirstVNF_Mem_Server ) ) ,Max( ( ARS / FirstVNF_Mem ),( Const - Const ) ) ),( Max( Min( MRS ,FirstVNF_RAM ),Min( MDR ,PN ) ) + Min( Min( CRS ,FirstVNF_CPU_Server ) ,( PN * BR ) ) ) ),( ( ( ( BR / ACS ) / Max( RRS,MRS ) ) / ( ( ARS / ARS ) - ( PN + PN ) ) ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ) - Max( ( FirstVNF_RAM - FirstVNF_CPU_Server ),( AMS + ACS ) ) ) ,Max( ( Min( DDR ,ARS ) / ( PN * MDR ) ),( Max( ACS,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU ,MRS ) ) ) ) / ( ( ( ( DDR - CRS ) * Max( PN,MDR ) ) - ( ( MDR / DDR ) * ( MRS + FirstVNF_RAM ) ) ) * Max( ( ( AMS * RRS ) - ( MDR / FirstVNF_Mem ) ),( Max( PN,DDR ) + Min( ACS ,AMS ) ) ) ) ) ) * ( ( ( Min( Max( ( FirstVNF_CPU_Server - MDR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,Min( ( FirstVNF_Mem * BR ) ,( CRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ACS ,MRS ) * Max( ACS,ACS ) ) - ( Max( MDR,FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,RRS ) ) ) ) - Max( ( ( ( MDR + ARS ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * Max( ( ARS - MRS ),Min( ARS ,FirstVNF_CPU ) ) ),( Max( Max( AMS,DDR ),( ACS / FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_Mem_Server + CRS ) ,( BR + ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server * CRS ) + ( FirstVNF_CPU_Server + MRS ) ) / Max( Min( AMS ,BR ),( ARS - FirstVNF_Mem ) ) ) + ( ( ( DDR - Const ) + ( RRS * FirstVNF_Mem ) ) - ( ( AMS + CRS ) - Max( RRS,FirstVNF_Mem_Server ) ) ) ) - Min( ( Min( ( RRS + FirstVNF_CPU ) ,Min( BR ,AMS ) ) - Max( ( FirstVNF_RAM - Const ),( PN + FirstVNF_CPU_Server ) ) ) ,Max( ( ( FirstVNF_Mem_Server * ACS ) / Max( ACS,FirstVNF_CPU ) ),( ( ARS * Const ) / Min( CRS ,CRS ) ) ) ) ) ) ) )", "choosing": "( ( DS + CS ) / Min( CS ,RCSe ) )", "obj1": 0.9609665427509294, "obj2": 0.029797597657787687}, {"determining": "Min( ( Max( Min( ( ( ( ( DDR + RRS ) / Min( FirstVNF_Mem ,RRS ) ) + ( ( FirstVNF_CPU_Server * MRS ) * ( DDR + Const ) ) ) + ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_Mem_Server,Const ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) ,( ( Max( ( Const / CRS ),( ACS - PN ) ) - ( ( CRS * MRS ) + ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) * ( ( ( AMS - FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,AMS ) ) * ( ( ACS * CRS ) + Min( MDR ,PN ) ) ) ) ),( ( Min( Min( Min( CRS ,FirstVNF_RAM_Server ) ,( BR * ARS ) ) ,Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),Min( MRS ,FirstVNF_RAM_Server ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) / ( ARS - FirstVNF_Mem ) ) - Max( ( CRS * MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( Max( ARS,RRS ) + ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - Max( FirstVNF_RAM,AMS ) ) ) * ( Max( Min( FirstVNF_RAM ,ACS ),Max( FirstVNF_RAM,BR ) ) - ( ( ACS / MRS ) * Max( FirstVNF_Mem,AMS ) ) ) ) ) ) + Min( ( ( Min( ( ( DDR - FirstVNF_Mem_Server ) * ( MRS - ARS ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) * ( ( ( BR / FirstVNF_RAM_Server ) * Min( AMS ,MRS ) ) - ( Min( ACS ,DDR ) + ( MDR * CRS ) ) ) ) - ( ( ( ( MDR / MDR ) + Max( Const,AMS ) ) + ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,RRS ) ) ) + ( ( ( BR / BR ) / ( RRS * FirstVNF_RAM ) ) * ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_CPU_Server + RRS ) ) ) ) ) ,Max( Min( ( ( Max( CRS,BR ) * ( ARS / PN ) ) / ( ( FirstVNF_RAM + AMS ) / ( AMS * DDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + ( FirstVNF_CPU * PN ) ) ,( ( FirstVNF_Mem_Server + AMS ) / Min( ACS ,FirstVNF_Mem ) ) ) ),( ( ( Max( FirstVNF_CPU_Server,RRS ) - Min( FirstVNF_RAM ,DDR ) ) - Min( ( FirstVNF_Mem - RRS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) ) + Max( ( Min( AMS ,RRS ) + Min( FirstVNF_Mem ,ACS ) ),( ( RRS / RRS ) * Min( ACS ,CRS ) ) ) ) ) ) ) ,( Min( Max( Max( Min( Min( ( MDR + MDR ) ,Min( BR ,FirstVNF_Mem_Server ) ) ,Max( ( ARS / FirstVNF_Mem ),( Const - Const ) ) ),( Max( Min( MRS ,FirstVNF_RAM ),Min( MDR ,PN ) ) + Min( Min( CRS ,FirstVNF_CPU_Server ) ,( PN * BR ) ) ) ),( ( ( ( BR / ACS ) / Max( RRS,MRS ) ) / ( ( ARS / ARS ) - ( PN + PN ) ) ) + ( ( Min( ACS ,FirstVNF_CPU ) * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( ( Const - Const ) * ( FirstVNF_Mem + PN ) ) ) ) ) ,( Min( ( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ) - Max( ( FirstVNF_RAM - FirstVNF_CPU_Server ),( AMS + ACS ) ) ) ,Max( ( Min( DDR ,ARS ) / ( PN * MDR ) ),( Max( ACS,FirstVNF_CPU_Server ) / Min( FirstVNF_CPU ,MRS ) ) ) ) / ( ( ( ( DDR - CRS ) * Max( PN,MDR ) ) - ( ( MDR / DDR ) * ( MRS + FirstVNF_RAM ) ) ) * Max( ( ( AMS * RRS ) - ( MDR / FirstVNF_Mem ) ),( Max( PN,DDR ) + Min( ACS ,AMS ) ) ) ) ) ) * ( ( ( Min( Max( ( FirstVNF_CPU_Server - MDR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,Min( ( FirstVNF_Mem * BR ) ,( CRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ACS ,MRS ) * Max( ACS,ACS ) ) - ( Max( MDR,FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,RRS ) ) ) ) - Max( ( ( ( MDR + ARS ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) * Max( ( ARS - MRS ),Min( ARS ,FirstVNF_CPU ) ) ),( Max( Max( AMS,DDR ),( ACS / FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_Mem_Server + CRS ) ,( BR + ARS ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server * CRS ) + ( FirstVNF_CPU_Server + MRS ) ) / Max( Min( AMS ,BR ),( ARS - FirstVNF_Mem ) ) ) + ( ( ( DDR - Const ) + ( RRS * FirstVNF_Mem ) ) - ( ( AMS + CRS ) - Max( RRS,FirstVNF_Mem_Server ) ) ) ) - Min( ( Min( ( RRS + FirstVNF_CPU ) ,Min( BR ,AMS ) ) - Max( ( FirstVNF_RAM - Const ),( PN + FirstVNF_CPU_Server ) ) ) ,Max( ( ( FirstVNF_Mem_Server * ACS ) / Max( ACS,FirstVNF_CPU ) ),( ( ARS * Const ) / Min( CRS ,CRS ) ) ) ) ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.035680956467440815}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - Min( FirstVNF_CPU_Server ,DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - DDR ) ,( BR + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( CS + ( ( ( RMSe / CS ) + MLU ) + Min( ( ( MUR / MUR ) - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ),( ( ( ( ( ( ( MLU + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( MUC - CS ) * MUC ) ) ) / ( CS / MLU ) ) )", "obj1": 0.3345724907063197, "obj2": 0.44427880358710586}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - ( FirstVNF_CPU_Server - DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / MUM ) * ( ( RRSe / CS ) + MLU ) ) + ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.19330855018587362, "obj2": 0.6087821396130884}, {"determining": "( ( ( ( Min( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) - MDR ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,CRS ) ) * Min( ( FirstVNF_Mem_Server / AMS ) ,( FirstVNF_CPU_Server - RRS ) ) ) / ACS ) * Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) ) ) - ACS ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( RCSe - RCSe ) ),( ( ( ( Max( ( ( MLU + MLU ) / MUR ),CS ) - Min( DS ,MUM ) ) + ( RMSe / CS ) ) - ( MUR + ( ( DS - CS ) * MUC ) ) ) / ( CS + MLU ) ) )", "obj1": 0.9163568773234201, "obj2": 0.040090880264565795}, {"determining": "( ( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS + MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( PN * FirstVNF_RAM ) / Min( FirstVNF_CPU_Server ,RRS ) ) ,ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + RRSe ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + Min( RMSe ,RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.3271375464684015, "obj2": 0.45658687963969063}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / CS ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5947955390334573, "obj2": 0.2228598841922061}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( MLU * ( DS + CS ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.22304832713754646, "obj2": 0.5814043143803255}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + ( ACS - MDR ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Max( ( ACS - MDR ),( BR + DDR ) ) ) ) )", "choosing": "Max( Max( Max( RRSe,CS ),( DS - RRSe ) ),( CS * DS ) )", "obj1": 0.8940520446096655, "obj2": 0.05275313247118945}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / MUR ) + ( RMSe / RRSe ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.604089219330855, "obj2": 0.20473163615501075}, {"determining": "( AMS / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ACS - ( AMS - BR ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) )", "choosing": "Max( Min( DS ,( RCSe - RRSe ) ),( ( ( CS + MLU ) / ( CS * DS ) ) - ( ( CS + ( ( ( MUR + MUC ) / ( MUR / DS ) ) + Min( ( ( MUR / CS ) + ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.5669144981412639, "obj2": 0.24218073050579042}, {"determining": "( ( Max( AMS,( Min( FirstVNF_Mem ,ARS ) * ARS ) ) - ACS ) - Min( FirstVNF_RAM ,RRS ) )", "choosing": "( ( MLU + RMSe ) - ( MUM / Max( DS,CS ) ) )", "obj1": 0.5427509293680297, "obj2": 0.26566781434435705}, {"determining": "( Min( ( ARS * FirstVNF_CPU ) ,( ACS + MRS ) ) / ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,ARS ) ) * ( ( ARS * AMS ) - ( AMS - RRS ) ) ) + Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) * ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - MDR ) ,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( Max( RRSe,CS ) ,( MUR - RRSe ) ),( ( ( MLU - CS ) / ( ( ( ( ( RRSe / CS ) + MLU ) / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + Min( ( ( MUR / DS ) + ( CS * DS ) ) ,MUR ) ) ) ) - ( ( ( ( RMSe / MUM ) - ( MLU - MLU ) ) + ( Min( RCSe ,MUM ) + ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) ) ) * ( CS * MUM ) ) ) )", "obj1": 0.8680297397769516, "obj2": 0.054025668118060866}, {"determining": "( AMS / ( Max( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( ARS ,( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) ) * ( ( ARS * AMS ) - ( AMS - BR ) ) ),Min( ( ( PN * FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Min( ( ACS - MDR ) ,( BR + ACS ) ) ) ) ,( ( ACS - PN ) / ( AMS * FirstVNF_CPU_Server ) ) ) ) * Max( ( ( FirstVNF_Mem + ( ACS + MRS ) ) - PN ),( MRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS / ( DS * ( ( DS * ( ( ( DS / ( DS + CS ) ) / ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + MLU ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.120817843866171, "obj2": 0.7007707550601263}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( Max( ACS,ACS ) - Min( FirstVNF_CPU_Server ,DDR ) ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ( ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( ACS + ACS ) ) ) + Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( ( CS + ( ( ( RMSe / CS ) + MLU ) + Min( ( CS - ( RMSe / CS ) ) ,MUM ) ) ) * ( CS * MUM ) ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( MUM + MUM ) ) + ( ( ( DS / MUM ) / CS ) + MLU ) ) - ( MUR + ( ( MUC - CS ) * MUC ) ) ) / ( CS / MLU ) ) )", "obj1": 0.45353159851301117, "obj2": 0.328163499858236}, {"determining": "( ( Min( ( ARS * FirstVNF_Mem_Server ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) / ( Min( ( ACS * MRS ) ,Min( FirstVNF_Mem ,ARS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Min( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) + Min( PN ,CRS ) ) * ( ( FirstVNF_CPU_Server / AMS ) - ( PN - RRS ) ) ) / ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_CPU_Server - ( ACS - MDR ) ) ) ) ,ACS ) ) ) )", "choosing": "( Min( ( ( RRSe / CS ) - ( ( DS - CS ) * MUC ) ) ,( ( MUR + ( ( DS - CS ) * MUC ) ) + MLU ) ) * ( Max( ( ( ( ( RMSe / CS ) + MLU ) - ( ( RRSe / CS ) - ( DS + MUM ) ) ) + ( ( ( MUM * ( DS + DS ) ) + DS ) / CS ) ),CS ) / RMSe ) )", "obj1": 0.5390334572490706, "obj2": 0.27083856592187794}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( Min( Max( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ),Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "( DS / ( DS * ( ( MUC * ( ( ( DS / ( DS + CS ) ) * ( ( RRSe / CS ) + MLU ) ) + ( ( DS / CS ) + ( CS + MLU ) ) ) ) + ( DS + CS ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.41000186203079264}, {"determining": "( Max( Min( ( ARS * FirstVNF_CPU ) ,Min( AMS ,ACS ) ),( Min( Min( ( ACS - ( FirstVNF_CPU_Server - DDR ) ) ,Max( ( ACS - PN ),( AMS * FirstVNF_CPU_Server ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) / ( Min( ( ACS + Const ) ,( Min( ( ACS + MRS ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ) * Min( ( Min( ( Min( ( FirstVNF_Mem + FirstVNF_Mem ) ,Max( FirstVNF_Mem,ARS ) ) * Min( ( ACS - DDR ) ,( BR + ACS ) ) ) ,Min( AMS ,ACS ) ) * ( Min( ARS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ,( BR + ACS ) ) ) )", "choosing": "Max( Min( ( ( RMSe / CS ) + MLU ) ,( MUR - RCSe ) ),( ( ( ( ( ( ( CS + MLU ) / ( CS * DS ) ) / CS ) - ( DS + ( ( MUR + DS ) / MUC ) ) ) + Min( RMSe ,RMSe ) ) - ( MUR + DS ) ) / ( CS + MLU ) ) )", "obj1": 0.2843866171003718, "obj2": 0.5065292543479699}]}