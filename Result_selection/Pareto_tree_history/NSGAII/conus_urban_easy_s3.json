{"1": [{"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) )", "choosing": "( ( DS / RCSe ) * ( RCSe - MLU ) )", "obj1": 0.16159695817490494, "obj2": 0.7287825235805406}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( FirstVNF_Mem,MDR ) )", "choosing": "Min( ( MUM + RCSe ) ,( MLU / MUR ) )", "obj1": 0.1958174904942966, "obj2": 0.6830552197405497}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( AMS ,MRS ),( CRS * RRS ) )", "choosing": "( ( MLU / RMSe ) / ( MLU / MUC ) )", "obj1": 0.1596958174904943, "obj2": 0.7327707466870389}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + ( Max( AMS,FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Min( RRSe ,CS ) - ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( BR * MRS ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( RRSe - CS ) / ( MUM / MUR ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "Max( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( PN,BR ) ),( ( DDR * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7832246521453441}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * ( DDR - ( FirstVNF_Mem_Server + Const ) ) ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( Min( ( MLU + MUC ) ,CS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ACS * RRS ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( ( ( RCSe - RMSe ) + MUM ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( RRS * RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( MLU * RMSe ) / MUR ) + MLU ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( Min( BR ,( FirstVNF_CPU_Server - AMS ) ) ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( ( ( ( ( Min( DS ,MUR ) - MUM ) / MLU ) / ( RRSe - ( MLU * ( MUC - MUM ) ) ) ) - ( ( MLU / ( MUR - MLU ) ) / MUR ) ) * ( ( RMSe - DS ) - RMSe ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( CRS * ACS ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,( MUC / RMSe ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN + MRS ),MDR ) + ( PN - MDR ) )", "choosing": "( ( ( MUC * DS ) + ( MUR - RCSe ) ) - ( ( RCSe * MUR ) * ( RMSe * MLU ) ) )", "obj1": 0.18250950570342206, "obj2": 0.7252801189975931}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * Min( ( ( FirstVNF_RAM - Const ) * FirstVNF_CPU ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( MUR + Min( ( MUC * CS ) ,( Min( ( Min( RRSe ,MUR ) - RRSe ) ,MUR ) / DS ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( RRS * RRS ) * FirstVNF_RAM ) )", "choosing": "( ( ( MUR * DS ) * Min( MUM ,RRSe ) ) - ( ( MUM * MUR ) / ( MUR + RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.4949961936433361}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * BR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.643762953587628}, {"determining": "( Max( CRS,FirstVNF_Mem ) + ( RRS + FirstVNF_CPU ) )", "choosing": "( ( ( ( DS + MLU ) + ( MUM + MUR ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( ( ( RCSe * RCSe ) - ( RMSe / DS ) ) - ( Max( CS,MUR ) - Max( MUC,MUC ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3822436561855518}, {"determining": "( Max( BR,( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU_Server ) ) - ( ( AMS * RRS ) / ( ARS + Const ) ) )", "choosing": "( Min( CS ,( RMSe - MUM ) ) * ( ( ( MUC + MLU ) / MUR ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * ACS ) / ( ACS - FirstVNF_CPU ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + ( RCSe * MUR ) ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( FirstVNF_CPU - BR ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Min( ( MUR - RRSe ) ,RCSe ) - ( ( RCSe + MUC ) * RRSe ) ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,( DS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ACS ,ARS ) ) )", "choosing": "Max( Min( Max( CS,Min( RMSe ,( MUM - MUC ) ) ) ,Max( RCSe,Max( RRSe,CS ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.9847908745247148, "obj2": 0.009971683969873224}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Min( ( DDR + FirstVNF_RAM_Server ) ,DDR ) * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * ( Min( RRSe ,RMSe ) * RMSe ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Max( Min( FirstVNF_CPU ,PN ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),RMSe ) ,( Min( Min( ( MUM + ( MUR / Max( RCSe,( RCSe / CS ) ) ) ) ,MLU ) ,( ( MUM - MUM ) / MUR ) ) + MUC ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server + CRS ) - ( Min( BR ,Const ) - DDR ) ) )", "choosing": "( ( ( ( DS / RRSe ) - RCSe ) + MLU ) + Min( Max( ( MUR * MUR ),MUR ) ,MUM ) )", "obj1": 0.7661596958174905, "obj2": 0.19435163513207335}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}], "2": [{"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + ( Max( AMS,FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Min( RRSe ,CS ) - ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( BR * MRS ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( RRSe - CS ) / ( MUM / MUR ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * ( DDR - ( FirstVNF_Mem_Server + Const ) ) ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( Min( ( MLU + MUC ) ,CS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ACS * RRS ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( ( ( RCSe - RMSe ) + MUM ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( RRS * RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( MLU * RMSe ) / MUR ) + MLU ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( Min( BR ,( FirstVNF_CPU_Server - AMS ) ) ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( ( ( ( ( Min( DS ,MUR ) - MUM ) / MLU ) / ( RRSe - ( MLU * ( MUC - MUM ) ) ) ) - ( ( MLU / ( MUR - MLU ) ) / MUR ) ) * ( ( RMSe - DS ) - RMSe ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( CRS * ACS ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,( MUC / RMSe ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * Min( ( ( FirstVNF_RAM - Const ) * FirstVNF_CPU ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( MUR + Min( ( MUC * CS ) ,( Min( ( Min( RRSe ,MUR ) - RRSe ) ,MUR ) / DS ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU_Server ) ) - ( ( AMS * RRS ) / ( ARS + Const ) ) )", "choosing": "( Min( CS ,( RMSe - MUM ) ) * ( ( ( MUC + MLU ) / MUR ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * ACS ) / ( ACS - FirstVNF_CPU ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + ( RCSe * MUR ) ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,( DS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ACS ,ARS ) ) )", "choosing": "Max( Min( Max( CS,Min( RMSe ,( MUM - MUC ) ) ) ,Max( RCSe,Max( RRSe,CS ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.9847908745247148, "obj2": 0.009971683969873224}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Min( ( DDR + FirstVNF_RAM_Server ) ,DDR ) * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * ( Min( RRSe ,RMSe ) * RMSe ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Max( Min( FirstVNF_CPU ,PN ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),RMSe ) ,( Min( Min( ( MUM + ( MUR / Max( RCSe,( RCSe / CS ) ) ) ) ,MLU ) ,( ( MUM - MUM ) / MUR ) ) + MUC ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}, {"determining": "( Max( PN,( CRS - ( ( CRS / FirstVNF_CPU_Server ) + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "Min( ( DDR + PN ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + RRSe ) - MUR ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,CRS ) * ( ARS * FirstVNF_CPU ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.07984790874524715, "obj2": 0.712081516514343}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Min( ACS ,CRS ) )", "choosing": "( Min( RRSe ,CS ) - ( DS + ( ( ( DS / MUR ) * CS ) + ( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( Min( FirstVNF_Mem_Server ,ACS ) + ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / Max( CS,MUM ) ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,DDR ) - Max( ( MRS + FirstVNF_RAM_Server ),Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "Max( ( Max( RCSe,Min( RRSe ,Max( CS,DS ) ) ) + ( ( MUR * Min( Max( ( RCSe / Max( RRSe,MUC ) ),MUM ) ,( RRSe * MUC ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / CS ) ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.17110266159695817, "obj2": 0.5760148240094232}, {"determining": "( ( Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) / RCSe ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5099212585454924}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + ( Const / FirstVNF_CPU_Server ) ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( ( PN - DDR ) / MRS ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + ( MUR - CS ) ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9904942965779467, "obj2": 0.003909163208719459}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + ( ACS * RRS ) ),ARS ) )", "choosing": "Max( ( Max( RCSe,Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( Max( FirstVNF_Mem,( BR / MDR ) ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( CS + ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / Max( DDR,( Max( ( ACS / FirstVNF_Mem_Server ),DDR ) / Min( RRS ,( Min( ARS ,FirstVNF_Mem_Server ) - ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Min( ( Min( Min( MUR ,RCSe ) ,( CS + DS ) ) + Max( ( MLU * Min( ( ( Min( MUC ,RRSe ) + RRSe ) + MUM ) ,RCSe ) ),( RCSe - RRSe ) ) ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,Const ) - DDR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * ( MUR * MUR ) ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,( RRS + CRS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - Max( PN,AMS ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( ( Min( ( RMSe - Min( RRSe ,RCSe ) ) ,( MUC * ( MUM + MUC ) ) ) + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ) ) ,( RMSe - ( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( Max( MRS,( DDR + RRS ) ) / ACS ) ) ) ,Max( FirstVNF_Mem,( BR / MDR ) ) )", "choosing": "( Max( Max( ( RMSe - ( Min( ( DS / CS ) ,MUR ) - MLU ) ),( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,( ( ( MUC - RCSe ) - ( RRSe / MUM ) ) / Max( Max( RMSe,RCSe ),Max( RCSe,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( Max( DDR,ACS ),( Const * BR ) ) )", "choosing": "Min( ( ( ( MUM + MLU ) * CS ) * Max( ( ( Max( MLU,MUM ) - MLU ) * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) )", "choosing": "( ( MLU + MUC ) / Max( CS,DS ) )", "obj1": 0.35361216730038025, "obj2": 0.44635192233106463}, {"determining": "( ( BR / FirstVNF_Mem ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( RCSe ,CS ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / CRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * RRS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),MLU ) + Max( RCSe,MUR ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.48098859315589354, "obj2": 0.35965274090641297}, {"determining": "( DDR - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( MUR / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( Max( Max( ACS,Max( AMS,PN ) ),Max( FirstVNF_RAM_Server,MDR ) ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( RRS + FirstVNF_RAM ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( Max( MUR,RMSe ) ,RMSe )", "obj1": 0.9543726235741445, "obj2": 0.0204192075179463}, {"determining": "( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + MRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( MUM,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Min( ( PN / ARS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Min( MUC ,CS ) + MUM ) )", "obj1": 0.8973384030418251, "obj2": 0.03524012554015723}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) )", "obj1": 0.7167300380228137, "obj2": 0.1228624801199245}, {"determining": "( ( ACS * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( DS * Min( RRSe ,Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( ( ( ( DS + MLU ) + Max( MUM,MUC ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( ( ( RCSe * RCSe ) - ( RMSe / DS ) ) - ( Max( CS,MUR ) - Max( MUC,MUC ) ) ) ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.6939163498098859, "obj2": 0.24066793579403142}, {"determining": "( ( ( AMS * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( MUC / ( RRSe * DS ) )", "obj1": 0.034220532319391636, "obj2": 0.8225396057052178}, {"determining": "( Min( ( ( ( CRS + BR ) / DDR ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( ( MRS / CRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,( Max( MUR,( RMSe - RCSe ) ) / ( RMSe * ( CS / Max( RRSe,MUM ) ) ) ) ) ,( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,RRS ) + ( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( Max( MLU,DS ) + Min( ( CS - RCSe ) ,( RRSe + RMSe ) ) ) - MUR ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,( Max( FirstVNF_CPU,Const ) * Min( AMS ,ARS ) ) ) * RRS ) )", "choosing": "( Max( DS,RMSe ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.15779467680608364, "obj2": 0.6729591801313091}, {"determining": "Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUC,CS ) )", "obj1": 0.049429657794676805, "obj2": 0.7759956475057832}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( ( AMS / Min( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ,MRS ) ) / FirstVNF_CPU ) ,( MDR * PN ) ) )", "choosing": "( Max( MUR,( ( Max( ( ( CS + RCSe ) / MUC ),( ( Max( RMSe,CS ) / MUR ) * ( ( CS * MUM ) - Max( RCSe,MUR ) ) ) ) - CS ) * DS ) ) - Min( ( ( MLU * DS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4467680608365019, "obj2": 0.3905479042499391}, {"determining": "( ( ( ( RRS / FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ARS,CRS ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - Max( RCSe,( ( ( MUM - Min( MUR ,Min( MUR ,MUC ) ) ) / ( DS / DS ) ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Max( FirstVNF_CPU,Const ) * ( ACS * ARS ) )", "choosing": "( Max( ( DS / ( RRSe * ( CS - ( Max( RRSe,MLU ) + ( ( MUM * MLU ) * Max( MUC,RCSe ) ) ) ) ) ),RMSe ) / Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( MUC / ( RRSe * DS ) )", "obj1": 0.034220532319391636, "obj2": 0.8225396057052178}, {"determining": "( Max( PN,( CRS - Max( MDR,MRS ) ) ) - Min( Min( BR ,( FirstVNF_CPU_Server - AMS ) ) ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( ( ( MLU * DS ) / Max( CS,CS ) ) * ( ( RMSe - DS ) - RMSe ) ) ) )", "obj1": 0.5988593155893536, "obj2": 0.25627831059611883}, {"determining": "( Max( AMS,Const ) + ( Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( MRS * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) - Max( ( RMSe + CS ),MUM ) ) - ( MLU * RRSe ) )", "obj1": 0.6596958174904943, "obj2": 0.21680399995972718}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) * Min( Min( DDR ,( Max( FirstVNF_CPU,Const ) * Min( AMS ,ARS ) ) ) ,MRS ) )", "choosing": "( DS + Max( ( DS + ( RMSe / CS ) ),CS ) )", "obj1": 0.5171102661596958, "obj2": 0.3403902692066082}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) )", "obj1": 0.7167300380228137, "obj2": 0.1228624801199245}, {"determining": "( ( Min( ( FirstVNF_RAM * ( Const - MDR ) ) ,FirstVNF_Mem_Server ) * RRS ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * Max( ( MUM - DS ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.060836501901140684, "obj2": 0.6894510312716386}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ,( ( MDR * MDR ) * PN ) ) )", "choosing": "( ( Max( Max( ( RCSe + ( MUM / DS ) ),RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8231939163498099, "obj2": 0.06142475201288623}, {"determining": "Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUC,CS ) )", "obj1": 0.049429657794676805, "obj2": 0.7759956475057832}, {"determining": "( ( BR * MRS ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( RRSe - CS ) / ( MUM / MUR ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "( ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) + ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - Max( MLU,MLU ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * Max( ( Min( Max( MUR,MUR ) ,( CS * MUM ) ) + ( MUR / RMSe ) ),CS ) ) ) ) )", "obj1": 0.16159695817490494, "obj2": 0.6249827159116633}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) + ( RRS - AMS ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( MLU + ( Min( Max( RRSe,RCSe ) ,Max( DS,MLU ) ) - RCSe ) ) ) - RRSe ) * ( MUM / RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.11216730038022814, "obj2": 0.6673736300614103}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / CS ) ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.17110266159695817, "obj2": 0.5760148240094232}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - Min( MLU ,( ( ( MUC - RCSe ) - ( RRSe / MUM ) ) / Max( Max( RMSe,RCSe ),Max( RCSe,CS ) ) ) ) )", "obj1": 0.8802281368821293, "obj2": 0.04327609185376115}, {"determining": "( ( Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) / RCSe ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5099212585454924}, {"determining": "Min( ( FirstVNF_CPU_Server + AMS ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) )", "choosing": "( ( ( CS * MUM ) / Max( MUC,CS ) ) / Max( CS,DS ) )", "obj1": 0.11406844106463879, "obj2": 0.6370175714553902}, {"determining": "Min( ( FirstVNF_RAM_Server / CRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * RRS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),MLU ) + Max( RCSe,MUR ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.48098859315589354, "obj2": 0.35965274090641297}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ACS + Const ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( RRSe - Min( RCSe ,MLU ) ) ) )", "obj1": 0.7376425855513308, "obj2": 0.11153624773579475}, {"determining": "Min( ( PN - MDR ) ,( RRS * RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( MLU * RMSe ) / MUR ) + MLU ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( ( ( ( Min( FirstVNF_RAM ,MDR ) * ( MRS - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) ) / ( FirstVNF_Mem / PN ) ) * Min( AMS ,( PN / PN ) ) )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( ( MUC + ( MUR / RMSe ) ) - CS ) ) )", "obj1": 0.3517110266159696, "obj2": 0.4804135850487848}, {"determining": "Min( ( CRS - ( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( DDR ,MRS ) ) )", "choosing": "( ( ( ( RRSe / DS ) - ( ( DS * Max( Min( Min( MLU ,DS ) ,( MUM + MUR ) ),RRSe ) ) - Min( CS ,RMSe ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) )", "obj1": 0.3840304182509506, "obj2": 0.4068290030292969}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Min( ( DDR + FirstVNF_RAM_Server ) ,DDR ) * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * ( Min( RRSe ,RMSe ) * RMSe ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Min( ( PN / ARS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Min( MUC ,CS ) + MUM ) )", "obj1": 0.8973384030418251, "obj2": 0.03524012554015723}, {"determining": "( Max( ( FirstVNF_RAM / Const ),FirstVNF_RAM_Server ) * ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( CS - ( RCSe * Min( DS ,MUC ) ) ),MUC ) * ( CS - MUR ) )", "obj1": 0.9391634980988594, "obj2": 0.0294808651734395}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server / PN ) + Const ) ) ) * Min( FirstVNF_RAM ,MRS ) )", "choosing": "( ( MLU * Max( RCSe,Max( RRSe,Min( Max( MUR,RMSe ) ,RMSe ) ) ) ) + Max( ( DS + ( RMSe / CS ) ),CS ) )", "obj1": 0.4752851711026616, "obj2": 0.3878873027166515}, {"determining": "( Min( ( PN - DDR ) ,( ACS + Const ) ) / ( Const + PN ) )", "choosing": "( Max( MLU,DS ) - ( DS * RRSe ) )", "obj1": 0.9524714828897338, "obj2": 0.019857621950732304}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + Const ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - RRSe ) * Max( ( CS * Max( RRSe,DS ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.21482889733840305, "obj2": 0.5581860475697034}, {"determining": "Min( ( PN - MDR ) ,( ( FirstVNF_Mem_Server * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - ( DDR + MRS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( ( ( CS + RCSe ) - ( MUC / RMSe ) ),RCSe ) - Min( RCSe ,CS ) ) )", "obj1": 0.779467680608365, "obj2": 0.09921648490785215}, {"determining": "( ( ( MDR - Min( ACS ,( DDR + FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUR / RRSe ) / ( DS * RMSe ) ) + ( ( MUM * RMSe ) + Min( MLU ,RMSe ) ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RMSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.21292775665399238, "obj2": 0.5735161614861705}, {"determining": "( ( ( MDR - Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - ( BR + DDR ) ) * FirstVNF_Mem_Server ) ) ) * Max( ( ( ARS + Const ) - DDR ),FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,( AMS * BR ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / Max( ( ( ( MLU / ( ( Min( MLU ,MUR ) * MUM ) * Max( RRSe,MUR ) ) ) + ( ( ( Min( DS ,RMSe ) * MUC ) - MLU ) + DS ) ) / RRSe ),MUM ) )", "obj1": 0.3745247148288973, "obj2": 0.42705504283767964}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) )", "choosing": "( ( MLU + MUC ) / Max( CS,DS ) )", "obj1": 0.35361216730038025, "obj2": 0.44635192233106463}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ACS ,ARS ) ) )", "choosing": "Max( Min( Max( CS,Min( RMSe ,( MUM - MUC ) ) ) ,Max( RCSe,Max( RRSe,CS ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.9847908745247148, "obj2": 0.009971683969873224}, {"determining": "( Min( ARS ,ACS ) + Min( FirstVNF_Mem ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,( CS * Max( ( RRSe + Min( RMSe ,RMSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5106450214457378}, {"determining": "( ( ( MDR - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_Mem - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( RCSe + RCSe ),MLU ) ) )", "obj1": 0.3593155893536122, "obj2": 0.437550126372574}, {"determining": "( ( Min( Max( FirstVNF_Mem,( BR / MDR ) ) ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.04752851711026616, "obj2": 0.8063950105080268}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( ( AMS / Min( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ,MRS ) ) / FirstVNF_CPU ) ,( MDR * PN ) ) )", "choosing": "( Max( MUR,( ( Max( ( ( CS + RCSe ) / MUC ),( ( Max( RMSe,CS ) / MUR ) * ( ( CS * MUM ) - Max( RCSe,MUR ) ) ) ) - CS ) * DS ) ) - Min( ( ( MLU * DS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4467680608365019, "obj2": 0.3905479042499391}, {"determining": "( ( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * RRS ) )", "choosing": "( ( RRSe / Max( MUR,DS ) ) + ( ( Max( Max( CS,RCSe ),( Min( RRSe ,( RRSe / ( RMSe + RRSe ) ) ) + ( MUM / DS ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.4429657794676806, "obj2": 0.3915564085471602}, {"determining": "( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( ( PN - DDR ) / MRS ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + ( MUR - CS ) ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9904942965779467, "obj2": 0.003909163208719459}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Max( Min( FirstVNF_CPU ,PN ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( Max( ( MUM / RCSe ),RMSe ) ,( Min( Min( ( MUM + ( MUR / Max( RCSe,( RCSe / CS ) ) ) ) ,MLU ) ,( ( MUM - MUM ) / MUR ) ) + MUC ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * ( DDR - ( FirstVNF_Mem_Server + Const ) ) ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( Min( ( MLU + MUC ) ,CS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( Min( BR ,( FirstVNF_CPU_Server - AMS ) ) ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( ( ( ( ( Min( DS ,MUR ) - MUM ) / MLU ) / ( RRSe - ( MLU * ( MUC - MUM ) ) ) ) - ( ( MLU / ( MUR - MLU ) ) / MUR ) ) * ( ( RMSe - DS ) - RMSe ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Max( PN,( CRS - ( ( CRS / FirstVNF_CPU_Server ) + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + ( Max( AMS,FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Min( RRSe ,CS ) - ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( ( ( RCSe - RMSe ) + MUM ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( CRS * ACS ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,( MUC / RMSe ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * Min( ( ( FirstVNF_RAM - Const ) * FirstVNF_CPU ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( MUR + Min( ( MUC * CS ) ,( Min( ( Min( RRSe ,MUR ) - RRSe ) ,MUR ) / DS ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU_Server ) ) - ( ( AMS * RRS ) / ( ARS + Const ) ) )", "choosing": "( Min( CS ,( RMSe - MUM ) ) * ( ( ( MUC + MLU ) / MUR ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * ACS ) / ( ACS - FirstVNF_CPU ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + ( RCSe * MUR ) ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,( DS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR + PN ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + RRSe ) - MUR ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Min( ACS ,CRS ) )", "choosing": "( Min( RRSe ,CS ) - ( DS + ( ( ( DS / MUR ) * CS ) + ( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( Min( FirstVNF_Mem_Server ,ACS ) + ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / Max( CS,MUM ) ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,DDR ) - Max( ( MRS + FirstVNF_RAM_Server ),Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "Max( ( Max( RCSe,Min( RRSe ,Max( CS,DS ) ) ) + ( ( MUR * Min( Max( ( RCSe / Max( RRSe,MUC ) ),MUM ) ,( RRSe * MUC ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + ( Const / FirstVNF_CPU_Server ) ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + ( ACS * RRS ) ),ARS ) )", "choosing": "Max( ( Max( RCSe,Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( Max( FirstVNF_Mem,( BR / MDR ) ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( CS + ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / Max( DDR,( Max( ( ACS / FirstVNF_Mem_Server ),DDR ) / Min( RRS ,( Min( ARS ,FirstVNF_Mem_Server ) - ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Min( ( Min( Min( MUR ,RCSe ) ,( CS + DS ) ) + Max( ( MLU * Min( ( ( Min( MUC ,RRSe ) + RRSe ) + MUM ) ,RCSe ) ),( RCSe - RRSe ) ) ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,Const ) - DDR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * ( MUR * MUR ) ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,( RRS + CRS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - Max( PN,AMS ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( ( Min( ( RMSe - Min( RRSe ,RCSe ) ) ,( MUC * ( MUM + MUC ) ) ) + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ) ) ,( RMSe - ( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( Max( MRS,( DDR + RRS ) ) / ACS ) ) ) ,Max( FirstVNF_Mem,( BR / MDR ) ) )", "choosing": "( Max( Max( ( RMSe - ( Min( ( DS / CS ) ,MUR ) - MLU ) ),( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,( ( ( MUC - RCSe ) - ( RRSe / MUM ) ) / Max( Max( RMSe,RCSe ),Max( RCSe,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( Max( DDR,ACS ),( Const * BR ) ) )", "choosing": "Min( ( ( ( MUM + MLU ) * CS ) * Max( ( ( Max( MLU,MUM ) - MLU ) * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( RCSe ,CS ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( MUR / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + MRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( MUM,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( DS * Min( RRSe ,Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( CRS + BR ) / DDR ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( ( MRS / CRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,( Max( MUR,( RMSe - RCSe ) ) / ( RMSe * ( CS / Max( RRSe,MUM ) ) ) ) ) ,( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,RRS ) + ( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( Max( MLU,DS ) + Min( ( CS - RCSe ) ,( RRSe + RMSe ) ) ) - MUR ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ARS,CRS ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - Max( RCSe,( ( ( MUM - Min( MUR ,Min( MUR ,MUC ) ) ) / ( DS / DS ) ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( Max( PN,FirstVNF_RAM ) ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,( ( MUR - RRSe ) - Max( MLU,MLU ) ) ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - Max( MLU,MLU ) ) ) * ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU_Server ) ) - ( ( AMS * RRS ) / ( ARS + Const ) ) )", "choosing": "( Min( CS ,( RMSe - MUM ) ) * ( ( ( MUC + MLU ) / MUR ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,Max( PN,( CRS - ( ACS / BR ) ) ) ) )", "choosing": "( ( MUR * MLU ) / ( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( DDR ,MDR ) ,Min( RRS ,Max( DDR,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * AMS ) ) ) ) / DDR ) - ( FirstVNF_CPU_Server + ( Const / ( MRS + FirstVNF_CPU ) ) ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + ( ( DDR - FirstVNF_CPU_Server ) + ( PN / Const ) ) ) ) )", "choosing": "Max( Max( Min( RCSe ,Min( RRSe ,CS ) ),( RRSe + RMSe ) ),( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( Max( Max( Min( RCSe ,MUM ),Min( MUC ,RCSe ) ),MLU ) ,MLU ),( MLU * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) ) * ( Max( ( ( MDR / CRS ) / ACS ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( Min( MUC ,DS ) + RCSe ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ),( RRSe + RMSe ) ),( MLU * Max( RCSe,Max( RRSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * Min( FirstVNF_RAM ,MRS ) )", "choosing": "( ( MLU * Max( RCSe,Max( RRSe,( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) ) ) ) + Max( ( DS + ( RMSe / CS ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_CPU + ( ACS - ( MRS * Max( MDR,FirstVNF_CPU ) ) ) ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( ( RCSe / ( MUR / ( RMSe * MUM ) ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( CS + ( RCSe / ( ( DS / CS ) - Max( MLU,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( FirstVNF_Mem ,ACS ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) * ( ( ( ( DS / RMSe ) + MLU ) / MUR ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + ( ( CRS - ( ( CRS / FirstVNF_CPU_Server ) + ( DDR / FirstVNF_Mem_Server ) ) ) * RRS ) ),ARS ) )", "choosing": "Max( ( Max( RCSe,Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( MUC * Max( DS,MUM ) ) ) ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) ) * ( MDR * FirstVNF_RAM ) ) * Max( ( FirstVNF_Mem_Server / MRS ),( Min( ARS ,BR ) / ( ( PN - PN ) - ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / Min( BR ,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( DS * Min( RRSe ,( Max( MUM,RCSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + RRS )", "choosing": "( Min( RRSe ,CS ) - ( DS + ( ( Max( ( MUC / DS ),MUC ) * CS ) + ( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( ( FirstVNF_CPU_Server + ( Min( FirstVNF_Mem_Server ,BR ) + ( FirstVNF_CPU_Server + MDR ) ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) ) ),Max( Min( FirstVNF_RAM_Server ,( ( ARS / BR ) / MDR ) ),( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "Max( ( ( DS * CS ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( MRS * FirstVNF_CPU_Server ) ) ,( ( ( Max( AMS,Const ) + ( Max( FirstVNF_CPU_Server,Max( ( PN * FirstVNF_Mem_Server ),Max( DDR,PN ) ) ) * FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUR ,RCSe ) ,( CS + DS ) ) + Max( Min( RCSe ,RCSe ),( MUR * MUR ) ) ) ,Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ARS ) - ( ( FirstVNF_CPU_Server / DDR ) / FirstVNF_RAM ) )", "choosing": "( ( Max( MUR,RMSe ) / ( RRSe - CS ) ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( CRS * ACS ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,( MUC / RMSe ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ACS ,ARS ) ) )", "choosing": "Max( Min( Max( CS,Min( RMSe ,( MUM - MUC ) ) ) ,Max( RCSe,Max( RRSe,CS ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( MDR / RRS ),( FirstVNF_CPU_Server * DDR ) ) ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * RCSe ) ),( ( CS * RRSe ) * Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( PN,( CRS - FirstVNF_Mem ) ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( ( RMSe - DS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( BR * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RMSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( ( Min( Min( ARS ,DDR ) ,Const ) - DDR ) + FirstVNF_RAM_Server ),ARS ) ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( Min( MLU ,( MUM - MUR ) ),( ( CS * RRSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + ( MDR - FirstVNF_CPU ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) - Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( RMSe * RCSe ),( ( CS * RRSe ) * Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS * RRS ) - Max( ( MRS + ( ACS * RRS ) ),ARS ) ) ,( ARS - ACS ) )", "choosing": "( ( ( ( MUR * MUC ) * RRSe ) / RCSe ) + Max( ( Max( RRSe,MUC ) - MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( Min( ( ACS * DDR ) ,( ARS - ACS ) ) + ( ACS * ( ( FirstVNF_Mem_Server - ( MRS + BR ) ) * ACS ) ) ),ARS ) )", "choosing": "Max( ( Max( RCSe,Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,Max( ( MUM / CS ),DS ) ) ) ) ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( ( MUR * MUC ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Max( BR,( Min( RRS ,FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - Max( MLU,MLU ) ) ) * ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( ( DS / CS ),Min( RMSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,Const ) * ( ACS * ARS ) )", "choosing": "( Max( ( DS / ( RRSe * ( CS - ( Max( RRSe,MLU ) + ( ( MUM * MLU ) * Max( MUC,RCSe ) ) ) ) ) ),RMSe ) / Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( MUC / ( RRSe * DS ) )", "obj1": 0.034220532319391636, "obj2": 0.8225396057052178}, {"determining": "( Max( AMS,Const ) + ( Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( MRS * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) - Max( ( RMSe + CS ),MUM ) ) - ( MLU * RRSe ) )", "obj1": 0.6596958174904943, "obj2": 0.21680399995972718}, {"determining": "( Max( PN,( CRS - Max( MDR,MRS ) ) ) - ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) * Min( Min( DDR ,( Max( FirstVNF_CPU,Const ) * Min( AMS ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ,MRS ) ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( ( ( MLU * DS ) / Max( CS,DS ) ) * ( ( ( CS / Max( RRSe,RRSe ) ) + RMSe ) - RMSe ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2914015070136341}, {"determining": "( ( Min( ( FirstVNF_RAM * ( Const - MDR ) ) ,FirstVNF_Mem_Server ) * RRS ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * Max( ( MUM - DS ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.060836501901140684, "obj2": 0.6894510312716386}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) )", "obj1": 0.7167300380228137, "obj2": 0.1228624801199245}, {"determining": "Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUC,CS ) )", "obj1": 0.049429657794676805, "obj2": 0.7759956475057832}, {"determining": "( Max( AMS,Const ) + ( ( ( DDR - FirstVNF_CPU_Server ) + RRS ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) - Max( ( RMSe + CS ),( ( Max( ( MUC / DS ),MUC ) * CS ) + ( RMSe / MUM ) ) ) ) - ( MLU * RRSe ) )", "obj1": 0.4923954372623574, "obj2": 0.3361471456066094}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) + ( RRS - AMS ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( MLU + ( Min( Max( RRSe,RCSe ) ,Max( DS,MLU ) ) - RCSe ) ) ) - RRSe ) * ( MUM / RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.11216730038022814, "obj2": 0.6673736300614103}, {"determining": "( Max( PN,( CRS - Max( MDR,MRS ) ) ) - Min( Min( BR ,( FirstVNF_CPU_Server - AMS ) ) ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( ( ( MLU * DS ) / Max( CS,CS ) ) * ( ( RMSe - DS ) - RMSe ) ) ) )", "obj1": 0.5988593155893536, "obj2": 0.25627831059611883}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - Min( MLU ,( ( ( MUC - RCSe ) - ( RRSe / MUM ) ) / Max( Max( RMSe,RCSe ),Max( RCSe,CS ) ) ) ) )", "obj1": 0.8802281368821293, "obj2": 0.04327609185376115}, {"determining": "( ( Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) ) / ( RRS + DDR ) ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( Min( ( ( ( MLU * CS ) / ( MUR * DS ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) / RCSe ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6324152185407511}, {"determining": "( ( BR * MRS ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( RRSe - CS ) / ( MUM / MUR ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( Max( ( ( FirstVNF_RAM_Server * ( BR + DDR ) ) / ( PN * ( Const / FirstVNF_Mem_Server ) ) ),PN ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MUM ) + MUC ) / ( ( DS + RCSe ) / Max( MUM,MUM ) ) ) ) ) - ( RCSe + MLU ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.1958174904942966, "obj2": 0.5567708988691673}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - ( ( CS * RRSe ) * Max( ( MUR * MUC ),MUM ) ) ) - RRSe ) * Max( ( CS * Max( RRSe,DS ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.16159695817490494, "obj2": 0.5897737837808869}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ACS + Const ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( RRSe - Min( RCSe ,MLU ) ) ) )", "obj1": 0.7376425855513308, "obj2": 0.11153624773579475}, {"determining": "( ( Min( ( RRS - FirstVNF_Mem_Server ) ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * MRS ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( ( MLU * ( Max( MLU,( CS * ( ( DS + RCSe ) * MUM ) ) ) - MUM ) ) - CS ) / ( MUM / MUR ) )", "obj1": 0.2832699619771863, "obj2": 0.49793203543590897}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ,( ( MDR * MDR ) * PN ) ) )", "choosing": "( ( Max( Max( ( RCSe + ( MUM / DS ) ),RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8231939163498099, "obj2": 0.06142475201288623}, {"determining": "( ( ( MDR - Min( DDR ,( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) ) ) * Max( DDR,FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( Max( MUR,DS ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.3365019011406844, "obj2": 0.4571995672168535}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Min( ( CRS - ( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( DDR ,MRS ) ) )", "choosing": "( ( ( ( RRSe / DS ) - ( ( DS * Max( Min( Min( MLU ,DS ) ,( MUM + MUR ) ),RRSe ) ) - Min( CS ,RMSe ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) )", "obj1": 0.3840304182509506, "obj2": 0.4068290030292969}, {"determining": "( ( ( MDR - Min( ACS ,( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_Mem_Server ) * ( BR - FirstVNF_Mem_Server ) ) ) ) ) * FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( Min( MUR ,CS ) + ( ( MUM * RMSe ) + RMSe ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.6216730038022814, "obj2": 0.2363550921824188}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Min( ( DDR + FirstVNF_RAM_Server ) ,DDR ) * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * ( Min( RRSe ,RMSe ) * RMSe ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Min( ( PN / ARS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Min( MUC ,CS ) + MUM ) )", "obj1": 0.8973384030418251, "obj2": 0.03524012554015723}, {"determining": "( Max( ( FirstVNF_RAM / Const ),FirstVNF_RAM_Server ) * ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( CS - ( RCSe * Min( DS ,MUC ) ) ),MUC ) * ( CS - MUR ) )", "obj1": 0.9391634980988594, "obj2": 0.0294808651734395}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ACS + Const ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( RRSe - Min( RCSe ,MLU ) ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7756653992395437, "obj2": 0.08779848960746431}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) * Min( FirstVNF_RAM ,MRS ) )", "choosing": "( ( MLU * Max( RCSe,Max( ( Min( MUC ,MUR ) + ( CS - RRSe ) ),( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) ) ) ) + Max( ( DS + ( RMSe / CS ) ),CS ) )", "obj1": 0.45817490494296575, "obj2": 0.3848354445383313}, {"determining": "Min( ( FirstVNF_RAM_Server / CRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * RRS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),MLU ) + Max( RCSe,MUR ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.48098859315589354, "obj2": 0.35965274090641297}, {"determining": "Min( ( FirstVNF_CPU_Server + AMS ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) )", "choosing": "( ( ( CS * MUM ) / Max( MUC,CS ) ) / Max( CS,DS ) )", "obj1": 0.11406844106463879, "obj2": 0.6370175714553902}, {"determining": "( Min( ( PN - DDR ) ,( ACS + Const ) ) / ( Const + PN ) )", "choosing": "( Max( MLU,DS ) - ( DS * RRSe ) )", "obj1": 0.9524714828897338, "obj2": 0.019857621950732304}, {"determining": "( ( ( MDR - Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - ( BR + DDR ) ) * FirstVNF_Mem_Server ) ) ) * Max( ( ( ARS + Const ) - DDR ),FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,( AMS * BR ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / Max( ( ( ( MLU / ( ( Min( MLU ,MUR ) * MUM ) * Max( RRSe,MUR ) ) ) + ( ( ( Min( DS ,RMSe ) * MUC ) - MLU ) + DS ) ) / RRSe ),MUM ) )", "obj1": 0.3745247148288973, "obj2": 0.42705504283767964}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * Max( ( BR + ( ( DDR / PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ),CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,( Min( MUC ,( CS + Min( MUR ,MUM ) ) ) + ( MUM / RRSe ) ) ) * ( CS + RCSe ) ) - ( RRSe - Min( CS ,MLU ) ) ) )", "obj1": 0.8041825095057035, "obj2": 0.06524172199082458}, {"determining": "Min( ( PN - MDR ) ,( RRS * RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( MLU * RMSe ) / MUR ) + MLU ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7813688212927756, "obj2": 0.08755241780147495}, {"determining": "( ( Min( Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ,Const ) - DDR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * ( MUM * MUR ) ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.9771863117870723, "obj2": 0.0078282441137684}, {"determining": "( ( Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) / RCSe ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5099212585454924}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.1806083650190114, "obj2": 0.5731283299243497}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) )", "choosing": "( ( MLU + MUC ) / Max( CS,DS ) )", "obj1": 0.35361216730038025, "obj2": 0.44635192233106463}, {"determining": "( ( Min( Max( FirstVNF_Mem,( BR / MDR ) ) ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.04752851711026616, "obj2": 0.8063950105080268}, {"determining": "( ( ( ( CRS + RRS ) - Max( Max( ACS,ARS ),FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) + ( ( Max( RRS,Const ) / ( ACS * FirstVNF_Mem ) ) / ARS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( Max( Min( MLU ,RCSe ),Max( MLU,MUR ) ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( Min( MLU ,MUC ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.4847908745247148, "obj2": 0.3484821890019347}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server - MDR ) ,( MDR * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / CS ) ) - RRSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.2414448669201521, "obj2": 0.524728796952169}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / CS ) ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.17110266159695817, "obj2": 0.5760148240094232}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( Max( FirstVNF_RAM_Server,MRS ) + Const ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) ) - Min( RCSe ,MLU ) ) ) )", "obj1": 0.7186311787072244, "obj2": 0.12220378252941355}, {"determining": "( ( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * RRS ) )", "choosing": "( ( RRSe / Max( MUR,DS ) ) + ( ( Max( Max( CS,RCSe ),( Min( RRSe ,( RRSe / ( RMSe + RRSe ) ) ) + ( MUM / DS ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.4429657794676806, "obj2": 0.3915564085471602}, {"determining": "( Min( ARS ,ACS ) + Min( FirstVNF_Mem ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,( CS * Max( ( RRSe + Min( RMSe ,RMSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5106450214457378}, {"determining": "Min( ( PN - MDR ) ,( ( FirstVNF_Mem_Server * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - ( ( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) ) + MRS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( ( ( CS + ( Max( RMSe,DS ) / ( RRSe * DS ) ) ) - ( MUC / RMSe ) ),RCSe ) - Min( RCSe ,CS ) ) )", "obj1": 0.9847908745247148, "obj2": 0.0021253229190006874}, {"determining": "( ( ( MDR - Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - ( BR + DDR ) ) * FirstVNF_Mem_Server ) ) ) * Max( ( ( ARS + Const ) - DDR ),FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,( AMS * BR ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / Max( ( ( ( MLU / ( ( Min( MLU ,MUR ) * MUM ) * Max( RRSe,MUR ) ) ) + ( ( ( Min( DS ,RMSe ) * MUC ) - MLU ) + DS ) ) / RRSe ),MUM ) )", "obj1": 0.3593155893536122, "obj2": 0.437550126372574}, {"determining": "( ( ( MDR - Min( ACS ,( DDR + FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUR / RRSe ) / ( DS * RMSe ) ) + ( ( MUM * RMSe ) + Min( MLU ,RMSe ) ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RMSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2450180064690832}, {"determining": "Min( ( PN - MDR ) ,FirstVNF_RAM_Server )", "choosing": "( ( ( MUR / Max( Min( MUC ,CS ),( MUM - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8098859315589354, "obj2": 0.06152688938909212}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( ( AMS / Min( Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ,MRS ) ) / FirstVNF_CPU ) ,( MDR * PN ) ) )", "choosing": "( Max( MUR,( ( Max( ( ( CS + RCSe ) / MUC ),( ( Max( RMSe,CS ) / MUR ) * ( ( CS * MUM ) - Max( RCSe,MUR ) ) ) ) - CS ) * DS ) ) - Min( ( ( MLU * DS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4467680608365019, "obj2": 0.3905479042499391}, {"determining": "( ( ( MDR - Min( ACS ,( DDR + FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUR / RRSe ) / ( DS * RMSe ) ) + ( ( MUM * RMSe ) + Min( MLU ,RMSe ) ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RMSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2450180064690832}, {"determining": "( ( ( MDR - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_Mem - ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( RCSe + RCSe ),MLU ) ) )", "obj1": 0.3593155893536122, "obj2": 0.437550126372574}, {"determining": "( ( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) / ( ( ( MDR - Min( DDR ,PN ) ) * Max( DDR,FirstVNF_Mem ) ) * RRS ) )", "choosing": "( ( RRSe / Max( MUR,DS ) ) + ( ( Max( Max( CS,RCSe ),( Min( RCSe ,( RRSe / ( RMSe + RRSe ) ) ) + ( MUM / DS ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.03612167300380228, "obj2": 0.8148971178378959}, {"determining": "( Max( PN,( CRS - ( MDR + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUC,RMSe ) )", "obj1": 0.03802281368821293, "obj2": 0.8112601185733456}, {"determining": "( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * ( DDR - ( FirstVNF_Mem_Server + Const ) ) ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( Min( ( MLU + MUC ) ,CS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( Max( PN,( CRS - ( ( CRS / FirstVNF_CPU_Server ) + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( Min( BR ,( FirstVNF_CPU_Server - AMS ) ) ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( ( ( ( ( Min( DS ,MUR ) - MUM ) / MLU ) / ( RRSe - ( MLU * ( MUC - MUM ) ) ) ) - ( ( MLU / ( MUR - MLU ) ) / MUR ) ) * ( ( RMSe - DS ) - RMSe ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + ( Max( AMS,FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Min( RRSe ,CS ) - ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( ( ( RCSe - RMSe ) + MUM ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( CRS * ACS ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,( MUC / RMSe ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * Min( ( ( FirstVNF_RAM - Const ) * FirstVNF_CPU ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( MUR + Min( ( MUC * CS ) ,( Min( ( Min( RRSe ,MUR ) - RRSe ) ,MUR ) / DS ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU_Server ) ) - ( ( AMS * RRS ) / ( ARS + Const ) ) )", "choosing": "( Min( CS ,( RMSe - MUM ) ) * ( ( ( MUC + MLU ) / MUR ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * ACS ) / ( ACS - FirstVNF_CPU ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + ( RCSe * MUR ) ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,( DS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR + PN ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + RRSe ) - MUR ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Min( ACS ,CRS ) )", "choosing": "( Min( RRSe ,CS ) - ( DS + ( ( ( DS / MUR ) * CS ) + ( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( Min( FirstVNF_Mem_Server ,ACS ) + ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / Max( CS,MUM ) ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,DDR ) - Max( ( MRS + FirstVNF_RAM_Server ),Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "Max( ( Max( RCSe,Min( RRSe ,Max( CS,DS ) ) ) + ( ( MUR * Min( Max( ( RCSe / Max( RRSe,MUC ) ),MUM ) ,( RRSe * MUC ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + ( Const / FirstVNF_CPU_Server ) ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + ( ACS * RRS ) ),ARS ) )", "choosing": "Max( ( Max( RCSe,Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( Max( FirstVNF_Mem,( BR / MDR ) ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( CS + ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / Max( DDR,( Max( ( ACS / FirstVNF_Mem_Server ),DDR ) / Min( RRS ,( Min( ARS ,FirstVNF_Mem_Server ) - ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Min( ( Min( Min( MUR ,RCSe ) ,( CS + DS ) ) + Max( ( MLU * Min( ( ( Min( MUC ,RRSe ) + RRSe ) + MUM ) ,RCSe ) ),( RCSe - RRSe ) ) ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,Const ) - DDR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * ( MUR * MUR ) ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,( RRS + CRS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - Max( PN,AMS ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( ( Min( ( RMSe - Min( RRSe ,RCSe ) ) ,( MUC * ( MUM + MUC ) ) ) + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ) ) ,( RMSe - ( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( Max( MRS,( DDR + RRS ) ) / ACS ) ) ) ,Max( FirstVNF_Mem,( BR / MDR ) ) )", "choosing": "( Max( Max( ( RMSe - ( Min( ( DS / CS ) ,MUR ) - MLU ) ),( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,( ( ( MUC - RCSe ) - ( RRSe / MUM ) ) / Max( Max( RMSe,RCSe ),Max( RCSe,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( Max( DDR,ACS ),( Const * BR ) ) )", "choosing": "Min( ( ( ( MUM + MLU ) * CS ) * Max( ( ( Max( MLU,MUM ) - MLU ) * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( RCSe ,CS ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( MUR / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + MRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( MUM,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( DS * Min( RRSe ,Max( CS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( CRS + BR ) / DDR ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( ( MRS / CRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,( Max( MUR,( RMSe - RCSe ) ) / ( RMSe * ( CS / Max( RRSe,MUM ) ) ) ) ) ,( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,RRS ) + ( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( Max( MLU,DS ) + Min( ( CS - RCSe ) ,( RRSe + RMSe ) ) ) - MUR ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ARS,CRS ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - Max( RCSe,( ( ( MUM - Min( MUR ,Min( MUR ,MUC ) ) ) / ( DS / DS ) ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( Max( PN,FirstVNF_RAM ) ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,( ( MUR - RRSe ) - Max( MLU,MLU ) ) ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - Max( MLU,MLU ) ) ) * ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU_Server ) ) - ( ( AMS * RRS ) / ( ARS + Const ) ) )", "choosing": "( Min( CS ,( RMSe - MUM ) ) * ( ( ( MUC + MLU ) / MUR ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,Max( PN,( CRS - ( ACS / BR ) ) ) ) )", "choosing": "( ( MUR * MLU ) / ( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( DDR ,MDR ) ,Min( RRS ,Max( DDR,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * AMS ) ) ) ) / DDR ) - ( FirstVNF_CPU_Server + ( Const / ( MRS + FirstVNF_CPU ) ) ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + ( ( DDR - FirstVNF_CPU_Server ) + ( PN / Const ) ) ) ) )", "choosing": "Max( Max( Min( RCSe ,Min( RRSe ,CS ) ),( RRSe + RMSe ) ),( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( Max( Max( Min( RCSe ,MUM ),Min( MUC ,RCSe ) ),MLU ) ,MLU ),( MLU * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) ) * ( Max( ( ( MDR / CRS ) / ACS ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( Min( MUC ,DS ) + RCSe ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ),( RRSe + RMSe ) ),( MLU * Max( RCSe,Max( RRSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * Min( FirstVNF_RAM ,MRS ) )", "choosing": "( ( MLU * Max( RCSe,Max( RRSe,( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) ) ) ) + Max( ( DS + ( RMSe / CS ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_CPU + ( ACS - ( MRS * Max( MDR,FirstVNF_CPU ) ) ) ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( ( RCSe / ( MUR / ( RMSe * MUM ) ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( CS + ( RCSe / ( ( DS / CS ) - Max( MLU,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( FirstVNF_Mem ,ACS ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) * ( ( ( ( DS / RMSe ) + MLU ) / MUR ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + ( ( CRS - ( ( CRS / FirstVNF_CPU_Server ) + ( DDR / FirstVNF_Mem_Server ) ) ) * RRS ) ),ARS ) )", "choosing": "Max( ( Max( RCSe,Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( MUC * Max( DS,MUM ) ) ) ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( FirstVNF_CPU - Min( ( ACS / AMS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,( ( MUC / RMSe ) - Max( MLU,MLU ) ) ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( Min( RRS ,FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - Max( MLU,MLU ) ) ) * ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( ( DS / CS ),Min( RMSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * Max( DDR,FirstVNF_Mem ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( MUR / ( RRSe * DS ) )", "obj1": 0.028517110266159697, "obj2": 0.8304627600588005}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ,( ( MDR * MDR ) * PN ) ) )", "choosing": "( ( Max( Max( ( RCSe + ( MUM / DS ) ),RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.6444866920152091, "obj2": 0.17053749854139774}, {"determining": "( Max( PN,( CRS - Max( MDR,MRS ) ) ) - ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) * Min( Min( DDR ,( Max( FirstVNF_CPU,Const ) * Min( AMS ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ,MRS ) ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( ( ( MLU * DS ) / Max( CS,DS ) ) * ( ( ( CS / Max( RRSe,RRSe ) ) + RMSe ) - RMSe ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2914015070136341}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ACS + Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,CRS ) / ( Const * Min( Const ,PN ) ) ) ) ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( ( DS + ( MUM + CS ) ) + MUM ) - Min( MUM ,Max( RCSe,CS ) ) ) ) ) * Max( ( Max( DS,CS ) / DS ),MUC ) )", "obj1": 0.7053231939163498, "obj2": 0.11450032104173341}, {"determining": "Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUC,CS ) )", "obj1": 0.049429657794676805, "obj2": 0.7759956475057832}, {"determining": "( ( Min( ( FirstVNF_RAM * ( Const - MDR ) ) ,FirstVNF_Mem_Server ) * RRS ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * Max( ( MUM - DS ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.060836501901140684, "obj2": 0.6894510312716386}, {"determining": "( ( ( MDR - Min( ACS ,( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_Mem_Server ) * ( BR - FirstVNF_Mem_Server ) ) ) ) ) * FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( Min( MUR ,CS ) + ( ( MUM * RMSe ) + RMSe ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.6216730038022814, "obj2": 0.2363550921824188}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ) )", "choosing": "( ( ( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.42015209125475284, "obj2": 0.384390718647742}, {"determining": "( ( ( ( ( AMS * ARS ) - ( ACS / Min( RRS ,MRS ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) )", "choosing": "( ( ( MUC - MUC ) - CS ) / ( MUC / RMSe ) )", "obj1": 0.49619771863117873, "obj2": 0.3323253677063596}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( FirstVNF_Mem ,( Max( FirstVNF_RAM,Max( MRS,RRS ) ) * PN ) ) )", "choosing": "( ( ( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,DS ) ) + Min( ( DS / CS ) ,( ( RMSe * RRSe ) + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.4953007829108364}, {"determining": "( Max( PN,( CRS - Max( MDR,MRS ) ) ) - Min( Min( BR ,( FirstVNF_CPU_Server - AMS ) ) ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( ( ( MLU * DS ) / Max( CS,CS ) ) * ( ( RMSe - DS ) - RMSe ) ) ) )", "obj1": 0.5988593155893536, "obj2": 0.25627831059611883}, {"determining": "Max( DDR,Min( Min( Min( ( ACS * RRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( MDR * PN ) ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( Max( MRS,FirstVNF_Mem ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) / Max( ( ( CS * ( MUR - MUC ) ) + MUC ),RMSe ) )", "obj1": 0.3193916349809886, "obj2": 0.4643792014536618}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Min( ( PN - MDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) * ( Min( RCSe ,MLU ) / RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7281368821292775, "obj2": 0.09493953546651834}, {"determining": "Min( ( CRS - ( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( DDR ,MRS ) ) )", "choosing": "( ( ( ( RRSe / DS ) - ( ( DS * Max( Min( Min( MLU ,DS ) ,( MUM + MUR ) ),RRSe ) ) - Min( CS ,RMSe ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) )", "obj1": 0.3840304182509506, "obj2": 0.4068290030292969}, {"determining": "Min( ( Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) / BR ) ,Min( ( PN - FirstVNF_Mem_Server ) ,( Const * RRS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),MLU ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( Max( CS,( MLU * RCSe ) ) / ( MUR * DS ) ) ,Max( ( RCSe / Max( RRSe,MUC ) ),MUM ) ) )", "obj1": 0.4752851711026616, "obj2": 0.3817828373379088}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) + ( RRS - AMS ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( MLU + ( Min( Max( RRSe,RCSe ) ,Max( DS,MLU ) ) - RCSe ) ) ) - RRSe ) * ( MUM / RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.11216730038022814, "obj2": 0.6673736300614103}, {"determining": "( ( Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) ) / ( RRS + DDR ) ) ) / MRS ) / ( RRS * RRS ) )", "choosing": "( ( ( Min( ( ( ( MLU * CS ) / ( MUR * DS ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) / RCSe ) / Max( MUR,DS ) ) + ( ( ( MUM - RMSe ) - CS ) - ( DS / CS ) ) )", "obj1": 0.1520912547528517, "obj2": 0.6242683209739196}, {"determining": "Min( ( AMS / BR ) ,Min( Min( FirstVNF_Mem_Server ,MDR ) ,( MDR * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),Min( MUC ,MUC ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,( MLU / CS ) ) - Min( ( Max( ( Min( ( MUR + RCSe ) ,( MUC - MUC ) ) * CS ),( RMSe * MLU ) ) / MLU ) ,MLU ) ) )", "obj1": 0.8612167300380228, "obj2": 0.047962811167879774}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) + Max( ( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) * ( MDR / Min( ( ( DDR * CRS ) + DDR ) ,RRS ) ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * ( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,( ( ( RRSe * ( MUC - RCSe ) ) * Max( RMSe,MUM ) ) * MUR ) ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.06844106463878327, "obj2": 0.6729355463741924}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Min( ( PN / ARS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Min( MUC ,CS ) + MUM ) )", "obj1": 0.8973384030418251, "obj2": 0.03524012554015723}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( Max( ( ( FirstVNF_RAM_Server * ( BR + DDR ) ) / ( PN * ( Const / FirstVNF_Mem_Server ) ) ),PN ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MUM ) + MUC ) / ( ( DS + RCSe ) / Max( MUM,MUM ) ) ) ) ) - ( RCSe + MLU ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.1958174904942966, "obj2": 0.5567708988691673}, {"determining": "Min( ( DDR + PN ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,( Min( Max( Max( FirstVNF_Mem_Server,RRS ),Max( MRS,CRS ) ) ,FirstVNF_Mem_Server ) * RRS ) ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUR - ( Max( ( RCSe * MUC ),MUM ) - ( MUM + Max( CS,MLU ) ) ) ) - ( Max( MUR,( DS - RCSe ) ) / CS ) ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) + Min( MLU ,DS ) )", "obj1": 0.21863117870722434, "obj2": 0.547968204580437}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ACS + Const ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( RRSe - Min( RCSe ,MLU ) ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7756653992395437, "obj2": 0.08779848960746431}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,MDR )", "choosing": "( ( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,MLU ) * ( CS + RCSe ) ) - Min( MLU ,Min( MUR ,MLU ) ) )", "obj1": 0.8155893536121673, "obj2": 0.05635157865464626}, {"determining": "( ( ( MDR - Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - ( BR + DDR ) ) * FirstVNF_Mem_Server ) ) ) * Max( ( ( ARS + Const ) - DDR ),FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,( AMS * BR ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / Max( ( ( ( MLU / ( ( Min( MLU ,MUR ) * MUM ) * Max( RRSe,MUR ) ) ) + ( ( ( Min( DS ,RMSe ) * MUC ) - MLU ) + DS ) ) / RRSe ),MUM ) )", "obj1": 0.3745247148288973, "obj2": 0.42705504283767964}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Max( ( FirstVNF_RAM / Const ),FirstVNF_RAM_Server ) * ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( CS - ( RCSe * Min( DS ,MUC ) ) ),MUC ) * ( CS - MUR ) )", "obj1": 0.9391634980988594, "obj2": 0.0294808651734395}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,CRS ) / ( ( ( FirstVNF_CPU / Max( MRS,ARS ) ) * ( Const - BR ) ) * ARS ) ) )", "choosing": "( ( ( RCSe - DS ) / Min( ( RCSe - ( MUC * RCSe ) ) ,( RRSe * MUC ) ) ) / CS )", "obj1": 0.12547528517110265, "obj2": 0.6274652144540089}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - Min( MLU ,( ( ( MUC - RCSe ) - ( RRSe / MUM ) ) / Max( Max( RMSe,RCSe ),Max( RCSe,CS ) ) ) ) )", "obj1": 0.8802281368821293, "obj2": 0.04327609185376115}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + ( AMS * ARS ) ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - ( ( CS * RRSe ) * Max( ( MUR * MUC ),MUM ) ) ) - RRSe ) * Max( ( CS * Max( RRSe,DS ) ),DS ) ) ,( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.16159695817490494, "obj2": 0.5897737837808869}, {"determining": "Min( ( PN - MDR ) ,FirstVNF_RAM_Server )", "choosing": "( ( ( MUR / Max( Min( MUC ,CS ),( DS - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7927756653992395, "obj2": 0.06668289419269294}, {"determining": "Min( ( FirstVNF_RAM_Server / CRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * RRS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),MLU ) + Max( RCSe,MUR ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.48098859315589354, "obj2": 0.35965274090641297}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.1806083650190114, "obj2": 0.5731283299243497}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,Max( ( MLU + ( MUM + Min( RMSe ,Max( ( MUM * MUC ),MUR ) ) ) ),Max( RCSe,Max( RRSe,RCSe ) ) ) ) )", "obj1": 0.11406844106463879, "obj2": 0.6370175714553902}, {"determining": "Min( ( FirstVNF_Mem_Server / MDR ) ,Min( ( FirstVNF_RAM_Server - MDR ) ,( MDR * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + ( ( ( MUR - CS ) - ( Max( MUR,( RCSe - RCSe ) ) / CS ) ) - RRSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.2623574144486692, "obj2": 0.5094766113421688}, {"determining": "Min( ( PN - MDR ) ,( RRS * RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( MLU * RMSe ) / MUR ) + MLU ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7813688212927756, "obj2": 0.08755241780147495}, {"determining": "( ( Min( Max( FirstVNF_Mem,( BR / MDR ) ) ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.04752851711026616, "obj2": 0.8063950105080268}, {"determining": "( ( ( ( CRS + RRS ) - Max( Max( ACS,ARS ),FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) + ( ( Max( RRS,Const ) / ( ACS * FirstVNF_Mem ) ) / ARS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( Max( Min( MLU ,RCSe ),Max( MLU,MUR ) ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( Min( MLU ,MUC ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.4847908745247148, "obj2": 0.3484821890019347}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / CS ) ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.17110266159695817, "obj2": 0.5760148240094232}, {"determining": "( ( ( MDR - Min( DDR ,( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / ( ACS / AMS ) ) ) ) * Max( DDR,FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( CS + RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( Max( MUR,DS ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.33269961977186313, "obj2": 0.45398254366612095}, {"determining": "( Min( ( PN - DDR ) ,( ACS + Const ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( MDR * PN ) ) )", "choosing": "( Max( MLU,DS ) - ( DS * ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.9714828897338403, "obj2": 0.0120086742557382}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - Min( ACS ,( RRS * ACS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,RCSe ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.2376425855513308, "obj2": 0.5159689097164154}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,CRS ) / ( Const * ( ( PN + CRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe + MUM ) / Max( CS,DS ) )", "obj1": 0.35361216730038025, "obj2": 0.4462704876799818}, {"determining": "( Max( AMS,Const ) + ( ( ( DDR - FirstVNF_CPU_Server ) + RRS ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) - Max( ( RMSe + CS ),( ( Max( ( MUC / DS ),MUC ) * CS ) + ( RMSe / MUM ) ) ) ) - ( MLU * RRSe ) )", "obj1": 0.4923954372623574, "obj2": 0.3361471456066094}, {"determining": "( Min( ( PN - MDR ) ,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( Max( MUR,DS ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ) ),MLU ) ) )", "obj1": 0.3403041825095057, "obj2": 0.45054141689660165}, {"determining": "( Min( ( PN - ( DDR / MRS ) ) ,( ACS + Const ) ) / ( Const + MDR ) )", "choosing": "( ( ( RCSe * ( MUC + ( MLU - ( MLU / MUM ) ) ) ) + MLU ) - ( DS * ( ( ( MUR / Max( Min( MUC ,CS ),( MUM - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019099300002847527}, {"determining": "( ( FirstVNF_RAM - ( BR + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( MLU * MUM ) ) * Max( ( MLU + RMSe ),MUC ) )", "obj1": 0.034220532319391636, "obj2": 0.8176954483678947}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - ( ( CS * RRSe ) * Max( ( MUR * MUC ),MUM ) ) ) - RRSe ) * Max( ( CS * Max( RRSe,DS ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.16159695817490494, "obj2": 0.5897737837808869}, {"determining": "( ( BR - MDR ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( MUM,( RCSe / ( DS + MUR ) ) ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,Min( MUC ,MUR ) ) ) ) ),MLU ) ) )", "obj1": 0.3593155893536122, "obj2": 0.437550126372574}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * Max( ( BR + ( ( DDR / PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ),CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,( Min( MUC ,( CS + Min( MUR ,MUM ) ) ) + ( MUM / RRSe ) ) ) * ( CS + RCSe ) ) - ( RRSe - Min( CS ,MLU ) ) ) )", "obj1": 0.8041825095057035, "obj2": 0.06524172199082458}, {"determining": "Min( ( PN - MDR ) ,( ( FirstVNF_Mem_Server * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - ( ( Max( Max( BR,MDR ),ACS ) + ( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * Min( FirstVNF_RAM ,MRS ) ) ) + MRS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( ( ( CS + ( MUC + Min( ( MUC / DS ) ,MUR ) ) ) - ( MUC / RMSe ) ),RCSe ) - Min( RCSe ,CS ) ) )", "obj1": 0.973384030418251, "obj2": 0.004114677468922578}, {"determining": "( ( ( MDR - Min( ACS ,( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server - ( ( MRS * FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUR / RRSe ) / ( DS * RMSe ) ) + ( ( MUM * RMSe ) + RRSe ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RMSe ,RCSe ) ),Min( Max( CS,RCSe ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2450180064690832}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( ( Max( CRS,CRS ) / ( Const * ARS ) ) - ( FirstVNF_RAM * Min( RRS ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) ,( MDR * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - ( MUM * MUM ) ) )", "obj1": 0.9429657794676806, "obj2": 0.026003658996354637}, {"determining": "( ( ( MDR - Min( ACS ,( DDR + FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUR / RRSe ) / ( DS * RMSe ) ) + ( ( MUM * RMSe ) + Min( MLU ,RMSe ) ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RMSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2450180064690832}, {"determining": "( Min( ( PN - DDR ) ,( ACS + Const ) ) / ( Const + PN ) )", "choosing": "( Max( MLU,DS ) - ( DS * RRSe ) )", "obj1": 0.9524714828897338, "obj2": 0.019857621950732304}, {"determining": "( ( Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) / RCSe ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5099212585454924}, {"determining": "( ( ( MDR - Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - ( BR + DDR ) ) * FirstVNF_Mem_Server ) ) ) * Max( ( ( ARS + Const ) - DDR ),FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,( AMS * BR ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / Max( ( ( ( MLU / ( ( Min( MLU ,MUR ) * MUM ) * Max( RRSe,MUR ) ) ) + ( ( ( Min( DS ,RMSe ) * MUC ) - MLU ) + DS ) ) / RRSe ),MUM ) )", "obj1": 0.3593155893536122, "obj2": 0.437550126372574}, {"determining": "Min( ( PN - MDR ) ,RRS )", "choosing": "( ( ( Max( MUM,RRSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8098859315589354, "obj2": 0.05968609042174378}, {"determining": "( Max( PN,( CRS - ( MDR + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( ( MRS - Max( PN,AMS ) ) * ARS ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,MUC ),MLU ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5120892268144525}, {"determining": "Min( ( PN - ( BR - Max( ( RRS - Max( MRS,DDR ) ),Max( ( ARS + AMS ),FirstVNF_RAM_Server ) ) ) ) ,Max( BR,( ( Min( MDR ,( Min( AMS ,MDR ) * FirstVNF_CPU ) ) + ( BR * CRS ) ) - Const ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( ( ( CS + ( Max( RMSe,DS ) / ( RRSe * DS ) ) ) - ( ( Max( ( MLU * MLU ),( MUR * CS ) ) + RRSe ) + RRSe ) ),Max( RMSe,DS ) ) - Min( RCSe ,( ( RCSe / Min( ( ( MUR - MUR ) + Max( RRSe,RMSe ) ) ,RRSe ) ) + DS ) ) ) )", "obj1": 0.9847908745247148, "obj2": 0.0021253229190006874}, {"determining": "Min( ( FirstVNF_CPU_Server + AMS ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) )", "choosing": "( ( ( CS * MUM ) / Max( MUC,CS ) ) / Max( CS,DS ) )", "obj1": 0.11406844106463879, "obj2": 0.6370175714553902}, {"determining": "Min( ( PN - MDR ) ,( ( FirstVNF_Mem_Server * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - ( ( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) ) + MRS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( ( ( CS + ( Max( RMSe,DS ) / ( RRSe * DS ) ) ) - ( MUC / RMSe ) ),RCSe ) - Min( RCSe ,CS ) ) )", "obj1": 0.9847908745247148, "obj2": 0.0021253229190006874}, {"determining": "Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUC,RMSe ) )", "obj1": 0.03802281368821293, "obj2": 0.8112601185733456}, {"determining": "( ( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) / ( ( ( MDR - Min( DDR ,PN ) ) * Max( DDR,FirstVNF_Mem ) ) * RRS ) )", "choosing": "( ( RRSe / Max( MUR,DS ) ) + ( ( Max( Max( CS,RCSe ),( Min( RCSe ,( RRSe / ( RMSe + RRSe ) ) ) + ( MUM / DS ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.03612167300380228, "obj2": 0.8148971178378959}, {"determining": "( Min( ARS ,ACS ) + Min( FirstVNF_Mem ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,( CS * Max( ( RRSe + Min( RMSe ,RMSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5106450214457378}, {"determining": "( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server - ( ( MRS * FirstVNF_RAM ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( MUR / Max( Min( MUC ,CS ),( MUM - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ),RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8136882129277566, "obj2": 0.0596255543711357}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * ( DDR - ( FirstVNF_Mem_Server + Const ) ) ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( Min( ( MLU + MUC ) ,CS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) / ( ( ( MDR - Min( Min( Max( PN,FirstVNF_RAM ) ,FirstVNF_CPU ) ,( AMS / PN ) ) ) * Max( DDR,FirstVNF_Mem ) ) * RRS ) )", "choosing": "( ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( Min( MUM ,RCSe ) ,MUC ) ) ) * ( ( Min( CS ,( ( MUR - RRSe ) - Max( MLU,MLU ) ) ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) ) / Max( MUR,DS ) ) + ( ( Max( Max( CS,RCSe ),( Min( RCSe ,( RRSe / ( RMSe + RRSe ) ) ) + ( MUM / DS ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.045627376425855515, "obj2": 0.8066234285281569}, {"determining": "( ( Max( PN,( CRS - ( MDR + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( Max( MLU,DS ) + ( MUC - RMSe ) ) - MUR ) / ( MUC - MUC ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Max( PN,( CRS - ( ( CRS / FirstVNF_CPU_Server ) + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Max( FirstVNF_CPU,Const ) * ( ACS * ARS ) )", "choosing": "( Max( ( DS / ( RRSe * ( CS - ( Max( RRSe,MLU ) + ( ( MUM * MLU ) * Max( MUC,RCSe ) ) ) ) ) ),RMSe ) / Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + ( Max( AMS,FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Min( RRSe ,CS ) - ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( ( ( RCSe - RMSe ) + MUM ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( CRS * ACS ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,( MUC / RMSe ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * Min( ( ( FirstVNF_RAM - Const ) * FirstVNF_CPU ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( MUR + Min( ( MUC * CS ) ,( Min( ( Min( RRSe ,MUR ) - RRSe ) ,MUR ) / DS ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU_Server ) ) - ( ( AMS * RRS ) / ( ARS + Const ) ) )", "choosing": "( Min( CS ,( RMSe - MUM ) ) * ( ( ( MUC + MLU ) / MUR ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * ACS ) / ( ACS - FirstVNF_CPU ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + ( RCSe * MUR ) ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,( DS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR + PN ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + RRSe ) - MUR ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + Min( ACS ,CRS ) )", "choosing": "( Min( RRSe ,CS ) - ( DS + ( ( ( DS / MUR ) * CS ) + ( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Const ) - ( Min( FirstVNF_Mem_Server ,ACS ) + ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / Max( CS,MUM ) ) + ( RMSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,DDR ) - Max( ( MRS + FirstVNF_RAM_Server ),Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) )", "choosing": "Max( ( Max( RCSe,Min( RRSe ,Max( CS,DS ) ) ) + ( ( MUR * Min( Max( ( RCSe / Max( RRSe,MUC ) ),MUM ) ,( RRSe * MUC ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + ( Const / FirstVNF_CPU_Server ) ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + ( ACS * RRS ) ),ARS ) )", "choosing": "Max( ( Max( RCSe,Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( Max( FirstVNF_Mem,( BR / MDR ) ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( CS + ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,BR ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / Max( DDR,( Max( ( ACS / FirstVNF_Mem_Server ),DDR ) / Min( RRS ,( Min( ARS ,FirstVNF_Mem_Server ) - ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Min( ( Min( Min( MUR ,RCSe ) ,( CS + DS ) ) + Max( ( MLU * Min( ( ( Min( MUC ,RRSe ) + RRSe ) + MUM ) ,RCSe ) ),( RCSe - RRSe ) ) ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,Const ) - DDR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * ( MUR * MUR ) ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,( RRS + CRS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - Max( PN,AMS ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( ( Min( ( RMSe - Min( RRSe ,RCSe ) ) ,( MUC * ( MUM + MUC ) ) ) + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ) ) ,( RMSe - ( MUC * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( Max( MRS,( DDR + RRS ) ) / ACS ) ) ) ,Max( FirstVNF_Mem,( BR / MDR ) ) )", "choosing": "( Max( Max( ( RMSe - ( Min( ( DS / CS ) ,MUR ) - MLU ) ),( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,( ( ( MUC - RCSe ) - ( RRSe / MUM ) ) / Max( Max( RMSe,RCSe ),Max( RCSe,CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( Max( DDR,ACS ),( Const * BR ) ) )", "choosing": "Min( ( ( ( MUM + MLU ) * CS ) * Max( ( ( Max( MLU,MUM ) - MLU ) * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( RCSe ,CS ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( MUR / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + MRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( MUM,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( Max( DDR,ACS ),( Const * BR ) ) )", "choosing": "Min( ( ( ( MUM + MLU ) * CS ) * Max( ( ( Max( MLU,MUM ) - MLU ) * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - Min( ( ACS / AMS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,( ( MUC / RMSe ) - Max( MLU,MLU ) ) ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * Max( DDR,FirstVNF_Mem ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( MUR / ( RRSe * DS ) )", "obj1": 0.028517110266159697, "obj2": 0.8304627600588005}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ,( ( MDR * MDR ) * PN ) ) )", "choosing": "( ( Max( Max( ( RCSe + ( MUM / DS ) ),RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.6444866920152091, "obj2": 0.17053749854139774}, {"determining": "Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUC,CS ) )", "obj1": 0.049429657794676805, "obj2": 0.7759956475057832}, {"determining": "( ( Min( ( FirstVNF_RAM * ( Const - MDR ) ) ,FirstVNF_Mem_Server ) * RRS ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * Max( ( MUM - DS ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.060836501901140684, "obj2": 0.6894510312716386}, {"determining": "( PN * Min( ( PN - MDR ) ,( Min( FirstVNF_Mem_Server ,RRS ) + ( ACS + Const ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Min( DS ,RCSe ) - Min( ( DS + MUC ) ,MLU ) ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7015209125475285, "obj2": 0.12053251126511723}, {"determining": "( ( ( MDR - Min( ACS ,( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_Mem_Server ) * ( BR - FirstVNF_Mem_Server ) ) ) ) ) * FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( Min( MUR ,CS ) + ( ( MUM * RMSe ) + RMSe ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.6216730038022814, "obj2": 0.2363550921824188}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ) )", "choosing": "( ( ( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.42015209125475284, "obj2": 0.384390718647742}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( FirstVNF_Mem ,( Max( FirstVNF_RAM,Max( MRS,RRS ) ) * PN ) ) )", "choosing": "( ( ( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,DS ) ) + Min( ( DS / CS ) ,( ( RMSe * RRSe ) + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.4953007829108364}, {"determining": "( ( ( ( CRS + RRS ) - Max( Max( ACS,ARS ),FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) + ( ( Max( RRS,Const ) / ( ACS * FirstVNF_Mem ) ) / ARS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( Max( Min( MLU ,RCSe ),Max( MLU,MUR ) ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( Min( MLU ,MUC ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.5152091254752852, "obj2": 0.3113229055227683}, {"determining": "Max( DDR,Min( Min( Min( ( ACS * RRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( MDR * PN ) ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( Max( MRS,FirstVNF_Mem ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) / Max( ( ( CS * ( MUR - MUC ) ) + MUC ),RMSe ) )", "obj1": 0.3193916349809886, "obj2": 0.4643792014536618}, {"determining": "Min( ( DDR + PN ) ,( Min( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUR - CS ) - MUM ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) + Min( MLU ,DS ) )", "obj1": 0.8669201520912547, "obj2": 0.03418025781007494}, {"determining": "Min( ( CRS - ( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( DDR ,MRS ) ) )", "choosing": "( ( ( ( RRSe / DS ) - ( ( DS * Max( Min( Min( MLU ,DS ) ,( MUM + MUR ) ),RRSe ) ) - Min( CS ,RMSe ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) )", "obj1": 0.3840304182509506, "obj2": 0.4068290030292969}, {"determining": "( ( ( MDR - Min( ACS ,( FirstVNF_RAM_Server / ( ( ( ARS + Const ) - DDR ) * ( BR - FirstVNF_Mem_Server ) ) ) ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / ( MUM / RCSe ) ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUR / RRSe ) / ( DS * RMSe ) ) + ( ( MUM * RMSe ) + RMSe ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.5988593155893536, "obj2": 0.2524090372007074}, {"determining": "Min( ( Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) / BR ) ,Min( ( PN - FirstVNF_Mem_Server ) ,( Const * RRS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),MLU ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( Max( CS,( MLU * RCSe ) ) / ( MUR * DS ) ) ,Max( ( RCSe / Max( RRSe,MUC ) ),MUM ) ) )", "obj1": 0.4752851711026616, "obj2": 0.3817828373379088}, {"determining": "( ( ( ( CRS + RRS ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( MUC / ( RRSe * DS ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.5684410646387833, "obj2": 0.28661506112613416}, {"determining": "( Max( ( FirstVNF_RAM / Const ),FirstVNF_RAM_Server ) * ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( CS - ( RCSe * Min( DS ,MUC ) ) ),MUC ) * ( CS - MUR ) )", "obj1": 0.9391634980988594, "obj2": 0.0294808651734395}, {"determining": "( Max( PN,( CRS - Max( MDR,MRS ) ) ) - ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) * Min( Min( DDR ,( Max( FirstVNF_CPU,Const ) * Min( AMS ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ,MRS ) ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( ( ( MLU * DS ) / Max( CS,DS ) ) * ( ( ( CS / Max( RRSe,RRSe ) ) + RMSe ) - RMSe ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2914015070136341}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,DS ) ) / ( ( CS / RMSe ) * Min( RRSe ,CS ) ) )", "obj1": 0.15019011406844107, "obj2": 0.6241413542930775}, {"determining": "Min( ( PN - ( DDR + FirstVNF_Mem ) ) ,MDR )", "choosing": "( ( Min( ( ( MUC - MUC ) - Max( MLU,CS ) ) ,MLU ) * ( CS + RCSe ) ) - ( DS / ( CS + RRSe ) ) )", "obj1": 0.7661596958174905, "obj2": 0.07611944114501462}, {"determining": "( ( ( MDR - Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - ( BR + DDR ) ) * FirstVNF_Mem_Server ) ) ) * Max( ( ( ARS + Const ) - DDR ),FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,( AMS * BR ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / Max( ( ( ( MLU / ( ( Min( MLU ,MUR ) * MUM ) * Max( RRSe,MUR ) ) ) + ( ( ( Min( DS ,RMSe ) * MUC ) - MLU ) + DS ) ) / RRSe ),MUM ) )", "obj1": 0.3745247148288973, "obj2": 0.42705504283767964}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ACS - FirstVNF_Mem ) )", "choosing": "( Max( ( MLU / RMSe ),( Min( ( RMSe - MUC ) ,MUM ) / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( RRSe - MLU ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7604562737642585, "obj2": 0.09253626372609408}, {"determining": "( ( ( ( ( AMS * ARS ) - ( ACS / Min( RRS ,MRS ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) )", "choosing": "( ( ( MUC - MUC ) - CS ) / ( MUC / RMSe ) )", "obj1": 0.49619771863117873, "obj2": 0.3323253677063596}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,CRS ) / ( ( ( FirstVNF_CPU / Max( MRS,ARS ) ) * ( Const - BR ) ) * ARS ) ) )", "choosing": "( ( ( RCSe - DS ) / Min( ( RCSe - ( MUC * RCSe ) ) ,( RRSe * MUC ) ) ) / CS )", "obj1": 0.12547528517110265, "obj2": 0.6274652144540089}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) + ( RRS - AMS ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( MLU + ( Min( Max( RRSe,RCSe ) ,Max( DS,MLU ) ) - RCSe ) ) ) - RRSe ) * ( MUM / RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.11216730038022814, "obj2": 0.6673736300614103}, {"determining": "Min( ( PN - MDR ) ,FirstVNF_RAM_Server )", "choosing": "( ( ( MUR / Max( Min( MUC ,CS ),( DS - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7927756653992395, "obj2": 0.06668289419269294}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / ( ( MDR - Min( ACS ,( DDR + FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) * ( MUM / RCSe ) ) ,Max( ( ( ( MUR / RRSe ) / ( DS * RMSe ) ) + ( ( MUM * RMSe ) + Min( MLU ,RMSe ) ) ),RRSe ) )", "obj1": 0.10076045627376426, "obj2": 0.669047953993565}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - ( ( CS * RRSe ) * Max( ( MUR * MUC ),MUM ) ) ) - RRSe ) * Max( ( CS * Max( RRSe,DS ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.16159695817490494, "obj2": 0.5897737837808869}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) + Max( ( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) * ( MDR / Min( ( ( DDR * CRS ) + DDR ) ,RRS ) ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * ( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,( ( ( RRSe * ( MUC - RCSe ) ) * Max( RMSe,MUM ) ) * MUR ) ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.06844106463878327, "obj2": 0.6729355463741924}, {"determining": "Min( ( FirstVNF_CPU_Server + AMS ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) )", "choosing": "( ( ( CS * MUM ) / Max( MUC,CS ) ) / Max( CS,DS ) )", "obj1": 0.11406844106463879, "obj2": 0.6370175714553902}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( ( BR + FirstVNF_Mem_Server ) / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Min( ( PN - MDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) * ( Min( RCSe ,MLU ) / RCSe ) ) ,Max( MUM,Max( ( CS - ( RCSe * MUC ) ),MUC ) ) )", "obj1": 0.7262357414448669, "obj2": 0.09525015171852926}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Min( ( ( RRS - ACS ) - ( FirstVNF_CPU_Server * ( DDR * ( RRS / MRS ) ) ) ) ,Max( FirstVNF_Mem,( Min( ACS ,BR ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( CS + ( MUM / ( DS / RCSe ) ) ) + RMSe ) * ( RMSe + RCSe ) ) * ( CS + RCSe ) ) - ( RRSe + DS ) )", "obj1": 0.8250950570342205, "obj2": 0.051483338769350434}, {"determining": "Min( ( DDR + PN ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,( Min( Max( Max( FirstVNF_Mem_Server,RRS ),Max( MRS,CRS ) ) ,FirstVNF_Mem_Server ) * RRS ) ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUR - ( Max( ( RCSe * MUC ),MUM ) - ( MUM + Max( CS,MLU ) ) ) ) - ( Max( MUR,( DS - RCSe ) ) / CS ) ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) + Min( MLU ,DS ) )", "obj1": 0.21863117870722434, "obj2": 0.547968204580437}, {"determining": "Min( ( FirstVNF_RAM_Server / CRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * RRS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),MLU ) + Max( RCSe,MUR ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.48098859315589354, "obj2": 0.35965274090641297}, {"determining": "Min( ( FirstVNF_Mem_Server / MDR ) ,Min( ( FirstVNF_RAM_Server - MDR ) ,( MDR * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + ( ( ( MUR - CS ) - ( Max( MUR,( RCSe - RCSe ) ) / CS ) ) - RRSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.2623574144486692, "obj2": 0.5094766113421688}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.1806083650190114, "obj2": 0.5731283299243497}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,Min( ( PN - ( FirstVNF_CPU_Server * DDR ) ) ,( ACS + Const ) ) ) / ( ( MDR / FirstVNF_CPU_Server ) * ARS ) ) )", "choosing": "( ( ( RCSe - DS ) / Max( MUC,( MLU * RRSe ) ) ) / ( DS * RRSe ) )", "obj1": 0.043726235741444866, "obj2": 0.7910889027237703}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ,( ( ( ARS - FirstVNF_RAM_Server ) * MDR ) * PN ) ) )", "choosing": "( ( Max( Max( ( RCSe + RMSe ),RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8593155893536122, "obj2": 0.05012265143844808}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( Max( ( ( FirstVNF_RAM_Server * ( BR + DDR ) ) / ( PN * ( Const / FirstVNF_Mem_Server ) ) ),PN ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MUM ) + MUC ) / ( ( DS + RCSe ) / Max( MUM,MUM ) ) ) ) ) - ( RCSe + MLU ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.1958174904942966, "obj2": 0.5567708988691673}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / CS ) ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.17110266159695817, "obj2": 0.5760148240094232}, {"determining": "( Min( ( PN - DDR ) ,( ACS + Const ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( MDR * PN ) ) )", "choosing": "( Max( MLU,DS ) - ( DS * ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) ) )", "obj1": 0.9714828897338403, "obj2": 0.0120086742557382}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Min( ( PN - MDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) * ( Min( RCSe ,MLU ) / RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7281368821292775, "obj2": 0.09493953546651834}, {"determining": "( ( ( MDR - Min( DDR ,( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / ( ACS / AMS ) ) ) ) * Max( DDR,FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( CS + RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( Max( MUR,DS ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.33269961977186313, "obj2": 0.45398254366612095}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - Min( ACS ,( RRS * ACS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,RCSe ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.2376425855513308, "obj2": 0.5159689097164154}, {"determining": "( ( ( ( PN - DDR ) / ( ( MDR - Max( FirstVNF_CPU,FirstVNF_CPU ) ) * Max( DDR,FirstVNF_Mem ) ) ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MLU ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) ) ) - RRSe ) * Max( ( CS * Min( RMSe ,MUC ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.19391634980988592, "obj2": 0.560232298327182}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,CRS ) / ( Const * ( ( PN + CRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe + MUM ) / Max( CS,DS ) )", "obj1": 0.35361216730038025, "obj2": 0.4462704876799818}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( Max( ( ( FirstVNF_RAM_Server * ( BR + DDR ) ) / ( PN * ( Const / FirstVNF_Mem_Server ) ) ),PN ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MUM ) + MUC ) / ( ( DS + RCSe ) / Max( MUM,MUM ) ) ) ) ) - ( RCSe + MLU ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.22053231939163498, "obj2": 0.5403447270594546}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( Max( MUM,( MUR * MLU ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.49049429657794674, "obj2": 0.33592347618914875}, {"determining": "( Min( ( PN - MDR ) ,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( Max( MUR,DS ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ) ),MLU ) ) )", "obj1": 0.3403041825095057, "obj2": 0.45054141689660165}, {"determining": "( ( ( Min( DDR ,Min( ( PN - MDR ) ,MDR ) ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) / ( ( ( MDR - Min( DDR ,PN ) ) * Max( DDR,FirstVNF_Mem ) ) * RRS ) )", "choosing": "( ( ( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,MLU ) * ( CS + RCSe ) ) - Min( MLU ,( ( ( MUC - RCSe ) - ( RRSe / MUM ) ) / Max( Max( RMSe,RCSe ),Max( RCSe,CS ) ) ) ) ) + ( ( Max( Max( CS,RCSe ),( Min( RCSe ,( RRSe / ( RMSe + RRSe ) ) ) + ( MUM / DS ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.039923954372623575, "obj2": 0.8030260658100623}, {"determining": "( Min( ( PN - ( DDR / MRS ) ) ,( ACS + Const ) ) / ( Const + MDR ) )", "choosing": "( ( ( RCSe * ( MUC + ( MLU - ( MLU / MUM ) ) ) ) + MLU ) - ( DS * ( ( ( MUR / Max( Min( MUC ,CS ),( MUM - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019099300002847527}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + ( AMS * ARS ) ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - ( ( CS * RRSe ) * Max( ( MUR * MUC ),MUM ) ) ) - RRSe ) * Max( ( CS * Max( RRSe,DS ) ),DS ) ) ,( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.16159695817490494, "obj2": 0.5897737837808869}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Max( ( FirstVNF_RAM_Server + ARS ),( ( FirstVNF_Mem_Server - DDR ) - FirstVNF_Mem_Server ) ) ) + Max( ( FirstVNF_Mem_Server - ( ( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) ) + MRS ) ),( Const * Max( DDR,RRS ) ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * ( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + CS ) ) ,( RMSe + RMSe ) )", "obj1": 0.06273764258555133, "obj2": 0.6776414523700145}, {"determining": "Min( ( AMS / BR ) ,Min( Min( FirstVNF_Mem_Server ,MDR ) ,( MDR * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),Min( MUC ,MUC ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,( MLU / CS ) ) - Min( ( Max( ( Min( ( MUR + RCSe ) ,( MUC - MUC ) ) * CS ),( RMSe * MLU ) ) / MLU ) ,MLU ) ) )", "obj1": 0.8612167300380228, "obj2": 0.047962811167879774}, {"determining": "( ( ( ( CRS + RRS ) - Max( Max( ACS,ARS ),FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) + ( ( Max( RRS,Const ) / ( ACS * FirstVNF_Mem ) ) / ARS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( Max( Min( MLU ,RCSe ),Max( MLU,MUR ) ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( Min( MLU ,MUC ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.4847908745247148, "obj2": 0.3484821890019347}, {"determining": "( ( ( MDR - Min( DDR ,PN ) ) * Max( Min( ACS ,( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_Mem_Server ) * ( Const - FirstVNF_Mem_Server ) ) ) ),FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - Min( RCSe ,RCSe ) ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( RRSe - ( RMSe / MUC ) ) + ( RMSe * RCSe ) ),( CS * ( MUM + MLU ) ) ),MLU ) ) )", "obj1": 0.3593155893536122, "obj2": 0.437550126372574}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * Max( ( BR + ( ( DDR / PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ),CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,( Min( MUC ,( CS + Min( MUR ,MUM ) ) ) + ( MUM / RRSe ) ) ) * ( CS + RCSe ) ) - ( RRSe - Min( CS ,MLU ) ) ) )", "obj1": 0.8041825095057035, "obj2": 0.06524172199082458}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Min( ( ( ARS - FirstVNF_RAM_Server ) / ARS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( ( RCSe - DS ) / Max( MUC,RMSe ) ) ,MLU ) * ( CS + RCSe ) ) - ( Min( MUC ,CS ) + MUM ) )", "obj1": 0.973384030418251, "obj2": 0.003004682750645462}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( ( Max( CRS,CRS ) / ( Const * ARS ) ) - ( FirstVNF_RAM * Min( RRS ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) ,( MDR * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - ( MUM * MUM ) ) )", "obj1": 0.9429657794676806, "obj2": 0.026003658996354637}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ACS + Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,CRS ) / ( Const * Min( Const ,PN ) ) ) ) ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( ( DS + ( MUM + CS ) ) + MUM ) - Min( MUM ,Max( RCSe,CS ) ) ) ) ) * Max( ( Max( DS,CS ) / DS ),MUC ) )", "obj1": 0.7053231939163498, "obj2": 0.11450032104173341}, {"determining": "( ( FirstVNF_RAM - ( BR + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( MLU * MUM ) ) * Max( ( MLU + RMSe ),MUC ) )", "obj1": 0.030418250950570342, "obj2": 0.8177853746604327}, {"determining": "( ( ( MDR - Min( ACS ,( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server - ( ( MRS * FirstVNF_RAM ) - FirstVNF_RAM_Server ) ) ) ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUR / RRSe ) / ( DS * RMSe ) ) + ( ( MUM * RMSe ) + RRSe ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RMSe ,RCSe ) ),Min( Max( CS,RCSe ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2450180064690832}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ( PN - MDR ) + Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) ) ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( RCSe - DS ) ) - ( RRSe - Min( RCSe ,MLU ) ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7053231939163498, "obj2": 0.11450032104173341}, {"determining": "( ( ( MDR - Min( ACS ,( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server - ( ( MRS * FirstVNF_CPU ) - FirstVNF_RAM_Server ) ) ) ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUR / RRSe ) / ( DS * RMSe ) ) + ( ( MUM * RMSe ) + RRSe ) ) + ( RMSe * RCSe ) ),( Max( MUC,RMSe ) * Max( ( RRSe + Min( RMSe ,RCSe ) ),Min( Max( CS,RCSe ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.6102661596958175, "obj2": 0.2450180064690832}, {"determining": "( Min( ( PN - DDR ) ,( ACS + Const ) ) / ( Const + PN ) )", "choosing": "( Max( MLU,DS ) - ( DS * RRSe ) )", "obj1": 0.9524714828897338, "obj2": 0.019857621950732304}, {"determining": "Min( ( PN - MDR ) ,RRS )", "choosing": "( ( ( Max( MUM,RRSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8098859315589354, "obj2": 0.05968609042174378}, {"determining": "( ( Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) / RCSe ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5099212585454924}, {"determining": "( ( BR - MDR ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( MUM,( RCSe / ( DS + MUR ) ) ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,Min( MUC ,MUR ) ) ) ) ),MLU ) ) )", "obj1": 0.3593155893536122, "obj2": 0.437550126372574}, {"determining": "Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUC,RMSe ) )", "obj1": 0.03802281368821293, "obj2": 0.8112601185733456}, {"determining": "( ( BR - MDR ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MUC - MUC ) - Max( MUM,( RCSe / ( DS + MUR ) ) ) ) / ( ( Min( MUC ,MUC ) - Max( ( RMSe + CS ),( ( Max( ( MUC / DS ),MUC ) * CS ) + ( RMSe / MUM ) ) ) ) - ( MLU * RRSe ) ) )", "obj1": 0.4828897338403042, "obj2": 0.35174672718694544}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * ( ( RRS - ( ( Const * MDR ) * ( RRS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) ) ) ) ,( FirstVNF_Mem * Min( BR ,Const ) ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,( Min( MUC ,( Min( MLU ,DS ) + MUC ) ) + ( MUM / RRSe ) ) ) * ( CS + RCSe ) ) - ( RRSe / DS ) ) )", "obj1": 0.8193916349809885, "obj2": 0.05449743690578925}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( ( MRS - Max( PN,AMS ) ) * ARS ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,MUC ),MLU ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5120892268144525}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,Max( ( MLU + ( MUM + Min( RMSe ,Max( ( MUM * MUC ),MUR ) ) ) ),Max( RCSe,Max( RRSe,RCSe ) ) ) ) )", "obj1": 0.11406844106463879, "obj2": 0.6370175714553902}, {"determining": "( Max( PN,( CRS - ( MDR + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "Min( ( PN - MDR ) ,( ( FirstVNF_Mem_Server * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - ( ( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) ) + MRS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( ( ( CS + ( Max( RMSe,DS ) / ( RRSe * DS ) ) ) - ( MUC / RMSe ) ),RCSe ) - Min( RCSe ,CS ) ) )", "obj1": 0.9847908745247148, "obj2": 0.0021253229190006874}, {"determining": "Min( ( PN - ( BR - Max( ( RRS - Max( MRS,DDR ) ),Max( ( ARS + AMS ),FirstVNF_RAM_Server ) ) ) ) ,Max( BR,( ( Min( MDR ,( Min( AMS ,MDR ) * FirstVNF_CPU ) ) + ( BR * CRS ) ) - Const ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( ( ( CS + ( Max( RMSe,DS ) / ( RRSe * DS ) ) ) - ( ( Max( ( MLU * MLU ),( MUR * CS ) ) + RRSe ) + RRSe ) ),Max( RMSe,DS ) ) - Min( RCSe ,( ( RCSe / Min( ( ( MUR - MUR ) + Max( RRSe,RMSe ) ) ,RRSe ) ) + DS ) ) ) )", "obj1": 0.9847908745247148, "obj2": 0.0021253229190006874}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ACS + Min( ( FirstVNF_RAM + MDR ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) ) ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( RCSe - DS ) ) - ( RRSe - Min( ( MUM / RCSe ) ,MLU ) ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7034220532319392, "obj2": 0.11499164979427413}, {"determining": "( ( Min( Max( FirstVNF_Mem,( BR / ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) ) ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUC / RMSe ) ) * Max( ( MUC / Min( MLU ,DS ) ),MUC ) )", "obj1": 0.034220532319391636, "obj2": 0.8150587955806987}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,MDR )", "choosing": "( ( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,MLU ) * ( CS + RCSe ) ) - Min( MLU ,Min( MUR ,MLU ) ) )", "obj1": 0.8155893536121673, "obj2": 0.05635157865464626}, {"determining": "( ( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) / ( ( ( MDR - Min( DDR ,PN ) ) * Max( DDR,FirstVNF_Mem ) ) * RRS ) )", "choosing": "( ( RRSe / Max( MUR,DS ) ) + ( ( Max( Max( CS,RCSe ),( Min( RCSe ,( RRSe / ( RMSe + RRSe ) ) ) + ( MUM / DS ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.03612167300380228, "obj2": 0.8148971178378959}, {"determining": "( ( ( ( ( ( ( CRS + RRS ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5106450214457378}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * Max( ( BR + ( ( DDR / PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ),CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,( Min( MUC ,( CS + Min( MUR ,MUM ) ) ) + ( MUM / RRSe ) ) ) * ( CS + RCSe ) ) - ( RRSe - Min( CS ,MLU ) ) ) )", "obj1": 0.8136882129277566, "obj2": 0.057342320182878666}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * Max( ( BR + ( ( DDR / PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ),CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,( Min( MUC ,( CS + Min( MUR ,MUM ) ) ) + ( MUM / RRSe ) ) ) * ( CS + RCSe ) ) - ( RRSe - Min( CS ,MLU ) ) ) )", "obj1": 0.8136882129277566, "obj2": 0.057342320182878666}, {"determining": "( ( Max( PN,( CRS - ( MDR + ( DDR / ( FirstVNF_RAM_Server * Const ) ) ) ) ) - Min( FirstVNF_Mem ,ACS ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( Max( MLU,DS ) + Max( ( MUC / DS ),MUC ) ) - MUR ) / ( MUC - MUC ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( Max( PN,( CRS - ( MDR + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( Max( MLU,DS ) + ( MUC - RMSe ) ) - MUR ) / ( MUC - MUC ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Min( ARS ,ACS ) + Min( FirstVNF_Mem ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,( CS * Max( ( RRSe + Min( RMSe ,RMSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5106450214457378}, {"determining": "( Max( PN,( CRS - ( ( ( FirstVNF_RAM_Server * Const ) * ( FirstVNF_CPU_Server - ACS ) ) + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / ( MUR / Max( ( MUC / DS ),MUC ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( ( Max( BR,( Min( RRS ,FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - Max( MLU,MLU ) ) ) * ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( ( DS / CS ),Min( RMSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,Const ) * ( ACS * ARS ) )", "choosing": "( Max( ( DS / ( RRSe * ( CS - ( Max( RRSe,MLU ) + ( ( MUM * MLU ) * Max( MUC,RCSe ) ) ) ) ) ),RMSe ) / Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) + ( Max( AMS,FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( Min( RRSe ,CS ) - ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( FirstVNF_RAM + Const ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( ( ( RCSe - RMSe ) + MUM ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( CRS * ACS ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,( MUC / RMSe ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * Min( ( ( FirstVNF_RAM - Const ) * FirstVNF_CPU ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( MUR + Min( ( MUC * CS ) ,( Min( ( Min( RRSe ,MUR ) - RRSe ) ,MUR ) / DS ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( FirstVNF_Mem + ARS ) / FirstVNF_CPU_Server ) ) - ( ( AMS * RRS ) / ( ARS + Const ) ) )", "choosing": "( Min( CS ,( RMSe - MUM ) ) * ( ( ( MUC + MLU ) / MUR ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * ACS ) / ( ACS - FirstVNF_CPU ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + ( RCSe * MUR ) ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_RAM + FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,( DS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( Max( ( PN - ACS ),( Min( RRS ,FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) ) + ( FirstVNF_Mem_Server + ACS ) )", "choosing": "( Min( ( ( MUR * CS ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - Max( MLU,MLU ) ) ) * ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * ( RRSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( Max( DDR,ACS ),( Const * BR ) ) )", "choosing": "Min( ( ( ( MUM + MLU ) * CS ) * Max( ( ( Max( MLU,MUM ) - MLU ) * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * Max( DDR,FirstVNF_Mem ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( MUR / ( RRSe * DS ) )", "obj1": 0.028517110266159697, "obj2": 0.8304627600588005}, {"determining": "( ( ( ( CRS + RRS ) - ( ( FirstVNF_Mem_Server * PN ) - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / DS ) - DS ) / RMSe ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( Min( MLU ,MUC ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.5551330798479087, "obj2": 0.2817225956587262}, {"determining": "Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUC,CS ) )", "obj1": 0.049429657794676805, "obj2": 0.7759956475057832}, {"determining": "( ( Min( ( FirstVNF_RAM * ( Const - MDR ) ) ,FirstVNF_Mem_Server ) * RRS ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * Max( ( MUM - DS ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.060836501901140684, "obj2": 0.6894510312716386}, {"determining": "( ( ( MDR - Min( ACS ,( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_Mem_Server ) * ( BR - FirstVNF_Mem_Server ) ) ) ) ) * FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( Min( MUR ,CS ) + ( ( MUM * RMSe ) + RMSe ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.6216730038022814, "obj2": 0.2363550921824188}, {"determining": "( Min( ( PN - ( ( RRS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - MRS ) ) * ( MDR / MDR ) ) ) ,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( Max( MUR,MUM ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ) ),MLU ) ) )", "obj1": 0.5988593155893536, "obj2": 0.24078122602896332}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ,( ( MDR * MDR ) * PN ) ) )", "choosing": "( ( Max( Max( ( RCSe + ( MUM / DS ) ),RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.6444866920152091, "obj2": 0.17053749854139774}, {"determining": "( ( ( ( CRS + RRS ) - Max( Max( ACS,ARS ),FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) + ( ( Max( RRS,Const ) / ( ACS * FirstVNF_Mem ) ) / ARS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( Max( Min( MLU ,RCSe ),Max( MLU,MUR ) ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( Min( MLU ,MUC ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.5152091254752852, "obj2": 0.3113229055227683}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ,( ( MDR * FirstVNF_RAM ) * PN ) ) )", "choosing": "( ( Max( Max( ( RCSe + ( MUM / DS ) ),RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,Max( Max( Min( RCSe ,( MUC / RMSe ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.6425855513307985, "obj2": 0.17074136324617584}, {"determining": "Min( ( CRS - ( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,Min( DDR ,MRS ) ) )", "choosing": "( ( ( ( RRSe / DS ) - ( ( DS * Max( Min( Min( MLU ,DS ) ,( MUM + MUR ) ),RRSe ) ) - Min( CS ,RMSe ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) )", "obj1": 0.3840304182509506, "obj2": 0.4068290030292969}, {"determining": "Min( ( Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) / BR ) ,Min( ( PN - FirstVNF_Mem_Server ) ,( Const * RRS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),MLU ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( Max( CS,( MLU * RCSe ) ) / ( MUR * DS ) ) ,Max( ( RCSe / Max( RRSe,MUC ) ),MUM ) ) )", "obj1": 0.4752851711026616, "obj2": 0.3817828373379088}, {"determining": "( Max( ( FirstVNF_RAM / Const ),FirstVNF_RAM_Server ) * ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( CS - ( RCSe * Min( DS ,MUC ) ) ),MUC ) * ( CS - MUR ) )", "obj1": 0.9391634980988594, "obj2": 0.0294808651734395}, {"determining": "( ( ( ( Min( ( Min( Min( FirstVNF_CPU_Server ,MDR ) ,CRS ) / ACS ) ,Max( ( RRS + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ),MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ) )", "choosing": "( ( ( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) - MUC ) - Max( DS,CS ) ) / ( ( DS / RRSe ) - ( RCSe + MUC ) ) )", "obj1": 0.42015209125475284, "obj2": 0.384390718647742}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,DS ) ) / ( ( CS / RMSe ) * Min( RRSe ,CS ) ) )", "obj1": 0.15019011406844107, "obj2": 0.6241413542930775}, {"determining": "Min( ( DDR + PN ) ,( Min( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( MUR - CS ) - MUM ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) + Min( MLU ,DS ) )", "obj1": 0.8669201520912547, "obj2": 0.03418025781007494}, {"determining": "( Min( ( PN - MDR ) ,Min( CRS ,Const ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( Min( ( CS - RCSe ) ,( RRSe + RMSe ) ) * RCSe ) ),( Max( MUR,DS ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ) ),MLU ) ) )", "obj1": 0.31749049429657794, "obj2": 0.48592028817521943}, {"determining": "( PN * Min( ( PN - MDR ) ,( Min( FirstVNF_Mem_Server ,RRS ) + ( ACS + Const ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Min( DS ,RCSe ) - Min( ( DS + MUC ) ,MLU ) ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7015209125475285, "obj2": 0.12053251126511723}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * Max( ( BR + ( ( DDR / PN ) * Min( PN ,FirstVNF_RAM_Server ) ) ),CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( RCSe - DS ) ) - ( RRSe - Min( RCSe ,MLU ) ) ) ) ,( Min( MUC ,( CS + Min( MUR ,MUM ) ) ) + ( MUM / RRSe ) ) ) * ( CS + RCSe ) ) - ( RRSe - Min( CS ,MLU ) ) ) )", "obj1": 0.7927756653992395, "obj2": 0.06444181440663561}, {"determining": "( PN * Min( ( PN - MDR ) ,( Min( FirstVNF_Mem_Server ,RRS ) + ( ACS + Const ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Min( DS ,RCSe ) - Min( ( DS + MUC ) ,MLU ) ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7015209125475285, "obj2": 0.12053251126511723}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Min( Min( ( PN - MDR ) ,RRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) * ( CS + RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7547528517110266, "obj2": 0.08102804471883784}, {"determining": "Min( ( PN - ( DDR + FirstVNF_Mem ) ) ,MDR )", "choosing": "( ( Min( ( ( MUC - MUC ) - Max( MLU,CS ) ) ,MLU ) * ( CS + RCSe ) ) - ( DS / ( CS + RRSe ) ) )", "obj1": 0.7661596958174905, "obj2": 0.07611944114501462}, {"determining": "( ( ( MDR - Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - ( BR + DDR ) ) * FirstVNF_Mem_Server ) ) ) * Max( ( ( ARS + Const ) - DDR ),FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,( AMS * BR ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / Max( ( ( ( MLU / ( ( Min( MLU ,MUR ) * MUM ) * Max( RRSe,MUR ) ) ) + ( ( ( Min( DS ,RMSe ) * MUC ) - MLU ) + DS ) ) / RRSe ),MUM ) )", "obj1": 0.3745247148288973, "obj2": 0.42705504283767964}, {"determining": "( Min( ( PN - MDR ) ,Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( Max( MUR,DS ) * Max( ( RRSe + ( RCSe - DS ) ),Min( DS ,RCSe ) ) ) ),MLU ) ) )", "obj1": 0.3593155893536122, "obj2": 0.4340108274465786}, {"determining": "Max( DDR,Min( Min( Min( ( ACS * RRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( MDR * PN ) ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( Max( MRS,FirstVNF_Mem ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) / Max( ( ( CS * ( MUR - MUC ) ) + MUC ),RMSe ) )", "obj1": 0.3193916349809886, "obj2": 0.4643792014536618}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) + ( RRS - AMS ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( MLU + ( Min( Max( RRSe,RCSe ) ,Max( DS,MLU ) ) - RCSe ) ) ) - RRSe ) * ( MUM / RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.11216730038022814, "obj2": 0.6673736300614103}, {"determining": "Max( DDR,Min( Min( Min( ( ACS * RRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( MDR * PN ) ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( Max( MRS,FirstVNF_Mem ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) / Max( ( ( CS * ( MUR - MUC ) ) + MUC ),RMSe ) )", "obj1": 0.3403041825095057, "obj2": 0.44469081707873676}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + ( AMS * ARS ) ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - ( ( CS * RRSe ) * Max( ( MUR * MUC ),MUM ) ) ) - RRSe ) * Max( ( CS * Max( RRSe,DS ) ),DS ) ) ,( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.16159695817490494, "obj2": 0.5897737837808869}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ACS + Min( ( Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) / BR ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) ) ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( RCSe - DS ) ) - ( RRSe - Min( ( MUM / RCSe ) ,RCSe ) ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7053231939163498, "obj2": 0.1141425187602389}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( ( BR + FirstVNF_Mem_Server ) / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Min( ( PN - MDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) * ( Min( RCSe ,MLU ) / RCSe ) ) ,Max( MUM,Max( ( CS - ( RCSe * MUC ) ),MUC ) ) )", "obj1": 0.7262357414448669, "obj2": 0.09525015171852926}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Min( ( PN - MDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) * ( Min( RCSe ,MLU ) / RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7281368821292775, "obj2": 0.09493953546651834}, {"determining": "( ( ( MDR - Min( DDR ,( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / ( ACS / AMS ) ) ) ) * Max( DDR,FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( CS + RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( Max( MUR,DS ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.33269961977186313, "obj2": 0.45398254366612095}, {"determining": "( ( ( ( ( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + AMS ) / ( RRS + DDR ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * ( MUC / ( MUC * DS ) ) ) ),( CS * Max( Max( MUM,RRSe ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.5019011406844106, "obj2": 0.326159535174628}, {"determining": "Min( ( FirstVNF_RAM_Server / CRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * RRS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),MLU ) + Max( RCSe,MUR ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.48098859315589354, "obj2": 0.35965274090641297}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,Max( ( MLU + ( MUM + Min( RMSe ,Max( ( MUM * MUC ),MUR ) ) ) ),Max( RCSe,Max( RRSe,RCSe ) ) ) ) )", "obj1": 0.11406844106463879, "obj2": 0.6370175714553902}, {"determining": "Min( ( ( RRS - ACS ) - ( FirstVNF_CPU_Server * ( DDR * ( RRS / MRS ) ) ) ) ,Max( FirstVNF_Mem,( Min( ACS ,BR ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( CS + ( MUM / ( DS / RCSe ) ) ) + RMSe ) * ( RMSe + RCSe ) ) * ( CS + RCSe ) ) - ( RRSe + DS ) )", "obj1": 0.8250950570342205, "obj2": 0.051483338769350434}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,Min( ( PN - ( FirstVNF_CPU_Server * DDR ) ) ,( ACS + Const ) ) ) / ( ( MDR / FirstVNF_CPU_Server ) * ARS ) ) )", "choosing": "( ( ( RCSe - DS ) / Max( MUC,( MLU * RRSe ) ) ) / ( DS * RRSe ) )", "obj1": 0.043726235741444866, "obj2": 0.7910889027237703}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - Min( ACS ,( RRS * ACS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,( ( MUR - CS ) - MUM ) ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.2813688212927757, "obj2": 0.49139647422193095}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ,( ( ( ARS - FirstVNF_RAM_Server ) * MDR ) * PN ) ) )", "choosing": "( ( Max( Max( ( RCSe + RMSe ),RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8593155893536122, "obj2": 0.05012265143844808}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,CRS ) / ( ( ( FirstVNF_CPU / Max( MRS,ARS ) ) * ( Const - BR ) ) * ARS ) ) )", "choosing": "( ( ( RCSe - DS ) / Min( ( RCSe - ( MUC * RCSe ) ) ,( RRSe * MUC ) ) ) / CS )", "obj1": 0.12547528517110265, "obj2": 0.6274652144540089}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ) )", "choosing": "( ( ( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.42015209125475284, "obj2": 0.384390718647742}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / CS ) ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.17110266159695817, "obj2": 0.5760148240094232}, {"determining": "( ( ( PN * Max( FirstVNF_Mem_Server,MRS ) ) * RRS ) + Max( ( Min( Max( PN,FirstVNF_CPU ) ,Min( ( ( Const * PN ) / ( Const * ARS ) ) ,Const ) ) * ( MDR / Min( ( ( DDR * CRS ) + DDR ) ,RRS ) ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( Min( RMSe ,RMSe ) + MUC ) ) ) - RRSe ) * ( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,( ( ( RRSe * ( MUC - RCSe ) ) * Max( RMSe,MUM ) ) * MUR ) ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.07984790874524715, "obj2": 0.6704309621895581}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( FirstVNF_Mem ,( Max( FirstVNF_RAM,Max( MRS,RRS ) ) * PN ) ) )", "choosing": "( ( ( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,DS ) ) + Min( ( DS / CS ) ,( ( RMSe * RRSe ) + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.4953007829108364}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / ( ( MDR - Min( ACS ,( DDR + FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) * ( MUM / RCSe ) ) ,Max( ( ( ( MUR / RRSe ) / ( DS * RMSe ) ) + ( ( MUM * RMSe ) + Min( MLU ,RMSe ) ) ),RRSe ) )", "obj1": 0.10076045627376426, "obj2": 0.669047953993565}, {"determining": "Min( ( PN - MDR ) ,( DDR - ( FirstVNF_CPU - Min( ( ( ARS - FirstVNF_RAM_Server ) / ARS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( ( MLU - DS ) / Max( MUC,RMSe ) ) ,MLU ) * ( CS + RCSe ) ) - ( Min( MUC ,CS ) + MUM ) )", "obj1": 0.9619771863117871, "obj2": 0.006324536421499039}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( Max( ( ( FirstVNF_RAM_Server * ( BR + DDR ) ) / ( PN * ( Const / FirstVNF_Mem_Server ) ) ),PN ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MUM ) + MUC ) / ( ( DS + RCSe ) / Max( MUM,MUM ) ) ) ) ) - ( RCSe + MLU ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.22053231939163498, "obj2": 0.5403447270594546}, {"determining": "( ( ( ( PN - DDR ) / ( ( MDR - Max( FirstVNF_CPU,FirstVNF_CPU ) ) * Max( DDR,FirstVNF_Mem ) ) ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MLU ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) ) ) - RRSe ) * Max( ( CS * Min( RMSe ,MUC ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.19391634980988592, "obj2": 0.560232298327182}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( Max( ( ( FirstVNF_RAM_Server * ( BR + DDR ) ) / ( PN * ( Const / FirstVNF_Mem_Server ) ) ),PN ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MUM ) + MUC ) / ( ( DS + RCSe ) / Max( MUM,MUM ) ) ) ) ) - ( RCSe + MLU ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.1958174904942966, "obj2": 0.5567708988691673}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - ( Max( CRS,CRS ) / ( Const * ARS ) ) ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( Max( Max( CS,RCSe ),( MUR / CS ) ),MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.21102661596958175, "obj2": 0.5457469483435153}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( Max( MUM,( MUR * MLU ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.49049429657794674, "obj2": 0.33592347618914875}, {"determining": "( ( ( ( DDR / FirstVNF_Mem_Server ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,DS ) / Max( Max( MUC,MUC ),MLU ) ) )", "obj1": 0.25475285171102663, "obj2": 0.4998368503876641}, {"determining": "( ( ( Min( DDR ,Min( ( PN - MDR ) ,MDR ) ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) / ( ( ( MDR - Min( DDR ,PN ) ) * Max( DDR,FirstVNF_Mem ) ) * RRS ) )", "choosing": "( ( ( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,MLU ) * ( CS + RCSe ) ) - Min( MLU ,( ( ( MUC - RCSe ) - ( RRSe / MUM ) ) / Max( Max( RMSe,RCSe ),Max( RCSe,CS ) ) ) ) ) + ( ( Max( Max( CS,RCSe ),( Min( RCSe ,( RRSe / ( RMSe + RRSe ) ) ) + ( MUM / DS ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.039923954372623575, "obj2": 0.8030260658100623}, {"determining": "Min( ( PN - MDR ) ,RRS )", "choosing": "( ( ( Max( MUM,RRSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8098859315589354, "obj2": 0.05968609042174378}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - Min( ACS ,PN ) ) * Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - ( BR + DDR ) ) * FirstVNF_Mem_Server ) ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,RCSe ),( ( Min( DS ,RMSe ) * MUC ) - MLU ) ) ) / Max( Max( MUC,( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5266701292762571}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - Min( ACS ,( RRS * ACS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,RCSe ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.2376425855513308, "obj2": 0.5159689097164154}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - ( ( CS * RRSe ) * Max( ( MUR * MUC ),MUM ) ) ) - RRSe ) * Max( ( CS * Max( RRSe,DS ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.16159695817490494, "obj2": 0.5897737837808869}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Max( ( FirstVNF_RAM_Server + ARS ),( ( FirstVNF_Mem_Server - DDR ) - FirstVNF_Mem_Server ) ) ) + Max( ( FirstVNF_Mem_Server - ( ( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) ) + MRS ) ),( Const * Max( DDR,RRS ) ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * ( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + CS ) ) ,( RMSe + RMSe ) )", "obj1": 0.06273764258555133, "obj2": 0.6776414523700145}, {"determining": "( ( ( ( CRS + RRS ) - Max( Max( ACS,ARS ),FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) + ( ( Max( RRS,Const ) / ( ACS * FirstVNF_Mem ) ) / ARS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( Max( Min( MLU ,RCSe ),Max( MLU,MUR ) ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( Min( MLU ,MUC ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.4847908745247148, "obj2": 0.3484821890019347}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) + Max( ( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) * ( MDR / Min( ( ( DDR * CRS ) + DDR ) ,RRS ) ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * ( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,( ( ( RRSe * ( MUC - RCSe ) ) * Max( RMSe,MUM ) ) * MUR ) ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.06844106463878327, "obj2": 0.6729355463741924}, {"determining": "( Min( ( PN - ( DDR / MRS ) ) ,( ACS + Const ) ) / ( Const + MDR ) )", "choosing": "( ( ( RCSe * ( MUC + ( MLU - ( MLU / MUM ) ) ) ) + MLU ) - ( DS * ( ( ( MUR / Max( Min( MUC ,CS ),( MUM - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019099300002847527}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.1806083650190114, "obj2": 0.5731283299243497}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( ( Max( CRS,CRS ) / ( Const * ARS ) ) - ( FirstVNF_RAM * Min( RRS ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) ,( MDR * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - ( MUM * MUM ) ) )", "obj1": 0.9429657794676806, "obj2": 0.026003658996354637}, {"determining": "( ( ( ( ( ( ( CRS + RRS ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) ) - Min( ACS ,( Const * PN ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( CS * Max( ( RRSe + Min( RCSe ,CS ) ),Min( DS ,CS ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.23193916349809887, "obj2": 0.5261747642298041}, {"determining": "Min( ( AMS / BR ) ,Min( Min( FirstVNF_Mem_Server ,MDR ) ,( MDR * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),Min( MUC ,MUC ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,( MLU / CS ) ) - Min( ( Max( ( Min( ( MUR + RCSe ) ,( MUC - MUC ) ) * CS ),( RMSe * MLU ) ) / MLU ) ,MLU ) ) )", "obj1": 0.8612167300380228, "obj2": 0.047962811167879774}, {"determining": "( ( ( ( ( AMS * ARS ) - ( ACS / Min( RRS ,MRS ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) )", "choosing": "( ( ( MUC - MUC ) - CS ) / ( MUC / RMSe ) )", "obj1": 0.49619771863117873, "obj2": 0.3323253677063596}, {"determining": "( ( Max( PN,Max( ( CRS * ( Const + AMS ) ),ARS ) ) + ( PN / FirstVNF_RAM ) ) + Min( FirstVNF_Mem ,Max( MDR,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,DS ) ) / ( ( ( MUR * ( MLU * ( RRSe + ( ( CS - MUC ) + ( MLU + RRSe ) ) ) ) ) - ( ( ( Max( ( RMSe + RMSe ),RCSe ) + CS ) / ( MLU - ( RRSe * RMSe ) ) ) / ( ( MUR + Min( ( MUR - MUM ) ,MUC ) ) + ( CS + MUM ) ) ) ) / ( Min( DS ,( MUC * MUR ) ) * Max( ( RRSe - MUC ),RMSe ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6317699725303051}, {"determining": "Min( ( DDR + ACS ) ,( Min( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,Max( Max( CS,RCSe ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) + Min( MLU ,DS ) )", "obj1": 0.8650190114068441, "obj2": 0.034645415642207696}, {"determining": "( ( FirstVNF_RAM - ( BR + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( MLU * MUM ) ) * Max( ( MLU + RMSe ),MUC ) )", "obj1": 0.030418250950570342, "obj2": 0.8177853746604327}, {"determining": "( Min( ( PN - DDR ) ,( ACS + Const ) ) / ( Const + PN ) )", "choosing": "( Max( MLU,DS ) - ( DS * RRSe ) )", "obj1": 0.9524714828897338, "obj2": 0.019857621950732304}, {"determining": "( ( Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) / RCSe ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5099212585454924}, {"determining": "Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUC,RMSe ) )", "obj1": 0.03802281368821293, "obj2": 0.8112601185733456}, {"determining": "( ( BR - MDR ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MUC - MUC ) - Max( MUM,( RCSe / ( DS + MUR ) ) ) ) / ( ( Min( MUC ,MUC ) - Max( ( RMSe + CS ),( ( Max( ( MUC / DS ),MUC ) * CS ) + ( RMSe / MUM ) ) ) ) - ( MLU * RRSe ) ) )", "obj1": 0.4828897338403042, "obj2": 0.35174672718694544}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( DS - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.1806083650190114, "obj2": 0.5731283299243497}, {"determining": "( ( ( ( Min( CRS ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - DS ) / Max( MLU,MUC ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.21292775665399238, "obj2": 0.5449767945128697}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Const * ARS ) ) - Min( Min( ACS ,PN ) ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,( CS * Max( ( RRSe + Min( RMSe ,DS ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.25285171102661597, "obj2": 0.5013412963546947}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Min( ( MDR / ARS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( ( RCSe - DS ) / Max( MUC,RMSe ) ) ,MLU ) * ( CS + RCSe ) ) - ( Min( Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ,CS ) + MUM ) )", "obj1": 0.9714828897338403, "obj2": 0.0032761460964290524}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Min( ( ( ARS - FirstVNF_RAM_Server ) / ARS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( ( RCSe - DS ) / Max( MUC,RMSe ) ) ,MLU ) * ( CS + RCSe ) ) - ( Min( MUC ,CS ) + MUM ) )", "obj1": 0.973384030418251, "obj2": 0.003004682750645462}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( ( MRS - Max( PN,AMS ) ) * ARS ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,MUC ),MLU ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5120892268144525}, {"determining": "( Max( PN,( CRS - ( MDR + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - RMSe ) + ( RCSe / DS ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "Min( ( PN - ( BR - Max( ( RRS - Max( MRS,DDR ) ),Max( ( ARS + AMS ),FirstVNF_RAM_Server ) ) ) ) ,Max( BR,( ( Min( MDR ,( Min( AMS ,MDR ) * FirstVNF_CPU ) ) + ( BR * CRS ) ) - Const ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( ( ( CS + ( Max( RMSe,DS ) / ( RRSe * DS ) ) ) - ( ( Max( ( MLU * MLU ),( MUR * CS ) ) + RRSe ) + RRSe ) ),Max( RMSe,DS ) ) - Min( RCSe ,( ( RCSe / Min( ( ( MUR - MUR ) + Max( RRSe,RMSe ) ) ,RRSe ) ) + DS ) ) ) )", "obj1": 0.9847908745247148, "obj2": 0.0021253229190006874}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - Min( ACS ,( RRS * ACS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,RCSe ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.2813688212927757, "obj2": 0.49139647422193095}, {"determining": "Min( ( PN - MDR ) ,( ( FirstVNF_Mem_Server * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - ( ( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) ) + MRS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( ( ( CS + ( Max( RMSe,DS ) / ( RRSe * DS ) ) ) - ( MUC / RMSe ) ),RCSe ) - Min( RCSe ,CS ) ) )", "obj1": 0.9847908745247148, "obj2": 0.0021253229190006874}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ( PN - MDR ) + Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,CRS ) / ( ( DDR * FirstVNF_Mem_Server ) * ARS ) ) ) ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( RCSe - DS ) ) - ( RRSe - MUR ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7034220532319392, "obj2": 0.11496562305709793}, {"determining": "Min( ( ( RRS - ACS ) - ( FirstVNF_CPU_Server * ( DDR * ( RRS / MRS ) ) ) ) ,Max( FirstVNF_Mem,( Min( ACS ,BR ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( CS + ( MUM / ( DS / RCSe ) ) ) + RMSe ) * ( RMSe + RCSe ) ) * ( CS + RCSe ) ) - ( RRSe + DS ) )", "obj1": 0.8212927756653993, "obj2": 0.052806114357359504}, {"determining": "( ( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) / ( ( ( MDR - Min( DDR ,PN ) ) * Max( DDR,FirstVNF_Mem ) ) * RRS ) )", "choosing": "( ( RRSe / Max( MUR,DS ) ) + ( ( Max( Max( CS,RCSe ),( Min( RCSe ,( RRSe / ( RMSe + RRSe ) ) ) + ( MUM / DS ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.03612167300380228, "obj2": 0.8148971178378959}, {"determining": "Min( ( FirstVNF_CPU_Server + AMS ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) )", "choosing": "( ( ( CS * MUM ) / Max( MUC,CS ) ) / Max( CS,DS ) )", "obj1": 0.11406844106463879, "obj2": 0.6370175714553902}, {"determining": "( Min( ARS ,ACS ) + Min( FirstVNF_Mem ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,( CS * Max( ( RRSe + Min( RMSe ,RMSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5106450214457378}, {"determining": "( Max( FirstVNF_CPU,AMS ) * ( ACS * ARS ) )", "choosing": "( Max( ( DS / ( RRSe * ( CS - ( Max( RRSe,MLU ) + ( ( MUM * MLU ) * Max( MUC,RCSe ) ) ) ) ) ),RMSe ) / Max( ( Min( RRSe ,CS ) - ( MLU / CS ) ),DS ) )", "obj1": 0.03231939163498099, "obj2": 0.8155827428674786}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,MDR )", "choosing": "( ( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,MLU ) * ( CS + RCSe ) ) - Min( MLU ,Min( MUR ,MLU ) ) )", "obj1": 0.8155893536121673, "obj2": 0.05635157865464626}, {"determining": "Min( ( PN - MDR ) ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,RRSe ) * ( Max( MUC,RMSe ) + RCSe ) ) - ( RRSe + DS ) )", "obj1": 0.8174904942965779, "obj2": 0.05463686001037995}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * ( ( RRS - ( ( Const * MDR ) * ( RRS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) ) ) ) ,( FirstVNF_Mem * Min( BR ,Const ) ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,( Min( MUC ,( Min( MLU ,DS ) + MUC ) ) + ( MUM / RRSe ) ) ) * ( CS + RCSe ) ) - ( RRSe / DS ) ) )", "obj1": 0.8193916349809885, "obj2": 0.05449743690578925}, {"determining": "( Max( PN,( ( ( Max( CRS,CRS ) / ( ( MRS - Max( PN,AMS ) ) * ARS ) ) - Min( ACS ,PN ) ) - ( MDR + ( DDR / FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - RMSe ) + ( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,MUC ),MLU ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.000498517401845}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * Max( ( BR + ( ( DDR / PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ),CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,( Min( MUC ,( CS + Min( MUR ,MUM ) ) ) + ( MUM / RRSe ) ) ) * ( CS + RCSe ) ) - ( RRSe - Min( CS ,MLU ) ) ) )", "obj1": 0.8136882129277566, "obj2": 0.057342320182878666}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * Max( ( BR + ( ( DDR / PN ) * Min( Const ,FirstVNF_RAM_Server ) ) ),CRS ) ) ) ) ,( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( MUC ,( Min( MUC ,( CS + Min( CS ,MUM ) ) ) + ( MUM / RRSe ) ) ) * ( CS + RCSe ) ) - ( RRSe - Min( CS ,MLU ) ) ) )", "obj1": 0.8136882129277566, "obj2": 0.057342320182878666}, {"determining": "( ( Min( Max( FirstVNF_Mem,( BR / ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) ) ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUC / RMSe ) ) * Max( ( MUC / Min( MLU ,DS ) ),MUC ) )", "obj1": 0.034220532319391636, "obj2": 0.8150587955806987}, {"determining": "( ( ( ( ( ( ( CRS + RRS ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5106450214457378}, {"determining": "( Max( PN,( CRS - Const ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( Max( ( ( ( MLU / ( ( ( MUM + RRSe ) * MUM ) * Max( RRSe,MUR ) ) ) + ( ( ( Min( DS ,RMSe ) * MUC ) - MLU ) + DS ) ) / RRSe ),MUM ) + ( RCSe / DS ) )", "obj1": 0.9961977186311787, "obj2": 0.0016659775037294773}, {"determining": "( ( FirstVNF_CPU - Min( ( ACS / AMS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,( ( MUC / RMSe ) - Max( MLU,MLU ) ) ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Min( ( ( Min( ( Min( Min( FirstVNF_CPU_Server ,MDR ) ,CRS ) / ACS ) ,Max( ( RRS + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ),MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - ( DDR + FirstVNF_Mem ) ) ,MDR )", "choosing": "( ( Min( ( ( MUC - MUC ) - Max( MLU,CS ) ) ,MLU ) * ( CS + RCSe ) ) - ( Max( Max( CS,RCSe ),( MUR / CS ) ) / ( CS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( PN - ACS ),( Min( RRS ,FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) ) + ( FirstVNF_Mem_Server + ACS ) )", "choosing": "( Min( ( ( MUR * CS ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - Max( MLU,MLU ) ) ) * ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * ( RRSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * Max( DDR,FirstVNF_Mem ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( MUR / ( RRSe * DS ) )", "obj1": 0.028517110266159697, "obj2": 0.8304627600588005}, {"determining": "( ( ( ( CRS + RRS ) - ( ( FirstVNF_Mem_Server * PN ) - FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / DS ) - DS ) / RMSe ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( Min( MLU ,MUC ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.5551330798479087, "obj2": 0.2817225956587262}, {"determining": "( ( ( MDR - Min( ACS ,( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_Mem_Server ) * ( BR - FirstVNF_Mem_Server ) ) ) ) ) * FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( Min( MUR ,CS ) + ( ( MUM * RMSe ) + RMSe ) ) + ( RMSe * RCSe ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.6216730038022814, "obj2": 0.2363550921824188}, {"determining": "Max( DDR,Min( Min( Min( ( ( FirstVNF_CPU - Min( ( ACS / AMS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) - ( DDR / BR ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( MDR * PN ) ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( Max( MRS,FirstVNF_Mem ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( ( Min( CS ,( ( MUC / RMSe ) - Max( MLU,MLU ) ) ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) ) / Max( ( ( CS * ( MUR - MUC ) ) + MUC ),RMSe ) )", "obj1": 0.45817490494296575, "obj2": 0.35552276402476307}, {"determining": "( ( Min( RRS ,Min( ( PN - MDR ) ,Min( CRS ,Const ) ) ) + ( FirstVNF_Mem / AMS ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ( PN - MDR ) + Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,CRS ) / ( ( DDR * FirstVNF_Mem_Server ) * ARS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( Min( ( CS - RCSe ) ,( RRSe + RMSe ) ) * RCSe ) ),( Max( MUR,DS ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ) ),MLU ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.6920152091254753, "obj2": 0.1315817353075016}, {"determining": "( ( ( ( CRS + RRS ) - Max( Max( ACS,ARS ),FirstVNF_Mem_Server ) ) * FirstVNF_CPU_Server ) + ( ( Max( RRS,Const ) / ( ACS * FirstVNF_Mem ) ) / ARS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( Max( Min( MLU ,RCSe ),Max( MLU,MUR ) ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( Min( MLU ,MUC ) ,CS ) ) ) ),MLU ) ) )", "obj1": 0.5152091254752852, "obj2": 0.3113229055227683}, {"determining": "( ( Min( ( FirstVNF_RAM * ( Const - MDR ) ) ,FirstVNF_Mem_Server ) * RRS ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * Max( ( MUM - DS ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.060836501901140684, "obj2": 0.6894510312716386}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ,( ( MDR * FirstVNF_RAM ) * PN ) ) )", "choosing": "( ( Max( Max( ( RCSe + ( MUM / DS ) ),RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,Max( Max( Min( RCSe ,( MUC / RMSe ) ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.6425855513307985, "obj2": 0.17074136324617584}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( ( MRS - CRS ) * ARS ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( MUC,CS ) ) / Max( Max( MUC,MUC ),MLU ) ) )", "obj1": 0.935361216730038, "obj2": 0.020988521755540147}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ,( ( MDR * MDR ) * PN ) ) )", "choosing": "( ( Max( Max( ( RCSe + ( MUM / DS ) ),RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.6444866920152091, "obj2": 0.17053749854139774}, {"determining": "( ( Max( ( ( Const + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( Min( ( ( ( ( CS * MUM ) / Max( MUC,CS ) ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) / RCSe ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7568350162411768}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - Min( ACS ,( RRS * ACS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Const * ARS ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,( ( RRSe + Min( RMSe ,DS ) ) - MUM ) ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.3593155893536122, "obj2": 0.4109014016223451}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) + Max( ( Min( Max( PN,FirstVNF_CPU ) ,( ( Max( CRS,CRS ) / ( Const * ARS ) ) - Min( ACS ,PN ) ) ) * ( MDR / Min( ( ( DDR * CRS ) + DDR ) ,RRS ) ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * ( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( ( CS * Max( ( RRSe + Min( RMSe ,RCSe ) ),Min( DS ,CS ) ) ) ,( ( ( RRSe * ( MUC - RCSe ) ) * Max( RMSe,MUM ) ) * MUR ) ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.07984790874524715, "obj2": 0.6652125889135978}, {"determining": "Min( ( DDR + Min( ( PN - MDR ) ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server * PN ) - FirstVNF_Mem_Server ) ) ) ) ,( Min( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,Max( Max( CS,RCSe ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( CS ,CS ) ) ) ),MLU ) ) + Min( MLU ,DS ) )", "obj1": 0.8688212927756654, "obj2": 0.03362397688926534}, {"determining": "( ( ( Max( RRS,FirstVNF_Mem_Server ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,DS ) ) / ( ( CS / RMSe ) * Min( RRSe ,CS ) ) )", "obj1": 0.15019011406844107, "obj2": 0.6241413542930775}, {"determining": "Max( DDR,Min( Min( Min( ( ACS * RRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( MDR * PN ) ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( Max( MRS,FirstVNF_Mem ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) / Max( ( ( CS * ( MUR - MUC ) ) + MUC ),RMSe ) )", "obj1": 0.3403041825095057, "obj2": 0.44469081707873676}, {"determining": "( Min( ( PN - ( ( RRS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - MRS ) ) * ( MDR / MDR ) ) ) ,DDR ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( ( MUR - CS ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ) ),MLU ) ) )", "obj1": 0.5988593155893536, "obj2": 0.24078122602896332}, {"determining": "Max( DDR,Min( Min( Min( ( ACS * RRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( MDR * PN ) ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( Max( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - MRS ),FirstVNF_Mem ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( Max( MUR,MUM ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ) ) ) - Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) / Max( ( ( CS * ( MUR - MUC ) ) + MUC ),RMSe ) )", "obj1": 0.3041825095057034, "obj2": 0.4779595936637274}, {"determining": "( ( ( MDR - Min( DDR ,( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / PN ) ) / ( ACS / AMS ) ) ) ) * Max( DDR,FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( CS + RCSe ) - DS ) / Min( ( DS / CS ) ,( MUC + RRSe ) ) ) + ( RMSe * RCSe ) ),( Max( MUR,DS ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.4790874524714829, "obj2": 0.33326741230345147}, {"determining": "( Max( DDR,Min( Min( Min( ( ACS * RRS ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( MDR * PN ) ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( Max( MRS,FirstVNF_Mem ) - FirstVNF_Mem_Server ) ) ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + CS ),( Max( MUR,MUM ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ) ),MLU ) ) )", "obj1": 0.3840304182509506, "obj2": 0.4025658164886356}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( PN - MDR ) ,( Const * RRS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),MLU ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( ( MUC - MUC ) - Max( DS,CS ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.8593155893536122, "obj2": 0.03951551269248328}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,Min( ( PN - ( FirstVNF_CPU_Server * DDR ) ) ,( ACS + Const ) ) ) / ( ( MDR / FirstVNF_CPU_Server ) * ARS ) ) )", "choosing": "( ( ( RCSe - DS ) / Max( MUC,( MLU * RRSe ) ) ) / ( DS * RRSe ) )", "obj1": 0.043726235741444866, "obj2": 0.7910889027237703}, {"determining": "( ( MDR - Min( DDR ,( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / ( ACS / AMS ) ) ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( CS * ( ( ( CS + RCSe ) - DS ) / RMSe ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.3155893536121673, "obj2": 0.4615838207688192}, {"determining": "( ( ( ( Min( ( Min( Min( FirstVNF_CPU_Server ,MDR ) ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + ( Max( ( FirstVNF_RAM / Const ),FirstVNF_RAM_Server ) / ( MRS / PN ) ) ) )", "choosing": "( ( ( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( MUC ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.41064638783269963, "obj2": 0.40023515086473177}, {"determining": "Min( Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * Max( ( BR + ( ( DDR / PN ) * Min( PN ,FirstVNF_RAM_Server ) ) ),CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( ( Min( ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( RCSe - DS ) ) - ( RRSe - Min( RCSe ,MLU ) ) ) ) ,( Min( MUC ,( CS + Min( MUR ,MUM ) ) ) + ( MUM / RRSe ) ) ) * ( CS + RCSe ) ) - ( RRSe - Min( CS ,MLU ) ) ) )", "obj1": 0.7927756653992395, "obj2": 0.06444181440663561}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Min( Min( ( PN - MDR ) ,RRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) * ( CS + RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7547528517110266, "obj2": 0.08102804471883784}, {"determining": "Min( ( ( RRS - ACS ) - ( FirstVNF_CPU_Server * ( DDR * ( RRS / MRS ) ) ) ) ,Max( FirstVNF_Mem,( Min( ACS ,BR ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( CS + ( MUM / ( DS / RCSe ) ) ) + RMSe ) * ( RMSe + RCSe ) ) * ( CS + RCSe ) ) - ( RRSe + DS ) )", "obj1": 0.8250950570342205, "obj2": 0.051483338769350434}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - ( ( CS * RRSe ) * Max( ( MUR * MUC ),MUM ) ) ) - RRSe ) * Max( ( CS * Max( RRSe,DS ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.16159695817490494, "obj2": 0.5897737837808869}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( Max( ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server * Const ) * ( FirstVNF_CPU_Server - ACS ) ) ),CRS ) / ( ( MDR / FirstVNF_CPU_Server ) * ARS ) ) )", "choosing": "( ( ( MUC / DS ) / Max( MUC,CS ) ) / CS )", "obj1": 0.045627376425855515, "obj2": 0.7570997816699023}, {"determining": "( Min( ( PN - ( ( RRS + ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) - MRS ) ) * ( MDR / MDR ) ) ) ,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( Max( MUR,MUM ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ) ),MLU ) ) )", "obj1": 0.5988593155893536, "obj2": 0.24078122602896332}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Min( ( PN - MDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) * ( Min( RCSe ,MLU ) / RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7281368821292775, "obj2": 0.09493953546651834}, {"determining": "( ( ( MDR - Min( DDR ,( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / ( ACS / AMS ) ) ) ) * Max( DDR,FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( CS + RCSe ) - DS ) / RMSe ) + ( RMSe * RCSe ) ),( Max( MUR,DS ) * Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.33269961977186313, "obj2": 0.45398254366612095}, {"determining": "( ( ( ( ( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + AMS ) / ( RRS + DDR ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * ( MUC / ( MUC * DS ) ) ) ),( CS * Max( Max( MUM,RRSe ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.5019011406844106, "obj2": 0.326159535174628}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( BR * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( MUM - ( RRSe - Min( ( MUM / RCSe ) ,RCSe ) ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7072243346007605, "obj2": 0.11235921540452404}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) + ( ( PN - MDR ) - AMS ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - RCSe ) - RRSe ) * ( MUM / RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7737642585551331, "obj2": 0.07329848266758078}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( ( BR + FirstVNF_Mem_Server ) / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Min( ( PN - MDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) * ( Min( RCSe ,MLU ) / RCSe ) ) ,Max( MUM,Max( ( CS - ( RCSe * MUC ) ),MUC ) ) )", "obj1": 0.7262357414448669, "obj2": 0.09525015171852926}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,Max( ( MLU + ( MUM + Min( RMSe ,Max( ( MUM * MUC ),MUR ) ) ) ),Max( RCSe,Max( RRSe,RCSe ) ) ) ) )", "obj1": 0.11406844106463879, "obj2": 0.6370175714553902}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ) )", "choosing": "( ( ( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.42015209125475284, "obj2": 0.384390718647742}, {"determining": "Min( ( FirstVNF_CPU_Server + AMS ) ,( Max( CRS,CRS ) / ( Const * ARS ) ) )", "choosing": "( ( ( CS * MUM ) / Max( MUC,CS ) ) / Max( CS,DS ) )", "obj1": 0.11406844106463879, "obj2": 0.6370175714553902}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / CS ) ) - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.17110266159695817, "obj2": 0.5760148240094232}, {"determining": "( ( ( ( Min( ( Min( Min( FirstVNF_CPU_Server ,MDR ) ,CRS ) / ACS ) ,Max( ( RRS + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ),MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ) )", "choosing": "( ( ( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) - MUC ) - Max( DS,CS ) ) / ( ( DS / RRSe ) - ( RCSe + MUC ) ) )", "obj1": 0.42015209125475284, "obj2": 0.384390718647742}, {"determining": "Min( ( PN - MDR ) ,( DDR - ( FirstVNF_CPU - Min( ( ( ARS - FirstVNF_RAM_Server ) / ARS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( ( MLU - DS ) / Max( MUC,RMSe ) ) ,MLU ) * ( CS + RCSe ) ) - ( Min( MUC ,CS ) + MUM ) )", "obj1": 0.9619771863117871, "obj2": 0.006324536421499039}, {"determining": "Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,CRS ) / ( ( ( FirstVNF_CPU / Max( MRS,ARS ) ) * ( Const - BR ) ) * ARS ) ) )", "choosing": "( ( ( RCSe - DS ) / Min( ( RCSe - ( MUC * RCSe ) ) ,( RRSe * MUC ) ) ) / CS )", "obj1": 0.12547528517110265, "obj2": 0.6274652144540089}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( Max( ( ( FirstVNF_RAM_Server * ( BR + DDR ) ) / ( PN * ( Const / FirstVNF_Mem_Server ) ) ),PN ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MUM ) + MUC ) / ( ( DS + RCSe ) / Max( MUM,MUM ) ) ) ) ) - ( RCSe + MLU ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.22053231939163498, "obj2": 0.5403447270594546}, {"determining": "( ( ( ( ( AMS * ARS ) - ( ACS / Min( RRS ,MRS ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) )", "choosing": "( ( ( MUC - MUC ) - CS ) / ( MUC / RMSe ) )", "obj1": 0.49619771863117873, "obj2": 0.3323253677063596}, {"determining": "( ( ( Min( DDR ,Min( ( PN - MDR ) ,MDR ) ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) / ( ( ( MDR - Min( DDR ,PN ) ) * Max( DDR,FirstVNF_Mem ) ) * RRS ) )", "choosing": "( ( ( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,MLU ) * ( CS + RCSe ) ) - Min( MLU ,( ( ( MUC - RCSe ) - ( RRSe / MUM ) ) / Max( Max( RMSe,RCSe ),Max( RCSe,CS ) ) ) ) ) + ( ( Max( Max( CS,RCSe ),( Min( RCSe ,( RRSe / ( RMSe + RRSe ) ) ) + ( MUM / DS ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.039923954372623575, "obj2": 0.8030260658100623}, {"determining": "Min( ( PN - MDR ) ,RRS )", "choosing": "( ( ( Max( MUM,RRSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8098859315589354, "obj2": 0.05968609042174378}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( FirstVNF_Mem / CRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - ( ( CS * RRSe ) * Max( ( ( RCSe - DS ) / Max( MUC,RMSe ) ),MUM ) ) ) - RRSe ) * Max( ( CS * Max( RRSe,DS ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.1844106463878327, "obj2": 0.5688054474968296}, {"determining": "( ( ( ( PN - DDR ) / ( ( MDR - Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / ARS ) + ( RRS - AMS ) ) ) ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( RRSe,( DS - RCSe ) ) / ( ( ( MUM * MLU ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) ) ) - RRSe ) * Max( ( CS * Min( RMSe ,MUC ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.20342205323193915, "obj2": 0.5526596461969382}, {"determining": "( ( ( ( Min( ( Min( Min( MDR ,MDR ) ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ) )", "choosing": "( ( ( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / MUM ) ),( CS * Max( ( RRSe + Min( MUC ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.41825095057034223, "obj2": 0.38583864882496743}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - Min( ACS ,PN ) ) * Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - ( BR + DDR ) ) * FirstVNF_Mem_Server ) ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,RCSe ),( ( Min( DS ,RMSe ) * MUC ) - MLU ) ) ) / Max( Max( MUC,( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5266701292762571}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - Min( ACS ,( RRS * ACS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,RCSe ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.2376425855513308, "obj2": 0.5159689097164154}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Min( ( PN - MDR ) ,Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( RCSe - Max( DS,CS ) ) / Max( MUC,RMSe ) ) ,MLU ) * ( CS + RCSe ) ) - ( Min( Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ,CS ) + MUM ) )", "obj1": 0.9809885931558935, "obj2": 0.00155334444962524}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + ( AMS * ARS ) ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - ( ( CS * RRSe ) * Max( ( MUR * MUC ),MUM ) ) ) - RRSe ) * Max( ( CS * Max( RRSe,DS ) ),DS ) ) ,( Max( MLU,MUR ) / Max( Max( ( ( ( ( MUM / RCSe ) - DS ) / RMSe ) + ( RMSe * ( MUC / ( RRSe * DS ) ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.16159695817490494, "obj2": 0.5897737837808869}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - ( MRS - ( Max( CRS,CRS ) / ( Const * ARS ) ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,( ( MUR - CS ) - MUM ) ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.2813688212927757, "obj2": 0.49139647422193095}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - Min( ACS ,( RRS * ACS ) ) ) * ( PN - MDR ) ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,RCSe ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,CS ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.26996197718631176, "obj2": 0.4994190683143974}, {"determining": "( ( ( ( PN - DDR ) / ( ( MDR - Max( FirstVNF_CPU,FirstVNF_CPU ) ) * Max( DDR,FirstVNF_Mem ) ) ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MLU ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) ) ) - RRSe ) * Max( ( CS * Min( RMSe ,MUC ) ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.19391634980988592, "obj2": 0.560232298327182}, {"determining": "( Min( ( PN - ( DDR / MRS ) ) ,( ACS + Const ) ) / ( Const + MDR ) )", "choosing": "( ( ( RCSe * ( MUC + ( MLU - ( MLU / MUM ) ) ) ) + MLU ) - ( DS * ( ( ( MUR / Max( Min( MUC ,CS ),( MUM - RRSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019099300002847527}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) + Max( ( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) * ( MDR / Min( ( ( DDR * CRS ) + DDR ) ,RRS ) ) ),( Const * BR ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * ( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,( ( ( RRSe * ( MUC - RCSe ) ) * Max( RMSe,MUM ) ) * MUR ) ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.06844106463878327, "obj2": 0.6729355463741924}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Max( ( FirstVNF_RAM_Server + ARS ),( ( FirstVNF_Mem_Server - DDR ) - FirstVNF_Mem_Server ) ) ) + Max( ( FirstVNF_Mem_Server - ( ( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) ) + MRS ) ),( Const * Max( DDR,RRS ) ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * ( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + CS ) ) ,( RMSe + RMSe ) )", "obj1": 0.06273764258555133, "obj2": 0.6776414523700145}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Min( ( PN - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) - Min( ACS ,( RRS * ACS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( Max( CS,( ( MUR - CS ) - MUM ) ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.2813688212927757, "obj2": 0.49139647422193095}, {"determining": "( Min( ( PN - DDR ) ,( ACS + Const ) ) / ( Const + PN ) )", "choosing": "( Max( MLU,DS ) - ( DS * RRSe ) )", "obj1": 0.9524714828897338, "obj2": 0.019857621950732304}, {"determining": "( ( FirstVNF_RAM - ( BR + FirstVNF_CPU ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( RRSe * ( MLU * MUM ) ) * Max( ( MLU + RMSe ),MUC ) )", "obj1": 0.030418250950570342, "obj2": 0.8177853746604327}, {"determining": "( ( FirstVNF_CPU - Min( ( ACS / ( Min( ( PN - DDR ) ,( ACS + Const ) ) / ( Const + PN ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,( ( MUC / RMSe ) - DS ) ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0004906176797701959}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( FirstVNF_Mem ,( Max( FirstVNF_RAM,Max( MRS,RRS ) ) * PN ) ) )", "choosing": "( ( ( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,DS ) ) + Min( ( DS / CS ) ,( ( RMSe * RRSe ) + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.4953007829108364}, {"determining": "( Min( ( ( DDR + FirstVNF_RAM ) / ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( ACS + Const ) ) ) * Min( FirstVNF_RAM ,MRS ) ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / PN ) ) ) + Min( Min( ( PN - MDR ) ,RRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( DS / ( CS * Max( RRSe,DS ) ) ) ) - RRSe ) * ( CS + RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7642585551330798, "obj2": 0.0760656750856341}, {"determining": "( ( ( ( DDR / FirstVNF_Mem_Server ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,DS ) / Max( Max( MUC,MUC ),MLU ) ) )", "obj1": 0.25475285171102663, "obj2": 0.4998368503876641}, {"determining": "( ( Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) / RCSe ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5099212585454924}, {"determining": "( ( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( Max( ( ( FirstVNF_RAM_Server * ( BR + DDR ) ) / ( PN * ( Const / FirstVNF_Mem_Server ) ) ),PN ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MUM ) + MUC ) / ( ( DS + RCSe ) / Max( MUM,MUM ) ) ) ) ) - ( RCSe + MLU ) ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) )", "obj1": 0.1958174904942966, "obj2": 0.5567708988691673}, {"determining": "Max( DDR,Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUC,RMSe ) )", "obj1": 0.03802281368821293, "obj2": 0.8112601185733456}, {"determining": "( ( ( ( ( ( ( CRS + RRS ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) ) - Min( ACS ,( Const * PN ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( CS * Max( ( RRSe + Min( RCSe ,CS ) ),Min( DS ,CS ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.23193916349809887, "obj2": 0.5261747642298041}, {"determining": "( ( Max( PN,Max( ( CRS * ( Const + AMS ) ),ARS ) ) + ( PN / FirstVNF_RAM ) ) + Min( FirstVNF_Mem ,Max( MDR,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe - DS ) / Max( MUC,CS ) ) / Max( CS,DS ) ) / ( ( ( MUR * ( MLU * ( RRSe + ( ( CS - MUC ) + ( MLU + RRSe ) ) ) ) ) - ( ( ( Max( ( RMSe + RMSe ),RCSe ) + CS ) / ( MLU - ( RRSe * RMSe ) ) ) / ( ( MUR + Min( ( MUR - MUM ) ,MUC ) ) + ( CS + MUM ) ) ) ) / ( Min( DS ,( MUC * MUR ) ) * Max( ( RRSe - MUC ),RMSe ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6317699725303051}, {"determining": "( PN * Min( ( PN - MDR ) ,( Min( FirstVNF_Mem_Server ,RRS ) + ( ACS + Const ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Min( DS ,RCSe ) - Min( ( DS + MUC ) ,MLU ) ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7015209125475285, "obj2": 0.12053251126511723}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( Const * ARS ) ) - Min( Min( ACS ,PN ) ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( FirstVNF_CPU + Const ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,( CS * Max( ( RRSe + Min( RMSe ,DS ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.25285171102661597, "obj2": 0.5013412963546947}, {"determining": "Min( ( PN - MDR ) ,Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( RRS / ( ( MDR - Min( ACS ,( DDR + FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,RRSe ) * ( MUM * RMSe ) ) - ( RRSe + DS ) )", "obj1": 0.7604562737642585, "obj2": 0.07878560850036372}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Min( ( MDR / ARS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( ( RCSe - DS ) / Max( MUC,RMSe ) ) ,MLU ) * ( CS + RCSe ) ) - ( Min( Max( ( RRSe + Min( DS ,RCSe ) ),Min( DS ,RCSe ) ) ,CS ) + MUM ) )", "obj1": 0.9714828897338403, "obj2": 0.0032761460964290524}, {"determining": "( PN * Min( ( PN - MDR ) ,( Min( FirstVNF_Mem_Server ,RRS ) + ( ACS + Const ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Min( DS ,RCSe ) - Min( ( DS + MUC ) ,MLU ) ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7015209125475285, "obj2": 0.12053251126511723}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.1806083650190114, "obj2": 0.5731283299243497}, {"determining": "Min( ( DDR + ACS ) ,( Min( Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,Min( BR ,( ACS + PN ) ) ) / ( Max( CRS,( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( MLU,Max( Max( CS,RCSe ),( MUR / CS ) ) ) / Max( Max( ( CS + MUC ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) + Min( MLU ,DS ) )", "obj1": 0.8650190114068441, "obj2": 0.034645415642207696}, {"determining": "( ( ( ( Max( CRS,CRS ) / ( ( MRS - Max( PN,AMS ) ) * ARS ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( MUC,MUC ),MLU ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5120892268144525}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server * PN ) - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( CS ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5438950362802009}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * Min( ( PN - MDR ) ,( FirstVNF_CPU_Server + ( ( ARS / FirstVNF_RAM ) + Min( ( FirstVNF_Mem / CRS ) ,( Max( CRS,CRS ) / ( ( DDR * FirstVNF_Mem_Server ) * ARS ) ) ) ) ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( MUM - DS ) ) - ( RRSe - MUR ) ) ) ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.7034220532319392, "obj2": 0.11482168495197653}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Min( ( ( ARS - FirstVNF_RAM_Server ) / ARS ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( ( RCSe - DS ) / Max( MUC,RMSe ) ) ,MLU ) * ( CS + RCSe ) ) - ( Min( MUC ,CS ) + MUM ) )", "obj1": 0.973384030418251, "obj2": 0.003004682750645462}, {"determining": "( ( Min( DDR ,FirstVNF_Mem_Server ) * Max( ( FirstVNF_RAM_Server + ARS ),( ( FirstVNF_Mem_Server - DDR ) - FirstVNF_Mem_Server ) ) ) + Max( ( FirstVNF_Mem_Server - ( ( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) ) + MRS ) ),( Const * Max( DDR,RRS ) ) ) )", "choosing": "Min( ( ( ( ( RRSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - RRSe ) * ( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + CS ) ) ,( RMSe + RMSe ) )", "obj1": 0.06653992395437262, "obj2": 0.6746481088388206}, {"determining": "( ( ( ( PN - DDR ) / ( ( ( FirstVNF_RAM_Server * Const ) * ( FirstVNF_CPU_Server - ACS ) ) * Max( DDR,FirstVNF_Mem ) ) ) / ( Min( DDR ,( AMS * DDR ) ) * RRS ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( ( FirstVNF_RAM_Server - MDR ) + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( Max( MUR,( DS - RCSe ) ) / ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) ) ) - RRSe ) * ( RRSe * ( MLU * MUM ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.12357414448669202, "obj2": 0.6307763902798688}, {"determining": "( CRS + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( Max( Max( CS,RCSe ),( MUR / CS ) ),MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - ( CS + MUC ) ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.21102661596958175, "obj2": 0.5457469483435153}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - ( Max( CRS,CRS ) / ( Const * ARS ) ) ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( Max( Max( CS,RCSe ),( MUR / CS ) ),MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.21102661596958175, "obj2": 0.5457469483435153}, {"determining": "( ( ( Min( DDR ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) / MRS ) / ( ( ( MDR - Min( DDR ,PN ) ) * Max( DDR,FirstVNF_Mem ) ) * RRS ) )", "choosing": "( ( RRSe / Max( MUR,DS ) ) + ( ( Max( Max( CS,RCSe ),( Min( RCSe ,( RRSe / ( RMSe + RRSe ) ) ) + ( MUM / DS ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.03612167300380228, "obj2": 0.8148971178378959}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,MDR )", "choosing": "( ( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,MLU ) * ( CS + RCSe ) ) - Min( MLU ,Min( MUR ,MLU ) ) )", "obj1": 0.8155893536121673, "obj2": 0.05635157865464626}, {"determining": "( ( ( ( ( ( ( CRS + RRS ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5106450214457378}, {"determining": "Min( ( PN - MDR ) ,Max( FirstVNF_Mem,( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( ( Min( MLU ,Min( MUR ,MLU ) ) - MUC ) - Max( DS,CS ) ) ,RRSe ) * ( Max( MUC,RMSe ) + RCSe ) ) - ( RRSe + DS ) )", "obj1": 0.8174904942965779, "obj2": 0.0538559100935634}, {"determining": "( ( ( ( Min( ( Min( FirstVNF_CPU_Server ,CRS ) / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( PN + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR - CS ) - ( DS / CS ) ) - RRSe ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,MUC ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.1806083650190114, "obj2": 0.5731283299243497}, {"determining": "( Max( FirstVNF_CPU,AMS ) * ( ACS * ARS ) )", "choosing": "( Max( ( DS / ( RRSe * ( CS - ( Max( RRSe,MLU ) + ( ( MUM * MLU ) * Max( MUC,RCSe ) ) ) ) ) ),RMSe ) / Max( ( Min( RRSe ,CS ) - ( MLU / CS ) ),DS ) )", "obj1": 0.03231939163498099, "obj2": 0.8155827428674786}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,CRS ) + Min( Min( ( PN - MDR ) ,RRS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUR - CS ) - ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - ( Max( RCSe,RCSe ) - MUC ) ) ) - RRSe ) * ( CS + RCSe ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7053231939163498, "obj2": 0.11372752030118079}, {"determining": "( ( ( ( ( ( ( CRS + RRS ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( Min( ARS ,ACS ) + Min( FirstVNF_Mem ,( FirstVNF_CPU + Const ) ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( ( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( ( MUC - MUC ) ,CS ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.23193916349809887, "obj2": 0.5261747642298041}, {"determining": "( ( ( ( Min( CRS ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) ) - Min( ACS ,PN ) ) * FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - DS ) / Max( MLU,MUC ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Max( Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) ),( CS * Max( ( RRSe + Min( RCSe ,RCSe ) ),Min( DS ,CS ) ) ) ),MLU ) ) )", "obj1": 0.21292775665399238, "obj2": 0.5449767945128697}, {"determining": "Min( ( PN - MDR ) ,Max( FirstVNF_Mem,( ( FirstVNF_Mem_Server * PN ) - ( Max( CRS,CRS ) / ( ( DDR * FirstVNF_Mem_Server ) * ARS ) ) ) ) )", "choosing": "( ( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,RRSe ) * ( CS + RCSe ) ) - ( ( CS + RCSe ) - ( ( Min( MUC ,MLU ) * ( RCSe - DS ) ) - ( RRSe - MUR ) ) ) )", "obj1": 0.8231939163498099, "obj2": 0.05220015563974603}, {"determining": "Min( ( ( RRS - ACS ) - ( FirstVNF_CPU_Server * ( DDR * ( RRS / MRS ) ) ) ) ,Max( FirstVNF_Mem,( Min( ACS ,BR ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( CS + ( MUM / ( DS / RCSe ) ) ) + RMSe ) * ( RMSe + RCSe ) ) * ( CS + RCSe ) ) - ( RRSe + DS ) )", "obj1": 0.8212927756653993, "obj2": 0.052806114357359504}]}