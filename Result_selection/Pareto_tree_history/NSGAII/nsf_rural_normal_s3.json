{"1": [{"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.28087649402390436, "obj2": 0.6212917217865308}, {"determining": "( ( ARS * FirstVNF_Mem_Server ) * ( ARS - AMS ) )", "choosing": "Min( ( DS - RCSe ) ,( RCSe * RMSe ) )", "obj1": 0.5737051792828686, "obj2": 0.40429125433755086}, {"determining": "( ( FirstVNF_CPU - ACS ) - Max( MRS,MRS ) )", "choosing": "Min( ( MLU - MUC ) ,Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR * FirstVNF_RAM_Server ),( MRS / FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) + ( RCSe - RCSe ) )", "obj1": 0.41434262948207173, "obj2": 0.5098364512131608}, {"determining": "( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Min( ( RRSe - MUR ) ,( RRSe / CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5745899654052102}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( FirstVNF_Mem,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( RCSe - RCSe ) ,( DS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * Min( AMS ,ARS ) ) / ( ( ACS / MRS ) / BR ) )", "choosing": "( Min( RRSe ,RMSe ) + ( MLU / DS ) )", "obj1": 0.19123505976095617, "obj2": 0.7700190530224684}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS - RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / MUC ) - Min( RRSe ,MLU ) )", "obj1": 0.2749003984063745, "obj2": 0.6687799025348905}, {"determining": "Min( ( ( ( CRS * BR ) / Max( BR,FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( MDR ,FirstVNF_CPU ) ) ) ,( Min( Min( ARS ,ARS ) ,( PN * FirstVNF_CPU ) ) + ( ( FirstVNF_CPU - ACS ) / ( FirstVNF_RAM_Server - CRS ) ) ) )", "choosing": "( Min( Max( ( MUR + RMSe ),( MLU / RRSe ) ) ,( Max( DS,RCSe ) - ( RRSe * CS ) ) ) * Min( ( ( CS * MLU ) * ( MLU * MUC ) ) ,( ( MLU * MUR ) * ( MUC + MUC ) ) ) )", "obj1": 0.7111553784860558, "obj2": 0.2752813178207487}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS + MDR ),( Const + DDR ) )", "choosing": "( Min( ( MLU * DS ) ,CS ) / ( ( ( RCSe - DS ) - RCSe ) / MUC ) )", "obj1": 0.17928286852589642, "obj2": 0.7774198082900535}, {"determining": "( ( DDR - MDR ) + ( Const - MDR ) )", "choosing": "Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.4269040450486255}, {"determining": "( Min( Max( MRS,( DDR - BR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( RCSe / ( MUC + MUM ) ) ),( RMSe * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.3844621513944223, "obj2": 0.540302660952221}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5455954292724663}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) )", "obj1": 0.6254980079681275, "obj2": 0.3177063499167374}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Max( MUM,DS ) )", "obj1": 0.4701195219123506, "obj2": 0.4531414461606565}], "2": [{"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM - RCSe ) ,( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,CS ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7888630984677278}, {"determining": "( ( FirstVNF_CPU - ACS ) - Max( MRS,MRS ) )", "choosing": "Min( ( MLU - MUC ) ,Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM * Const ),( DDR + FirstVNF_Mem ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7888630984677278}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "( ( ( ( AMS * ACS ) / FirstVNF_Mem_Server ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - ( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) ) ) )", "obj1": 0.6055776892430279, "obj2": 0.3440115320094482}, {"determining": "( ( DDR - MDR ) + ( Const - MDR ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,DS ) )", "obj1": 0.5278884462151394, "obj2": 0.3884839019606561}, {"determining": "Max( ( FirstVNF_RAM * Const ),( DDR + FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.2729083665338645, "obj2": 0.6295917446528608}, {"determining": "( ( DDR - MDR ) + ( Const - MDR ) )", "choosing": "Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.4269040450486255}, {"determining": "Max( ( BR - FirstVNF_Mem ),( ( ( MRS / MDR ) * Max( MRS,ARS ) ) + ( ( CRS * FirstVNF_Mem ) / ( CRS + BR ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / MUR ) )", "obj1": 0.2589641434262948, "obj2": 0.7279536655812077}, {"determining": "( ( DDR * Min( AMS ,ARS ) ) / ( ( RRS / MRS ) / BR ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MLU / DS ) )", "obj1": 0.2051792828685259, "obj2": 0.7602094825143765}, {"determining": "( ( ( ( AMS * ACS ) / ( ARS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,Const ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( Min( Min( DS ,RRSe ) ,Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.43227091633466136, "obj2": 0.4622054118760466}, {"determining": "( ( ARS - RRS ) - Min( AMS ,( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( MUR * Min( MUM ,RCSe ) ) * Max( RMSe,( CS * RCSe ) ) ) ,( CS / RMSe ) ) / ( ( DS / MLU ) / ( CS / RRSe ) ) )", "obj1": 0.25298804780876494, "obj2": 0.72960558113735}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Const / ( ( FirstVNF_RAM_Server + ARS ) * Max( ARS,BR ) ) ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( Min( ( MUM / MUC ) ,( MUC * MUM ) ) + CS ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5594978215693258}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - FirstVNF_CPU ) ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( ( DS - RRSe ) * ( DS * MLU ) ) )", "obj1": 0.4243027888446215, "obj2": 0.49915243427743733}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Max( MUM,DS ) )", "obj1": 0.4701195219123506, "obj2": 0.4531414461606565}, {"determining": "Min( FirstVNF_RAM ,Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( MUR * Min( MUM ,RCSe ) ) * Max( RMSe,( CS * ( Max( MUC,DS ) + ( DS * MLU ) ) ) ) )", "obj1": 0.40239043824701193, "obj2": 0.530442074567548}, {"determining": "Max( ( DDR * FirstVNF_RAM_Server ),( MRS / FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) + ( RCSe - RCSe ) )", "obj1": 0.41434262948207173, "obj2": 0.5098364512131608}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,DS ) )", "obj1": 0.4701195219123506, "obj2": 0.4531414461606565}, {"determining": "( ( ACS * ARS ) / Min( MRS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.30876494023904383, "obj2": 0.5944516166539234}, {"determining": "Max( ( RRS + MDR ),( Const + DDR ) )", "choosing": "( Min( ( MLU * DS ) ,CS ) / ( ( ( RCSe - DS ) - RCSe ) / MUC ) )", "obj1": 0.17928286852589642, "obj2": 0.7774198082900535}, {"determining": "( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( RRSe / CS ) )", "obj1": 0.32669322709163345, "obj2": 0.5727886090913663}, {"determining": "( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "Min( ( RRSe - MUM ) ,( RRSe / CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5745899654052102}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) )", "obj1": 0.29282868525896416, "obj2": 0.6099602156501729}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5455954292724663}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - MRS )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.2968127490039841, "obj2": 0.6040231053015561}, {"determining": "Max( ( FirstVNF_RAM * Const ),( DDR + FirstVNF_Mem ) )", "choosing": "( ( RMSe + DS ) / ( ( RCSe - DS ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.5422284899749894}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.3844621513944223, "obj2": 0.540302660952221}, {"determining": "( ( DDR * Min( AMS ,ARS ) ) / ( ( ACS / MRS ) / BR ) )", "choosing": "( Min( RRSe ,RMSe ) + ( MLU / DS ) )", "obj1": 0.19123505976095617, "obj2": 0.7700190530224684}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( AMS / FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MLU / DS ) )", "obj1": 0.19123505976095617, "obj2": 0.7700190530224684}, {"determining": "( ( ARS / ARS ) - Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.28087649402390436, "obj2": 0.6212917217865308}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5455954292724663}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.3844621513944223, "obj2": 0.540302660952221}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.28087649402390436, "obj2": 0.6212917217865308}, {"determining": "( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Min( ( RRSe - MUR ) ,( RRSe / CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5745899654052102}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( FirstVNF_Mem,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( RCSe - RCSe ) ,( DS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( DDR - BR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( RCSe / ( MUC + MUM ) ) ),( RMSe * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN + FirstVNF_Mem ) + ( MDR + FirstVNF_RAM_Server ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - ( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( ( MUR - MUC ) + Max( Min( MLU ,MLU ),( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU * MUR ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,( RCSe / CS ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( ( Max( Max( MDR,ARS ),( ARS * Const ) ) * ( Min( RRS ,FirstVNF_CPU ) + ( ARS / FirstVNF_Mem_Server ) ) ) * Min( ( ( MRS + MRS ) + ( DDR * ARS ) ) ,( ( PN / MRS ) - ( FirstVNF_CPU_Server / PN ) ) ) ) * ( ( ( Min( MRS ,PN ) / Max( BR,BR ) ) - Min( Min( ARS ,BR ) ,( FirstVNF_RAM_Server - MDR ) ) ) + ( ( ( Const + RRS ) / Max( FirstVNF_Mem_Server,RRS ) ) + ( ( AMS + BR ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) + ( Max( ( Max( Min( DDR ,CRS ),( FirstVNF_RAM_Server + PN ) ) - Max( ( MRS - MRS ),( PN - MRS ) ) ),( Max( ( BR / FirstVNF_CPU_Server ),( ACS / FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS + ARS ) ) ) ) * ( ( ( ( CRS + BR ) + ( DDR * FirstVNF_Mem ) ) / Min( Min( CRS ,AMS ) ,( MRS - RRS ) ) ) / ( ( ( ACS * FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) / ( Min( ACS ,MDR ) + ( ACS + BR ) ) ) ) ) ) ,( ( ( Max( ( Min( FirstVNF_CPU_Server ,MRS ) + Min( CRS ,PN ) ),Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) - Min( Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,Max( ACS,CRS ) ) ,( ( FirstVNF_Mem + ARS ) + ( FirstVNF_Mem / AMS ) ) ) ) + Max( ( ( ( BR / FirstVNF_CPU ) * ( BR * RRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) * ( ACS * ARS ) ) ),( ( Min( Const ,FirstVNF_Mem_Server ) / Min( ARS ,AMS ) ) - Min( Min( FirstVNF_CPU ,ACS ) ,Max( ARS,FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_CPU ) + ( FirstVNF_CPU_Server + CRS ) ) + ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) + ( Const - Const ) ) ) + ( ( ( CRS * RRS ) * ( FirstVNF_RAM_Server / Const ) ) * Max( ( FirstVNF_RAM_Server / MRS ),( ARS / MDR ) ) ) ) * ( ( ( ( FirstVNF_RAM + MRS ) + ( AMS + FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM - CRS ) * ( ARS * ARS ) ) ) + ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / Max( PN,FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) ) ) ) ,( ( Min( ( Min( ( Max( Const,CRS ) - ( FirstVNF_CPU_Server / Const ) ) ,Max( ( FirstVNF_CPU - BR ),( ACS / FirstVNF_CPU ) ) ) + ( Min( ( RRS / RRS ) ,( FirstVNF_Mem_Server - ARS ) ) + ( ( ACS * DDR ) / ( Const + AMS ) ) ) ) ,( ( Min( Max( MRS,AMS ) ,Min( BR ,ARS ) ) + ( Max( DDR,FirstVNF_CPU ) / ( FirstVNF_RAM_Server / PN ) ) ) * Min( Max( ( ACS * ACS ),( FirstVNF_Mem - RRS ) ) ,( Min( CRS ,Const ) * ( MDR / BR ) ) ) ) ) + ( ( ( ( ( DDR - MDR ) * Min( FirstVNF_CPU ,DDR ) ) + Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,( DDR * Const ) ) ) - Min( ( ( RRS * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ,Min( Min( CRS ,DDR ) ,Min( FirstVNF_Mem ,RRS ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + Max( FirstVNF_CPU,CRS ) ) - ( Min( FirstVNF_CPU ,Const ) - ( FirstVNF_CPU - BR ) ) ) - Min( Min( ( BR + MRS ) ,Min( MRS ,FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( PN / MRS ) ) ) ) ) ) / Max( ( ( ( ( ( FirstVNF_RAM_Server * ARS ) + ( CRS * MDR ) ) + ( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) - ( ( ( CRS - DDR ) + ( FirstVNF_RAM / MRS ) ) / Max( ( FirstVNF_RAM * AMS ),( DDR + ARS ) ) ) ) * ( Max( Min( Max( AMS,BR ) ,( FirstVNF_RAM + AMS ) ),Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,RRS ) ) ) + Max( ( ( FirstVNF_RAM_Server - PN ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ),( ( ARS / CRS ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ),Max( ( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / Max( DDR,FirstVNF_CPU_Server ) ) + Max( Min( PN ,FirstVNF_RAM ),( MDR / PN ) ) ) * ( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM,FirstVNF_RAM ) ) + ( ( FirstVNF_RAM / MRS ) / Min( RRS ,CRS ) ) ) ),( ( ( Max( FirstVNF_RAM_Server,RRS ) * Max( FirstVNF_RAM,MRS ) ) * ( ( ACS / AMS ) / ( RRS + RRS ) ) ) / ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,( ARS / FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM ,Const ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( MLU * RMSe ) - ( MUR - MUM ) ) * Min( ( MUM + MUM ) ,( MUC / CS ) ) ) / ( ( Max( DS,DS ) - ( DS / MUM ) ) / ( ( RMSe - CS ) - ( CS * RMSe ) ) ) ) + Min( ( ( ( MLU * RCSe ) - ( MUC - RRSe ) ) / Max( Max( DS,RMSe ),( MLU / RRSe ) ) ) ,Min( Max( ( RRSe / CS ),Min( MLU ,MUR ) ) ,( ( MUR - MUR ) - ( RRSe / MLU ) ) ) ) ) + ( Min( ( ( Max( CS,DS ) - Min( MUR ,MUM ) ) / ( ( MLU + MUC ) / ( CS / DS ) ) ) ,( ( Max( MUR,CS ) + Min( RMSe ,MUR ) ) - Min( ( MUM / RRSe ) ,( MUC / RCSe ) ) ) ) / ( ( ( Min( RMSe ,MLU ) / Min( MUC ,CS ) ) / Min( Min( RCSe ,RMSe ) ,Min( RMSe ,RCSe ) ) ) + ( ( ( RCSe / CS ) / ( DS + DS ) ) - ( ( RRSe * RCSe ) * ( MUR * MUM ) ) ) ) ) ) * ( ( ( ( ( ( CS + MUR ) / ( DS / CS ) ) / Min( ( RMSe / MUR ) ,Max( MLU,DS ) ) ) / ( ( Min( MUR ,MUC ) + ( RCSe * MUR ) ) - ( ( MUM - DS ) * Min( RRSe ,RRSe ) ) ) ) / Max( ( ( ( MLU / MLU ) / Min( RRSe ,MUM ) ) + ( Min( MUC ,MUC ) * Min( MUR ,MUR ) ) ),( Max( ( MLU / MUM ),Max( CS,DS ) ) * ( Max( RRSe,DS ) - ( RMSe / RRSe ) ) ) ) ) - ( ( ( Max( ( MUC * MLU ),( DS / MLU ) ) + Min( ( MLU - MUM ) ,( CS + MUM ) ) ) * ( ( ( RMSe - RCSe ) - Max( RCSe,MUR ) ) * ( Min( DS ,MLU ) / Min( MUM ,DS ) ) ) ) * ( Min( Max( ( DS * MLU ),Min( MUC ,RCSe ) ) ,Max( ( RMSe - RCSe ),Max( DS,CS ) ) ) + ( Min( ( MLU * RRSe ) ,Max( RRSe,RRSe ) ) + ( ( MUM / RRSe ) / ( RMSe - RMSe ) ) ) ) ) ) ) + ( ( Min( ( ( Min( Max( MUC,MUM ) ,( MUC * MUM ) ) - ( ( MUR / RRSe ) * Min( RRSe ,DS ) ) ) - ( ( ( DS + MUR ) + Max( CS,RCSe ) ) * Min( ( MUM - CS ) ,( RMSe * RMSe ) ) ) ) ,( Min( Min( ( RRSe + CS ) ,( MUM / DS ) ) ,( ( RMSe / RRSe ) / ( MUM * CS ) ) ) + ( Min( ( RMSe + RMSe ) ,Max( MUC,DS ) ) / ( Min( RMSe ,RCSe ) - Min( MUR ,RRSe ) ) ) ) ) * ( ( ( ( ( MLU / RCSe ) + ( RMSe + MUM ) ) / ( ( RRSe / RCSe ) / ( MUR * MUM ) ) ) - ( Min( ( RMSe - RCSe ) ,( MLU * MLU ) ) + ( Max( DS,MUC ) + Max( MUR,MUR ) ) ) ) - Max( Min( ( ( MLU + RCSe ) * Max( RMSe,MLU ) ) ,Min( ( DS + RMSe ) ,( MUM - MLU ) ) ),( ( ( RCSe / CS ) * Max( RMSe,MUC ) ) - ( ( MUM + RCSe ) - Max( MUM,CS ) ) ) ) ) ) * ( Max( ( ( Max( ( MLU + RCSe ),( MUC / MUC ) ) - ( ( MUR * RMSe ) + ( RMSe * MUR ) ) ) * ( ( ( RCSe - RRSe ) - ( MUR + MUC ) ) - ( ( RRSe - MUM ) * ( CS / RMSe ) ) ) ),( ( ( ( MUR / CS ) / Max( DS,RRSe ) ) * Min( Max( CS,MUM ) ,( MLU + RRSe ) ) ) - Max( Min( ( DS * DS ) ,( MUR * RMSe ) ),( Max( RMSe,MUR ) - ( DS - DS ) ) ) ) ) + Max( ( ( ( ( RMSe - MUR ) - ( RMSe + MUR ) ) + Min( ( MUR - CS ) ,Max( DS,MLU ) ) ) - ( ( Min( RRSe ,DS ) + Min( RRSe ,MLU ) ) * ( ( DS / MUR ) + ( CS * MLU ) ) ) ),( ( ( ( RCSe / MUR ) * ( MLU * RMSe ) ) / Min( Min( MUR ,DS ) ,Min( MUR ,MUM ) ) ) + Max( ( ( RMSe - MUM ) - ( MUR + MUM ) ),( ( DS + MUM ) * Min( RMSe ,MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ACS ) - ( FirstVNF_RAM * Const ) )", "choosing": "Min( ( MLU - MUC ) ,Max( RRSe,( CS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ACS ) - Max( MRS,MRS ) )", "choosing": "( ( RMSe + DS ) / ( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) ) / ARS ) - Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "Min( ( RMSe - CS ) ,( RMSe - ( Max( MUM,RCSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / ( CRS + BR ) ) - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( RCSe * DS ) + ( RRSe + ( MLU - MUR ) ) ) + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe * DS ) + ( RRSe + ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( Max( MRS,( DDR - BR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM - RCSe ) ,( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,CS ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR * Const ),( DDR + FirstVNF_Mem ) )", "choosing": "( Min( ( DS - DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.11752988047808766, "obj2": 0.8324760197114071}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "( ( DDR - MDR ) + ( Const - MDR ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,DS ) )", "obj1": 0.5278884462151394, "obj2": 0.3884839019606561}, {"determining": "Max( ( BR - FirstVNF_Mem ),( ( ( MRS / MDR ) * Max( MRS,ARS ) ) + ( ( CRS * FirstVNF_Mem ) / ( CRS + BR ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / MUR ) )", "obj1": 0.2450199203187251, "obj2": 0.7420203261724498}, {"determining": "( ( AMS - FirstVNF_RAM ) - FirstVNF_RAM )", "choosing": "( ( ( MUM + MLU ) / ( RRSe - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 0.9143426294820717, "obj2": 0.08001140134590493}, {"determining": "( ( DDR - MDR ) + ( Max( MRS,MRS ) - MDR ) )", "choosing": "Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.20029906752915322}, {"determining": "Max( ( BR - FirstVNF_Mem ),( ( ( MRS / MDR ) * Max( MRS,ARS ) ) + ( ( Const - MDR ) / ( CRS + BR ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.1342947250609277}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( Max( MUC,DS ) ,RRSe ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.603585657370518, "obj2": 0.3509926924379675}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6772908366533864, "obj2": 0.22941899759840848}, {"determining": "( ( ( ( AMS * ACS ) / FirstVNF_Mem_Server ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - ( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) ) ) )", "obj1": 0.6055776892430279, "obj2": 0.3440115320094482}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( ( DDR - MDR ) * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( RCSe / CS ) * Min( MUM ,DS ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.10443935511159198}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,RRSe ) * ( ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) - MUC ) )", "obj1": 0.24900398406374502, "obj2": 0.6760687714394108}, {"determining": "( ( ARS / ARS ) - Max( ( AMS / FirstVNF_RAM ),FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,RRSe ) * DS )", "obj1": 0.9442231075697212, "obj2": 0.040447093806207854}, {"determining": "( ( PN - MDR ) + ( Const - MDR ) )", "choosing": "( ( RCSe / ( RRSe / CS ) ) * Min( MUM ,DS ) )", "obj1": 0.8406374501992032, "obj2": 0.08156110405056183}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( RCSe / CS ) * Max( MUM,DS ) )", "obj1": 0.7430278884462151, "obj2": 0.16719061939644617}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( AMS / FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MLU / DS ) )", "obj1": 0.1454183266932271, "obj2": 0.7903212010665471}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),Max( Const,( ACS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MLU * DS ) ,MLU ) / ( Max( ( RCSe - DS ),RCSe ) / DS ) )", "obj1": 0.19123505976095617, "obj2": 0.7581462019900463}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( MUR * DS ) )", "obj1": 0.48804780876494025, "obj2": 0.4418547752488703}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9402390438247012, "obj2": 0.041457764681296645}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / MDR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) * Min( MUM ,DS ) )", "obj1": 0.27689243027888444, "obj2": 0.6014673621415635}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.7569721115537849, "obj2": 0.1499115683106996}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.2589641434262948, "obj2": 0.6215851969178109}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.43227091633466136, "obj2": 0.4622054118760466}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - FirstVNF_Mem_Server )", "choosing": "( Min( Max( MUC,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.2549800796812749, "obj2": 0.6461828442573473}, {"determining": "( ( Const + AMS ) * Min( ( DDR - MDR ) ,PN ) )", "choosing": "Min( ( RRSe - MUM ) ,( RRSe / CS ) )", "obj1": 0.300796812749004, "obj2": 0.5940180333783162}, {"determining": "( ( DDR - MDR ) + ( Const - MDR ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,DS ) )", "obj1": 0.5179282868525896, "obj2": 0.41224460934675267}, {"determining": "Max( ( DDR * FirstVNF_RAM_Server ),( MRS / FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) + ( RCSe - RCSe ) )", "obj1": 0.41434262948207173, "obj2": 0.5098364512131608}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Const / ( ( FirstVNF_RAM_Server + ARS ) * Max( ARS,BR ) ) ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( Min( ( MUM / MUC ) ,( MUC * MUM ) ) + CS ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5594978215693258}, {"determining": "Min( FirstVNF_RAM ,Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( MUR * Min( MUM ,RCSe ) ) * Max( RMSe,( CS * ( Max( MUC,DS ) + ( DS * MLU ) ) ) ) )", "obj1": 0.40239043824701193, "obj2": 0.530442074567548}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - FirstVNF_CPU ) ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( ( DS - RRSe ) * ( DS * MLU ) ) )", "obj1": 0.4243027888446215, "obj2": 0.49915243427743733}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / RRS ) ,( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + MUR ) ) )", "obj1": 0.3545816733067729, "obj2": 0.5494599491802322}, {"determining": "( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( RRSe / CS ) )", "obj1": 0.32669322709163345, "obj2": 0.5727886090913663}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.46215139442231074, "obj2": 0.45177093286906017}, {"determining": "( ( ( ( AMS * ACS ) / FirstVNF_Mem_Server ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.46215139442231074, "obj2": 0.45177093286906017}, {"determining": "( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Min( ( RRSe - MUR ) ,( RRSe / CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5745899654052102}, {"determining": "( ( DDR - MDR ) + ( Const - MDR ) )", "choosing": "Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.4269040450486255}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7888630984677278}, {"determining": "( AMS * ( FirstVNF_RAM / FirstVNF_RAM ) )", "choosing": "( MLU + ( MLU / DS ) )", "obj1": 0.18127490039840638, "obj2": 0.7769391674197982}, {"determining": "Max( ( FirstVNF_RAM * BR ),( DDR + FirstVNF_Mem ) )", "choosing": "( ( RMSe + DS ) / ( ( ( MUC + MUM ) - DS ) - RCSe ) )", "obj1": 0.39243027888446214, "obj2": 0.5379558446586248}, {"determining": "Max( ( RRS + MDR ),( Const + DDR ) )", "choosing": "( Min( ( MLU * DS ) ,CS ) / ( ( ( RCSe - DS ) - RCSe ) / MUC ) )", "obj1": 0.19123505976095617, "obj2": 0.7581462019900463}, {"determining": "Max( ( RRS + MDR ),( Const + DDR ) )", "choosing": "( Min( ( MLU * DS ) ,CS ) / ( ( ( RCSe - DS ) - RCSe ) / MUC ) )", "obj1": 0.17928286852589642, "obj2": 0.7774198082900535}, {"determining": "( ( DDR - MDR ) + ( Const - FirstVNF_RAM ) )", "choosing": "Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + CS ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.4269040450486255}, {"determining": "Max( ( FirstVNF_RAM * Const ),( DDR + FirstVNF_Mem ) )", "choosing": "( ( RMSe + DS ) / ( ( RCSe - DS ) - RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.5422284899749894}, {"determining": "( ( ( ( AMS * ACS ) / FirstVNF_Mem_Server ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - ( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MLU * MLU ) ,( RCSe - RCSe ) ) ) ) )", "obj1": 0.6055776892430279, "obj2": 0.3440115320094482}, {"determining": "Max( ( MRS + FirstVNF_RAM_Server ),( Const + DDR ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( ( DS - RRSe ) * ( DS * MLU ) ) )", "obj1": 0.4243027888446215, "obj2": 0.49915243427743733}, {"determining": "( ( ( ( AMS * ACS ) / ( ARS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,Const ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( Min( Min( DS ,RRSe ) ,Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.43227091633466136, "obj2": 0.4622054118760466}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5455954292724663}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.3844621513944223, "obj2": 0.540302660952221}, {"determining": "Max( ( FirstVNF_RAM * Const ),( DDR + FirstVNF_Mem ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7888630984677278}], "4": [{"determining": "( ( DDR - MDR ) + ( Const - Max( ( DDR * Const ),( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe - DS ) - RCSe ) * Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( DDR - BR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.11155378486055777, "obj2": 0.8180621490385699}, {"determining": "Max( ( FirstVNF_RAM + ARS ),( Const + DDR ) )", "choosing": "( ( ( CS * DS ) / ( RMSe * MLU ) ) / ( ( MUC * MUM ) * ( DS * MLU ) ) )", "obj1": 0.2290836653386454, "obj2": 0.6959136682693603}, {"determining": "( ( DDR - MDR ) + ( Const - MDR ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,DS ) )", "obj1": 0.5278884462151394, "obj2": 0.3884839019606561}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( Max( MUC,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.545816733067729, "obj2": 0.28013519516752433}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + MUM ) / ( MUR * DS ) )", "obj1": 0.18725099601593626, "obj2": 0.7540120572692343}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + MUM ) ) )", "obj1": 0.900398406374502, "obj2": 0.04653780063953876}, {"determining": "( ( PN - MDR ) + ( Const - MDR ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.8266932270916335, "obj2": 0.07235218887343838}, {"determining": "( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ) - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( ( DS + MUM ) / ( MUR * DS ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9820717131474104, "obj2": 0.010543293105980952}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( RRSe / CS ) )", "obj1": 0.7888446215139442, "obj2": 0.08954403087291106}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.599601593625498, "obj2": 0.25920734018645164}, {"determining": "Max( ( FirstVNF_RAM * Const ),( DDR + FirstVNF_Mem ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / Min( Max( MUC,DS ) ,RRSe ) )", "obj1": 0.3944223107569721, "obj2": 0.5269417877875622}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "Max( Max( ( Const + FirstVNF_RAM ),MRS ),( Const - ( ACS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MLU * DS ) ,MLU ) / ( ( ( RCSe - RCSe ) - RCSe ) / DS ) )", "obj1": 0.15338645418326693, "obj2": 0.7731910792762806}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / MDR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.13745019920318724, "obj2": 0.7879646522671173}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / MDR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) * Min( MUM ,DS ) )", "obj1": 0.27689243027888444, "obj2": 0.6014673621415635}, {"determining": "( ( ( ( AMS * ACS ) / ( ARS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,Const ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( Min( Min( DS ,RRSe ) ,Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.43227091633466136, "obj2": 0.4622054118760466}, {"determining": "Max( ( DDR * FirstVNF_RAM_Server ),( MRS / FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUR / MUR ),( RCSe - RCSe ) )", "obj1": 0.34860557768924305, "obj2": 0.5331849245944321}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( Min( Max( MUC,( Min( Max( MUC,( RMSe * MUC ) ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.24900398406374502, "obj2": 0.6455042894478761}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.7569721115537849, "obj2": 0.1499115683106996}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( DS + MUM ) / ( MUR * DS ) )", "obj1": 0.5119521912350598, "obj2": 0.4074017872232318}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6772908366533864, "obj2": 0.22941899759840848}, {"determining": "Max( ( FirstVNF_RAM * FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe / DS ) - RMSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.807527923915944}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( DS + MUM ) / ( MUR + ( RCSe + CS ) ) )", "obj1": 0.7828685258964143, "obj2": 0.13040874387627152}, {"determining": "( ( ( ( Max( MRS,MRS ) * ACS ) / FirstVNF_Mem_Server ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( ( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - ( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) ) ) )", "obj1": 0.4601593625498008, "obj2": 0.44976000732322235}, {"determining": "( ( PN - MDR ) + ( Const - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.8187250996015937, "obj2": 0.07797505010477222}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( DS * MLU ) + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.7151394422310757, "obj2": 0.17850594531424538}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( ( FirstVNF_RAM * Const ),( DDR + FirstVNF_Mem ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( Min( Max( MUC,DS ) ,( DS * DS ) ) * ( RRSe - MUC ) ) * Min( MUM ,DS ) )", "obj1": 0.2908366533864542, "obj2": 0.5877808213239655}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - Max( ARS,MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RRSe + MUM ) / ( MUR * DS ) ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.6952191235059761, "obj2": 0.22159699630002036}, {"determining": "Max( ( DDR * FirstVNF_RAM_Server ),( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MUC ) ) * ( Min( RCSe ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.3107569721115538, "obj2": 0.5685620425397419}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - FirstVNF_CPU ) ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( ( DS - RRSe ) * ( DS * MLU ) ) )", "obj1": 0.4243027888446215, "obj2": 0.49915243427743733}, {"determining": "Min( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR * ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5756972111553785, "obj2": 0.2766827451903712}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR / CS ) + ( RCSe - RCSe ) )", "obj1": 0.7410358565737052, "obj2": 0.158186964936932}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.7290836653386454, "obj2": 0.16903660174555266}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Const / ( ( FirstVNF_RAM_Server + ARS ) * Max( ARS,BR ) ) ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( Min( ( MUM / MUC ) ,( MUC * MUM ) ) + CS ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5594978215693258}, {"determining": "Max( ( BR - FirstVNF_Mem ),( ( ( MRS / MDR ) * Max( MRS,ARS ) ) + ( ( Const - MDR ) / ( CRS + BR ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.1342947250609277}, {"determining": "( Max( ( ARS / ARS ),MDR ) - FirstVNF_Mem_Server )", "choosing": "( Min( Max( MUC,( ( Min( RMSe ,RRSe ) * DS ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.24900398406374502, "obj2": 0.6455042894478761}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( ARS / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * ( MUM + DS ) ) )", "obj1": 0.9382470119521913, "obj2": 0.044231537219232786}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.2589641434262948, "obj2": 0.6215851969178109}, {"determining": "( ( DDR - MDR ) + ( Const - MDR ) )", "choosing": "Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.4269040450486255}, {"determining": "Max( Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ),( Const + DDR ) )", "choosing": "( Min( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ,CS ) / ( ( ( RCSe - DS ) - RCSe ) / MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5780669516420924}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / CS ) + ( RCSe - MUC ) )", "obj1": 0.34063745019920316, "obj2": 0.5393371809713465}, {"determining": "( ( ARS / ARS ) - Max( ( AMS / FirstVNF_RAM ),FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,RRSe ) * DS )", "obj1": 0.9442231075697212, "obj2": 0.040447093806207854}, {"determining": "( ( DDR - MDR ) + ( Max( MRS,MRS ) - MDR ) )", "choosing": "Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.20029906752915322}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Max( AMS,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( MLU * DS ) ,CS ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.4681274900398406, "obj2": 0.4422184386714832}, {"determining": "( ( ARS / ARS ) - Max( ( AMS / FirstVNF_RAM ),FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,RRSe ) * DS )", "obj1": 0.9442231075697212, "obj2": 0.040447093806207854}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( MUR * DS ) )", "obj1": 0.48804780876494025, "obj2": 0.4418547752488703}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.2589641434262948, "obj2": 0.6215851969178109}, {"determining": "Max( ( DDR * FirstVNF_RAM_Server ),( MRS / FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) + ( RCSe - RCSe ) )", "obj1": 0.41434262948207173, "obj2": 0.5098364512131608}, {"determining": "( ( DDR - MDR ) + ( Max( MRS,MRS ) - MDR ) )", "choosing": "Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.20029906752915322}], "5": [{"determining": "( ( DDR - MDR ) + ( Const - Max( ( DDR * Const ),( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe - DS ) - RCSe ) * Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.11155378486055777, "obj2": 0.8180621490385699}, {"determining": "( ( DDR - MDR ) + ( Const - Max( ( DDR * Const ),( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe - DS ) - RCSe ) * Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM * Const ),( DDR + FirstVNF_Mem ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.11155378486055777, "obj2": 0.8180621490385699}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5219123505976095, "obj2": 0.3685598228476486}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( Min( Max( MUC,( Min( ( MUR / CS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.45219123505976094, "obj2": 0.4086169568330839}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + MUM ) ) )", "obj1": 0.900398406374502, "obj2": 0.04653780063953876}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16786327986579574}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( AMS - FirstVNF_CPU ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR * CS ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( ( ( MUC / ( RCSe - RCSe ) ) - Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( RRSe / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.43227091633466136, "obj2": 0.44988218437711713}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5418326693227091, "obj2": 0.28320165763596855}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8386454183266933, "obj2": 0.06561443624248497}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( DS + MUM ) / ( MUR * DS ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.6553784860557769, "obj2": 0.21152888181496887}, {"determining": "Max( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ),( Const + DDR ) )", "choosing": "( ( ( CS * RRSe ) / RMSe ) / ( ( MUC * MUM ) * ( DS * MLU ) ) )", "obj1": 0.22111553784860558, "obj2": 0.7292446471753425}, {"determining": "Max( Max( ( Const + FirstVNF_RAM ),MRS ),( Const - ( ACS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MLU * DS ) ,MLU ) / ( ( ( RCSe - RCSe ) - RCSe ) / DS ) )", "obj1": 0.15338645418326693, "obj2": 0.7731910792762806}, {"determining": "( ( Const + AMS ) * Min( Max( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ),MDR ) ,PN ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,MUM ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.09774056863181908}, {"determining": "Max( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ),( Const + DDR ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( ( MUC * MUM ) * ( Min( DS ,MUM ) * MLU ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6841830487568171}, {"determining": "Max( ( BR - FirstVNF_Mem ),( ( ( MRS / MDR ) * Max( MRS,ARS ) ) + ( ( Const - MDR ) / ( CRS + BR ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.1384249161168409}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( DS + MUM ) / ( MUR * DS ) )", "obj1": 0.5119521912350598, "obj2": 0.4074017872232318}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / MDR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.13745019920318724, "obj2": 0.7879646522671173}, {"determining": "Max( ( ( DDR - MDR ) / ( Max( MRS,MRS ) - MDR ) ),( Const + DDR ) )", "choosing": "( Min( ( CS * DS ) ,Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.1852589641434263, "obj2": 0.7528424144447292}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + Min( Max( MUC,DS ) ,RRSe ) )", "obj1": 0.7191235059760956, "obj2": 0.167406896004213}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.32270916334661354, "obj2": 0.5507293482861971}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( MLU * DS ) ,CS ) / ( ( ( RCSe - RCSe ) - RCSe ) / MUC ) )", "obj1": 0.1952191235059761, "obj2": 0.7492020388734633}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( ( DS - RRSe ) * ( DS * MLU ) ) )", "obj1": 0.42828685258964144, "obj2": 0.48852931213942896}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( DS * MLU ) + MUM ) / ( RCSe + ( RCSe + CS ) ) )", "obj1": 0.6533864541832669, "obj2": 0.22570010902746293}, {"determining": "Max( ( FirstVNF_RAM * FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe / DS ) - RMSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.807527923915944}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / CS ) + ( Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) - MUC ) )", "obj1": 0.34860557768924305, "obj2": 0.5273574705129093}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.599601593625498, "obj2": 0.25920734018645164}, {"determining": "( ( DDR - MDR ) + Max( ( MRS + FirstVNF_RAM ),( Const + DDR ) ) )", "choosing": "Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.5268694986438305}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.28286852589641437, "obj2": 0.5854872663928146}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) + ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe - MLU ) ) / ( ( MUC * MUM ) * ( DS * MLU ) ) )", "obj1": 0.5199203187250996, "obj2": 0.4036201684406741}, {"determining": "Max( ( MRS + ARS ),( Const + DDR ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( ( MUC * MUM ) * ( DS * MLU ) ) )", "obj1": 0.2290836653386454, "obj2": 0.6959136682693603}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / CS ) + ( RCSe - MUC ) )", "obj1": 0.34063745019920316, "obj2": 0.5393371809713465}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( ARS / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * ( MUM + DS ) ) )", "obj1": 0.9382470119521913, "obj2": 0.044231537219232786}, {"determining": "Min( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR * ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5756972111553785, "obj2": 0.2766827451903712}, {"determining": "Max( ( DDR * FirstVNF_RAM_Server ),( MRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MUC ) ) * ( Min( RCSe ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.3107569721115538, "obj2": 0.5685620425397419}, {"determining": "Max( Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ),( Const + DDR ) )", "choosing": "( Min( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ,CS ) / ( ( ( RCSe - DS ) - RCSe ) / MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5780669516420924}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( Min( Max( MUC,( Min( Max( MUC,( RMSe * MUC ) ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.24900398406374502, "obj2": 0.6455042894478761}, {"determining": "Max( ( DDR * FirstVNF_RAM_Server ),( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ARS,CRS ) ) ,( ( MRS - ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( MUR / CS ),( RCSe - ( ( ( MUM - CS ) - RCSe ) / MUC ) ) )", "obj1": 0.39243027888446214, "obj2": 0.5185379863115394}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / MDR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) * Min( MUM ,DS ) )", "obj1": 0.27689243027888444, "obj2": 0.6014673621415635}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.8047808764940239, "obj2": 0.07444724800564805}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - FirstVNF_CPU ) ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( ( DS - RRSe ) * ( DS * MLU ) ) )", "obj1": 0.4243027888446215, "obj2": 0.49915243427743733}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.599601593625498, "obj2": 0.25920734018645164}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.545816733067729, "obj2": 0.28013519516752433}, {"determining": "( ( DDR - MDR ) + ( Const - Max( ( DDR * Const ),( ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) / ( FirstVNF_RAM - AMS ) ) ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe - MUM ) - RCSe ) * Min( MUM ,RRSe ) )", "obj1": 0.9800796812749004, "obj2": 0.015642383690398647}, {"determining": "( ( PN - MDR ) + MRS )", "choosing": "( Min( RMSe ,CS ) * ( RRSe - MUC ) )", "obj1": 0.796812749003984, "obj2": 0.07900615683784241}, {"determining": "( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ) - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.9462151394422311, "obj2": 0.027889248386364866}, {"determining": "Max( ( FirstVNF_RAM * Const ),( ( Const + FirstVNF_RAM ) + FirstVNF_Mem ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / Min( Max( MUC,DS ) ,Min( Max( MUC,( RMSe * MUC ) ) ,RRSe ) ) )", "obj1": 0.40836653386454186, "obj2": 0.5118634724871003}, {"determining": "( ( PN - MDR ) + ( Const - MDR ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.8266932270916335, "obj2": 0.07235218887343838}, {"determining": "( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ) - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) )", "obj1": 0.9621513944223108, "obj2": 0.022433327391421842}], "6": [{"determining": "Max( ( MRS + FirstVNF_RAM ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.11155378486055777, "obj2": 0.8180621490385699}, {"determining": "( ( DDR - MDR ) + ( Const - Max( ( DDR * Const ),( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS * RRSe ) / RMSe ) / ( ( MUC * MUM ) * ( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - MDR ) + ( Const - Max( ( DDR * Const ),( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe - DS ) - RCSe ) * Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.11155378486055777, "obj2": 0.8180621490385699}, {"determining": "( ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) + Min( Const ,MDR ) )", "choosing": "( ( DS + MUM ) / ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe / MUC ) ) )", "obj1": 0.50199203187251, "obj2": 0.36746558407745644}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( Min( Max( MUC,( Min( ( MUR / CS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.45219123505976094, "obj2": 0.4086169568330839}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + RMSe ) / ( RMSe + ( RCSe + MUM ) ) )", "obj1": 0.900398406374502, "obj2": 0.046210459120598124}, {"determining": "Max( ( MRS * FirstVNF_CPU_Server ),( Const + DDR ) )", "choosing": "( ( ( CS * RRSe ) - ( RMSe * MLU ) ) / ( Max( MUC,( RMSe * MUC ) ) * ( DS * MLU ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7154748973043442}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * MDR )", "choosing": "( Min( Max( MUR,( RCSe - MUM ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5418326693227091, "obj2": 0.2808731945916784}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "Max( Max( ( Const + FirstVNF_RAM ),MRS ),( Const - ( ACS - FirstVNF_CPU ) ) )", "choosing": "( ( ( CS * RRSe ) / RMSe ) / ( ( MUC * MUM ) * ( DS * MLU ) ) )", "obj1": 0.2250996015936255, "obj2": 0.6899068279567786}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( MUR - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.6752988047808764, "obj2": 0.17900410595375899}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( RMSe + ( RCSe + CS ) ) / ( ( DS - RRSe ) * ( DS * MLU ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4794391255439883}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( AMS - FirstVNF_CPU ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR * CS ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( ( ( MUC / ( RCSe - RCSe ) ) - Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( RRSe / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.43227091633466136, "obj2": 0.44988218437711713}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Max( ( Max( ( PN - MDR ),( Const - MDR ) ) * FirstVNF_CPU_Server ),( ACS - AMS ) ) ) * Min( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) ,( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( Max( RCSe,DS ) * RRSe ) * ( ( RCSe / Min( ( RRSe / MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8386454183266933, "obj2": 0.06561443624248497}, {"determining": "Max( ( ( DDR - MDR ) / ( Max( MRS,MRS ) - MDR ) ),( Const + DDR ) )", "choosing": "( Min( ( CS * DS ) ,Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.1852589641434263, "obj2": 0.7528424144447292}, {"determining": "Max( ( DDR * FirstVNF_RAM_Server ),( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ARS,CRS ) ) ,( ( MRS - ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( MUR / CS ),( RCSe - ( ( ( MUM - CS ) - RCSe ) / MUC ) ) )", "obj1": 0.39243027888446214, "obj2": 0.5185379863115394}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( DS * MLU ) + MUM ) / ( RCSe + ( RCSe + CS ) ) )", "obj1": 0.6533864541832669, "obj2": 0.22570010902746293}, {"determining": "Max( ( FirstVNF_RAM * FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe / DS ) - RMSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.807527923915944}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * Max( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * FirstVNF_CPU_Server ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ),( Const + DDR ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( ( ( CS * RRSe ) / RMSe ) / ( ( MLU * MUM ) * ( DS * MLU ) ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.7450199203187251, "obj2": 0.15770901123828504}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ) + ( Const - MDR ) )", "choosing": "( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.4043824701195219, "obj2": 0.493597171637952}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.599601593625498, "obj2": 0.25920734018645164}, {"determining": "( ( MDR + Const ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( RCSe + CS ) * ( RRSe - MUC ) )", "obj1": 0.2549800796812749, "obj2": 0.6231225997216461}, {"determining": "( ( DDR - MDR ) + ( Const - MDR ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.43227091633466136, "obj2": 0.44988218437711713}, {"determining": "Max( ( BR - FirstVNF_Mem ),( ( ( MRS / MDR ) * Max( MRS,ARS ) ) + ( ( Const - MDR ) / ( CRS + BR ) ) ) )", "choosing": "( ( MUR / CS ) + ( Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) - MUC ) )", "obj1": 0.7729083665338645, "obj2": 0.12170614179208807}, {"determining": "Max( Max( ( Const + FirstVNF_RAM ),MRS ),( Const - ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ) )", "choosing": "( ( ( CS * RRSe ) / RMSe ) / ( ( ( RCSe - RCSe ) - RCSe ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7620700605119544}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( ARS / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * ( MUM + DS ) ) )", "obj1": 0.9382470119521913, "obj2": 0.044231537219232786}, {"determining": "Min( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR * ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5756972111553785, "obj2": 0.2766827451903712}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / CS ) + ( Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) - MUC ) )", "obj1": 0.37649402390438247, "obj2": 0.5233459297156314}, {"determining": "Max( ( BR - FirstVNF_Mem ),( ( ( MRS / MDR ) * Max( ( Const + DDR ),ARS ) ) + ( ( Const - MDR ) / ( CRS + BR ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( ( ( RCSe - DS ) - RCSe ) ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.13727884787249114}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16786327986579574}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "( ( DS + MUM ) * ( RRSe - MUC ) )", "obj1": 0.27091633466135456, "obj2": 0.6160449775447202}, {"determining": "Max( Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ),( Const + DDR ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( ( MUC * MUM ) * ( Min( DS ,MUM ) * MLU ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6782455905507774}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / MDR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) * Min( MUM ,DS ) )", "obj1": 0.27689243027888444, "obj2": 0.6014673621415635}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + Min( Max( MUC,DS ) ,RRSe ) )", "obj1": 0.7191235059760956, "obj2": 0.167406896004213}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.7569721115537849, "obj2": 0.1499115683106996}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( ( PN - MDR ) / ACS ) )", "choosing": "( ( MUR / CS ) + ( Min( Max( ( Min( DS ,MUR ) + Max( RCSe,MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) - CS ) )", "obj1": 0.7828685258964143, "obj2": 0.08708612606578561}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5418326693227091, "obj2": 0.2808731945916784}, {"determining": "Max( Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ),( Const + DDR ) )", "choosing": "( Min( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ,CS ) / ( ( ( RCSe - DS ) - RCSe ) / MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5780669516420924}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.28286852589641437, "obj2": 0.5854872663928146}, {"determining": "Max( ( MRS + ARS ),( Const + DDR ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( ( MUC * MUM ) * ( DS * MLU ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6665473204931895}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.545816733067729, "obj2": 0.28013519516752433}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( DS + MUM ) / ( MUR * DS ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.6553784860557769, "obj2": 0.21152888181496887}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.32270916334661354, "obj2": 0.5507293482861971}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.599601593625498, "obj2": 0.25920734018645164}, {"determining": "Max( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ),( Const + DDR ) )", "choosing": "( Min( ( MLU * DS ) ,MLU ) / ( ( ( RCSe - RCSe ) - RCSe ) / DS ) )", "obj1": 0.15139442231075698, "obj2": 0.780111603027764}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( DS + MUM ) / ( MUR * DS ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.6553784860557769, "obj2": 0.21152888181496887}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.13745019920318724, "obj2": 0.7879646522671173}, {"determining": "Max( ( BR - FirstVNF_Mem ),( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / MDR ) + Max( MRS,ARS ) ) + ( ( Const - MDR ) / ( CRS + BR ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( DS ,MUR ) + ( ( RMSe + DS ) / ( CS - RCSe ) ) ),( Min( CS ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0017303877851086336}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.09774056863181908}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.350597609561753, "obj2": 0.5246043567183589}], "7": [{"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( MRS - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( PN - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( ( ( MUR - DS ) - RCSe ) + ( RCSe + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - MDR ) + ( Const - Max( ( DDR * Const ),( DDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS * RRSe ) / RMSe ) / ( ( MUC * MUM ) * ( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( Max( MUR,( Min( Max( MLU,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.4900398406374502, "obj2": 0.34753672631840776}, {"determining": "( Max( ( RRS + MDR ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) * MLU ) + MUM ) / ( RCSe + ( RCSe + CS ) ) )", "obj1": 0.5, "obj2": 0.30661275680379707}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.5418326693227091, "obj2": 0.2774888608979129}, {"determining": "( ( DDR - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.4681274900398406, "obj2": 0.40759187332733}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * Max( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * FirstVNF_CPU_Server ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ),( Const + DDR ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( ( ( CS * RRSe ) / RMSe ) / ( ( MLU * MUM ) * ( DS * MLU ) ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.7450199203187251, "obj2": 0.15770901123828504}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.32270916334661354, "obj2": 0.5507293482861971}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( Min( Max( MUC,( Min( ( MUR / CS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.45219123505976094, "obj2": 0.4086169568330839}, {"determining": "Min( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR * ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5756972111553785, "obj2": 0.2766827451903712}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.7589641434262948, "obj2": 0.10580949124112211}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( ARS / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * ( MUM + DS ) ) )", "obj1": 0.9382470119521913, "obj2": 0.044231537219232786}, {"determining": "Max( ( MRS + ARS ),( Const + DDR ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( ( MUC * MUM ) * ( DS * MLU ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6665473204931895}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,( DS - RRSe ) ) ) * ( ( ( DS - MUR ) / ( MUR - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.6892430278884463, "obj2": 0.1661562041480144}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.7569721115537849, "obj2": 0.1499115683106996}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( AMS - FirstVNF_CPU ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR * CS ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( ( ( MUC / ( RCSe - RCSe ) ) - Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( RRSe / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.43227091633466136, "obj2": 0.44988218437711713}, {"determining": "( Max( FirstVNF_Mem,MDR ) - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,CS ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.9561752988047809, "obj2": 0.02939662051347593}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_Mem ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + RMSe ) / ( RMSe + ( RCSe + MUM ) ) )", "obj1": 0.900398406374502, "obj2": 0.046210459120598124}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * Min( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) ,( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( Max( MUC,DS ) * RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8386454183266933, "obj2": 0.06561443624248497}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.15737051792828685, "obj2": 0.7564675712620392}, {"determining": "( ( DDR - MDR ) + ( Const - FirstVNF_Mem ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.9780876494023905, "obj2": 0.017819994956368348}, {"determining": "Max( ( ( DDR - MDR ) / ( Max( MRS,MRS ) - MDR ) ),( Const + DDR ) )", "choosing": "( Min( ( CS * DS ) ,Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.1852589641434263, "obj2": 0.7528424144447292}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe + CS ) * ( RRSe - MUC ) )", "obj1": 0.2549800796812749, "obj2": 0.6231225997216461}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( MUR - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.6752988047808764, "obj2": 0.17900410595375899}, {"determining": "Max( Max( ( Const + FirstVNF_RAM ),MRS ),( Const - ( ACS - FirstVNF_CPU ) ) )", "choosing": "( ( ( CS * RRSe ) / RMSe ) / ( ( MUC * MUM ) * ( DS * MLU ) ) )", "obj1": 0.2250996015936255, "obj2": 0.6899068279567786}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + MUM ) ) )", "obj1": 0.900398406374502, "obj2": 0.046210459120598124}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( MUR * DS ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / MLU ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.647410358565737, "obj2": 0.2129937448305288}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) )", "choosing": "( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.47420308411200346}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ) + ( Max( Max( ( Const + FirstVNF_RAM ),MRS ),( Const - ( ACS - FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( ( DS + ( ( ( CS * RRSe ) / RMSe ) / ( ( MUC * MUM ) * ( DS * MLU ) ) ) ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.7107376385094417}, {"determining": "Max( Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ),( Const + DDR ) )", "choosing": "( ( MUR / CS ) + ( Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) - MUC ) )", "obj1": 0.3386454183266932, "obj2": 0.532998832136875}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS - AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( ( ( MUC / RCSe ) + Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6613545816733067, "obj2": 0.2070997908498687}, {"determining": "Max( Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ),( Const + DDR ) )", "choosing": "( Min( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ,CS ) / ( ( ( RCSe - DS ) - RCSe ) / MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5780669516420924}, {"determining": "Max( ( ( Const + FirstVNF_RAM ) + MRS ),( Const - ( ACS - FirstVNF_CPU ) ) )", "choosing": "( ( ( CS * RRSe ) / ( RMSe * MLU ) ) / ( Max( MUC,( RMSe * MUC ) ) * ( RMSe * MLU ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7332054868753337}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( Max( MUR,( Min( ( DS - RMSe ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( DS - MUC ) )", "obj1": 0.601593625498008, "obj2": 0.252874923043079}, {"determining": "Max( ( MRS * FirstVNF_CPU_Server ),( Const + DDR ) )", "choosing": "( ( ( CS * RRSe ) - ( RMSe * MLU ) ) / ( Max( MUC,( RMSe * MUC ) ) * ( DS * MLU ) ) )", "obj1": 0.1952191235059761, "obj2": 0.7154748973043442}, {"determining": "( ( DDR - MDR ) + ( Const - MDR ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.43227091633466136, "obj2": 0.44988218437711713}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.28286852589641437, "obj2": 0.5854872663928146}, {"determining": "Max( ( DDR * FirstVNF_RAM_Server ),( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ARS,CRS ) ) ,( ( MRS - ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( MUR / CS ),( RCSe - ( ( ( MUM - CS ) - RCSe ) / MUC ) ) )", "obj1": 0.39243027888446214, "obj2": 0.5185379863115394}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Max( ( Max( ( PN - MDR ),( Const - MDR ) ) * FirstVNF_CPU_Server ),( ACS - AMS ) ) ) * Min( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) ,( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( Max( RCSe,DS ) * RRSe ) * ( ( RCSe / Min( ( RRSe / MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8386454183266933, "obj2": 0.06561443624248497}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( ( PN - MDR ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8167330677290837, "obj2": 0.06735848715911841}, {"determining": "Max( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ),( Const + DDR ) )", "choosing": "( Min( ( MLU * DS ) ,MLU ) / ( ( ( RCSe - RCSe ) - RCSe ) / DS ) )", "obj1": 0.15139442231075698, "obj2": 0.780111603027764}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( ( PN - MDR ) / ACS ) )", "choosing": "( ( MUR / CS ) + ( Min( Max( ( Min( DS ,MUR ) + Max( RCSe,MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) - CS ) )", "obj1": 0.7828685258964143, "obj2": 0.08708612606578561}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( ( PN - MDR ) / ACS ) )", "choosing": "( ( MUR / CS ) + ( Min( Max( ( Min( DS ,MUR ) + Max( RCSe,MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) - CS ) )", "obj1": 0.796812749003984, "obj2": 0.08160496544433549}, {"determining": "Max( ( MRS + ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.13147410358565736, "obj2": 0.8021302544169403}, {"determining": "Max( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ),( Const + DDR ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.2689243027888446, "obj2": 0.6183787354717124}, {"determining": "Max( ( BR - FirstVNF_Mem ),( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / MDR ) + Max( MRS,ARS ) ) + ( ( Const - MDR ) / ( CRS + BR ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( DS ,MUR ) + ( ( RMSe + DS ) / ( CS - RCSe ) ) ),( Min( CS ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.9920318725099602, "obj2": 0.004814969970726202}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( MUR / CS ) + ( Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) - CS ) )", "obj1": 0.8147410358565738, "obj2": 0.0809523570108203}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * ( ( AMS * FirstVNF_CPU_Server ) - ( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.350597609561753, "obj2": 0.5246043567183589}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / MDR ) ) / ( FirstVNF_CPU + Const ) )", "choosing": "( ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) * Min( ( RMSe + ( RCSe + DS ) ) ,DS ) )", "obj1": 0.27091633466135456, "obj2": 0.6047904728029266}], "8": [{"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( ( ( AMS * PN ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( Min( DS ,RMSe ) + ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( MRS - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( PN - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( ( ( MUR - DS ) - RCSe ) + ( RCSe + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * Max( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * FirstVNF_CPU_Server ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ),( Const + DDR ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( ( ( CS * RRSe ) / RMSe ) / ( ( MLU * MUM ) * ( DS * MLU ) ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.7450199203187251, "obj2": 0.15770901123828504}, {"determining": "Max( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ),( Const + DDR ) )", "choosing": "( Min( ( MLU * DS ) ,MLU ) / ( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) / DS ) )", "obj1": 0.2450199203187251, "obj2": 0.6594409065261793}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) )", "choosing": "( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.47420308411200346}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( ( FirstVNF_Mem * MDR ) * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.4820717131474104, "obj2": 0.35809796970700325}, {"determining": "( Max( ( RRS + MDR ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) * MLU ) + MUM ) / ( RCSe + ( RCSe + CS ) ) )", "obj1": 0.5, "obj2": 0.30661275680379707}, {"determining": "Max( ( ( DDR - MDR ) / ( Max( MRS,MRS ) - MDR ) ),( Const + DDR ) )", "choosing": "( Min( ( CS * DS ) ,Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.1852589641434263, "obj2": 0.7528424144447292}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( Max( ( MRS + ARS ),( Const + DDR ) ) - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( MUC * MUM ) ) / DS ) )", "obj1": 0.21912350597609562, "obj2": 0.6896337376455507}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( DS ,MUR ) + ( ( RMSe + DS ) / ( CS - RCSe ) ) ),( Min( CS ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.8844621513944223, "obj2": 0.05392740830165556}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * ( ( AMS * FirstVNF_CPU_Server ) - ( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.350597609561753, "obj2": 0.5246043567183589}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.19322709163346613, "obj2": 0.7117396112179729}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6872509960159362, "obj2": 0.1620881291754962}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( ARS / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * ( MUM + DS ) ) )", "obj1": 0.9382470119521913, "obj2": 0.044231537219232786}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.5278884462151394, "obj2": 0.30224434000746175}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( MUR - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.6752988047808764, "obj2": 0.17900410595375899}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( ( PN - MDR ) / MRS ) )", "choosing": "( ( MUR / CS ) + ( ( ( CS * RRSe ) / RMSe ) / ( ( MUC * MUM ) * ( DS * MLU ) ) ) )", "obj1": 0.7529880478087649, "obj2": 0.11230446892793215}, {"determining": "( ( DDR - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.4681274900398406, "obj2": 0.40759187332733}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.3745019920318725, "obj2": 0.49367235908166246}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - ARS ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( Max( MUR,( Min( ( DS - RMSe ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( DS - MUC ) )", "obj1": 0.601593625498008, "obj2": 0.252874923043079}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( MRS + MRS ) ),Max( ( ACS + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( Max( MLU,DS ) * Max( MUM,DS ) ) ) - ( RCSe * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.649402390438247, "obj2": 0.20487071042771604}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) ) ) + ( Const - MDR ) )", "choosing": "( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( Min( ( DS * DS ) ,MLU ) * MUM ) + ( RCSe + CS ) ) )", "obj1": 0.4342629482071713, "obj2": 0.43805986688820825}, {"determining": "( ( DDR - MDR ) + ( Const - FirstVNF_Mem ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.9780876494023905, "obj2": 0.017819994956368348}, {"determining": "Min( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR * ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5756972111553785, "obj2": 0.2766827451903712}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.5418326693227091, "obj2": 0.2774888608979129}, {"determining": "Max( ( MRS + ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.13147410358565736, "obj2": 0.8021302544169403}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( MUR * DS ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / MLU ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.647410358565737, "obj2": 0.2129937448305288}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7669593962639596}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.7589641434262948, "obj2": 0.10580949124112211}, {"determining": "Max( Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ),( Const + DDR ) )", "choosing": "( ( MUR / CS ) + ( Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) - MUC ) )", "obj1": 0.3386454183266932, "obj2": 0.532998832136875}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.28286852589641437, "obj2": 0.5854872663928146}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( Max( MUR,( Min( Max( MLU,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.4900398406374502, "obj2": 0.34753672631840776}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,( DS - RRSe ) ) ) * ( ( ( DS - MUR ) / ( MUR - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.5876494023904383, "obj2": 0.2629604291932731}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ) + ( Max( Max( ( Const + FirstVNF_RAM ),MRS ),( Const - ( ACS - FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( ( DS + ( ( ( CS * RRSe ) / RMSe ) / ( ( MUC * MUM ) * ( DS * MLU ) ) ) ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.7107376385094417}, {"determining": "Max( Min( ( Const + MDR ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) / DS ) )", "obj1": 0.250996015936255, "obj2": 0.6365508610105987}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( Min( Max( MUC,( Min( ( MUR / CS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.45219123505976094, "obj2": 0.4086169568330839}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.15737051792828685, "obj2": 0.7564675712620392}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Max( ( Max( ( PN - MDR ),( Const - MDR ) ) * FirstVNF_CPU_Server ),( ACS - AMS ) ) ) * Min( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) ,( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( Max( RCSe,DS ) * RRSe ) * ( ( RCSe / Min( ( RRSe / MUM ) ,( RRSe / CS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8386454183266933, "obj2": 0.06561443624248497}, {"determining": "Max( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * BR ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ),( Const + DDR ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.3207171314741036, "obj2": 0.5670809065166744}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( ( PN - MDR ) / ACS ) )", "choosing": "( ( MUR / CS ) + ( Min( Max( ( Min( DS ,MUR ) + Max( RCSe,MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) - CS ) )", "obj1": 0.7828685258964143, "obj2": 0.08708612606578561}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( FirstVNF_CPU_Server - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) + ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( RCSe + MUR ) ) )", "obj1": 0.900398406374502, "obj2": 0.046210459120598124}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) )", "choosing": "( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.48864936726794084}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.9561752988047809, "obj2": 0.02939662051347593}, {"determining": "( ( DDR - FirstVNF_Mem_Server ) + ( AMS - FirstVNF_CPU ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR * CS ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( ( ( MUC / ( RCSe - RCSe ) ) - Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( RRSe / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.43227091633466136, "obj2": 0.44988218437711713}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / MDR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Max( MUC,( Min( ( MUR / CS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.26294820717131473, "obj2": 0.616800712859499}, {"determining": "( ( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ) - Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( DS + MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.32270916334661354, "obj2": 0.5507293482861971}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( MDR / FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe + CS ) * ( RRSe - MUC ) )", "obj1": 0.2549800796812749, "obj2": 0.6231225997216461}, {"determining": "Max( ( MRS + ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.13147410358565736, "obj2": 0.8021302544169403}], "9": [{"determining": "( ( ( ( AMS * BR ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + RMSe ) / ( RMSe + ( Min( DS ,RMSe ) + ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( ( ( AMS * PN ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( Min( DS ,RMSe ) + ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,( DS - RRSe ) ) ) * ( ( ( DS - MUR ) / ( MUR - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.400001386091096}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * Max( ( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * FirstVNF_CPU_Server ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) ),( Const + DDR ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( ( ( CS * RRSe ) / RMSe ) / ( ( MLU * MUM ) * ( DS * MLU ) ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.7450199203187251, "obj2": 0.15770901123828504}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( ( FirstVNF_Mem * MDR ) * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.4820717131474104, "obj2": 0.35809796970700325}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1852589641434263, "obj2": 0.7242178055944775}, {"determining": "( Max( ( RRS + MDR ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) * MLU ) + MUM ) / ( RCSe + ( RCSe + CS ) ) )", "obj1": 0.5, "obj2": 0.30661275680379707}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.5418326693227091, "obj2": 0.2774888608979129}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) - Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( CS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.6713147410358565, "obj2": 0.16952881713630477}, {"determining": "( ( DDR - MDR ) + ( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.3147410358565737, "obj2": 0.5655584298549264}, {"determining": "( ( DDR - MDR ) + ( Const - FirstVNF_Mem ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.9780876494023905, "obj2": 0.017819994956368348}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) ) ) + ( Const - MDR ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.48804780876494025, "obj2": 0.3426069132477374}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.5278884462151394, "obj2": 0.30224434000746175}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7669593962639596}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( MRS + MRS ) ),Max( ( ACS + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( Max( MLU,DS ) * Max( MUM,DS ) ) ) - ( RCSe * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.649402390438247, "obj2": 0.20487071042771604}, {"determining": "Min( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.5617529880478087, "obj2": 0.25950192606479483}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( DS - MUM ) * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.7979851348589274}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6872509960159362, "obj2": 0.1620881291754962}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.28286852589641437, "obj2": 0.5854872663928146}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) ) ) + ( Const - MDR ) )", "choosing": "( ( DS + ( ( ( RMSe + ( RCSe + CS ) ) + MUM ) / ( MUR * DS ) ) ) / ( ( Min( ( DS * DS ) ,MLU ) * MUM ) + ( RCSe + CS ) ) )", "obj1": 0.42828685258964144, "obj2": 0.4457370596986189}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( FirstVNF_CPU_Server - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) + ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( RCSe + MUR ) ) )", "obj1": 0.900398406374502, "obj2": 0.046210459120598124}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( ( PN - MDR ) / ACS ) )", "choosing": "( ( MUR / CS ) + ( Min( Max( ( Min( DS ,MUR ) + Max( RCSe,MUM ) ),( Min( MUC ,RMSe ) + ( DS - ( ( RMSe + DS ) / ( CS - RCSe ) ) ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) ) - CS ) )", "obj1": 0.7828685258964143, "obj2": 0.08708612606578561}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) ) ) + ( Const - MDR ) )", "choosing": "( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( Min( ( DS * DS ) ,MLU ) * MUM ) + ( RCSe + CS ) ) )", "obj1": 0.4342629482071713, "obj2": 0.43805986688820825}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( MUR * DS ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / MLU ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.647410358565737, "obj2": 0.2129937448305288}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.798804780876494, "obj2": 0.07573359270179869}, {"determining": "Max( ( Const - RRS ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / DS ) ) ) * Min( MUM ,DS ) ) ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6828659309584861}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ACS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( ( MUC * MUM ) - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( MUR - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.8446215139442231, "obj2": 0.05815552318875471}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( MUR - RMSe ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2483561992030634}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5195609886704791}, {"determining": "Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ),( ( PN - MDR ) / MRS ) )", "choosing": "( ( MUR / CS ) + ( ( ( CS * RRSe ) / RMSe ) / ( ( MUC * MUM ) * ( DS * MLU ) ) ) )", "obj1": 0.7529880478087649, "obj2": 0.11230446892793215}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) )", "choosing": "( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.48864936726794084}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.15737051792828685, "obj2": 0.7564675712620392}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) )", "choosing": "( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.47420308411200346}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( ARS / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * ( MUM + DS ) ) )", "obj1": 0.9382470119521913, "obj2": 0.044231537219232786}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ) + ( Max( Max( ( Const + FirstVNF_RAM ),MRS ),( Const - ( ACS - FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( ( DS + ( ( ( CS * RRSe ) / RMSe ) / ( ( MUC * MUM ) * ( DS * MLU ) ) ) ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.7107376385094417}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.3745019920318725, "obj2": 0.49367235908166246}, {"determining": "Max( Min( ( Const + MDR ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) / DS ) )", "obj1": 0.250996015936255, "obj2": 0.6365508610105987}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( RCSe + RMSe ) * ( ( RMSe / RCSe ) / Max( ( Min( DS ,MUR ) + ( ( RMSe + DS ) / ( CS - RCSe ) ) ),( Min( CS ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.8844621513944223, "obj2": 0.05392740830165556}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.19322709163346613, "obj2": 0.7117396112179729}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * ( ( AMS * FirstVNF_CPU_Server ) - ( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.350597609561753, "obj2": 0.5246043567183589}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MRS ) ,PN ) )", "choosing": "( ( RCSe + RMSe ) * ( ( CS / RCSe ) / Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.10319584108162379}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / MDR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Max( MUC,( Min( ( MUR / CS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.26294820717131473, "obj2": 0.616800712859499}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.28286852589641437, "obj2": 0.5854872663928146}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / MDR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( MUC * MUM ) ) / DS ) )", "obj1": 0.21912350597609562, "obj2": 0.6896337376455507}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.15737051792828685, "obj2": 0.7564675712620392}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Min( DS ,MUM ) / Min( ( RMSe + ( ( MUC * MUM ) + CS ) ) ,DS ) )", "obj1": 0.8247011952191236, "obj2": 0.07133770503745171}, {"determining": "Min( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( Max( ( ARS * RRS ),( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,( Min( ( MUR / CS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUR ) )", "obj1": 0.5896414342629482, "obj2": 0.2580592503017865}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) )", "choosing": "( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.47420308411200346}], "10": [{"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( ( ( AMS * PN ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( Min( DS ,RMSe ) + ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * BR ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + RMSe ) / ( RMSe + ( Min( DS ,RMSe ) + ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,( DS - RRSe ) ) ) * ( ( ( DS - MUR ) / ( MUR - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.44223107569721115, "obj2": 0.400001386091096}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),MDR )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2151394422310757, "obj2": 0.6756584856287449}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6872509960159362, "obj2": 0.1620881291754962}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.42231075697211157, "obj2": 0.4186822922439402}, {"determining": "( ( Const + Const ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * ( MUM + DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11512970526456319}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( ARS / Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * ( MUM + DS ) ) )", "obj1": 0.9382470119521913, "obj2": 0.044231537219232786}, {"determining": "Max( Min( ( Const + MDR ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) / DS ) )", "obj1": 0.250996015936255, "obj2": 0.6365508610105987}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) + ( RRS - FirstVNF_Mem ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( Min( ( CS * RRSe ) ,DS ) - RCSe ) / CS ) )", "obj1": 0.9780876494023905, "obj2": 0.016987212655020338}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( FirstVNF_CPU_Server - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) + ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( RCSe + MUR ) ) )", "obj1": 0.900398406374502, "obj2": 0.046210459120598124}, {"determining": "( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) )", "choosing": "( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.47420308411200346}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7236274566364906}, {"determining": "Max( ( ( Const + FirstVNF_RAM ) / MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + AMS ) ) ) ) )", "choosing": "( Min( ( DS * ( ( RMSe - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.3247011952191235, "obj2": 0.5493828500364383}, {"determining": "( Max( ( RRS + MDR ),( Max( ( RRS + MDR ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / ( Min( Max( MUC,DS ) ,RRSe ) * RCSe ) ) * MLU ) + MUM ) / ( RCSe + ( RCSe + CS ) ) )", "obj1": 0.5199203187250996, "obj2": 0.2993113923409861}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( ( MUC * MUM ) - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( Min( DS ,MUM ) - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.8625498007968128, "obj2": 0.052087860730681626}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7669593962639596}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - ( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) ) ) )", "choosing": "( ( ( ( ( CS * RRSe ) - DS ) - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) / DS ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.6653386454183267, "obj2": 0.196088687973817}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( MUR - RMSe ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.5936254980079682, "obj2": 0.2483561992030634}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5195609886704791}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( MUR - RMSe ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5793980003699745}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.3466135458167331, "obj2": 0.5301076854155694}, {"determining": "( ( DDR - MDR ) + ( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.3147410358565737, "obj2": 0.5655584298549264}, {"determining": "Max( Min( Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( DS - MUM ) * ( ( ( CS * RRSe ) - DS ) - RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.11952191235059761, "obj2": 0.8054490280131673}, {"determining": "Min( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.5896414342629482, "obj2": 0.25801476129243894}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( DS - MUM ) * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.7979851348589274}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MRS ) ,PN ) )", "choosing": "( ( RCSe + RMSe ) * ( ( CS / RCSe ) / Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ) )", "obj1": 0.7649402390438247, "obj2": 0.10319584108162379}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.15737051792828685, "obj2": 0.7564675712620392}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.19322709163346613, "obj2": 0.7117396112179729}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( MRS * ACS ) / ( RRS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.19123505976095617, "obj2": 0.7219327967713912}, {"determining": "( ( Const - MDR ) + ( Const - ( Const + FirstVNF_RAM ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( DS,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) ) )", "obj1": 0.9860557768924303, "obj2": 0.009154025185526478}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( MUR * DS ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / MLU ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.647410358565737, "obj2": 0.2129937448305288}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( Min( ( DS * DS ) ,MLU ) * MUM ) + ( RCSe + CS ) ) )", "obj1": 0.7450199203187251, "obj2": 0.11179794104942466}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( MRS + MRS ) ),Max( ( ACS + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( Max( MLU,DS ) * Max( MUM,DS ) ) ) - ( RCSe * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.649402390438247, "obj2": 0.20487071042771604}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ACS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( ( MUC * MUM ) - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( MUR - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.0992837126109973}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * ( ( AMS * FirstVNF_CPU_Server ) - ( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.350597609561753, "obj2": 0.5246043567183589}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Min( DS ,MUM ) / Min( ( RMSe + ( ( MUC * MUM ) + CS ) ) ,DS ) )", "obj1": 0.8247011952191236, "obj2": 0.07133770503745171}, {"determining": "( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) ) ) + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( ( MUC * MUM ) - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( MUR - ( RCSe + CS ) ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.8426294820717132, "obj2": 0.05879870609983094}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( PN,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.3745019920318725, "obj2": 0.49367235908166246}, {"determining": "( FirstVNF_CPU / Min( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS - FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / MUM ) / ( ( RMSe + ( ( MUC * ( RMSe + ( RCSe + CS ) ) ) + CS ) ) * DS ) )", "obj1": 0.5418326693227091, "obj2": 0.2774888608979129}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / MDR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Max( MUC,( Min( ( MUR / CS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,( MUC / ( RCSe - RCSe ) ) ) * ( RRSe - MUC ) )", "obj1": 0.25697211155378485, "obj2": 0.6267652827884392}, {"determining": "( Max( ( RRS + MDR ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) * MLU ) + MUM ) / ( RCSe + ( RCSe + CS ) ) )", "obj1": 0.5, "obj2": 0.30661275680379707}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.19322709163346613, "obj2": 0.7117396112179729}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.6713147410358565, "obj2": 0.16952881713630477}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.798804780876494, "obj2": 0.07573359270179869}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.28286852589641437, "obj2": 0.5854872663928146}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.2729083665338645, "obj2": 0.5985026450478985}], "11": [{"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( ( ( AMS * PN ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( Min( DS ,RMSe ) + ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * PN ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( Min( DS ,RMSe ) + ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.3745019920318725, "obj2": 0.46391849845085126}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6852589641434262, "obj2": 0.16163299691227}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),MDR )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2151394422310757, "obj2": 0.6756584856287449}, {"determining": "( ( PN - ( ( ( AMS + ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,( DS / MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.39820150726342507}, {"determining": "( ( Const + Const ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * ( MUM + DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11512970526456319}, {"determining": "Max( Min( ( Const + MDR ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) / DS ) )", "obj1": 0.250996015936255, "obj2": 0.6365508610105987}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( FirstVNF_CPU_Server - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) + ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( RCSe + MUR ) ) )", "obj1": 0.900398406374502, "obj2": 0.046210459120598124}, {"determining": "( Max( FirstVNF_Mem_Server,MDR ) - ( ARS / Max( FirstVNF_RAM,Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,( MUR - RMSe ) ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / CS ) ) ) * ( MUM + DS ) ) )", "obj1": 0.9382470119521913, "obj2": 0.03983750272638981}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5195609886704791}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.15737051792828685, "obj2": 0.7564675712620392}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7669593962639596}, {"determining": "Max( ( ( Const + FirstVNF_RAM ) / MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + AMS ) ) ) ) )", "choosing": "( Min( ( DS * ( ( RMSe - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.3247011952191235, "obj2": 0.5493828500364383}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) + ( CS + MLU ) )", "obj1": 0.954183266932271, "obj2": 0.020247987116954497}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( Const - MDR ) ) ) )", "choosing": "( ( MUR - RMSe ) / ( ( RMSe + ( ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) + CS ) ) * DS ) )", "obj1": 0.5816733067729084, "obj2": 0.2547144629158526}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.42231075697211157, "obj2": 0.4186822922439402}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const + FirstVNF_RAM ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( RMSe - MUR ) * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12749003984063745, "obj2": 0.7946890419417408}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7236274566364906}, {"determining": "Max( Min( Min( Const ,FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) * DS ) - RCSe ) / DS ) )", "obj1": 0.19721115537848605, "obj2": 0.7044778850848911}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.798804780876494, "obj2": 0.07573359270179869}, {"determining": "( ( Const + AMS ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6613545816733067, "obj2": 0.1834464692844908}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( MUR * DS ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / MLU ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.647410358565737, "obj2": 0.2129937448305288}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MRS ) + ( Const - RRS ) )", "choosing": "( ( MUR - ( ( Min( ( DS - MUR ) ,( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.42231075697211157, "obj2": 0.4186822922439402}, {"determining": "( Max( ( FirstVNF_RAM + MDR ),( Max( ( RRS + MDR ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( DS * ( ( RMSe - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) ) / ( RCSe + ( RCSe + CS ) ) )", "obj1": 0.4960159362549801, "obj2": 0.3114181642614983}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.28286852589641437, "obj2": 0.5854872663928146}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ACS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( AMS - Min( PN ,Const ) ) ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( ( MUC * MUM ) - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( MUM - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.7868525896414342, "obj2": 0.09267166258224531}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Min( DS ,MUM ) / Min( ( RMSe + ( ( MUC * MUM ) + CS ) ) ,DS ) )", "obj1": 0.8247011952191236, "obj2": 0.07133770503745171}, {"determining": "( FirstVNF_CPU / Min( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS - FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / MUM ) / ( ( RMSe + ( ( MUC * ( RMSe + ( RCSe + CS ) ) ) + CS ) ) * DS ) )", "obj1": 0.5537848605577689, "obj2": 0.26960829236550743}, {"determining": "( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC / ( RCSe - RCSe ) ) + CS ) ) * DS ) )", "obj1": 0.2589641434262948, "obj2": 0.6180095334935481}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( MRS + MRS ) ),Max( ( ACS + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( Max( MLU,DS ) * Max( MUM,DS ) ) ) - ( RCSe * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.649402390438247, "obj2": 0.20487071042771604}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "Min( ( RRSe - Min( ( RRSe - MUR ) ,( RRSe / CS ) ) ) ,( ( MUC * MUM ) - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( Min( DS ,MUM ) - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.8625498007968128, "obj2": 0.052087860730681626}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + ( Const - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) ) )", "obj1": 0.9760956175298805, "obj2": 0.013009343255717913}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( MUR - RMSe ) / ( ( RMSe + ( RMSe + ( Min( DS ,RMSe ) + ( DS - RMSe ) ) ) ) * DS ) )", "obj1": 0.5956175298804781, "obj2": 0.24787585085220032}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * AMS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / RRSe ) ) ) ) ) + ( CS - MLU ) )", "obj1": 0.5258964143426295, "obj2": 0.291567125674291}, {"determining": "( Max( ( RRS + MDR ),( Max( ( RRS + MDR ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / ( Min( Max( MUC,DS ) ,RRSe ) * RCSe ) ) * MLU ) + MUM ) / ( RCSe + ( RCSe + CS ) ) )", "obj1": 0.5199203187250996, "obj2": 0.2993113923409861}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( MRS * ACS ) / ( RRS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.19123505976095617, "obj2": 0.7219327967713912}, {"determining": "( ( ( ( PN - ( ( ( AMS * FirstVNF_RAM_Server ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + Max( Const,MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( ( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + RCSe ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( MUM - MUC ) )", "obj1": 0.4302788844621514, "obj2": 0.4054133294257193}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8346613545816733, "obj2": 0.06342003725693578}, {"determining": "( FirstVNF_CPU / Min( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( ( DDR - MDR ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * ( RMSe + DS ) ) + CS ) ) * DS ) )", "obj1": 0.5398406374501992, "obj2": 0.2785560016609974}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.2729083665338645, "obj2": 0.5985026450478985}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7529880478087649, "obj2": 0.11020980015799542}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.6713147410358565, "obj2": 0.16952881713630477}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( RCSe + CS ) ) * DS ) )", "obj1": 0.2729083665338645, "obj2": 0.5985026450478985}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.3466135458167331, "obj2": 0.5301076854155694}, {"determining": "Max( Min( Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const * DDR ) ) ) ) ) ,MRS ),( Const - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) * ( Const + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( DS - MUM ) * ( ( ( CS * RRSe ) - DS ) - MUR ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.11952191235059761, "obj2": 0.8054490280131673}, {"determining": "( ( DDR - ( ( ( Const + ( ARS * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ) + ( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( MUR / ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.5646435709546549}], "12": [{"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( FirstVNF_CPU / Min( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS - FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( MRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC * ( RMSe + DS ) ) / MUM ) / ( ( RMSe + ( ( MUC * ( RMSe + ( RCSe + CS ) ) ) + CS ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * PN ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( Min( DS ,RMSe ) + ( DS - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) * RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( ( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4541832669322709, "obj2": 0.38339001601764827}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5195609886704791}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( MUR + ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.3745019920318725, "obj2": 0.46391849845085126}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.15737051792828685, "obj2": 0.7564675712620392}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.40039840637450197, "obj2": 0.4520845448255324}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) * DS ) - RCSe ) / DS ) )", "obj1": 0.9342629482071713, "obj2": 0.031018517504069518}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),MDR )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2151394422310757, "obj2": 0.6756584856287449}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.898406374501992, "obj2": 0.04044288991667482}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6852589641434262, "obj2": 0.16163299691227}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6852589641434262, "obj2": 0.16163299691227}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7236274566364906}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),MDR )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2151394422310757, "obj2": 0.6756584856287449}, {"determining": "Max( ( ( Const + FirstVNF_RAM ) / MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + AMS ) ) ) ) )", "choosing": "( Min( ( DS * ( ( RMSe - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.3247011952191235, "obj2": 0.5493828500364383}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( MUR * DS ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / MLU ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.647410358565737, "obj2": 0.2129937448305288}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( Max( ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( Min( DS ,MUM ) - RMSe ) ) * ( MUC / RRSe ) ) ),DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.40239043824701193, "obj2": 0.42368536874370766}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,AMS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) ,( RRSe / ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7709163346613546, "obj2": 0.09927580267268477}, {"determining": "( ( Const + Const ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * ( MUM + DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11512970526456319}, {"determining": "( ( DDR - ( ( ( Const + ( ARS * Max( ACS,CRS ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ) + ( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5847784929635798}, {"determining": "Max( Min( ( Const + MDR ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) / DS ) )", "obj1": 0.250996015936255, "obj2": 0.6365508610105987}, {"determining": "( ( Const + ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11512970526456319}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const + FirstVNF_RAM ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) / DS ) )", "obj1": 0.250996015936255, "obj2": 0.6365508610105987}, {"determining": "Max( Min( Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const * DDR ) ) ) ) ) ,MRS ),( Const - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) * ( Const + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( DS - MUM ) * ( ( ( CS * RRSe ) - DS ) - MUR ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.11952191235059761, "obj2": 0.8054490280131673}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "Min( ( RRSe - ( DS - RMSe ) ) ,( ( MUC * MUM ) - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( Min( DS ,MUM ) - RMSe ) ) * ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.8844621513944223, "obj2": 0.04539222231730358}, {"determining": "( FirstVNF_CPU / Min( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * ( RMSe + DS ) ) + ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) ) ) * DS ) )", "obj1": 0.7848605577689243, "obj2": 0.08613593877609226}, {"determining": "( ( Const + FirstVNF_CPU ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6573705179282868, "obj2": 0.18115915966325455}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7669593962639596}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( RCSe + MUM ) ) )", "obj1": 0.4820717131474104, "obj2": 0.3248365973094151}, {"determining": "( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC / ( RCSe - RCSe ) ) + CS ) ) * DS ) )", "obj1": 0.2589641434262948, "obj2": 0.6180095334935481}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( MRS + MRS ) ),Max( ( ACS + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( AMS * AMS ) ) ) / ( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( Max( MLU,DS ) * Max( MUM,DS ) ) ) - ( RCSe * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.649402390438247, "obj2": 0.20487071042771604}, {"determining": "( Max( ( FirstVNF_RAM + MDR ),( Max( ( RRS + MDR ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( DS * ( ( RMSe - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) ) / ( RCSe + ( RCSe + CS ) ) )", "obj1": 0.4960159362549801, "obj2": 0.3114181642614983}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.28286852589641437, "obj2": 0.5854872663928146}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5348411931273673}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.3466135458167331, "obj2": 0.5301076854155694}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( MRS * ACS ) / ( RRS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.13745019920318724, "obj2": 0.7812135595453985}, {"determining": "( Max( ( RRS + MDR ),( Max( ( RRS + MDR ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / ( Min( Max( MUC,DS ) ,RRSe ) * RCSe ) ) * MLU ) + MUM ) / ( RCSe + ( RCSe + CS ) ) )", "obj1": 0.603585657370518, "obj2": 0.2451084810140437}, {"determining": "( ( ( ( PN - ( ( ( AMS * FirstVNF_RAM_Server ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + Max( Const,MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( ( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + RCSe ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( MUM - MUC ) )", "obj1": 0.4302788844621514, "obj2": 0.4054133294257193}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( ( ( PN - MDR ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( Min( DS ,MUM ) / Min( ( RMSe + ( ( MUC * MUM ) + CS ) ) ,DS ) )", "obj1": 0.8247011952191236, "obj2": 0.07133770503745171}, {"determining": "( ( ( ( AMS * MRS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( Const - MDR ) ) ) )", "choosing": "( ( MUR - RMSe ) / ( ( RMSe + ( ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) + CS ) ) * DS ) )", "obj1": 0.5816733067729084, "obj2": 0.2547144629158526}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * AMS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / RRSe ) ) ) ) ) + ( CS - MLU ) )", "obj1": 0.50199203187251, "obj2": 0.30239708239377144}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( MRS * ACS ) / ( RRS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.19123505976095617, "obj2": 0.7219327967713912}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.26693227091633465, "obj2": 0.60923976751145}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + ( Const - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) ) )", "obj1": 0.9760956175298805, "obj2": 0.013009343255717913}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.42231075697211157, "obj2": 0.4186822922439402}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.6713147410358565, "obj2": 0.16952881713630477}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * AMS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / RRSe ) ) ) ) ) + ( CS - MLU ) )", "obj1": 0.5258964143426295, "obj2": 0.291567125674291}], "13": [{"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / Min( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS - FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( MRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC * ( RMSe + DS ) ) / MUM ) / ( ( RMSe + ( ( MUC * ( RMSe + ( RCSe + CS ) ) ) + CS ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) * RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.3645418326693227, "obj2": 0.5173064139341209}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.3187250996015936, "obj2": 0.5232324297062927}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) * DS ) - RCSe ) / DS ) )", "obj1": 0.9342629482071713, "obj2": 0.031018517504069518}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( FirstVNF_Mem_Server - PN ) ) - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS / MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / MUM ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5776892430278885, "obj2": 0.24423333189616905}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - Min( PN ,FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,AMS ) )", "choosing": "( ( MUR - ( ( ( ( DS * MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.8286852589641435, "obj2": 0.06577799696189353}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( DS - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5722178247721833}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( MRS * ACS ) / ( RRS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.19123505976095617, "obj2": 0.7219327967713912}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( MUR + ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.3745019920318725, "obj2": 0.46391849845085126}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - Min( ( ( ( PN - ARS ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( RCSe + DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.669352144763667}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.8804780876494024, "obj2": 0.04736102310766677}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),AMS )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * MUR ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6835390383670729}, {"determining": "( ( ( ( AMS * AMS ) * Min( PN ,PN ) ) - FirstVNF_CPU_Server ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( CS - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) ) / ( RCSe + ( RCSe + CS ) ) ) - MUC ) )", "obj1": 0.4581673306772908, "obj2": 0.37762098383062676}, {"determining": "( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( DS + CS ) ) * DS ) )", "obj1": 0.5557768924302788, "obj2": 0.26495565237105506}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7236274566364906}, {"determining": "( ( Const + ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7609561752988048, "obj2": 0.0974401578536169}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6852589641434262, "obj2": 0.16163299691227}, {"determining": "( FirstVNF_CPU / Min( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * ( RMSe + DS ) ) + ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) ) ) * DS ) )", "obj1": 0.7848605577689243, "obj2": 0.0857953164910476}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6852589641434262, "obj2": 0.16163299691227}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( MUR * DS ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / MLU ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.647410358565737, "obj2": 0.2129937448305288}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,AMS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11500735531771651}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( MRS * ACS ) / ( RRS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.13745019920318724, "obj2": 0.7812135595453985}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + ( Const - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) ) )", "obj1": 0.9760956175298805, "obj2": 0.013009343255717913}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * AMS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / RRSe ) ) ) ) ) + ( CS - MLU ) )", "obj1": 0.5258964143426295, "obj2": 0.291567125674291}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 0.3884462151394422, "obj2": 0.4284369657373141}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11500735531771651}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUR,DS ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.38247011952191234, "obj2": 0.45842932449151935}, {"determining": "( ( ( ( PN - ( ( ( AMS * FirstVNF_RAM_Server ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + Max( Const,MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( ( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + RCSe ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( MUM - MUC ) )", "obj1": 0.4302788844621514, "obj2": 0.4054133294257193}, {"determining": "Max( Min( ( Const + MDR ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) / DS ) )", "obj1": 0.2589641434262948, "obj2": 0.617562602682994}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4442231075697211, "obj2": 0.3920589354219042}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.42231075697211157, "obj2": 0.4186822922439402}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( RCSe + MUM ) ) )", "obj1": 0.4820717131474104, "obj2": 0.3248365973094151}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.900398406374502, "obj2": 0.039479727475184245}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * AMS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / RRSe ) ) ) ) ) + ( CS - MLU ) )", "obj1": 0.50199203187251, "obj2": 0.30239708239377144}, {"determining": "Max( Min( Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ARS,( Const + DDR ) ) ) ) ) ,MRS ),( Const - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) * ( Const + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( DS - MUM ) * ( ( ( CS * RRSe ) - DS ) - RCSe ) ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.8045891928592183}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.15737051792828685, "obj2": 0.7564675712620392}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) / DS ) )", "obj1": 0.250996015936255, "obj2": 0.6365508610105987}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + ( Const - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) ) )", "obj1": 0.9760956175298805, "obj2": 0.013009343255717913}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( ARS * ACS ) - ACS ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( Max( ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( ( ( DS - MUR ) / ( Min( DS ,MUM ) - RMSe ) ) * ( MUC / RRSe ) ) ),DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,MUC ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8087649402390438, "obj2": 0.07036667540592868}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( MDR + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( ( DS - MUM ) * Max( MUM,DS ) ) - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.798804780876494, "obj2": 0.07622328329970286}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( Max( AMS,FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC - MUM ) + CS ) ) * DS ) )", "obj1": 0.5418326693227091, "obj2": 0.2774888608979129}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7669593962639596}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),MDR )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2151394422310757, "obj2": 0.6756584856287449}, {"determining": "( ( ( ( Const + AMS ) - ( ( ARS * ACS ) - Min( PN ,Const ) ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( MUR - RMSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5837252837775109}, {"determining": "( ( Const + FirstVNF_CPU ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6573705179282868, "obj2": 0.18115915966325455}, {"determining": "( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / ( MUC / RCSe ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7470119521912351, "obj2": 0.11265849397655614}], "14": [{"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( MDR * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( Min( Max( MUR,DS ) ,RRSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) ,PN ),( Const + DDR ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) * RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.10956175298804781, "obj2": 0.8236044347529392}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( MUR + ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.3745019920318725, "obj2": 0.46391849845085126}, {"determining": "( ( ( ( Const + AMS ) * Min( ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * ( ( ( CS * RCSe ) - DS ) - RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7370517928286853, "obj2": 0.15603054292540558}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( DS - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5722178247721833}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( Max( MUR,DS ) + RRSe ) * ( RRSe - MUC ) )", "obj1": 0.6394422310756972, "obj2": 0.20378421017626205}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.15737051792828685, "obj2": 0.7564675712620392}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7236274566364906}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( AMS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * RCSe ) + CS ) ) * DS ) )", "obj1": 0.8565737051792829, "obj2": 0.05449615053681405}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - Min( ( ( ( PN - ARS ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( RCSe + DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6671843919511685}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "( ( ( ( AMS * AMS ) * Min( PN ,PN ) ) - FirstVNF_CPU_Server ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( CS - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) ) / ( RCSe + ( RCSe + CS ) ) ) - MUC ) )", "obj1": 0.4581673306772908, "obj2": 0.37762098383062676}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( AMS * ACS ) / ( ( AMS * ACS ) + FirstVNF_RAM ) ) * ( ( AMS * FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( Min( ( DS * RCSe ) ,MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 0.20318725099601595, "obj2": 0.7158686661767243}, {"determining": "( ( Const + AMS ) * Min( ( ( ( BR + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( Min( PN ,FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( RRSe ,MUM ) / Min( ( RMSe + ( ( MUC * MUM ) + CS ) ) ,DS ) )", "obj1": 0.8804780876494024, "obj2": 0.047361023107666766}, {"determining": "( ( ( ( PN - ( ( ( AMS * FirstVNF_RAM_Server ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + Max( Const,MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( ( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + RCSe ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( MUM - MUC ) )", "obj1": 0.4302788844621514, "obj2": 0.4054133294257193}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6852589641434262, "obj2": 0.16163299691227}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( FirstVNF_Mem_Server - PN ) ) - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS / MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / MUM ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5776892430278885, "obj2": 0.24423333189616905}, {"determining": "( ( Const + FirstVNF_CPU ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6573705179282868, "obj2": 0.18115915966325455}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( MRS * ACS ) / ( RRS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.13745019920318724, "obj2": 0.7812135595453985}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),AMS )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * MUR ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6835390383670729}, {"determining": "( ( Const + AMS ) * ( FirstVNF_CPU / Min( Min( FirstVNF_Mem_Server ,PN ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( DS - MUM ) * Max( MUM,DS ) ) - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,( RMSe + ( DS + CS ) ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6075697211155379, "obj2": 0.23468411295094635}, {"determining": "Max( Min( ( Const + MDR ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) / DS ) )", "obj1": 0.2589641434262948, "obj2": 0.617562602682994}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.4123505976095618, "obj2": 0.4178320848271698}, {"determining": "( ( Const + FirstVNF_CPU ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_RAM_Server - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( ( RMSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.6832669322709163, "obj2": 0.16822932300141577}, {"determining": "Max( Min( Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ARS,( Const + DDR ) ) ) ) ) ,MRS ),( Const - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) * ( Const + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( DS - MUM ) * ( ( ( CS * RRSe ) - DS ) - RCSe ) ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.8045891928592183}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7669593962639596}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11500735531771651}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( MRS * ACS ) / ( RRS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.19123505976095617, "obj2": 0.7219327967713912}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_RAM + ( ARS * ( ( ARS * ACS ) - PN ) ) ) + Min( FirstVNF_Mem_Server ,PN ) ) + RRS ) )", "choosing": "( Min( Min( MLU ,( ( ( MLU + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.2513380530425573}, {"determining": "( ( ( ( Const + AMS ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( RCSe / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2788844621513944, "obj2": 0.6029988851544406}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + Min( ARS ,( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * ( ( DS - MUR ) / Min( MUR ,RMSe ) ) ) )", "obj1": 0.9302788844621513, "obj2": 0.03350409751833806}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( MDR + ( FirstVNF_RAM_Server + AMS ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( ( DS - MUM ) * Max( MUM,DS ) ) - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( RMSe + ( RCSe + CS ) ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.649402390438247, "obj2": 0.1902594971450045}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.38247011952191234, "obj2": 0.44019027617997053}, {"determining": "( ( Const + ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,AMS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RCSe / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8326693227091634, "obj2": 0.06447738680216297}, {"determining": "( ( Const + ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7609561752988048, "obj2": 0.0974401578536169}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) ) / DS ) )", "obj1": 0.250996015936255, "obj2": 0.6365508610105987}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.900398406374502, "obj2": 0.039479727475184245}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * AMS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / RRSe ) ) ) ) ) + ( CS - MLU ) )", "obj1": 0.5258964143426295, "obj2": 0.291567125674291}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - Min( ( ( ( PN - ARS ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( RCSe + DS ) ) )", "obj1": 0.22111553784860558, "obj2": 0.6702465810136007}, {"determining": "( FirstVNF_CPU / Min( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7768924302788844, "obj2": 0.09084421359369262}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( FirstVNF_Mem_Server - PN ) ) - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS / MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / MUM ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5199203187250996, "obj2": 0.2915959185004124}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4442231075697211, "obj2": 0.3920589354219042}, {"determining": "( ( ( ( Const + AMS ) - ( ( ARS * ACS ) - Min( PN ,Const ) ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( MUR - RMSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5837252837775109}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( Const - RRS ) - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.8101067897571814}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( RCSe + MUM ) ) )", "obj1": 0.4860557768924303, "obj2": 0.31916680296676053}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.30845534731749397}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.019233245687101413}], "15": [{"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( MDR * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( Min( Max( MUR,DS ) ,RRSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( MUR + ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.3745019920318725, "obj2": 0.46391849845085126}, {"determining": "( ( ( ( Const + AMS ) * Min( ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * ( ( ( CS * RCSe ) - DS ) - RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7370517928286853, "obj2": 0.15603054292540558}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( DS - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5722178247721833}, {"determining": "( ( ( ( Const + AMS ) * ( FirstVNF_Mem_Server + PN ) ) * MDR ) + ( Max( ( Const + ( ARS * ( ( ARS * ACS ) - Const ) ) ),( FirstVNF_Mem_Server / PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,MLU ) * ( MUC - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( CS - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / MUC ) ) / ( RCSe + ( RCSe + MUM ) ) ) - MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.364637837934396}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.17131474103585656, "obj2": 0.7157263716508975}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_Mem ) ) ,Min( AMS ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( ( ( ( RCSe - DS ) - RCSe ) * Min( DS ,MUR ) ) * MUM ) + CS ) ) * DS ) )", "obj1": 0.5577689243027888, "obj2": 0.2624305260223246}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( MUR - RMSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9302788844621513, "obj2": 0.027324265941934645}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.15737051792828685, "obj2": 0.7564675712620392}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( Const - RRS ) - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( BR + DDR ) ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( RCSe + MUM ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6012999441540222}, {"determining": "Max( Min( ( Const + MDR ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( MUR + ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.250996015936255, "obj2": 0.6292775405160423}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * AMS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / RRSe ) ) ) ) ) + ( CS - MLU ) )", "obj1": 0.5258964143426295, "obj2": 0.291567125674291}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( RCSe + DS ) ) )", "obj1": 0.42828685258964144, "obj2": 0.37756529819818074}, {"determining": "( ( ( ( Const + AMS ) - ( ( ARS * ACS ) - Min( PN ,Const ) ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( MUR - RMSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5837252837775109}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4243027888446215, "obj2": 0.4122779298863695}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( Max( MUR,DS ) ,RRSe ) * ( RRSe - ( MUC * MUM ) ) )", "obj1": 0.6872509960159362, "obj2": 0.1615128473710074}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "( ( Const + FirstVNF_CPU ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6573705179282868, "obj2": 0.18115915966325455}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11464903118347552}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.30845534731749397}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6792828685258964, "obj2": 0.16433159499710373}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),AMS )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * MUR ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6835390383670729}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( AMS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * RCSe ) + CS ) ) * DS ) )", "obj1": 0.8565737051792829, "obj2": 0.05449615053681405}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.019233245687101413}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( Min( PN ,Const ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( Min( Max( MUC,DS ) ,RRSe ) ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * ( ( DS - MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9123505976095617, "obj2": 0.03814266801951081}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( FirstVNF_Mem_Server - PN ) ) - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS / MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / MUM ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5776892430278885, "obj2": 0.24423333189616905}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.900398406374502, "obj2": 0.039479727475184245}, {"determining": "Max( Min( Min( Const ,FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) / DS ) - RCSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7236274566364906}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.38247011952191234, "obj2": 0.43896111587991127}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( MRS * ACS ) / ( RRS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.13745019920318724, "obj2": 0.7812135595453985}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RCSe / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.5956175298804781, "obj2": 0.23810589636741686}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_RAM + ( ARS * ( ( ARS * ACS ) - PN ) ) ) + Min( FirstVNF_Mem_Server ,PN ) ) + RRS ) )", "choosing": "( Min( Min( MLU ,( ( ( MLU + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.2513380530425573}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.1294820717131474, "obj2": 0.7953563801321738}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) + Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUR,DS ) ,RMSe ) * ( RRSe - MUC ) )", "obj1": 0.6394422310756972, "obj2": 0.20378421017626205}, {"determining": "( ( ( ( Const + AMS ) * Max( FirstVNF_Mem_Server,PN ) ) - MDR ) + ( PN - Min( ( ( ( PN - ARS ) + ( Const - MDR ) ) * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) * DS ) - RCSe ) / DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6835390383670729}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "( ( Const + ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,AMS ) )", "choosing": "( Min( ( MUC / ( ( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.8227091633466136, "obj2": 0.07100075820836277}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( Max( MUR,DS ) + RRSe ) * ( RRSe - MUC ) )", "obj1": 0.6394422310756972, "obj2": 0.20378421017626205}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( ( ( MUC * MUM ) + CS ) * MUM ) + CS ) ) * ( ( DS - MUR ) / ( MUR - RMSe ) ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007309891115998436}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - Min( Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),MDR ) ,( ACS - AMS ) ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( Min( ( MUC * DS ) ,MLU ) + DS ) ) )", "obj1": 0.40239043824701193, "obj2": 0.4209122671028718}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.850597609561753, "obj2": 0.06423572095661176}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( ( AMS * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( Min( ( DS * DS ) ,MLU ) - RCSe ) / Min( DS ,MUR ) ) )", "obj1": 0.3944223107569721, "obj2": 0.4323968748017739}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7669593962639596}, {"determining": "( ( Const + AMS ) * Min( ( ( ( BR + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( Min( PN ,FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( RRSe ,MUM ) / Min( ( RMSe + ( ( MUC * MUM ) + CS ) ) ,DS ) )", "obj1": 0.8804780876494024, "obj2": 0.047361023107666766}, {"determining": "( FirstVNF_CPU / Min( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7768924302788844, "obj2": 0.09084421359369262}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * FirstVNF_RAM ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( ( MUC * MUM ) + CS ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.4103585657370518, "obj2": 0.4149800497438773}], "16": [{"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,MDR ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( DS * MLU ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( ( ( Const + AMS ) * Min( ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * ( ( ( CS * RCSe ) - DS ) - RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7370517928286853, "obj2": 0.15603054292540558}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( MUR + ( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.3745019920318725, "obj2": 0.46391849845085126}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( DS - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5722178247721833}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),AMS )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * MUR ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6835390383670729}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.15737051792828685, "obj2": 0.7564675712620392}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / Min( ( Const + FirstVNF_RAM ) ,MRS ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) ) )", "obj1": 0.3545816733067729, "obj2": 0.4994649760844674}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.4063745019920319, "obj2": 0.3897570373266424}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4601593625498008, "obj2": 0.35009636367173513}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.30845534731749397}, {"determining": "( ( ( ( Const + AMS ) * ( FirstVNF_Mem_Server + PN ) ) * MDR ) + ( Max( ( Const + ( ARS * ( ( ARS * ACS ) - Const ) ) ),( FirstVNF_Mem_Server / PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,MLU ) * ( MUC - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( CS - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / MUC ) ) / ( RCSe + ( RCSe + MUM ) ) ) - MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.364637837934396}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7450199203187251, "obj2": 0.11271123305559469}, {"determining": "( FirstVNF_CPU / Min( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7768924302788844, "obj2": 0.09084421359369262}, {"determining": "Max( Min( Min( Const ,FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) / DS ) - RCSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7236274566364906}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( RCSe + MUM ) ) )", "obj1": 0.6892430278884463, "obj2": 0.15957684500379365}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( Min( AMS ,ACS ) / ( ACS - ACS ) ) - Min( Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),MDR ) ,( ACS - AMS ) ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( Min( ( MUC * DS ) ,MLU ) / ( ( MUC * MUM ) + CS ) ) ) )", "obj1": 0.5557768924302788, "obj2": 0.2676170476229084}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( Const - RRS ) - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( Max( MUR,DS ) ,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.24302788844621515, "obj2": 0.6367088365296256}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + AMS ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( Max( MUR,Min( DS ,MUR ) ) ,RRSe ) * ( RRSe - ( MUC * MUM ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2889238215164573}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,RRSe ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.5065119697299109}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6792828685258964, "obj2": 0.16433159499710373}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR * RMSe ) * ( RRSe - MUC ) )", "obj1": 0.6354581673306773, "obj2": 0.20877977591107075}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),MDR )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6835390383670729}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,( ( Const + FirstVNF_RAM ) - ARS ) ),MDR )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( ( ( ( DS * DS ) * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.7999291102997877}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( ( ( ( CS * RRSe ) - DS ) - RCSe ) - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11464903118347552}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + ( Const - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.019233245687101413}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.17131474103585656, "obj2": 0.7157263716508975}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7669593962639596}, {"determining": "( ( Const + FirstVNF_CPU ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6573705179282868, "obj2": 0.18115915966325455}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( Min( PN ,Const ) * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( Max( ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ),DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RCSe / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8027888446215139, "obj2": 0.07583420961442618}, {"determining": "( ( Const + ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,AMS ) )", "choosing": "( Min( ( MUC / ( ( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.8266932270916335, "obj2": 0.06634983394318346}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( AMS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * RCSe ) + CS ) ) * DS ) )", "obj1": 0.850597609561753, "obj2": 0.056836783376029126}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - Min( Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),MDR ) ,( ACS - AMS ) ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( Min( ( MUC * DS ) ,MLU ) + DS ) ) )", "obj1": 0.40239043824701193, "obj2": 0.4209122671028718}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.17131474103585656, "obj2": 0.7157263716508975}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RCSe / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.5956175298804781, "obj2": 0.23810589636741686}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_RAM + ( ARS * ( ( ARS * ACS ) - PN ) ) ) + Min( FirstVNF_Mem_Server ,PN ) ) + RRS ) )", "choosing": "( Min( Min( MLU ,( ( ( MLU + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.2513380530425573}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( MUR - RMSe ) / Min( DS ,MUM ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9302788844621513, "obj2": 0.027324265941934645}, {"determining": "( ( Const + AMS ) * ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( CS * MUM ) - RMSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6242909542896258}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( ARS * ACS ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( ( CS * RCSe ) - DS ) * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1254980079681275, "obj2": 0.786845183540088}, {"determining": "( ( Const + FirstVNF_CPU ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6573705179282868, "obj2": 0.18115915966325455}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUR,DS ) ,RRSe ) * ( ( RMSe + ( RCSe + MUM ) ) - MUC ) )", "obj1": 0.796812749003984, "obj2": 0.08740911443056172}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( MRS * ACS ) / ( RRS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.13745019920318724, "obj2": 0.7812135595453985}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( MUM - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) ) / ( RCSe + ( RCSe + CS ) ) ) - MUC ) )", "obj1": 0.4262948207171315, "obj2": 0.3810415562072718}, {"determining": "( ( Const + ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,AMS ) )", "choosing": "( Min( ( MUC / ( ( ( DS + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.8227091633466136, "obj2": 0.07100075820836277}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * AMS ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / RRSe ) ) ) ) ) + ( CS - MLU ) )", "obj1": 0.5079681274900398, "obj2": 0.3070853334637687}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,ACS ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) + DS ) - RCSe ) / DS ) )", "obj1": 0.38247011952191234, "obj2": 0.43896111587991127}], "17": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,ARS ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( Max( RRSe,MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,MDR ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( DS * MLU ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.9223107569721115, "obj2": 0.031111414544993665}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( ( MUM * DS ) ,MLU ) / ( ( ( ( RCSe - RCSe ) - RCSe ) - RCSe ) / DS ) )", "obj1": 0.7250996015936255, "obj2": 0.14092179476285832}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( RCSe + ( Min( Max( MUC,DS ) ,RRSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.8585657370517928, "obj2": 0.054022051495123645}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + ( Const * RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.019057105659795237}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7409729020306999}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR * RMSe ) * ( RRSe - MUC ) )", "obj1": 0.6354581673306773, "obj2": 0.20877977591107075}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.37250996015936255, "obj2": 0.4536096439205268}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - Min( Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),MDR ) ,( ACS - AMS ) ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( Min( ( MUC * DS ) ,MLU ) + DS ) ) )", "obj1": 0.40239043824701193, "obj2": 0.4209122671028718}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( DS - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5722178247721833}, {"determining": "( ( ( ( Const + AMS ) * ( FirstVNF_Mem_Server + PN ) ) * MDR ) + ( Max( ( Const + ( ARS * ( ( ARS * ACS ) - Const ) ) ),( FirstVNF_Mem_Server / PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,MLU ) * ( MUC - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( CS - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / MUC ) ) / ( RCSe + ( RCSe + MUM ) ) ) - MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.364637837934396}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,ACS ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) + DS ) - RCSe ) / DS ) )", "obj1": 0.38247011952191234, "obj2": 0.43896111587991127}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( ( ( MRS * ACS ) / ( RRS + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.13745019920318724, "obj2": 0.7812135595453985}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / Const ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - Min( Max( MUC,DS ) ,MUC ) ) - RCSe ) / DS ) )", "obj1": 0.3645418326693227, "obj2": 0.49496979217642256}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.42231075697211157, "obj2": 0.37817764596207615}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,ARS ),( Const - ( ACS - Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.20119521912350596, "obj2": 0.7064281412455209}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ),DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RCSe / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.6952191235059761, "obj2": 0.1574429709910409}, {"determining": "Max( Min( Min( Const ,FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) / DS ) - RCSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7236274566364906}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 0.7649402390438247, "obj2": 0.0942026674939614}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( MUC ,Min( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.5079681274900398, "obj2": 0.2962874286255472}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * Min( FirstVNF_Mem_Server ,MDR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( MLU / ( RMSe + ( RCSe + MUM ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - ( FirstVNF_CPU_Server + Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( CS * RRSe ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6553784860557769, "obj2": 0.1835961196650027}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,RRSe ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.5065119697299109}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( FirstVNF_RAM * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( MUM - MUR ) / ( MUR - RRSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) ) / ( RCSe + ( RCSe + CS ) ) ) - MUC ) )", "obj1": 0.4940239043824701, "obj2": 0.32054458305284733}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,( ( Const + FirstVNF_RAM ) - ARS ) ),MDR )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( ( ( ( DS * DS ) * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.7999291102997877}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ARS * ( ( ARS * ACS ) - Min( PN ,Const ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( Min( CS ,MUC ) / Min( ( RRSe - MUM ) ,( RCSe / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.5936254980079682, "obj2": 0.23728611095528807}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR - RMSe ) * ( RRSe - MLU ) )", "obj1": 0.5537848605577689, "obj2": 0.2822361223168181}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7450199203187251, "obj2": 0.11271123305559469}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),AMS )", "choosing": "( Min( ( MUC * DS ) ,MLU ) / ( ( ( ( CS * MUR ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6835390383670729}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( AMS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * RCSe ) + CS ) ) * DS ) )", "obj1": 0.850597609561753, "obj2": 0.056836783376029126}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4601593625498008, "obj2": 0.35009636367173513}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.8247011952191236, "obj2": 0.06566527911819245}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5836653386454184, "obj2": 0.2459424836233771}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,FirstVNF_RAM ),MDR )", "choosing": "( Min( ( MUC * DS ) ,DS ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21115537848605578, "obj2": 0.6835390383670729}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.30845534731749397}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / RRSe ) ) ) ) ) + ( CS - MLU ) )", "obj1": 0.29880478087649404, "obj2": 0.5879427310649697}, {"determining": "Max( Min( Min( Const ,FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) / DS ) - RCSe ) / DS ) )", "obj1": 0.17729083665338646, "obj2": 0.7076393416107052}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( MUR - RMSe ) / Min( DS ,MUM ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9302788844621513, "obj2": 0.027324265941934645}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * MUM ) - DS ) - RCSe ) / DS ) )", "obj1": 0.4043824701195219, "obj2": 0.3905254011940364}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Max( ( AMS + FirstVNF_CPU_Server ),( Const + DDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,PN ) ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUR,DS ) ,( RMSe * RMSe ) ) * ( ( RMSe + ( RCSe + MUM ) ) - MUC ) )", "obj1": 0.7908366533864541, "obj2": 0.09017755487759659}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2410358565737052, "obj2": 0.6497908584121997}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( ( ( ( CS * RRSe ) - DS ) - RCSe ) - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11464903118347552}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_RAM + ( ARS * ( ( ARS * ACS ) - PN ) ) ) + Min( FirstVNF_Mem_Server ,PN ) ) + RRS ) )", "choosing": "( Min( Min( MLU ,( ( ( MLU + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.2513380530425573}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.4063745019920319, "obj2": 0.3897570373266424}], "18": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( ( Min( ( ( ( ( DDR - FirstVNF_CPU ) - ( FirstVNF_Mem_Server + MDR ) ) - ( ( Const / BR ) + ( FirstVNF_RAM_Server - Const ) ) ) + ( Min( ( ACS / FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) + ( ( CRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server * Const ) ) ) ) ,( ( Min( ( FirstVNF_Mem / RRS ) ,Max( BR,FirstVNF_RAM ) ) * Max( ( AMS - ARS ),( PN * CRS ) ) ) - ( Max( ( FirstVNF_Mem * ARS ),( FirstVNF_RAM * Const ) ) / ( ( CRS * MRS ) * Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) / ( Min( ( Max( Max( MRS,FirstVNF_CPU_Server ),Max( BR,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) / ( MRS + ARS ) ),Min( ( BR / ACS ) ,Max( FirstVNF_RAM_Server,AMS ) ) ) ) / ( Max( ( Min( DDR ,MRS ) - ( AMS - CRS ) ),( Min( ACS ,FirstVNF_RAM_Server ) + ( CRS * FirstVNF_Mem ) ) ) - ( ( ( Const + FirstVNF_CPU ) / ( FirstVNF_CPU / Const ) ) * ( ( ACS + FirstVNF_RAM_Server ) * Min( PN ,PN ) ) ) ) ) ) * ( ( Min( ( ( Max( FirstVNF_CPU,BR ) + Min( FirstVNF_RAM_Server ,MDR ) ) + Min( ( ACS + FirstVNF_Mem_Server ) ,( AMS * FirstVNF_Mem_Server ) ) ) ,Max( ( Max( BR,PN ) / ( FirstVNF_Mem_Server + DDR ) ),( ( AMS + RRS ) + ( DDR + AMS ) ) ) ) * ( ( Max( Min( BR ,FirstVNF_RAM ),( AMS / CRS ) ) - Min( ( FirstVNF_CPU_Server / Const ) ,( PN / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_Mem_Server - ARS ) / Min( AMS ,Const ) ),( ( MRS + FirstVNF_CPU_Server ) - Min( RRS ,AMS ) ) ) ) ) - ( ( ( Max( ( AMS * FirstVNF_RAM_Server ),( MRS - ARS ) ) + ( Min( FirstVNF_CPU ,ARS ) - ( Const + FirstVNF_CPU_Server ) ) ) - Max( ( ( FirstVNF_CPU_Server - BR ) / ( CRS / PN ) ),( ( FirstVNF_Mem_Server * AMS ) / ( FirstVNF_CPU_Server + ACS ) ) ) ) / ( ( ( Min( RRS ,FirstVNF_CPU ) * Max( MDR,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) * ( ( ( RRS - MRS ) / Max( FirstVNF_CPU,DDR ) ) - ( ( ARS - FirstVNF_RAM_Server ) * ( ARS - PN ) ) ) ) ) ) ) - ( ( ( Max( ( ( ( BR / PN ) - ( FirstVNF_Mem - AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) - ( CRS - Const ) ) ),( ( Min( RRS ,RRS ) + Min( BR ,FirstVNF_CPU ) ) + Min( ( ACS - MDR ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) / Min( ( Min( ( DDR + FirstVNF_RAM_Server ) ,( PN / FirstVNF_RAM_Server ) ) / Min( Max( ACS,BR ) ,( MDR + ARS ) ) ) ,( ( ( Const / FirstVNF_RAM_Server ) + Max( ARS,ARS ) ) / ( Max( DDR,MDR ) - Max( AMS,CRS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server + ARS ) * ( AMS + PN ) ) - ( Max( ACS,ARS ) / ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( AMS + DDR ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( ( ACS + FirstVNF_RAM ) / ( PN * BR ) ) ) ) - ( ( ( ( DDR * Const ) - Min( FirstVNF_Mem_Server ,MDR ) ) + ( ( FirstVNF_RAM + RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) / ( ( ( DDR + PN ) + Min( Const ,MDR ) ) / ( Min( MRS ,RRS ) / Min( MDR ,FirstVNF_RAM ) ) ) ) ) ) + ( ( Max( ( ( ( PN / AMS ) - ( FirstVNF_Mem_Server / PN ) ) * Min( ( RRS + FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,AMS ) ) ),( Min( ( ACS + CRS ) ,( AMS / MDR ) ) / ( ( Const - MRS ) + ( FirstVNF_Mem / Const ) ) ) ) * Max( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS / MRS ) ) + Min( Max( Const,AMS ) ,( ACS * FirstVNF_RAM ) ) ),( ( ( ACS * ACS ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( DDR / RRS ) ) ) ) ) + Max( ( ( ( ( FirstVNF_RAM / CRS ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) / Max( BR,CRS ) ) ) / ( ( ( MDR - DDR ) / ( DDR + ARS ) ) * ( ( PN * PN ) - ( FirstVNF_Mem * MRS ) ) ) ),( ( ( ( PN - FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * PN ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( AMS * FirstVNF_CPU ) - ( BR / Const ) ) + Min( ( FirstVNF_Mem_Server * BR ) ,( CRS / ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( Max( ( ( ( ( MLU * CS ) * ( MUC + RCSe ) ) / Min( ( MLU / MUR ) ,Max( RRSe,RMSe ) ) ) + Min( ( ( MUR * MUC ) / Max( DS,RRSe ) ) ,( ( RRSe / MUC ) / ( MUC * RMSe ) ) ) ),( Min( ( ( CS * RMSe ) - ( MUM / MUR ) ) ,( ( CS / RRSe ) / ( MUM / MUC ) ) ) + ( ( ( RMSe * MUM ) / Min( CS ,CS ) ) - ( ( RMSe + MLU ) + ( RMSe * MUC ) ) ) ) ) ,( ( ( ( Min( RMSe ,MUC ) + ( RRSe * MUC ) ) * ( ( CS - MUC ) / ( MUR / RRSe ) ) ) * Max( ( ( MUM / RRSe ) + Max( DS,RMSe ) ),( ( MUM / DS ) / ( RRSe * MUR ) ) ) ) - Min( ( Max( Min( RRSe ,DS ),( CS * MUR ) ) + Max( ( MUM / RMSe ),( RMSe * RCSe ) ) ) ,( ( Max( MLU,MLU ) / ( RRSe / RRSe ) ) * ( ( MUR - RMSe ) * ( DS - RRSe ) ) ) ) ) ) + ( ( ( Min( ( ( MUR / MUR ) / Min( MUR ,MUC ) ) ,Max( Max( MUM,DS ),( RRSe + MUR ) ) ) * ( ( ( MUM / CS ) - ( MUM + RMSe ) ) - Min( Max( MLU,RCSe ) ,Min( MUM ,RMSe ) ) ) ) * ( ( ( ( CS / RCSe ) - Max( RCSe,RCSe ) ) * Max( ( CS + MLU ),( RRSe / RCSe ) ) ) - Min( Min( ( RRSe * RRSe ) ,( MUC - MUR ) ) ,( Min( MUC ,MUC ) - ( DS * MUR ) ) ) ) ) / ( Max( ( Min( Min( RRSe ,MUR ) ,Max( DS,RRSe ) ) - ( Max( RRSe,RMSe ) - ( MUR * CS ) ) ),Max( ( Max( MUR,DS ) / ( MUM - MLU ) ),Min( ( MUM / RRSe ) ,( MUM * DS ) ) ) ) / ( ( Max( ( MUC * MUR ),( MUR * CS ) ) / Min( Min( MUC ,MUM ) ,( MLU + RCSe ) ) ) - ( Max( ( MUR + MUR ),Min( MUC ,MLU ) ) + Min( ( RMSe / CS ) ,Min( MLU ,RRSe ) ) ) ) ) ) ) + ( ( Min( Min( ( ( ( MLU - MUC ) * ( MUC - MUM ) ) + ( Max( MUR,RCSe ) / ( DS * DS ) ) ) ,( Min( ( CS * RRSe ) ,Min( RMSe ,RRSe ) ) - ( Min( DS ,RRSe ) / ( MLU / MUM ) ) ) ) ,( ( ( ( MLU * DS ) * Min( MLU ,CS ) ) + ( ( MUR / MUR ) + ( MUR * RCSe ) ) ) / ( Max( ( MLU + CS ),Max( RCSe,RMSe ) ) - ( Min( RRSe ,RMSe ) * ( RCSe * MUR ) ) ) ) ) * ( Max( ( ( Min( RMSe ,CS ) / ( CS / MUM ) ) - ( ( MUM / RRSe ) / Max( CS,CS ) ) ),( ( ( MUC * MUC ) * ( MUR / MUC ) ) - Min( ( MLU + CS ) ,( MUC - RCSe ) ) ) ) - Min( ( ( ( MUC / RCSe ) + ( MLU / MUM ) ) * Min( ( MUM / MUC ) ,Max( MUM,CS ) ) ) ,( ( Max( RRSe,RMSe ) * ( RRSe + RMSe ) ) / Min( ( CS - MLU ) ,( CS + MUC ) ) ) ) ) ) * ( Min( ( ( ( Max( MUR,MLU ) - Max( DS,DS ) ) - Min( ( CS + CS ) ,( MUM / MUR ) ) ) + ( ( Max( CS,MLU ) - Max( MLU,DS ) ) - ( ( RMSe / MUM ) / ( RCSe / RMSe ) ) ) ) ,( Max( ( Max( RRSe,MUM ) - ( RMSe / RMSe ) ),( Max( RCSe,DS ) / Min( RRSe ,RMSe ) ) ) / ( ( ( MUM + MUR ) * ( MUR / MUR ) ) + Max( ( MLU + CS ),Min( CS ,RMSe ) ) ) ) ) / ( Max( ( Min( Min( RMSe ,MUR ) ,( DS + MLU ) ) - ( Min( MLU ,RCSe ) * ( RRSe / RCSe ) ) ),( Max( Max( DS,MUC ),( MUC / RRSe ) ) * ( ( RMSe + MLU ) / Min( MUM ,CS ) ) ) ) * ( ( Max( Max( RMSe,RMSe ),( MUC - RRSe ) ) / Min( ( DS * RMSe ) ,( RCSe * RRSe ) ) ) - ( ( Min( RMSe ,MUR ) - ( RRSe - RRSe ) ) + Max( Min( RRSe ,MUC ),Min( MUM ,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,ARS ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( Max( RRSe,MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR * RMSe ) * ( RRSe - MUC ) )", "obj1": 0.6354581673306773, "obj2": 0.20877977591107075}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13147410358565736, "obj2": 0.7479289168627734}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / Max( MUM,DS ) ) ,Min( MUC ,MUC ) ) * ( Min( MUR ,MLU ) * ( MLU / RRSe ) ) ) ) ) + ( CS - MLU ) )", "obj1": 0.29880478087649404, "obj2": 0.586685973936746}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.37250996015936255, "obj2": 0.4536096439205268}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),CRS )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.27091633466135456, "obj2": 0.613792774358226}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR - RMSe ) * ( RRSe - MLU ) )", "obj1": 0.5537848605577689, "obj2": 0.2822361223168181}, {"determining": "Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( CS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) * ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.23070344451930688}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( DS - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5722178247721833}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,( ( Const + FirstVNF_RAM ) - ARS ) ),MDR )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( ( ( ( DS * DS ) * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.7999291102997877}, {"determining": "Max( Min( Min( Const ,FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) / DS ) - RCSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7236274566364906}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.3844621513944223, "obj2": 0.43147374953195117}, {"determining": "( ( ( ( Const + AMS ) * ( FirstVNF_Mem_Server + PN ) ) * MDR ) + ( Max( ( Const + ( ARS * ( ( ARS * ACS ) - Const ) ) ),( FirstVNF_Mem_Server / PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,MLU ) * ( MUC - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( CS - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / MUC ) ) / ( RCSe + ( RCSe + MUM ) ) ) - MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.364637837934396}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4601593625498008, "obj2": 0.35009636367173513}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.40239043824701193, "obj2": 0.39307653301407003}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_RAM + ( ARS * ( ( ARS * ACS ) - PN ) ) ) + Min( FirstVNF_Mem_Server ,PN ) ) + RRS ) )", "choosing": "( Min( Min( MLU ,( ( ( MLU + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.2513380530425573}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7409729020306999}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.17729083665338646, "obj2": 0.6986615757953046}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Max( ( AMS + FirstVNF_CPU_Server ),( Const + DDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,PN ) ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUR,DS ) ,( RMSe * RMSe ) ) * ( ( RMSe + ( RCSe + MUM ) ) - MUC ) )", "obj1": 0.7908366533864541, "obj2": 0.09017755487759659}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( ( MUM * DS ) ,MLU ) / ( ( ( ( RCSe - RCSe ) - RCSe ) - RCSe ) / DS ) )", "obj1": 0.7250996015936255, "obj2": 0.14092179476285832}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / Const ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - Min( Max( MUC,DS ) ,MUC ) ) - RCSe ) / DS ) )", "obj1": 0.3645418326693227, "obj2": 0.49496979217642256}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,FirstVNF_RAM ),MDR )", "choosing": "( Min( ( MUC * DS ) ,DS ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.20717131474103587, "obj2": 0.688242659940062}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( ( ( DS * RCSe ) / MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 0.5378486055776892, "obj2": 0.29078425346876097}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( AMS ,ARS ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * RCSe ) + CS ) ) * DS ) )", "obj1": 0.850597609561753, "obj2": 0.056836783376029126}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.6713147410358565, "obj2": 0.17398317294728025}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + PN ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( DS - RMSe ) / ( RRSe - MUC ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02563539127568007}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( Min( PN ,Const ) * ( ( AMS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - ( MUR + MUM ) ) - RCSe ) / DS ) )", "obj1": 0.7390438247011952, "obj2": 0.11818673759540393}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.42231075697211157, "obj2": 0.37817764596207615}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_RAM + ( ARS * ( ( FirstVNF_Mem_Server - CRS ) - PN ) ) ) + Min( FirstVNF_Mem_Server ,PN ) ) + RRS ) )", "choosing": "( Min( Min( MLU ,( Max( ( MLU + ( ( DS + MUM ) / ( MUR * DS ) ) ),( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,DS ) ) * ( RRSe - MUC ) )", "obj1": 0.24900398406374502, "obj2": 0.6292403789647769}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( CS * MUM ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8804780876494024, "obj2": 0.046418544085853886}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( CS * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6553784860557769, "obj2": 0.1835961196650027}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + ( Const * RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.019057105659795237}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.30845534731749397}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( CS - DS ) - MUM ) / DS ) )", "obj1": 0.7589641434262948, "obj2": 0.09699128007583743}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,RRSe ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.5065119697299109}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 0.7649402390438247, "obj2": 0.0942026674939614}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16733067729083664, "obj2": 0.7023484782681101}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( FirstVNF_RAM * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( MUM - MUR ) / ( MUR - RRSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) ) / ( RCSe + ( RCSe + CS ) ) ) - MUC ) )", "obj1": 0.4940239043824701, "obj2": 0.32054458305284733}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / ( ( CS * RCSe ) - DS ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6185749162369605}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Max( ( AMS * FirstVNF_CPU_Server ),( Const + DDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.8247011952191236, "obj2": 0.06566527911819245}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( MUR - RMSe ) / Min( DS ,MUM ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.6832669322709163, "obj2": 0.16773918552873066}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.38247011952191234, "obj2": 0.4388647069255392}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( BR * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( RCSe + ( Min( Max( MUC,DS ) ,RRSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.5159362549800797, "obj2": 0.2930711959804198}, {"determining": "( ( ( Min( ( Const + FirstVNF_RAM ) ,MRS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.7450199203187251, "obj2": 0.11253219358952522}], "19": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,ARS ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( Max( RRSe,MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( ( ( DDR - FirstVNF_CPU ) - ( FirstVNF_Mem_Server + MDR ) ) - ( ( Const / BR ) + ( FirstVNF_RAM_Server - Const ) ) ) + ( Min( ( ACS / FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) + ( ( CRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server * Const ) ) ) ) ,( ( Min( ( FirstVNF_Mem / RRS ) ,Max( BR,FirstVNF_RAM ) ) * Max( ( AMS - ARS ),( PN * CRS ) ) ) - ( Max( ( FirstVNF_Mem * ARS ),( FirstVNF_RAM * Const ) ) / ( ( CRS * MRS ) * Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) / ( Min( ( Max( Max( MRS,FirstVNF_CPU_Server ),Max( BR,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) / ( MRS + ARS ) ),Min( ( BR / ACS ) ,Max( FirstVNF_RAM_Server,AMS ) ) ) ) / ( Max( ( Min( DDR ,MRS ) - ( AMS - CRS ) ),( Min( ACS ,FirstVNF_RAM_Server ) + ( CRS * FirstVNF_Mem ) ) ) - ( ( ( Const + FirstVNF_CPU ) / ( FirstVNF_CPU / Const ) ) * ( ( ACS + FirstVNF_RAM_Server ) * Min( PN ,PN ) ) ) ) ) ) * ( ( Min( ( ( Max( FirstVNF_CPU,BR ) + Min( FirstVNF_RAM_Server ,MDR ) ) + Min( ( ACS + FirstVNF_Mem_Server ) ,( AMS * FirstVNF_Mem_Server ) ) ) ,Max( ( Max( BR,PN ) / ( FirstVNF_Mem_Server + DDR ) ),( ( AMS + RRS ) + ( DDR + AMS ) ) ) ) * ( ( Max( Min( BR ,FirstVNF_RAM ),( AMS / CRS ) ) - Min( ( FirstVNF_CPU_Server / Const ) ,( PN / FirstVNF_Mem ) ) ) * Max( ( ( FirstVNF_Mem_Server - ARS ) / Min( AMS ,Const ) ),( ( MRS + FirstVNF_CPU_Server ) - Min( RRS ,AMS ) ) ) ) ) - ( ( ( Max( ( AMS * FirstVNF_RAM_Server ),( MRS - ARS ) ) + ( Min( FirstVNF_CPU ,ARS ) - ( Const + FirstVNF_CPU_Server ) ) ) - Max( ( ( FirstVNF_CPU_Server - BR ) / ( CRS / PN ) ),( ( FirstVNF_Mem_Server * AMS ) / ( FirstVNF_CPU_Server + ACS ) ) ) ) / ( ( ( Min( RRS ,FirstVNF_CPU ) * Max( MDR,FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) * ( ( ( RRS - MRS ) / Max( FirstVNF_CPU,DDR ) ) - ( ( ARS - FirstVNF_RAM_Server ) * ( ARS - PN ) ) ) ) ) ) ) - ( ( ( Max( ( ( ( BR / PN ) - ( FirstVNF_Mem - AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) - ( CRS - Const ) ) ),( ( Min( RRS ,RRS ) + Min( BR ,FirstVNF_CPU ) ) + Min( ( ACS - MDR ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) / Min( ( Min( ( DDR + FirstVNF_RAM_Server ) ,( PN / FirstVNF_RAM_Server ) ) / Min( Max( ACS,BR ) ,( MDR + ARS ) ) ) ,( ( ( Const / FirstVNF_RAM_Server ) + Max( ARS,ARS ) ) / ( Max( DDR,MDR ) - Max( AMS,CRS ) ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server + ARS ) * ( AMS + PN ) ) - ( Max( ACS,ARS ) / ( MDR + FirstVNF_Mem_Server ) ) ) / ( Min( ( AMS + DDR ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( ( ACS + FirstVNF_RAM ) / ( PN * BR ) ) ) ) - ( ( ( ( DDR * Const ) - Min( FirstVNF_Mem_Server ,MDR ) ) + ( ( FirstVNF_RAM + RRS ) / ( FirstVNF_RAM_Server + MRS ) ) ) / ( ( ( DDR + PN ) + Min( Const ,MDR ) ) / ( Min( MRS ,RRS ) / Min( MDR ,FirstVNF_RAM ) ) ) ) ) ) + ( ( Max( ( ( ( PN / AMS ) - ( FirstVNF_Mem_Server / PN ) ) * Min( ( RRS + FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,AMS ) ) ),( Min( ( ACS + CRS ) ,( AMS / MDR ) ) / ( ( Const - MRS ) + ( FirstVNF_Mem / Const ) ) ) ) * Max( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS / MRS ) ) + Min( Max( Const,AMS ) ,( ACS * FirstVNF_RAM ) ) ),( ( ( ACS * ACS ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( DDR / RRS ) ) ) ) ) + Max( ( ( ( ( FirstVNF_RAM / CRS ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) + ( ( Const - FirstVNF_RAM_Server ) / Max( BR,CRS ) ) ) / ( ( ( MDR - DDR ) / ( DDR + ARS ) ) * ( ( PN * PN ) - ( FirstVNF_Mem * MRS ) ) ) ),( ( ( ( PN - FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * PN ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( AMS * FirstVNF_CPU ) - ( BR / Const ) ) + Min( ( FirstVNF_Mem_Server * BR ) ,( CRS / ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( Max( ( ( ( ( MLU * CS ) * ( MUC + RCSe ) ) / Min( ( MLU / MUR ) ,Max( RRSe,RMSe ) ) ) + Min( ( ( MUR * MUC ) / Max( DS,RRSe ) ) ,( ( RRSe / MUC ) / ( MUC * RMSe ) ) ) ),( Min( ( ( CS * RMSe ) - ( MUM / MUR ) ) ,( ( CS / RRSe ) / ( MUM / MUC ) ) ) + ( ( ( RMSe * MUM ) / Min( CS ,CS ) ) - ( ( RMSe + MLU ) + ( RMSe * MUC ) ) ) ) ) ,( ( ( ( Min( RMSe ,MUC ) + ( RRSe * MUC ) ) * ( ( CS - MUC ) / ( MUR / RRSe ) ) ) * Max( ( ( MUM / RRSe ) + Max( DS,RMSe ) ),( ( MUM / DS ) / ( RRSe * MUR ) ) ) ) - Min( ( Max( Min( RRSe ,DS ),( CS * MUR ) ) + Max( ( MUM / RMSe ),( RMSe * RCSe ) ) ) ,( ( Max( MLU,MLU ) / ( RRSe / RRSe ) ) * ( ( MUR - RMSe ) * ( DS - RRSe ) ) ) ) ) ) + ( ( ( Min( ( ( MUR / MUR ) / Min( MUR ,MUC ) ) ,Max( Max( MUM,DS ),( RRSe + MUR ) ) ) * ( ( ( MUM / CS ) - ( MUM + RMSe ) ) - Min( Max( MLU,RCSe ) ,Min( MUM ,RMSe ) ) ) ) * ( ( ( ( CS / RCSe ) - Max( RCSe,RCSe ) ) * Max( ( CS + MLU ),( RRSe / RCSe ) ) ) - Min( Min( ( RRSe * RRSe ) ,( MUC - MUR ) ) ,( Min( MUC ,MUC ) - ( DS * MUR ) ) ) ) ) / ( Max( ( Min( Min( RRSe ,MUR ) ,Max( DS,RRSe ) ) - ( Max( RRSe,RMSe ) - ( MUR * CS ) ) ),Max( ( Max( MUR,DS ) / ( MUM - MLU ) ),Min( ( MUM / RRSe ) ,( MUM * DS ) ) ) ) / ( ( Max( ( MUC * MUR ),( MUR * CS ) ) / Min( Min( MUC ,MUM ) ,( MLU + RCSe ) ) ) - ( Max( ( MUR + MUR ),Min( MUC ,MLU ) ) + Min( ( RMSe / CS ) ,Min( MLU ,RRSe ) ) ) ) ) ) ) + ( ( Min( Min( ( ( ( MLU - MUC ) * ( MUC - MUM ) ) + ( Max( MUR,RCSe ) / ( DS * DS ) ) ) ,( Min( ( CS * RRSe ) ,Min( RMSe ,RRSe ) ) - ( Min( DS ,RRSe ) / ( MLU / MUM ) ) ) ) ,( ( ( ( MLU * DS ) * Min( MLU ,CS ) ) + ( ( MUR / MUR ) + ( MUR * RCSe ) ) ) / ( Max( ( MLU + CS ),Max( RCSe,RMSe ) ) - ( Min( RRSe ,RMSe ) * ( RCSe * MUR ) ) ) ) ) * ( Max( ( ( Min( RMSe ,CS ) / ( CS / MUM ) ) - ( ( MUM / RRSe ) / Max( CS,CS ) ) ),( ( ( MUC * MUC ) * ( MUR / MUC ) ) - Min( ( MLU + CS ) ,( MUC - RCSe ) ) ) ) - Min( ( ( ( MUC / RCSe ) + ( MLU / MUM ) ) * Min( ( MUM / MUC ) ,Max( MUM,CS ) ) ) ,( ( Max( RRSe,RMSe ) * ( RRSe + RMSe ) ) / Min( ( CS - MLU ) ,( CS + MUC ) ) ) ) ) ) * ( Min( ( ( ( Max( MUR,MLU ) - Max( DS,DS ) ) - Min( ( CS + CS ) ,( MUM / MUR ) ) ) + ( ( Max( CS,MLU ) - Max( MLU,DS ) ) - ( ( RMSe / MUM ) / ( RCSe / RMSe ) ) ) ) ,( Max( ( Max( RRSe,MUM ) - ( RMSe / RMSe ) ),( Max( RCSe,DS ) / Min( RRSe ,RMSe ) ) ) / ( ( ( MUM + MUR ) * ( MUR / MUR ) ) + Max( ( MLU + CS ),Min( CS ,RMSe ) ) ) ) ) / ( Max( ( Min( Min( RMSe ,MUR ) ,( DS + MLU ) ) - ( Min( MLU ,RCSe ) * ( RRSe / RCSe ) ) ),( Max( Max( DS,MUC ),( MUC / RRSe ) ) * ( ( RMSe + MLU ) / Min( MUM ,CS ) ) ) ) * ( ( Max( Max( RMSe,RMSe ),( MUC - RRSe ) ) / Min( ( DS * RMSe ) ,( RCSe * RRSe ) ) ) - ( ( Min( RMSe ,MUR ) - ( RRSe - RRSe ) ) + Max( Min( RRSe ,MUC ),Min( MUM ,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,( ( Const + FirstVNF_RAM ) - ARS ) ),MDR )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( ( ( ( DS * DS ) * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.7999291102997877}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13147410358565736, "obj2": 0.7479289168627734}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( DS - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5722178247721833}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + ( Const * RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.019057105659795237}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_RAM + ( ARS * ( ( FirstVNF_Mem_Server - CRS ) - PN ) ) ) + Min( FirstVNF_Mem_Server ,PN ) ) + RRS ) )", "choosing": "( Min( Min( MLU ,( Max( ( MLU + ( ( DS + MUM ) / ( MUR * DS ) ) ),( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,DS ) ) * ( RRSe - MUC ) )", "obj1": 0.24900398406374502, "obj2": 0.6292403789647769}, {"determining": "( ( ( ( Const + AMS ) * ( FirstVNF_Mem_Server + PN ) ) * MDR ) + ( Max( ( Const + ( ARS * ( ( ARS * ACS ) - Const ) ) ),( FirstVNF_Mem_Server / PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,MLU ) * ( MUC - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( CS - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / MUC ) ) / ( RCSe + ( RCSe + MUM ) ) ) - MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.364637837934396}, {"determining": "( ( Const + Min( ( Const * FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) * ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( RCSe / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.601593625498008, "obj2": 0.22825679326496412}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_RAM + ( ARS * ( ( ARS * ACS ) - PN ) ) ) + Min( FirstVNF_Mem_Server ,PN ) ) + RRS ) )", "choosing": "( Min( Min( MLU ,( ( ( MLU + ( ( DS + MUM ) / ( MUR * DS ) ) ) / ( ( MUC * MUM ) + ( RCSe + CS ) ) ) - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.5677290836653387, "obj2": 0.2513380530425573}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + PN ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( DS - RMSe ) / ( RRSe - MUC ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02563539127568007}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7409729020306999}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( Min( FirstVNF_Mem_Server ,PN ) * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RCSe ) - RCSe ) / DS ) )", "obj1": 0.38645418326693226, "obj2": 0.4313919086919192}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Max( ( AMS + FirstVNF_CPU_Server ),( Const + DDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,PN ) ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( MUM - MUR ) / ( MUR - RRSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) ) / ( RCSe + ( RCSe + CS ) ) ) - MUC ) )", "obj1": 0.5956175298804781, "obj2": 0.2495430551883844}, {"determining": "( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( Max( MUC,( ( RCSe - DS ) - RCSe ) ) * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7151394422310757, "obj2": 0.1446516335036684}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( CS * MUM ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8804780876494024, "obj2": 0.046418544085853886}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.42231075697211157, "obj2": 0.37817764596207615}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.37250996015936255, "obj2": 0.4536096439205268}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / Const ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - Min( Max( MUC,DS ) ,MUC ) ) - RCSe ) / DS ) )", "obj1": 0.3645418326693227, "obj2": 0.49496979217642256}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR * RMSe ) * ( RRSe - MUC ) )", "obj1": 0.6235059760956175, "obj2": 0.21621949849061964}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( MUR - RMSe ) / ( RRSe - MUC ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02563539127568007}, {"determining": "( ( Const + AMS ) * Min( ( ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( CS * RCSe ) - RMSe ) - RCSe ) )", "obj1": 0.6872509960159362, "obj2": 0.16012374631391102}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( DS * RRSe ) ) ) + ( CS - MLU ) )", "obj1": 0.2908366533864542, "obj2": 0.5996703478700731}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( ( MUM * DS ) ,MLU ) / ( ( ( ( RCSe - RCSe ) - RCSe ) - RCSe ) / DS ) )", "obj1": 0.7250996015936255, "obj2": 0.14092179476285832}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( FirstVNF_RAM * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.5318725099601593, "obj2": 0.28443580649594913}, {"determining": "Max( Min( Min( Const ,FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) / DS ) - RCSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7236274566364906}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 0.5577689243027888, "obj2": 0.2718343271575813}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + ACS ) ) * ( ( Const * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR * RRSe ) * ( MUM - MUM ) )", "obj1": 0.647410358565737, "obj2": 0.19909288909508865}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( CS * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6553784860557769, "obj2": 0.1835961196650027}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,RRSe ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.5065119697299109}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.40239043824701193, "obj2": 0.39307653301407003}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( AMS ,ARS ) / Min( RRS ,ARS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( CS + ( ( DS + MUM ) + CS ) ) * DS ) )", "obj1": 0.850597609561753, "obj2": 0.05679229436668162}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Max( ( AMS + FirstVNF_CPU_Server ),( Const + DDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,PN ) ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUR,DS ) ,( RMSe * RMSe ) ) * ( ( RMSe + ( RCSe + MUM ) ) - MUC ) )", "obj1": 0.7908366533864541, "obj2": 0.09017755487759659}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( BR * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( RCSe + ( Min( Max( MUC,DS ) ,RRSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.5159362549800797, "obj2": 0.2930711959804198}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4601593625498008, "obj2": 0.35009636367173513}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,( RCSe / Min( ( RRSe - MUM ) ,( CS * MUM ) ) ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0034677433576793407}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR * RMSe ) * ( RRSe - MUC ) )", "obj1": 0.6354581673306773, "obj2": 0.20877977591107075}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( ( ARS * RRS ) - ( RRS + MDR ) ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - ( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( DS ,MUC ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) ) - RCSe ) / DS ) )", "obj1": 0.20119521912350596, "obj2": 0.6895292147255213}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 0.2051792828685259, "obj2": 0.6854951972356035}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( CS * MUM ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.8764940239043825, "obj2": 0.05092637952890465}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR - RMSe ) * ( RRSe - MLU ) )", "obj1": 0.5537848605577689, "obj2": 0.2822361223168181}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( MUC / ( RCSe - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.8047808764940239, "obj2": 0.07361394294448942}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( Min( PN ,Const ) * ( ( AMS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - ( MUR + MUM ) ) - RCSe ) / DS ) )", "obj1": 0.7370517928286853, "obj2": 0.11896055426479281}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( CS - DS ) - MUM ) / DS ) )", "obj1": 0.7589641434262948, "obj2": 0.09699128007583743}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.4063745019920319, "obj2": 0.3866802834704054}], "20": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + PN ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( CS * MUM ) ) ) * Min( MUM ,Min( CS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,ARS ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( Max( RRSe,MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( DS - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5722178247721833}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( CS * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6553784860557769, "obj2": 0.1835961196650027}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( Min( PN ,Const ) * ( ( AMS / ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RMSe ) - ( MUR + MUM ) ) - RCSe ) / DS ) )", "obj1": 0.7370517928286853, "obj2": 0.11891887644049103}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - Min( ( RRSe - MUM ) ,( CS * MUM ) ) ) / DS ) )", "obj1": 0.1952191235059761, "obj2": 0.7150730007669321}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + MUR ) ) * DS ) )", "obj1": 0.4860557768924303, "obj2": 0.31890273114347295}, {"determining": "Max( Min( Min( Const ,FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) / DS ) - RCSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7236274566364906}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM - AMS ) ) ) + ( Const * RRS ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9661354581673307, "obj2": 0.019057105659795237}, {"determining": "( ( Const + AMS ) * Min( ( ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( CS * RCSe ) - RMSe ) - RCSe ) )", "obj1": 0.6872509960159362, "obj2": 0.16012374631391102}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),Min( AMS ,( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / CS ) )", "obj1": 0.1254980079681275, "obj2": 0.7948622381550962}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( Min( FirstVNF_Mem_Server ,PN ) * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RCSe ) - RCSe ) / DS ) )", "obj1": 0.38645418326693226, "obj2": 0.4313919086919192}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / Const ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - Min( Max( MUC,DS ) ,MUC ) ) - RCSe ) / DS ) )", "obj1": 0.3645418326693227, "obj2": 0.49496979217642256}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7272167320111165}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13147410358565736, "obj2": 0.7479289168627734}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.37250996015936255, "obj2": 0.4536096439205268}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( CS * MUM ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.5099601593625498, "obj2": 0.3004342538137964}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.42231075697211157, "obj2": 0.37817764596207615}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - Min( Max( MUC,DS ) ,MUC ) ) - RCSe ) / DS ) )", "obj1": 0.40039840637450197, "obj2": 0.42104029696782264}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5816733067729084, "obj2": 0.24691891677783145}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( CS - DS ) - MUM ) / DS ) )", "obj1": 0.7589641434262948, "obj2": 0.09699128007583743}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( RCSe + ( ( MUR * RMSe ) * ( RRSe - MUC ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6143129728677117}, {"determining": "( ( ( ( Const + AMS ) * ( FirstVNF_Mem_Server + PN ) ) * MDR ) + ( Max( ( Const + ( ARS * ( ( ARS * ACS ) - Const ) ) ),( FirstVNF_Mem_Server / PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,MLU ) * ( MUC - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( CS - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / MUC ) ) / ( RCSe + ( RCSe + MUM ) ) ) - MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.364637837934396}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( ( MUM * DS ) ,MLU ) / ( ( ( ( RCSe - RCSe ) - RCSe ) - RCSe ) / DS ) )", "obj1": 0.7250996015936255, "obj2": 0.14092179476285832}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.8466135458167331, "obj2": 0.06346204722362665}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4601593625498008, "obj2": 0.35009636367173513}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( BR * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( RCSe + ( Min( Max( MUC,DS ) ,RRSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.06947569614353644}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9063745019920318, "obj2": 0.04575518704636498}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,RRSe ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.5065119697299109}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.40239043824701193, "obj2": 0.39307653301407003}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR - RMSe ) * ( RRSe - MLU ) )", "obj1": 0.5537848605577689, "obj2": 0.2822361223168181}, {"determining": "( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( Max( MUC,( ( RCSe - DS ) - RCSe ) ) * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7151394422310757, "obj2": 0.1446516335036684}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS + CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,RRSe ) * ( RRSe - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( MUM - MUR ) / ( MUR - RRSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) ) / ( RCSe + ( RCSe + CS ) ) ) - MUC ) )", "obj1": 0.7768924302788844, "obj2": 0.0897148598224774}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 0.2051792828685259, "obj2": 0.6854951972356035}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,Min( ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) + FirstVNF_RAM ) ,ARS ) ),MDR )", "choosing": "( Min( ( MUC * DS ) ,Max( MUC,DS ) ) / ( ( ( ( ( DS * DS ) * RRSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.7976878047088629}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( AMS ,ARS ) / Min( RRS ,ARS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( CS + ( ( DS + MUM ) + CS ) ) * DS ) )", "obj1": 0.850597609561753, "obj2": 0.05679229436668162}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( FirstVNF_RAM * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( ( DS * DS ) * RRSe ) - DS ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( MUR - RMSe ) / ( RRSe - MUC ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9840637450199203, "obj2": 0.008798983557502764}, {"determining": "( ( Const + Min( ( Const * FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) * ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( RCSe / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6175298804780877, "obj2": 0.21553707551271625}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) - ( ( Const + ( Max( ( AMS + FirstVNF_CPU_Server ),( Const + DDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,PN ) ) ) ) ) + Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,( RCSe / Min( ( ( RMSe + ( RCSe + MUM ) ) - MUC ) ,( CS * MUM ) ) ) ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( ( RCSe - DS ) - RCSe ) / Min( DS ,MUR ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9203187250996016, "obj2": 0.04035320564158491}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5557768924302788, "obj2": 0.26675114146238565}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + ACS ) ) * ( ( Const * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR * RRSe ) * ( MUM - MUM ) )", "obj1": 0.647410358565737, "obj2": 0.19909288909508865}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( ( ( MUR - RMSe ) / ( RRSe - MUC ) ) / DS ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.9342629482071713, "obj2": 0.02563539127568007}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.601593625498008, "obj2": 0.22825679326496412}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6972111553784861, "obj2": 0.15484710279986746}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.4063745019920319, "obj2": 0.3866802834704054}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}], "21": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,ARS ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( FirstVNF_RAM_Server ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Min( MUM ,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + PN ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( Max( MUC,DS ) ,RRSe ) * ( ( RCSe / Min( ( RRSe - MUM ) ,( CS * MUM ) ) ) * Min( MUM ,Min( CS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( ( Min( DS ,DS ) / MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,RRSe ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.5065119697299109}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( DS - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5722178247721833}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5816733067729084, "obj2": 0.24691891677783145}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.5059760956175299, "obj2": 0.2962138056302022}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + MUR ) ) * DS ) )", "obj1": 0.4860557768924303, "obj2": 0.31890273114347295}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( FirstVNF_Mem - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) ) ) )", "choosing": "( Min( ( DS / RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1892430278884462, "obj2": 0.7101412459776146}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.601593625498008, "obj2": 0.22825679326496412}, {"determining": "( AMS + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUM ) / ( ( ( ( CS * ( ( CS * RCSe ) - DS ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7122966211153249}, {"determining": "( ( ( ( Const + AMS ) * ( FirstVNF_Mem_Server + PN ) ) * MDR ) + ( ( ( Const + ( ARS * ( ( ARS * Min( FirstVNF_Mem_Server ,PN ) ) - Const ) ) ) * ( FirstVNF_Mem_Server / PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,MLU ) * ( MUC - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( DS * RRSe ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / DS ) ) / ( RCSe + ( RCSe + MUM ) ) ) - MUC ) )", "obj1": 0.250996015936255, "obj2": 0.6373829149413531}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.5338645418326693, "obj2": 0.2877103417982035}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( AMS ,ARS ) / Min( RRS ,ARS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( CS + ( ( DS + MUM ) + CS ) ) * DS ) )", "obj1": 0.850597609561753, "obj2": 0.05679229436668162}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9063745019920318, "obj2": 0.04575518704636498}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13147410358565736, "obj2": 0.7479289168627734}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - Min( Max( MUC,DS ) ,MUC ) ) - RCSe ) / DS ) )", "obj1": 0.40039840637450197, "obj2": 0.42104029696782264}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6792828685258964, "obj2": 0.16322948111818283}, {"determining": "Max( Min( Min( Const ,FirstVNF_RAM ) ,MRS ),( DDR - Min( ACS ,Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( ( ( Min( CS ,RCSe ) * RCSe ) - MLU ) / ( ( ( CS * RCSe ) - RMSe ) - RCSe ) )", "obj1": 0.28286852589641437, "obj2": 0.6067604769525692}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),Min( AMS ,( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / CS ) )", "obj1": 0.1254980079681275, "obj2": 0.7948622381550962}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + ACS ) ) * ( ( Const * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR * RRSe ) * ( MUM - MUM ) )", "obj1": 0.647410358565737, "obj2": 0.19909288909508865}, {"determining": "( ( ( ( Const + ( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( MUC ,Min( ( MUC * MUM ) ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.8047808764940239, "obj2": 0.07303557805152888}, {"determining": "( ( ( ( Const + AMS ) * ( FirstVNF_Mem_Server + PN ) ) * MDR ) + ( Max( ( Const + ( ARS * ( ( ARS * ACS ) - Const ) ) ),( FirstVNF_Mem_Server / PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,MLU ) * ( MUC - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( CS - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / MUC ) ) / ( RCSe + ( RCSe + MUM ) ) ) - MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.364637837934396}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4601593625498008, "obj2": 0.35009636367173513}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( RCSe + ( Min( Max( MUC,Min( DS ,DS ) ) ,RRSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.26693227091633465, "obj2": 0.6285756420094755}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( DDR * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( ACS ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( RRSe - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,DS ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.7828685258964143, "obj2": 0.0875145016126052}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.40239043824701193, "obj2": 0.3926394909296691}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR - RMSe ) * ( RRSe - MLU ) )", "obj1": 0.5537848605577689, "obj2": 0.2822361223168181}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( BR * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( ( Min( DS ,DS ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7272167320111165}, {"determining": "( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( DS / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.7111553784860558, "obj2": 0.14297538625858483}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.6274900398406374, "obj2": 0.2131665432924129}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5557768924302788, "obj2": 0.26675114146238565}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6972111553784861, "obj2": 0.15484710279986746}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( Max( MUC,( ( RCSe - DS ) - RCSe ) ) ,RRSe ) * ( ( RCSe / Min( Max( RRSe,MUM ) ,( RRSe / ( Min( Max( MUC,DS ) ,MUC ) * ( RRSe - MUC ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5856168644747428}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( DDR - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 0.2051792828685259, "obj2": 0.6854951972356035}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.8466135458167331, "obj2": 0.06346204722362665}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( RRS - ( ( Min( AMS ,ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( ( MUM * DS ) * MLU ) / Min( ( ( ( RCSe - RCSe ) - RCSe ) - RCSe ) ,DS ) )", "obj1": 0.3844621513944223, "obj2": 0.43844154441667427}, {"determining": "( ( ( ( PN - Const ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( ( ( CS - DS ) - RCSe ) / DS ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.7450199203187251, "obj2": 0.11044278529870993}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( CS - DS ) - MUM ) / DS ) )", "obj1": 0.7589641434262948, "obj2": 0.09699128007583743}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Min( ( ( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / AMS ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem_Server ) ) ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ARS ) - Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( ( MUM * DS ) ,MLU ) / ( ( ( ( RCSe - RCSe ) - ( ( ( CS * RCSe ) - DS ) - RCSe ) ) - RCSe ) / DS ) )", "obj1": 0.7350597609561753, "obj2": 0.1384854043289018}, {"determining": "( ( Const + AMS ) * Min( ( ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( CS * RCSe ) - RMSe ) - RCSe ) )", "obj1": 0.44621513944223107, "obj2": 0.3540318023073882}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( BR * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( RCSe + ( Min( Max( MUC,DS ) ,RRSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.06947569614353644}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( MUC + ( ( MUR * RMSe ) * ( RRSe - MUC ) ) ) ) )", "obj1": 0.954183266932271, "obj2": 0.022664684450299743}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( Min( FirstVNF_Mem_Server ,PN ) * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RCSe ) - RCSe ) / DS ) )", "obj1": 0.38645418326693226, "obj2": 0.4313919086919192}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( ( CS * RRSe ) - ( MUR * RMSe ) ) - RCSe ) / DS ) )", "obj1": 0.2051792828685259, "obj2": 0.6854951972356035}], "22": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,ARS ) ) * PN ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( FirstVNF_RAM_Server ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Min( MUM ,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( ( Min( DS ,DS ) / MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + ACS ) ) * ( ( Const * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR * RRSe ) * ( MUM - MUM ) )", "obj1": 0.647410358565737, "obj2": 0.19909288909508865}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,RRSe ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.5065119697299109}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.40239043824701193, "obj2": 0.3926394909296691}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( DS - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5722178247721833}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) + ( Const - RRS ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1952191235059761, "obj2": 0.679174940942324}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( Const,RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RRSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "( ( ( ( Const + AMS ) * ( FirstVNF_Mem_Server + PN ) ) * MDR ) + ( Max( ( Const + ( ARS * ( ( ARS * ACS ) - Const ) ) ),( FirstVNF_Mem_Server / PN ) ) - RRS ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,MLU ) * ( MUC - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( CS - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / MUC ) ) / ( RCSe + ( RCSe + MUM ) ) ) - MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.364637837934396}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( Min( PN ,Const ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10956175298804781, "obj2": 0.8097683882688179}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.601593625498008, "obj2": 0.22825679326496412}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6792828685258964, "obj2": 0.16322948111818283}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.9482071713147411, "obj2": 0.020367604927731747}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9063745019920318, "obj2": 0.04575518704636498}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.6274900398406374, "obj2": 0.2131665432924129}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5816733067729084, "obj2": 0.24691891677783145}, {"determining": "( ( Const + Min( ( Const / FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( PN * FirstVNF_Mem_Server ) + PN ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( RMSe + ( ( MUC * MUM ) + CS ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * Max( Min( MLU ,MLU ),( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.9880478087649402, "obj2": 0.004500368976955821}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.17131474103585656, "obj2": 0.7071489832880306}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( BR * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( ( Min( DS ,DS ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7272167320111165}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.8685258964143426, "obj2": 0.04961885474433369}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - Min( Max( MUC,DS ) ,MUC ) ) - RCSe ) / DS ) )", "obj1": 0.40039840637450197, "obj2": 0.42104029696782264}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.250996015936255, "obj2": 0.6337190674619403}, {"determining": "( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( MUC + ( ( MUR * RMSe ) * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.1340178551051578}, {"determining": "( AMS + ( PN - ( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUM ) / ( ( ( ( CS * ( ( CS * RCSe ) - DS ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7122966211153249}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + MUR ) ) * DS ) )", "obj1": 0.4860557768924303, "obj2": 0.31890273114347295}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( MDR ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( Min( DS ,DS ) - RCSe ) / DS ) )", "obj1": 0.9223107569721115, "obj2": 0.027735918639504586}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( RRS - ( ( Min( AMS ,ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( ( MUM * DS ) * MLU ) / Min( ( ( ( RCSe - RCSe ) - RCSe ) - RCSe ) ,DS ) )", "obj1": 0.7430278884462151, "obj2": 0.11447181033212452}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13147410358565736, "obj2": 0.7479289168627734}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6972111553784861, "obj2": 0.15484710279986746}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5637450199203188, "obj2": 0.2620457206778329}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.5059760956175299, "obj2": 0.2962138056302022}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( BR * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( RCSe + ( Min( Max( MUC,DS ) ,RRSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.8147410358565738, "obj2": 0.06947569614353644}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( AMS ,ARS ) / Min( RRS ,ARS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - BR ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) ) ,MUM ) / ( ( CS + ( ( DS + MUM ) + CS ) ) - DS ) )", "obj1": 0.8366533864541833, "obj2": 0.0643296738666324}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4601593625498008, "obj2": 0.35009636367173513}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( CS - DS ) - MUM ) / DS ) )", "obj1": 0.7589641434262948, "obj2": 0.09699128007583743}, {"determining": "( ( Const + AMS ) * Min( ( ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( ( ( CS * RCSe ) * RCSe ) / MLU ) / ( ( ( CS * RCSe ) - RMSe ) - RCSe ) )", "obj1": 0.44621513944223107, "obj2": 0.3540318023073882}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR - RMSe ) * ( RRSe - MLU ) )", "obj1": 0.5537848605577689, "obj2": 0.2822361223168181}, {"determining": "( ( ( ( PN - Const ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( ( ( CS - DS ) - RCSe ) / DS ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.7450199203187251, "obj2": 0.11044278529870993}, {"determining": "Max( Min( Min( Const ,FirstVNF_RAM ) ,MRS ),( DDR - Min( ACS ,Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( ( ( Min( CS ,RCSe ) * RCSe ) - MLU ) / ( ( ( CS * RCSe ) - RMSe ) - RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.5932760634681382}, {"determining": "( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( DS / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.7111553784860558, "obj2": 0.14297538625858483}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( Max( MUR,( Min( Max( MUC,DS ) ,MLU ) * ( MUC - MUC ) ) ) ,RRSe ) * ( ( ( Min( ( DS * ( ( CS - MUR ) / ( MUR - RMSe ) ) ) ,MLU ) / ( ( ( ( CS * RRSe ) - DS ) - RCSe ) / MUC ) ) / ( RCSe + ( RCSe + MUM ) ) ) - MUC ) )", "obj1": 0.9322709163346613, "obj2": 0.025602873002710073}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.36852589641434264, "obj2": 0.43890501478751187}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( RCSe + ( Min( Max( MUC,Min( DS ,DS ) ) ,RRSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.6048299156698437}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5557768924302788, "obj2": 0.2624626851304825}], "23": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( Max( ( ( ( ( Max( PN,AMS ) + ( DDR / MDR ) ) + ( ( RRS * MRS ) + Max( CRS,FirstVNF_CPU ) ) ) - Min( ( ( PN + FirstVNF_Mem_Server ) * ( DDR * RRS ) ) ,( Min( BR ,FirstVNF_Mem_Server ) - ( MRS * CRS ) ) ) ) + ( ( ( Min( MRS ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,DDR ) ) + Max( ( MRS - FirstVNF_RAM ),( DDR - FirstVNF_Mem_Server ) ) ) / Min( ( Min( FirstVNF_Mem ,PN ) * Max( ARS,MRS ) ) ,( ( FirstVNF_CPU_Server / AMS ) + ( PN * DDR ) ) ) ) ),( ( ( Min( ( MRS / DDR ) ,Min( Const ,FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,MDR ) * ( BR - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( CRS / FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( DDR * FirstVNF_RAM_Server ) ) ) ) / Min( Min( ( Min( CRS ,PN ) * ( DDR / MRS ) ) ,( ( FirstVNF_RAM_Server - Const ) / ( ARS - FirstVNF_CPU ) ) ) ,Min( Min( ( CRS / DDR ) ,( MRS - ACS ) ) ,( ( BR - Const ) - ( BR / RRS ) ) ) ) ) ) / ( ( ( ( Max( ( CRS * BR ),( PN - ARS ) ) / ( ( CRS + FirstVNF_RAM_Server ) - ( BR - Const ) ) ) * ( Max( ( ARS - AMS ),( ACS * MDR ) ) - ( Min( BR ,BR ) - ( MDR / RRS ) ) ) ) + Max( ( ( ( PN * ARS ) / ( FirstVNF_RAM_Server - MDR ) ) / ( Min( DDR ,FirstVNF_CPU_Server ) - ( RRS * MDR ) ) ),( ( ( MDR / BR ) - ( MDR + PN ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( Min( Min( DDR ,MDR ) ,Max( FirstVNF_CPU_Server,PN ) ) * ( Max( FirstVNF_RAM,BR ) / Min( FirstVNF_RAM ,ACS ) ) ) + Max( Max( ( Const * FirstVNF_CPU_Server ),( Const * FirstVNF_RAM_Server ) ),( ( RRS / FirstVNF_CPU ) - ( FirstVNF_RAM_Server + Const ) ) ) ) + ( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( FirstVNF_Mem_Server - ACS ) ) - ( ( FirstVNF_Mem_Server * CRS ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) / ( ( ( FirstVNF_RAM - Const ) - ( MDR / DDR ) ) * ( Min( MRS ,FirstVNF_RAM_Server ) - ( PN * ACS ) ) ) ) ) ) ) - Max( ( Max( ( ( ( Max( ARS,PN ) - ( MDR - MRS ) ) + ( ( FirstVNF_RAM / CRS ) - ( MDR * DDR ) ) ) * ( ( Max( MDR,MRS ) + Min( FirstVNF_CPU ,BR ) ) - ( ( CRS / MDR ) * ( FirstVNF_Mem_Server / BR ) ) ) ),( ( ( Min( MDR ,DDR ) + Min( FirstVNF_Mem_Server ,MDR ) ) + ( ( RRS / RRS ) / Min( MDR ,BR ) ) ) * Min( ( Min( MRS ,PN ) * ( MRS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM / AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) + ( Min( ( ( ( Const + CRS ) * ( MDR * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server / DDR ) + ( MRS - FirstVNF_CPU ) ) ) ,( ( Min( PN ,MDR ) + ( FirstVNF_CPU_Server / CRS ) ) + Min( Max( FirstVNF_CPU,MDR ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) - ( Min( Min( ( BR + FirstVNF_RAM ) ,( FirstVNF_CPU - Const ) ) ,( ( Const - DDR ) / Max( ACS,FirstVNF_RAM_Server ) ) ) - ( ( ( Const / CRS ) * ( ARS / FirstVNF_CPU ) ) / ( Min( Const ,FirstVNF_CPU ) * ( RRS + ACS ) ) ) ) ) ),Max( Max( Max( ( ( Min( ACS ,ACS ) * Min( FirstVNF_CPU_Server ,BR ) ) * Max( Min( MRS ,CRS ),( MDR * FirstVNF_Mem_Server ) ) ),( ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM / MRS ) ) * ( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_CPU + CRS ) ) ) ),Max( ( ( ( MDR + FirstVNF_Mem ) + Min( ACS ,ARS ) ) - Min( Max( DDR,FirstVNF_Mem ) ,( AMS * AMS ) ) ),( Max( ( CRS + FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) + ( Max( MDR,BR ) * Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem_Server / CRS ),( CRS - MRS ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( CRS * PN ) ) ) * ( Max( Min( MRS ,BR ),( PN - FirstVNF_CPU_Server ) ) + ( ( ARS + ARS ) / ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / Min( PN ,PN ) ) / ( ( FirstVNF_CPU_Server - PN ) * ( CRS + FirstVNF_CPU ) ) ) / Max( Min( ( FirstVNF_RAM / RRS ) ,( FirstVNF_RAM_Server - ACS ) ),( ( MRS * RRS ) + ( MRS - RRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( ( Min( DS ,DS ) / MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / ( DS - RCSe ) ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.3047808764940239, "obj2": 0.5722178247721833}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) + ( Const - MDR ) ) * ( FirstVNF_CPU_Server / Max( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( Min( DS ,RRSe ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.5065119697299109}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( Const,RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RRSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( Min( PN ,Const ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10956175298804781, "obj2": 0.8097683882688179}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + ACS ) ) * ( ( Const * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR * RRSe ) * ( MUM - MUM ) )", "obj1": 0.647410358565737, "obj2": 0.19909288909508865}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( CS - DS ) - MUM ) / DS ) )", "obj1": 0.7589641434262948, "obj2": 0.09699128007583743}, {"determining": "( ( Const + AMS ) * Min( ( ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS / ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.3844621513944223, "obj2": 0.4358613915592733}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}, {"determining": "( Min( Const ,AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,DS ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6752988047808764, "obj2": 0.16843270540338995}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.250996015936255, "obj2": 0.6337190674619403}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( ( Const + ( ARS * ( ( BR * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7948207171314741, "obj2": 0.08120195657382413}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( Min( ( ( CS * RCSe ) - DS ) ,RCSe ) / DS ) )", "obj1": 0.398406374501992, "obj2": 0.3970667033026613}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) * ( ( ARS + ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR / RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5338645418326693, "obj2": 0.2906953265934025}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( ( CS * RCSe ) + ( ( Max( MUC,Min( DS ,DS ) ) - RRSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.27091633466135456, "obj2": 0.600900962614186}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.8685258964143426, "obj2": 0.04961885474433369}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.9482071713147411, "obj2": 0.020367604927731747}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6972111553784861, "obj2": 0.15484710279986746}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.5059760956175299, "obj2": 0.2962138056302022}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR - RMSe ) * ( RRSe - MLU ) )", "obj1": 0.5537848605577689, "obj2": 0.2822361223168181}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9063745019920318, "obj2": 0.04575518704636498}, {"determining": "Max( Min( Min( Const ,FirstVNF_RAM ) ,MRS ),( DDR - Min( ACS ,Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( ( ( Min( CS ,RCSe ) * RCSe ) - MLU ) / ( ( ( CS * RCSe ) - RMSe ) - RCSe ) )", "obj1": 0.2868525896414343, "obj2": 0.5932760634681382}, {"determining": "( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( DS / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.7111553784860558, "obj2": 0.14297538625858483}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1952191235059761, "obj2": 0.679174940942324}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13147410358565736, "obj2": 0.7479289168627734}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4960159362549801, "obj2": 0.3049619729876633}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( AMS ,ARS ) / Min( RRS ,ARS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - BR ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - ( ( RMSe + ( ( MUC * MUM ) + CS ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * Max( Min( MLU ,MLU ),( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.8585657370517928, "obj2": 0.054717866594420586}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) + ( Const - RRS ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2410358565737052, "obj2": 0.6338393136215514}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( BR * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( ( Min( DS ,DS ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1394422310756972, "obj2": 0.7272167320111165}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) + ( Const - RRS ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1952191235059761, "obj2": 0.679174940942324}, {"determining": "( ( Const + Min( ( Const / FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( PN * FirstVNF_Mem_Server ) + PN ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( ( ( DS * RRSe ) * MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) ) ,MUM ) / ( ( CS + ( ( DS + MUM ) + CS ) ) - DS ) )", "obj1": 0.9721115537848606, "obj2": 0.011457958984139474}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.40239043824701193, "obj2": 0.3926394909296691}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6135458167330677, "obj2": 0.2195579541344839}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.17131474103585656, "obj2": 0.7071489832880306}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4601593625498008, "obj2": 0.35009636367173513}, {"determining": "( Min( Const ,AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( MDR ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( Min( DS ,MUR ) - RCSe ) / DS ) )", "obj1": 0.9223107569721115, "obj2": 0.02773591863950458}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ( MDR + ( ( ( PN * FirstVNF_Mem_Server ) + PN ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( ( MUR - ( ( RMSe + ( ( MUC * MUM ) + CS ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * Max( Min( MLU ,MLU ),( MUC / RRSe ) ) ) ) ) + ( ( MUC * MUM ) + DS ) ) * DS ) )", "obj1": 0.9103585657370518, "obj2": 0.04164219466803795}, {"determining": "( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.6354581673306773, "obj2": 0.20731672839335497}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + MUR ) ) * DS ) )", "obj1": 0.5717131474103586, "obj2": 0.24823631035327137}, {"determining": "( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR + MUM ) / ( RMSe + ( MUC + ( ( MUR * RMSe ) * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7231075697211156, "obj2": 0.1340178551051578}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5557768924302788, "obj2": 0.2624626851304825}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( AMS ,ARS ) / MDR ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM - AMS ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RRSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) ) ,MUM ) / ( ( CS + ( ( DS + MUM ) + CS ) ) * DS ) )", "obj1": 0.8386454183266933, "obj2": 0.06309573831393857}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.601593625498008, "obj2": 0.22825679326496412}], "24": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( ( Max( PN,AMS ) + ( DDR / MDR ) ) + ( ( RRS * MRS ) + Max( CRS,FirstVNF_CPU ) ) ) - Min( ( ( PN + FirstVNF_Mem_Server ) * ( DDR * RRS ) ) ,( Min( BR ,FirstVNF_Mem_Server ) - ( MRS * CRS ) ) ) ) + ( ( ( Min( MRS ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,DDR ) ) + Max( ( MRS - FirstVNF_RAM ),( DDR - FirstVNF_Mem_Server ) ) ) / Min( ( Min( FirstVNF_Mem ,PN ) * Max( ARS,MRS ) ) ,( ( FirstVNF_CPU_Server / AMS ) + ( PN * DDR ) ) ) ) ),( ( ( Min( ( MRS / DDR ) ,Min( Const ,FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,MDR ) * ( BR - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( CRS / FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( DDR * FirstVNF_RAM_Server ) ) ) ) / Min( Min( ( Min( CRS ,PN ) * ( DDR / MRS ) ) ,( ( FirstVNF_RAM_Server - Const ) / ( ARS - FirstVNF_CPU ) ) ) ,Min( Min( ( CRS / DDR ) ,( MRS - ACS ) ) ,( ( BR - Const ) - ( BR / RRS ) ) ) ) ) ) / ( ( ( ( Max( ( CRS * BR ),( PN - ARS ) ) / ( ( CRS + FirstVNF_RAM_Server ) - ( BR - Const ) ) ) * ( Max( ( ARS - AMS ),( ACS * MDR ) ) - ( Min( BR ,BR ) - ( MDR / RRS ) ) ) ) + Max( ( ( ( PN * ARS ) / ( FirstVNF_RAM_Server - MDR ) ) / ( Min( DDR ,FirstVNF_CPU_Server ) - ( RRS * MDR ) ) ),( ( ( MDR / BR ) - ( MDR + PN ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( Min( Min( DDR ,MDR ) ,Max( FirstVNF_CPU_Server,PN ) ) * ( Max( FirstVNF_RAM,BR ) / Min( FirstVNF_RAM ,ACS ) ) ) + Max( Max( ( Const * FirstVNF_CPU_Server ),( Const * FirstVNF_RAM_Server ) ),( ( RRS / FirstVNF_CPU ) - ( FirstVNF_RAM_Server + Const ) ) ) ) + ( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( FirstVNF_Mem_Server - ACS ) ) - ( ( FirstVNF_Mem_Server * CRS ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) / ( ( ( FirstVNF_RAM - Const ) - ( MDR / DDR ) ) * ( Min( MRS ,FirstVNF_RAM_Server ) - ( PN * ACS ) ) ) ) ) ) ) - Max( ( Max( ( ( ( Max( ARS,PN ) - ( MDR - MRS ) ) + ( ( FirstVNF_RAM / CRS ) - ( MDR * DDR ) ) ) * ( ( Max( MDR,MRS ) + Min( FirstVNF_CPU ,BR ) ) - ( ( CRS / MDR ) * ( FirstVNF_Mem_Server / BR ) ) ) ),( ( ( Min( MDR ,DDR ) + Min( FirstVNF_Mem_Server ,MDR ) ) + ( ( RRS / RRS ) / Min( MDR ,BR ) ) ) * Min( ( Min( MRS ,PN ) * ( MRS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM / AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) + ( Min( ( ( ( Const + CRS ) * ( MDR * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server / DDR ) + ( MRS - FirstVNF_CPU ) ) ) ,( ( Min( PN ,MDR ) + ( FirstVNF_CPU_Server / CRS ) ) + Min( Max( FirstVNF_CPU,MDR ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) - ( Min( Min( ( BR + FirstVNF_RAM ) ,( FirstVNF_CPU - Const ) ) ,( ( Const - DDR ) / Max( ACS,FirstVNF_RAM_Server ) ) ) - ( ( ( Const / CRS ) * ( ARS / FirstVNF_CPU ) ) / ( Min( Const ,FirstVNF_CPU ) * ( RRS + ACS ) ) ) ) ) ),Max( Max( Max( ( ( Min( ACS ,ACS ) * Min( FirstVNF_CPU_Server ,BR ) ) * Max( Min( MRS ,CRS ),( MDR * FirstVNF_Mem_Server ) ) ),( ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM / MRS ) ) * ( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_CPU + CRS ) ) ) ),Max( ( ( ( MDR + FirstVNF_Mem ) + Min( ACS ,ARS ) ) - Min( Max( DDR,FirstVNF_Mem ) ,( AMS * AMS ) ) ),( Max( ( CRS + FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) + ( Max( MDR,BR ) * Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem_Server / CRS ),( CRS - MRS ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( CRS * PN ) ) ) * ( Max( Min( MRS ,BR ),( PN - FirstVNF_CPU_Server ) ) + ( ( ARS + ARS ) / ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / Min( PN ,PN ) ) / ( ( FirstVNF_CPU_Server - PN ) * ( CRS + FirstVNF_CPU ) ) ) / Max( Min( ( FirstVNF_RAM / RRS ) ,( FirstVNF_RAM_Server - ACS ) ),( ( MRS * RRS ) + ( MRS - RRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( ( Min( DS ,DS ) / MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10756972111553785, "obj2": 0.8167133325663692}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( ( ( CS * RCSe ) - RRSe ) - RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.3047808764940239, "obj2": 0.5680059391449636}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.3346613545816733, "obj2": 0.504417255765423}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * ( ( AMS * FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( Min( DS ,DS ) / MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.3844621513944223, "obj2": 0.43147374953195117}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( Const,RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RRSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( CS - DS ) - MUM ) / DS ) )", "obj1": 0.7589641434262948, "obj2": 0.09699128007583743}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( Min( PN ,Const ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10956175298804781, "obj2": 0.8097683882688179}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( ( Const + ( ARS * ( ( BR * ACS ) - PN ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7948207171314741, "obj2": 0.08120195657382413}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) * ( ( ARS + ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR / RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5338645418326693, "obj2": 0.2906953265934025}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - PN ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUC ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6613545816733067, "obj2": 0.18900410841942678}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - RMSe ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.7231075697211156, "obj2": 0.13384389555217793}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( MUC ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.4601593625498008, "obj2": 0.35009636367173513}, {"determining": "( Min( Const ,AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,DS ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6752988047808764, "obj2": 0.16843270540338995}, {"determining": "Max( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * MUR ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.17330677290836655, "obj2": 0.7032572070052121}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUR - RMSe ) * ( RRSe - MLU ) )", "obj1": 0.5537848605577689, "obj2": 0.2822361223168181}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.41832669322709165, "obj2": 0.37578505120365735}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5896414342629482, "obj2": 0.2356657917043602}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + ACS ) ) * ( ( Const * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR * RRSe ) * ( MUM - MUM ) )", "obj1": 0.647410358565737, "obj2": 0.19909288909508865}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6972111553784861, "obj2": 0.15484710279986746}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ( MDR + ( ( FirstVNF_Mem_Server + PN ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) ) ,MUM ) / ( ( ( MUR - ( ( RMSe + ( ( MUC * MUM ) + CS ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * Max( Min( MLU ,MLU ),( MUC / RRSe ) ) ) ) ) + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7430278884462151, "obj2": 0.11456033905485691}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.9482071713147411, "obj2": 0.020367604927731747}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,FirstVNF_Mem ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.8685258964143426, "obj2": 0.04961885474433369}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4681274900398406, "obj2": 0.3286637712284724}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) ) ) ) )", "choosing": "( Min( ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2868525896414343, "obj2": 0.584208017222377}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9063745019920318, "obj2": 0.04575518704636498}, {"determining": "( Min( Const ,Min( ( Const / FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( AMS * ACS ) * Min( FirstVNF_Mem_Server ,PN ) ) + MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( DS / ( ( CS - ( ( DS + MUM ) - CS ) ) - DS ) )", "obj1": 0.8227091633466136, "obj2": 0.07314966449030157}, {"determining": "( ( ( ( Const + AMS ) * ( MDR / PN ) ) - MRS ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( ( DS * DS ) - CS ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.398406374501992, "obj2": 0.3970667033026613}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + MUR ) ) * DS ) )", "obj1": 0.5717131474103586, "obj2": 0.24823631035327137}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + ( ( ( Const + FirstVNF_RAM ) * Min( MDR ,PN ) ) - MDR ) ),MDR ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / RCSe ) ,Min( CS ,MUC ) ) * ( RRSe - MUC ) )", "obj1": 0.26095617529880477, "obj2": 0.6165261892925484}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( FirstVNF_CPU - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Min( ( Const - FirstVNF_RAM ) ,MRS ) + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / RMSe ) )", "obj1": 0.14741035856573706, "obj2": 0.720025972278833}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.4402390438247012, "obj2": 0.3533009596537493}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) * MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - MUC ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7097918241911105}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( FirstVNF_Mem,AMS ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.4800796812749004, "obj2": 0.31329515173478845}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) - RRS ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC + MUM ) + CS ) ) * DS ) )", "obj1": 0.6852589641434262, "obj2": 0.16077092586211164}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( Const * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_RAM_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) - RMSe ) - MUM ) / DS ) )", "obj1": 0.7450199203187251, "obj2": 0.11290659771999614}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5557768924302788, "obj2": 0.2624626851304825}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.40836653386454186, "obj2": 0.38773042954625125}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) + ( Const - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.2350597609561753, "obj2": 0.6467913184856836}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.5059760956175299, "obj2": 0.2962138056302022}, {"determining": "( ( Const + Min( ( Const / FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( PN * FirstVNF_Mem_Server ) + PN ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( ( ( DS * RRSe ) * MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) ) ,MUM ) / ( ( CS + ( ( DS + MUM ) + CS ) ) - DS ) )", "obj1": 0.9721115537848606, "obj2": 0.011457958984139474}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( ( CS * RCSe ) + ( ( Max( MUC,Min( DS ,DS ) ) - RRSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.27091633466135456, "obj2": 0.600900962614186}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * MDR ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - Min( ( DS * RRSe ) ,MLU ) ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.9900398406374502, "obj2": 0.0034925619708874385}, {"determining": "( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( DS / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.7111553784860558, "obj2": 0.14297538625858483}], "25": [{"determining": "( ( Max( ( ( ( ( Max( PN,AMS ) + ( DDR / MDR ) ) + ( ( RRS * MRS ) + Max( CRS,FirstVNF_CPU ) ) ) - Min( ( ( PN + FirstVNF_Mem_Server ) * ( DDR * RRS ) ) ,( Min( BR ,FirstVNF_Mem_Server ) - ( MRS * CRS ) ) ) ) + ( ( ( Min( MRS ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,DDR ) ) + Max( ( MRS - FirstVNF_RAM ),( DDR - FirstVNF_Mem_Server ) ) ) / Min( ( Min( FirstVNF_Mem ,PN ) * Max( ARS,MRS ) ) ,( ( FirstVNF_CPU_Server / AMS ) + ( PN * DDR ) ) ) ) ),( ( ( Min( ( MRS / DDR ) ,Min( Const ,FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,MDR ) * ( BR - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( CRS / FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( DDR * FirstVNF_RAM_Server ) ) ) ) / Min( Min( ( Min( CRS ,PN ) * ( DDR / MRS ) ) ,( ( FirstVNF_RAM_Server - Const ) / ( ARS - FirstVNF_CPU ) ) ) ,Min( Min( ( CRS / DDR ) ,( MRS - ACS ) ) ,( ( BR - Const ) - ( BR / RRS ) ) ) ) ) ) / ( ( ( ( Max( ( CRS * BR ),( PN - ARS ) ) / ( ( CRS + FirstVNF_RAM_Server ) - ( BR - Const ) ) ) * ( Max( ( ARS - AMS ),( ACS * MDR ) ) - ( Min( BR ,BR ) - ( MDR / RRS ) ) ) ) + Max( ( ( ( PN * ARS ) / ( FirstVNF_RAM_Server - MDR ) ) / ( Min( DDR ,FirstVNF_CPU_Server ) - ( RRS * MDR ) ) ),( ( ( MDR / BR ) - ( MDR + PN ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( Min( Min( DDR ,MDR ) ,Max( FirstVNF_CPU_Server,PN ) ) * ( Max( FirstVNF_RAM,BR ) / Min( FirstVNF_RAM ,ACS ) ) ) + Max( Max( ( Const * FirstVNF_CPU_Server ),( Const * FirstVNF_RAM_Server ) ),( ( RRS / FirstVNF_CPU ) - ( FirstVNF_RAM_Server + Const ) ) ) ) + ( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( FirstVNF_Mem_Server - ACS ) ) - ( ( FirstVNF_Mem_Server * CRS ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) / ( ( ( FirstVNF_RAM - Const ) - ( MDR / DDR ) ) * ( Min( MRS ,FirstVNF_RAM_Server ) - ( PN * ACS ) ) ) ) ) ) ) - Max( ( Max( ( ( ( Max( ARS,PN ) - ( MDR - MRS ) ) + ( ( FirstVNF_RAM / CRS ) - ( MDR * DDR ) ) ) * ( ( Max( MDR,MRS ) + Min( FirstVNF_CPU ,BR ) ) - ( ( CRS / MDR ) * ( FirstVNF_Mem_Server / BR ) ) ) ),( ( ( Min( MDR ,DDR ) + Min( FirstVNF_Mem_Server ,MDR ) ) + ( ( RRS / RRS ) / Min( MDR ,BR ) ) ) * Min( ( Min( MRS ,PN ) * ( MRS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM / AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) + ( Min( ( ( ( Const + CRS ) * ( MDR * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server / DDR ) + ( MRS - FirstVNF_CPU ) ) ) ,( ( Min( PN ,MDR ) + ( FirstVNF_CPU_Server / CRS ) ) + Min( Max( FirstVNF_CPU,MDR ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) - ( Min( Min( ( BR + FirstVNF_RAM ) ,( FirstVNF_CPU - Const ) ) ,( ( Const - DDR ) / Max( ACS,FirstVNF_RAM_Server ) ) ) - ( ( ( Const / CRS ) * ( ARS / FirstVNF_CPU ) ) / ( Min( Const ,FirstVNF_CPU ) * ( RRS + ACS ) ) ) ) ) ),Max( Max( Max( ( ( Min( ACS ,ACS ) * Min( FirstVNF_CPU_Server ,BR ) ) * Max( Min( MRS ,CRS ),( MDR * FirstVNF_Mem_Server ) ) ),( ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM / MRS ) ) * ( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_CPU + CRS ) ) ) ),Max( ( ( ( MDR + FirstVNF_Mem ) + Min( ACS ,ARS ) ) - Min( Max( DDR,FirstVNF_Mem ) ,( AMS * AMS ) ) ),( Max( ( CRS + FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) + ( Max( MDR,BR ) * Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem_Server / CRS ),( CRS - MRS ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( CRS * PN ) ) ) * ( Max( Min( MRS ,BR ),( PN - FirstVNF_CPU_Server ) ) + ( ( ARS + ARS ) / ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / Min( PN ,PN ) ) / ( ( FirstVNF_CPU_Server - PN ) * ( CRS + FirstVNF_CPU ) ) ) / Max( Min( ( FirstVNF_RAM / RRS ) ,( FirstVNF_RAM_Server - ACS ) ),( ( MRS * RRS ) + ( MRS - RRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( Const,RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RRSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.3346613545816733, "obj2": 0.504417255765423}, {"determining": "( ( Const + Min( ( Const / FirstVNF_RAM ) ,PN ) ) * Min( ( ( ( AMS * ACS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( DS / ( ( CS + ( ( DS + Min( DS ,MUM ) ) + CS ) ) - DS ) )", "obj1": 0.8167330677290837, "obj2": 0.07106390717631962}, {"determining": "( FirstVNF_CPU / Min( ( ( ( ( FirstVNF_Mem_Server * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6394422310756972, "obj2": 0.22457415198642874}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( FirstVNF_CPU - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Min( ( Const - FirstVNF_RAM ) ,MRS ) + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / RMSe ) )", "obj1": 0.14741035856573706, "obj2": 0.720025972278833}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.25298804780876494, "obj2": 0.5988766143509004}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * ( ( AMS * FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( Min( DS ,DS ) / MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.3844621513944223, "obj2": 0.43147374953195117}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.24302788844621515, "obj2": 0.63274466780791}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,MRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( MUC * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( PN + PN ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( Min( CS ,RRSe ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5403309032265967}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5896414342629482, "obj2": 0.2356657917043602}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( Min( PN ,Const ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10956175298804781, "obj2": 0.8097683882688179}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.8685258964143426, "obj2": 0.04961885474433369}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,( ARS * ACS ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.199203187250996, "obj2": 0.6836092000960784}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / RCSe ) ,Min( CS ,MUC ) ) * ( MUR - RMSe ) )", "obj1": 0.3047808764940239, "obj2": 0.5620275144153049}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,FirstVNF_Mem ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.8685258964143426, "obj2": 0.04961885474433369}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( ( RRSe + MUM ) / ( RMSe + ( ( CS * RCSe ) + ( Min( Max( MUC,Min( DS ,DS ) ) ,RRSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.4601593625498008, "obj2": 0.3455903691839506}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.3745019920318725, "obj2": 0.447372924951603}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6553784860557769, "obj2": 0.18785758808437034}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) * ( ( ARS + ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR / RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5338645418326693, "obj2": 0.2906953265934025}, {"determining": "( FirstVNF_CPU / ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( ( MUC * MUM ) - DS ) + CS ) ) * DS ) )", "obj1": 0.2848605577689243, "obj2": 0.5939075962766303}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( CS - DS ) - MUM ) / DS ) )", "obj1": 0.7589641434262948, "obj2": 0.09699128007583743}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - FirstVNF_CPU_Server ) ) ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,DS ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.18725099601593626, "obj2": 0.6926616220037057}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + MUR ) ) * DS ) )", "obj1": 0.5717131474103586, "obj2": 0.24823631035327137}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( CS - DS ) - MUM ) / DS ) )", "obj1": 0.6434262948207171, "obj2": 0.1997803115237085}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.4402390438247012, "obj2": 0.3533009596537493}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.9482071713147411, "obj2": 0.020367604927731747}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6972111553784861, "obj2": 0.15484710279986746}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9063745019920318, "obj2": 0.04575518704636498}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( Max( MUR,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5438247011952191, "obj2": 0.2849896534274961}, {"determining": "Max( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * MUR ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.17330677290836655, "obj2": 0.7032572070052121}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) * MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - MUC ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7097918241911105}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( Min( ( Const + FirstVNF_RAM ) ,MRS ) ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( RRS + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( ( ( CS * DS ) - RRSe ) - RCSe ) ) - CS ) - RCSe ) / DS ) )", "obj1": 0.30278884462151395, "obj2": 0.5834006274076373}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.398406374501992, "obj2": 0.3970667033026613}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( Const * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) - Min( CS ,MUC ) ) - MUM ) / DS ) )", "obj1": 0.7290836653386454, "obj2": 0.13107053302881613}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - RMSe ) - RCSe ) * Max( MUM,DS ) ) ) - ( CS * ( CS * RCSe ) ) ) ) + ( CS + MLU ) )", "obj1": 0.796812749003984, "obj2": 0.07879837911764222}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( Const * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08966799363674921}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5517928286852589, "obj2": 0.26624273203382626}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ( MDR + ( ( FirstVNF_Mem_Server + PN ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) ) ,MUM ) / ( ( ( MUR - ( ( RMSe + ( ( MUC * MUM ) + CS ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * Max( Min( MLU ,MLU ),( MUC / RRSe ) ) ) ) ) + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7430278884462151, "obj2": 0.11456033905485691}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.5059760956175299, "obj2": 0.2962138056302022}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.41832669322709165, "obj2": 0.37578505120365735}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.9203187250996016, "obj2": 0.03906013535475479}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.4960159362549801, "obj2": 0.3107744326262961}], "26": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + MUR ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( ( Max( PN,AMS ) + ( DDR / MDR ) ) + ( ( RRS * MRS ) + Max( CRS,FirstVNF_CPU ) ) ) - Min( ( ( PN + FirstVNF_Mem_Server ) * ( DDR * RRS ) ) ,( Min( BR ,FirstVNF_Mem_Server ) - ( MRS * CRS ) ) ) ) + ( ( ( Min( MRS ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,DDR ) ) + Max( ( MRS - FirstVNF_RAM ),( DDR - FirstVNF_Mem_Server ) ) ) / Min( ( Min( FirstVNF_Mem ,PN ) * Max( ARS,MRS ) ) ,( ( FirstVNF_CPU_Server / AMS ) + ( PN * DDR ) ) ) ) ),( ( ( Min( ( MRS / DDR ) ,Min( Const ,FirstVNF_RAM ) ) * ( Min( FirstVNF_CPU_Server ,MDR ) * ( BR - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - ( CRS / FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + ( DDR * FirstVNF_RAM_Server ) ) ) ) / Min( Min( ( Min( CRS ,PN ) * ( DDR / MRS ) ) ,( ( FirstVNF_RAM_Server - Const ) / ( ARS - FirstVNF_CPU ) ) ) ,Min( Min( ( CRS / DDR ) ,( MRS - ACS ) ) ,( ( BR - Const ) - ( BR / RRS ) ) ) ) ) ) / ( ( ( ( Max( ( CRS * BR ),( PN - ARS ) ) / ( ( CRS + FirstVNF_RAM_Server ) - ( BR - Const ) ) ) * ( Max( ( ARS - AMS ),( ACS * MDR ) ) - ( Min( BR ,BR ) - ( MDR / RRS ) ) ) ) + Max( ( ( ( PN * ARS ) / ( FirstVNF_RAM_Server - MDR ) ) / ( Min( DDR ,FirstVNF_CPU_Server ) - ( RRS * MDR ) ) ),( ( ( MDR / BR ) - ( MDR + PN ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( Min( Min( DDR ,MDR ) ,Max( FirstVNF_CPU_Server,PN ) ) * ( Max( FirstVNF_RAM,BR ) / Min( FirstVNF_RAM ,ACS ) ) ) + Max( Max( ( Const * FirstVNF_CPU_Server ),( Const * FirstVNF_RAM_Server ) ),( ( RRS / FirstVNF_CPU ) - ( FirstVNF_RAM_Server + Const ) ) ) ) + ( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( FirstVNF_Mem_Server - ACS ) ) - ( ( FirstVNF_Mem_Server * CRS ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) / ( ( ( FirstVNF_RAM - Const ) - ( MDR / DDR ) ) * ( Min( MRS ,FirstVNF_RAM_Server ) - ( PN * ACS ) ) ) ) ) ) ) - Max( ( Max( ( ( ( Max( ARS,PN ) - ( MDR - MRS ) ) + ( ( FirstVNF_RAM / CRS ) - ( MDR * DDR ) ) ) * ( ( Max( MDR,MRS ) + Min( FirstVNF_CPU ,BR ) ) - ( ( CRS / MDR ) * ( FirstVNF_Mem_Server / BR ) ) ) ),( ( ( Min( MDR ,DDR ) + Min( FirstVNF_Mem_Server ,MDR ) ) + ( ( RRS / RRS ) / Min( MDR ,BR ) ) ) * Min( ( Min( MRS ,PN ) * ( MRS + FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM / AMS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) ) + ( Min( ( ( ( Const + CRS ) * ( MDR * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server / DDR ) + ( MRS - FirstVNF_CPU ) ) ) ,( ( Min( PN ,MDR ) + ( FirstVNF_CPU_Server / CRS ) ) + Min( Max( FirstVNF_CPU,MDR ) ,( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) - ( Min( Min( ( BR + FirstVNF_RAM ) ,( FirstVNF_CPU - Const ) ) ,( ( Const - DDR ) / Max( ACS,FirstVNF_RAM_Server ) ) ) - ( ( ( Const / CRS ) * ( ARS / FirstVNF_CPU ) ) / ( Min( Const ,FirstVNF_CPU ) * ( RRS + ACS ) ) ) ) ) ),Max( Max( Max( ( ( Min( ACS ,ACS ) * Min( FirstVNF_CPU_Server ,BR ) ) * Max( Min( MRS ,CRS ),( MDR * FirstVNF_Mem_Server ) ) ),( ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM / MRS ) ) * ( Max( FirstVNF_Mem_Server,MDR ) - ( FirstVNF_CPU + CRS ) ) ) ),Max( ( ( ( MDR + FirstVNF_Mem ) + Min( ACS ,ARS ) ) - Min( Max( DDR,FirstVNF_Mem ) ,( AMS * AMS ) ) ),( Max( ( CRS + FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + FirstVNF_RAM ) ) + ( Max( MDR,BR ) * Min( FirstVNF_CPU_Server ,DDR ) ) ) ) ),( ( ( Max( ( FirstVNF_Mem_Server / CRS ),( CRS - MRS ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( CRS * PN ) ) ) * ( Max( Min( MRS ,BR ),( PN - FirstVNF_CPU_Server ) ) + ( ( ARS + ARS ) / ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / Min( PN ,PN ) ) / ( ( FirstVNF_CPU_Server - PN ) * ( CRS + FirstVNF_CPU ) ) ) / Max( Min( ( FirstVNF_RAM / RRS ) ,( FirstVNF_RAM_Server - ACS ) ),( ( MRS * RRS ) + ( MRS - RRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,MUM ) ,( DS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( FirstVNF_CPU - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Min( ( Const - FirstVNF_RAM ) ,MRS ) + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / RMSe ) )", "obj1": 0.14741035856573706, "obj2": 0.720025972278833}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.24302788844621515, "obj2": 0.63274466780791}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.25298804780876494, "obj2": 0.5988766143509004}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6553784860557769, "obj2": 0.18785758808437034}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( CS - DS ) - MUM ) / DS ) )", "obj1": 0.6434262948207171, "obj2": 0.1997803115237085}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.48708534644816753}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6892430278884463, "obj2": 0.16480602963338623}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - Max( FirstVNF_Mem,AMS ) ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - MLU ) * DS ) ) ) / DS ) )", "obj1": 0.9940239043824701, "obj2": 0.0019928191342202845}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - RMSe ) - RCSe ) * Max( MUM,DS ) ) ) - ( CS * ( CS * RCSe ) ) ) ) + ( CS + MLU ) )", "obj1": 0.47410358565737054, "obj2": 0.34203583342319765}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * MUR ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.6115537848605578, "obj2": 0.2237698644682918}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( CS * ( CS * RCSe ) ) * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.8008564792791791}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.3346613545816733, "obj2": 0.504417255765423}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,( ARS * ACS ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.199203187250996, "obj2": 0.6836092000960784}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUR * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5896414342629482, "obj2": 0.2356657917043602}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9063745019920318, "obj2": 0.04575518704636498}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * CRS ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * CS ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5517928286852589, "obj2": 0.2659101169443949}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7191235059760956, "obj2": 0.13393137509555766}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.850597609561753, "obj2": 0.06137836049505297}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( MUC / RCSe ) ,Min( CS ,MUC ) ) * ( MUR - RMSe ) )", "obj1": 0.3047808764940239, "obj2": 0.5620275144153049}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( Const + Min( ( Const / FirstVNF_RAM ) ,PN ) ) * Min( ( ( ( AMS * ACS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( DS / ( ( CS + ( ( DS + Min( DS ,MUM ) ) + CS ) ) - DS ) )", "obj1": 0.8167330677290837, "obj2": 0.07106390717631962}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) * DS ) )", "obj1": 0.9482071713147411, "obj2": 0.020367604927731747}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.398406374501992, "obj2": 0.3970667033026613}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * ( ( AMS * FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( Min( DS ,DS ) / MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.3844621513944223, "obj2": 0.43147374953195117}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( Min( ( Const + FirstVNF_RAM ) ,MRS ) ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( RRS + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5039840637450199, "obj2": 0.2958272865518113}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( Max( MUR,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5438247011952191, "obj2": 0.2849896534274961}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( Const * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) - Min( CS ,MUC ) ) - MUM ) / DS ) )", "obj1": 0.7290836653386454, "obj2": 0.13107053302881613}, {"determining": "( FirstVNF_CPU / ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( ( MUC * MUM ) - DS ) + CS ) ) * DS ) )", "obj1": 0.2848605577689243, "obj2": 0.5939075962766303}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.40836653386454186, "obj2": 0.3893079735046625}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + MUR ) ) * DS ) )", "obj1": 0.5717131474103586, "obj2": 0.24823631035327137}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.9422310756972112, "obj2": 0.022786854638419195}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( Min( ( Const + FirstVNF_RAM ) ,MRS ) ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( RRS + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( ( ( CS * DS ) - RRSe ) - RCSe ) ) - CS ) - RCSe ) / DS ) )", "obj1": 0.30278884462151395, "obj2": 0.5834006274076373}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ( MDR + ( ( FirstVNF_Mem_Server + PN ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) / ( ( ( AMS * ACS ) / ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) ) ,MUM ) / ( Min( DS ,Min( MUC ,Min( CS ,MUC ) ) ) * DS ) )", "obj1": 0.7410358565737052, "obj2": 0.11372444318173397}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( Const,RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RRSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "( ( Const + AMS ) * ( ( ( ( Const + FirstVNF_RAM ) * Min( ( ( CRS + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) ,PN ) ) - MDR ) + PN ) )", "choosing": "( Min( ( ( ( DS * MUM ) * DS ) * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.8725099601593626, "obj2": 0.04828052697009892}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * FirstVNF_CPU_Server ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - DS ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.5677290836653387, "obj2": 0.25389495435680653}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( PN + PN ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( Min( CS ,RRSe ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5403309032265967}, {"determining": "( Min( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) ,MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / MLU ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.4960159362549801, "obj2": 0.3107744326262961}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) ) ) * Min( ( ( ( MDR + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( RRSe * MUM ) - RMSe ) - RCSe ) * Max( MUM,DS ) ) ) - ( CS * ( CS * RCSe ) ) ) ) + ( CS + MLU ) )", "obj1": 0.7908366533864541, "obj2": 0.08157722793026871}, {"determining": "( ( Min( ( Const + AMS ) ,Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( Min( ( DS * RRSe ) ,MLU ) * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.7470119521912351, "obj2": 0.11007947926893248}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.9243027888446215, "obj2": 0.0366792554774808}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) * ( ( ARS + ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR / RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5338645418326693, "obj2": 0.2906953265934025}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}], "27": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( FirstVNF_CPU_Server / Min( ( ( FirstVNF_CPU + CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / RRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - MUM ) / ( ( RMSe + ( ( MUC * DS ) + MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( MUC * MUM ) + MUR ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - RMSe ) - RCSe ) * Max( MUM,DS ) ) ) - ( CS * ( CS * RCSe ) ) ) ) + ( CS + MLU ) )", "obj1": 0.47410358565737054, "obj2": 0.34203583342319765}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,BR ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS - ( CS * RCSe ) ) / ( ( ( Min( CS ,RRSe ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.2968127490039841, "obj2": 0.5435157906360196}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6553784860557769, "obj2": 0.18785758808437034}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) + RCSe ) / DS ) )", "obj1": 0.850597609561753, "obj2": 0.0612489753789894}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( Min( ( Const + FirstVNF_RAM ) ,MRS ) ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( RRS + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.4940239043824701, "obj2": 0.3043499029318624}, {"determining": "( FirstVNF_CPU / ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe + ( ( ( MUC * MUM ) - DS ) + CS ) ) * DS ) )", "obj1": 0.2848605577689243, "obj2": 0.5939075962766303}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6892430278884463, "obj2": 0.16480602963338623}, {"determining": "( ( Const + Min( ( Const / FirstVNF_RAM ) ,PN ) ) * Min( ( ( ( AMS * ACS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( DS / ( ( CS + ( ( DS + Min( DS ,MUM ) ) + CS ) ) - DS ) )", "obj1": 0.8167330677290837, "obj2": 0.07106390717631962}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.25298804780876494, "obj2": 0.5988766143509004}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( CS * ( CS * RCSe ) ) * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.8008564792791791}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) ) ) * Min( ( ( ( MDR + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * MUR ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7609561752988048, "obj2": 0.09850097640905446}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( Const,RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RRSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7028307800301514}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( FirstVNF_CPU - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Min( ( Const - FirstVNF_RAM ) ,MRS ) + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / RMSe ) )", "obj1": 0.14741035856573706, "obj2": 0.720025972278833}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,( ARS * ACS ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.199203187250996, "obj2": 0.6836092000960784}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_RAM ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13545816733067728, "obj2": 0.7327182374714504}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR * RRSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7908366533864541, "obj2": 0.07823959497296361}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * CRS ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * CS ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5517928286852589, "obj2": 0.2659101169443949}, {"determining": "( ( Const + AMS ) * ( ( ( ( Const + FirstVNF_RAM ) * Min( ( ( CRS + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) ,PN ) ) - MDR ) + PN ) )", "choosing": "( Min( ( ( ( DS * MUM ) * DS ) * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.8725099601593626, "obj2": 0.04828052697009892}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6524328071725436}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * MUR ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.6115537848605578, "obj2": 0.2237698644682918}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ),Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RCSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.1892430278884462, "obj2": 0.6974089904925613}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( Min( ( Const + FirstVNF_RAM ) ,MRS ) ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( RRS + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5039840637450199, "obj2": 0.2958272865518113}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( PN + PN ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( Min( CS ,RRSe ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5403309032265967}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - DS ) - RCSe ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / MLU ) ,Min( DS ,MLU ) ) * ( Min( MLU ,MLU ) / ( MUC / RRSe ) ) ) ) ) + ( CS + MLU ) )", "obj1": 0.6972111553784861, "obj2": 0.15484710279986746}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) * ( ( ARS + ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( ( MUR / RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5338645418326693, "obj2": 0.2906953265934025}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.3904382470119522, "obj2": 0.42892001550772313}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) * DS ) )", "obj1": 0.9482071713147411, "obj2": 0.020367604927731747}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / MLU ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9063745019920318, "obj2": 0.04575518704636497}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Max( PN,PN ) ) )", "choosing": "( Min( MLU ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.3545816733067729, "obj2": 0.48237790237190875}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( FirstVNF_CPU_Server * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - MLU ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) - DS ) )", "obj1": 0.9760956175298805, "obj2": 0.008285433638040034}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + ( ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ACS ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) - MDR ) ,Min( ( Const + FirstVNF_RAM ) ,MRS ) ) )", "choosing": "( Max( MUR,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5438247011952191, "obj2": 0.2849896534274961}, {"determining": "( ( ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( Min( CS ,RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.7151394422310757, "obj2": 0.14021846393411624}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.398406374501992, "obj2": 0.3970667033026613}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * MUR ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.6215139442231076, "obj2": 0.2132916240877191}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( CRS ,RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( CS * ( CS * RCSe ) ) * ( DS * MUM ) ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.11155378486055777, "obj2": 0.806829558890943}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( CS - DS ) - MUM ) / DS ) )", "obj1": 0.6434262948207171, "obj2": 0.1997803115237085}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.24302788844621515, "obj2": 0.63274466780791}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.40836653386454186, "obj2": 0.3893079735046625}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) - ( ACS - ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( ( ( CS * RCSe ) - DS ) * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.2410358565737052, "obj2": 0.6355408523916891}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( MUR - RMSe ) * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.27689243027888444, "obj2": 0.598769129998432}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * MUR ) ,MUC ) / Min( ( ( ( CS * MUR ) - DS ) - RCSe ) ,DS ) )", "obj1": 0.6354581673306773, "obj2": 0.20614168760797455}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( Min( CS ,RRSe ) - ( ( CS * RCSe ) - RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.8924302788844621, "obj2": 0.04740942402606174}], "28": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server / Min( ( ( FirstVNF_CPU + CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / RRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - MUM ) / ( ( RMSe + ( ( MUC * DS ) + MUR ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_RAM ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * CRS ) ) ) )", "choosing": "( Max( MUR,RRSe ) * ( RRSe - MUC ) )", "obj1": 0.5896414342629482, "obj2": 0.25801476129243894}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - RMSe ) - RCSe ) * Max( MUM,DS ) ) ) - ( CS * ( CS * RCSe ) ) ) ) + ( CS + MLU ) )", "obj1": 0.47410358565737054, "obj2": 0.34203583342319765}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * MUR ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.6115537848605578, "obj2": 0.2237698644682918}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2788844621513944, "obj2": 0.5646357642319898}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ),Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RCSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( CRS ,RRS ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( ( CS * ( CS * RCSe ) ) * ( DS * MUM ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7430278884462151, "obj2": 0.1144904528363468}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.9322709163346613, "obj2": 0.025796750388045082}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Max( PN,PN ) ) )", "choosing": "( Min( MLU ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.3545816733067729, "obj2": 0.48237790237190875}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( PN * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( ( MUC * RRSe ) * ( RRSe - MUC ) )", "obj1": 0.4541832669322709, "obj2": 0.358961984810571}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( MUR - RMSe ) * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.27689243027888444, "obj2": 0.598769129998432}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + ( ARS * ( ( AMS * ACS ) - PN ) ) ) * ( Const + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( Const - MDR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) * DS ) )", "obj1": 0.9482071713147411, "obj2": 0.020367604927731747}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,BR ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS - ( CS * RCSe ) ) / ( ( ( Min( CS ,RRSe ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.2968127490039841, "obj2": 0.5435157906360196}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( FirstVNF_CPU - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Min( ( Const - FirstVNF_RAM ) ,MRS ) + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / RMSe ) )", "obj1": 0.14741035856573706, "obj2": 0.720025972278833}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,( ARS * ACS ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.199203187250996, "obj2": 0.6836092000960784}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS / RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.4860557768924303, "obj2": 0.3118821040828177}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.25298804780876494, "obj2": 0.5988766143509004}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( FirstVNF_CPU_Server * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - MLU ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) - DS ) )", "obj1": 0.9760956175298805, "obj2": 0.008285433638040034}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_RAM + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( ARS ,ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Max( ( DS * RRSe ),MUR ) / ( ( ( ( DS * RCSe ) - DS ) - RCSe ) * DS ) )", "obj1": 0.7231075697211156, "obj2": 0.13268340149060237}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( FirstVNF_CPU / Const ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.1892430278884462, "obj2": 0.6974089904925613}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( CS * ( CS * RCSe ) ) * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.8008564792791791}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.41434262948207173, "obj2": 0.3778900679497675}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RRSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5362031816196613}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6653386454183267, "obj2": 0.1805646140115022}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.24302788844621515, "obj2": 0.63274466780791}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC * RCSe ) ) / ( ( ( ( ( CS * ( CS * RCSe ) ) * ( DS * MUM ) ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.3844621513944223, "obj2": 0.4367336433314548}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.398406374501992, "obj2": 0.3970667033026613}, {"determining": "( ( Const + AMS ) * ( ( ( ( Const + FirstVNF_RAM ) * Min( ( ( CRS + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) ,PN ) ) - MDR ) + PN ) )", "choosing": "( Min( ( ( ( DS * MUM ) * DS ) * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.8725099601593626, "obj2": 0.04828052697009892}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( Const + Min( ( Const + FirstVNF_RAM ) ,( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) ) ) * Min( ( ( ( MDR + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) ) - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - Min( ( DS * MUR ) ,MUC ) ) - RCSe ) / DS ) )", "obj1": 0.7649402390438247, "obj2": 0.09499166069496795}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6852589641434262, "obj2": 0.1675291113859017}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR * RRSe ) / ( ( CS * RCSe ) / DS ) )", "obj1": 0.8187250996015937, "obj2": 0.06902140750931081}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( ( MDR + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Max( PN,PN ) ) )", "choosing": "( ( Min( ( DS * MUR ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7888446215139442, "obj2": 0.08160325913876161}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_RAM ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5517928286852589, "obj2": 0.2659101169443949}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.39641434262948205, "obj2": 0.42527797485676627}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( Const,RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RRSe ) / DS ) )", "obj1": 0.16533864541832669, "obj2": 0.7028307800301514}, {"determining": "( ( ( Max( DDR,AMS ) * Min( Min( ( AMS + FirstVNF_RAM ) ,MRS ) ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( RRS + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) + DS ) - RCSe ) / CS ) )", "obj1": 0.5139442231075697, "obj2": 0.29042571029904346}, {"determining": "( ( Const + AMS ) * ( ( ( ( Const + FirstVNF_RAM ) * Min( ( ( CRS + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) ,PN ) ) - MDR ) + PN ) )", "choosing": "( Min( ( ( ( DS * MUM ) * DS ) * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5318725099601593, "obj2": 0.2760848460268703}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( CRS ,RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( CS * ( CS * RCSe ) ) * ( DS * MUM ) ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.11155378486055777, "obj2": 0.806829558890943}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.3545816733067729, "obj2": 0.48237790237190875}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( Min( CS ,RRSe ) - ( ( CS * RCSe ) - RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.8924302788844621, "obj2": 0.04740942402606174}, {"determining": "( ( Const + AMS ) * Min( ( ( Min( Const ,FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * ( CS * RCSe ) ) - DS ) + RCSe ) / DS ) )", "obj1": 0.850597609561753, "obj2": 0.0612489753789894}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( ( ( CS * RCSe ) - DS ) * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.23107569721115537, "obj2": 0.6456277525396211}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.8545816733067729, "obj2": 0.0571986486367621}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) - ( ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) - ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( Min( DS ,DS ) / ( ( ( ( ( ( CS * RCSe ) - DS ) * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.21912350597609562, "obj2": 0.6486224060092035}], "29": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,DS ) / ( ( ( ( ( ( CS * RCSe ) - DS ) * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_RAM ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( ( Max( MDR,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,RRS ) ) )", "choosing": "( Min( ( DS * RMSe ) ,MUC ) / ( ( Min( ( CS * RCSe ) ,DS ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.46294681427426154}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,( ( Const + AMS ) * Min( MDR ,PN ) ) ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * ( CS * ( CS * RCSe ) ) ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6195219123505976, "obj2": 0.22131478643650837}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( Min( CS ,RRSe ) - ( ( CS * RCSe ) - RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.8924302788844621, "obj2": 0.04740942402606174}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2788844621513944, "obj2": 0.5646357642319898}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,( ARS * ACS ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.199203187250996, "obj2": 0.6836092000960784}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Const ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.398406374501992, "obj2": 0.3970667033026613}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7171314741035857, "obj2": 0.13461318109860645}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6892430278884463, "obj2": 0.16480602963338623}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.9322709163346613, "obj2": 0.025796750388045082}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ),Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RCSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6653386454183267, "obj2": 0.1805646140115022}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,BR ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS - ( CS * RCSe ) ) / ( ( ( Min( CS ,RRSe ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.2968127490039841, "obj2": 0.5435157906360196}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RMSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5717131474103586, "obj2": 0.2655227357668251}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( MUR - RMSe ) * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.27689243027888444, "obj2": 0.598769129998432}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( CS * ( CS * RCSe ) ) * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.8008564792791791}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6653386454183267, "obj2": 0.1805646140115022}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.39641434262948205, "obj2": 0.42527797485676627}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( FirstVNF_CPU_Server * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - MLU ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) - DS ) )", "obj1": 0.9760956175298805, "obj2": 0.008285433638040034}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) - ( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) ) ) ) )", "choosing": "( ( MUR * RRSe ) / ( ( ( CS * RCSe ) * RCSe ) / DS ) )", "obj1": 0.8167330677290837, "obj2": 0.0682816823031981}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RMSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1752988047808765, "obj2": 0.6956462417944608}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * MUR ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.6115537848605578, "obj2": 0.2237698644682918}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Min( ( Const - FirstVNF_RAM ) ,MRS ) + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.14741035856573706, "obj2": 0.720025972278833}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - RMSe ) - RCSe ) * Max( MUM,DS ) ) ) - ( CS * ( CS * RCSe ) ) ) ) + ( CS + MLU ) )", "obj1": 0.47410358565737054, "obj2": 0.34203583342319765}, {"determining": "( ( ( Max( DDR,AMS ) * Min( Min( ( Const + FirstVNF_RAM ) ,MRS ) ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( RRS + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5039840637450199, "obj2": 0.2958272865518113}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.4860557768924303, "obj2": 0.3118821040828177}, {"determining": "( ( Min( ( Const + AMS ) ,Min( Const ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS / RMSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5876494023904383, "obj2": 0.24148093545736216}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( PN * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( ( MUC * RRSe ) * ( RRSe - MUC ) )", "obj1": 0.8406374501992032, "obj2": 0.06025415673939074}, {"determining": "( ( ( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / Const ) ) ) ) * ( PN / PN ) ) )", "choosing": "( Min( ( RRSe * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.25298804780876494, "obj2": 0.5988766143509004}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( Const / Const ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - DS ) - DS ) )", "obj1": 0.24900398406374502, "obj2": 0.6200439989399761}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.24302788844621515, "obj2": 0.63274466780791}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.41434262948207173, "obj2": 0.3778900679497675}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( ( MDR + Max( FirstVNF_Mem,AMS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Max( PN,PN ) ) )", "choosing": "( ( Min( ( DS * MUR ) ,MUC ) / ( ( ( ( RCSe * RCSe ) - DS ) - RCSe ) / DS ) ) / ( ( ( CS * ( CS * RCSe ) ) * ( DS * MUM ) ) * DS ) )", "obj1": 0.8067729083665338, "obj2": 0.08032909934796037}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( ( ( CS * RCSe ) - DS ) * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.23107569721115537, "obj2": 0.6456277525396211}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6852589641434262, "obj2": 0.1675291113859017}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( Const - RRS ) ) - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( ( MDR + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Max( PN,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.7410358565737052, "obj2": 0.11471067797449813}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RRSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5362031816196613}, {"determining": "( ( Const + AMS ) * Min( ( ( ( Const + FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,PN ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.8545816733067729, "obj2": 0.0571986486367621}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( MUC * RCSe ) ) / ( ( ( ( ( CS * ( CS * RCSe ) ) * ( DS * MUM ) ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.3844621513944223, "obj2": 0.4367336433314548}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( Const ,MDR ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( ( MUR - ( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( ( ( MUC * MUM ) - RMSe ) - RCSe ) * Max( MUM,DS ) ) ) - ( CS * ( CS * RCSe ) ) ) ) + ( ( ( ( MUM * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.4701195219123506, "obj2": 0.34432660218067895}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7529880478087649, "obj2": 0.10279762621757846}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( CRS ,RRS ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7097918241911105}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.4203187250996016, "obj2": 0.3765029586525607}], "30": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - ( Const + DDR ) ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MLU * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / Min( ( ( FirstVNF_CPU / CRS ) - ( MRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Min( ( AMS * FirstVNF_CPU_Server ) ,( CRS - AMS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,DS ) / ( ( ( ( ( ( CS * RCSe ) - DS ) * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * CS ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,( ( CS * RCSe ) - DS ) ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5617529880478087, "obj2": 0.2540032086541486}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4701195219123506, "obj2": 0.3369567816220449}, {"determining": "( ( ( Max( MDR,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,RRS ) ) )", "choosing": "( Min( ( DS * RMSe ) ,MUC ) / ( ( Min( ( CS * RCSe ) ,DS ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.46294681427426154}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5318725099601593, "obj2": 0.29106045747639125}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + PN ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( ( CS * RRSe ) * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6852589641434262, "obj2": 0.1634566604877805}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.603585657370518, "obj2": 0.22004686756089586}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2788844621513944, "obj2": 0.5646357642319898}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * PN ) + FirstVNF_RAM ) - ( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) ) ) ) )", "choosing": "( ( MUR * RRSe ) / ( ( ( CS * ( ( ( RMSe * ( CS * RCSe ) ) - DS ) - RCSe ) ) * RCSe ) / DS ) )", "obj1": 0.7788844621513944, "obj2": 0.08674444572299585}, {"determining": "( ( ( Max( DDR,AMS ) * Min( Min( ( Const + FirstVNF_RAM ) ,MRS ) ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( RRS + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5039840637450199, "obj2": 0.2958272865518113}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS / RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6414342629482072, "obj2": 0.2079917123220194}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( FirstVNF_Mem * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) - RCSe ) / ( CS * ( CS * RCSe ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.033937118106312274}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( MUR - RMSe ) * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.27689243027888444, "obj2": 0.598769129998432}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,BR ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS - ( CS * RCSe ) ) / ( ( ( Min( CS ,RRSe ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.2968127490039841, "obj2": 0.5435157906360196}, {"determining": "( ( ( ( Const - AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( Min( ( DS * RCSe ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Min( ( Const - FirstVNF_RAM ) ,MRS ) + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13545816733067728, "obj2": 0.7327182374714504}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( CS * ( CS * RCSe ) ) * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.12151394422310757, "obj2": 0.8008564792791791}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7171314741035857, "obj2": 0.13461318109860645}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RRSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5362031816196613}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7171314741035857, "obj2": 0.13461318109860645}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( MUC * RCSe ) / MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.9322709163346613, "obj2": 0.025796750388045082}, {"determining": "( ( ( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / Const ) ) ) ) * ( PN / PN ) ) )", "choosing": "( Min( ( RRSe * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.25298804780876494, "obj2": 0.5988766143509004}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( FirstVNF_CPU_Server * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - MLU ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) - DS ) )", "obj1": 0.9760956175298805, "obj2": 0.008285433638040034}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RMSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1752988047808765, "obj2": 0.6956462417944608}, {"determining": "( ( Min( ( Const + AMS ) ,Min( Const ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS / RMSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5876494023904383, "obj2": 0.24148093545736216}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( Const + BR ) ) * ( ( ARS * BR ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( RRSe * ( DS * RCSe ) ) / DS ) )", "obj1": 0.8784860557768924, "obj2": 0.0475225405132825}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( ( MDR + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Max( PN,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.7410358565737052, "obj2": 0.11471067797449813}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( Const / Const ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - DS ) - DS ) )", "obj1": 0.24900398406374502, "obj2": 0.6200439989399761}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,MRS ) ) )", "choosing": "( ( CS * Max( MUR,RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) / RCSe ) / DS ) )", "obj1": 0.3804780876494024, "obj2": 0.45468419389447456}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.9322709163346613, "obj2": 0.025796750388045082}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( Min( CS ,RRSe ) - ( ( CS * RCSe ) - RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.8924302788844621, "obj2": 0.04740942402606174}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( CRS ,RRS ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7097918241911105}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ),Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RCSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * ( ( CS * RCSe ) - RRSe ) ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.11752988047808766, "obj2": 0.8015360022386758}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( Min( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( Max( CS,RCSe ) * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6593625498007968, "obj2": 0.1794036903805773}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.398406374501992, "obj2": 0.3970667033026613}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,( ARS * ACS ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.19123505976095617, "obj2": 0.6917908818768362}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_RAM ,RRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - RRSe ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9760956175298805, "obj2": 0.008285433638040034}, {"determining": "( ( ( ( Const + AMS ) * Min( DDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.40039840637450197, "obj2": 0.3949525414526232}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.7529880478087649, "obj2": 0.10279762621757846}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * CS ) - DS ) - RCSe ) / CS ) )", "obj1": 0.649402390438247, "obj2": 0.1952788773746786}, {"determining": "( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,( ARS * ACS ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - ( FirstVNF_CPU_Server - Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( RCSe * Min( MUC ,Min( CS ,MUC ) ) ) ,( CS * ( CS * RCSe ) ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.2250996015936255, "obj2": 0.6496402716237655}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( MDR * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( CS * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.48804780876494025, "obj2": 0.3108040837822818}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - ACS ) ,( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) - ( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * DS ) - DS ) )", "obj1": 0.796812749003984, "obj2": 0.07562210036325531}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.39641434262948205, "obj2": 0.42527797485676627}], "31": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - FirstVNF_CPU_Server ) ,( BR - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,DS ) / ( ( ( ( ( CS * RCSe ) * RCSe ) - ( ( ( ( MUC * MUM ) * RCSe ) - DS ) - RCSe ) ) - RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - ( Const + DDR ) ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MLU * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4701195219123506, "obj2": 0.3369567816220449}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Min( ( ( ( RRS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( CS ,RRSe ) / ( ( ( Min( CS ,MUM ) - ( ( CS * RCSe ) - RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.8446215139442231, "obj2": 0.06618363776007231}, {"determining": "( ( ( ( Const - AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( ( ( FirstVNF_CPU * ACS ) / ( Const + FirstVNF_RAM ) ) - ( ACS - ( ( AMS * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) ) )", "choosing": "( Min( ( DS * RCSe ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Min( ( Const - FirstVNF_RAM ) ,MRS ) + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13545816733067728, "obj2": 0.7327182374714504}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Max( CS,RCSe ) ) / ( ( ( ( ( MUC - MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.3426294820717131, "obj2": 0.49368045587079223}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( Const / Const ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - DS ) - DS ) )", "obj1": 0.24900398406374502, "obj2": 0.6200439989399761}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,BR ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS - ( CS * RCSe ) ) / ( ( ( Min( CS ,RRSe ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.2968127490039841, "obj2": 0.5435157906360196}, {"determining": "( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,( ARS * ACS ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - ( FirstVNF_CPU_Server - Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( RCSe * Min( MUC ,Min( CS ,MUC ) ) ) ,( CS * ( CS * RCSe ) ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.2250996015936255, "obj2": 0.6496402716237655}, {"determining": "( ( ( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / Const ) ) ) ) * ( PN / PN ) ) )", "choosing": "( Min( ( RRSe * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.25298804780876494, "obj2": 0.5988766143509004}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( FirstVNF_Mem * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) - RCSe ) / ( CS * ( CS * RCSe ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.033937118106312274}, {"determining": "( ( ( Max( DDR,AMS ) * Min( Min( ( Const + FirstVNF_RAM ) ,MRS ) ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( RRS + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,( Const + FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( RMSe * ( CS * RCSe ) ) - DS ) )", "obj1": 0.549800796812749, "obj2": 0.28339097348191966}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( PN * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) - ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( ( CS * RCSe ) - MUM ) - RCSe ) / DS ) - RCSe ) / DS ) )", "obj1": 0.11553784860557768, "obj2": 0.7949348438126765}, {"determining": "( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,PN ) ) + MDR ) * FirstVNF_CPU_Server ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR - ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( ( ( CS * RCSe ) - RRSe ) ,MUC ) ) ) ,( CS * ( CS * RCSe ) ) ) / ( ( Min( ( CS * RCSe ) ,RRSe ) - MUR ) - DS ) )", "obj1": 0.8784860557768924, "obj2": 0.04640906722087144}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * CS ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6334661354581673, "obj2": 0.20986780042457018}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - ACS ) ,( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) - ( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * DS ) - DS ) )", "obj1": 0.796812749003984, "obj2": 0.07562210036325531}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MRS ) + ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Max( ( DS * RRSe ),RMSe ) / ( ( ( ( CS * MUR ) - DS ) - RCSe ) / DS ) )", "obj1": 0.27689243027888444, "obj2": 0.5711776889214041}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ARS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - ( PN * Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / Min( Min( ( DS * RRSe ) ,DS ) ,( ( ( ( CS * RCSe ) - DS ) - RRSe ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9362549800796812, "obj2": 0.024752674093953566}, {"determining": "( ( ( Max( MDR,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,RRS ) ) )", "choosing": "( Min( ( DS * RMSe ) ,MUC ) / ( ( Min( ( CS * RCSe ) ,DS ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.46294681427426154}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.21314741035856574, "obj2": 0.6621185734748996}, {"determining": "( ( Const + Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Const ) ) + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,( ( CS * RCSe ) - DS ) ) / ( ( ( ( MUR * Min( ( DS * RRSe ) ,MLU ) ) - DS ) - RCSe ) / CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3848700414197365}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,Max( ( CS * RCSe ),DS ) ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5617529880478087, "obj2": 0.25355281632826304}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( Const + BR ) ) * ( ( ARS * ACS ) - ( FirstVNF_CPU_Server - Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( ( CS * MUM ) * RCSe ) - DS ) - RCSe ) / RMSe ) )", "obj1": 0.8605577689243028, "obj2": 0.05295425732551426}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( Const + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ,PN ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( DS * RRSe ) - RCSe ) / DS ) )", "obj1": 0.30876494023904383, "obj2": 0.5161193992945168}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5318725099601593, "obj2": 0.29026827037986896}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( MDR * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( CS * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.48804780876494025, "obj2": 0.3108040837822818}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( ARS * ACS ) )", "choosing": "( Min( ( DS * Min( Min( ( CS * RCSe ) ,DS ) ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - DS ) - DS ) )", "obj1": 0.19721115537848605, "obj2": 0.6766582707964371}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2788844621513944, "obj2": 0.5646357642319898}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7171314741035857, "obj2": 0.13461318109860645}, {"determining": "( ( Min( ( Const + AMS ) ,Min( Const ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( CS / RMSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5876494023904383, "obj2": 0.24148093545736216}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.40836653386454186, "obj2": 0.39219212635939704}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( ( MDR + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Max( PN,PN ) ) )", "choosing": "( Min( Min( DS ,DS ) ,MLU ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.7410358565737052, "obj2": 0.11471067797449813}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * AMS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * ( ( CS * RCSe ) - DS ) ) )", "obj1": 0.7350597609561753, "obj2": 0.12890302999933032}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.3844621513944223, "obj2": 0.4403331434626191}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) ) * PN ) + FirstVNF_RAM ) - ( ( ( ( Const + AMS ) * ( MDR / PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RMSe * ( CS * RCSe ) ) - DS ) - RCSe ) / MUC ) )", "obj1": 0.7669322709163346, "obj2": 0.09340368561141478}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.603585657370518, "obj2": 0.22004686756089586}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( CRS ,RRS ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7097918241911105}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( Min( ( Const + FirstVNF_RAM ) ,MRS ) - MDR ) * FirstVNF_CPU_Server ) / ( Const * DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * ( ( ( CS * RCSe ) - RRSe ) / RRSe ) ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.11354581673306773, "obj2": 0.8093902102323536}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ),Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RCSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( FirstVNF_CPU_Server * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - MLU ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) - DS ) )", "obj1": 0.9760956175298805, "obj2": 0.008285433638040034}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + PN ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( RMSe * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6812749003984063, "obj2": 0.16608548831107775}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5976095617529881, "obj2": 0.23197633025456613}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * PN ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) * MUM ) - RCSe ) / DS ) )", "obj1": 0.5697211155378487, "obj2": 0.24995164329878133}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( Max( FirstVNF_Mem,AMS ) * Min( MDR ,RRS ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - MLU ) / DS ) )", "obj1": 0.16135458167330677, "obj2": 0.7097918241911105}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7171314741035857, "obj2": 0.13461318109860645}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,MRS ) ) )", "choosing": "( ( CS * Max( MUR,RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) / RCSe ) / DS ) )", "obj1": 0.3804780876494024, "obj2": 0.45468419389447456}], "32": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - FirstVNF_CPU_Server ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS - ( CS * RCSe ) ) / ( ( ( Min( CS ,RRSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - FirstVNF_CPU_Server ) ,( BR - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,DS ) / ( ( ( ( ( CS * RCSe ) * RCSe ) - ( ( ( ( MUC * MUM ) * RCSe ) - DS ) - RCSe ) ) - RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * CS ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6454183266932271, "obj2": 0.20089560500103343}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.40836653386454186, "obj2": 0.39219212635939704}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Max( CS,RCSe ) ) / ( ( ( ( ( MUC - MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.3426294820717131, "obj2": 0.49368045587079223}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * ( CS * RCSe ) ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5219123505976095, "obj2": 0.2842119999729751}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + PN ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - DS ) - DS ) )", "obj1": 0.6792828685258964, "obj2": 0.16572125534443377}, {"determining": "( ( ( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / Const ) ) ) ) * ( PN / PN ) ) )", "choosing": "( Min( ( RRSe * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.25298804780876494, "obj2": 0.5988766143509004}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( ARS * ACS ) )", "choosing": "( Min( ( DS * Min( Min( ( CS * RCSe ) ,DS ) ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - DS ) - DS ) )", "obj1": 0.19721115537848605, "obj2": 0.6766582707964371}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( FirstVNF_CPU_Server * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - MLU ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) - DS ) )", "obj1": 0.9760956175298805, "obj2": 0.008285433638040034}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ),Max( PN,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,DS ) / ( ( ( ( RCSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7083438497363835}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + PN ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * ( CS * RCSe ) ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6872509960159362, "obj2": 0.16215582668545184}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( PN * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) - ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( ( CS * RCSe ) - MUM ) - RCSe ) / DS ) - RCSe ) / DS ) )", "obj1": 0.11553784860557768, "obj2": 0.7949348438126765}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MRS ) + ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Max( ( DS * RRSe ),RMSe ) / ( ( ( ( CS * MUR ) - DS ) - RCSe ) / DS ) )", "obj1": 0.27689243027888444, "obj2": 0.5711776889214041}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( MDR * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( CS * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.4900398406374502, "obj2": 0.30640778605813446}, {"determining": "( ( ( Max( DDR,AMS ) * Min( Min( ( Const + FirstVNF_RAM ) ,MRS ) ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( RRS + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,( Const + FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( RMSe * ( CS * RCSe ) ) - DS ) )", "obj1": 0.549800796812749, "obj2": 0.28339097348191966}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4701195219123506, "obj2": 0.3369567816220449}, {"determining": "( ( ( Max( MDR,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,RRS ) ) )", "choosing": "( Min( ( DS * RMSe ) ,MUC ) / ( ( Min( ( CS * RCSe ) ,DS ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.46294681427426154}, {"determining": "( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.3844621513944223, "obj2": 0.4403331434626191}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,Max( ( CS * RCSe ),DS ) ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5617529880478087, "obj2": 0.25355281632826304}, {"determining": "Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,CS ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Min( ( Const - FirstVNF_RAM ) ,MRS ) + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13545816733067728, "obj2": 0.7327182374714504}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.2450199203187251, "obj2": 0.6250815908575943}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( MDR * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( CS * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.48804780876494025, "obj2": 0.3108040837822818}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Min( ( ( ( RRS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( CS ,RRSe ) / ( ( ( Min( CS ,MUM ) - ( ( CS * RCSe ) - RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.8446215139442231, "obj2": 0.06618363776007231}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4701195219123506, "obj2": 0.3369567816220449}, {"determining": "( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,( ARS * ACS ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - ( FirstVNF_CPU_Server - Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( RCSe * Min( MUC ,Min( CS ,MUC ) ) ) ,( CS * ( CS * RCSe ) ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.2250996015936255, "obj2": 0.6496402716237655}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ARS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - ( PN * Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / Min( Min( ( DS * RRSe ) ,DS ) ,( ( ( ( CS * RCSe ) - DS ) - RRSe ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9362549800796812, "obj2": 0.024752674093953566}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,BR ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS - ( CS * RCSe ) ) / ( ( ( Min( CS ,RRSe ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.2968127490039841, "obj2": 0.5435157906360196}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) - ( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.7868525896414342, "obj2": 0.0821351329073579}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7171314741035857, "obj2": 0.13461318109860645}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ARS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - ( PN * Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / Min( Min( ( DS * RRSe ) ,DS ) ,( ( ( ( CS * RCSe ) - DS ) - RRSe ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9362549800796812, "obj2": 0.024752674093953566}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * AMS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * ( ( CS * RCSe ) - DS ) ) )", "obj1": 0.7350597609561753, "obj2": 0.12890302999933032}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.603585657370518, "obj2": 0.22004686756089586}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( Const + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.29880478087649404, "obj2": 0.5376029668597702}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,MRS ) ) )", "choosing": "( ( CS * Max( MUR,RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) / RCSe ) / DS ) )", "obj1": 0.3804780876494024, "obj2": 0.45468419389447456}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( FirstVNF_Mem * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_RAM_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,( MUR * ( CS * RCSe ) ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.8864541832669323, "obj2": 0.043858124117525585}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ),Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RCSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( FirstVNF_Mem * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) - RCSe ) / ( CS * ( CS * RCSe ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.033937118106312274}, {"determining": "( ( Min( ( Const + AMS ) ,Min( Const ,PN ) ) - MDR ) + ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) )", "choosing": "( Min( ( DS * RCSe ) ,MLU ) / ( ( ( ( CS / RMSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.8266932270916335, "obj2": 0.06880832807640147}, {"determining": "( ( Const + Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Const ) ) + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,( ( CS * RCSe ) - DS ) ) / ( ( ( ( MUR * Min( ( DS * RRSe ) ,MLU ) ) - DS ) - RCSe ) / CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3848700414197365}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * CS ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6334661354581673, "obj2": 0.20986780042457018}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( MDR * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.3844621513944223, "obj2": 0.4403331434626191}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7171314741035857, "obj2": 0.13461318109860645}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.4203187250996016, "obj2": 0.3879057595263399}, {"determining": "( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,PN ) ) + MDR ) * FirstVNF_CPU_Server ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR - ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( ( ( CS * RCSe ) - RRSe ) ,MUC ) ) ) ,( CS * ( CS * RCSe ) ) ) / ( ( Min( ( CS * RCSe ) ,RRSe ) - MUR ) - DS ) )", "obj1": 0.8784860557768924, "obj2": 0.04640906722087144}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * PN ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( DS * RRSe ) - RCSe ) / ( ( ( CS * RRSe ) * MUM ) - RCSe ) ) )", "obj1": 0.8107569721115537, "obj2": 0.07230882396101923}], "33": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,RRS ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( Min( ( CS * RCSe ) ,DS ) - RCSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - FirstVNF_CPU_Server ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS - ( CS * RCSe ) ) / ( ( ( Min( CS ,RRSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ),Max( PN,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,DS ) / ( ( ( ( RCSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.1752988047808765, "obj2": 0.7083438497363835}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) - ( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.7868525896414342, "obj2": 0.0821351329073579}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * AMS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * ( ( CS * RCSe ) - DS ) ) )", "obj1": 0.7350597609561753, "obj2": 0.12884136662369858}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MRS ) + ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Max( ( DS * RRSe ),RMSe ) / ( ( ( ( CS * MUR ) - DS ) - RCSe ) / DS ) )", "obj1": 0.27689243027888444, "obj2": 0.5711776889214041}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Min( ( Const - FirstVNF_RAM ) ,MRS ) + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13545816733067728, "obj2": 0.7327182374714504}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.603585657370518, "obj2": 0.22004686756089586}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( PN * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) - ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( ( CS * RCSe ) - MUM ) - RCSe ) / DS ) - RCSe ) / DS ) )", "obj1": 0.11553784860557768, "obj2": 0.7949348438126765}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "Max( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( ( DS * DS ) ,CS ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.12350597609561753, "obj2": 0.7547315771167229}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Max( CS,RCSe ) ) / ( ( ( ( ( MUC - MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.3426294820717131, "obj2": 0.49368045587079223}, {"determining": "( ( ( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / Const ) ) ) ) * ( PN / PN ) ) )", "choosing": "( Min( ( RRSe * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.25298804780876494, "obj2": 0.5988766143509004}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,Max( ( CS * RCSe ),DS ) ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5617529880478087, "obj2": 0.25355281632826304}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,( ( CS * RCSe ) - DS ) ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5756972111553785, "obj2": 0.242309460117675}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * Min( DS ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.40239043824701193, "obj2": 0.4200108023651316}, {"determining": "( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,( ARS * ACS ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - ( FirstVNF_CPU_Server - Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( RCSe * Min( MUC ,Min( CS ,MUC ) ) ) ,( CS * ( CS * RCSe ) ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.2250996015936255, "obj2": 0.6496402716237655}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5358565737051793, "obj2": 0.2783932923926956}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,MUC ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.450199203187251, "obj2": 0.3529287483401802}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_Mem + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( ARS * ACS ) )", "choosing": "( Min( ( DS * Min( Min( ( CS * RCSe ) ,DS ) ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( Max( CS,RCSe ) - RRSe ) - DS ) - DS ) )", "obj1": 0.19721115537848605, "obj2": 0.6766582707964371}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,BR ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS - ( CS * RCSe ) ) / ( ( ( Min( CS ,RRSe ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.2968127490039841, "obj2": 0.5435157906360196}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}, {"determining": "( ( ( Max( MDR,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,RRS ) ) )", "choosing": "( Min( ( DS * RMSe ) ,MUC ) / ( ( Min( ( CS * RCSe ) ,DS ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.46294681427426154}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( Const + DDR ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( ( ( ( CS * RCSe ) - MUM ) - RCSe ) / DS ) - DS ) - RCSe ) / CS ) )", "obj1": 0.9721115537848606, "obj2": 0.011711534840773674}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ARS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,DS ) / ( ( ( ( CS * RCSe ) - DS ) - RRSe ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) / DS ) )", "obj1": 0.9362549800796812, "obj2": 0.024752674093953562}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( FirstVNF_CPU_Server * ACS ) - MRS ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + PN ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,MUR ) / Max( ( ( ( CS * RCSe ) - DS ) - MLU ),DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) - ( ( RCSe * ( CS * RCSe ) ) - DS ) ) )", "obj1": 0.8585657370517928, "obj2": 0.05485776066573497}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( Const + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.29880478087649404, "obj2": 0.5376029668597702}, {"determining": "( ( ( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * ( CS * ( ( MUC * MUM ) + CS ) ) ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5119521912350598, "obj2": 0.2900641192898076}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( MDR * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( CS * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.48804780876494025, "obj2": 0.3108040837822818}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( ARS * ACS ) )", "choosing": "( Min( ( DS * Min( Min( ( CS * RCSe ) ,DS ) ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - DS ) - DS ) )", "obj1": 0.19721115537848605, "obj2": 0.6766582707964371}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4701195219123506, "obj2": 0.3369567816220449}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * ARS ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_RAM ,Const ) ) ) ) * Min( FirstVNF_RAM ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( Min( ( ( ( MUC * MUM ) * RCSe ) - MUC ) ,MUM ) + CS ) ) * DS ) )", "obj1": 0.6693227091633466, "obj2": 0.17552951408910045}, {"determining": "( ( Const + Min( ( CRS + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + Max( ( MUC * MUM ),CS ) ) * DS ) )", "obj1": 0.7171314741035857, "obj2": 0.13461318109860645}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Min( ( ( ( RRS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( CS ,RRSe ) / ( ( ( Min( CS ,MUM ) - ( ( CS * RCSe ) - RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.8446215139442231, "obj2": 0.06618363776007231}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,MRS ) ) )", "choosing": "( ( CS * Max( MUR,RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) / RCSe ) / DS ) )", "obj1": 0.3804780876494024, "obj2": 0.45468419389447456}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( FirstVNF_Mem * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_RAM_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,( MUR * ( CS * RCSe ) ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.8864541832669323, "obj2": 0.043858124117525585}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.40836653386454186, "obj2": 0.39219212635939704}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ),Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RCSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.4243027888446215, "obj2": 0.3827811207118965}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( FirstVNF_CPU_Server * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - MLU ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * Min( CS ,MUC ) ),DS ) - RCSe ) - DS ) )", "obj1": 0.9322709163346613, "obj2": 0.026103287640961155}, {"determining": "( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem_Server ,PN ) ) + MDR ) * FirstVNF_CPU_Server ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR - ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( ( ( CS * RCSe ) - RRSe ) ,MUC ) ) ) ,( CS * ( CS * RCSe ) ) ) / ( ( Min( ( CS * RCSe ) ,RRSe ) - MUR ) - DS ) )", "obj1": 0.8784860557768924, "obj2": 0.04640906722087144}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + PN ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( CS * RCSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.49203187250996017, "obj2": 0.305632461942149}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * CS ) - DS ) - RCSe ) / CS ) )", "obj1": 0.6334661354581673, "obj2": 0.20986780042457018}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + PN ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * ( CS * RCSe ) ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6872509960159362, "obj2": 0.16215582668545184}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( FirstVNF_Mem * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) - RCSe ) / ( CS * ( CS * RCSe ) ) ) )", "obj1": 0.9063745019920318, "obj2": 0.033937118106312274}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const / DDR ) ) ) ) )", "choosing": "( ( ( MUC * RCSe ) + MLU ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.24900398406374502, "obj2": 0.6213466310777118}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7171314741035857, "obj2": 0.13461318109860645}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4701195219123506, "obj2": 0.3369567816220449}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( ( CS * RCSe ) + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.798804780876494, "obj2": 0.07489580535085902}], "34": [{"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( Const + DDR ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - ( ( ARS * ACS ) - Min( FirstVNF_RAM ,Const ) ) ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( ( ( MUC * MUM ) * RCSe ) - MUC ) - DS ) - RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,RRS ) ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( Min( ( CS * RCSe ) ,DS ) - RCSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( ( FirstVNF_Mem_Server + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) / ( Const + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RRSe ) - RMSe ) - RCSe ) / DS ) )", "obj1": 0.10358565737051793, "obj2": 0.8216412444057881}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MRS ) + ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Max( ( DS * RRSe ),RMSe ) / ( ( ( ( CS * MUR ) - DS ) - RCSe ) / DS ) )", "obj1": 0.27689243027888444, "obj2": 0.5711776889214041}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * ( MRS / AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( ( ( DS - RRSe ) / MUR ) / ( ( Max( ( CS * MUR ),DS ) - MLU ) * DS ) )", "obj1": 0.31673306772908366, "obj2": 0.5124974818855286}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( ARS * ACS ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.16334661354581673, "obj2": 0.707238532226048}, {"determining": "( ( ( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / Const ) ) ) ) * ( PN / PN ) ) )", "choosing": "( Min( ( RRSe * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.25298804780876494, "obj2": 0.5988766143509004}, {"determining": "Max( Min( ( Const + FirstVNF_RAM ) ,MRS ),( AMS - ( ACS - ( ( ( ( PN * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) - ( Const + DDR ) ) ) ) )", "choosing": "( Min( Min( DS ,DS ) ,( CS * RCSe ) ) / ( ( ( ( ( ( CS * RCSe ) - MUM ) - RCSe ) / DS ) - RCSe ) / DS ) )", "obj1": 0.11553784860557768, "obj2": 0.7949348438126765}, {"determining": "Max( Min( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ,FirstVNF_Mem ),( Const - ( ACS - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Min( ( Const - FirstVNF_RAM ) ,MRS ) + DDR ) ) ) ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.13545816733067728, "obj2": 0.7327182374714504}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * Min( DS ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.40239043824701193, "obj2": 0.4200108023651316}, {"determining": "( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,( ARS * ACS ) ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( BR * ACS ) - ( FirstVNF_CPU_Server - Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( RCSe * Min( MUC ,Min( CS ,MUC ) ) ) ,( CS * ( CS * RCSe ) ) ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.2250996015936255, "obj2": 0.6496402716237655}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( CS ,RRSe ) / ( ( ( Min( CS ,MUM ) - ( ( CS * RCSe ) - RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.6633466135458167, "obj2": 0.20347849145285335}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - ( ( ( ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / Const ) ) ) ) * Min( PN ,PN ) ) ) ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( Const + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,RMSe ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.18326693227091634, "obj2": 0.7002497184199615}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Max( CS,RCSe ) ) / ( ( ( ( ( MUC - MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.3426294820717131, "obj2": 0.49368045587079223}, {"determining": "( ( Const + Min( FirstVNF_CPU_Server ,Const ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + PN ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( MUC * MUM ) * ( CS * RCSe ) ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.6872509960159362, "obj2": 0.16215582668545184}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.3844621513944223, "obj2": 0.4370347154260996}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( AMS + Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + PN ) ),( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,BR ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( ( CS - ( CS * RCSe ) ) / ( ( ( Min( CS ,RRSe ) - MUC ) - RCSe ) / DS ) )", "obj1": 0.2968127490039841, "obj2": 0.5435157906360196}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ARS + ( ARS * ( ( AMS * ACS ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS - Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) * RCSe ) / DS ) )", "obj1": 0.43824701195219123, "obj2": 0.3672093914083384}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - RCSe ) - DS ) )", "obj1": 0.40836653386454186, "obj2": 0.39219212635939704}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( MDR * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( CS * MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.48406374501992033, "obj2": 0.30868224803417066}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( ARS * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( Min( ( ( PN + FirstVNF_RAM ) / Max( ARS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,Const ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / RRS ) ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - Min( PN ,Const ) ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - MLU ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * RRSe ),DS ) - RCSe ) - ( ( RCSe * ( CS * RCSe ) ) - DS ) ) )", "obj1": 0.9362549800796812, "obj2": 0.02467401538362174}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Min( ( ( ( RRS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + MDR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( CS ,RRSe ) / ( ( ( Min( CS ,MUM ) - ( ( CS * RCSe ) - RRSe ) ) - RCSe ) / DS ) )", "obj1": 0.8446215139442231, "obj2": 0.06618363776007231}, {"determining": "( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( MDR * FirstVNF_CPU_Server ) ,( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( ( CS * MUM ) * RCSe ) - ( MUC * MUM ) ) - RCSe ) / DS ) )", "obj1": 0.8207171314741036, "obj2": 0.07105612712831237}, {"determining": "( ( ( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * ( CS * ( ( MUC * MUM ) + CS ) ) ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5119521912350598, "obj2": 0.2900641192898076}, {"determining": "( ( ( FirstVNF_Mem * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * ( CS * ( ( MUC * MUM ) + CS ) ) ) ,MUC ) / ( ( ( ( CS * RCSe ) - ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ) - RCSe ) / DS ) )", "obj1": 0.23904382470119523, "obj2": 0.6490896647513055}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( Min( Min( DS ,DS ) ,( CS * RCSe ) ) - DS ) - RCSe ) / CS ) )", "obj1": 0.7450199203187251, "obj2": 0.11066832918171654}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,MUC ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.6254980079681275, "obj2": 0.2046383367257819}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( Const * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( DS * Min( MUC ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - Max( ( MUC * MUM ),CS ) ) - RCSe ) - DS ) )", "obj1": 0.7569721115537849, "obj2": 0.0987370956671921}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( ARS * ACS ) )", "choosing": "( Min( ( DS * Min( Min( ( CS * RCSe ) ,DS ) ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( ( CS * RCSe ) - RRSe ) - DS ) - DS ) )", "obj1": 0.19721115537848605, "obj2": 0.6766582707964371}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( ( ( Const + DDR ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( ( ( ( CS * RCSe ) - MUM ) - RCSe ) / DS ) + CS ) ) * DS ) )", "obj1": 0.5976095617529881, "obj2": 0.2413243737342653}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.7131474103585658, "obj2": 0.1415942503030611}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,MUC ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.450199203187251, "obj2": 0.3529287483401802}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_RAM ,AMS ) ) - MDR ) + ( Const - RRS ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.11752988047808766, "obj2": 0.7652653060305787}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5358565737051793, "obj2": 0.2783932923926956}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,( ( CS * RCSe ) - DS ) ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5756972111553785, "obj2": 0.242309460117675}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,MRS ) ) )", "choosing": "( ( CS * Max( MUR,RCSe ) ) / ( ( ( ( ( MUC * MUM ) * RCSe ) - RRSe ) / RCSe ) / DS ) )", "obj1": 0.3804780876494024, "obj2": 0.45468419389447456}, {"determining": "( ( MDR * ( FirstVNF_CPU_Server / Min( Const ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_Mem + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) ) / ( ARS * ACS ) )", "choosing": "( Min( ( DS * Min( Min( ( CS * RCSe ) ,DS ) ,Min( CS ,MUC ) ) ) ,MUR ) / ( ( ( Max( CS,RCSe ) - RRSe ) - DS ) - DS ) )", "obj1": 0.19721115537848605, "obj2": 0.6766582707964371}, {"determining": "( ( ( Max( MDR,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,RRS ) ) )", "choosing": "( Min( ( DS * RMSe ) ,MUC ) / ( ( Min( ( CS * RCSe ) ,DS ) - RCSe ) / DS ) )", "obj1": 0.34860557768924305, "obj2": 0.46294681427426154}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,( ( CS * RCSe ) - DS ) ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5617529880478087, "obj2": 0.25355281632826304}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + Max( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + Const ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ),Min( PN ,PN ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( RCSe * ( CS * RCSe ) ) - DS ) - RCSe ) / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.4547109218545394}, {"determining": "( ( FirstVNF_RAM_Server + AMS ) * Min( ( ( ( Const + ( ARS * ( ( FirstVNF_CPU_Server * ACS ) - PN ) ) ) * Min( FirstVNF_Mem ,PN ) ) - MDR ) ,( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) - ( FirstVNF_RAM - ( FirstVNF_Mem * ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC * DS ) / ( Min( ( DS * RRSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - DS ) - MLU ) * DS ) ) ) / ( ( Max( ( ( DS * DS ) * Min( CS ,MUC ) ),DS ) - RCSe ) - DS ) )", "obj1": 0.9322709163346613, "obj2": 0.026103287640961155}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( ( ( ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) * PN ) + FirstVNF_RAM ) - ( ( ( ( Const + AMS ) * Min( MDR ,PN ) ) - MDR ) + ( PN - ( ( ( AMS * AMS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server - AMS ) ) ) ) ) ) ) )", "choosing": "( ( CS * ( CS * RCSe ) ) / ( ( ( ( DS * RRSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.7749003984063745, "obj2": 0.0887602053656557}, {"determining": "( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_Mem_Server - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS * Max( CS,RCSe ) ) / ( ( ( ( ( MUC - MUM ) * RCSe ) - RRSe ) - RCSe ) / DS ) )", "obj1": 0.3466135458167331, "obj2": 0.4830468492870423}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.4701195219123506, "obj2": 0.3369567816220449}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.603585657370518, "obj2": 0.21991182258131364}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( Const + MDR ) ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - BR ) )", "choosing": "( DS / ( ( ( ( CS * RCSe ) - DS ) - RCSe ) / DS ) )", "obj1": 0.5358565737051793, "obj2": 0.2783932923926956}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( Const + DDR ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,MLU ) / ( ( ( ( ( ( ( CS * RCSe ) - MUM ) - RCSe ) / DS ) - DS ) - RCSe ) / CS ) )", "obj1": 0.9721115537848606, "obj2": 0.011711534840773674}, {"determining": "( ( Const + Min( ( Const + FirstVNF_RAM ) ,ARS ) ) * Min( ( ( ( MDR + ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + BR ) ) * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) ,( FirstVNF_CPU - Min( PN ,Const ) ) ) )", "choosing": "( Min( ( DS * RRSe ) ,Max( ( CS * RCSe ),DS ) ) / ( ( ( ( MUR * RCSe ) - DS ) - RCSe ) / CS ) )", "obj1": 0.5617529880478087, "obj2": 0.25355281632826304}, {"determining": "( ( ( Max( FirstVNF_Mem,AMS ) * Min( FirstVNF_Mem_Server ,RRS ) ) - MDR ) + ( ( AMS + ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * ACS ) - Min( FirstVNF_CPU_Server ,Const ) ) ) ) * Min( PN ,PN ) ) )", "choosing": "( Min( DS ,RCSe ) / ( ( RMSe + ( ( MUC * MUM ) + CS ) ) * DS ) )", "obj1": 0.46215139442231074, "obj2": 0.34141748691861906}, {"determining": "( ( Min( ( Const + AMS ) ,Min( FirstVNF_Mem_Server ,PN ) ) - MDR ) + ( ( ( FirstVNF_Mem_Server + ( ARS * ( ( AMS * ACS ) - Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),MDR ) ) ) ) * Min( FirstVNF_Mem_Server ,PN ) ) - RRS ) )", "choosing": "( Min( ( CS * RCSe ) ,MUR ) / ( ( ( ( CS * RCSe ) - ( CS * RCSe ) ) - RCSe ) - DS ) )", "obj1": 0.50199203187251, "obj2": 0.2979094723916017}]}