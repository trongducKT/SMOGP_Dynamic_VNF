{"1": [{"determining": "( Min( FirstVNF_CPU ,( ( ( ( ( PN - FirstVNF_RAM_Server ) + CRS ) + ARS ) - PN ) / RRS ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,Min( Min( MUM ,MUR ) ,MUR ) ) * ( MLU / RCSe ) )", "obj1": 0.9800796812749004, "obj2": 0.026998738640769553}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU + BR ) )", "choosing": "( ( MUR + CS ) / Min( RCSe ,DS ) )", "obj1": 0.20916334661354583, "obj2": 0.774912163783138}, {"determining": "Min( Min( Const ,RRS ) ,( MDR / PN ) )", "choosing": "( Min( MUM ,DS ) - Max( MUM,DS ) )", "obj1": 0.31274900398406374, "obj2": 0.5937452855426476}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( ( ACS * PN ),FirstVNF_CPU ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( CRS + Max( ( FirstVNF_CPU + CRS ),FirstVNF_CPU ) ) / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( Min( ( MUC * MUR ) ,RCSe ) * ( RRSe - ( CS - Max( MUR,( ( ( RRSe * RCSe ) + ( RCSe - RMSe ) ) - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Const ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( RCSe - Max( RRSe,( DS - ( ( ( CS - CS ) + MUR ) / ( ( ( CS / RRSe ) + MUC ) + ( MLU / ( DS - MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) * ( Min( ( ( ( ACS * Const ) + Min( ARS ,FirstVNF_CPU ) ) - ( BR * FirstVNF_RAM ) ) ,( FirstVNF_CPU - ( ( ACS - FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) - PN ) )", "choosing": "( ( Max( ( Max( MUC,MLU ) - RRSe ),CS ) * DS ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + PN ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Max( DS,MUR ) )", "obj1": 0.2290836653386454, "obj2": 0.7472474042861583}, {"determining": "( Max( FirstVNF_RAM,Max( CRS,Max( Max( FirstVNF_CPU,CRS ),CRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( MLU + Min( MUC ,CS ) ) ) / ( MUC * Min( ( Min( MUR ,CS ) / Min( ( CS / Min( RRSe ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( ( RRS * AMS ) / ( ( FirstVNF_RAM_Server * Max( AMS,( PN / Max( BR,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) ) * ( DDR / DDR ) )", "choosing": "Min( Min( Min( RMSe ,( DS / MUC ) ) ,CS ) ,Min( Max( ( RMSe + MLU ),MUC ) ,Max( ( MUR * RRSe ),DS ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5926964894054033}, {"determining": "( Min( ( Const + ARS ) ,Min( ( FirstVNF_RAM - CRS ) ,Const ) ) * ( ( FirstVNF_Mem_Server * DDR ) * RRS ) )", "choosing": "( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( ( ( MLU + DS ) * RCSe ) - Max( CS,CS ) ) )", "obj1": 0.27689243027888444, "obj2": 0.6097084970609586}, {"determining": "Max( ( ( FirstVNF_RAM / MRS ) / ( ( ( ( BR * Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) ) / Max( CRS,FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) ),( ( ARS + ACS ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( MUM / Max( RMSe,Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "( ( FirstVNF_CPU * Min( ( PN + Max( BR,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( BR * PN ) ) )", "choosing": "( ( ( MUC - MUM ) / Max( RCSe,RCSe ) ) - ( Max( RCSe,MUR ) * ( CS + MLU ) ) )", "obj1": 0.9043824701195219, "obj2": 0.08973190428266728}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( FirstVNF_CPU + BR ) )", "choosing": "Max( ( ( RMSe - DS ) * ( CS / MUM ) ),Max( ( DS - MLU ),( MUR - CS ) ) )", "obj1": 0.9920318725099602, "obj2": 0.009760979256314665}, {"determining": "( Max( ( Max( ( CRS + MDR ),DDR ) + FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Min( ( MUR / MUR ) ,MUR ) * ( Max( MUM,Min( ( RMSe * RRSe ) ,RMSe ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_Mem + DDR ) ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,( MUR / MUC ) ) ,( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) )", "choosing": "Max( Max( ( MUM * CS ),( RRSe / RCSe ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) - ( ( MDR - BR ) - ( Min( RRS ,BR ) * ACS ) ) )", "choosing": "Max( ( ( ( ( DS + ( RMSe / ( MUR * ( MLU - RCSe ) ) ) ) - Max( RCSe,( DS - MUM ) ) ) / ( ( ( MLU + ( MLU * MLU ) ) - ( ( ( MUC * CS ) - Max( CS,MLU ) ) / MLU ) ) * RCSe ) ) * MLU ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( DDR + PN ) ),( Min( CRS ,FirstVNF_RAM_Server ) / Min( AMS ,PN ) ) )", "choosing": "( Max( DS,RMSe ) + ( ( MLU / DS ) - Max( RRSe,RCSe ) ) )", "obj1": 0.17928286852589642, "obj2": 0.782314949222034}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem / DDR ) + FirstVNF_CPU ) ,Max( MRS,( AMS - Const ) ) )", "choosing": "Min( ( ( MUR * RCSe ) * ( DS * RRSe ) ) ,Max( Min( RMSe ,MUM ),( CS + RCSe ) ) )", "obj1": 0.46215139442231074, "obj2": 0.480530189906547}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( CS + CS ) - CS ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + Min( ARS ,Min( MRS ,( MRS / ( MDR * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) )", "obj1": 0.5697211155378487, "obj2": 0.3679148806335169}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_RAM + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,Min( Max( ( Min( MRS ,DDR ) / FirstVNF_CPU_Server ),FirstVNF_Mem ) ,ARS ) ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Max( RRSe,Min( ( RCSe * ( MLU - Min( MUC ,MUC ) ) ) ,MUC ) ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( DS + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Max( Max( FirstVNF_CPU_Server,( DDR * ( DDR + ( ACS + FirstVNF_RAM_Server ) ) ) ),ACS ) ,Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * ( MUR - ( MUM - RMSe ) ) ) + Min( ( ( DS * RCSe ) + ( MUC - RCSe ) ) ,Max( ( RMSe + CS ),( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem + ARS ) / ( FirstVNF_RAM_Server + ARS ) ) * ( Min( MDR ,RRS ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) * Max( ( Max( MDR,FirstVNF_Mem_Server ) - ( ACS * MDR ) ),Max( ( BR / FirstVNF_Mem ),( DDR * DDR ) ) ) )", "choosing": "Min( ( Max( ( MUC * MUM ),CS ) + MUC ) ,Min( Min( RRSe ,( MUC / DS ) ) ,MLU ) )", "obj1": 0.36852589641434264, "obj2": 0.5495771009611908}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( CRS - BR ) + ( FirstVNF_RAM + AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( ( ( DS * MUR ) - ( MLU / DS ) ) ,( ( MUC * MUC ) + Max( RMSe,RCSe ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.8003757985100595}, {"determining": "( Max( FirstVNF_RAM,Const ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - Max( RCSe,MUR ) ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6305953648733944}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Const ) ) + Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( Max( ( ACS / MRS ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( FirstVNF_CPU_Server / RRS ) * ( MDR / BR ) ) ) )", "choosing": "( ( RCSe - CS ) - ( Min( MUC ,( MUM + CS ) ) * ( ( RRSe * MUM ) + RRSe ) ) )", "obj1": 0.2968127490039841, "obj2": 0.6049043376087903}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( AMS * FirstVNF_RAM ) )", "choosing": "Max( ( MUM / RCSe ),( ( MLU + Max( ( MUC + RCSe ),MLU ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + BR ) * ( MDR / ( MDR * BR ) ) ) - ( ACS / ARS ) )", "choosing": "( ( MUC / CS ) + ( ( ( DS / MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( PN * ( MDR * ACS ) ) / ( ( Max( ( ( MRS + Max( ( AMS - ACS ),ARS ) ) - ( FirstVNF_Mem / AMS ) ),FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) )", "choosing": "( ( Max( ( DS / MUC ),( MUR * RMSe ) ) + Max( ( MUR * MLU ),( MLU * ( DS / ( MUC * Max( ( RCSe + DS ),MLU ) ) ) ) ) ) - Max( ( ( MUM - MUM ) / ( MUC / RMSe ) ),( ( MUM - MUM ) / ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Max( ( FirstVNF_CPU + CRS ),FirstVNF_CPU ) ) / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( Min( ( MUC * MUR ) ,RCSe ) * ( RRSe - ( CS - Max( MUR,( ( ( RRSe * RCSe ) + ( RCSe - RMSe ) ) - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7734650087885288}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5856573705179283, "obj2": 0.3442526250685409}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 0.8685258964143426, "obj2": 0.09472903446082946}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC * ( Min( ( RRSe / CS ) ,Min( MUM ,CS ) ) / Max( ( MUM - RMSe ),( MUR - MLU ) ) ) ) ,Max( MLU,MUC ) )", "obj1": 0.8007968127490039, "obj2": 0.15934134352264545}, {"determining": "( Max( ( DDR + FirstVNF_Mem ),( FirstVNF_Mem / ( FirstVNF_CPU + MDR ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / AMS ) ) )", "choosing": "( Min( Min( MUR ,MUR ) ,DS ) * Max( ( MUC / ( Max( ( ( MUR + DS ) / RRSe ),CS ) / Min( ( MLU + RRSe ) ,MLU ) ) ),MUR ) )", "obj1": 0.46613545816733065, "obj2": 0.4452467137788934}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_RAM_Server - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( ( AMS + Min( Const ,FirstVNF_CPU_Server ) ),( DDR / CRS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( RRSe + CS ) ,( Min( MLU ,( ( ( MUR - RMSe ) + RCSe ) * CS ) ) / RCSe ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "( Min( MDR ,( AMS - Min( RRS ,CRS ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( ( ( ( ( MLU - ( RCSe + RMSe ) ) + DS ) + DS ) * ( ( ( MUC - Min( CS ,MUC ) ) / ( ( MLU - MUC ) - Max( MLU,RCSe ) ) ) + ( Min( RMSe ,( RCSe - MLU ) ) * DS ) ) ) * RRSe ) + MUM ) )", "obj1": 0.41832669322709165, "obj2": 0.48018406379672135}, {"determining": "Max( ( ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - Max( RRS,ACS ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - ( FirstVNF_CPU_Server / ( MDR * MRS ) ) ) + ( ( DDR * ARS ) / Min( FirstVNF_RAM_Server ,BR ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( DS / MLU ) ) ) + Max( ( MLU * MUR ),( MUM * MUC ) ) )", "obj1": 0.5378486055776892, "obj2": 0.436389909613994}, {"determining": "Max( ( ( FirstVNF_RAM / MRS ) / ( ( ( ( BR * Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) ) / Max( CRS,FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) ),( ( ARS + ACS ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( MUM / Max( RMSe,Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.7547477287777524}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem_Server ,MRS ) + Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.3545816733067729, "obj2": 0.5481748961816791}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( ( MUC / MUC ) + ( MLU * MUC ) ) )", "obj1": 0.3804780876494024, "obj2": 0.5229352016555334}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( ( FirstVNF_Mem_Server * DDR ) * RRS ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.21314741035856574, "obj2": 0.7391377916332108}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + Min( ARS ,Min( MRS ,( MRS / ( MDR * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) )", "obj1": 0.5557768924302788, "obj2": 0.3812521587951012}, {"determining": "( ( FirstVNF_CPU * Min( ( PN + Max( BR,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( BR * PN ) ) )", "choosing": "( ( ( MUC - MUM ) / Max( RCSe,RCSe ) ) - ( Max( RCSe,MUR ) * ( CS + MLU ) ) )", "obj1": 0.9043824701195219, "obj2": 0.08973190428266728}, {"determining": "Max( ( ACS - FirstVNF_Mem ),( ( FirstVNF_RAM / MRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / ( MUR - Max( RMSe,RMSe ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.6042451847918193}, {"determining": "( ( MRS + ACS ) - Max( ( ( DDR / Min( ( Const / MRS ) ,( ( ( FirstVNF_Mem / DDR ) * Const ) / BR ) ) ) * AMS ),FirstVNF_CPU ) )", "choosing": "( Min( MUR ,Max( DS,RMSe ) ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS - MUC ) / Max( MLU,DS ) ) - Max( Min( RRSe ,DS ),( RMSe + RRSe ) ) )", "obj1": 0.9721115537848606, "obj2": 0.03944024474427939}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( Min( MUC ,MUR ) / ( CS / MLU ) ) * Max( ( MUC + CS ),( RMSe + MLU ) ) )", "obj1": 0.9203187250996016, "obj2": 0.08337532311489639}, {"determining": "( ( CRS - BR ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * ACS ) * ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.7908366533864541, "obj2": 0.177027968775808}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5816733067729084, "obj2": 0.36505008267826733}, {"determining": "( Max( FirstVNF_RAM,Const ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - Max( RCSe,MUR ) ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6305953648733944}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( ( ACS * PN ),FirstVNF_CPU ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( ( Min( ( FirstVNF_Mem - ACS ) ,( ( PN * Max( ( PN + ( MDR / FirstVNF_Mem ) ),FirstVNF_Mem_Server ) ) - FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RCSe + RMSe ) ) / ( ( MUC - MUM ) / ( MUC / MUR ) ) ) + Max( CS,CS ) )", "obj1": 0.9243027888446215, "obj2": 0.06371266053393103}, {"determining": "( Min( ( Const + ARS ) ,Min( ( FirstVNF_RAM - CRS ) ,Const ) ) * ( ( FirstVNF_Mem_Server * DDR ) * RRS ) )", "choosing": "( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( ( ( MLU + DS ) * RCSe ) - Max( CS,CS ) ) )", "obj1": 0.27689243027888444, "obj2": 0.6097084970609586}, {"determining": "( ( DDR + DDR ) * ( ( RRS * AMS ) / ( ( FirstVNF_RAM_Server * Max( AMS,( PN / Max( BR,Max( MRS,Const ) ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.30278884462151395, "obj2": 0.5752047006073537}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ),( Min( ( FirstVNF_Mem - CRS ) ,( DDR - Max( BR,( FirstVNF_Mem_Server + MDR ) ) ) ) + MRS ) )", "choosing": "( ( MUR + Min( RRSe ,( ( RMSe - MUC ) * CS ) ) ) / Min( ( MUM + ( Min( ( Max( ( MLU - CS ),Min( MLU ,DS ) ) / CS ) ,( DS - CS ) ) + ( ( MUM * DS ) - ( MLU + Max( MUR,DS ) ) ) ) ) ,( RCSe + MUR ) ) )", "obj1": 0.2749003984063745, "obj2": 0.6263109795597088}, {"determining": "Min( ( ( ARS * FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),Max( Max( FirstVNF_Mem,ACS ),( ARS - ( FirstVNF_RAM_Server - ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( DS / ( CS + MUM ) ) ,Max( Min( Min( MUM ,RCSe ) ,( RRSe / CS ) ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( Max( MRS,ACS ) - ( ( BR * PN ) - Min( PN ,( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Min( ACS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( Max( CS,RMSe ) + RRSe ) ) )", "obj1": 0.30876494023904383, "obj2": 0.571140008935383}, {"determining": "Max( Max( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( MRS - PN ) ),Max( ( ARS - ARS ),Max( PN,AMS ) ) ),( ( ( MRS / FirstVNF_CPU ) + ( RRS * MDR ) ) - Min( ( MDR * PN ) ,Max( Const,Const ) ) ) )", "choosing": "( ( ( ( MLU / MUM ) - Max( MUR,RCSe ) ) + ( ( RMSe - MUR ) / ( DS - MUC ) ) ) / Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5669098199463596}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( ACS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( MUR ,RRSe ) )", "obj1": 0.9840637450199203, "obj2": 0.019928659531262806}, {"determining": "( ( Const + PN ) * Max( BR,Const ) )", "choosing": "Max( ( MUC / DS ),Max( DS,MUR ) )", "obj1": 0.2250996015936255, "obj2": 0.7313924666541383}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( Const ,AMS ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,( CS * RCSe ) ) - ( MUM - MUC ) )", "obj1": 0.5617529880478087, "obj2": 0.3805890223217095}, {"determining": "( ( ( ( FirstVNF_Mem_Server - MRS ) * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Max( MDR,CRS ) + Min( AMS ,FirstVNF_Mem_Server ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Max( ( ( ( MLU + RRSe ) * MLU ) + Max( ( MLU - RMSe ),( RRSe / ( MUC + MLU ) ) ) ),MLU ) - MUM )", "obj1": 0.9880478087649402, "obj2": 0.004834159480369261}, {"determining": "Max( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Max( RRS,ACS ) ) * ( Max( BR,Const ) * Min( FirstVNF_Mem_Server ,AMS ) ) ),( ACS / Min( ( ARS / Const ) ,( PN - RRS ) ) ) )", "choosing": "( ( Max( ( RMSe + MUR ),Max( MUC,RCSe ) ) * ( ( CS * CS ) * ( RCSe / MLU ) ) ) + Max( Max( RMSe,CS ),( MUM * MUC ) ) )", "obj1": 0.5378486055776892, "obj2": 0.436389909613994}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5697211155378487, "obj2": 0.3679148806335169}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - BR ) ) ,Min( Min( DDR ,( ( FirstVNF_Mem - AMS ) / ( ( PN + AMS ) + MRS ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RRSe ,MUM ),( MUR / RMSe ) ) - Max( ( MUR + ( MLU - RRSe ) ),Min( DS ,MUC ) ) )", "obj1": 0.9282868525896414, "obj2": 0.05571946220387699}, {"determining": "( Max( FirstVNF_RAM,Max( CRS,Max( Max( FirstVNF_CPU,CRS ),CRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / ( MLU + Min( MUC ,CS ) ) ) / ( MUC * Min( ( Min( MUR ,CS ) / Min( ( CS / Min( RRSe ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + Min( ARS ,Min( MRS ,( MRS / ( MDR * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) )", "obj1": 0.5557768924302788, "obj2": 0.3812521587951012}, {"determining": "( ( ( RRS * AMS ) / ( ( FirstVNF_RAM_Server * Max( AMS,( PN / Max( BR,Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) ) * ( DDR / DDR ) )", "choosing": "Min( Min( Min( RMSe ,( DS / MUC ) ) ,CS ) ,Min( Max( ( RMSe + MLU ),MUC ) ,Max( ( MUR * RRSe ),DS ) ) )", "obj1": 0.30278884462151395, "obj2": 0.5752047006073537}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( FirstVNF_Mem ,MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / DS ) * Min( MLU ,MUC ) )", "obj1": 0.9800796812749004, "obj2": 0.026998738640769553}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ACS * DDR ) ) ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "Min( ( ( CS - MUR ) * Min( ( RCSe - ( RRSe * MUR ) ) ,RMSe ) ) ,Max( DS,Min( CS ,CS ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0031883942855328935}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( PN - Min( FirstVNF_RAM_Server ,AMS ) ) )", "choosing": "( ( DS / MUM ) + ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( RMSe * RMSe ) ) ) ),MUM ) ) / Min( Max( MUM,Max( MUR,CS ) ) ,MUM ) ) )", "obj1": 0.9382470119521913, "obj2": 0.046001778917689404}, {"determining": "( Min( FirstVNF_CPU ,( ( ( ( ( PN - FirstVNF_RAM_Server ) + CRS ) + ARS ) - PN ) / RRS ) ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,Min( Min( MUM ,MUR ) ,MUR ) ) * ( MLU / RCSe ) )", "obj1": 0.9800796812749004, "obj2": 0.026998738640769553}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( CS + CS ) - CS ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( MLU / RRSe ) + ( RCSe - MUC ) )", "obj1": 0.9322709163346613, "obj2": 0.05107925732869157}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server )", "choosing": "( ( DS / MUM ) + Min( RMSe ,( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.05054636008285348}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + Min( ARS ,Min( MRS ,( MRS / ( MDR * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) )", "obj1": 0.5697211155378487, "obj2": 0.3679148806335169}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Const ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( RCSe - Max( RRSe,( DS - ( ( ( CS - CS ) + MUR ) / ( ( ( CS / RRSe ) + MUC ) + ( MLU / ( DS - MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) * ( Min( ( ( ( ACS * Const ) + Min( ARS ,FirstVNF_CPU ) ) - ( BR * FirstVNF_RAM ) ) ,( FirstVNF_CPU - ( ( ACS - FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) - PN ) )", "choosing": "( ( Max( ( Max( MUC,MLU ) - RRSe ),CS ) * DS ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( CRS + MDR ),DDR ) + FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Min( ( MUR / MUR ) ,MUR ) * ( Max( MUM,Min( ( RMSe * RRSe ) ,RMSe ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_Mem + DDR ) ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,( MUR / MUC ) ) ,( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) )", "choosing": "Max( Max( ( MUM * CS ),( RRSe / RCSe ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) - ( ( MDR - BR ) - ( Min( RRS ,BR ) * ACS ) ) )", "choosing": "Max( ( ( ( ( DS + ( RMSe / ( MUR * ( MLU - RCSe ) ) ) ) - Max( RCSe,( DS - MUM ) ) ) / ( ( ( MLU + ( MLU * MLU ) ) - ( ( ( MUC * CS ) - Max( CS,MLU ) ) / MLU ) ) * RCSe ) ) * MLU ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_RAM + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,Min( Max( ( Min( MRS ,DDR ) / FirstVNF_CPU_Server ),FirstVNF_Mem ) ,ARS ) ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Max( RRSe,Min( ( RCSe * ( MLU - Min( MUC ,MUC ) ) ) ,MUC ) ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( DS + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Max( Max( FirstVNF_CPU_Server,( DDR * ( DDR + ( ACS + FirstVNF_RAM_Server ) ) ) ),ACS ) ,Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * ( MUR - ( MUM - RMSe ) ) ) + Min( ( ( DS * RCSe ) + ( MUC - RCSe ) ) ,Max( ( RMSe + CS ),( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( AMS * FirstVNF_RAM ) )", "choosing": "Max( ( MUM / RCSe ),( ( MLU + Max( ( MUC + RCSe ),MLU ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + BR ) * ( MDR / ( MDR * BR ) ) ) - ( ACS / ARS ) )", "choosing": "( ( MUC / CS ) + ( ( ( DS / MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) ) ) )", "choosing": "Max( ( RMSe - ( CS + CS ) ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MRS ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,( ( MDR * ( ACS - FirstVNF_Mem ) ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + ( Min( MUR ,DS ) / ( RMSe + MUM ) ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / ( MLU + ( CS + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / Min( AMS ,MRS ) ) + Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( FirstVNF_Mem + DDR ) ) ,Min( ( CRS * CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR / ( MLU - RCSe ) ) / MUM ) / RCSe ) / Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem / ( ACS + RRS ) ) ) ,ACS ) * Max( ( PN * BR ),Min( PN ,( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Min( ACS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( CS * RMSe ) + RRSe ) * ( RMSe / ( MUM - ( ( CS * Min( ( Min( RRSe ,MUC ) - CS ) ,( ( MUM - DS ) + RRSe ) ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ARS ,RRS ) - ( MRS - BR ) ) ,( Max( MRS,( Const - ( MRS + FirstVNF_RAM_Server ) ) ) - ( DDR - FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( MUM / ( ( MUR / MLU ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( FirstVNF_CPU_Server ,BR ) * ( Const / Const ) ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( AMS ,Max( Min( ( Min( ARS ,RRS ) - ( MRS - BR ) ) ,( Max( AMS,MRS ) - ( MRS - FirstVNF_CPU_Server ) ) ),( Max( Max( FirstVNF_CPU,FirstVNF_CPU_Server ),( RRS / FirstVNF_RAM ) ) / ( Max( MRS,RRS ) / Min( Const ,FirstVNF_Mem ) ) ) ) ) / ( MDR / PN ) ) ) )", "choosing": "Max( Min( RRSe ,MUC ),Max( ( Min( Max( RCSe,CS ) ,Min( MUR ,MUR ) ) * Min( Max( MUM,MUR ) ,( RMSe - MLU ) ) ),( ( ( MUC + CS ) - Min( MLU ,MUM ) ) * ( Min( CS ,DS ) + Max( MUR,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,( BR + Const ) ) * ( ( BR * PN ) - Min( PN ,( FirstVNF_RAM / Min( ACS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( CS,RMSe ) + RRSe ) * ( RMSe / ( Min( MUR ,RRSe ) - ( ( Min( ( Min( RRSe ,MUC ) - CS ) ,RRSe ) * CS ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,( BR + Const ) ) * ( ( BR * PN ) - Min( PN ,( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Min( ACS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( MDR - ACS ) ) / ( ( Max( ( FirstVNF_Mem - PN ),FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR * RMSe ),( RCSe / MUC ) ) + Max( ( MUR * MLU ),( RRSe * ( DS / ( MUC * ( MUM * ( DS + RRSe ) ) ) ) ) ) ) - Max( ( ( MUM - MUM ) / ( MUC / RMSe ) ),( ( MUM - MUM ) / ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( MDR - ACS ) ) / ( ( Max( ( FirstVNF_Mem - PN ),FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR * RMSe ),( RCSe / MUC ) ) + Max( ( MUR * MLU ),( RRSe * ( DS / ( MUC * ( MUM * ( DS + RRSe ) ) ) ) ) ) ) - Max( ( ( MUM - MUM ) / ( MUC / RMSe ) ),( ( MUM - MUM ) / ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( MDR - ACS ) ) / ( ( Max( ( FirstVNF_Mem - PN ),FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR * RMSe ),( RCSe / MUC ) ) + Max( ( MUR * MLU ),( RRSe * ( DS / ( MUC * ( MUM * ( DS + RRSe ) ) ) ) ) ) ) - Max( ( ( MUM - MUM ) / ( MUC / RMSe ) ),( ( MUM - MUM ) / ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - ACS ) ) / ( ( Max( Max( CRS,( FirstVNF_Mem - DDR ) ),FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR * RMSe ),( RCSe / MUC ) ) + Max( ( MLU * MLU ),( RRSe * ( DS / ( MUC * ( MUM * Max( RMSe,DS ) ) ) ) ) ) ) - Max( ( ( MUM - MUM ) / ( RMSe / MUC ) ),( ( MUM - MUM ) / ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * ( PN + FirstVNF_CPU ) ) + BR ) - Min( ( ( AMS - MDR ) / Max( FirstVNF_RAM_Server,BR ) ) ,AMS ) )", "choosing": "Min( ( ( RMSe - MUC ) * MUC ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RRSe * MUC ) ,Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / MRS ) - ( FirstVNF_RAM / ACS ) )", "choosing": "( Min( MUR ,RRSe ) / Min( Min( RCSe ,CS ) ,( MLU * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( FirstVNF_RAM_Server - ( RRS / ACS ) ) )", "choosing": "Max( ( MUM / MUM ),Min( ( MLU * MUR ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) - ( ( MDR - BR ) - ( Min( RRS ,BR ) * ACS ) ) )", "choosing": "Max( ( ( ( ( DS + ( RMSe / ( MUR * ( MLU - RCSe ) ) ) ) - Max( RCSe,( DS - MUM ) ) ) / ( ( ( MLU + ( MLU * MLU ) ) - ( ( ( MUC * CS ) - Max( CS,MLU ) ) / MLU ) ) * RCSe ) ) * MLU ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) - ( ( MDR - BR ) - ( Min( RRS ,BR ) * ACS ) ) )", "choosing": "Max( ( ( ( ( DS + ( RMSe / ( MUR * ( MLU - RCSe ) ) ) ) - Max( RCSe,( DS - MUM ) ) ) / ( ( ( MLU + ( MLU * MLU ) ) - ( ( ( MUC * CS ) - Max( CS,MLU ) ) / MLU ) ) * RCSe ) ) * MLU ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) - ( ( MDR - BR ) - ( Min( RRS ,BR ) * ACS ) ) )", "choosing": "Max( ( ( ( ( DS + ( RMSe / ( MUR * ( MLU - RCSe ) ) ) ) - Max( RCSe,( DS - MUM ) ) ) / ( ( ( MLU + ( MLU * MLU ) ) - ( ( ( MUC * CS ) - Max( CS,MLU ) ) / MLU ) ) * RCSe ) ) * MLU ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( ( Min( RRS ,Max( FirstVNF_CPU_Server,ACS ) ) / ACS ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR / RMSe ) / MUM ),Min( Max( MLU,MUR ) ,Min( DS ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,RRS ) ,( MDR / PN ) ) - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( Min( MUM ,DS ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,RRS ) ,( ( Const - Const ) - ( ACS / ARS ) ) )", "choosing": "( Min( MUM ,( ( DS * MUR ) / Max( MUC,RRSe ) ) ) - Max( MUM,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( ( Const - Const ),PN ) ) ) + ( Const + DDR ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / Max( ( RCSe / RRSe ),MUM ) ) + ( ( ( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( Min( ( DS * MUR ) ,Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ( CRS + CRS ) / ARS ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( ( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) ) / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Const ) - ( ACS / ARS ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( RCSe / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server - ( PN - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( MUR / RMSe ) / MUM ),Min( ( MLU * ( RMSe / RRSe ) ) ,Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_RAM_Server - ( Min( ( Max( PN,FirstVNF_CPU ) + Max( RRS,Const ) ) ,RRS ) / ACS ) ) ) * ( ( AMS - RRS ) + ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + MDR ) ) )", "choosing": "( Max( Max( MUR,( ( MLU / RCSe ) - RCSe ) ),( MLU - MUR ) ) + ( RMSe - ( MUM / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7734650087885288}, {"determining": "( ( PN * ( MDR - ACS ) ) / ( ( Max( ( FirstVNF_Mem - PN ),FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR * RMSe ),( RCSe / MUC ) ) + Max( ( MUR * MLU ),( RRSe * ( DS / ( MUC * ( MUM * ( DS + RRSe ) ) ) ) ) ) ) - Max( ( ( MUM - MUM ) / ( MUC / RMSe ) ),( ( MUM - MUM ) / ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( MDR * ACS ) ) / ( ( Max( ( ( MRS + Max( ( AMS - ACS ),ARS ) ) - ( FirstVNF_Mem / AMS ) ),FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) )", "choosing": "( ( Max( ( DS / MUC ),( MUR * RMSe ) ) + Max( ( MUR * MLU ),( MLU * ( DS / ( MUC * Max( ( RCSe + DS ),MLU ) ) ) ) ) ) - Max( ( ( MUM - MUM ) / ( MUC / RMSe ) ),( ( MUM - MUM ) / ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7734650087885288}, {"determining": "( ( ( Min( PN ,ACS ) - Min( FirstVNF_CPU ,ACS ) ) / ( ( FirstVNF_CPU_Server * RRS ) - ( ARS * ACS ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( MUR - MUC ) )", "obj1": 0.7888446215139442, "obj2": 0.1902284231104322}, {"determining": "( ( BR - AMS ) - ( ( Min( RRS ,Max( FirstVNF_CPU_Server,ACS ) ) / ACS ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR / RMSe ) / MUM ),Min( Max( MLU,MUR ) ,Min( DS ,CS ) ) )", "obj1": 0.6713147410358565, "obj2": 0.2829416077216144}, {"determining": "( ( BR - AMS ) - ( ( Min( RRS ,Max( FirstVNF_CPU_Server,ACS ) ) / ACS ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR / RMSe ) / MUM ),Min( Max( MLU,MUR ) ,Min( DS ,CS ) ) )", "obj1": 0.6713147410358565, "obj2": 0.2829416077216144}, {"determining": "Min( ( FirstVNF_RAM - Min( FirstVNF_CPU ,( ( ( ( Min( RRS ,CRS ) + CRS ) + ARS ) - AMS ) / RRS ) ) ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( MLU / RRSe ) + ( Min( MUR ,Min( Min( ( ( MUC - RCSe ) - ( MUC / DS ) ) ,( DS / Max( RMSe,( RMSe - MUM ) ) ) ) ,RCSe ) ) - MUC ) )", "obj1": 0.599601593625498, "obj2": 0.3440565927786139}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.8107569721115537, "obj2": 0.12937908296964354}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6518781701297325}, {"determining": "Max( ( ( FirstVNF_RAM / MRS ) / ( ( ( ( BR * Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) ) / Max( CRS,FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) ),( ( ARS + ACS ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( MUM / Max( RMSe,Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.72778181263254}, {"determining": "( ( ( Max( ARS,( BR + ( BR * FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,Const ) ) - Max( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ),( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( Max( ( ( RMSe + DS ) * MUM ),MUM ) + MLU ) - MUM )", "obj1": 0.5298804780876494, "obj2": 0.3566574716785487}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( ( ( ( CS - RMSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) ) - ( MUM - MUC ) )", "obj1": 0.5258964143426295, "obj2": 0.4098406151013577}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + Min( ARS ,Min( MRS ,( MRS / ( MDR * MDR ) ) ) ) ) + ( MDR + FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 0.4940239043824701, "obj2": 0.4156409048707243}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( MDR ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_CPU_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * ( ACS + PN ) ) / ( ( FirstVNF_CPU / ACS ) - Max( AMS,PN ) ) ) )", "choosing": "( ( ( CS - RMSe ) - ( MUR / CS ) ) / ( MUM + Min( ( Min( Max( Min( CS ,RRSe ),Min( ( MUC * RMSe ) ,MLU ) ) ,DS ) * RCSe ) ,CS ) ) )", "obj1": 0.4601593625498008, "obj2": 0.43849282432434855}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( RCSe / MLU ) * ( ( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) ) / MUR ) ) ,Min( Max( MUM,RRSe ) ,( RMSe * MUC ) ) ) + ( ( ( DS * MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 0.8585657370517928, "obj2": 0.1082761914009864}, {"determining": "( ( Const + PN ) * Max( BR,Const ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.35258964143426297, "obj2": 0.5326826045704388}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( Const ,AMS ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.49816580309887615}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) ) - ( ( ( AMS + ( AMS - ( FirstVNF_Mem / FirstVNF_Mem ) ) ) * ( AMS - PN ) ) / CRS ) )", "choosing": "Max( ( ( ( ( Max( ( ( MUM / RMSe ) + RCSe ),Max( DS,CS ) ) + ( Max( Max( RCSe,CS ),RCSe ) + ( CS * ( RMSe / DS ) ) ) ) - CS ) + MUC ) / RCSe ),RCSe )", "obj1": 0.5657370517928287, "obj2": 0.35064380693809155}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC * ( Min( ( RRSe / CS ) ,Min( MUM ,CS ) ) / Max( ( MUM - RMSe ),( MUR - MLU ) ) ) ) ,Max( MLU,MUC ) )", "obj1": 0.8007968127490039, "obj2": 0.15934134352264545}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.47931827335345895}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem_Server ,( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( Const ,AMS ) ) ) + Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS - CS ) ,Max( Max( MUR,( CS * RCSe ) ),( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5991749089840395}, {"determining": "Min( ( ( FirstVNF_RAM / MRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - ( MUM / ( MUR - Max( RMSe,RMSe ) ) ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4700867310952552}, {"determining": "( ( FirstVNF_CPU * Min( ( PN + Max( BR,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( BR * PN ) ) )", "choosing": "( ( ( MUC - MUM ) / Max( RCSe,RCSe ) ) - ( Max( RCSe,MUR ) * ( CS + MLU ) ) )", "obj1": 0.9043824701195219, "obj2": 0.08973190428266728}, {"determining": "( ( DDR + DDR ) * ( ( RRS * AMS ) / ( ( FirstVNF_RAM_Server * Max( AMS,( PN / Max( BR,Max( MRS,Const ) ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC / DS ),Max( DS,MUR ) )", "obj1": 0.17729083665338646, "obj2": 0.7497198575793084}, {"determining": "( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),BR ) - Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( ( ( ( DS + ( ( MUR * ( MLU - RCSe ) ) / RMSe ) ) - Max( RCSe,( ( ( MLU / DS ) / ( RMSe * RRSe ) ) - MUM ) ) ) / CS ) ,DS ) / ( MUC + MUM ) )", "obj1": 0.350597609561753, "obj2": 0.5563719218726999}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( ( ACS * PN ),FirstVNF_CPU ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( Const + PN ) * Max( BR,Const ) )", "choosing": "( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.21115537848605578, "obj2": 0.7412568482990539}, {"determining": "( Min( ( CRS / MRS ) ,MDR ) + ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,RRSe ) / RCSe ) )", "obj1": 0.9701195219123506, "obj2": 0.030731110912661952}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU / MUM ) - Max( MUR,RCSe ) ) + ( ( RMSe - MUR ) / ( DS - MUC ) ) ) / Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.06813162413426503}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - MUC ) )", "obj1": 0.5856573705179283, "obj2": 0.3442526250685409}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) ) )", "obj1": 0.9800796812749004, "obj2": 0.01101872112633556}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.44223107569721115, "obj2": 0.452420450384037}, {"determining": "( Min( ( Const + ARS ) ,Min( ( FirstVNF_RAM - CRS ) ,Const ) ) * ( ( FirstVNF_Mem_Server * DDR ) * RRS ) )", "choosing": "( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( ( ( MLU + DS ) * RCSe ) - Max( CS,CS ) ) )", "obj1": 0.27689243027888444, "obj2": 0.6097084970609586}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / ( MUR - Max( RMSe,RMSe ) ) ) )", "obj1": 0.4402390438247012, "obj2": 0.45571995130332404}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 0.8685258964143426, "obj2": 0.09472903446082946}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( DS + CS ) ,Max( ( Max( RCSe,( Min( MUR ,( Max( DS,RMSe ) * ( MLU / RMSe ) ) ) / ( RMSe * RRSe ) ) ) - ( MUM + CS ) ),MUC ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "( Max( MRS,ACS ) - ( ( BR * PN ) - Min( PN ,( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Min( ACS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( Max( CS,RMSe ) + RRSe ) ) )", "obj1": 0.30876494023904383, "obj2": 0.571140008935383}, {"determining": "( Max( FirstVNF_RAM,Const ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - Max( RCSe,MUR ) ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6305953648733944}, {"determining": "( ( DDR + DDR ) * ( ( RRS * AMS ) / ( ( FirstVNF_RAM_Server * Max( AMS,( Min( Max( PN,PN ) ,FirstVNF_CPU_Server ) + Max( BR,Max( Const,MRS ) ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU + RMSe ) ,( DS - CS ) )", "obj1": 0.30278884462151395, "obj2": 0.5752047006073537}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.9760956175298805, "obj2": 0.030226205004650626}, {"determining": "( ( MRS + ACS ) - Max( ( ( DDR / Min( ( Const / MRS ) ,( ( ( FirstVNF_Mem / DDR ) * Const ) / BR ) ) ) * AMS ),FirstVNF_CPU ) )", "choosing": "( Min( MUR ,Max( DS,RMSe ) ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "( ( CRS - BR ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ACS ) * ( FirstVNF_Mem_Server + ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + ( ( ( Max( MUM,MUC ) / MLU ) - ( Max( MUR,DS ) * RCSe ) ) / MLU ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.1756052131359764}, {"determining": "( Min( MRS ,ACS ) / Min( ( Min( RRS ,Max( FirstVNF_Mem,FirstVNF_RAM ) ) * FirstVNF_RAM ) ,ACS ) )", "choosing": "( ( ( MUM * RMSe ) / ( RRSe * DS ) ) * ( ( ( ( ( RMSe - RCSe ) - ( MUM + MUR ) ) + MUC ) * CS ) - ( MLU / RRSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.7547477287777524}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( CS + CS ) - CS ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) ) - CS ) )", "obj1": 0.8645418326693227, "obj2": 0.0956533093227369}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) )", "obj1": 0.9143426294820717, "obj2": 0.06102475116294416}, {"determining": "( ( DDR + DDR ) * ( ( RRS * AMS ) / ( ( FirstVNF_RAM_Server * Max( AMS,( PN / Max( BR,Max( MRS,Const ) ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.30278884462151395, "obj2": 0.5752047006073537}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ),( Min( ( FirstVNF_Mem - CRS ) ,( DDR - Max( BR,( FirstVNF_Mem_Server + MDR ) ) ) ) + MRS ) )", "choosing": "( ( MUR + Min( RRSe ,( ( RMSe - MUC ) * CS ) ) ) / Min( ( MUM + ( Min( ( Max( ( MLU - CS ),Min( MLU ,DS ) ) / CS ) ,( DS - CS ) ) + ( ( MUM * DS ) - ( MLU + Max( MUR,DS ) ) ) ) ) ,( RCSe + MUR ) ) )", "obj1": 0.2749003984063745, "obj2": 0.6263109795597088}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.49463728167431414}, {"determining": "Max( ( ( FirstVNF_RAM / MRS ) / ( ( ( ( BR * Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) ) / Max( CRS,FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) ),( ( ARS + ACS ) + Min( BR ,MRS ) ) )", "choosing": "( ( RRSe / DS ) * Min( MLU ,MUC ) )", "obj1": 0.21713147410358566, "obj2": 0.7310781226604245}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Max( ( ( MUR / RMSe ) / MUM ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5642018644200404}, {"determining": "( ( CRS - BR ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * ACS ) * ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.7908366533864541, "obj2": 0.177027968775808}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.7547477287777524}, {"determining": "Max( ( ( FirstVNF_RAM / CRS ) / ( ( FirstVNF_Mem_Server * DDR ) * RRS ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) )", "choosing": "( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * MUR ) / ( RRSe * DS ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.21314741035856574, "obj2": 0.7391377916332108}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - BR ) ) ,Min( Min( DDR ,( ( FirstVNF_Mem - AMS ) / ( ( PN + AMS ) + MRS ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RRSe ,MUM ),( MUR / RMSe ) ) - Max( ( MUR + ( MLU - RRSe ) ),Min( DS ,MUC ) ) )", "obj1": 0.9282868525896414, "obj2": 0.05571946220387699}, {"determining": "( Max( ( DDR + FirstVNF_Mem_Server ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) / ( ACS * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - Max( RCSe,( MUM / Min( DS ,MLU ) ) ) ) ,MUR )", "obj1": 0.2689243027888446, "obj2": 0.6269543050524677}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( PN - Min( FirstVNF_RAM_Server ,AMS ) ) )", "choosing": "( ( DS / MUM ) + ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( RMSe * RMSe ) ) ) ),MUM ) ) / Min( Max( MUM,Max( MUR,CS ) ) ,MUM ) ) )", "obj1": 0.9382470119521913, "obj2": 0.046001778917689404}, {"determining": "( ( PN * ( MDR - ACS ) ) / ( ( Min( PN ,FirstVNF_CPU_Server ) * ( Min( ( ( ( ACS * Const ) + Min( ARS ,FirstVNF_CPU ) ) - ( BR * FirstVNF_RAM ) ) ,( FirstVNF_CPU - ( ( ACS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ) ) - PN ) ) / FirstVNF_Mem ) )", "choosing": "( CS - Max( ( ( MUM - MUM ) / ( MUC / RMSe ) ),( ( MUM - MUM ) / ( RMSe * CS ) ) ) )", "obj1": 0.9940239043824701, "obj2": 0.0024151544581157863}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - MUM )", "obj1": 0.9880478087649402, "obj2": 0.004834159480369261}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_Mem + DDR ) ) - Max( ACS,ACS ) )", "choosing": "Max( ( ( MUM * DS ) - ( Min( CS ,RCSe ) + DS ) ),Min( Min( RRSe ,( MUR / MUC ) ) ,( RMSe - MUR ) ) )", "obj1": 0.9302788844621513, "obj2": 0.05214659282049641}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - BR ) ) ,Min( Min( DDR ,( ( FirstVNF_Mem - AMS ) / ( ( PN + AMS ) + MRS ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RRSe ,MUM ),( MUR / RMSe ) ) - Max( ( MUR + ( MLU - RRSe ) ),Min( DS ,MUC ) ) )", "obj1": 0.9223107569721115, "obj2": 0.058474618703944534}, {"determining": "( ( ( ( FirstVNF_Mem_Server - MRS ) * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Max( MDR,CRS ) + Min( AMS ,FirstVNF_Mem_Server ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Max( ( ( ( MLU + RRSe ) * MLU ) + Max( ( MLU - RMSe ),( RRSe / ( MUC + MLU ) ) ) ),MLU ) - MUM )", "obj1": 0.9880478087649402, "obj2": 0.004834159480369261}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ),( Min( ( FirstVNF_Mem - CRS ) ,( DDR - Max( BR,FirstVNF_RAM ) ) ) * MRS ) )", "choosing": "Max( ( ( MUR / RMSe ) / MUM ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5642018644200404}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) )", "choosing": "( ( Max( RCSe,MUC ) / ( RCSe * RCSe ) ) - ( Max( MUR,RCSe ) * ( CS + MLU ) ) )", "obj1": 0.9043824701195219, "obj2": 0.08973190428266728}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 0.8685258964143426, "obj2": 0.09472903446082946}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_RAM_Server - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( ( AMS + Min( Const ,FirstVNF_CPU_Server ) ),( DDR / CRS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( RRSe + CS ) ,( Min( MLU ,( ( ( MUR - RMSe ) + RCSe ) * CS ) ) / RCSe ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "Min( ( FirstVNF_Mem - ( FirstVNF_Mem / ( MRS + ( DDR / FirstVNF_Mem ) ) ) ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,DS ) / ( Min( MUR ,RCSe ) + ( Min( MUR ,RMSe ) / Min( RMSe ,MUM ) ) ) ) + ( ( Max( MUC,MUR ) + ( DS * ( Min( MUR ,MUC ) * MUC ) ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.04857800847989924}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - BR ) ) ,Min( Min( DDR ,( ( FirstVNF_Mem - AMS ) / ( ( PN + AMS ) + MRS ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RRSe ,MUM ),( MUR / RMSe ) ) - Max( ( MUR + ( MLU - RRSe ) ),Min( DS ,MUC ) ) )", "obj1": 0.9223107569721115, "obj2": 0.058474618703944534}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_Mem,Const ) ,( BR * MDR ) ) ) )", "choosing": "( Max( ( ( MUC - ( RMSe * RRSe ) ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Max( DS,RCSe ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9322709163346613, "obj2": 0.04874449438740727}, {"determining": "Max( Min( FirstVNF_CPU ,MDR ),( Min( MDR ,FirstVNF_Mem ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / DS ) * Min( MLU ,MUC ) )", "obj1": 0.21713147410358566, "obj2": 0.7310781226604245}, {"determining": "Min( ( ( ARS * FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),Max( Max( FirstVNF_Mem,ACS ),( ARS - ( FirstVNF_RAM_Server - ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( DS / ( CS + MUM ) ) ,Max( Min( Min( MUM ,RCSe ) ,( RRSe / CS ) ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( ( ( FirstVNF_Mem_Server - MRS ) * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Max( MDR,CRS ) + Min( AMS ,FirstVNF_Mem_Server ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Max( ( ( ( MLU + RRSe ) * MLU ) + Max( ( MLU - RMSe ),( RRSe / ( MUC + MLU ) ) ) ),MLU ) - MUM )", "obj1": 0.99800796812749, "obj2": 0.0007405193454841818}, {"determining": "( ( ( ( FirstVNF_Mem_Server * MRS ) * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Max( MDR,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Max( ( ( ( MLU + RRSe ) * MUM ) + Max( ( MLU - RMSe ),RCSe ) ),MLU ) - MUM )", "obj1": 0.99800796812749, "obj2": 0.0007405193454841818}, {"determining": "Max( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * MDR ),( Min( ( FirstVNF_Mem - CRS ) ,( MDR * FirstVNF_Mem ) ) * MRS ) )", "choosing": "( Max( MUR,Min( RRSe ,( ( MUC + MUR ) * CS ) ) ) / Min( ( MLU + MUM ) ,( RCSe + MUR ) ) )", "obj1": 0.2749003984063745, "obj2": 0.6263109795597088}, {"determining": "( ( CRS + Max( ( FirstVNF_CPU + CRS ),FirstVNF_CPU ) ) / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( Min( ( MUC * MUR ) ,RCSe ) * ( RRSe - ( CS - Max( MUR,( ( ( RRSe * RCSe ) + ( RCSe - RMSe ) ) - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Const ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( RCSe - Max( RRSe,( DS - ( ( ( CS - CS ) + MUR ) / ( ( ( CS / RRSe ) + MUC ) + ( MLU / ( DS - MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) * ( Min( ( ( ( ACS * Const ) + Min( ARS ,FirstVNF_CPU ) ) - ( BR * FirstVNF_RAM ) ) ,( FirstVNF_CPU - ( ( ACS - FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) - PN ) )", "choosing": "( ( Max( ( Max( MUC,MLU ) - RRSe ),CS ) * DS ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( CRS + MDR ),DDR ) + FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Min( ( MUR / MUR ) ,MUR ) * ( Max( MUM,Min( ( RMSe * RRSe ) ,RMSe ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_Mem + DDR ) ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,( MUR / MUC ) ) ,( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) )", "choosing": "Max( Max( ( MUM * CS ),( RRSe / RCSe ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) - ( ( MDR - BR ) - ( Min( RRS ,BR ) * ACS ) ) )", "choosing": "Max( ( ( ( ( DS + ( RMSe / ( MUR * ( MLU - RCSe ) ) ) ) - Max( RCSe,( DS - MUM ) ) ) / ( ( ( MLU + ( MLU * MLU ) ) - ( ( ( MUC * CS ) - Max( CS,MLU ) ) / MLU ) ) * RCSe ) ) * MLU ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const * RRS ),( DDR * BR ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_RAM + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Max( ARS,Min( Max( ( Min( MRS ,DDR ) / FirstVNF_CPU_Server ),FirstVNF_Mem ) ,ARS ) ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Max( RRSe,Min( ( RCSe * ( MLU - Min( MUC ,MUC ) ) ) ,MUC ) ) + Max( MUM,RRSe ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( DS + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem / Const ) + ( Const - FirstVNF_CPU_Server ) ) + ( ( Const * FirstVNF_CPU_Server ) - ( MDR / CRS ) ) ) ,Max( ( ( Const / FirstVNF_CPU_Server ) / ( DDR - MRS ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( MDR * Const ) ) ) )", "choosing": "( ( MUM / CS ) / ( ( ( MUM / CS ) * CS ) * ( ( RCSe * RMSe ) * ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Max( Max( FirstVNF_CPU_Server,( DDR * ( DDR + ( ACS + FirstVNF_RAM_Server ) ) ) ),ACS ) ,Const ) ,FirstVNF_CPU_Server ) ,( CRS + Max( AMS,FirstVNF_RAM ) ) )", "choosing": "( ( RCSe * ( MUR - ( MUM - RMSe ) ) ) + Min( ( ( DS * RCSe ) + ( MUC - RCSe ) ) ,Max( ( RMSe + CS ),( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( AMS * FirstVNF_RAM ) )", "choosing": "Max( ( MUM / RCSe ),( ( MLU + Max( ( MUC + RCSe ),MLU ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + BR ) * ( MDR / ( MDR * BR ) ) ) - ( ACS / ARS ) )", "choosing": "( ( MUC / CS ) + ( ( ( DS / MUR ) / Max( MUC,RRSe ) ) * Max( Min( RMSe ,MLU ),( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) ) ) )", "choosing": "Max( ( RMSe - ( CS + CS ) ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( MDR / PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MRS ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_Mem + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,( ( MDR * ( ACS - FirstVNF_Mem ) ) / ( Const + ACS ) ) ) ) )", "choosing": "( ( Max( ( MUR + CS ),( MLU * RMSe ) ) / ( Min( MUR ,RCSe ) + ( Min( MUR ,DS ) / ( RMSe + MUM ) ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,MLU ) - ( MLU / ( MLU + ( CS + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / Min( AMS ,MRS ) ) + Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( FirstVNF_Mem + DDR ) ) ,Min( ( CRS * CRS ) ,Max( ARS,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR / ( MLU - RCSe ) ) / MUM ) / RCSe ) / Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem / ( ACS + RRS ) ) ) ,ACS ) * Max( ( PN * BR ),Min( PN ,( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Min( ACS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( CS * RMSe ) + RRSe ) * ( RMSe / ( MUM - ( ( CS * Min( ( Min( RRSe ,MUC ) - CS ) ,( ( MUM - DS ) + RRSe ) ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ARS ,RRS ) - ( MRS - BR ) ) ,( Max( MRS,( Const - ( MRS + FirstVNF_RAM_Server ) ) ) - ( DDR - FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( MUM / ( ( MUR / MLU ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( FirstVNF_CPU_Server ,BR ) * ( Const / Const ) ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( AMS ,Max( Min( ( Min( ARS ,RRS ) - ( MRS - BR ) ) ,( Max( AMS,MRS ) - ( MRS - FirstVNF_CPU_Server ) ) ),( Max( Max( FirstVNF_CPU,FirstVNF_CPU_Server ),( RRS / FirstVNF_RAM ) ) / ( Max( MRS,RRS ) / Min( Const ,FirstVNF_Mem ) ) ) ) ) / ( MDR / PN ) ) ) )", "choosing": "Max( Min( RRSe ,MUC ),Max( ( Min( Max( RCSe,CS ) ,Min( MUR ,MUR ) ) * Min( Max( MUM,MUR ) ,( RMSe - MLU ) ) ),( ( ( MUC + CS ) - Min( MLU ,MUM ) ) * ( Min( CS ,DS ) + Max( MUR,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_RAM + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Max( RRSe,Min( ( RCSe * ( MLU - Min( MUC ,MUC ) ) ) ,Max( DS,RCSe ) ) ) + Max( RRSe,MUM ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,RCSe ) - ( DS + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( MDR - ACS ) ) / ( ( Max( ( FirstVNF_Mem - PN ),FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR * RMSe ),( RCSe / MUC ) ) + Max( ( MUR * MLU ),( RRSe * ( DS / ( MUC * ( MUM * ( DS + RRSe ) ) ) ) ) ) ) - Max( ( ( MUM - MUM ) / ( MUC / RMSe ) ),( ( MUM - MUM ) / ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + DDR ) * ( ( RRS * AMS ) / ( ( FirstVNF_RAM_Server * Max( ( BR * PN ),( PN / Max( BR,Max( MRS,Const ) ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUC / DS ),Max( DS,( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( CS,RMSe ) ) * DS ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7777339698426051}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,ARS ) / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / PN ) ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "Max( ( MUM / ( RRSe - ( ( Max( RCSe,RRSe ) / Max( Max( RMSe,( MUR + RRSe ) ),DS ) ) - Min( DS ,( CS / MUM ) ) ) ) ),Max( RRSe,RMSe ) )", "obj1": 0.6832669322709163, "obj2": 0.19882921770660614}, {"determining": "Min( Max( MDR,FirstVNF_CPU ) ,( FirstVNF_RAM - ( FirstVNF_CPU - RRS ) ) )", "choosing": "( Min( Min( Max( ( RMSe - ( Min( Min( DS ,MUM ) ,MLU ) - ( RRSe + ( CS - MUC ) ) ) ),MUR ) ,MUM ) ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.7768924302788844, "obj2": 0.16548011679664942}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / CRS ) )", "choosing": "( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.6573705179282868, "obj2": 0.2598649884463239}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( ( Min( MDR ,FirstVNF_CPU_Server ) * MDR ) ,PN ) ) )", "choosing": "( ( ( ( DS / ( MLU + RCSe ) ) / ( ( ( ( Min( MLU ,MUR ) - MUM ) / ( Max( DS,MLU ) + ( MUR / RCSe ) ) ) + MUC ) + Max( ( DS * RCSe ),Min( RRSe ,( DS / RRSe ) ) ) ) ) / MUR ) * ( Min( MUR ,MUR ) / RCSe ) )", "obj1": 0.8007968127490039, "obj2": 0.07611231488143298}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) - FirstVNF_RAM ) ,FirstVNF_CPU )", "choosing": "( Max( MUC,MUR ) - ( MUM - ( RMSe / ( MLU / RCSe ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.07116493884788419}, {"determining": "( ( Const + PN ) * Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) / ( Max( MUM,Max( CS,MUR ) ) / MUM ) ) ,( DS - CS ) )", "obj1": 0.6135458167330677, "obj2": 0.2995245274210602}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - Const ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) + MLU ) - MUM )", "obj1": 0.5677290836653387, "obj2": 0.32110780441023234}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( MUR + MLU ) - MUM )", "obj1": 0.50199203187251, "obj2": 0.38172168246385646}, {"determining": "( ( ( Max( ARS,( BR + ( BR * FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,Const ) ) - Max( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ),( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( Max( ( ( RMSe + DS ) * MUM ),MUM ) + MLU ) - MUM )", "obj1": 0.5298804780876494, "obj2": 0.3566574716785487}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7239630916331711}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.6334661354581673, "obj2": 0.28532256794297456}, {"determining": "( Min( CRS ,PN ) / Min( ( Min( RRS ,Max( DDR,FirstVNF_RAM ) ) * FirstVNF_RAM ) ,ACS ) )", "choosing": "( ( ( MUM * MUR ) / ( RRSe * DS ) ) * Max( ( MUR / ( MUR - ( MUC * ( MUM * ( DS + RRSe ) ) ) ) ),MLU ) )", "obj1": 0.20916334661354583, "obj2": 0.7013516097844333}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.10135753297260537}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) ) - ( ( ( AMS + ( AMS - ( FirstVNF_Mem / FirstVNF_Mem ) ) ) * ( AMS - PN ) ) / CRS ) )", "choosing": "Max( ( ( ( ( Max( ( ( MUM / RMSe ) + RCSe ),Max( DS,CS ) ) + ( Max( Max( RCSe,CS ),RCSe ) + ( CS * ( RMSe / DS ) ) ) ) - CS ) + MUC ) / RCSe ),RCSe )", "obj1": 0.5657370517928287, "obj2": 0.35064380693809155}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Max( ACS,( ARS / FirstVNF_CPU ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,( MUR / MUC ) ) ,( RMSe - MUR ) ) ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 0.49203187250996017, "obj2": 0.4131214133156522}, {"determining": "Min( ( FirstVNF_Mem - ( FirstVNF_Mem / ( Min( RRS ,( DDR * FirstVNF_Mem ) ) - Min( FirstVNF_CPU_Server ,Max( MRS,FirstVNF_Mem ) ) ) ) ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,DS ) / ( ( MUR + RCSe ) + ( Min( MUR ,DS ) / Min( RMSe ,MUM ) ) ) ) + ( Min( RRSe ,( RRSe - ( MUM / Max( RMSe,Min( MUM ,MUC ) ) ) ) ) + ( ( MLU / DS ) - Max( ( MLU * RMSe ),MLU ) ) ) )", "obj1": 0.9701195219123506, "obj2": 0.023674366629351337}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / ( MUR - Max( RMSe,RMSe ) ) ) )", "obj1": 0.4820717131474104, "obj2": 0.4219913071439327}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.3545816733067729, "obj2": 0.5198622984181291}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6889880999647988}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3745019920318725, "obj2": 0.494220868820352}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( ( MUC - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5338455023360483}, {"determining": "( Min( ( FirstVNF_RAM_Server - ( DDR * ARS ) ) ,MDR ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS * MUR ) / ( RMSe + MLU ) ) ) - ( ( MUC / MUC ) - ( MUC * MLU ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5986974535587268}, {"determining": "Min( ( CRS * MRS ) ,Max( MDR,DDR ) )", "choosing": "( ( MLU / RRSe ) + ( Min( MUR ,Min( Min( ( ( MUC - RCSe ) - ( MUC / DS ) ) ,( ( Max( RRSe,MUR ) / MUR ) / Max( RMSe,( RMSe - MUM ) ) ) ) ,RCSe ) ) - MUC ) )", "obj1": 0.9442231075697212, "obj2": 0.04113516021242279}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( Const ,AMS ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.49816580309887615}, {"determining": "( ( CRS - BR ) + ( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( Min( ( DS - CS ) ,Max( Max( MUR,( CS * RCSe ) ),( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6257981611664304}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( MDR - FirstVNF_CPU ),Max( ARS,FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) - RRSe ) * ( ( ( RCSe + MUR ) / DS ) + Min( Min( CS ,( CS + ( MUM * ( MLU / ( RCSe / RMSe ) ) ) ) ) ,MUM ) ) )", "obj1": 0.798804780876494, "obj2": 0.09348925511583664}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( RCSe + MUC ) )", "obj1": 0.24302788844621515, "obj2": 0.6518781701297325}, {"determining": "( ( DDR + RRS ) * Max( ARS,Const ) )", "choosing": "Max( ( MUC / DS ),Max( ( Max( MLU,RMSe ) - RRSe ),RRSe ) )", "obj1": 0.17131474103585656, "obj2": 0.7524042626164321}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( ( ( CS - RMSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.4601593625498008, "obj2": 0.43849282432434855}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.47931827335345895}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6518781701297325}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_RAM_Server - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( ( AMS + Min( Const ,FirstVNF_CPU_Server ) ),( DDR / CRS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( RRSe + CS ) ,( Min( MLU ,( ( ( MUR - RMSe ) + RCSe ) * CS ) ) / RCSe ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( MDR ,FirstVNF_Mem_Server ) ) ) ,( ( Min( FirstVNF_CPU_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * ( ACS + PN ) ) / ( ( FirstVNF_CPU / ACS ) - Max( AMS,PN ) ) ) )", "choosing": "( ( ( CS - RMSe ) - ( MUR / CS ) ) / ( MUM + Min( ( Min( Max( Min( CS ,RRSe ),Min( ( MUC * RMSe ) ,MLU ) ) ,DS ) * RCSe ) ,CS ) ) )", "obj1": 0.4601593625498008, "obj2": 0.43849282432434855}, {"determining": "( Max( MRS,ACS ) - ( ( BR * PN ) - Min( PN ,( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Min( ACS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( Max( CS,RMSe ) + RRSe ) ) )", "obj1": 0.30876494023904383, "obj2": 0.571140008935383}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6889880999647988}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.4262948207171315, "obj2": 0.4584616274168743}, {"determining": "( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + PN ) * Max( BR,Const ) )", "choosing": "Min( ( Min( ( RRSe - Max( RCSe,MUR ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.300796812749004, "obj2": 0.5809054603180724}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR / FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( ( BR - Min( ( DDR * MRS ) ,DDR ) ) - MRS ) ) )", "choosing": "Min( ( Min( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) ) ,( DS / Min( RCSe ,( ( MUR / DS ) + MUM ) ) ) ) * CS ) ,( DS - ( ( Max( ( ( MUM - RRSe ) / Max( MUR,RRSe ) ),RMSe ) * Max( MLU,RMSe ) ) - MUM ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5909701945109403}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( CS + CS ) - CS ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( ( Const + PN ) * Max( BR,Const ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.35258964143426297, "obj2": 0.5326826045704388}, {"determining": "Max( ( FirstVNF_CPU + ( FirstVNF_CPU_Server * MRS ) ),( FirstVNF_RAM - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / DS ) * Min( MLU ,( Max( ( MUR * MUC ),( RMSe + ( MLU + MLU ) ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7662877954593997}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.4063745019920319, "obj2": 0.47931827335345895}, {"determining": "( Max( ACS,( FirstVNF_RAM / CRS ) ) - Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / Min( CS ,RCSe ) )", "obj1": 0.41832669322709165, "obj2": 0.47498208343876036}, {"determining": "Min( ( ( FirstVNF_RAM / MRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - ( MUM / ( MUR - Max( RMSe,RMSe ) ) ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4700867310952552}, {"determining": "( Max( FirstVNF_RAM,Const ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - Max( RCSe,MUR ) ) ,( MUM - MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6305953648733944}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.9741035856573705, "obj2": 0.012263131439906002}, {"determining": "Min( ( Max( ( FirstVNF_CPU * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM_Server - MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Max( ( ( MUR / RMSe ) / MUM ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5642018644200404}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / ( MUR - Max( RMSe,RMSe ) ) ) )", "obj1": 0.4402390438247012, "obj2": 0.45571995130332404}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU / MUM ) - Max( MUR,RCSe ) ) + ( ( RMSe - MUR ) / ( DS - MUC ) ) ) / Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.06813162413426503}, {"determining": "( Max( MRS,ARS ) - Min( ACS ,Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( Min( Max( ( ( MUR - RMSe ) * ( RMSe / RCSe ) ),( RRSe + Min( MUR ,( MLU + DS ) ) ) ) ,MUR ) / ( MUC + MUM ) )", "obj1": 0.44223107569721115, "obj2": 0.452420450384037}, {"determining": "( ( DDR + DDR ) * ( ( RRS * AMS ) / ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7685525406986295}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.44223107569721115, "obj2": 0.452420450384037}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( MUM / Max( RMSe,Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.9183266932270916, "obj2": 0.060303425076441125}, {"determining": "( ( Const + PN ) * Max( BR,Min( PN ,( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Min( ACS ,FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( ( MUM - DS ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.2868525896414343, "obj2": 0.5966243913324903}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_Mem + DDR ) ) - Max( ACS,ACS ) )", "choosing": "Max( ( ( MUR / RMSe ) / MUM ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 0.9203187250996016, "obj2": 0.051706747526912115}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - BR ) ) ,Min( Min( DDR ,( ( FirstVNF_Mem - AMS ) / ( ( PN + AMS ) + MRS ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.9262948207171314, "obj2": 0.050458686226427296}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( CRS ,MDR ) + ( Max( PN,BR ) + DDR ) ) - ( ( PN - BR ) + ( Const * PN ) ) ) )", "choosing": "Max( Min( Max( MUM,( RCSe / MUM ) ) ,CS ),Max( RRSe,RMSe ) )", "obj1": 0.9840637450199203, "obj2": 0.00738836443861844}, {"determining": "Max( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / ( ACS / CRS ) ),( Min( Const ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) + Min( BR ,MRS ) ) )", "choosing": "( Max( Min( ( RMSe / MUM ) ,( RRSe - RMSe ) ),Min( RRSe ,( RMSe / Max( Max( MUR,RRSe ),RCSe ) ) ) ) * ( ( RRSe / DS ) / Max( MLU,RCSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.7547477287777524}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.10135753297260537}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( ( ( AMS + ACS ) * ( BR - PN ) ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,Max( ( MUM / RCSe ),Max( RRSe,RMSe ) ) ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 0.9023904382470119, "obj2": 0.07008647975589324}, {"determining": "Min( ( ( ARS * FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),Max( Max( FirstVNF_Mem,ACS ),( ARS - ( FirstVNF_RAM_Server - ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( DS / ( CS + MUM ) ) ,Max( Min( Min( MUM ,RCSe ) ,( RRSe / CS ) ),DS ) )", "obj1": 0.3286852589641434, "obj2": 0.5598354652822121}, {"determining": "( Min( MRS ,ACS ) / Min( ( Min( RRS ,Max( FirstVNF_Mem,FirstVNF_RAM ) ) * FirstVNF_RAM ) ,ACS ) )", "choosing": "( ( ( MUM * RMSe ) / ( RRSe * DS ) ) * ( ( ( ( ( RMSe - RCSe ) - ( MUM + MUR ) ) + MUC ) * CS ) - ( MLU / RRSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.7547477287777524}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) )", "obj1": 0.9143426294820717, "obj2": 0.06102475116294416}, {"determining": "Max( Max( ( FirstVNF_RAM / CRS ),( Max( PN,Const ) * AMS ) ),( Min( Const ,FirstVNF_RAM ) + ( BR - MRS ) ) )", "choosing": "Min( ( RMSe - RCSe ) ,Min( ( MUM / RRSe ) ,MUM ) )", "obj1": 0.2649402390438247, "obj2": 0.6305953648733944}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),Min( ( FirstVNF_RAM - CRS ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( ( ( MLU + DS ) * RCSe ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3047808764940239, "obj2": 0.5748398635416868}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) ) )", "obj1": 0.9800796812749004, "obj2": 0.01101872112633556}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( PN - Min( FirstVNF_RAM_Server ,AMS ) ) )", "choosing": "( ( DS / MUM ) + ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( RMSe * RMSe ) ) ) ),MUM ) ) / Min( Max( MUM,Max( MUR,CS ) ) ,MUM ) ) )", "obj1": 0.9382470119521913, "obj2": 0.046001778917689404}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * Max( FirstVNF_RAM,FirstVNF_Mem ) ),( Min( ( FirstVNF_Mem - CRS ) ,( DDR - Max( BR,FirstVNF_RAM ) ) ) * MRS ) )", "choosing": "Max( ( ( MUR / RMSe ) / MUM ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5642018644200404}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ARS ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - RRSe )", "obj1": 0.9940239043824701, "obj2": 0.002301392839343869}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( DS + CS ) ,Max( ( Max( RCSe,( Min( MUR ,( Max( DS,RMSe ) * ( MLU / RMSe ) ) ) / ( RMSe * RRSe ) ) ) - ( MUM + CS ) ),MUC ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "Min( ( FirstVNF_Mem - ( FirstVNF_Mem / ( MRS + ( DDR / FirstVNF_Mem ) ) ) ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,DS ) / ( Min( MUR ,RCSe ) + ( Min( MUR ,RMSe ) / Min( RMSe ,MUM ) ) ) ) + ( ( Max( MUC,MUR ) + ( DS * ( Min( MUR ,MUC ) * MUC ) ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.04857800847989924}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( ( ACS * PN ),FirstVNF_CPU ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "( ( DDR + DDR ) * ( ( BR * AMS ) / ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) ) ) ) )", "choosing": "Min( ( Min( MLU ,( MLU + ( CS - Max( ( DS * Max( CS,MLU ) ),MUM ) ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.30278884462151395, "obj2": 0.5752047006073537}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_RAM,Const ) ,Max( Const,Const ) ) ) )", "choosing": "( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,( RRSe - Max( RCSe,MUR ) ) ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9402390438247012, "obj2": 0.04515521001377634}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) )", "obj1": 0.9143426294820717, "obj2": 0.06102475116294416}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_Mem,Const ) ,( BR * MDR ) ) ) )", "choosing": "( Max( ( ( MUC - ( RMSe * RRSe ) ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Max( DS,RCSe ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9322709163346613, "obj2": 0.04874449438740727}, {"determining": "Min( ( ( FirstVNF_RAM / ( FirstVNF_Mem + DDR ) ) - Max( ACS,( ARS / FirstVNF_CPU ) ) ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( RMSe - ( Max( ( MLU + DS ),MLU ) * Min( MLU ,MUC ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 0.9920318725099602, "obj2": 0.0037082426906064783}, {"determining": "( ( Max( BR,Max( MRS,Const ) ) + ( Min( AMS ,FirstVNF_Mem ) - ARS ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN * BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + CS ) - Max( Max( ( ( CS * ( MUR - ( RRSe / ( MLU * RMSe ) ) ) ) * DS ),MUM ),Max( Min( RMSe ,RCSe ),MUC ) ) )", "obj1": 0.9800796812749004, "obj2": 0.01101872112633556}, {"determining": "( ( ( ( FirstVNF_Mem_Server - MRS ) * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( CS * Min( Min( RRSe ,( RRSe - ( MUM / Max( RMSe,Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) - MUM )", "obj1": 0.9900398406374502, "obj2": 0.0042551007932252385}, {"determining": "( ( ( ( FirstVNF_Mem_Server - MRS ) * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Max( MDR,CRS ) + Min( AMS ,FirstVNF_Mem_Server ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Max( ( ( ( MLU + RRSe ) * MLU ) + Max( ( MLU - RMSe ),( RRSe / ( MUC + MLU ) ) ) ),MLU ) - MUM )", "obj1": 0.99800796812749, "obj2": 0.0007405193454841818}, {"determining": "( ( ( ( FirstVNF_Mem_Server - MRS ) * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Max( MDR,CRS ) + Min( AMS ,FirstVNF_Mem_Server ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Max( ( ( ( MLU + RRSe ) * MLU ) + Max( ( MLU - RMSe ),( RRSe / ( MUC + MLU ) ) ) ),MLU ) - MUM )", "obj1": 0.9880478087649402, "obj2": 0.004834159480369261}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - MUM )", "obj1": 0.9880478087649402, "obj2": 0.004834159480369261}, {"determining": "( Min( ( Min( Max( RRS,FirstVNF_RAM ) ,( RRS * FirstVNF_RAM_Server ) ) / CRS ) ,( DDR * Const ) ) * Max( BR,Const ) )", "choosing": "Min( ( Min( RMSe ,( ( RRSe * ( ( MUM / Min( MLU ,MLU ) ) * MUC ) ) / DS ) ) * CS ) ,( MUC - CS ) )", "obj1": 0.2868525896414343, "obj2": 0.5966243913324903}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( ( MDR * PN ) ,Max( Const,Const ) ) ) )", "choosing": "( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9322709163346613, "obj2": 0.04874449438740727}, {"determining": "( ( ( ( FirstVNF_Mem_Server * MRS ) * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Max( MDR,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Max( ( ( ( MLU + RRSe ) * MUM ) + Max( ( MLU - RMSe ),RCSe ) ),MLU ) - MUM )", "obj1": 0.99800796812749, "obj2": 0.0007405193454841818}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_Mem + DDR ) ) - Max( ACS,( Min( ( FirstVNF_Mem - CRS ) ,( DDR - Max( BR,FirstVNF_RAM ) ) ) * MRS ) ) )", "choosing": "Max( Max( ( ( MUR / RMSe ) / MUM ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) ),Min( Min( RRSe ,( MUR / MUC ) ) ,( RMSe - MUR ) ) )", "obj1": 0.9203187250996016, "obj2": 0.051706747526912115}, {"determining": "( Max( FirstVNF_RAM,Const ) / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.35258964143426297, "obj2": 0.5326826045704388}, {"determining": "( ( DDR + DDR ) * ( ( RRS * AMS ) / ( ( FirstVNF_RAM_Server * Max( AMS,( Min( Max( PN,PN ) ,FirstVNF_CPU_Server ) + Max( BR,Max( Const,MRS ) ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU + RMSe ) ,( DS - CS ) )", "obj1": 0.30278884462151395, "obj2": 0.5752047006073537}, {"determining": "( ( PN * ( MDR * ACS ) ) / ( ( Max( ( ( MRS + Max( ( AMS - ACS ),ARS ) ) - ( FirstVNF_Mem / AMS ) ),FirstVNF_CPU ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) )", "choosing": "( ( Max( ( DS / MUC ),( MUR * RMSe ) ) + Max( ( MUR * MLU ),( MLU * ( DS / ( MUC * Max( ( RCSe + DS ),MLU ) ) ) ) ) ) - Max( ( ( MUM - MUM ) / ( MUC / RMSe ) ),( ( MUM - MUM ) / ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Max( ( FirstVNF_CPU + CRS ),FirstVNF_CPU ) ) / ( RRS - Const ) )", "choosing": "( Max( DS,RMSe ) / ( Min( ( MUC * MUR ) ,RCSe ) * ( RRSe - ( CS - Max( MUR,( ( ( RRSe * RCSe ) + ( RCSe - RMSe ) ) - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - RCSe ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ARS,Const ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "( ( MLU / RRSe ) + ( RCSe - Max( RRSe,( DS - ( ( ( CS - CS ) + MUR ) / ( ( ( CS / RRSe ) + MUC ) + ( MLU / ( DS - MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) * ( Min( ( ( ( ACS * Const ) + Min( ARS ,FirstVNF_CPU ) ) - ( BR * FirstVNF_RAM ) ) ,( FirstVNF_CPU - ( ( ACS - FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ) - PN ) )", "choosing": "( ( Max( ( Max( MUC,MLU ) - RRSe ),CS ) * DS ) + ( RMSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + BR ) - ( Const + AMS ) )", "choosing": "Min( ( RCSe * MUM ) ,( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( CRS + MDR ),DDR ) + FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( FirstVNF_Mem / MRS ) ) )", "choosing": "( Min( ( MUR / MUR ) ,MUR ) * ( Max( MUM,Min( ( RMSe * RRSe ) ,RMSe ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( FirstVNF_Mem + DDR ) ) - Max( ACS,( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,( MUR / MUC ) ) ,( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU ) ,( ACS + ARS ) )", "choosing": "Max( Max( ( MUM * CS ),( RRSe / RCSe ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( FirstVNF_RAM_Server * Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( DS ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - MDR ) ,Max( FirstVNF_CPU_Server,ACS ) ) - Min( ( ACS / FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,PN ) ) ) + Min( ( ( FirstVNF_RAM + DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,Min( ( CRS + CRS ) ,Min( Const ,ARS ) ) ) )", "choosing": "( ( Max( Min( MUR ,CS ),( MLU * RMSe ) ) / ( Max( RRSe,Min( ( RCSe * ( MLU - Min( MUC ,MUC ) ) ) ,Max( DS,RCSe ) ) ) + Max( RRSe,MUM ) ) ) + ( ( Max( MUC,MUR ) + ( DS * DS ) ) + ( Max( MUM,RCSe ) - ( DS + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,ARS ) / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / PN ) ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "Max( ( MUM / ( RRSe - ( ( Max( RCSe,RRSe ) / Max( Max( RMSe,( MUR + RRSe ) ),DS ) ) - Min( DS ,( CS / MUM ) ) ) ) ),Max( RRSe,RMSe ) )", "obj1": 0.6832669322709163, "obj2": 0.19882921770660614}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / CRS ) )", "choosing": "( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.6573705179282868, "obj2": 0.2598649884463239}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( ( ACS * DDR ) + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ) / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.7290836653386454, "obj2": 0.18804993278487447}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,( Min( MUR ,RRSe ) / ( MUC + MUM ) ) ) / RCSe ) )", "obj1": 0.8047808764940239, "obj2": 0.07313000084324492}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - Const ) )", "choosing": "( ( ( RMSe - ( CS + CS ) ) + MLU ) - MUM )", "obj1": 0.5677290836653387, "obj2": 0.32110780441023234}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7239630916331711}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) - FirstVNF_RAM ) ,FirstVNF_CPU )", "choosing": "( Max( MUC,MUR ) - ( MUM - ( RMSe / ( MLU / RCSe ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.07116493884788419}, {"determining": "( Max( CRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( MDR * DDR ) - Min( FirstVNF_Mem_Server ,( RRS + Max( ARS,FirstVNF_Mem ) ) ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,( ( ( ( MUC * MUC ) * Max( MUC,MUM ) ) + ( ( RRSe - RCSe ) + RCSe ) ) * ( ( RRSe * MUR ) + ( Max( Min( RMSe ,MUC ),Min( MUM ,( CS * MUM ) ) ) - ( CS / RCSe ) ) ) ) ) / MUM )", "obj1": 0.5976095617529881, "obj2": 0.2916870053944621}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ARS,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ) ) ,( ( Const + Max( MDR,DDR ) ) - Min( MDR ,PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * MUR ) / ( DS * MUR ) ) * ( CS * Min( Min( RRSe ,Max( MUC,Min( MUC ,CS ) ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6955948056685929}, {"determining": "Min( Max( MDR,FirstVNF_CPU ) ,( FirstVNF_RAM - ( FirstVNF_CPU - RRS ) ) )", "choosing": "( Min( Min( Max( ( RMSe - ( Min( Min( DS ,MUM ) ,MLU ) - ( RRSe + ( CS - MUC ) ) ) ),MUR ) ,MUM ) ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.7768924302788844, "obj2": 0.16548011679664942}, {"determining": "( ( DDR + RRS ) * Max( ARS,Const ) )", "choosing": "Max( ( MUC / DS ),Max( ( Max( MLU,RMSe ) - RRSe ),RRSe ) )", "obj1": 0.17131474103585656, "obj2": 0.7524042626164321}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) ) - ( ( ( AMS + ( AMS - ( FirstVNF_Mem / FirstVNF_Mem ) ) ) * ( AMS - PN ) ) / CRS ) )", "choosing": "Max( ( ( ( ( Max( ( ( MUM / RMSe ) + RCSe ),Max( DS,CS ) ) + ( Max( Max( RCSe,CS ),RCSe ) + ( CS * ( RMSe / DS ) ) ) ) - CS ) + MUC ) / RCSe ),RCSe )", "obj1": 0.5657370517928287, "obj2": 0.35064380693809155}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.10135753297260537}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.7749003984063745, "obj2": 0.1670599424325608}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Max( ACS,( ARS / FirstVNF_CPU ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Max( ( ( MUM * DS ) - ( MLU + DS ) ),Min( Min( RRSe ,( MUR / MUC ) ) ,( RMSe - MUR ) ) ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 0.49203187250996017, "obj2": 0.4131214133156522}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6605275369444007}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,RRSe ) / RCSe ) )", "obj1": 0.39641434262948205, "obj2": 0.49171980197219567}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,BR ) / ( FirstVNF_CPU_Server / CRS ) ) ,Max( ( ( AMS + ACS ) * ( BR - PN ) ),MRS ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * ( DS + CS ) ) ) * ( ( ( MUR * RCSe ) * RRSe ) - CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2722876310536717}, {"determining": "( ( ( Max( ARS,( BR + ( BR * FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,Const ) ) - Max( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ),( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( Max( ( ( RMSe + DS ) * MUM ),MUM ) + MLU ) - MUM )", "obj1": 0.5298804780876494, "obj2": 0.3566574716785487}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6889880999647988}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( ( MUC - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5338455023360483}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( ( ( CS - RMSe ) - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.4581673306772908, "obj2": 0.43648159087962424}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( MUR + MLU ) - MUM )", "obj1": 0.5199203187250996, "obj2": 0.357041853633125}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( MUR + MLU ) - MUM )", "obj1": 0.5099601593625498, "obj2": 0.3796435396511228}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.9482071713147411, "obj2": 0.023934655607375618}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( MUR + MLU ) - MUM )", "obj1": 0.50199203187251, "obj2": 0.38172168246385646}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUC * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.46215139442231074, "obj2": 0.4294130648855765}, {"determining": "Min( ( FirstVNF_Mem - ( FirstVNF_Mem / ( Min( RRS ,( DDR * FirstVNF_Mem ) ) - Min( FirstVNF_CPU_Server ,Max( MRS,FirstVNF_Mem ) ) ) ) ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,DS ) / ( ( MUR + RCSe ) + ( Min( MUR ,DS ) / Min( RMSe ,MUM ) ) ) ) + ( Min( RRSe ,( RRSe - ( MUM / Max( RMSe,Min( MUM ,MUC ) ) ) ) ) + ( ( MLU / DS ) - Max( ( MLU * RMSe ),MLU ) ) ) )", "obj1": 0.9701195219123506, "obj2": 0.023674366629351337}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Max( ACS,( ARS / FirstVNF_CPU ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.4043824701195219, "obj2": 0.4718423814791003}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( Const,PN ) ) ) ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.609896564980878}, {"determining": "Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( Max( MDR,FirstVNF_CPU ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( ( ( MUM * CS ) - ( RRSe / RCSe ) ),( ( RRSe * ( MUM + MUR ) ) + Min( RRSe ,RRSe ) ) ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.30876494023904383, "obj2": 0.5617888894312925}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.6274900398406374, "obj2": 0.29107720071295456}, {"determining": "( Min( ( FirstVNF_RAM_Server - ( DDR * ARS ) ) ,MDR ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS * MUR ) / ( RMSe + MLU ) ) ) - ( ( MUC / MUC ) - ( MUC * MLU ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5986974535587268}, {"determining": "Min( ( Max( ( Const * RRS ),Min( ( MDR * PN ) ,Max( Const,Const ) ) ) * ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( Max( CS,CS ) * ( Max( Max( ( RMSe + DS ),RMSe ),MUR ) / MUC ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5478517699954443}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( Const ,AMS ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.49816580309887615}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) * DDR ) ) ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( MUM - MUC ),( CS + MUC ) ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6182673233149552}, {"determining": "Min( ( ( FirstVNF_RAM / MRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Max( MUR,MUC ) - ( MUM - ( MUM / ( MUR - Max( RMSe,RMSe ) ) ) ) )", "obj1": 0.4243027888446215, "obj2": 0.4700867310952552}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / ( MUR - Max( RMSe,RMSe ) ) ) )", "obj1": 0.4820717131474104, "obj2": 0.4219913071439327}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6252849204197106}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( MDR - FirstVNF_CPU ),Max( ARS,FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) - RRSe ) * ( ( ( RCSe + MUR ) / DS ) + Min( Min( CS ,( CS + ( MUM * ( MLU / ( RCSe / RMSe ) ) ) ) ) ,MUM ) ) )", "obj1": 0.798804780876494, "obj2": 0.09348925511583664}, {"determining": "Min( ( CRS * MRS ) ,Max( MDR,DDR ) )", "choosing": "( ( MLU / RRSe ) + ( Min( MUR ,Min( Min( ( ( MUC - RCSe ) - ( MUC / DS ) ) ,( ( Max( RRSe,MUR ) / MUR ) / Max( RMSe,( RMSe - MUM ) ) ) ) ,RCSe ) ) - MUC ) )", "obj1": 0.9442231075697212, "obj2": 0.04113516021242279}, {"determining": "( ( Const + PN ) * Max( Const,Const ) )", "choosing": "Min( ( Min( ( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3187250996015936, "obj2": 0.5543591486478394}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3745019920318725, "obj2": 0.494220868820352}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( RCSe + MUC ) )", "obj1": 0.24302788844621515, "obj2": 0.6518781701297325}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.9741035856573705, "obj2": 0.012263131439906002}, {"determining": "Min( ( ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_RAM_Server * BR ) ) - FirstVNF_RAM_Server ) ,Max( MDR,Min( ( MDR * PN ) ,Max( Const,BR ) ) ) )", "choosing": "( ( ( Max( RMSe,( RCSe * ( RMSe + RRSe ) ) ) * MUR ) / ( RRSe * CS ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06671374937452743}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,RRSe ) / RCSe ) )", "obj1": 0.8007968127490039, "obj2": 0.07611231488143298}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( Const ,AMS ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.49816580309887615}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - Max( DDR,Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) + Min( BR ,MRS ) ) ) - Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,CS ) / Min( MUM ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,CS ) ) ) ) + DS ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6321219964847509}, {"determining": "( Max( CRS,( CRS - BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( ( Min( CS ,Min( MUR ,( ( ( Min( MUM ,MUR ) - MUM ) - RCSe ) + RRSe ) ) ) + MUR ) / ( MUC + MUM ) )", "obj1": 0.4103585657370518, "obj2": 0.4714127777575015}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.6334661354581673, "obj2": 0.28532256794297456}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),Min( ( FirstVNF_RAM - CRS ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( ( ( MLU + DS ) * RCSe ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3047808764940239, "obj2": 0.5734441221334408}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) )", "obj1": 0.9143426294820717, "obj2": 0.06102475116294416}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MDR ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ),Const ) * ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) * RRS ) + PN ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,( DS / MUC ) ) * CS ) ,( DS - ( MLU + MLU ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5809811030239175}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( DS + CS ) ,Max( ( Max( RCSe,( Min( MUR ,( Max( DS,RMSe ) * ( MLU / RMSe ) ) ) / ( RMSe * RRSe ) ) ) - ( MUM + CS ) ),MUC ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / ( MUR - Max( RMSe,RMSe ) ) ) )", "obj1": 0.4402390438247012, "obj2": 0.45571995130332404}, {"determining": "( Max( MRS,ARS ) - Min( ACS ,Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( Min( Max( ( ( MUR - RMSe ) * ( RMSe / RCSe ) ),( RRSe + Min( MUR ,( MLU + DS ) ) ) ) ,MUR ) / ( MUC + MUM ) )", "obj1": 0.44223107569721115, "obj2": 0.452420450384037}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.44223107569721115, "obj2": 0.452420450384037}, {"determining": "( ( Const + PN ) * Max( BR,Min( PN ,( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Min( ACS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6889880999647988}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( Min( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5886759626459981}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( MDR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Max( ( ( MUR / RMSe ) / MUM ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 0.7868525896414342, "obj2": 0.09721374135282809}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / ( MUR - Max( RMSe,RMSe ) ) ) )", "obj1": 0.4820717131474104, "obj2": 0.4219913071439327}, {"determining": "Min( ( Max( ACS,ACS ) - ( Max( FirstVNF_RAM_Server,BR ) / ( FirstVNF_Mem + DDR ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU + ACS ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.9163346613545816, "obj2": 0.052846759365882894}, {"determining": "Min( ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Max( MUC,RCSe ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5485620975449649}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR / FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( ( BR - Min( ( DDR * MRS ) ,DDR ) ) - MRS ) ) )", "choosing": "Min( ( Min( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) ) ,( DS / Min( RCSe ,( ( MUR / DS ) + MUM ) ) ) ) * CS ) ,( DS - ( ( Max( ( ( MUM - RRSe ) / Max( MUR,RRSe ) ),RMSe ) * Max( MLU,RMSe ) ) - MUM ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5909701945109403}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + ( FirstVNF_Mem_Server * Const ) ) - Max( FirstVNF_RAM_Server,BR ) )", "choosing": "Min( ( DS * MUC ) ,( RMSe - ( CS + ( MUM * ( ( RRSe - ( DS / ( MLU + RCSe ) ) ) + DS ) ) ) ) )", "obj1": 0.42828685258964144, "obj2": 0.45829891253146476}, {"determining": "( ( Const + PN ) * Max( BR,Min( PN ,( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Min( ACS ,FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( ( MUM - DS ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.2868525896414343, "obj2": 0.5966243913324903}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - MDR ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,RCSe ) - CS ) ,RRSe ) * Min( RMSe ,( DS / MUC ) ) ) * DS ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.09676188784786685}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.4262948207171315, "obj2": 0.4584616274168743}, {"determining": "Min( ( ( FirstVNF_Mem - AMS ) / ( ( PN + AMS ) + MRS ) ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU / MUM ) - Max( ( CS + CS ),RCSe ) ) + ( ( RMSe - MUR ) / ( DS - MUC ) ) ) / Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) )", "obj1": 0.9262948207171314, "obj2": 0.04994674821186099}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_RAM - BR ) ) ,Min( Min( DDR ,( ( FirstVNF_RAM - AMS ) / ( ( PN + AMS ) + MRS ) ) ) ,( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MLU / MUM ) - Max( MUR,RCSe ) ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.9203187250996016, "obj2": 0.05040456037793986}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( MDR - FirstVNF_CPU ),MDR ) ,PN ) ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,RCSe ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) ,( DS - CS ) )", "obj1": 0.300796812749004, "obj2": 0.5754774384250533}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( MUR + MLU ) - MUM )", "obj1": 0.50199203187251, "obj2": 0.38172168246385646}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( CRS ,MDR ) + ( Max( PN,BR ) + DDR ) ) - ( ( PN - BR ) + ( Const * PN ) ) ) )", "choosing": "Max( Min( Max( MUM,( RCSe / MUM ) ) ,CS ),Max( RRSe,RMSe ) )", "obj1": 0.9840637450199203, "obj2": 0.00738836443861844}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6518781701297325}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.10135753297260537}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) ) )", "obj1": 0.9800796812749004, "obj2": 0.01101872112633556}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) )", "choosing": "Max( ( MUC / DS ),Max( DS,RRSe ) )", "obj1": 0.900398406374502, "obj2": 0.06980148279231158}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( ( MDR * PN ) ,Max( Const,Const ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.6314741035856574, "obj2": 0.28780747364150566}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( ( ACS * PN ),FirstVNF_CPU ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + Min( RMSe ,MUM ) )", "obj1": 0.9422310756972112, "obj2": 0.0424844043313883}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) )", "obj1": 0.9143426294820717, "obj2": 0.06102475116294416}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_RAM_Server - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( ( AMS + Min( Const ,FirstVNF_CPU_Server ) ),( DDR / CRS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( RRSe + CS ) ,( Min( MLU ,( ( ( MUR - RMSe ) + RCSe ) * CS ) ) / RCSe ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( ( MLU / MUM ) - Max( MUR,RCSe ) ) + ( ( RMSe - MUR ) / ( DS - MUC ) ) ) / Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.0055746788258534425}, {"determining": "Min( ( FirstVNF_Mem - ( ( AMS - Min( ( FirstVNF_Mem_Server + BR ) ,Max( AMS,BR ) ) ) / FirstVNF_Mem ) ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( MUM - ( MLU - ( DS * ( Min( CS ,MUR ) / MLU ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.04760977423219641}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( PN - Min( FirstVNF_RAM_Server ,AMS ) ) )", "choosing": "( ( DS / MUM ) + ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( RMSe * RMSe ) ) ) ),MUM ) ) / Min( Max( MUM,Max( MUR,CS ) ) ,MUM ) ) )", "obj1": 0.9382470119521913, "obj2": 0.046001778917689404}, {"determining": "( ( ( ( FirstVNF_Mem_Server - MRS ) * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RRSe - Max( RCSe,MUR ) ) ,( MUM - MUM ) )", "obj1": 0.9920318725099602, "obj2": 0.0032377282353378296}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_Mem,Const ) ,( BR * MDR ) ) ) )", "choosing": "( Max( ( ( MUC - ( RMSe * RRSe ) ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Max( DS,RCSe ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9322709163346613, "obj2": 0.04874449438740727}, {"determining": "( ( ( ( FirstVNF_Mem_Server - MRS ) * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( CS * Min( Min( RRSe ,( RRSe - ( MUM / Max( RMSe,Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) - MUM )", "obj1": 0.9900398406374502, "obj2": 0.0042551007932252385}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( ( Min( MDR ,FirstVNF_CPU_Server ) * MDR ) ,PN ) ) )", "choosing": "( ( ( ( DS / ( MLU + RCSe ) ) / ( ( ( ( Min( MLU ,MUR ) - MUM ) / ( Max( DS,MLU ) + ( MUR / RCSe ) ) ) + MUC ) + Max( ( DS * RCSe ),Min( RRSe ,( DS / RRSe ) ) ) ) ) / MUR ) * ( Min( MUR ,MUR ) / RCSe ) )", "obj1": 0.8007968127490039, "obj2": 0.07611231488143298}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( ( Max( ( Max( ( CRS + MDR ),DDR ) + FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( FirstVNF_Mem / MRS ) ) ),Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Max( MUM,Min( ( RMSe * RRSe ) ,RMSe ) ) * MUR ) ,( DS - CS ) ) )", "obj1": 0.9800796812749004, "obj2": 0.01101872112633556}, {"determining": "Min( ( FirstVNF_Mem - ( FirstVNF_Mem / ( MRS + ( DDR / FirstVNF_Mem ) ) ) ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,DS ) / ( Min( MUR ,RCSe ) + ( Min( MUR ,RMSe ) / Min( RMSe ,MUM ) ) ) ) + ( ( Max( MUC,MUR ) + ( DS * ( Min( MUR ,MUC ) * MUC ) ) ) + ( Max( MUM,MLU ) - ( MLU / DS ) ) ) )", "obj1": 0.9342629482071713, "obj2": 0.04857800847989924}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_RAM,Const ) ,Max( Const,Const ) ) ) )", "choosing": "( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,( RRSe - Max( RCSe,MUR ) ) ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9402390438247012, "obj2": 0.04515521001377634}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3745019920318725, "obj2": 0.494220868820352}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( MUM - DS ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.2868525896414343, "obj2": 0.5966243913324903}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,FirstVNF_CPU )", "choosing": "( Max( RRSe,MUR ) - ( MUM - MUC ) )", "obj1": 0.898406374501992, "obj2": 0.07116493884788419}, {"determining": "Min( Max( MDR,FirstVNF_CPU ) ,( FirstVNF_RAM - ( FirstVNF_CPU - RRS ) ) )", "choosing": "( Min( Min( Max( ( RMSe - ( Min( Min( DS ,MUM ) ,MLU ) - ( RRSe + ( CS - MUC ) ) ) ),MUR ) ,MUM ) ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.6294820717131474, "obj2": 0.2896821965992928}], "6": [{"determining": "Min( ( Max( ACS,ACS ) - ( ( ( MDR + FirstVNF_Mem ) - FirstVNF_RAM ) / ( FirstVNF_Mem + DDR ) ) ) ,( Max( ( ARS + MDR ),( ACS / PN ) ) / ( ( FirstVNF_CPU + ACS ) - Max( AMS,PN ) ) ) )", "choosing": "Min( ( DS - CS ) ,Min( RRSe ,Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( FirstVNF_RAM_Server * Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( DS ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.750996015936255, "obj2": 0.10837780440806395}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( ( ACS * DDR ) + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ) / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.7290836653386454, "obj2": 0.18804993278487447}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,ARS ) / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / PN ) ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "Max( ( MUM / ( RRSe - ( ( Max( RCSe,RRSe ) / Max( Max( RMSe,( MUR + RRSe ) ),DS ) ) - Min( DS ,( CS / MUM ) ) ) ) ),Max( RRSe,RMSe ) )", "obj1": 0.6832669322709163, "obj2": 0.19882921770660614}, {"determining": "( Max( ARS,MRS ) * ( ( PN * ( FirstVNF_CPU_Server - CRS ) ) - Min( Min( ( BR - FirstVNF_CPU ) ,MDR ) ,PN ) ) )", "choosing": "Min( ( RRSe + ( Min( DS ,( ( ( MLU * ( MLU * MUR ) ) + ( MUM - MUM ) ) / MLU ) ) + ( ( MUM - MUC ) * RRSe ) ) ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.07258020195352563}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MLU ,CS ) / Min( ( CS / ( Min( RMSe ,CS ) / ( MLU - MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.651394422310757, "obj2": 0.2147731405485235}, {"determining": "( ( ( FirstVNF_CPU_Server * ( ARS + ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( PN ,( DDR * Max( ( AMS / Max( Max( FirstVNF_RAM,MDR ),DDR ) ),( ( ARS * BR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Max( Min( ( CS * Min( RMSe ,( DS / MUC ) ) ) ,Min( RRSe ,( ( MLU * CS ) - RCSe ) ) ),MLU ) - MUM )", "obj1": 0.4760956175298805, "obj2": 0.4024075049502507}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.49800796812749004, "obj2": 0.3726518705845994}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) - FirstVNF_RAM ) ,FirstVNF_CPU )", "choosing": "( Max( MUC,MUR ) - ( MUM - ( RMSe / ( MLU / RCSe ) ) ) )", "obj1": 0.898406374501992, "obj2": 0.07116493884788419}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / CRS ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.5617529880478087, "obj2": 0.3178985089378551}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7170989017418601}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / MUM )", "obj1": 0.5239043824701195, "obj2": 0.35598068148819717}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_CPU + CRS ),FirstVNF_CPU ) ) ,Max( ( ( AMS + ACS ) * ( Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) - PN ) ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - ( Max( RRSe,( ( MUR + MLU ) - MUM ) ) * Min( MLU ,Max( ( ( RRSe * RCSe ) + ( RCSe - RMSe ) ),Max( RRSe,RMSe ) ) ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 0.647410358565737, "obj2": 0.25696419525295383}, {"determining": "( ( Max( MRS,( ( ( Const * ( DDR * MDR ) ) / ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( ( Min( RMSe ,( DS * ( Min( MUR ,Min( ( MUR * MUM ) ,DS ) ) / MUM ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.601593625498008, "obj2": 0.2828085300274367}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ARS,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ) ) ,( ( Const + Max( MDR,DDR ) ) - Min( MDR ,PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * MUR ) / ( DS * MUR ) ) * ( CS * Min( Min( RRSe ,Max( MUC,Min( MUC ,CS ) ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6955948056685929}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( MUM - DS ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.44223107569721115, "obj2": 0.4468657505403457}, {"determining": "( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / CRS ) ) ) - MDR )", "choosing": "( ( ( MUR + MLU ) - MUM ) / MUM )", "obj1": 0.5896414342629482, "obj2": 0.3004192399622233}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6889880999647988}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,BR ) / ( FirstVNF_CPU_Server / CRS ) ) ,Max( ( ( AMS + ACS ) * ( BR - PN ) ),MRS ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * ( DS + CS ) ) ) * ( ( ( MUR * RCSe ) * RRSe ) - CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2722876310536717}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * ( ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( ( MUC - ( MUR / CS ) ) / ( ( DS * MUR ) - ( RCSe / RMSe ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5338455023360483}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( Min( ( FirstVNF_RAM - CRS ) ,Const ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.7057808723649716}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5677290836653387, "obj2": 0.31188861409590946}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9482071713147411, "obj2": 0.018957412416069155}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.39243027888446214, "obj2": 0.4869521684782991}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( MUR + MLU ) - MUM )", "obj1": 0.5199203187250996, "obj2": 0.357041853633125}, {"determining": "( ( FirstVNF_Mem / PN ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( Min( Max( ( FirstVNF_CPU / BR ),MDR ) ,PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( Min( RCSe ,Max( MUC,MUC ) ) ,MUC ) / RCSe ) )", "obj1": 0.9382470119521913, "obj2": 0.024948112141845766}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( Max( ( ARS + MDR ),( ACS + PN ) ) / ( Max( AMS,PN ) - ( Min( Const ,( FirstVNF_Mem + AMS ) ) - MRS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS * MUC ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( MUC + MUM ) ) - ( RCSe + RMSe ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5022340695521396}, {"determining": "( Max( MRS,ACS ) - Min( ARS ,BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( ( ( RMSe / ( RRSe + MLU ) ) * DS ),MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "( Min( ( FirstVNF_RAM_Server - ( DDR * ARS ) ) ,MDR ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS * MUR ) / ( RMSe + MLU ) ) ) - ( ( MUC / MUC ) - ( MUC * MLU ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5986974535587268}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6605275369444007}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.4581673306772908, "obj2": 0.42948862281631367}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( Max( FirstVNF_Mem,FirstVNF_RAM ) + CRS ) ),( DDR * MDR ) ) - ( ( ( ( DDR / FirstVNF_RAM_Server ) - ( ARS * MRS ) ) / ( RRS + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) ) / ( CRS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( Min( Max( ( ( MUM + MLU ) - Max( RMSe,DS ) ),Min( MUC ,CS ) ) ,MUM ) / ( MLU - ( MUM + CS ) ) ),DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6439230525592631}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.10135753297260537}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUC * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.46215139442231074, "obj2": 0.4294130648855765}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( ( ACS * DDR ) + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ) / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.7290836653386454, "obj2": 0.18804993278487447}, {"determining": "Max( ( BR - FirstVNF_CPU ),Min( ( FirstVNF_RAM - CRS ) ,Const ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( MUM - MUC ),( CS + MUC ) ) ) )", "obj1": 0.2868525896414343, "obj2": 0.5898720114543285}, {"determining": "( ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) + Max( ( Max( ( Max( ( CRS + MDR ),DDR ) + FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( FirstVNF_Mem / MRS ) ) ),Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( ( DS / MUM ) + Min( RMSe ,MUM ) ) )", "obj1": 0.9721115537848606, "obj2": 0.012773473779821123}, {"determining": "Min( Max( ( FirstVNF_Mem_Server + ARS ),FirstVNF_Mem ) ,Max( ( ( ARS + MDR ) * ( PN + Max( MRS,BR ) ) ),( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( RCSe * ( MUR / ( RCSe / DS ) ) ) * RCSe ) / MLU ) ) * CS ) ,( DS - CS ) )", "obj1": 0.42828685258964144, "obj2": 0.450853915340382}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6605275369444007}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7135024309478688}, {"determining": "Min( ( FirstVNF_Mem - ( ( AMS - Min( ( FirstVNF_Mem_Server + BR ) ,Max( AMS,BR ) ) ) / FirstVNF_Mem ) ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( MUM - ( MLU - ( DS * ( Min( CS ,MUR ) / MLU ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.04760977423219641}, {"determining": "( ( Const + PN ) * Max( Const,Const ) )", "choosing": "Min( ( Min( ( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3187250996015936, "obj2": 0.5543591486478394}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( Const ,AMS ) ) ,( ACS * ( FirstVNF_RAM_Server / ( ACS + BR ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( MUC * Max( Max( RCSe,MUC ),Min( ( Max( MUC,RCSe ) + CS ) ,RCSe ) ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3784860557768924, "obj2": 0.49043734141159917}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "Min( ( Max( ( Const * FirstVNF_Mem ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem_Server / Max( MRS,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) + FirstVNF_Mem ) ) - ( FirstVNF_CPU * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( DS - RRSe ) / MUC ) ) * CS ) ,( MUC - ( ( Max( Max( MUR,DS ),( Min( ( MUC + MUR ) ,DS ) + RRSe ) ) + RMSe ) + Max( ( DS - ( MUC / DS ) ),MUR ) ) ) )", "obj1": 0.4203187250996016, "obj2": 0.45594533278670435}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.4604367430885272}, {"determining": "Min( ( Max( ( Const * RRS ),Min( ( MDR * PN ) ,Max( Const,Const ) ) ) * ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( ACS / FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( Max( CS,CS ) * ( Max( Max( ( RMSe + DS ),RMSe ),MUR ) / MUC ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5478517699954443}, {"determining": "Min( ( FirstVNF_RAM - Max( ( FirstVNF_CPU + CRS ),FirstVNF_CPU ) ) ,Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - ( Max( RRSe,MLU ) * Min( MLU ,Max( Max( RRSe,MUR ),Max( RRSe,RMSe ) ) ) ) ) * ( ( Max( MUR,RCSe ) * RRSe ) - CS ) )", "obj1": 0.6354581673306773, "obj2": 0.2722876310536717}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( PN,Max( AMS,FirstVNF_CPU ) ) ) ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,( DS - RCSe ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6117255813851636}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Max( ACS,( ARS / FirstVNF_CPU ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.4043824701195219, "obj2": 0.4718423814791003}, {"determining": "Max( ( BR - FirstVNF_CPU ),Min( ( FirstVNF_RAM - CRS ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( Max( ( MUM * CS ),( RRSe / RCSe ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.30876494023904383, "obj2": 0.5617888894312925}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( Const,PN ) ) ) ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.609896564980878}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( MDR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Max( ( ( MUR / RMSe ) / MUM ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) )", "obj1": 0.7868525896414342, "obj2": 0.09721374135282809}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR / FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( ( BR - Min( ( DDR * MRS ) ,DDR ) ) - MRS ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5833169347639189}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.25697211155378485, "obj2": 0.6199794410977044}, {"determining": "( ( Const + PN ) * Max( BR,Min( PN ,( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Min( ACS ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6889880999647988}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Max( RRSe,MUR ) - ( MUM - MUC ) )", "obj1": 0.7908366533864541, "obj2": 0.08994961429665776}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / ( MUR - Max( RMSe,RMSe ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.08389238221530675}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,FirstVNF_CPU )", "choosing": "( Max( MUC,MUR ) - ( MUM - ( RMSe / ( MLU / RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.0646894944703818}, {"determining": "( Max( CRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( MDR * DDR ) - Min( FirstVNF_Mem_Server ,( RRS + Max( ARS,FirstVNF_Mem ) ) ) ) ) ) - ( ARS - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,( ( ( ( MUC * MUC ) * Max( MUC,MUM ) ) + ( ( RRSe - RCSe ) + RCSe ) ) * ( ( RRSe * MUR ) + ( Max( Min( RMSe ,MUC ),Min( MUM ,( CS * MUM ) ) ) - ( CS / RCSe ) ) ) ) ) / MUM )", "obj1": 0.5976095617529881, "obj2": 0.2916870053944621}, {"determining": "( Max( Max( Min( FirstVNF_CPU ,MDR ),( FirstVNF_RAM - FirstVNF_CPU_Server ) ),Const ) * ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) * RRS ) + PN ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,( DS / MUC ) ) * CS ) ,( DS - ( MLU + MLU ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5809811030239175}, {"determining": "Min( ( ( ( RRS * FirstVNF_RAM ) + Max( Const,CRS ) ) * Max( ( ARS / FirstVNF_CPU ),ACS ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( RCSe * MUR ) ,( RMSe - ( CS + MLU ) ) )", "obj1": 0.4123505976095618, "obj2": 0.47065079032156876}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),Min( ( FirstVNF_RAM - CRS ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( ( ( MLU + DS ) * RCSe ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3047808764940239, "obj2": 0.5734441221334408}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) )", "obj1": 0.9143426294820717, "obj2": 0.06102475116294416}, {"determining": "Min( ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( ( DDR + PN ),FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_CPU_Server ) ) ) ,Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) )", "choosing": "Min( Max( ( ( ( MUC + CS ) - Max( ( DS / CS ),( Max( Min( MLU ,DS ),( RCSe / MUR ) ) - RCSe ) ) ) + MUR ),MUC ) ,Min( ( ( DS + ( ( MUC / Max( RRSe,DS ) ) / MUM ) ) * ( ( DS * DS ) / MUM ) ) ,MUC ) )", "obj1": 0.3207171314741036, "obj2": 0.5485620975449649}, {"determining": "( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / MUM )", "obj1": 0.5976095617529881, "obj2": 0.2916870053944621}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.46215139442231074, "obj2": 0.4294130648855765}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( MUR ,RRSe ) / MUM ) + MLU ) - MUM )", "obj1": 0.9223107569721115, "obj2": 0.049434410231848455}, {"determining": "Min( ( ( FirstVNF_RAM / ( FirstVNF_Mem + DDR ) ) - Max( ACS,ACS ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( MLU ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.9163346613545816, "obj2": 0.052846759365882894}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( ( Min( MDR ,FirstVNF_CPU_Server ) * MDR ) ,PN ) ) )", "choosing": "( ( ( ( DS / ( MLU + RCSe ) ) / ( ( ( ( Min( MLU ,MUR ) - MUM ) / ( Max( DS,MLU ) + ( MUR / RCSe ) ) ) + MUC ) + Max( ( DS * RCSe ),Min( RRSe ,( DS / RRSe ) ) ) ) ) / MUR ) * ( Min( MUR ,MUR ) / RCSe ) )", "obj1": 0.8007968127490039, "obj2": 0.07611231488143298}, {"determining": "( ( ACS * ( ( ( ACS / CRS ) * BR ) * AMS ) ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( MUC * RRSe ) / ( MUR * ( ( MUM * ( MUM + MUR ) ) / ( MLU - MUR ) ) ) ) * ( Min( MUR ,RCSe ) / RCSe ) )", "obj1": 0.7928286852589641, "obj2": 0.08549428336603214}, {"determining": "Max( ( FirstVNF_CPU - FirstVNF_CPU ),Min( Max( MDR,FirstVNF_CPU ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( ( ( MUM * CS ) - ( RRSe / RCSe ) ),( ( RRSe * ( MUM + MUR ) ) + Min( RRSe ,RRSe ) ) ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.30876494023904383, "obj2": 0.5617888894312925}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Max( ACS,( ARS / FirstVNF_CPU ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.4043824701195219, "obj2": 0.4718423814791003}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Max( ( MUM / RCSe ),Max( RRSe,RMSe ) )", "obj1": 0.9840637450199203, "obj2": 0.007388364438618439}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6252849204197106}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Max( ( Min( Min( ( MUC + RMSe ) ,CS ) ,CS ) * DS ),Max( RCSe,( Max( DS,CS ) + ( MUC * Min( MLU ,( RCSe / DS ) ) ) ) ) ) + RRSe ) * ( RMSe / ( MUR - ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) ) ) )", "obj1": 0.7828685258964143, "obj2": 0.10135753297260537}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - Max( DDR,Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) + Min( BR ,MRS ) ) ) - Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,CS ) / Min( MUM ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,CS ) ) ) ) + DS ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6321219964847509}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6321219964847509}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_RAM_Server - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( ( AMS + Min( Const ,FirstVNF_CPU_Server ) ),( DDR / CRS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( RRSe + CS ) ,( Min( MLU ,( ( ( MUR - RMSe ) + RCSe ) * CS ) ) / RCSe ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) ) * Min( Const ,AMS ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( DS - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.5019065144444493}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) ) )", "obj1": 0.9800796812749004, "obj2": 0.01101872112633556}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_Mem,Const ) ,( BR * MDR ) ) ) )", "choosing": "( Max( ( ( MUC - ( RMSe * RRSe ) ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Max( DS,RCSe ) ) ) + Min( RMSe ,MUM ) )", "obj1": 0.9322709163346613, "obj2": 0.04874449438740727}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( Const,PN ) ) ) ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.609896564980878}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.9741035856573705, "obj2": 0.012263131439906002}, {"determining": "( Max( ( ( Const / FirstVNF_RAM ) + Min( BR ,MRS ) ),( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + Min( Max( RRS,Min( MDR ,ACS ) ) ,Const ) ) ) ) - ( CRS + MRS ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( RCSe - Max( MUM,Min( ( MUM * MLU ) ,CS ) ) ) + Min( DS ,( Min( MUR ,DS ) / Min( ( CS + Min( DS ,CS ) ) ,MUM ) ) ) ) )", "obj1": 0.2549800796812749, "obj2": 0.6252849204197106}, {"determining": "Min( ( Max( ( Const * RRS ),Min( ( MDR * PN ) ,Max( Const,Const ) ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5478517699954443}, {"determining": "Min( ( Max( ( DDR * BR ),( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( Max( Min( ARS ,MDR ),MDR ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Max( Min( Max( ( MUR + MUR ),DS ) ,( DS / MUC ) ),CS ) ,( DS - CS ) )", "obj1": 0.3745019920318725, "obj2": 0.494220868820352}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( ( MDR * PN ) ,Max( Const,Const ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06671374937452743}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( Const,PN ) ,ACS ) ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( DS - CS ) )", "obj1": 0.300796812749004, "obj2": 0.5754774384250533}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,RRSe ) / RCSe ) )", "obj1": 0.8007968127490039, "obj2": 0.07611231488143298}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( DS + CS ) ,Max( ( Max( RCSe,( Min( MUR ,( Max( DS,RMSe ) * ( MLU / RMSe ) ) ) / ( RMSe * RRSe ) ) ) - ( MUM + CS ) ),MUC ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "( Max( CRS,( CRS - BR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( ( Min( CS ,Min( MUR ,( ( ( Min( MUM ,MUR ) - MUM ) - RCSe ) + RRSe ) ) ) + MUR ) / ( MUC + MUM ) )", "obj1": 0.4103585657370518, "obj2": 0.4714127777575015}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( Const ,AMS ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.49816580309887615}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3745019920318725, "obj2": 0.494220868820352}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),Min( ( FirstVNF_RAM - CRS ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( ( ( MLU + DS ) * RCSe ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.30278884462151395, "obj2": 0.5752047006073537}, {"determining": "Min( MDR ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Min( ( MLU - ( MUM * CS ) ) ,( DS / MUC ) ) ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.49816580309887615}, {"determining": "( ( ( ( FirstVNF_Mem_Server - MRS ) * RRS ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,DS ) / ( ( MUR + RCSe ) + ( Min( MUR ,DS ) / Min( RMSe ,MUM ) ) ) ) + ( Min( RRSe ,( RRSe - ( MUM / Max( RMSe,Min( MUM ,MUC ) ) ) ) ) + ( ( MLU / DS ) - Max( ( MLU * RMSe ),MLU ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.004772014440514079}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUC,MUC ),MUR ) - ( MUM - MUC ) )", "obj1": 0.9143426294820717, "obj2": 0.06102475116294416}], "7": [{"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( FirstVNF_RAM_Server * Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( DS ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ACS,ACS ) - ( ( ( MDR + FirstVNF_Mem ) - FirstVNF_RAM ) / ( FirstVNF_Mem + DDR ) ) ) ,( Max( ( ARS + MDR ),( ACS / PN ) ) / ( ( FirstVNF_CPU + ACS ) - Max( AMS,PN ) ) ) )", "choosing": "Min( ( DS - CS ) ,Min( RRSe ,Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( Max( BR,Max( MRS,Const ) ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( RRSe * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.599601593625498, "obj2": 0.25058495165543954}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + Max( AMS,PN ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( DS ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7390438247011952, "obj2": 0.1650738190350554}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) ) + ( ( ACS * DDR ) + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( MUR * MLU ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.8764940239043825, "obj2": 0.06940837653805415}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( Max( ( ( ( FirstVNF_Mem_Server / ARS ) / ( Const + BR ) ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - Min( RRSe ,( RMSe + MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,ARS ) / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / PN ) ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "Max( ( MUM / ( RRSe - ( ( Max( RCSe,RRSe ) / Max( Max( RMSe,( MUR + RRSe ) ),DS ) ) - Min( DS ,( CS / MUM ) ) ) ) ),Max( RRSe,RMSe ) )", "obj1": 0.6832669322709163, "obj2": 0.19882921770660614}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5278884462151394, "obj2": 0.316553938989044}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( ( ACS * DDR ) + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ) / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.7250996015936255, "obj2": 0.18361171459840128}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.750996015936255, "obj2": 0.10837780440806395}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( ( ( MUM * CS ) - ( RRSe / RCSe ) ),( ( RRSe * ( MUM + MUR ) ) + Min( RRSe ,RRSe ) ) ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.8047808764940239, "obj2": 0.07258020195352563}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MLU ,MUR ) / ( ( Max( MUC,MUR ) - Max( ( CS - Min( MUR ,MUC ) ),MUM ) ) + MUM ) )", "obj1": 0.4302788844621514, "obj2": 0.4410094290699472}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.45617529880478086, "obj2": 0.4128084085152279}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.49800796812749004, "obj2": 0.3726518705845994}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Max( CRS,CRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM * MLU ) / ( ( MUC * Min( MUC ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.5816733067729084, "obj2": 0.2706676416289721}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / CRS ) ) )", "choosing": "Min( ( Min( RMSe ,Min( MUM ,( CS * MUM ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.5717131474103586, "obj2": 0.3093494141510143}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6605275369444007}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( Min( ( FirstVNF_RAM - CRS ) ,Const ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.7057808723649716}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( ( ( MLU + DS ) * RCSe ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.48804780876494025, "obj2": 0.3839106269343541}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MLU ,CS ) / Min( ( CS / ( Min( RMSe ,CS ) / ( MLU - MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.651394422310757, "obj2": 0.2147731405485235}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.47410358565737054, "obj2": 0.40239312428027324}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / MUM )", "obj1": 0.5239043824701195, "obj2": 0.35598068148819717}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7170989017418601}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5677290836653387, "obj2": 0.31188861409590946}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9482071713147411, "obj2": 0.018957412416069155}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.4604367430885272}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.651394422310757, "obj2": 0.2147731405485235}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / ( MUR - Max( MUR,RMSe ) ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09466853969086982}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( MUR + MLU ) - MUM )", "obj1": 0.5199203187250996, "obj2": 0.357041853633125}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7170989017418601}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10568270999220532}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.39243027888446214, "obj2": 0.47019846417798633}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.9342629482071713, "obj2": 0.029283264426114244}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( Max( MUC,RCSe ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.9243027888446215, "obj2": 0.048039631633063934}, {"determining": "Min( ( MDR / RRS ) ,( PN / Const ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUM + Min( CS ,MUC ) ) ) ) ) ) ,Min( RRSe ,( RMSe / Max( Max( RCSe,CS ),( MUR - Min( RMSe ,MUC ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5273254000458667}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUC * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.5816733067729084, "obj2": 0.2706676416289721}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MLU ,CS ) / Min( ( CS / ( Min( RMSe ,CS ) / ( MLU - MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6573705179282868, "obj2": 0.20972589838949798}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - ( RRS + FirstVNF_CPU_Server ) ) + MDR ) * ( BR + PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "Min( ( CS * Min( ( ( CS * CS ) - ( MUR - MUM ) ) ,( DS / MUC ) ) ) ,Max( RMSe,( ( Max( RRSe,( Min( RRSe ,CS ) / MUR ) ) * ( MUC / MLU ) ) - Max( Min( MUR ,MLU ),RCSe ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5331009462988638}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7135024309478688}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6605275369444007}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( Min( ( Min( RMSe ,( DS / ( DS - CS ) ) ) * CS ) ,( DS - CS ) ) + MLU ) - MUM )", "obj1": 0.4641434262948207, "obj2": 0.41260942010272506}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( ( Min( MDR ,FirstVNF_CPU_Server ) * MDR ) ,PN ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / ( Min( MUR ,RRSe ) / MUM ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.35258964143426297, "obj2": 0.5143001738677017}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( ( MDR * PN ) ,Max( Const,Const ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06671374937452743}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( ( FirstVNF_CPU_Server - CRS ) ,AMS ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( Max( MUR,MUC ) * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.35856573705179284, "obj2": 0.5042865349263195}, {"determining": "Max( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_Mem,Const ) ,( BR * MDR ) ) ) ),Min( Max( MDR,FirstVNF_CPU ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( ( ( MUM * CS ) - ( RRSe / RCSe ) ),( ( MUC - ( RMSe * RRSe ) ) + ( RCSe - MUM ) ) ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3247011952191235, "obj2": 0.544366765125892}, {"determining": "Min( ( ( ( Min( ( Max( FirstVNF_CPU,( MRS + BR ) ) * ( FirstVNF_RAM + MDR ) ) ,BR ) / Min( ARS ,FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) * ( ( PN + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( CS ,( CS + MUM ) ) * CS ) ,( DS + CS ) )", "obj1": 0.4203187250996016, "obj2": 0.45316184614685584}, {"determining": "( Max( MRS,FirstVNF_CPU ) - Max( Max( FirstVNF_Mem_Server,BR ),FirstVNF_CPU ) )", "choosing": "Min( ( ( RMSe - DS ) * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4837493174466313}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + MUM ) )", "obj1": 0.798804780876494, "obj2": 0.08263518853960161}, {"determining": "( ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) + Max( ( Max( ( Max( ( CRS + MDR ),DDR ) + FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( FirstVNF_Mem / MRS ) ) ),Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( ( DS / MUM ) + Min( RMSe ,MUM ) ) )", "obj1": 0.9721115537848606, "obj2": 0.012773473779821123}, {"determining": "( Min( ( FirstVNF_RAM_Server - ( DDR * ARS ) ) ,MDR ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS * MUR ) / ( RMSe + MLU ) ) ) - ( ( MUC / MUC ) - ( MUC * MLU ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5986974535587268}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( PN,Max( AMS,FirstVNF_CPU ) ) ) ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,( DS - RCSe ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6117255813851636}, {"determining": "( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( Max( ( ( MRS / FirstVNF_Mem ) + MRS ),MDR ) * PN ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,( ( MUR + ( MUM * MUC ) ) / Max( MLU,Min( DS ,MLU ) ) ) ) / Min( RCSe ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,CS ) ) ) ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08356666950631411}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( Const,PN ) ) ) ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.609896564980878}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_Mem,Const ) ,( ( FirstVNF_CPU_Server - CRS ) * PN ) ) ) )", "choosing": "( Max( ( ( MUC - ( RMSe * RRSe ) ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Max( DS,RCSe ) ) ) + Max( ( ( MUR / RMSe ) / MUM ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) ) )", "obj1": 0.9143426294820717, "obj2": 0.060196984576222426}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) + Min( BR ,MRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( ( ( RRSe + MLU ) - Max( RRSe,MUR ) ) / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6439230525592631}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7828685258964143, "obj2": 0.0892588614464362}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( Const,PN ) ) ) ) / Min( Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( MLU / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6316034182697154}, {"determining": "( Max( MRS,ACS ) - Max( ( RRS + ARS ),FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( Min( Min( ( ( RCSe + MLU ) + Min( DS ,RRSe ) ) ,MUC ) ,Max( RRSe,Min( MLU ,( MUM * RMSe ) ) ) ),Max( Min( Max( MUR,MUM ) ,CS ),DS ) ) ) / MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.25697211155378485, "obj2": 0.6199794410977044}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,FirstVNF_CPU )", "choosing": "( Max( MUC,MUR ) - ( MUM - ( RMSe / ( MLU / RCSe ) ) ) )", "obj1": 0.9083665338645418, "obj2": 0.0646894944703818}, {"determining": "Min( Max( ( FirstVNF_Mem_Server + ARS ),FirstVNF_Mem ) ,Max( ( ( ARS + MDR ) * ( PN + Max( MRS,BR ) ) ),( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( RCSe * ( MUR / ( RCSe / DS ) ) ) * RCSe ) / MLU ) ) * CS ) ,( DS - CS ) )", "obj1": 0.42828685258964144, "obj2": 0.450853915340382}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MLU ,CS ) / Min( ( CS / ( Min( RMSe ,CS ) / ( MLU - MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6573705179282868, "obj2": 0.20972589838949798}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR / FirstVNF_RAM ),( Const * MDR ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( ( BR - Min( ( DDR * MRS ) ,DDR ) ) - MRS ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5833169347639189}, {"determining": "Min( ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( ( DDR + PN ),FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_CPU_Server ) ) ) ,Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) )", "choosing": "Min( Max( ( ( ( MUC + CS ) - Max( ( DS / CS ),( Max( Min( MLU ,DS ),( RCSe / MUR ) ) - RCSe ) ) ) + MUR ),MUC ) ,Min( ( ( DS + ( ( MUC / Max( RRSe,DS ) ) / MUM ) ) * ( ( DS * DS ) / MUM ) ) ,MUC ) )", "obj1": 0.3207171314741036, "obj2": 0.5485620975449649}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - ( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( ( ACS * DDR ) + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) ) ),Min( ( FirstVNF_RAM - CRS ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,RCSe ) ) * ( ( ( MLU + DS ) * RCSe ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.30677290836653387, "obj2": 0.5704939958088838}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( FirstVNF_Mem + DDR ) * DDR ) ) ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( ( DS / MUM ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5958024244232045}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Max( ACS,( ARS / FirstVNF_CPU ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / ( Min( MUR ,RRSe ) / MUM ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.39243027888446214, "obj2": 0.47019846417798633}, {"determining": "( Max( MRS,Max( Max( AMS,MRS ),AMS ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( Max( ( ( MLU * ( Min( DS ,MUC ) - ( CS / DS ) ) ) - RMSe ),( MUM + MUR ) ) / CS ) ) - Max( ( ( MLU * RRSe ) * Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.49536838508954983}, {"determining": "( ( Const + PN ) * Max( Const,Const ) )", "choosing": "Min( ( Min( ( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3187250996015936, "obj2": 0.5543591486478394}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Max( ACS,( ARS / FirstVNF_CPU ) ) ) ,( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) )", "choosing": "Min( ( ( DS - CS ) * MUC ) ,( RMSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.5597522077334814}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( Max( ( ARS + MDR ),( ACS + PN ) ) / ( Max( AMS,PN ) - ( Min( Const ,( FirstVNF_Mem + AMS ) ) - MRS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS * MUC ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( MUC + MUM ) ) - ( RCSe + RMSe ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5022340695521396}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( Max( FirstVNF_Mem,FirstVNF_RAM ) + CRS ) ),( DDR * MDR ) ) - ( ( ( ( DDR / FirstVNF_RAM_Server ) - ( ARS * MRS ) ) / ( RRS + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) ) / ( CRS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( Min( Max( ( ( MUM + MLU ) - Max( RMSe,DS ) ),Min( MUC ,CS ) ) ,MUM ) / ( MLU - ( MUM + CS ) ) ),DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6439230525592631}, {"determining": "Min( Min( ( FirstVNF_RAM - CRS ) ,Const ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( Max( ( MUM * CS ),( RRSe / RCSe ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) ) - Max( CS,CS ) ) ) ,( DS - CS ) )", "obj1": 0.3844621513944223, "obj2": 0.48460342304264625}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) - Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + Min( MDR ,RRS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.9840637450199203, "obj2": 0.006408518907557051}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_CPU_Server * RRS ) ),( Min( Const ,( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) + Min( BR ,MRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( ( ( RRSe + MLU ) - Max( RRSe,MUR ) ) / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6261300943757944}, {"determining": "Max( ( FirstVNF_CPU - ( FirstVNF_CPU_Server - CRS ) ),( RRS / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Max( ( Min( ( CS * CS ) ,DS ) / Min( ( MUM * MLU ) ,DS ) ),( MUR + ( Min( MUM ,CS ) / RCSe ) ) ) + MUC ) * ( Max( ( ( MUM * CS ) - ( MUR / RCSe ) ),( ( RRSe * ( MUM + MUR ) ) + Min( RRSe ,RRSe ) ) ) - Max( CS,CS ) ) ) * RRSe ) ,( DS - CS ) )", "obj1": 0.2968127490039841, "obj2": 0.577615921567625}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( PN - BR ) + Max( Const,PN ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,( MUR + MLU ) ) / RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0026007137948570566}, {"determining": "Min( ( ( FirstVNF_RAM / ( FirstVNF_Mem + DDR ) ) - Max( ACS,ACS ) ) ,( ( MDR * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( MLU ,( Min( MUR ,RRSe ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.9163346613545816, "obj2": 0.052846759365882894}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * FirstVNF_RAM_Server ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) * CS ) ,( DS - CS ) )", "obj1": 0.3745019920318725, "obj2": 0.4942200128571474}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ACS - BR ) * PN ) - Min( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),PN ) ,ACS ) ) ) ),( Max( ( FirstVNF_CPU - CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( Min( CS ,( MUC - MUR ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) - CS ) )", "obj1": 0.2908366533864542, "obj2": 0.588010379984362}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.9382470119521913, "obj2": 0.024948112141845766}, {"determining": "Max( ( BR - FirstVNF_CPU ),Min( ( FirstVNF_RAM - CRS ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( Max( ( MUM * CS ),( RRSe / RCSe ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.30876494023904383, "obj2": 0.5617888894312925}, {"determining": "( Max( MRS,ACS ) - Min( ARS ,BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( ( ( RMSe / ( RRSe + MLU ) ) * DS ),MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) ) )", "obj1": 0.9800796812749004, "obj2": 0.01101872112633556}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - Max( ( DDR + FirstVNF_RAM ),( Const * MDR ) ) ),Min( ( FirstVNF_RAM - CRS ) ,Const ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( MUM - MUC ),( CS + MUC ) ) ) )", "obj1": 0.2868525896414343, "obj2": 0.5898720114543285}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( Const ,AMS ) ) ,( ACS * ( FirstVNF_RAM_Server / ( ACS + BR ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( MUC * Max( Max( RCSe,MUC ),Min( ( Max( MUC,RCSe ) + CS ) ,RCSe ) ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3784860557768924, "obj2": 0.49043734141159917}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( Const ,ARS ) ) ,( ( Min( FirstVNF_RAM_Server ,BR ) - Min( AMS ,MRS ) ) / ( Max( PN,AMS ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( DS - CS ) ,( MUM + ( ( RMSe - Max( MUM,MLU ) ) / Min( ( MUC * MUR ) ,( DS + RMSe ) ) ) ) )", "obj1": 0.3784860557768924, "obj2": 0.49043734141159917}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - PN )", "choosing": "Min( ( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5614956933050057}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( BR - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) + Max( Const,PN ) ) ) ) / Min( DDR ,ACS ) )", "choosing": "( Min( ( Min( RMSe ,Min( DS ,MUC ) ) * ( DS * MUC ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( Min( CS ,Max( CS,MUR ) ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.609896564980878}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.9741035856573705, "obj2": 0.012263131439906002}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( DS + CS ) ,Max( ( Max( RCSe,( Min( MUR ,( Max( DS,RMSe ) * ( MLU / RMSe ) ) ) / ( RMSe * RRSe ) ) ) - ( MUM + CS ) ),MUC ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,RRSe ) / RCSe ) )", "obj1": 0.8007968127490039, "obj2": 0.07611231488143298}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM ) ,Max( ARS,PN ) ) ,ACS ) - Max( FirstVNF_RAM,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( Max( CS,MLU ) * DS ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS * Min( ( RRSe / MLU ) ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5980044860479121}, {"determining": "( ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,FirstVNF_CPU ) ) + Max( ( Max( ( Max( ( CRS + MDR ),DDR ) + FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( FirstVNF_Mem / MRS ) ) ),Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - ( ( DS / MUM ) + Min( RMSe ,MUM ) ) )", "obj1": 0.9721115537848606, "obj2": 0.012773473779821123}, {"determining": "Min( Max( MDR,( ( Min( MRS ,FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( RRS,PN ) ) ) ) ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / Max( RRSe,MUR ) ) * ( CS * Min( ( DS - ( ( ( RCSe * RRSe ) + MUR ) + Max( MUR,MUR ) ) ) ,RRSe ) ) )", "obj1": 0.9023904382470119, "obj2": 0.06671374937452743}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( Min( MDR ,PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Min( MLU ,( RCSe / DS ) ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.9362549800796812, "obj2": 0.02698213909177377}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( PN / MDR ) / PN ) ) ) )", "choosing": "( Min( Min( ( MLU - ( MUM * CS ) ) ,( DS / MUC ) ) ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.99800796812749, "obj2": 0.0006120327618384716}, {"determining": "( ( FirstVNF_Mem / PN ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( Min( Max( ( FirstVNF_CPU / BR ),MDR ) ,PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( Min( RCSe ,Max( MUC,MUC ) ) ,MUC ) / RCSe ) )", "obj1": 0.9382470119521913, "obj2": 0.024948112141845766}], "8": [{"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Max( MRS,FirstVNF_CPU ) - Max( Max( ( FirstVNF_Mem + FirstVNF_RAM_Server ),BR ),FirstVNF_CPU ) )", "choosing": "Min( ( ( RMSe - DS ) * MUC ) ,( RMSe - ( CS / Min( DS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( FirstVNF_RAM_Server * Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( DS ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06331157443118222}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + Max( AMS,PN ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( DS ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7390438247011952, "obj2": 0.1650738190350554}, {"determining": "( Max( MRS,BR ) - Max( AMS,( RRS + ACS ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM - MLU ) / ( Max( MUM,MLU ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5358565737051793, "obj2": 0.28702027228591587}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUC * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.5617529880478087, "obj2": 0.2592988526093033}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5278884462151394, "obj2": 0.316553938989044}, {"determining": "( Max( PN,PN ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) + ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( ( RMSe - CS ) - CS ) + ( ( MUM * RMSe ) + Min( Max( MLU,( Min( MUC ,MUM ) - Max( ( MUR + MUM ),Min( MLU ,CS ) ) ) ) ,( ( Min( CS ,RRSe ) * CS ) * MUC ) ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.34176491650310914}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUC * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.6055776892430279, "obj2": 0.24214872135833354}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,ARS ) / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / PN ) ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "Max( ( MUM / ( RRSe - ( ( Max( RCSe,RRSe ) / Max( Max( RMSe,( MUR + RRSe ) ),DS ) ) - Min( DS ,( CS / MUM ) ) ) ) ),Max( RRSe,RMSe ) )", "obj1": 0.6832669322709163, "obj2": 0.19882921770660614}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( Max( FirstVNF_Mem,FirstVNF_RAM ) + CRS ) ),( DDR * MDR ) ) - ( ( ( ( DDR / FirstVNF_RAM_Server ) - ( ARS * MRS ) ) / ( RRS + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) ) / ( CRS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( Min( Max( ( ( MUM + MLU ) - Max( RMSe,DS ) ),Min( MUC ,CS ) ) ,MUM ) / ( MLU - ( MUM + CS ) ) ),DS ) ) )", "obj1": 0.9063745019920318, "obj2": 0.061988233743595494}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.750996015936255, "obj2": 0.10837780440806395}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6758671550048374}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( Min( ( FirstVNF_RAM - CRS ) ,Const ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.7057808723649716}, {"determining": "Min( Min( ( FirstVNF_RAM - CRS ) ,Const ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) / ACS ) ) ) )", "choosing": "Min( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( Max( ( ( Min( MUR ,RRSe ) / MUM ) * CS ),( RRSe / RCSe ) ),( ( RRSe * RRSe ) + Min( RRSe ,RRSe ) ) ) - Max( CS,CS ) ) ) ,( DS - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.4301881415245636}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7111553784860558, "obj2": 0.18777544767231458}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7170989017418601}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MLU ,CS ) / Min( ( CS / ( Min( RMSe ,CS ) / ( MLU - MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.651394422310757, "obj2": 0.2147731405485235}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) - ( CS + CS ) ) )", "obj1": 0.5956175298804781, "obj2": 0.2544391090316962}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.49800796812749004, "obj2": 0.3726518705845994}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,Min( ( Min( MDR ,FirstVNF_CPU_Server ) * MDR ) ,PN ) ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( Max( MUC,RCSe ) ,( ( Min( RMSe ,( DS / ( Min( MUR ,RRSe ) / MUM ) ) ) * CS ) - ( CS + CS ) ) )", "obj1": 0.9243027888446215, "obj2": 0.04768371955828385}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( ( ( MUM * CS ) - ( RRSe / RCSe ) ),( ( RRSe * ( MUM + MUR ) ) + Min( RRSe ,RRSe ) ) ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.8047808764940239, "obj2": 0.07258020195352563}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / ( MUR - Max( MUR,RMSe ) ) ) )", "obj1": 0.7768924302788844, "obj2": 0.09466853969086982}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7170989017418601}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( ( ( MLU + DS ) * RCSe ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.48804780876494025, "obj2": 0.3839106269343541}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( ( ACS * DDR ) + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ) / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.7250996015936255, "obj2": 0.18361171459840128}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.651394422310757, "obj2": 0.2147731405485235}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.9342629482071713, "obj2": 0.028933782247345618}, {"determining": "( ( Min( FirstVNF_CPU_Server ,Max( ARS,( BR + Const ) ) ) + ( MDR * ( Min( DDR ,ARS ) - PN ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( DS * MUR ) + Min( Max( MUM,MLU ) ,CS ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) ) ,( MUC / DS ) ) * CS ) ,( DS - CS ) )", "obj1": 0.4760956175298805, "obj2": 0.3952170458292011}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( ( MLU - ( MUM + CS ) ) / Min( Min( ( ( MUM + MLU ) - Max( RRSe,DS ) ) ,Min( MUC ,CS ) ) ,MUM ) ),DS ) ) )", "obj1": 0.7589641434262948, "obj2": 0.1049993642999286}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MLU ,MUR ) / ( ( Max( MUC,MUR ) - Max( ( CS - Min( MUR ,MUC ) ),MUM ) ) + MUM ) )", "obj1": 0.4302788844621514, "obj2": 0.4410094290699472}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MLU ,CS ) / Min( ( CS / ( Min( RMSe ,CS ) / ( MLU - MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6573705179282868, "obj2": 0.20972589838949798}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6605275369444007}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( Min( ( AMS + BR ) ,MRS ) - FirstVNF_CPU ) * CRS ) - Min( Max( ( BR - FirstVNF_CPU ),Max( RRS,ACS ) ) ,( ( RRS * FirstVNF_CPU_Server ) + Max( Max( ACS,( Const - ( DDR * MDR ) ) ),Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( RMSe / Min( Max( DS,CS ) ,( Min( RMSe ,( DS / ( Min( CS ,CS ) / ( MLU - CS ) ) ) ) * CS ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.014740968109491232}, {"determining": "Min( ( MDR / RRS ) ,( PN / Const ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUM + Min( CS ,MUC ) ) ) ) ) ) ,Min( RRSe ,( RMSe / Max( Max( RCSe,CS ),( MUR - Min( RMSe ,MUC ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5273254000458667}, {"determining": "Min( ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) / FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( ( MUR * MUR ) + MUM ) ) - CS ) )", "obj1": 0.350597609561753, "obj2": 0.5082829857534527}, {"determining": "Max( Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6204184129356471}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / ( ( RRS * Max( CRS,AMS ) ) + ( AMS + BR ) ) ) / PN ) ) ) )", "choosing": "Min( Min( ( MUC + ( MLU * ( MLU - ( ( MUR - DS ) - ( MUC + ( RCSe - DS ) ) ) ) ) ) ,CS ) ,( DS - CS ) )", "obj1": 0.45617529880478086, "obj2": 0.4128084085152279}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,( MUR + MLU ) ) / RCSe ) )", "obj1": 0.4123505976095618, "obj2": 0.4582038361295955}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6605275369444007}, {"determining": "( ( Max( Max( MDR,FirstVNF_Mem ),Min( BR ,RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / Min( Min( ARS ,AMS ) ,( ( Min( MDR ,Min( CRS ,Min( CRS ,FirstVNF_RAM ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( Max( ( MUM * RMSe ),( RMSe + MLU ) ) + ( CS + CS ) ) - CS ) ,RRSe ) * Max( Max( ( DS - DS ),MLU ),MUR ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.4063745019920319, "obj2": 0.46181793983340175}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * FirstVNF_RAM_Server ) / ( Max( AMS,( ( FirstVNF_CPU_Server - CRS ) * PN ) ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( MUM ,( DS - CS ) )", "obj1": 0.38645418326693226, "obj2": 0.4826563835844321}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) + MDR ) * ( Max( MRS,BR ) + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MLU + ( MLU + ( MUR + RMSe ) ) ) * RCSe ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.4203187250996016, "obj2": 0.4513014091931386}, {"determining": "Min( ( ( FirstVNF_RAM / ( FirstVNF_Mem + DDR ) ) - Max( ACS,ACS ) ) ,( ( MDR * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( MLU ,( Min( MUR ,RRSe ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.9163346613545816, "obj2": 0.052846759365882894}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( Max( BR,Max( MRS,Const ) ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( RRSe * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.599601593625498, "obj2": 0.25058495165543954}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( Min( ( Min( RMSe ,( DS / ( DS - CS ) ) ) * CS ) ,( DS - CS ) ) + MLU ) - MUM )", "obj1": 0.4960159362549801, "obj2": 0.37739102618936177}, {"determining": "Min( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Max( MDR,CRS ) ) * Min( Const ,AMS ) ) ,( ( ARS * FirstVNF_RAM_Server ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ),MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.35856573705179284, "obj2": 0.5041000792554532}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( Const,PN ) ) ) ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.609896564980878}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( Max( ( ARS + MDR ),( ACS + PN ) ) / ( Max( AMS,PN ) - ( Min( Const ,( FirstVNF_Mem + AMS ) ) - MRS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS * MUC ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( MUC + MUM ) ) - ( RCSe + RMSe ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5022340695521396}, {"determining": "Min( Max( ( FirstVNF_Mem_Server + ARS ),FirstVNF_Mem ) ,Max( ( ( ARS + MDR ) * ( PN + Max( MRS,BR ) ) ),( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( RCSe * ( MUR / ( RCSe / DS ) ) ) * RCSe ) / MLU ) ) * CS ) ,( DS - CS ) )", "obj1": 0.42828685258964144, "obj2": 0.450853915340382}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / Max( ARS,( BR + Const ) ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.46613545816733065, "obj2": 0.40439831808097076}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( Max( FirstVNF_Mem,FirstVNF_RAM ) + CRS ) ),( DDR * MDR ) ) - ( ( ( ( DDR / FirstVNF_RAM_Server ) - ( ARS * MRS ) ) / ( RRS + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) ) / ( CRS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( Min( Max( ( ( MUM + MLU ) - Max( RMSe,DS ) ),Min( MUC ,CS ) ) ,MUM ) / ( MLU - ( MUM + CS ) ) ),DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6439230525592631}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / ( ( MUR + MLU ) - MUM ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.398406374501992, "obj2": 0.4677955751916992}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - ( RRS + FirstVNF_CPU_Server ) ) + MDR ) * ( BR + PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "Min( ( CS * Min( ( ( CS * CS ) - ( MUR - MUM ) ) ,( DS / MUC ) ) ) ,Max( RMSe,( ( Max( RRSe,( Min( RRSe ,CS ) / MUR ) ) * ( MUC / MLU ) ) - Max( Min( MUR ,MLU ),RCSe ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5331009462988638}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) - Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + Min( MDR ,RRS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.300796812749004, "obj2": 0.5747772444811907}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( Min( MDR ,PN ),MDR ) ,PN ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.9482071713147411, "obj2": 0.018957412416069155}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_Mem,( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ,( ( FirstVNF_CPU_Server - CRS ) * PN ) ) ) )", "choosing": "( Max( ( ( ( ( MUC * MUR ) / ( RRSe * MUR ) ) - ( RMSe * RRSe ) ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Max( DS,RCSe ) ) ) + Max( ( ( MUR / RMSe ) / MUM ),Min( ( MLU * MUR ) ,Max( MUR,MUC ) ) ) )", "obj1": 0.9143426294820717, "obj2": 0.059989153120299794}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.45617529880478086, "obj2": 0.4128084085152279}, {"determining": "( ( Const + PN ) * Max( Const,Const ) )", "choosing": "Min( ( Min( ( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3187250996015936, "obj2": 0.5543591486478394}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ACS - BR ) * PN ) - Min( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),PN ) ,ACS ) ) ) ),( Max( ( FirstVNF_CPU - CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( Min( CS ,( MUC - MUR ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) - CS ) )", "obj1": 0.2848605577689243, "obj2": 0.5818992450890609}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7135024309478688}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + MRS ) * ( BR - PN ) ) / CRS ) ) )", "choosing": "Min( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) ,( DS - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.18575124046122105}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MLU ,CS ) / Min( ( CS / ( Min( RMSe ,CS ) / ( MLU - MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6573705179282868, "obj2": 0.20972589838949798}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( PN,Max( AMS,FirstVNF_CPU ) ) ) ) ) / Min( FirstVNF_CPU ,Max( FirstVNF_CPU_Server,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,( DS - RCSe ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6117255813851636}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.9382470119521913, "obj2": 0.02477337105246145}, {"determining": "( Max( MRS,ACS ) - Max( ( RRS + ARS ),FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( Min( Min( ( ( RCSe + MLU ) + Min( DS ,RRSe ) ) ,MUC ) ,Max( RRSe,Min( MLU ,( MUM * RMSe ) ) ) ),Max( Min( Max( MUR,MUM ) ,CS ),DS ) ) ) / MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( DS + CS ) ,Max( ( Max( RCSe,( Min( MUR ,( Max( DS,RMSe ) * ( MLU / RMSe ) ) ) / ( RMSe * RRSe ) ) ) - ( MUM + CS ) ),MUC ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "Max( ( RRS * BR ),Min( Max( MDR,FirstVNF_CPU ) ,Const ) )", "choosing": "( Min( RCSe ,( DS * ( MUM * MUM ) ) ) / ( MUC + MUM ) )", "obj1": 0.2549800796812749, "obj2": 0.6139017013303938}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( Min( RMSe ,Min( MUM ,( CS * MUM ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.7948207171314741, "obj2": 0.08029017891116134}, {"determining": "( Max( MRS,ACS ) - Min( ARS ,BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( ( ( RMSe / ( RRSe + MLU ) ) * DS ),MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( Min( ( Min( RMSe ,( DS / ( DS - CS ) ) ) * CS ) ,( DS - CS ) ) + MLU ) - MUM )", "obj1": 0.4641434262948207, "obj2": 0.41260942010272506}, {"determining": "( Max( MRS,Max( Max( AMS,MRS ),AMS ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( Max( ( ( MLU * ( Min( DS ,MUC ) - ( CS / DS ) ) ) - RMSe ),( MUM + MUR ) ) / CS ) ) - Max( ( ( MLU * RRSe ) * Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.49536838508954983}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( Const,PN ) ) ) ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5886765378255866}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.9462151394422311, "obj2": 0.01977436596188493}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const * MDR ) ) + Const ) ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( ( Min( Min( RMSe ,( DS / ( DS - CS ) ) ) ,RRSe ) / ( MUC + MUM ) ) - CS ) )", "obj1": 0.3047808764940239, "obj2": 0.5664348128137315}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( Max( ( ( ( FirstVNF_Mem_Server / ARS ) / ( Const + BR ) ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - Min( RRSe ,( RMSe + MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.39243027888446214, "obj2": 0.47019846417798633}, {"determining": "( Min( ( FirstVNF_RAM_Server - ( DDR * ARS ) ) ,MDR ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS * MUR ) / ( RMSe + MLU ) ) ) - ( ( MUC / MUC ) - ( MUC * MLU ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5986974535587268}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.47410358565737054, "obj2": 0.40239312428027324}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),PN ) ,ACS ) ) ) ),( Max( ( FirstVNF_CPU + CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( DS - CS ) ,Max( MUM,( ( Max( MUM,MLU ) - RMSe ) / Min( MUM ,Max( DS,CS ) ) ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5590533263488632}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) ) )", "obj1": 0.9800796812749004, "obj2": 0.01101872112633556}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) + Min( BR ,MRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( ( ( RRSe + MLU ) - Max( RRSe,MUR ) ) / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6439230525592631}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) ) ) ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( MUR * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.591472896219195}, {"determining": "Min( ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( ( DDR + PN ),FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_CPU_Server ) ) ) ,Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) )", "choosing": "Min( Max( ( ( ( MUC + CS ) - Max( ( DS / CS ),( Max( Min( MLU ,DS ),( RCSe / MUR ) ) - RCSe ) ) ) + MUR ),MUC ) ,Min( ( ( DS + ( ( MUC / Max( RRSe,DS ) ) / MUM ) ) * ( ( DS * DS ) / MUM ) ) ,MUC ) )", "obj1": 0.3207171314741036, "obj2": 0.5485620975449649}, {"determining": "Max( ( FirstVNF_CPU - ( FirstVNF_CPU_Server - CRS ) ),( RRS / FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Max( ( Min( ( CS * CS ) ,DS ) / Min( ( MUM * MLU ) ,DS ) ),( MUR + ( Min( MUM ,CS ) / RCSe ) ) ) + MUC ) * ( Max( ( ( MUM * CS ) - ( MUR / RCSe ) ),( ( RRSe * ( MUM + MUR ) ) + Min( RRSe ,RRSe ) ) ) - Max( CS,CS ) ) ) * RRSe ) ,( DS - CS ) )", "obj1": 0.2968127490039841, "obj2": 0.577615921567625}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.750996015936255, "obj2": 0.10837780440806395}, {"determining": "Max( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_Mem,Const ) ,( BR * MDR ) ) ) ),Min( Max( MDR,FirstVNF_CPU ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( ( ( MUM * CS ) - ( RRSe / RCSe ) ),( ( MUC - ( RMSe * RRSe ) ) + ( RCSe - MUM ) ) ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3247011952191235, "obj2": 0.544366765125892}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ACS * DDR ) ) ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5986974535587268}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( Const,PN ) ) ) ) / Min( Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( MLU / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6316034182697154}, {"determining": "Max( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_RAM,Const ) ,( BR * MDR ) ) ) ),Min( Max( MDR,FirstVNF_CPU ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( ( ( MUM * CS ) - ( RRSe / RCSe ) ),( ( Min( MUR ,RRSe ) - ( RMSe * RRSe ) ) + ( RCSe - MUM ) ) ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.33266932270916333, "obj2": 0.5330461117705712}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( CRS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),DDR ) ,PN ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,CS ) / Min( MUM ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,CS ) ) ) ) + ( RRSe - MUC ) ) ) )", "obj1": 0.7868525896414342, "obj2": 0.0824437451021925}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( Max( MRS,BR ) + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MLU + DS ) * RCSe ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.38247011952191234, "obj2": 0.49035648059777004}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7828685258964143, "obj2": 0.0892588614464362}, {"determining": "( ( FirstVNF_RAM_Server / ( Max( Max( FirstVNF_RAM,AMS ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( Min( RMSe ,( ( RCSe + MUC ) * RMSe ) ) - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7135024309478688}, {"determining": "( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( Max( ( ( MRS / FirstVNF_Mem ) + MRS ),MDR ) * PN ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,( ( MUR + ( MUM * MUC ) ) / Max( MLU,Min( DS ,MLU ) ) ) ) / Min( RCSe ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,CS ) ) ) ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08356666950631411}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) - Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + Min( MDR ,RRS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.9840637450199203, "obj2": 0.006408518907557051}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( MUC + MUM ) ) - CS ) )", "obj1": 0.796812749003984, "obj2": 0.07557761135390781}], "9": [{"determining": "( ( ( CRS * BR ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ( CRS - FirstVNF_CPU_Server ) * PN ) - ( ( ( ( MRS / FirstVNF_Mem ) + MRS ) / MDR ) * PN ) ) * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( MUR - MUR ) ) + Min( Max( MLU,Min( DS ,MLU ) ) ,DS ) ) / Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - Max( Max( ( FirstVNF_Mem + FirstVNF_RAM_Server ),BR ),FirstVNF_CPU ) )", "choosing": "Min( ( ( RMSe - DS ) * MUC ) ,( RMSe - ( CS / Min( DS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ) ) ) ) ) )", "choosing": "( Min( DS ,( MUR / MUM ) ) * ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MLU ,MUR ) / ( ( Max( MUC,MUR ) - Max( ( CS - Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) ) + MUM ) )", "obj1": 0.7390438247011952, "obj2": 0.16259824640360637}, {"determining": "( Min( Const ,MDR ) + ( Min( Max( ( Max( MDR,Max( FirstVNF_CPU_Server,( MRS / AMS ) ) ) + ( MDR - Const ) ),Max( ( ( Min( BR ,FirstVNF_Mem_Server ) / FirstVNF_Mem ) / MDR ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( ( ( MUR + CS ) + RMSe ) - RRSe ) )", "obj1": 0.14940239043824702, "obj2": 0.7384382185298092}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,( ( MUR + ( MUM * MUC ) ) / Max( MLU,Min( DS ,MLU ) ) ) ) / Min( RCSe ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,CS ) ) ) ) + DS ) ) )", "obj1": 0.6434262948207171, "obj2": 0.22134971472357634}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.750996015936255, "obj2": 0.10837780440806395}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( DS ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.9342629482071713, "obj2": 0.028779503672413203}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / MDR ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7084541949035661}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5278884462151394, "obj2": 0.316553938989044}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUC * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.6055776892430279, "obj2": 0.24214872135833354}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ) )", "obj1": 0.6653386454183267, "obj2": 0.1957653275206026}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.5617529880478087, "obj2": 0.2592988526093033}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.28645497858746577}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( CS ,DS ) ) )", "obj1": 0.7071713147410359, "obj2": 0.19562100612990782}, {"determining": "( Max( MRS,BR ) - Max( AMS,( RRS + ACS ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM - MLU ) / ( Max( MUM,MLU ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5358565737051793, "obj2": 0.28702027228591587}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.50199203187251, "obj2": 0.34176491650310914}, {"determining": "Min( ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( ARS - Const ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1892430278884462, "obj2": 0.6968017737603768}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.43227091633466136, "obj2": 0.42807615779095787}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( ( MLU - ( MUM + CS ) ) / Min( Min( ( ( MUM + MLU ) - Max( RRSe,DS ) ) ,Min( MUC ,CS ) ) ,MUM ) ),DS ) ) )", "obj1": 0.7589641434262948, "obj2": 0.1049993642999286}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,Const ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,CS ) / Min( MUM ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,Max( MUC,RCSe ) ) ) ) ) + DS ) ) )", "obj1": 0.7749003984063745, "obj2": 0.09251909783941636}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( Max( MUC,RCSe ) ,( ( Min( RMSe ,( DS / ( Min( MUR ,RRSe ) / MUM ) ) ) * CS ) - ( CS + CS ) ) )", "obj1": 0.450199203187251, "obj2": 0.4169997042548144}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( PN * MRS ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( Max( Min( MUR ,CS ),Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) + Max( ( DS * Max( DS,DS ) ),MUM ) ) )", "obj1": 0.5318725099601593, "obj2": 0.3095173785857954}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.25588983423165806}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.49800796812749004, "obj2": 0.35860151323350803}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,RCSe ) ) ) ) ,RRSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7033466987044219}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( Min( ( AMS + BR ) ,MRS ) - FirstVNF_CPU ) * CRS ) - Min( Max( ( BR - FirstVNF_CPU ),Max( RRS,ACS ) ) ,( ( RRS * FirstVNF_CPU_Server ) + Max( Max( ACS,( Const - ( DDR * MDR ) ) ),Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( RMSe / Min( Max( DS,CS ) ,( Min( RMSe ,( DS / ( Min( CS ,CS ) / ( MLU - CS ) ) ) ) * CS ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.014740968109491232}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Min( FirstVNF_RAM_Server ,( ACS * ( MRS / FirstVNF_CPU_Server ) ) ) ,RRS ) ) / ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) + Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( RCSe ,CS ) ),Max( Min( MLU ,RMSe ),( ( CS / MUM ) * MUC ) ) ) )", "obj1": 0.49203187250996017, "obj2": 0.3680108638815992}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7270916334661355, "obj2": 0.18122309083343802}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( MRS + RRS ) * FirstVNF_RAM ),( Min( ( FirstVNF_RAM - CRS ) ,MDR ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,Min( ( MUC * ( Max( MLU,RRSe ) / MUM ) ) ,( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6698695324479456}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.4302788844621514, "obj2": 0.4372746896145977}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.35856573705179284, "obj2": 0.49949460651391403}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * ( ( Const / BR ) - ( ( ARS / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - Max( RMSe,MUC ) ) + ( ( RMSe + MLU ) / ( CS / MUR ) ) ) - Max( MUR,Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.06533290057910585}, {"determining": "( Max( PN,PN ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) + ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( ( RMSe - CS ) - CS ) + ( ( MUM * RMSe ) + Min( Max( MLU,( Min( MUC ,MUM ) - Max( ( MUR + MUM ),Min( MLU ,CS ) ) ) ) ,( ( Min( CS ,RRSe ) * CS ) * MUC ) ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.34176491650310914}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,CRS ) - ( CRS * Max( FirstVNF_Mem,Min( ( BR * FirstVNF_Mem_Server ) ,ARS ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,( MUC + CS ) ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( MLU + ( Min( MUC ,Max( RMSe,( MUM - MUR ) ) ) / ( Max( MUM,( DS - MUC ) ) + Max( RRSe,RRSe ) ) ) ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.07243399876268583}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,Min( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const * MDR ) ) ,Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( Max( Const,DDR ) ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,( MUR + Min( ( MUR + CS ) ,RRSe ) ) ) / RCSe ) )", "obj1": 0.4203187250996016, "obj2": 0.44934724082628597}, {"determining": "Min( ( MDR / RRS ) ,( PN / Const ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUM + Min( CS ,MUC ) ) ) ) ) ) ,Min( RRSe ,( RMSe / Max( Max( RCSe,CS ),( MUR - Min( RMSe ,MUC ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5273254000458667}, {"determining": "Max( ( ( ( FirstVNF_Mem / RRS ) - Max( MRS,BR ) ) - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ACS - BR ) * PN ) - Min( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),PN ) ,ACS ) ) ) ),( Max( ( FirstVNF_CPU - CRS ),( ARS * FirstVNF_RAM_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( ( ( MUM * CS ) - ( RRSe / RCSe ) ),( ( RRSe * ( MUM + MUR ) ) + Min( RRSe ,RRSe ) ) ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.29282868525896416, "obj2": 0.5747467414649272}, {"determining": "( ( Max( Max( MDR,FirstVNF_Mem ),Min( BR ,RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / Min( Min( ARS ,AMS ) ,( ( Min( MDR ,Min( CRS ,Min( CRS ,FirstVNF_RAM ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( Max( ( MUM * RMSe ),( RMSe + MLU ) ) + ( CS + CS ) ) - CS ) ,RRSe ) * Max( Max( ( DS - DS ),MLU ),MUR ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.4063745019920319, "obj2": 0.46181793983340175}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( ( ( MLU + DS ) * RCSe ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.48804780876494025, "obj2": 0.3839106269343541}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem - AMS ) / ( FirstVNF_RAM_Server + RRS ) ) + Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ) ) * Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( DS + CS ) ,Max( ( Max( RCSe,( Min( MUR ,( Max( DS,RMSe ) * ( MLU / RMSe ) ) ) / ( RMSe * RRSe ) ) ) - ( MUM + CS ) ),MUC ) )", "obj1": 0.2450199203187251, "obj2": 0.6371926452087242}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - ( RRS + FirstVNF_CPU_Server ) ) + MDR ) * ( BR + PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "Min( ( CS * Min( ( ( CS * CS ) - ( MUR - MUM ) ) ,( DS / MUC ) ) ) ,Max( RMSe,( ( Max( RRSe,( Min( RRSe ,CS ) / MUR ) ) * ( MUC / MLU ) ) - Max( Min( MUR ,MLU ),RCSe ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5331009462988638}, {"determining": "( Min( MDR ,( FirstVNF_Mem_Server + ( ( PN - BR ) + Max( Const,PN ) ) ) ) / Min( Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_Mem ) ) - ARS ) ) ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( MLU / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5806689410643248}, {"determining": "( Max( MRS,Max( Max( AMS,MRS ),AMS ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( Max( ( ( MLU * ( Min( DS ,MUC ) - ( CS / DS ) ) ) - RMSe ),( MUM + MUR ) ) / CS ) ) - Max( ( ( MLU * RRSe ) * Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.49536838508954983}, {"determining": "Max( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_Mem,Const ) ,( BR * MDR ) ) ) ),Min( Max( MDR,FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.22111553784860558, "obj2": 0.6695308276423557}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( Max( ( FirstVNF_CPU_Server - CRS ),PN ) - Min( Max( ( MDR - PN ),MDR ) ,( ( FirstVNF_CPU_Server - Const ) * PN ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) + ( Max( Min( MUM ,RRSe ),RCSe ) * DS ) ) * DS ) ) * CS ) ,( DS - CS ) )", "obj1": 0.300796812749004, "obj2": 0.5705597497043802}, {"determining": "Min( ( Max( ( DDR * Min( BR ,AMS ) ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,PN ) ) ) )", "choosing": "Min( Min( Min( ( RMSe / RMSe ) ,Min( ( Min( DS ,CS ) + RRSe ) ,( ( Max( RMSe,Max( RRSe,MUM ) ) / CS ) * CS ) ) ) ,MUR ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6219098369618233}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * MDR ) ) + Const ) ) ) / ( ACS * MDR ) ) )", "choosing": "Min( ( ( MLU * Max( RCSe,RRSe ) ) * Min( ( ( MUR + ( RRSe + CS ) ) * CS ) ,DS ) ) ,( ( Min( Min( ( DS / ( DS - CS ) ) ,RMSe ) ,RRSe ) / ( MUC / MUM ) ) - CS ) )", "obj1": 0.23107569721115537, "obj2": 0.6613258648585689}, {"determining": "( ( ( PN * ( AMS - CRS ) ) - ( Max( ( MDR * ( ( FirstVNF_Mem / ACS ) / PN ) ),MDR ) * PN ) ) * ( FirstVNF_RAM + BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( CS + ( MUM * ( RCSe + MUR ) ) ) - ( RCSe + ( ( DS / MUC ) - MLU ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.20808221298932478}, {"determining": "Min( ( MDR / RRS ) ,( PN / Const ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUM + Min( CS ,MUC ) ) ) ) ) ) ,Min( RRSe ,( RMSe / Max( Max( RCSe,CS ),( MUR - Min( RMSe ,MUC ) ) ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,FirstVNF_RAM ) + Min( BR ,MRS ) ) ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6605275369444007}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.4123505976095618, "obj2": 0.4542888084030259}, {"determining": "Min( ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( ( DDR + PN ),FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_CPU_Server ) ) ) ,Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / ( ( MUR + MLU ) - MUM ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.30278884462151395, "obj2": 0.5609581551679438}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ACS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) * PN ) - Min( Max( Min( MDR ,PN ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( ( Min( MLU ,RMSe ) * DS ) - MLU ) ) * CS ) ,( CS - CS ) )", "obj1": 0.9482071713147411, "obj2": 0.018957412416069155}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) + Min( BR ,MRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( ( ( RRSe + MLU ) - Max( RRSe,MUR ) ) / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6439230525592631}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + MUM ) )", "obj1": 0.47410358565737054, "obj2": 0.40239312428027324}, {"determining": "( ( Min( FirstVNF_CPU_Server ,Max( ARS,( BR + Const ) ) ) + ( MDR * ( Min( DDR ,ARS ) - PN ) ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( DS * MUR ) + Min( Max( MUM,MLU ) ,CS ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) ) ,( MUC / DS ) ) * CS ) ,( DS - CS ) )", "obj1": 0.4760956175298805, "obj2": 0.3952170458292011}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( Min( ( Min( RMSe ,( DS / ( DS - CS ) ) ) * CS ) ,( DS - CS ) ) + MLU ) - MUM )", "obj1": 0.4641434262948207, "obj2": 0.41260942010272506}, {"determining": "Max( ( ( FirstVNF_CPU_Server - CRS ) - FirstVNF_CPU ),Min( Max( MDR,FirstVNF_CPU ) ,Const ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.27091633466135456, "obj2": 0.6018969514895445}, {"determining": "( Min( MDR ,( FirstVNF_CPU + Const ) ) / Min( Max( Max( FirstVNF_RAM,AMS ),( ARS - ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) ,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.2649402390438247, "obj2": 0.6081515844376794}, {"determining": "( Max( MRS,ACS ) - Max( ( RRS + ARS ),FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( Min( Min( ( ( RCSe + MLU ) + Min( DS ,RRSe ) ) ,MUC ) ,Max( RRSe,Min( MLU ,( MUM * RMSe ) ) ) ),Max( Min( Max( MUR,MUM ) ,CS ),DS ) ) ) / MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( MUC + Min( MUM ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,CS ) ) ) ) ) - CS ) )", "obj1": 0.350597609561753, "obj2": 0.5082829857534527}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * FirstVNF_RAM_Server ) / ( Max( AMS,( ( FirstVNF_CPU_Server - CRS ) * PN ) ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( MUM ,( DS - CS ) )", "obj1": 0.38645418326693226, "obj2": 0.4826563835844321}, {"determining": "( ( ( FirstVNF_CPU_Server * RRS ) - Max( BR,Max( MRS,Const ) ) ) - ( ( Min( MDR ,CRS ) + Min( MDR ,RRS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.9840637450199203, "obj2": 0.006408518907557051}, {"determining": "Max( ( RRS * BR ),Min( Max( MDR,FirstVNF_CPU ) ,Const ) )", "choosing": "( Min( RCSe ,( DS * ( MUM * MUM ) ) ) / ( MUC + MUM ) )", "obj1": 0.2549800796812749, "obj2": 0.6139017013303938}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( Min( CS ,( MUC - MUR ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) - CS ) )", "obj1": 0.7928286852589641, "obj2": 0.07740252714158025}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) + MDR ) * ( Max( MRS,BR ) + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MLU + ( MLU + ( MUR + RMSe ) ) ) * RCSe ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3745019920318725, "obj2": 0.4909214953765336}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / Max( ARS,( BR + Const ) ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( MUC + MUM ) ) - CS ) )", "obj1": 0.4800796812749004, "obj2": 0.38972895665316515}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / Max( ARS,( BR + Const ) ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUC * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.46613545816733065, "obj2": 0.40439831808097076}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * ( Max( MRS,BR ) + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MLU + DS ) * RCSe ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.38247011952191234, "obj2": 0.49035648059777004}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,CS ) ) )", "obj1": 0.9780876494023905, "obj2": 0.011272075005823865}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( Min( Const ,( ( ( FirstVNF_CPU_Server * RRS ) + Max( BR,Max( MRS,Const ) ) ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) + Min( BR ,MRS ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5872663630681619}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU_Server * Max( ARS,( BR + ( ACS * FirstVNF_CPU_Server ) ) ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( RRSe - MUC ) ,( DS - CS ) )", "obj1": 0.39243027888446214, "obj2": 0.47019846417798633}, {"determining": "Min( ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) / FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( ( MUR * MUR ) + MUM ) ) - CS ) )", "obj1": 0.350597609561753, "obj2": 0.5082829857534527}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( MUC * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.750996015936255, "obj2": 0.10837780440806395}, {"determining": "( Max( ( ( FirstVNF_RAM / CRS ) / ( Max( FirstVNF_Mem,FirstVNF_RAM ) + CRS ) ),( DDR * MDR ) ) - ( ( ( ( DDR / FirstVNF_RAM_Server ) - ( ARS * MRS ) ) / ( RRS + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) ) / ( CRS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( Min( Max( ( ( MUM + MLU ) - Max( RMSe,DS ) ),Min( MUC ,CS ) ) ,MUM ) / ( MLU - ( MUM + CS ) ) ),DS ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6439230525592631}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7231075697211156, "obj2": 0.18502487449951033}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( Min( CS ,RCSe ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7131474103585658, "obj2": 0.1864574033276068}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( CRS - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),DDR ) ,PN ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,CS ) / Min( MUM ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,CS ) ) ) ) + ( RRSe - MUC ) ) ) )", "obj1": 0.7868525896414342, "obj2": 0.0824437451021925}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( Max( BR,Max( MRS,Const ) ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( RRSe * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.599601593625498, "obj2": 0.25058495165543954}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ARS + MDR ) * FirstVNF_RAM_Server ) / ( Max( AMS,( ( FirstVNF_CPU_Server - CRS ) * PN ) ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( MUM ,( DS - CS ) )", "obj1": 0.38645418326693226, "obj2": 0.4826563835844321}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( Max( PN,FirstVNF_CPU ) ,( FirstVNF_RAM - ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) * Max( ( FirstVNF_RAM / FirstVNF_CPU ),PN ) ) ) )", "choosing": "Min( ( Min( MLU ,MUR ) * DS ) ,( DS / MUM ) )", "obj1": 0.48406374501992033, "obj2": 0.3867288859787184}, {"determining": "Max( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_RAM,Const ) ,( BR * MDR ) ) ) ),Min( Max( MDR,FirstVNF_CPU ) ,Const ) )", "choosing": "Min( ( ( Max( ( MUR * MLU ),Max( MLU,MUR ) ) * ( Max( ( ( MUM * CS ) - ( RRSe / RCSe ) ),( ( Min( MUR ,RRSe ) - ( RMSe * RRSe ) ) + ( RCSe - MUM ) ) ) - Max( CS,CS ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.33266932270916333, "obj2": 0.5330461117705712}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7828685258964143, "obj2": 0.0892588614464362}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "Min( ( CS * MUC ) ,( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) - ( CS + CS ) ) )", "obj1": 0.5956175298804781, "obj2": 0.2544391090316962}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( ( AMS + ACS ) * ( BR - PN ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * ( CS / Min( DS ,CS ) ) ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.9900398406374502, "obj2": 0.004021179959860514}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.4163346613545817, "obj2": 0.4517379063285141}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.45617529880478086, "obj2": 0.4128084085152279}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.9382470119521913, "obj2": 0.02477337105246145}, {"determining": "( Min( ( FirstVNF_RAM_Server - ( DDR * ARS ) ) ,MDR ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS * MUR ) / ( RMSe + MLU ) ) ) - ( ( MUC / MUC ) - ( MUC * MLU ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5986974535587268}, {"determining": "( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( Max( ( ( MRS / FirstVNF_Mem ) + MRS ),MDR ) * PN ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,( ( MUR + ( MUM * MUC ) ) / Max( MLU,Min( DS ,MLU ) ) ) ) / Min( RCSe ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,CS ) ) ) ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08356666950631411}], "10": [{"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ) ) ) ) ) )", "choosing": "( Min( DS ,( MUR / MUM ) ) * ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,( ( AMS + ACS ) * ( BR - PN ) ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,( ( MUR + ( MUM * MUC ) ) / Max( MLU,Min( DS ,MLU ) ) ) ) / Min( RCSe ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,Min( DS ,CS ) ) ) ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * BR ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ( CRS - FirstVNF_CPU_Server ) * PN ) - ( ( ( ( MRS / FirstVNF_Mem ) + MRS ) / MDR ) * PN ) ) * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,( MUR - MUR ) ) + Min( Max( MLU,Min( DS ,MLU ) ) ,DS ) ) / Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( CS / MUM ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,Max( Max( DS,DS ),RRSe ) ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,RMSe ) ) )", "obj1": 0.7231075697211156, "obj2": 0.17428171399717207}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ACS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) * PN ) - Min( Max( Min( MDR ,PN ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( ( Min( MLU ,RMSe ) * DS ) - MLU ) ) * CS ) ,( CS - CS ) )", "obj1": 0.8784860557768924, "obj2": 0.054398252062602195}, {"determining": "( ( ( ( ( AMS * RRS ) - CRS ) * RRS ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,Const ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( CS * Min( RRSe ,( RRSe / ( RRSe - ( RRSe + Min( Max( RCSe,MLU ) ,( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.12199061055359434}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.5617529880478087, "obj2": 0.2592988526093033}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7825020971070662}, {"determining": "( ( Max( BR,Max( Const,Const ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + ( CS / Min( DS ,CS ) ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.9302788844621513, "obj2": 0.04129634481440986}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( CS ,DS ) ) )", "obj1": 0.7071713147410359, "obj2": 0.19562100612990782}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7334765756039556}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.28645497858746577}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Max( MRS,BR ) - Max( AMS,( RRS + ACS ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM - MLU ) / ( Max( MUM,MLU ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5358565737051793, "obj2": 0.28702027228591587}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ) )", "obj1": 0.6653386454183267, "obj2": 0.1957653275206026}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.6175298804780877, "obj2": 0.23537558932925334}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,RCSe ) ) ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7258364510627677}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( PN * MRS ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( Max( Min( MUR ,CS ),Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) + Max( ( DS * Max( DS,DS ) ),MUM ) ) )", "obj1": 0.5318725099601593, "obj2": 0.3095173785857954}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU_Server * Max( ARS,( BR + ( ACS * FirstVNF_CPU_Server ) ) ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( RRSe - MUC ) ,( DS - CS ) )", "obj1": 0.39243027888446214, "obj2": 0.47019846417798633}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.3319361706249424}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6419235213518416}, {"determining": "( ( Max( ( MRS / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / Max( ARS,( ACS + Const ) ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( RRSe * Max( RCSe,MLU ) ) ,( DS / RMSe ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( MUM + MUC ) ) - CS ) )", "obj1": 0.4701195219123506, "obj2": 0.3931301889386771}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUC * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.6055776892430279, "obj2": 0.24214872135833354}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) - ( DDR - Max( ( FirstVNF_RAM_Server * MRS ),DDR ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / ( ( CS / Min( DS ,CS ) ) - MUM ) ) ,( ( RMSe / MUC ) + ( Max( MUR,RRSe ) - RMSe ) ) ) ) )", "obj1": 0.6374501992031872, "obj2": 0.2264188094649557}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( Min( ( AMS + BR ) ,MRS ) - FirstVNF_CPU ) * CRS ) - Min( Max( ( BR - FirstVNF_CPU ),Max( RRS,ACS ) ) ,( ( RRS * FirstVNF_CPU_Server ) + Max( Max( ACS,( Const - ( DDR * MDR ) ) ),Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( RMSe / Min( Max( DS,CS ) ,( Min( RMSe ,( DS / ( Min( CS ,CS ) / ( MLU - CS ) ) ) ) * CS ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.014740968109491232}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / MDR ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7084541949035661}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7709163346613546, "obj2": 0.09132550325049062}, {"determining": "( Min( ( FirstVNF_RAM_Server - ( DDR * ARS ) ) ,MDR ) / Min( FirstVNF_CPU ,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * ( RMSe + MUM ) ) ,( ( CS * MUR ) / ( RMSe + MLU ) ) ) - ( ( MUC / MUC ) - ( MUC * MLU ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5986974535587268}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.25588983423165806}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,CRS ) - ( CRS * Max( FirstVNF_Mem,Min( ( BR * FirstVNF_Mem_Server ) ,ARS ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,( MUC + CS ) ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( MLU + ( Min( MUC ,Max( RMSe,( MUM - MUR ) ) ) / ( Max( MUM,( DS - MUC ) ) + Max( RRSe,RRSe ) ) ) ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.07243399876268583}, {"determining": "( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( Max( ( ( MRS / FirstVNF_Mem ) + MRS ),MDR ) * PN ) ) * ( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6533864541832669, "obj2": 0.21211175233377716}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.4809070755593631}, {"determining": "Min( ( MDR / RRS ) ,( PN / Const ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUM + Min( CS ,MUC ) ) ) ) ) ) ,Min( RRSe ,( RMSe / Max( Max( RCSe,CS ),( MUR - Min( RMSe ,MUC ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5273254000458667}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6219098369618233}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.4820717131474104, "obj2": 0.36640918035099224}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * MDR ) ) + Const ) ) ) / ( ACS * MDR ) ) )", "choosing": "Min( ( ( MLU * Max( RCSe,RRSe ) ) * Min( ( ( MUR + ( RRSe + CS ) ) * CS ) ,DS ) ) ,( ( Min( Min( ( DS / ( DS - CS ) ) ,RMSe ) ,RRSe ) / ( MUC / MUM ) ) - CS ) )", "obj1": 0.23107569721115537, "obj2": 0.6613258648585689}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - ( RRS + FirstVNF_CPU_Server ) ) + MDR ) * ( BR + PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "Min( ( CS * Min( ( ( CS * CS ) - ( MUR - MUM ) ) ,( DS / MUC ) ) ) ,Max( RMSe,( ( Max( RRSe,( Min( RRSe ,CS ) / MUR ) ) * ( MUC / MLU ) ) - Max( Min( MUR ,MLU ),RCSe ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5331009462988638}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5179282868525896, "obj2": 0.3226038070336582}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),MDR ) ,PN ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( ( MLU - ( MUM + CS ) ) / Min( Min( ( ( MUM + MLU ) - RRSe ) ,Min( MUC ,CS ) ) ,MUM ) ),DS ) ) )", "obj1": 0.7649402390438247, "obj2": 0.10246172670029745}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.44392345842545705}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( Min( MDR ,PN ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( MLU ,MUR ) * DS ) ,( DS - CS ) )", "obj1": 0.9482071713147411, "obj2": 0.018957412416069155}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( DS ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.9342629482071713, "obj2": 0.028779503672413203}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.35856573705179284, "obj2": 0.49949460651391403}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,RCSe ) ) ) ) ,RRSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7033466987044219}, {"determining": "Min( ( Max( ( ( Const * Max( ( ( AMS + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) * RRS ),( MDR * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( FirstVNF_Mem,ACS ) / Max( MDR,( ( FirstVNF_RAM_Server - CRS ) / BR ) ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( ( DS + ( ( CS / MUC ) + MUM ) ),CS ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "( Max( PN,PN ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) + ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( ( RMSe - CS ) - CS ) + ( ( MUM * RMSe ) + Min( Max( MLU,( Min( MUC ,MUM ) - Max( ( MUR + MUM ),Min( MLU ,CS ) ) ) ) ,( ( Min( CS ,RRSe ) * CS ) * MUC ) ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.34176491650310914}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.49800796812749004, "obj2": 0.35860151323350803}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - Max( MRS,Min( FirstVNF_CPU_Server ,( CRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( Max( ( ( ( MUM / MUC ) * MUC ) - RCSe ),RRSe ) ,( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( Min( ( RMSe / MUR ) ,( RCSe + ( RCSe + CS ) ) ) / MUC ) ) * CS ) )", "obj1": 0.49203187250996017, "obj2": 0.3658120080619957}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4760956175298805, "obj2": 0.3779771680257965}, {"determining": "Max( ( RRS * BR ),Min( Max( MDR,FirstVNF_CPU ) ,Const ) )", "choosing": "( Min( RCSe ,( DS * ( MUM * MUM ) ) ) / ( MUC + MUM ) )", "obj1": 0.2549800796812749, "obj2": 0.6139017013303938}, {"determining": "Min( ( Max( ( DDR * Min( BR ,AMS ) ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,PN ) ) ) )", "choosing": "Min( Min( Min( ( RMSe / RMSe ) ,Min( ( Min( DS ,CS ) + RRSe ) ,( ( Max( RMSe,Max( RRSe,MUM ) ) / CS ) * CS ) ) ) ,MUR ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.46214015139358977}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( FirstVNF_Mem_Server ,Const ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( CRS * ( FirstVNF_RAM / ( ( FirstVNF_CPU_Server + PN ) * ( FirstVNF_CPU_Server - ARS ) ) ) ) )", "choosing": "( ( ( Max( ( CS * MLU ),MUC ) * Max( RCSe,RMSe ) ) * DS ) * ( ( MUR - MUC ) / RCSe ) )", "obj1": 0.4721115537848606, "obj2": 0.3790139919581414}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( ( FirstVNF_Mem / FirstVNF_Mem ) - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( ( CS / MUM ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24302788844621515, "obj2": 0.6360499412486759}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * ( ( Const / BR ) - ( ( ARS / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - Max( RMSe,MUC ) ) + ( ( RMSe + MLU ) / ( CS / MUR ) ) ) - Max( MUR,Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.06533290057910585}, {"determining": "( Min( MDR ,( FirstVNF_CPU + Const ) ) / Min( Max( Max( FirstVNF_RAM,AMS ),( ARS - ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) ,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.2649402390438247, "obj2": 0.6081515844376794}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4243027888446215, "obj2": 0.4348404172309833}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7430278884462151, "obj2": 0.1189543950246801}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.4641434262948207, "obj2": 0.4037037263880709}, {"determining": "Min( ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( ( DDR + PN ),FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_CPU_Server ) ) ) ,Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / ( ( MUR + MLU ) - MUM ) ) ) * CS ) ,( DS - CS ) )", "obj1": 0.30278884462151395, "obj2": 0.5609581551679438}, {"determining": "( ( Max( Max( MDR,FirstVNF_Mem ),Min( BR ,RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / Min( Min( ARS ,AMS ) ,( ( Min( MDR ,Min( CRS ,Min( CRS ,FirstVNF_RAM ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( Max( ( MUM * RMSe ),( RMSe + MLU ) ) + ( CS + CS ) ) - CS ) ,RRSe ) * Max( Max( ( DS - DS ),MLU ),MUR ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.4063745019920319, "obj2": 0.46181793983340175}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( MRS + RRS ) * FirstVNF_RAM ),( Min( ( FirstVNF_RAM - CRS ) ,MDR ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,Min( ( MUC * ( Max( MLU,RRSe ) / MUM ) ) ,( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6698695324479456}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_CPU,Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_RAM,Const ) ,( BR * MDR ) ) ) ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( ( MUR * MLU ) / Min( ( Min( CS ,RCSe ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7131474103585658, "obj2": 0.1864574033276068}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) + MDR ) * ( Max( MRS,BR ) + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MLU + ( MLU + ( MUR + RMSe ) ) ) * RCSe ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3745019920318725, "obj2": 0.4909214953765336}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( CRS / FirstVNF_Mem ) - Min( Max( ( FirstVNF_CPU - BR ),MDR ) ,PN ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( RMSe * CS ) )", "obj1": 0.7450199203187251, "obj2": 0.11106055878937307}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6633466135458167, "obj2": 0.20556584049942614}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( Min( CS ,RCSe ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7131474103585658, "obj2": 0.1864574033276068}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( ( AMS + ACS ) * ( BR - PN ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * ( CS / Min( DS ,CS ) ) ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.9900398406374502, "obj2": 0.004021179959860514}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( FirstVNF_Mem_Server,MDR ) ) ) ,( ( ( ( Max( AMS,( FirstVNF_CPU + BR ) ) - ( FirstVNF_CPU / ACS ) ) * MDR ) * ( Max( MRS,BR ) + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( Min( RCSe ,( ( RMSe * RCSe ) * ( RCSe / MLU ) ) ) * CS ) ) ,( DS / MUC ) ) / CS ) ,( DS - CS ) )", "obj1": 0.3784860557768924, "obj2": 0.48446138876382067}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2250996015936255, "obj2": 0.6642147294495467}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7828685258964143, "obj2": 0.0892588614464362}, {"determining": "( Max( MRS,ACS ) - Max( ( RRS + ARS ),FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( Min( Min( ( ( RCSe + MLU ) + Min( DS ,RRSe ) ) ,MUC ) ,Max( RRSe,Min( MLU ,( MUM * RMSe ) ) ) ),Max( Min( Max( MUR,MUM ) ,CS ),DS ) ) ) / MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "Min( ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) / FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( ( MUR * MUR ) + MUM ) ) - CS ) )", "obj1": 0.350597609561753, "obj2": 0.5082829857534527}, {"determining": "( Max( MRS,Max( Max( AMS,MRS ),AMS ) ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( Max( ( ( MLU * ( Min( DS ,MUC ) - ( CS / DS ) ) ) - RMSe ),( MUM + MUR ) ) / CS ) ) - Max( ( ( MLU * RRSe ) * Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.3705179282868526, "obj2": 0.49536838508954983}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.4163346613545817, "obj2": 0.4517379063285141}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( FirstVNF_Mem + ( DDR + FirstVNF_RAM_Server ) ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( Max( MUC,RCSe ) ,( ( Min( Max( ( Min( ( MUR - RMSe ) ,MLU ) - MLU ),DS ) ,( DS / ( Min( MUR ,RRSe ) / MUM ) ) ) * CS ) - ( CS + CS ) ) )", "obj1": 0.44223107569721115, "obj2": 0.42450421445525505}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( MUM ,( DS - CS ) )", "obj1": 0.8027888446215139, "obj2": 0.07346489392644491}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "( ( ( PN * ( AMS - CRS ) ) - ( Max( ( MDR * ( ( FirstVNF_Mem / ACS ) / PN ) ),MDR ) * PN ) ) * ( FirstVNF_RAM + BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( CS + ( MUM * ( RCSe + MUR ) ) ) - ( RCSe + ( ( DS / MUC ) - MLU ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.20808221298932478}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( Min( ( FirstVNF_RAM - CRS ) ,Const ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6698695324479456}, {"determining": "Max( ( FirstVNF_RAM_Server + ACS ),( FirstVNF_RAM_Server - Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RMSe / ( ( ( MUC - CS ) / RMSe ) / ( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( ( Max( DS,RRSe ) + Min( ( Max( MUM,RRSe ) * CS ) ,( CS / MUM ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6167199286454409}, {"determining": "( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( Max( ( ( MRS / FirstVNF_Mem ) + MRS ),MDR ) * PN ) ) * ( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,( RMSe / MUR ) ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.9741035856573705, "obj2": 0.01183938805303482}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( Min( MRS ,FirstVNF_RAM ) / DDR ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,Min( MUC ,RRSe ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5219123505976095, "obj2": 0.31998108801041186}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4979403612962147}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ARS / FirstVNF_Mem ) / MDR ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS - RCSe ) ,( Min( ( Min( Min( MUC ,( ( MLU / MUM ) - MUR ) ) ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) * CS ) )", "obj1": 0.44621513944223107, "obj2": 0.41927123354711066}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( MUC + Min( MUM ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,CS ) ) ) ) ) - CS ) )", "obj1": 0.350597609561753, "obj2": 0.5082829857534527}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / MDR ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7084541949035661}, {"determining": "( ( Max( ( FirstVNF_CPU * ( RRS - FirstVNF_CPU ) ),DDR ) + ( FirstVNF_Mem_Server + Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUR ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( Min( CS ,MLU ) ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.43468477738537814}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( Min( CS ,( MUC - MUR ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) - CS ) )", "obj1": 0.7928286852589641, "obj2": 0.07740252714158025}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.50199203187251, "obj2": 0.34176491650310914}], "11": [{"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ) ) ) ) ) )", "choosing": "( Min( DS ,( MUR / MUM ) ) * ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( Max( MRS,ACS ) - Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,( ( AMS + ACS ) * ( BR - PN ) ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,( ( MUR + ( MUM * MUC ) ) / Max( MLU,Min( DS ,MLU ) ) ) ) / Min( RCSe ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,Min( DS ,CS ) ) ) ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( CS / MUM ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,Max( Max( DS,DS ),RRSe ) ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,RMSe ) ) )", "obj1": 0.7231075697211156, "obj2": 0.17428171399717207}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12239679278261831}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( CS ,DS ) ) )", "obj1": 0.7131474103585658, "obj2": 0.18550717747049542}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / Max( ACS,AMS ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Max( ( MUC * Max( CS,MLU ) ),MUM ),RMSe ) * MUR ) / Max( Min( CS ,RRSe ),MUR ) ) * ( Min( MUR ,DS ) * Min( Min( ( ( Min( ( MLU * MUM ) ,MUR ) * MUM ) + MUC ) ,( RRSe - ( RRSe - Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.44621513944223107, "obj2": 0.3905491107111771}, {"determining": "( ( ( ( FirstVNF_Mem / Const ) * CRS ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) * ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Max( ( DS + MUC ),MUM ) ,( DS - CS ) )", "obj1": 0.6633466135458167, "obj2": 0.18787092830608978}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( BR + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) + ( FirstVNF_Mem + ( DDR + FirstVNF_RAM_Server ) ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( Max( MUC,RCSe ) ,( ( Min( Max( ( Min( ( MUR - RMSe ) ,MLU ) - MLU ),DS ) ,( DS / ( Min( MUR ,RRSe ) / MUM ) ) ) * CS ) - ( CS + CS ) ) )", "obj1": 0.44223107569721115, "obj2": 0.42450421445525505}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.25588983423165806}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7825020971070662}, {"determining": "( ( Max( BR,Max( Const,Const ) ) + Min( Const ,FirstVNF_Mem_Server ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( ( FirstVNF_CPU_Server * DDR ) - ( ARS * ARS ) ) * CRS ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,Max( ( Min( ( ( RMSe / MLU ) * ( RMSe - RRSe ) ) ,RMSe ) * DS ),MLU ) ) * CS ) ,( CS - CS ) )", "obj1": 0.9302788844621513, "obj2": 0.041075175598865414}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ACS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) * PN ) - Min( Max( Min( MDR ,PN ),MDR ) ,PN ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.8745019920318725, "obj2": 0.05587365249636381}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ARS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.5617529880478087, "obj2": 0.2592988526093033}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7334765756039556}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2837755630293318}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - Max( MRS,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),( Min( ( ( MUR + RCSe ) * ( MUC * RRSe ) ) ,( MUM - CS ) ) * MLU ) ) )", "obj1": 0.601593625498008, "obj2": 0.2369564511886114}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Max( MRS,( ( ( Max( Min( MDR ,Const ),( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_CPU ) ) + CRS ) * DDR ) / ( MRS + ACS ) ) ) - ( AMS / ( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * BR ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RCSe - ( MUM * RMSe ) ) ) ) + ( ( CS - ( RMSe * CS ) ) * RRSe ) ) ) * ( ( DS * RMSe ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5358565737051793, "obj2": 0.28702027228591587}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( ( CS / MUM ) ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6294820717131474, "obj2": 0.21365939749600188}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( FirstVNF_CPU / ( Max( MRS,FirstVNF_CPU_Server ) - Const ) ) ) ) ,MDR ) + ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Min( Max( ( ( DS / MUR ) / Max( Max( DS,MLU ),CS ) ),Min( MUR ,RRSe ) ) ,( MLU + Max( ( MLU / ( DS * RMSe ) ),RRSe ) ) ) ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( MUC - ( RRSe + ( CS / MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.29282868525896416, "obj2": 0.577477977344873}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( Min( DS ,( DS / MUC ) ) * CS ) ,( DS / MUC ) ) )", "obj1": 0.9342629482071713, "obj2": 0.028779503672413203}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,RCSe ) ) ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7258364510627677}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6419235213518416}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( FirstVNF_CPU ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ( ACS + BR ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,( ( ( ( ( MUC / MUC ) * Min( DS ,RCSe ) ) * ( DS - ( DS - ( MUM / MUR ) ) ) ) - MUM ) - RCSe ) ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4412023813985686}, {"determining": "Min( ( Max( ( ( Const * Max( ( ( AMS + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.300796812749004, "obj2": 0.5588201444570525}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( PN * MRS ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( Max( Min( MUR ,CS ),Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) + Max( ( DS * Max( DS,DS ) ),MUM ) ) )", "obj1": 0.5318725099601593, "obj2": 0.3095173785857954}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( Max( ( ( Max( RRS,ACS ) + MDR ) * FirstVNF_RAM ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Max( ( Min( MUR ,CS ) / Min( ( CS / ( MUC + MLU ) ) ,MUM ) ),DS ) ) )", "obj1": 0.47410358565737054, "obj2": 0.36589615951890747}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * ( ( Const / BR ) - ( ( ARS / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - Max( RMSe,MUC ) ) + ( ( RMSe + MLU ) / ( CS / MUR ) ) ) - Max( MUR,Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.06533290057910585}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / MDR ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7084541949035661}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( ( FirstVNF_Mem - ( FirstVNF_CPU / FirstVNF_Mem ) ) - PN ) ) / ( ( ( ( ( ( ACS + RRS ) * CRS ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( Min( RCSe ,CS ) - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + RMSe ) )", "obj1": 0.4043824701195219, "obj2": 0.4509066295898984}, {"determining": "( Max( MRS,ACS ) - ( AMS * ( PN / Max( BR,Max( Const,Min( ARS ,AMS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( ( RRSe / RRSe ) / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.6175298804780877, "obj2": 0.2286884752984776}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / MDR ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.20916334661354583, "obj2": 0.672677121843342}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( ( ( DDR * ACS ) - BR ),( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ,PN ) ) )", "choosing": "Min( ( ( Min( MUR ,MUC ) + Max( MUC,Max( RRSe,MUC ) ) ) * MLU ) ,( DS - CS ) )", "obj1": 0.9482071713147411, "obj2": 0.018957412416069155}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * MDR ) ) + Const ) ) ) / ( ACS * MDR ) ) )", "choosing": "Min( ( ( MLU * Max( RCSe,RRSe ) ) * Min( ( ( MUR + ( RRSe + CS ) ) * CS ) ,DS ) ) ,( ( Min( Min( ( DS / ( DS - CS ) ) ,RMSe ) ,RRSe ) / ( MUC / MUM ) ) - CS ) )", "obj1": 0.23107569721115537, "obj2": 0.6613258648585689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),Const ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( RRSe - ( Max( DS,MUC ) + ( MUR * DS ) ) ) * ( CS / MUM ) ) - CS ) )", "obj1": 0.46613545816733065, "obj2": 0.384335102031704}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,PN ) ),MDR ) ,Const ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( RCSe + DS ) ) )", "obj1": 0.7569721115537849, "obj2": 0.11058641589377716}, {"determining": "( ( Max( ( FirstVNF_CPU * ( RRS - FirstVNF_CPU ) ),DDR ) + ( FirstVNF_Mem_Server + Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUR ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( Min( CS ,MLU ) ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.43468477738537814}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,DDR ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( RMSe ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4243027888446215, "obj2": 0.4348404172309832}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - ( DDR / ARS ) ) * FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( ( ( MUC * CS ) - ( DS / ( RMSe / ( MUR / MLU ) ) ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.6215139442231076, "obj2": 0.22704012112832006}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( Min( MRS ,FirstVNF_RAM ) / DDR ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,Min( MUC ,RRSe ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5219123505976095, "obj2": 0.31998108801041186}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Min( MUR ,( MUC / MUM ) ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.07236722250136529}, {"determining": "( Min( BR ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Max( ( DS * Max( CS,MLU ) ),MUM ),RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( MUR ,RRSe ) ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5944203579164604}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ) ),MUM ) + ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ) )", "obj1": 0.6573705179282868, "obj2": 0.19622792946678747}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.651394422310757, "obj2": 0.21286706787244328}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( FirstVNF_Mem_Server ,Const ) ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( CRS * ( FirstVNF_RAM / ( ( FirstVNF_CPU_Server + PN ) * ( FirstVNF_CPU_Server - ARS ) ) ) ) )", "choosing": "( ( ( Max( ( CS * MLU ),MUC ) * Max( RCSe,RMSe ) ) * DS ) * ( ( MUR - MUC ) / RCSe ) )", "obj1": 0.4721115537848606, "obj2": 0.3790139919581414}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.4809070755593631}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( ( FirstVNF_Mem / FirstVNF_Mem ) - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( ( CS / MUM ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24302788844621515, "obj2": 0.6360499412486759}, {"determining": "Min( ( Max( ( ( Const * Max( ( ( PN + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( ( ( Min( MLU ,RMSe ) * DS ) - MLU ) + Max( RCSe,CS ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5347454179410083}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6219098369618233}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7709163346613546, "obj2": 0.09132550325049062}, {"determining": "Min( ( MDR / RRS ) ,( PN / Const ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUM + Min( CS ,MUC ) ) ) ) ) ) ,Min( RRSe ,( RMSe / Max( Max( RCSe,CS ),( MUR - Min( RMSe ,MUC ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5273254000458667}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( Min( ( AMS + BR ) ,MRS ) - FirstVNF_CPU ) * CRS ) - Min( Max( ( BR - FirstVNF_CPU ),Max( RRS,ACS ) ) ,( ( RRS * FirstVNF_CPU_Server ) + Max( Max( ACS,( Const - ( DDR * MDR ) ) ),Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( RMSe / Min( Max( DS,CS ) ,( Min( RMSe ,( DS / ( Min( CS ,CS ) / ( MLU - CS ) ) ) ) * CS ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.014740968109491232}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( CRS / FirstVNF_Mem ) - Min( Max( ( FirstVNF_CPU - BR ),MDR ) ,PN ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( RMSe * CS ) )", "obj1": 0.7450199203187251, "obj2": 0.11106055878937307}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( DS * MUR ) + ( RCSe - MUM ) ),( Min( RRSe ,MUM ) + Min( DS ,RCSe ) ) ) + Min( RMSe ,MUM ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.5, "obj2": 0.35246524032536203}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_CPU,Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( MDR,Min( Max( FirstVNF_RAM,Const ) ,( BR * MDR ) ) ) ) ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( ( MUR * MLU ) / Min( ( Min( CS ,RCSe ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7211155378486056, "obj2": 0.17802264328059006}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11850901942805142}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( Max( ( ( MLU * ( Min( DS ,MUC ) - ( CS / DS ) ) ) - RMSe ),( MUM + MUR ) ) / CS ) ) - Max( ( ( MLU * RRSe ) * Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.3884462151394422, "obj2": 0.47203249790942353}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( Const,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU * Const ) + ( ACS * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RMSe,RRSe ) * MUC ) / ( ( CS / CS ) * MUR ) ) * ( ( ( Max( Min( RCSe ,( RMSe * Max( MLU,MLU ) ) ),DS ) * ( RMSe - MUC ) ) * RMSe ) * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.6553784860557769, "obj2": 0.20382305423055816}, {"determining": "Min( ( Max( ( ( Const * Max( ( ( AMS + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) * RRS ),( MDR * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( FirstVNF_Mem,ACS ) / Max( MDR,( ( FirstVNF_RAM_Server - CRS ) / BR ) ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( ( DS + ( ( CS / MUC ) + MUM ) ),CS ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( Min( MDR ,( Min( ARS ,Max( ( AMS * ( BR * ACS ) ),FirstVNF_RAM_Server ) ) * Min( PN ,FirstVNF_Mem_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / MUR ) * DS ) * ( MUC + DS ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,CRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( MUM,( DS - MUC ) ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.26095617529880477, "obj2": 0.6066695638218097}, {"determining": "Min( ( Max( ( ( Const * Max( ( ( AMS + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.3319361706249424}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.46214015139358977}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - Max( MRS,Min( FirstVNF_CPU_Server ,( CRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( Max( ( ( ( MUM / MUC ) * MUC ) - RCSe ),RRSe ) ,( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( Min( ( RMSe / MUR ) ,( RCSe + ( RCSe + CS ) ) ) / MUC ) ) * CS ) )", "obj1": 0.49203187250996017, "obj2": 0.3658120080619957}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - ( RRS + FirstVNF_CPU_Server ) ) + MDR ) * ( BR + PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "Min( ( CS * Min( ( ( CS * CS ) - ( MUR - MUM ) ) ,( DS / MUC ) ) ) ,Max( RMSe,( ( Max( RRSe,( Min( RRSe ,CS ) / MUR ) ) * ( MUC / MLU ) ) - Max( Min( MUR ,MLU ),RCSe ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5331009462988638}, {"determining": "( ( ( ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) + MDR ) * ( Max( MRS,BR ) + PN ) ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,Const ) ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,( DS - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7888446215139442, "obj2": 0.08290877671548347}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) + MDR ) * ( Max( MRS,BR ) + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MLU + ( MLU + ( MUR + RMSe ) ) ) * RCSe ) / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3745019920318725, "obj2": 0.4909214953765336}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5247713566256712}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7828685258964143, "obj2": 0.0892588614464362}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Const ) * PN ) - Min( Max( Min( MDR ,PN ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( MLU ,MUR ) * DS ) ,( DS - CS ) )", "obj1": 0.9482071713147411, "obj2": 0.018957412416069155}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),MDR ) ,PN ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( ( MLU - ( MUM + CS ) ) / Min( Min( ( ( MUM + MLU ) - RRSe ) ,Min( MUC ,CS ) ) ,MUM ) ),DS ) ) )", "obj1": 0.7669322709163346, "obj2": 0.10147509915553801}, {"determining": "( Min( MDR ,( FirstVNF_CPU + Const ) ) / ( Max( MRS,PN ) + FirstVNF_RAM ) )", "choosing": "Min( Max( ( MLU * MUC ),RCSe ) ,Min( ( Min( RMSe ,( DS / ( Min( MUR ,RRSe ) / MUM ) ) ) * CS ) ,( CS + CS ) ) )", "obj1": 0.2749003984063745, "obj2": 0.6011901650662724}, {"determining": "Min( ( ( Max( ( PN - FirstVNF_CPU ),MDR ) * Max( Max( FirstVNF_RAM,AMS ),( ARS - ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( ( Min( RMSe ,( DS / Min( MUR ,( Max( DS,RMSe ) - ( Min( CS ,RCSe ) / RMSe ) ) ) ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( MLU * MUC ) ) - CS ) )", "obj1": 0.350597609561753, "obj2": 0.5082829857534527}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.50199203187251, "obj2": 0.34176491650310914}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,RCSe ) ) ) ) ,RRSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7033466987044219}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ACS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) * PN ) - Min( Max( Min( MDR ,PN ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( ( Min( MLU ,RMSe ) * DS ) - MLU ) ) * CS ) ,( CS - CS ) )", "obj1": 0.8784860557768924, "obj2": 0.054398252062602195}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.9820717131474104, "obj2": 0.007722064371340452}, {"determining": "( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( Max( ( ( MRS / FirstVNF_Mem ) + MRS ),MDR ) * PN ) ) * ( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,( RMSe / MUR ) ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.9741035856573705, "obj2": 0.01183938805303482}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.3319361706249424}, {"determining": "( ( ( ( ( AMS * RRS ) - CRS ) * RRS ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,Const ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( CS * Min( RRSe ,( RRSe / ( RRSe - ( RRSe + Min( Max( RCSe,MLU ) ,( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.12199061055359434}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Const ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( MUC / Max( MUC,MUM ) ) + ( RCSe * RMSe ) ) * ( Max( MUR,MUC ) / RCSe ) )", "obj1": 0.35856573705179284, "obj2": 0.49949460651391403}, {"determining": "Min( ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) / FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( ( MUR * MUR ) + MUM ) ) - CS ) )", "obj1": 0.350597609561753, "obj2": 0.5082829857534527}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / MDR ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7084541949035661}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5318725099601593, "obj2": 0.3095173785857954}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + MUM ) )", "obj1": 0.34462151394422313, "obj2": 0.5171980320209602}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5179282868525896, "obj2": 0.3226038070336582}, {"determining": "( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( Max( ( ( MRS / FirstVNF_Mem ) + MRS ),MDR ) * PN ) ) * ( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6533864541832669, "obj2": 0.21211175233377716}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6136371153595294}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.4960159362549801, "obj2": 0.3636405874601558}], "12": [{"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ) ) ) ) ) )", "choosing": "( Min( DS ,( MUR / MUM ) ) * ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * CRS ) - Min( Max( ( BR - FirstVNF_CPU ),Max( RRS,ACS ) ) ,( ( RRS * FirstVNF_CPU_Server ) + Max( Max( ACS,( Const - ( DDR * MDR ) ) ),Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / Min( ( Min( RMSe ,( DS / ( Min( CS ,CS ) / ( MLU - CS ) ) ) ) * CS ) ,Max( MUR,( RCSe / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,ACS ) - Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( CS - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( BR,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( CS / MUM ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4541832669322709, "obj2": 0.35405797435099107}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,Max( Max( DS,DS ),RRSe ) ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,RMSe ) ) )", "obj1": 0.7231075697211156, "obj2": 0.17428171399717207}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( CS ,DS ) ) )", "obj1": 0.7131474103585658, "obj2": 0.18550717747049542}, {"determining": "( ( ( ( FirstVNF_Mem / Const ) * CRS ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) * ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Max( ( DS + MUC ),MUM ) ,( DS - CS ) )", "obj1": 0.6633466135458167, "obj2": 0.18787092830608978}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6294820717131474, "obj2": 0.21302259953119607}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / Max( ACS,AMS ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Max( ( MUC * Max( CS,MLU ) ),MUM ),RMSe ) * MUR ) / Max( Min( CS ,RRSe ),MUR ) ) * ( Min( MUR ,DS ) * Min( Min( ( ( Min( ( MLU * MUM ) ,MUR ) * MUM ) + MUC ) ,( RRSe - ( RRSe - Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.44621513944223107, "obj2": 0.3905491107111771}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12239679278261831}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.4940239043824701, "obj2": 0.35167694319644865}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7825020971070662}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.25588983423165806}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( Min( Min( Const ,( RRS / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ,( Const + ( Max( MRS,FirstVNF_Mem ) / RRS ) ) ) ,AMS ) - ( Max( Const,( ARS / ( ( ACS - FirstVNF_CPU ) * AMS ) ) ) / PN ) ) ) )", "choosing": "Min( Max( RMSe,( MUC / MUM ) ) ,( ( ( RMSe / MUR ) + ( MUM / MUM ) ) - CS ) )", "obj1": 0.8645418326693227, "obj2": 0.05696990451066387}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server * CRS ) ) + ( Min( MDR ,( Max( MRS,( FirstVNF_CPU + ( ( FirstVNF_CPU * FirstVNF_RAM ) + FirstVNF_RAM ) ) ) / DDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / Min( RRSe ,Max( ( ( ( CS / MUR ) - ( ( RCSe / ( RMSe * MUM ) ) * ( ( RRSe / MLU ) / DS ) ) ) * CS ),MLU ) ) )", "obj1": 0.22709163346613545, "obj2": 0.6521978770656565}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( ( CS / MUM ) ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4122086979382956}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5398406374501992, "obj2": 0.28354897680482316}, {"determining": "( Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ) ) ) ) - ( Min( CRS ,MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RRSe * MUM ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe * DS ) ) )", "obj1": 0.5577689243027888, "obj2": 0.2620725711784544}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.651394422310757, "obj2": 0.19704090133765045}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server - ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( Min( DDR ,Max( PN,FirstVNF_RAM ) ) / ( Max( PN,AMS ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Min( ( RRSe * MLU ) ,MLU ) / MLU ) * CS ) - MLU ) ,( DS / CS ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3705179282868526, "obj2": 0.49329015295346784}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / ( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7478863116713351}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const * MDR ) ) + Const ) ) ) / Max( ACS,( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( RMSe ,( DS / MUC ) ) * ( Min( MLU ,MUR ) / ( ( ( Min( ( MUM / RCSe ) ,RRSe ) - DS ) - Max( ( CS - Min( MUR ,MUC ) ),MUM ) ) + MUM ) ) ) ,( ( Min( Min( RMSe ,( DS / ( DS - CS ) ) ) ,RRSe ) / ( MUC + MUM ) ) - CS ) )", "obj1": 0.2151394422310757, "obj2": 0.6706056884652966}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4379228950772317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.4708100153196496}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( Max( AMS,ACS ) - ( ( BR * ( MRS * Const ) ) / ACS ) ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Max( RMSe,( DS - ( ( RRSe * ( Min( RRSe ,CS ) / MUR ) ) * Max( MUC,MLU ) ) ) ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.9143426294820717, "obj2": 0.039542950796724693}, {"determining": "( Max( MRS,( ( ( Max( Min( MDR ,Const ),( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_CPU ) ) + CRS ) * DDR ) / ( MRS + ACS ) ) ) - ( AMS / ( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * BR ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RCSe - ( MUM * RMSe ) ) ) ) + ( ( CS - ( RMSe * CS ) ) * RRSe ) ) ) * ( ( DS * RMSe ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5358565737051793, "obj2": 0.28702027228591587}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Const ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( MUC / Max( MUC,MUM ) ) + ( RCSe * RMSe ) ) * ( Max( MUR,MUC ) / RCSe ) )", "obj1": 0.35856573705179284, "obj2": 0.49949460651391403}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Max( Max( ( Const * RRS ),( DDR * BR ) ),( FirstVNF_Mem * Min( FirstVNF_RAM_Server ,PN ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * Max( ( Max( MUM,( DS + MUM ) ) - ( DS / Max( DS,DS ) ) ),Max( MUR,RCSe ) ) ) ) ,( ( CS / MUR ) / ( MLU + RMSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6219098369618233}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( PN * MRS ) )", "choosing": "( Min( MUR ,RRSe ) / ( Min( Max( Min( MUR ,CS ),Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) + Max( ( DS * Max( DS,DS ) ),MUM ) ) )", "obj1": 0.5318725099601593, "obj2": 0.3095173785857954}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( ( FirstVNF_Mem - ( FirstVNF_CPU / FirstVNF_Mem ) ) - PN ) ) / ( ( ( ( ( ( ACS + RRS ) * CRS ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( Min( RCSe ,CS ) - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + RMSe ) )", "obj1": 0.4043824701195219, "obj2": 0.4509066295898984}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * ( ( Const / BR ) - ( ( ARS / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - Max( RMSe,MUC ) ) + ( ( RMSe + MLU ) / ( CS / MUR ) ) ) - Max( MUR,Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.06533290057910585}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( ( FirstVNF_Mem / FirstVNF_Mem ) - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( ( CS / MUM ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24302788844621515, "obj2": 0.6360499412486759}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ARS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.5617529880478087, "obj2": 0.2592988526093033}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( ( CS / MUM ) ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.4442231075697211, "obj2": 0.4013638631191612}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( Min( CS ,MUC ) + MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.5976095617529881, "obj2": 0.2395965440894428}, {"determining": "( ( Max( ( FirstVNF_CPU * ( RRS - FirstVNF_CPU ) ),DDR ) + ( FirstVNF_Mem_Server + Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUR ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( Min( CS ,MLU ) ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4302788844621514, "obj2": 0.43468477738537814}, {"determining": "( Min( BR ,( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,DDR ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) ) + ( Min( Max( FirstVNF_RAM,Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( MUR ,RRSe ) ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6125482100215094}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.8007968127490039, "obj2": 0.08107136462194153}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7709163346613546, "obj2": 0.09132550325049062}, {"determining": "( ( ( ( AMS + PN ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( RRS / Min( ( ARS - ARS ) ,( ACS * ARS ) ) ) / MDR ) / PN ) ) ) - ( ARS / RRS ) )", "choosing": "( ( ( Min( ( CS - Min( ( ( MUM / MUC ) / Min( RCSe ,MLU ) ) ,Max( ( CS * CS ),( MUC * RRSe ) ) ) ) ,RRSe ) * Min( RCSe ,RMSe ) ) + DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.38247011952191234, "obj2": 0.4702673816605558}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7251650044460309}, {"determining": "( Max( ( ( Const * Max( ( ( PN + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) * ( ( Min( ( MDR * ARS ) ,CRS ) - FirstVNF_CPU_Server ) / MDR ) ),Max( FirstVNF_CPU_Server,MDR ) ) - ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) )", "choosing": "( MUC - ( Max( MUM,MUC ) * ( RCSe + MUC ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5686179871738478}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( MDR ,( FirstVNF_CPU + Const ) ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5, "obj2": 0.340780505766409}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7084541949035661}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.047004509713036866}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Min( MUR ,( MUC / MUM ) ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.07236722250136529}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_RAM * MRS ) ),Min( MRS ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( Max( ( ( MLU * ( Min( DS ,MUC ) - ( CS / DS ) ) ) - RMSe ),( MUM + MUR ) ) / CS ) ,( ( DS * MUC ) * Min( RMSe ,( Max( ( ( MUR * MUM ) - RMSe ),( Max( DS,MUC ) + Min( MUR ,RCSe ) ) ) / MUC ) ) ) ) - Max( ( ( MLU * RRSe ) * Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.3944223107569721, "obj2": 0.464199448095336}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),Const ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,RCSe ) ) ) ) ,RRSe ) ) )", "obj1": 0.9262948207171314, "obj2": 0.03019459212223266}, {"determining": "( Max( MRS,ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5112403708179898}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),MDR ) ,PN ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Max( ( ( MLU - ( MUM + CS ) ) / Min( Min( ( ( MUM + MLU ) - RRSe ) ,Min( MUC ,CS ) ) ,MUM ) ),DS ) ) )", "obj1": 0.7669322709163346, "obj2": 0.10147509915553801}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.6115537848605578, "obj2": 0.2359400066118957}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.46214015139358977}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7334765756039556}, {"determining": "Min( ( MDR / RRS ) ,( PN / Const ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUM + Min( CS ,MUC ) ) ) ) ) ) ,Min( RRSe ,( RMSe / Max( Max( RCSe,CS ),( MUR - Min( RMSe ,MUC ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5273254000458667}, {"determining": "Min( ( Max( ( ( Const * Max( ( ( AMS + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.300796812749004, "obj2": 0.5588201444570525}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( CRS / FirstVNF_Mem ) - Min( Max( ( FirstVNF_CPU - BR ),MDR ) ,PN ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( RMSe * CS ) )", "obj1": 0.7450199203187251, "obj2": 0.11106055878937307}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( Min( ( AMS + BR ) ,MRS ) - FirstVNF_CPU ) * CRS ) - Min( Max( ( BR - FirstVNF_CPU ),Max( RRS,ACS ) ) ,( ( RRS * FirstVNF_CPU_Server ) + Max( Max( ACS,( Const - ( DDR * MDR ) ) ),Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( RMSe / Min( Max( DS,CS ) ,( Min( RMSe ,( DS / ( Min( CS ,CS ) / ( MLU - CS ) ) ) ) * CS ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.014740968109491232}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ACS * FirstVNF_CPU_Server ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) ),RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.9183266932270916, "obj2": 0.03418812853500711}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ) ),MUM ) + ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ) )", "obj1": 0.6573705179282868, "obj2": 0.19622792946678747}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11850901942805142}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * ( MLU + ( MUR + RMSe ) ) ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.9342629482071713, "obj2": 0.024509626008028973}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,PN ) ),MDR ) ,Const ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( RCSe + DS ) ) )", "obj1": 0.7569721115537849, "obj2": 0.11058641589377716}, {"determining": "Min( ( Max( ( ( Const * Max( ( ( AMS + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) * RRS ),( MDR * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( FirstVNF_Mem,ACS ) / Max( MDR,( ( FirstVNF_RAM_Server - CRS ) / BR ) ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( ( DS + ( ( CS / MUC ) + MUM ) ),CS ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Max( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7257363730262346}, {"determining": "Min( ( Max( ( ( Const * Min( ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( MRS,ACS ) - Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),FirstVNF_CPU ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( ( Min( MUR ,( ( ( CS / RRSe ) - ( MUC * RMSe ) ) / Max( MLU,Min( DS ,MLU ) ) ) ) / Min( RCSe ,( ( ( RRSe + RRSe ) - RRSe ) / Min( DS ,Min( DS ,CS ) ) ) ) ) + DS ) ) )", "obj1": 0.8725099601593626, "obj2": 0.05136892364050962}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5247713566256712}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,CRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( MUM,( DS - MUC ) ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.26095617529880477, "obj2": 0.6066695638218097}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5159362549800797, "obj2": 0.32468481681857475}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - ( RRS + FirstVNF_CPU_Server ) ) + MDR ) * ( BR + PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "Min( ( CS * Min( ( ( CS * CS ) - ( MUR - MUM ) ) ,( DS / MUC ) ) ) ,Max( RMSe,( ( Max( RRSe,( Min( RRSe ,CS ) / MUR ) ) * ( MUC / MLU ) ) - Max( Min( MUR ,MLU ),RCSe ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5331009462988638}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,PN ) ),MDR ) ,Const ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + ( RCSe + DS ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10768152307949623}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / MDR ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7334765756039556}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( Min( MDR ,( Min( ARS ,Max( ( AMS * ( BR * ACS ) ),FirstVNF_RAM_Server ) ) * Min( PN ,FirstVNF_Mem_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / MUR ) * DS ) * ( MUC + DS ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7046636650128483}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - ( DDR / ARS ) ) * FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( ( ( MUC * CS ) - ( DS / ( RMSe / ( MUR / MLU ) ) ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.6215139442231076, "obj2": 0.22704012112832006}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6419235213518416}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.27091633466135456, "obj2": 0.5934080687694163}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) - Max( BR,Max( MRS,Const ) ) ) - ( Max( ACS,DDR ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),( CS * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.601627397819264}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - Max( MRS,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),( Min( ( ( MUR + RCSe ) * ( MUC * RRSe ) ) ,( MUM - CS ) ) * MLU ) ) )", "obj1": 0.601593625498008, "obj2": 0.2369564511886114}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5039840637450199, "obj2": 0.3349271442467887}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( ( FirstVNF_Mem / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6726949861468248}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7828685258964143, "obj2": 0.0892588614464362}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_Mem_Server,Min( ( ( ARS + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.27091633466135456, "obj2": 0.5934080687694163}, {"determining": "( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( Max( ( ( MRS / FirstVNF_Mem ) + MRS ),MDR ) * PN ) ) * ( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,( RMSe / MUR ) ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.9741035856573705, "obj2": 0.01183938805303482}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Max( ( ( Const * FirstVNF_RAM ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( RRSe - ( Max( DS,MUC ) + ( MUR * DS ) ) ) * ( CS / MUM ) ) - CS ) )", "obj1": 0.2908366533864542, "obj2": 0.5788272648063976}, {"determining": "( ( ( ( ( AMS * RRS ) - CRS ) * RRS ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,Const ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( CS * Min( RRSe ,( RRSe / ( RRSe - ( RRSe + Min( Max( RCSe,MLU ) ,( CS / MUM ) ) ) ) ) ) ) )", "obj1": 0.7350597609561753, "obj2": 0.12199061055359434}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,DDR ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( RMSe ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4243027888446215, "obj2": 0.4348404172309832}, {"determining": "Min( ( ( Max( ( PN - FirstVNF_CPU ),MDR ) * Max( Max( FirstVNF_RAM,AMS ),( ARS - ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Min( ( Min( RMSe ,( DS / Min( MUR ,( Max( DS,RMSe ) - ( Min( CS ,RCSe ) / RMSe ) ) ) ) ) * CS ) ,( ( Min( MUR ,RRSe ) / ( MLU * MUC ) ) - CS ) )", "obj1": 0.350597609561753, "obj2": 0.5082829857534527}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5318725099601593, "obj2": 0.3095173785857954}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( Min( MRS ,FirstVNF_RAM ) / DDR ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,Min( MUC ,RRSe ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5219123505976095, "obj2": 0.31998108801041186}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( DDR + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( PN - BR ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ) / Max( Min( MLU ,RMSe ),Max( RRSe,RCSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.016069724963541848}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6419235213518416}], "13": [{"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ) ) ) ) ) )", "choosing": "( Min( DS ,( MUR / MUM ) ) * ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem * MDR ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( ( Max( DS,MLU ) / MUM ) / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * CRS ) - Min( Max( ( BR - FirstVNF_CPU ),Max( RRS,ACS ) ) ,( ( RRS * FirstVNF_CPU_Server ) + Max( Max( ACS,( Const - ( DDR * MDR ) ) ),Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( MUM / Min( ( Min( RMSe ,( DS / ( Min( CS ,CS ) / ( MLU - CS ) ) ) ) * CS ) ,Max( MUR,( RCSe / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ( FirstVNF_Mem_Server + ARS ) ) / FirstVNF_RAM_Server ) + ( Min( Max( Max( Max( FirstVNF_Mem_Server,CRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ),( BR - FirstVNF_CPU ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( RMSe / MUM ) ) * ( ( RRSe - Min( Min( DS ,RRSe ) ,CS ) ) * CS ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4541832669322709, "obj2": 0.35405797435099107}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,Max( Max( DS,DS ),RRSe ) ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,RMSe ) ) )", "obj1": 0.7231075697211156, "obj2": 0.17428171399717207}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,( MRS - FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RCSe + MLU ) / RMSe ) ) ) ,( DS / MUR ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( CS ,DS ) ) )", "obj1": 0.7131474103585658, "obj2": 0.18550717747049542}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12239679278261831}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / Max( ACS,AMS ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) - ( FirstVNF_Mem - FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Max( ( MUC * Max( CS,MLU ) ),MUM ),RMSe ) * MUR ) / Max( Min( CS ,RRSe ),MUR ) ) * ( Min( MUR ,DS ) * Min( Min( ( ( Min( ( MLU * MUM ) ,MUR ) * MUM ) + MUC ) ,( RRSe - ( RRSe - Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.44621513944223107, "obj2": 0.3905491107111771}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.4940239043824701, "obj2": 0.35167694319644865}, {"determining": "( ( ( ( FirstVNF_Mem / Const ) * CRS ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) * ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Max( ( DS + MUC ),MUM ) ,( DS - CS ) )", "obj1": 0.6633466135458167, "obj2": 0.18787092830608978}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,( FirstVNF_CPU_Server / ACS ) ) ,FirstVNF_CPU_Server ) / ( Max( MDR,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( MUM * RMSe ) + Min( ( Min( MUC ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5059760956175299, "obj2": 0.3338749388303704}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( Min( CS ,MUC ) + MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.649402390438247, "obj2": 0.1962252580524355}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - Max( Max( ( Const * RRS ),( DDR * BR ) ),( FirstVNF_Mem * Min( FirstVNF_RAM_Server ,PN ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * Max( ( Max( MUM,( DS + MUM ) ) - ( DS / Max( DS,DS ) ) ),Max( MUR,RCSe ) ) ) ) ,( ( CS / MUR ) / ( MLU + RMSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server - ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( Min( DDR ,Max( PN,FirstVNF_RAM ) ) / ( Max( PN,AMS ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Min( ( RRSe * MLU ) ,MLU ) / MLU ) * CS ) - MLU ) ,( DS / CS ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3705179282868526, "obj2": 0.49329015295346784}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ( DDR / ARS ) + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) - ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RCSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + ( CS - ( CS * MUM ) ) ) ) ) - Max( ( ( ( CS - ( MUM + MUR ) ) * MLU ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.3884462151394422, "obj2": 0.46066525427742444}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.545816733067729, "obj2": 0.28089742120291883}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,Max( MRS,ACS ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7549800796812749, "obj2": 0.10298382086145512}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7825020971070662}, {"determining": "( Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ) ) ) ) - ( Min( CRS ,MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RRSe * MUM ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe * DS ) ) )", "obj1": 0.5577689243027888, "obj2": 0.2620725711784544}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.4708100153196496}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( Min( Min( Const ,( RRS / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ,( Const + ( Max( MRS,FirstVNF_Mem ) / RRS ) ) ) ,AMS ) - ( Max( Const,( ARS / ( ( ACS - FirstVNF_CPU ) * AMS ) ) ) / PN ) ) ) )", "choosing": "Min( Max( RMSe,( MUC / MUM ) ) ,( ( ( RMSe / MUR ) + ( MUM / MUM ) ) - CS ) )", "obj1": 0.8645418326693227, "obj2": 0.05696990451066387}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5916334661354582, "obj2": 0.25588983423165806}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6294820717131474, "obj2": 0.21302259953119607}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server * CRS ) ) + ( Min( MDR ,( Max( MRS,( FirstVNF_CPU + ( ( FirstVNF_CPU * FirstVNF_RAM ) + FirstVNF_RAM ) ) ) / DDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / Min( RRSe ,Max( ( ( ( CS / MUR ) - ( ( RCSe / ( RMSe * MUM ) ) * ( ( RRSe / MLU ) / DS ) ) ) * CS ),MLU ) ) )", "obj1": 0.22709163346613545, "obj2": 0.6521978770656565}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * ( ( Const / BR ) - ( ( ARS / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - Max( RMSe,MUC ) ) + ( ( RMSe + MLU ) / ( CS / MUR ) ) ) - Max( MUR,Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.06533290057910585}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,Max( PN,FirstVNF_CPU ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( ( FirstVNF_Mem / FirstVNF_Mem ) - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( ( CS / MUM ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24302788844621515, "obj2": 0.6360499412486759}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6219098369618233}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5637450199203188, "obj2": 0.2586065343592152}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,DDR ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( ( Min( MDR ,CRS ) + ( FirstVNF_Mem + DDR ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( RMSe ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4243027888446215, "obj2": 0.4348404172309832}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.9940239043824701, "obj2": 0.005172648773663902}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.023897593246190493}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4379228950772317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( ( FirstVNF_Mem - ( FirstVNF_CPU / FirstVNF_Mem ) ) - PN ) ) / ( ( ( ( ( ( ACS + RRS ) * CRS ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( Min( RCSe ,CS ) - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + RMSe ) )", "obj1": 0.4043824701195219, "obj2": 0.4509066295898984}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( Max( AMS,ACS ) - ( ( BR * ( MRS * Const ) ) / ACS ) ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Max( RMSe,( DS - ( ( RRSe * ( Min( RRSe ,CS ) / MUR ) ) * Max( MUC,MLU ) ) ) ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.9143426294820717, "obj2": 0.039542950796724693}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Const ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( MUC / Max( MUC,MUM ) ) + ( RCSe * RMSe ) ) * ( Max( MUR,MUC ) / RCSe ) )", "obj1": 0.35856573705179284, "obj2": 0.49949460651391403}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( CRS / FirstVNF_Mem ) - Min( Max( ( FirstVNF_CPU - BR ),MDR ) ,PN ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( RMSe * CS ) )", "obj1": 0.7450199203187251, "obj2": 0.11106055878937307}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,MRS ) ) ) ) ) ) - ( FirstVNF_RAM_Server + BR ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( RRSe + MUC ) ) ),MUM ) + Min( DS ,( Min( MUR ,CS ) / Min( ( CS / Min( ( RMSe + MUR ) ,CS ) ) ,MUM ) ) ) ) )", "obj1": 0.42828685258964144, "obj2": 0.42762336742628276}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7669322709163346, "obj2": 0.09371436724857493}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7084541949035661}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * ACS ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.2151394422310757, "obj2": 0.6684583472141281}, {"determining": "( Max( MRS,( ( ( Max( Min( MDR ,Const ),( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_CPU ) ) + CRS ) * DDR ) / ( MRS + ACS ) ) ) - ( AMS / ( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * BR ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RCSe - ( MUM * RMSe ) ) ) ) + ( ( CS - ( RMSe * CS ) ) * RRSe ) ) ) * ( ( DS * RMSe ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5358565737051793, "obj2": 0.28702027228591587}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Min( MUR ,( MUC / MUM ) ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.07236722250136529}, {"determining": "( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( Max( ( ( MRS / FirstVNF_Mem ) + MRS ),MDR ) * PN ) ) * ( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( ( CS / MUM ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.9780876494023905, "obj2": 0.008495762996239628}, {"determining": "( ( ( ( AMS + PN ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( RRS / Min( ( ARS - ARS ) ,( ACS * ARS ) ) ) / MDR ) / PN ) ) ) - ( ARS / RRS ) )", "choosing": "( ( ( Min( ( CS - Min( ( ( MUM / MUC ) / Min( RCSe ,MLU ) ) ,Max( ( CS * CS ),( MUC * RRSe ) ) ) ) ,RRSe ) * Min( RCSe ,RMSe ) ) + DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.38247011952191234, "obj2": 0.4702673816605558}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - ( RRS + FirstVNF_CPU_Server ) ) + MDR ) * ( BR + PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "Min( ( CS * Min( ( ( CS * CS ) - ( MUR - MUM ) ) ,( DS / MUC ) ) ) ,Max( RMSe,( ( Max( RRSe,( Min( RRSe ,CS ) / MUR ) ) * ( MUC / MLU ) ) - Max( Min( MUR ,MLU ),RCSe ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5331009462988638}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7251650044460309}, {"determining": "( Max( ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ),ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( Max( MUC,RCSe ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5111620462037312}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.6115537848605578, "obj2": 0.2359400066118957}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( MUR * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7046636650128483}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( Min( CS ,MUC ) + MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.5976095617529881, "obj2": 0.2395965440894428}, {"determining": "( Max( ( ( Const * Max( ( ( PN + MRS ) + FirstVNF_CPU_Server ),Min( ARS ,FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + Max( MLU,RCSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2649402390438247, "obj2": 0.5956328079740489}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6294820717131474, "obj2": 0.21302259953119607}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ) )", "choosing": "Min( ( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) / DS ) ) * CS ) ,( DS - CS ) )", "obj1": 0.5956175298804781, "obj2": 0.2540918398020746}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( FirstVNF_Mem / CRS ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS + DS ) * ( CS * Min( Min( Max( MUM,MLU ) ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6726949861468248}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / CS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.6235059760956175, "obj2": 0.22669450296644267}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,Max( Max( DS,DS ),RRSe ) ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,RMSe ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5423890816488993}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7385527051796873}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) / DS ) ) * CS ) ,( DS - CS ) )", "obj1": 0.6593625498007968, "obj2": 0.19103265517283324}, {"determining": "Min( ( MDR / RRS ) ,( PN / Const ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUM + Min( CS ,MUC ) ) ) ) ) ) ,Min( RRSe ,( RMSe / Max( Max( RCSe,CS ),( MUR - Min( RMSe ,MUC ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5273254000458667}, {"determining": "Min( ( Max( ( ( Const * Min( ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( DS ,CS ) ),RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6585762936574975}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ACS * FirstVNF_CPU_Server ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) ),RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.9183266932270916, "obj2": 0.034080350978252204}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11850901942805142}, {"determining": "( Max( ( ( Const * Max( ( ( PN + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) * ( ( Min( ( MDR * ARS ) ,CRS ) - FirstVNF_CPU_Server ) / MDR ) ),Max( FirstVNF_CPU_Server,MDR ) ) - ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) )", "choosing": "( MUC - ( Max( MUM,MUC ) * ( RCSe + MUC ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5686179871738478}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( DDR + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( PN - BR ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ) / Max( Min( MLU ,RMSe ),Max( RRSe,RCSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.016069724963541848}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7828685258964143, "obj2": 0.0892588614464362}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5247713566256712}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.27091633466135456, "obj2": 0.5934080687694163}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( MDR ,( FirstVNF_CPU + Const ) ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.5, "obj2": 0.340780505766409}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7709163346613546, "obj2": 0.09132550325049062}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.047004509713036866}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.016069724963541848}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Min( FirstVNF_Mem_Server ,Min( RRS ,RRS ) ) ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS - Min( ( ( ( RCSe * DS ) + MUR ) + MUM ) ,CS ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( Min( CS ,MUC ) + MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08464309045206253}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( DDR * BR ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) )", "obj1": 0.6175298804780877, "obj2": 0.22859382004984438}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( ( FirstVNF_Mem / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6805778244086672}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Max( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7825020971070662}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( MDR / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,RCSe ) ) ,DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6419235213518416}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ),MDR ) ,PN ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.7908366533864541, "obj2": 0.07828721911449951}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Max( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( RMSe / MUC ) ),CS ) ,( DS - CS ) )", "obj1": 0.43227091633466136, "obj2": 0.4157814400576877}, {"determining": "Min( ( Max( ( ( Const * Max( ( ( MDR + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) * RRS ),( MDR * FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,MRS ) + Max( BR,FirstVNF_Mem ) ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( FirstVNF_Mem,ACS ) / Max( MDR,( ( FirstVNF_RAM_Server - CRS ) / BR ) ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( ( DS + ( ( CS / RRSe ) + MUM ) ),CS ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5765317409082913}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( ( CS / MUM ) ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.43824701195219123, "obj2": 0.4122086979382956}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( ( CS / MUM ) ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.4442231075697211, "obj2": 0.4013638631191612}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - Max( MRS,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),( Min( ( ( MUR + RCSe ) * ( MUC * RRSe ) ) ,( MUM - CS ) ) * MLU ) ) )", "obj1": 0.601593625498008, "obj2": 0.2369564511886114}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) + MDR ) * ( Max( MRS,BR ) + PN ) ) / ( Max( AMS,( Const * RRS ) ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( Min( MUR ,DS ) * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3565737051792829, "obj2": 0.5072728938716199}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUM * ( MLU + ( MUR + RMSe ) ) ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.9342629482071713, "obj2": 0.024509626008028973}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( Min( ( AMS + BR ) ,MRS ) - FirstVNF_CPU ) * CRS ) - Min( Max( ( BR - FirstVNF_CPU ),Max( RRS,ACS ) ) ,( ( RRS * FirstVNF_CPU_Server ) + Max( Max( ACS,( Const - ( DDR * MDR ) ) ),Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( RMSe / Min( Max( DS,CS ) ,( Min( RMSe ,( DS / ( Min( CS ,CS ) / ( MLU - CS ) ) ) ) * CS ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.014740968109491232}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Max( ARS,AMS ) / ( ( ( ( FirstVNF_CPU - BR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( Max( ( ( MLU * ( Min( DS ,MUC ) - DS ) ) - RMSe ),( MUM + MUR ) ) / CS ) ) - Max( ( ( MLU * MUM ) * Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.570895426112338}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5398406374501992, "obj2": 0.28354897680482316}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( Min( MDR ,( Min( ARS ,Max( ( AMS * ( BR * ACS ) ),FirstVNF_RAM_Server ) ) * Min( PN ,FirstVNF_Mem_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / MUR ) * DS ) * ( MUC + DS ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Min( Max( ( MRS - FirstVNF_CPU ),MDR ) ,CRS ) - MRS ) ) )", "choosing": "Min( ( CS / MUR ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( MUM,( DS - MUC ) ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6128534803357409}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,CRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( MUM,( DS - MUC ) ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.26095617529880477, "obj2": 0.6066695638218097}], "14": [{"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ) ) ) ) ) )", "choosing": "( Min( DS ,( MUR / MUM ) ) * ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( Min( RMSe ,( DS / MUC ) ) * CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem * MDR ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( ( Max( DS,MLU ) / MUM ) / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( CS / MUM ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ( RRS / RRS ) / PN ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,( Min( ( Min( MUR ,DS ) - Min( ( RMSe / MUC ) ,Max( MLU,RRSe ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) )", "obj1": 0.4701195219123506, "obj2": 0.33996376388047456}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.30436706897862353}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12239679278261831}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,Max( Max( DS,DS ),RRSe ) ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,RMSe ) ) )", "obj1": 0.7231075697211156, "obj2": 0.17428171399717207}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Max( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( RMSe / MUC ) ),CS ) ,( DS - CS ) )", "obj1": 0.4402390438247012, "obj2": 0.40842879015220807}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( Min( Min( Const ,( RRS / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ,( Const + ( Max( MRS,FirstVNF_Mem ) / RRS ) ) ) ,AMS ) - ( Max( Const,( ARS / ( ( ACS - FirstVNF_CPU ) * AMS ) ) ) / PN ) ) ) )", "choosing": "Min( Max( RMSe,( MUC / MUM ) ) ,( ( ( RMSe / MUR ) + ( MUM / MUM ) ) - CS ) )", "obj1": 0.8645418326693227, "obj2": 0.05696990451066387}, {"determining": "( ( ( ( FirstVNF_Mem / Const ) * CRS ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) * ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Max( ( DS + MUC ),MUM ) ,( DS - CS ) )", "obj1": 0.6633466135458167, "obj2": 0.18787092830608978}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5776892430278885, "obj2": 0.24575105328432068}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( CS ,DS ) ) )", "obj1": 0.7131474103585658, "obj2": 0.18550717747049542}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.40836653386454186, "obj2": 0.4379228950772317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server - ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( Min( DDR ,Max( PN,FirstVNF_RAM ) ) / ( Max( PN,AMS ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Min( ( RRSe * MLU ) ,MLU ) / MLU ) * CS ) - MLU ) ,( DS / CS ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3705179282868526, "obj2": 0.49329015295346784}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4541832669322709, "obj2": 0.35405797435099107}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( ( FirstVNF_Mem - ( FirstVNF_CPU / FirstVNF_Mem ) ) - PN ) ) / ( ( ( ( ( ( ACS + RRS ) * CRS ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( Max( MUC,MUR ) - Max( ( Min( RCSe ,CS ) - ( Max( MUR,CS ) * ( ( CS / RRSe ) - ( MUC * RMSe ) ) ) ),MUM ) ) + RMSe ) )", "obj1": 0.4043824701195219, "obj2": 0.4509066295898984}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ),Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( FirstVNF_Mem / CRS ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS + DS ) * ( CS * Min( Min( Max( MUM,MLU ) ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7806240554860419}, {"determining": "( Max( MRS,( ( ( Max( Min( MDR ,Const ),( ( FirstVNF_CPU * FirstVNF_Mem ) - FirstVNF_CPU ) ) + CRS ) * DDR ) / ( MRS + ACS ) ) ) - ( AMS / ( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * BR ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RCSe - ( MUM * RMSe ) ) ) ) + ( ( CS - ( RMSe * CS ) ) * RRSe ) ) ) * ( ( DS * RMSe ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5358565737051793, "obj2": 0.28702027228591587}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.4708100153196496}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Min( MUR ,( MUC / MUM ) ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.07236722250136529}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) + ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( FirstVNF_CPU - BR ),( FirstVNF_RAM_Server * DDR ) ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,( ( ( Min( MUR ,CS ) * MUC ) * Max( MLU,CS ) ) + ( ( Max( DS,RRSe ) + CS ) - RRSe ) ) ) ),Max( Min( RMSe ,MLU ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "Min( ( Max( ( ( Const * Min( ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / MDR ) ) ) ,( FirstVNF_RAM * Const ) ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUM ) / Max( ( CS / CS ),MUR ) ) * ( CS * ( MUC - MUM ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6676676244725862}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7084541949035661}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server * CRS ) ) + ( Min( MDR ,( Max( MRS,( FirstVNF_CPU + ( ( FirstVNF_CPU * FirstVNF_RAM ) + FirstVNF_RAM ) ) ) / DDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / Min( RRSe ,Max( ( ( ( CS / MUR ) - ( ( RCSe / ( RMSe * MUM ) ) * ( ( RRSe / MLU ) / DS ) ) ) * CS ),MLU ) ) )", "obj1": 0.22709163346613545, "obj2": 0.6521978770656565}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * ( ( Const / BR ) - ( ( ARS / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - Max( RMSe,MUC ) ) + ( ( RMSe + MLU ) / ( CS / MUR ) ) ) - Max( MUR,Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.06533290057910585}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( Min( CS ,MUC ) + MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.5976095617529881, "obj2": 0.2395965440894428}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( ( CS / MUM ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.547808764940239, "obj2": 0.274412934507313}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Min( FirstVNF_Mem_Server ,Min( RRS ,RRS ) ) ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS - Min( ( ( ( RCSe * DS ) + MUR ) + MUM ) ,CS ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * MDR ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.27091633466135456, "obj2": 0.5934080687694163}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( FirstVNF_Mem / CRS ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS + DS ) * ( CS * Min( Min( Max( MUM,MLU ) ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6726949861468248}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( Min( ( AMS + BR ) ,MRS ) - FirstVNF_CPU ) * CRS ) - Min( Max( ( BR - FirstVNF_CPU ),Max( RRS,ACS ) ) ,( ( RRS * FirstVNF_CPU_Server ) + Max( Max( ACS,( Const - ( DDR * MDR ) ) ),Max( MRS,Const ) ) ) ) ) )", "choosing": "Min( ( RRSe * MUC ) ,( RMSe / Min( Max( DS,CS ) ,( Min( RMSe ,( DS / ( Min( CS ,CS ) / ( MLU - CS ) ) ) ) * CS ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.014740968109491232}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Const ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( MUC / Max( MUC,MUM ) ) + ( RCSe * RMSe ) ) * ( Max( MUR,MUC ) / RCSe ) )", "obj1": 0.35856573705179284, "obj2": 0.49949460651391403}, {"determining": "( Max( ( ( Const * Max( ( ( PN + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) * ( ( Min( ( MDR * ARS ) ,CRS ) - FirstVNF_CPU_Server ) / MDR ) ),Max( FirstVNF_CPU_Server,MDR ) ) - ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) )", "choosing": "( MUC - ( Max( MUM,MUC ) * ( RCSe + MUC ) ) )", "obj1": 0.2968127490039841, "obj2": 0.5686179871738478}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( FirstVNF_Mem / FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ) ) ,( DS - CS ) )", "obj1": 0.6235059760956175, "obj2": 0.22409870198648654}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7669322709163346, "obj2": 0.09371436724857493}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * Max( MUC,RCSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022549606874360203}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( Max( AMS,ACS ) - ( ( BR * ( MRS * Min( BR ,RRS ) ) ) / ACS ) ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Max( RMSe,( DS - ( ( RRSe * ( Min( RRSe ,CS ) / MUR ) ) * Max( MUC,MLU ) ) ) ) / ( Max( ( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.9123505976095617, "obj2": 0.040037568591061654}, {"determining": "( Max( ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ),ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( Max( MUC,RCSe ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5111620462037312}, {"determining": "( Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ) ) ) ) - ( Min( CRS ,MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RRSe * MUM ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe * DS ) ) )", "obj1": 0.5577689243027888, "obj2": 0.2620725711784544}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( ( ( ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) + MDR ) * ( Max( MRS,BR ) + PN ) ) / ( Max( AMS,( Const * RRS ) ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( Min( MUR ,DS ) * CS ) ) ,( DS / MUC ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3565737051792829, "obj2": 0.5072728938716199}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - ( RRS + FirstVNF_CPU_Server ) ) + MDR ) * ( BR + PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "Min( ( CS * Min( ( ( CS * CS ) - ( MUR - MUM ) ) ,( DS / MUC ) ) ) ,Max( RMSe,( ( Max( RRSe,( Min( RRSe ,CS ) / MUR ) ) * ( MUC / MLU ) ) - Max( Min( MUR ,MLU ),RCSe ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5331009462988638}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.3884462151394422, "obj2": 0.46066525427742444}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( RMSe - RCSe ) / MUC ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.952191235059761, "obj2": 0.01768192728478944}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.047004509713036866}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ACS * FirstVNF_CPU_Server ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) ),RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.9183266932270916, "obj2": 0.034080350978252204}, {"determining": "( Max( ( ( Const * Max( ( ( PN + MRS ) + FirstVNF_CPU_Server ),Min( ARS ,FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + Max( MLU,RCSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2649402390438247, "obj2": 0.5956328079740489}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7385527051796873}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem * MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MLU ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7305511367812241}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( DDR * FirstVNF_Mem ) ),Min( BR ,FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS / AMS ) )", "choosing": "( ( ( ( RRSe - MUR ) - DS ) / CS ) * ( RMSe * RMSe ) )", "obj1": 0.9322709163346613, "obj2": 0.033223311528251726}, {"determining": "Min( ( MDR / RRS ) ,( PN / Const ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUM + Min( CS ,MUC ) ) ) ) ) ) ,Min( RRSe ,( RMSe / Max( Max( RCSe,CS ),( MUR - Min( RMSe ,MUC ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5273254000458667}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( Max( ( ( MRS / FirstVNF_Mem ) + MRS ),MDR ) * PN ) ) * ( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( ( CS / MUM ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.9780876494023905, "obj2": 0.008495762996239628}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( MRS + Min( FirstVNF_Mem ,MRS ) ) )", "choosing": "( ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC - MLU ) ) ) ) * ( CS * Min( Min( RRSe ,( ( ( MLU + RRSe ) + RMSe ) - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.736246513429062}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_CPU - BR ),MDR ) ,PN ) ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( ( ( CS / CS ) * MUR ) * CS ) ,( DS - CS ) )", "obj1": 0.9382470119521913, "obj2": 0.023285560484352028}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6414342629482072, "obj2": 0.20078215583954256}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7251650044460309}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( MDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.7848605577689243, "obj2": 0.08285018144863258}, {"determining": "( ( Max( MRS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7211155378486056, "obj2": 0.1810925566263672}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,CRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( MUM,( DS - MUC ) ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.26095617529880477, "obj2": 0.6066695638218097}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5247713566256712}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Max( AMS,RRS ) - MRS ) ) )", "choosing": "Min( ( RMSe / Min( RRSe ,MUM ) ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24701195219123506, "obj2": 0.6219098369618233}, {"determining": "( ( ( ( AMS + PN ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( RRS / Min( ( ARS - ARS ) ,( ACS * ARS ) ) ) / MDR ) / PN ) ) ) - ( ARS / RRS ) )", "choosing": "( ( ( Min( ( CS - Min( ( ( MUM / MUC ) / Min( RCSe ,MLU ) ) ,Max( ( CS * CS ),( MUC * RRSe ) ) ) ) ,RRSe ) * Min( RCSe ,RMSe ) ) + DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.38247011952191234, "obj2": 0.4702673816605558}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,Max( Max( DS,DS ),RRSe ) ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,RMSe ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5423890816488993}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,( MRS - FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RCSe + MLU ) / RMSe ) ) ) ,( DS / MUR ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,Max( MRS,ACS ) ),( ( Const - ARS ) / ( PN * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( ( CS / MUM ) ,CS ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7549800796812749, "obj2": 0.10298382086145512}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Min( Max( ( MRS - FirstVNF_CPU ),MDR ) ,CRS ) - MRS ) ) )", "choosing": "Min( ( CS / MUR ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( MUM,( DS - MUC ) ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6128534803357409}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_Mem / Const ) ) - ( Max( ACS,DDR ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.2450199203187251, "obj2": 0.6260567527324725}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( ( FirstVNF_Mem / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6805778244086672}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,Max( MRS,ACS ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.7470119521912351, "obj2": 0.11026042389590375}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6294820717131474, "obj2": 0.21302259953119607}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5637450199203188, "obj2": 0.2586065343592152}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,Max( MRS,ACS ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7549800796812749, "obj2": 0.10298382086145512}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Max( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( RMSe / MUC ) ),CS ) ,( DS - CS ) )", "obj1": 0.43227091633466136, "obj2": 0.4157814400576877}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.545816733067729, "obj2": 0.28089742120291883}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.6115537848605578, "obj2": 0.2359400066118957}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( DS ,CS ) ),RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6585762936574975}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - Max( MRS,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),( Min( ( ( MUR + RCSe ) * ( MUC * RRSe ) ) ,( MUM - CS ) ) * MLU ) ) )", "obj1": 0.601593625498008, "obj2": 0.2369564511886114}, {"determining": "Min( ( Max( ( ( Const * Min( ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ,Max( Min( ( RRS + MRS ) ,Max( ( FirstVNF_RAM / FirstVNF_CPU ),DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( DS / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( MUC ,( Max( ( MLU * RRSe ),MUC ) - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7825020971070662}, {"determining": "( ( Min( Max( FirstVNF_RAM,Min( Max( ( BR / ( FirstVNF_CPU * MRS ) ),( BR / ( FirstVNF_RAM_Server / Const ) ) ) ,FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Max( ( DS * Max( CS,( MUC + RRSe ) ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS - Min( ( CS / MUM ) ,CS ) ) ,MUM ) ) ,DS ) ) / Min( MUR ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6419235213518416}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( Min( Min( MDR ,ACS ) ,AMS ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.0877537824534042}, {"determining": "( ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( Max( ( ( MRS / FirstVNF_Mem ) + MRS ),MDR ) * PN ) ) * ( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( ( CS / MUM ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.9780876494023905, "obj2": 0.008495762996239628}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ( DDR / ARS ) + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) - ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RCSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + ( CS - ( CS * MUM ) ) ) ) ) - Max( ( ( ( CS - ( MUM + MUR ) ) * MLU ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.3884462151394422, "obj2": 0.46066525427742444}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * AMS ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5398406374501992, "obj2": 0.28354897680482316}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( Min( MDR ,( Min( ARS ,Max( ( AMS * ( BR * ACS ) ),FirstVNF_RAM_Server ) ) * Min( PN ,FirstVNF_Mem_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / MUR ) * DS ) * ( MUC + DS ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ACS + RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( FirstVNF_Mem / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( Max( ( RMSe - Min( Max( ( ( CS * RRSe ) + Max( MUR,RMSe ) ),MLU ) ,MLU ) ),( CS + ( MLU + RMSe ) ) ) * ( MUM + MLU ) ) )", "obj1": 0.8864541832669323, "obj2": 0.04531685755117544}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5637450199203188, "obj2": 0.2586065343592152}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.1196075730714842}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Max( Min( ( Min( ( Min( MUR ,MUC ) / RCSe ) ,( DS / MUC ) ) * CS ) ,( RMSe / MUC ) ),CS ) ,( DS - CS ) )", "obj1": 0.43824701195219123, "obj2": 0.41200064606117154}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6354581673306773, "obj2": 0.20812664104148554}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( Min( CS ,MUC ) + MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6533864541832669, "obj2": 0.19364006336597359}], "15": [{"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ) ) ) ) ) )", "choosing": "( Min( DS ,( MUR / MUM ) ) * ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( FirstVNF_RAM_Server / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( Min( RMSe ,( DS / MUC ) ) * CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( CS / MUM ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,MDR ) / DDR ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( DDR ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( Min( RRSe ,MUR ) / Max( Max( ( DS * Max( CS,MLU ) ),MUM ),Min( ( Min( DS ,CS ) / Max( ( Min( CS ,CS ) - DS ),RCSe ) ) ,DS ) ) )", "obj1": 0.703187250996016, "obj2": 0.16540573265628797}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12239679278261831}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.40239043824701193, "obj2": 0.43114251569891304}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Max( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( RMSe / MUC ) ),CS ) ,( DS - CS ) )", "obj1": 0.4402390438247012, "obj2": 0.40842879015220807}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( MUC / Max( MUC,MUM ) ) + ( RCSe * RMSe ) ) * ( Max( MUR,MUC ) / RCSe ) )", "obj1": 0.701195219123506, "obj2": 0.18218219514948625}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,PN ),ACS ) - Max( AMS,( FirstVNF_CPU_Server * ( ( RRS - CRS ) - Min( MRS ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( ( DS - ( RCSe / ( RCSe * Max( RRSe,Min( DS ,( RCSe * MLU ) ) ) ) ) ),MUC ) ,( Min( ( ( MUR / DS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) )", "obj1": 0.48804780876494025, "obj2": 0.3179377612396686}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( Min( Min( Const ,( RRS / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ,( Const + ( Max( MRS,FirstVNF_Mem ) / RRS ) ) ) ,AMS ) - ( Max( Const,( ARS / ( ( ACS - FirstVNF_CPU ) * AMS ) ) ) / PN ) ) ) )", "choosing": "Min( Max( RMSe,( MUC / MUM ) ) ,( ( ( RMSe / MUR ) + ( MUM / MUM ) ) - CS ) )", "obj1": 0.8645418326693227, "obj2": 0.05696990451066387}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.39243027888446214, "obj2": 0.4604556418436489}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server - ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( Min( DDR ,Max( PN,FirstVNF_RAM ) ) / ( Max( PN,AMS ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Min( ( RRSe * MLU ) ,MLU ) / MLU ) * CS ) - MLU ) ,( DS / CS ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3705179282868526, "obj2": 0.49329015295346784}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( Min( CS ,MUC ) + MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6633466135458167, "obj2": 0.18759400585911556}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) )", "obj1": 0.47410358565737054, "obj2": 0.3386446408837245}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4541832669322709, "obj2": 0.35405797435099107}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ),Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( FirstVNF_Mem / CRS ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS + DS ) * ( CS * Min( Min( Max( MUM,MLU ) ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7806240554860419}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( Max( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ) ),FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MUR ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.9083665338645418, "obj2": 0.03754494636806672}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "Min( ( Max( ( ( Const * Min( ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.6115537848605578, "obj2": 0.2359400066118957}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5776892430278885, "obj2": 0.24575105328432068}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( Max( PN,AMS ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MLU * ( MUM * DS ) ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.72689751651529}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / MDR ) ) ) ,( FirstVNF_RAM * Const ) ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUM ) / Max( ( CS / CS ),MUR ) ) * ( CS * ( MUC - MUM ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6676676244725862}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.4708100153196496}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server * CRS ) ) + ( Min( MDR ,( Max( MRS,( FirstVNF_CPU + ( ( FirstVNF_CPU * FirstVNF_RAM ) + FirstVNF_RAM ) ) ) / DDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / Min( RRSe ,Max( ( ( ( CS / MUR ) - ( ( RCSe / ( RMSe * MUM ) ) * ( ( RRSe / MLU ) / DS ) ) ) * CS ),MLU ) ) )", "obj1": 0.22709163346613545, "obj2": 0.6521978770656565}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * ( ( Const / BR ) - ( ( ARS / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - Max( RMSe,MUC ) ) + ( ( RMSe + MLU ) / ( CS / MUR ) ) ) - Max( MUR,Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.06533290057910585}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( ARS - ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ),Max( Const,Const ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5976095617529881, "obj2": 0.23879373318584765}, {"determining": "( Max( ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ),ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( Max( MUC,RCSe ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5111620462037312}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Min( FirstVNF_Mem_Server ,Min( RRS ,RRS ) ) ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS - Min( ( ( ( RCSe * DS ) + MUR ) + MUM ) ,CS ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ) ) ) ) - ( Min( CRS ,MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RRSe * MUM ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe * DS ) ) )", "obj1": 0.5577689243027888, "obj2": 0.2620725711784544}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.30436706897862353}, {"determining": "( Max( MRS,ACS ) - Max( ( Max( Max( FirstVNF_Mem_Server,ACS ),( FirstVNF_RAM + FirstVNF_RAM ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),AMS ) )", "choosing": "( Min( ( ( ( ( CS + DS ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS / RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2880376987533005}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Min( MUR ,( MUC / MUM ) ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.07236722250136529}, {"determining": "( Max( MRS,ACS ) - ( Const * Max( ( ( AMS + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( MUM,( Min( CS ,MUC ) + MUM ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5756029581199223}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Const ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( MUC / Max( MUC,MUM ) ) + ( RCSe * RMSe ) ) * ( Max( MUR,MUC ) / RCSe ) )", "obj1": 0.35856573705179284, "obj2": 0.49949460651391403}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.047004509713036866}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( Min( CS ,MUC ) + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6417228911644377}, {"determining": "( ( Min( Max( FirstVNF_RAM,Min( Max( ( BR / ( FirstVNF_CPU * MRS ) ),( BR / ( FirstVNF_RAM_Server / Const ) ) ) ,FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,MDR ) )", "choosing": "( ( Max( ( DS * Max( CS,( MUC + RRSe ) ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS - Min( ( CS / MUM ) ,CS ) ) ,MUM ) ) ,DS ) ) / Min( MUR ,RRSe ) )", "obj1": 0.2350597609561753, "obj2": 0.6419235213518416}, {"determining": "Min( ( Max( ( ( Const * Min( ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ,Max( Min( ( RRS + MRS ) ,Max( ( FirstVNF_RAM / FirstVNF_CPU ),DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( DS / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( MUC ,( Max( ( MLU * RRSe ),MUC ) - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7825020971070662}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Min( AMS ,ARS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / ( ( ( PN + PN ) * AMS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe + MUR ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012384499821646439}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.1196075730714842}, {"determining": "( ( ( ( AMS + ACS ) - ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( MLU ,MLU ) ,( ( CS / MUR ) / ( RRSe + RMSe ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.35258964143426297, "obj2": 0.5035895422351281}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7317053919897007}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU_Server - ( RRS + FirstVNF_CPU_Server ) ) + MDR ) * ( BR + PN ) ) / Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "Min( ( CS * Min( ( ( CS * CS ) - ( MUR - MUM ) ) ,( DS / MUC ) ) ) ,Max( RMSe,( ( Max( RRSe,( Min( RRSe ,CS ) / MUR ) ) * ( MUC / MLU ) ) - Max( Min( MUR ,MLU ),RCSe ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5331009462988638}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( DDR * FirstVNF_Mem ) ),Min( BR ,FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS / AMS ) )", "choosing": "( ( ( ( RRSe - MUR ) - DS ) / CS ) * ( RMSe * RMSe ) )", "obj1": 0.9322709163346613, "obj2": 0.033223311528251726}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_Mem / Const ) ) - ( Max( ACS,DDR ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.2450199203187251, "obj2": 0.6260567527324725}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5247713566256712}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( FirstVNF_Mem / FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ) ) ,( DS - CS ) )", "obj1": 0.6235059760956175, "obj2": 0.22409870198648654}, {"determining": "( Max( MRS,ACS ) - Max( AMS,Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,MUC ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5617529880478087, "obj2": 0.2575968520981478}, {"determining": "Min( ( MDR / RRS ) ,( PN / Const ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUM + Min( CS ,MUC ) ) ) ) ) ) ,Min( RRSe ,( RMSe / Max( Max( RCSe,CS ),( MUR - Min( RMSe ,MUC ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5273254000458667}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( Min( FirstVNF_CPU_Server ,( Max( ( Const * RRS ),( DDR * BR ) ) * Max( MRS,( Const - DDR ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUC * ( MUC / MUM ) ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.798804780876494, "obj2": 0.07509093575453328}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( Max( ( ( Const * Max( ( ( PN + MRS ) + FirstVNF_CPU_Server ),Min( ARS ,FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + Max( MLU,RCSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2649402390438247, "obj2": 0.5956328079740489}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( BR * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) )", "obj1": 0.7888446215139442, "obj2": 0.08169355468776099}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / DDR ) ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( RRSe ,( ( Min( RMSe ,( DS / MUC ) ) * Min( ( RCSe / CS ) ,RCSe ) ) - CS ) ) * Max( RCSe,RMSe ) ) * RCSe ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7649402390438247, "obj2": 0.09938629558946291}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( ( ( CS / CS ) * MUR ) * CS ) ,( DS - CS ) )", "obj1": 0.9581673306772909, "obj2": 0.01525084630096622}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( ( FirstVNF_Mem / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6726949861468248}, {"determining": "( Max( MRS,( Max( PN,( FirstVNF_CPU * FirstVNF_Mem ) ) + MDR ) ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( MUM - Max( Max( MUC,RMSe ),RRSe ) ) ) * MUC ) * Min( RMSe ,( DS / ( ( CS * MUC ) * ( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.50199203187251, "obj2": 0.30157229930549}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,( MRS - FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RCSe + MLU ) / RMSe ) ) ) ,( DS / MUR ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "Max( ( DDR - DDR ),( ( ( FirstVNF_CPU + CRS ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Min( Max( ( MRS - FirstVNF_CPU ),MDR ) ,CRS ) - MRS ) ) )", "choosing": "Min( ( CS / MUR ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( MUM,( DS - MUC ) ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.250996015936255, "obj2": 0.6128534803357409}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Max( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( RMSe / MUC ) ),CS ) ,( DS - CS ) )", "obj1": 0.5717131474103586, "obj2": 0.2533948416575656}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( DS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2729083665338645, "obj2": 0.5899314694549}, {"determining": "( ( ( ( AMS + PN ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( RRS / Min( ( ARS - ARS ) ,( ACS * ARS ) ) ) / MDR ) / PN ) ) ) - ( ARS / RRS ) )", "choosing": "( ( ( Min( ( CS - Min( ( ( MUM / MUC ) / Min( RCSe ,MLU ) ) ,Max( ( CS * CS ),( MUC * RRSe ) ) ) ) ,RRSe ) * Min( RCSe ,RMSe ) ) + DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.38247011952191234, "obj2": 0.4702673816605558}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,Max( Max( DS,DS ),RRSe ) ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( ( RMSe - DS ) * MUC ) ,MUM ) ) ,RMSe ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5423890816488993}, {"determining": "( Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + FirstVNF_Mem_Server ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( ( MUC * RMSe ) - MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + RRSe ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29387209037931006}, {"determining": "( AMS - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.30278884462151395, "obj2": 0.5629514243166205}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( CS / MUR ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( MUM,( DS - MUC ) ) + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.651394422310757, "obj2": 0.19659025955726317}, {"determining": "( Max( ACS,MRS ) - ( AMS - ( ( ( ( ( FirstVNF_RAM - ARS ) * ( DDR * BR ) ) * RRS ) - FirstVNF_RAM_Server ) * ( CRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,Max( MUC,RMSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33996376388047456}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( ( FirstVNF_Mem / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6805778244086672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( FirstVNF_Mem / FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ) ) ,( DS - CS ) )", "obj1": 0.6235059760956175, "obj2": 0.22409870198648654}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6414342629482072, "obj2": 0.20078215583954256}, {"determining": "( Max( MRS,( CRS - MRS ) ) - Max( AMS,( ( Min( Min( MDR ,ACS ) ,AMS ) / ( PN / Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) ) ) / ( BR + Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( CS / Min( ( CS * MUC ) ,( MUM / ( MUM / DS ) ) ) ) ) ) ,( ( MUR / CS ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * CS ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5398406374501992, "obj2": 0.2822906336654098}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7669322709163346, "obj2": 0.09371436724857493}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Max( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( RMSe / MUC ) ),CS ) ,( DS - CS ) )", "obj1": 0.43227091633466136, "obj2": 0.4157814400576877}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( DS ,CS ) ),RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6585762936574975}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ACS * FirstVNF_CPU_Server ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) ),RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.9183266932270916, "obj2": 0.034080350978252204}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( ( CS / MUM ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.547808764940239, "obj2": 0.274412934507313}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( Min( Min( MDR ,ACS ) ,AMS ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) ) )", "obj1": 0.7788844621513944, "obj2": 0.0877537824534042}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ( RRS / RRS ) / PN ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,( Min( ( Min( MUR ,DS ) - Min( ( RMSe / MUC ) ,Max( MLU,RRSe ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) )", "obj1": 0.4701195219123506, "obj2": 0.33996376388047456}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - Max( MRS,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),( Min( ( ( MUR + RCSe ) * ( MUC * RRSe ) ) ,( MUM - CS ) ) * MLU ) ) )", "obj1": 0.601593625498008, "obj2": 0.2369564511886114}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( Min( MDR ,( Min( ARS ,Max( ( AMS * ( BR * ACS ) ),FirstVNF_RAM_Server ) ) * Min( PN ,FirstVNF_Mem_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / MUR ) * DS ) * ( MUC + DS ) )", "obj1": 0.1952191235059761, "obj2": 0.679750384527331}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ),Max( Const,Const ) ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( ( CS / MUM ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5438247011952191, "obj2": 0.27577654651341055}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( MDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.7848605577689243, "obj2": 0.08285018144863258}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( ( Min( ( RCSe / RRSe ) ,MLU ) / MLU ) * CS ) - MLU ) ,( DS / CS ) ) * CS ) ,( DS * CS ) )", "obj1": 0.6573705179282868, "obj2": 0.19274033493563106}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.3844621513944223, "obj2": 0.4632640800206957}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( RMSe - RCSe ) / MUC ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.952191235059761, "obj2": 0.01768192728478944}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7450199203187251, "obj2": 0.11053767333871974}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( ( FirstVNF_Mem - ( FirstVNF_CPU / DDR ) ) / ( FirstVNF_Mem_Server * AMS ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,FirstVNF_RAM_Server ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( MUM,( DS * ( CS / MLU ) ) ) + Min( ( Min( MUR ,CS ) / Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / CS ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6294820717131474, "obj2": 0.21302259953119607}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * MDR ) ) + Const ) ) ) + Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( ( RRSe * ( Min( RRSe ,CS ) / MUR ) ) * Max( MUC,MLU ) ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6042838135110731}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( AMS / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7385527051796873}], "16": [{"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ) ) ) ) ) )", "choosing": "( Min( DS ,( MUR / MUM ) ) * ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) * Max( ( ( ARS - DDR ) + ACS ),Min( BR ,FirstVNF_RAM_Server ) ) ) - ( AMS / AMS ) )", "choosing": "( ( ( ( ( MLU / ( Max( MUC,( MUC + RMSe ) ) / ( MUR - Max( MUM,RRSe ) ) ) ) + RRSe ) - DS ) + DS ) * ( MLU + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( FirstVNF_RAM_Server / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( CS / MUM ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,MDR ) / DDR ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( DDR ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( Min( RRSe ,MUR ) / Max( Max( ( DS * Max( CS,MLU ) ),MUM ),Min( ( Min( DS ,CS ) / Max( ( Min( CS ,CS ) - DS ),RCSe ) ) ,DS ) ) )", "obj1": 0.703187250996016, "obj2": 0.16540573265628797}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Max( Min( ( Min( RMSe ,( DS / MUC ) ) * CS ) ,( RMSe / MUC ) ),CS ) ,( DS - CS ) )", "obj1": 0.4402390438247012, "obj2": 0.40842879015220807}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12239679278261831}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( Min( Min( Const ,( RRS / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ,( Const + ( Max( MRS,FirstVNF_Mem ) / RRS ) ) ) ,AMS ) - ( Max( Const,( ARS / ( ( ACS - FirstVNF_CPU ) * AMS ) ) ) / PN ) ) ) )", "choosing": "Min( Max( RMSe,( MUC / MUM ) ) ,( ( ( RMSe / MUR ) + ( MUM / MUM ) ) - CS ) )", "obj1": 0.8645418326693227, "obj2": 0.05696990451066387}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( MUC / Max( MUC,MUM ) ) + ( RCSe * RMSe ) ) * ( Max( MUR,MUC ) / RCSe ) )", "obj1": 0.701195219123506, "obj2": 0.18218219514948625}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.40239043824701193, "obj2": 0.43114251569891304}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7450199203187251, "obj2": 0.11053767333871974}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Min( MRS ,ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( Min( ( RRSe - MUC ) ,Min( ( Min( DS ,MUR ) + MUR ) ,Max( RCSe,Min( MUM ,( MLU + CS ) ) ) ) ) * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6371376016670555}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( ( FirstVNF_Mem - ( FirstVNF_CPU / DDR ) ) / ( FirstVNF_Mem_Server * AMS ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,FirstVNF_RAM_Server ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( MUM,( DS * ( CS / MLU ) ) ) + Min( ( Min( MUR ,CS ) / Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / CS ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6294820717131474, "obj2": 0.21302259953119607}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_Mem / Const ) ) - ( Max( ACS,DDR ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.2450199203187251, "obj2": 0.6230084576485643}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS + DS ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS / RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.18418400056017414}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) + ( Max( ( RRS - Const ),MDR ) / PN ) ) ) )", "choosing": "Min( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) ,( DS - ( MUM + MUR ) ) )", "obj1": 0.6175298804780877, "obj2": 0.22171835240928942}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / DDR ) ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( RRSe ,( ( Min( RMSe ,( DS / MUC ) ) * Min( ( RCSe / CS ) ,RCSe ) ) - CS ) ) * Max( RCSe,RMSe ) ) * RCSe ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7649402390438247, "obj2": 0.09938629558946291}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,PN ),ACS ) - Max( AMS,( FirstVNF_CPU_Server * ( ( RRS - CRS ) - Min( MRS ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( ( DS - ( RCSe / ( RCSe * Max( RRSe,Min( DS ,( RCSe * MLU ) ) ) ) ) ),MUC ) ,( Min( ( ( MUR / DS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) )", "obj1": 0.48804780876494025, "obj2": 0.3179377612396686}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( Max( AMS,( PN / Max( BR,Max( Const,Const ) ) ) ),Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( FirstVNF_Mem / CRS ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS + DS ) * ( CS * Min( Min( Max( MUM,MLU ) ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7806240554860419}, {"determining": "Min( ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server - ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ,( Min( DDR ,Max( PN,FirstVNF_RAM ) ) / ( Max( PN,AMS ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "Min( ( Min( ( ( ( Min( ( RRSe * MLU ) ,MLU ) / MLU ) * CS ) - MLU ) ,( DS / CS ) ) * CS ) ,( DS - CS ) )", "obj1": 0.3705179282868526, "obj2": 0.49329015295346784}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( ( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( DS,DS ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.32270916334661354, "obj2": 0.5308218503504202}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.4708100153196496}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) )", "obj1": 0.9362549800796812, "obj2": 0.0238975932461905}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6414342629482072, "obj2": 0.20078215583954256}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server * CRS ) ) + ( Min( MDR ,( Max( MRS,( FirstVNF_CPU + ( ( FirstVNF_CPU * FirstVNF_RAM ) + FirstVNF_RAM ) ) ) / DDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / Min( RRSe ,Max( ( ( ( CS / MUR ) - ( ( RCSe / ( RMSe * MUM ) ) * ( ( RRSe / MLU ) / DS ) ) ) * CS ),MLU ) ) )", "obj1": 0.22709163346613545, "obj2": 0.6521978770656565}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / MDR ) ) ) ,( FirstVNF_RAM * Const ) ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUM ) / Max( ( CS / CS ),MUR ) ) * ( CS * ( MUC - MUM ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6676676244725862}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * ( ( Const / BR ) - ( ( ARS / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - Max( RMSe,MUC ) ) + ( ( RMSe + MLU ) / ( CS / MUR ) ) ) - Max( MUR,Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.06533290057910585}, {"determining": "( ( Max( ( Min( AMS ,( FirstVNF_CPU_Server / CRS ) ) / FirstVNF_CPU_Server ),Min( BR ,RRS ) ) - ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.398406374501992, "obj2": 0.4498261570288181}, {"determining": "( Max( ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ),ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( Max( MUC,RCSe ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5111620462037312}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.42231075697211157, "obj2": 0.41576945390034314}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( ( Max( MUR,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3036766807464865}, {"determining": "( Max( MRS,( CRS - MRS ) ) - Max( AMS,( ( Min( Min( MDR ,ACS ) ,AMS ) / ( PN / Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) ) ) / ( BR + Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( CS / Min( ( CS * MUC ) ,( MUM / ( MUM / DS ) ) ) ) ) ) ,( ( MUR / CS ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * CS ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5398406374501992, "obj2": 0.2822906336654098}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Min( FirstVNF_Mem_Server ,Min( RRS ,RRS ) ) ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS - Min( ( ( ( RCSe * DS ) + MUR ) + MUM ) ,CS ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ),Max( Min( ( ( CS / MUR ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.011306481029451431}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( DS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2729083665338645, "obj2": 0.5899314694549}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( ( FirstVNF_Mem / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6726949861468248}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( DS ,CS ) ),RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6585762936574975}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * MDR ) ) + Const ) ) ) + Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( ( RRSe * ( Min( RRSe ,CS ) / MUR ) ) * Max( MUC,MLU ) ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.6042838135110731}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( AMS / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7385527051796873}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( MDR / Max( ( ARS - ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ),Max( Const,Const ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5677290836653387, "obj2": 0.2516240078291405}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( Min( Min( MDR ,ACS ) ,( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( RCSe - Max( Max( CS,MUM ),MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4800796812749004, "obj2": 0.325341295333946}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ACS * FirstVNF_CPU_Server ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) ),RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.9183266932270916, "obj2": 0.034080350978252204}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( Max( PN,AMS ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MLU * ( MUM * DS ) ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.72689751651529}, {"determining": "( Max( ACS,MRS ) - ( AMS - ( ( ( ( ( FirstVNF_RAM - ARS ) * ( DDR * BR ) ) * RRS ) - FirstVNF_RAM_Server ) * ( CRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,Max( MUC,RMSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33996376388047456}, {"determining": "Min( ( Max( ( ( Const * Min( ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ,Max( Min( ( RRS + MRS ) ,Max( ( FirstVNF_RAM / FirstVNF_CPU ),DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( DS / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( MUC ,( Max( ( MLU * RRSe ),MUC ) - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7825020971070662}, {"determining": "Min( ( MDR / RRS ) ,( PN / Const ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUM + Min( CS ,MUC ) ) ) ) ) ) ,Min( RRSe ,( RMSe / Max( Max( RCSe,CS ),( MUR - Min( RMSe ,MUC ) ) ) ) ) )", "obj1": 0.33665338645418325, "obj2": 0.5273254000458667}, {"determining": "( Max( MRS,ACS ) - Max( ( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * Max( ARS,MRS ) ),AMS ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( Min( MUM ,RMSe ) * MUR ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( Min( DS ,MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,Min( ( Min( CS ,( ( MUM * ( RMSe + RMSe ) ) - CS ) ) + MUC ) ,( MUM - RRSe ) ) )", "obj1": 0.5776892430278885, "obj2": 0.24575105328432068}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3294437220112172}, {"determining": "Min( ( Max( ( ( Const * Min( ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ,Max( Min( ( MRS + RRS ) ,Max( FirstVNF_RAM_Server,DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.543437761216348}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5247713566256712}, {"determining": "( Max( ( ( Const * Max( ( ( PN + MRS ) + FirstVNF_CPU_Server ),Min( ARS ,FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + Max( MLU,RCSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2649402390438247, "obj2": 0.5956328079740489}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Min( AMS ,ARS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / ( ( ( PN + PN ) * AMS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe + MUR ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012384499821646439}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.6115537848605578, "obj2": 0.2359400066118957}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4541832669322709, "obj2": 0.35405797435099107}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,( MRS - FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RCSe + MLU ) / RMSe ) ) ) ,( DS / MUR ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( CRS ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7350597609561753, "obj2": 0.11951016464855094}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2907686646623886}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.50199203187251, "obj2": 0.30045454670501154}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( DDR * FirstVNF_Mem ) ),Min( BR ,FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS / AMS ) )", "choosing": "( ( ( ( RRSe - MUR ) - DS ) / CS ) * ( RMSe * RMSe ) )", "obj1": 0.9322709163346613, "obj2": 0.033223311528251726}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7669322709163346, "obj2": 0.09371436724857493}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04700450971303686}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( Min( FirstVNF_CPU_Server ,( Max( ( Const * RRS ),( DDR * BR ) ) * Max( MRS,( Const - DDR ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUC * ( MUC / MUM ) ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.798804780876494, "obj2": 0.07509093575453328}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_Mem / Const ) ) - ( Max( ACS,DDR ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( Min( FirstVNF_CPU ,CRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5438247011952191, "obj2": 0.2688572292263483}, {"determining": "( Max( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ),ACS ) - Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( DDR * BR ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUC ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.29880478087649404, "obj2": 0.567776068682631}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( ARS - ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ),Max( Const,Const ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5976095617529881, "obj2": 0.23879373318584765}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( Max( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ) ),FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MUR ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.9083665338645418, "obj2": 0.03754494636806672}, {"determining": "( Max( MRS,ACS ) - Max( AMS,Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,MUC ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5617529880478087, "obj2": 0.2575968520981478}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( BR * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) )", "obj1": 0.7888446215139442, "obj2": 0.08169355468776099}, {"determining": "( ( MRS / ACS ) - Max( AMS,( ( ( ( ( ARS - FirstVNF_RAM ) * Max( MRS,FirstVNF_RAM ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / ( MUR / Max( MUM,DS ) ) ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( Min( CS ,( RCSe + DS ) ) + MUC ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2645463247866933}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.25298804780876494, "obj2": 0.6120111292555048}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8725099601593626, "obj2": 0.04797374150116421}, {"determining": "( Max( MRS,ACS ) - ( Const * Max( ( ( AMS + MRS ) + FirstVNF_CPU_Server ),( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( MUM,( Min( CS ,MUC ) + MUM ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5756029581199223}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_RAM_Server + ( MDR / Min( AMS ,PN ) ) ) ) - ( Max( ACS,DDR ) - ( Max( Const,PN ) + ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / Min( MUM ,RRSe ) ),Max( RMSe,CS ) ) ) ,( MUC / CS ) )", "obj1": 0.2908366533864542, "obj2": 0.5793201295596775}, {"determining": "( ( ( ( AMS + PN ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( RRS / Min( ( ARS - ARS ) ,( ACS * ARS ) ) ) / MDR ) / PN ) ) ) - ( ARS / RRS ) )", "choosing": "( ( ( Min( ( CS - Min( ( ( MUM / MUC ) / Min( RCSe ,MLU ) ) ,Max( ( CS * CS ),( MUC * RRSe ) ) ) ) ,RRSe ) * Min( RCSe ,RMSe ) ) + DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.38247011952191234, "obj2": 0.4702673816605558}, {"determining": "( AMS - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.30278884462151395, "obj2": 0.5629514243166205}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4541832669322709, "obj2": 0.35405797435099107}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( ( FirstVNF_Mem / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.6805778244086672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( Min( CS ,MUC ) + MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6633466135458167, "obj2": 0.18759400585911556}, {"determining": "( Max( MRS,ACS ) - Max( ( Max( Max( FirstVNF_Mem_Server,ACS ),( FirstVNF_RAM + FirstVNF_RAM ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),AMS ) )", "choosing": "( Min( ( ( ( ( CS + DS ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS / RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2880376987533005}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Min( MUR ,( MUC / MUM ) ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.07236722250136529}, {"determining": "Max( ( DDR - DDR ),( ( Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) - ( ARS * FirstVNF_CPU_Server ) ) * ( Min( Max( ( MRS - FirstVNF_CPU ),MDR ) ,CRS ) - MRS ) ) )", "choosing": "Min( ( CS / MUR ) ,( ( ( CS / MUM ) * ( RRSe - ( Max( MUM,( DS - MUC ) ) + MUM ) ) ) - CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5505501879870489}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MUR ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3605577689243028, "obj2": 0.4940796618881244}, {"determining": "( Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + FirstVNF_Mem_Server ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( ( MUC * RMSe ) - MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + RRSe ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29387209037931006}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( RMSe - RCSe ) / MUC ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.952191235059761, "obj2": 0.01768192728478944}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( BR ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( ( CS / MUM ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7768924302788844, "obj2": 0.08851532512040791}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,Const ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( MUC / Max( MUC,MUM ) ) + ( RCSe * RMSe ) ) * ( Max( MUR,MUC ) / RCSe ) )", "obj1": 0.35856573705179284, "obj2": 0.49949460651391403}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.39641434262948205, "obj2": 0.45616911015947625}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5776892430278885, "obj2": 0.24575105328432068}], "17": [{"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ) ) ) ) ) )", "choosing": "( Min( DS ,( MUR / MUM ) ) * ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( Min( ARS ,ARS ) - Max( PN,ARS ) )", "choosing": "( ( RRSe - ( RRSe + Min( DS ,( MUR / MUM ) ) ) ) - Min( ( ( RRSe + RMSe ) - ( ( DS - ( MUR - ( ( RRSe / RRSe ) / MUR ) ) ) + ( RMSe + ( ( Max( MLU,MLU ) * RMSe ) - ( RRSe / RMSe ) ) ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) * Max( ( ( ARS - DDR ) + ACS ),Min( BR ,FirstVNF_RAM_Server ) ) ) - ( AMS / AMS ) )", "choosing": "( ( ( ( ( MLU / ( Max( MUC,( MUC + RMSe ) ) / ( MUR - Max( MUM,RRSe ) ) ) ) + RRSe ) - DS ) + DS ) * ( MLU + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( CS / MUM ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.4402390438247012, "obj2": 0.40336090941315367}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( CRS ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS + DS ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS / RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.6673306772908366, "obj2": 0.18418400056017414}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Max( Min( ( RRS + MRS ) ,Max( ( FirstVNF_RAM / FirstVNF_CPU ),DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( DS / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( MUC ,( Max( ( MLU * RRSe ),MUC ) - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.701195219123506, "obj2": 0.16645100414073674}, {"determining": "( Min( BR ,MRS ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * MUM ) ) ) * RRSe ) * CS ) )", "obj1": 0.5976095617529881, "obj2": 0.23259871488734823}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,MDR ) / DDR ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( DDR ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( Min( RRSe ,MUR ) / Max( Max( ( DS * Max( CS,MLU ) ),MUM ),Min( ( Min( DS ,CS ) / Max( ( Min( CS ,CS ) - DS ),RCSe ) ) ,DS ) ) )", "obj1": 0.703187250996016, "obj2": 0.16540573265628797}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Min( MRS ,ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( Min( ( RRSe - MUC ) ,Min( ( Min( DS ,MUR ) + MUR ) ,Max( RCSe,Min( MUM ,( MLU + CS ) ) ) ) ) * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6371376016670555}, {"determining": "( Max( ACS,MRS ) - ( AMS - ( ( ( ( ( FirstVNF_RAM - ARS ) * ( DDR * BR ) ) * RRS ) - FirstVNF_RAM_Server ) * ( CRS - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,Max( MUC,RMSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33996376388047456}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Min( AMS ,ARS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / ( ( ( PN + PN ) * AMS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe + MUR ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012384499821646439}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( ( FirstVNF_Mem - ( FirstVNF_CPU / DDR ) ) / ( FirstVNF_Mem_Server * AMS ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,FirstVNF_RAM_Server ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( MUM,( DS * ( CS / MLU ) ) ) + Min( ( Min( MUR ,CS ) / Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / CS ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6294820717131474, "obj2": 0.21302259953119607}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.40239043824701193, "obj2": 0.43114251569891304}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.25298804780876494, "obj2": 0.6120111292555048}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.42231075697211157, "obj2": 0.41576945390034314}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,PN ),ACS ) - Max( AMS,( FirstVNF_CPU_Server * ( ( RRS - CRS ) - Min( MRS ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( ( DS - ( RCSe / ( RCSe * Max( RRSe,Min( DS ,( RCSe * MLU ) ) ) ) ) ),MUC ) ,( Min( ( ( MUR / DS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) )", "obj1": 0.48804780876494025, "obj2": 0.3179377612396686}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( Min( DS ,( CS / MUM ) ) * ( CS * Min( Min( ( RRSe + Min( MUC ,( ( RRSe / MUR ) * RRSe ) ) ) ,( RRSe - ( Min( DS ,( CS / MUM ) ) + RRSe ) ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7788163960934814}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.4708100153196496}, {"determining": "( ( ( FirstVNF_RAM * RRS ) - FirstVNF_Mem_Server ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,( FirstVNF_Mem - MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RCSe ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( Min( RRSe ,RCSe ) + Max( MLU,RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,Max( BR,CRS ) ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( Max( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( RRSe * DS ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( ( CS / DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.36254980079681276, "obj2": 0.4864373688804508}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server * CRS ) ) + ( Min( MDR ,( Max( MRS,( FirstVNF_CPU + ( ( FirstVNF_CPU * FirstVNF_RAM ) + FirstVNF_RAM ) ) ) / DDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / Min( RRSe ,Max( ( ( ( CS / MUR ) - ( ( RCSe / ( RMSe * MUM ) ) * ( ( RRSe / MLU ) / DS ) ) ) * CS ),MLU ) ) )", "obj1": 0.22709163346613545, "obj2": 0.6521978770656565}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / MDR ) ) ) ,( FirstVNF_RAM * Const ) ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUM ) / Max( ( CS / CS ),MUR ) ) * ( CS * ( MUC - MUM ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6676676244725862}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.3565737051792829, "obj2": 0.4989383799572193}, {"determining": "( Max( MRS,ACS ) - ( AMS / ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - Min( MRS ,Max( PN,Min( MDR ,CRS ) ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( MLU - Min( DS ,DS ) ) ,Max( RMSe,RMSe ) ) ,( Min( RRSe ,( ( MUR / Max( MUM,( DS - MUC ) ) ) - CS ) ) * Max( RMSe,RCSe ) ) )", "obj1": 0.5916334661354582, "obj2": 0.24511968491948977}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( ( Max( MUR,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3036766807464865}, {"determining": "( Max( MRS,( CRS - MRS ) ) - Max( AMS,( ( Min( Min( MDR ,ACS ) ,AMS ) / ( PN / Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) ) ) / ( BR + Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( CS / Min( ( CS * MUC ) ,( MUM / ( MUM / DS ) ) ) ) ) ) ,( ( MUR / CS ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * CS ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5398406374501992, "obj2": 0.2822906336654098}, {"determining": "( Max( FirstVNF_CPU,CRS ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( AMS / FirstVNF_Mem ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( MUR - MUC ) * MUR ) * ( MUM + ( ( MUM + ( ( MUM / MLU ) / ( ( CS - ( RCSe + RMSe ) ) + RCSe ) ) ) / RRSe ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5271054640055856}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( DS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2729083665338645, "obj2": 0.5899314694549}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( ( ( MLU * ( CS - ( MUM + MUR ) ) ) + Min( CS ,RCSe ) ),Max( Min( ( ( CS / MUR ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.011306481029451431}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( Max( ( AMS + PN ),Const ) - ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * MDR ) ) + Const ) ) ) + Max( FirstVNF_RAM,FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( ( ( RMSe - MUR ) + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( ( RRSe * ( Min( RRSe ,CS ) / MUR ) ) * Max( MUC,MLU ) ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MUR ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.603768640020147}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( ( ( AMS + MRS ) * ( BR - PN ) ) / ( Min( Min( ACS ,MDR ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Max( MUR,( ( Max( DS,MLU ) / ( DS / CS ) ) / ( Max( MUM,RCSe ) / MUM ) ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.651394422310757, "obj2": 0.19289751381091896}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) + ( Max( ( RRS - Const ),MDR ) / PN ) ) ) )", "choosing": "Min( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) ,( DS - ( MUM + MUR ) ) )", "obj1": 0.6175298804780877, "obj2": 0.22171835240928942}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( DDR * FirstVNF_Mem ) ),Min( BR ,FirstVNF_RAM_Server ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS / AMS ) )", "choosing": "( ( ( ( RRSe - MUR ) - DS ) / CS ) * ( RMSe * RMSe ) )", "obj1": 0.9322709163346613, "obj2": 0.033223311528251726}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( MDR / Max( ( ARS - ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ),Max( Const,Const ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5677290836653387, "obj2": 0.2516240078291405}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.703187250996016, "obj2": 0.16540573265628797}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( Min( Min( MDR ,ACS ) ,( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( RCSe - Max( Max( CS,MUM ),MUM ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4800796812749004, "obj2": 0.325341295333946}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,( ( Max( ( BR - FirstVNF_CPU ),MDR ) * ( ACS + PN ) ) / ( Max( AMS,PN ) - ( FirstVNF_CPU / ACS ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( DS,RMSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3426294820717131, "obj2": 0.5247713566256712}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * ( ( Const / BR ) - ( ( ARS / FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - Max( RMSe,MUC ) ) + ( ( RMSe + MLU ) / ( CS / MUR ) ) ) - Max( MUR,Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.06533290057910585}, {"determining": "Min( ( Max( ( ( Const * Min( ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ,Max( Min( ( RRS + MRS ) ,Max( ( FirstVNF_RAM / FirstVNF_CPU ),DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( DS / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( MUC ,( Max( ( MLU * RRSe ),MUC ) - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7825020971070662}, {"determining": "( Max( Min( Max( ( BR - Min( CRS ,MRS ) ),MDR ) ,Const ),ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( Max( MUC,RCSe ) * CS ) ,MUM ) ) ,DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5111620462037312}, {"determining": "( ( ( ( AMS + PN ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( RRS / Min( ( ARS - ARS ) ,( ACS * ARS ) ) ) / MDR ) / PN ) ) ) - ( ARS / RRS ) )", "choosing": "( ( ( Min( ( CS - Min( ( ( MUM / MUC ) / Min( RCSe ,MLU ) ) ,Max( ( CS * CS ),( MUC * RRSe ) ) ) ) ,RRSe ) * Min( RCSe ,RMSe ) ) + DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.38247011952191234, "obj2": 0.4702673816605558}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) )", "obj1": 0.9362549800796812, "obj2": 0.0238975932461905}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3294437220112172}, {"determining": "( ( MRS / ACS ) - Max( AMS,( ( ( ( ( ARS - FirstVNF_RAM ) * Max( MRS,FirstVNF_RAM ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / ( MUR / Max( MUM,DS ) ) ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( Min( CS ,( RCSe + DS ) ) + MUC ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2645463247866933}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_Mem / Const ) ) - ( Max( ACS,DDR ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.2450199203187251, "obj2": 0.6230084576485643}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4541832669322709, "obj2": 0.35405797435099107}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / DS ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6394422310756972, "obj2": 0.20296497549517795}, {"determining": "( Max( ( ( Const * Max( ( ( PN + MRS ) + FirstVNF_CPU_Server ),Min( ARS ,FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + Max( MLU,RCSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2649402390438247, "obj2": 0.5956328079740489}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,( MRS - FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RCSe + MLU ) / RMSe ) ) ) ,( DS / MUR ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) ) / MDR ),( AMS / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7291230269706332}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.50199203187251, "obj2": 0.30045454670501154}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.45946050559608104}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.4406366982424992}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( ( FirstVNF_Mem / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUC * ( MUC / MUM ) ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5431412986547713}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) ,( DS - CS ) )", "obj1": 0.6175298804780877, "obj2": 0.22171835240928942}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_Mem / Const ) ) - ( Max( ACS,DDR ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.2450199203187251, "obj2": 0.6230084576485643}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ) ),FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( Min( MUR ,RRSe ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MUR ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.9063745019920318, "obj2": 0.03815697912990519}, {"determining": "( Min( ACS ,FirstVNF_RAM_Server ) - ( ( Const * Max( DDR,DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( MUR - ( Max( MUC,MUC ) * ( Min( CS ,MUC ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( ( Min( RMSe ,MUM ) * MUR ) / ( RMSe * RCSe ) ) / ( RMSe + MLU ) ) ) - ( Min( MUR ,Min( Max( DS,DS ) ,( RMSe / ( ( DS * ( MUC / CS ) ) * RMSe ) ) ) ) * ( RCSe + DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5745817791303629}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6414342629482072, "obj2": 0.20078215583954256}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( Min( RMSe ,( DS / MUC ) ) * CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7609561752988048, "obj2": 0.09710829689191737}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( MDR / Max( ( ARS - ( FirstVNF_Mem - ( AMS + ACS ) ) ),Max( Const,Const ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * ( ( MUC * CS ) - RRSe ) ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5438247011952191, "obj2": 0.2688572292263483}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.952191235059761, "obj2": 0.01768192728478944}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( AMS / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6726949861468248}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.3904382470119522, "obj2": 0.45511207520809877}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / ( Max( MRS,ACS ) - Max( MDR,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( ( ( MLU * ( CS - ( MUM + ( MUM / RRSe ) ) ) ) + Min( CS ,RCSe ) ),Max( Min( ( ( CS / MUR ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9920318725099602, "obj2": 0.0030237142979793615}, {"determining": "( Max( ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ),ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( Max( MUC,RCSe ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5260278866108081}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( RMSe - RCSe ) / MUC ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.952191235059761, "obj2": 0.01768192728478944}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7669322709163346, "obj2": 0.09371436724857493}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * FirstVNF_RAM ) - Min( Max( ( ( ( BR / ARS ) / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( Min( RMSe ,( DS / MUC ) ) * CS ) - Min( MUC ,MUM ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * Min( ( ( CS + RCSe ) * MLU ) ,MUM ) )", "obj1": 0.7589641434262948, "obj2": 0.10723191738369106}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2907686646623886}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) * ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ) ,( DS - CS ) )", "obj1": 0.5776892430278885, "obj2": 0.24575105328432068}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Min( FirstVNF_Mem_Server ,Min( RRS ,RRS ) ) ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS - Min( ( ( ( RCSe * DS ) + MUR ) + MUM ) ,CS ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MUR ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3605577689243028, "obj2": 0.4940796618881244}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4541832669322709, "obj2": 0.35405797435099107}, {"determining": "( Max( MRS,ACS ) - Max( ( Max( Max( FirstVNF_Mem_Server,ACS ),( FirstVNF_RAM + FirstVNF_RAM ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),AMS ) )", "choosing": "( Min( ( ( ( ( CS + DS ) / ( ( Max( RRSe,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS / RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.2880376987533005}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( BR * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * Min( RMSe ,( ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) / MUC ) ) )", "obj1": 0.7808764940239044, "obj2": 0.08591200968095235}, {"determining": "( Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + FirstVNF_Mem_Server ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( ( MUC * RMSe ) - MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + RRSe ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29387209037931006}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_Mem_Server / ( DDR - ( FirstVNF_RAM_Server / MRS ) ) ) - CRS ) * PN ) - Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( ( ( CS + DS ) / ( ( Max( RRSe,RMSe ) * MUR ) + RMSe ) ) * ( MLU + Min( ( MLU + ( CS / CS ) ) ,RCSe ) ) ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS / RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.7888446215139442, "obj2": 0.0794202587416432}, {"determining": "( ( Max( ( Min( AMS ,( FirstVNF_CPU_Server / CRS ) ) / FirstVNF_CPU_Server ),Min( BR ,RRS ) ) - ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.398406374501992, "obj2": 0.4498261570288181}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) )", "choosing": "( ( ( Max( Min( DS ,Min( DS ,CS ) ),RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6585762936574975}, {"determining": "( MRS * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( Min( MUR ,( Min( MUR ,MUC ) / MUM ) ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.8067729083665338, "obj2": 0.07236722250136529}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6593625498007968, "obj2": 0.19011089170461642}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ACS * FirstVNF_CPU_Server ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,CS ) ) ) ),RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.9183266932270916, "obj2": 0.034080350978252204}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( FirstVNF_RAM ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ( DDR + ( ARS * BR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / Min( RRSe ,Max( MLU,RCSe ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}], "18": [{"determining": "( ( ( ( AMS + PN ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( MRS * MDR ) / MDR ) / PN ) ) ) - Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( ( Min( ( ( MUR - ( RRSe - Max( MLU,RCSe ) ) ) * CS ) ,RRSe ) * ( RRSe + Min( DS ,( CS / MUM ) ) ) ) + DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ) ) ) ) ) )", "choosing": "( Min( DS ,( MUR / MUM ) ) * ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( Min( ARS ,ARS ) - Max( PN,ARS ) )", "choosing": "( ( RRSe - ( RRSe + Min( DS ,( MUR / MUM ) ) ) ) - Min( ( ( RRSe + RMSe ) - ( ( DS - ( MUR - ( ( RRSe / RRSe ) / MUR ) ) ) + ( RMSe + ( ( Max( MLU,MLU ) * RMSe ) - ( RRSe / RMSe ) ) ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( CS / MUM ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( CRS ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6673306772908366, "obj2": 0.18262395703407905}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( FirstVNF_CPU_Server / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.701195219123506, "obj2": 0.1662188380635019}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,MDR ) / DDR ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( DDR ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( Min( RRSe ,MUR ) / Max( Max( ( DS * Max( CS,MLU ) ),MUM ),Min( ( Min( DS ,CS ) / Max( ( Min( CS ,CS ) - DS ),RCSe ) ) ,DS ) ) )", "obj1": 0.703187250996016, "obj2": 0.16540573265628797}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Min( MRS ,ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( Min( ( RRSe - MUC ) ,Min( ( Min( DS ,MUR ) + MUR ) ,Max( RCSe,Min( MUM ,( MLU + CS ) ) ) ) ) * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6371376016670555}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( ( ( FirstVNF_RAM * RRS ) - FirstVNF_Mem_Server ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,( FirstVNF_Mem - MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RCSe ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( Min( RRSe ,RCSe ) + Max( MLU,RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) ,( DS - CS ) )", "obj1": 0.6175298804780877, "obj2": 0.22128356276553976}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( CRS ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( ( ( RRSe - MUR ) - DS ) / CS ) * ( RMSe * RMSe ) )", "obj1": 0.7529880478087649, "obj2": 0.12039027299970527}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( AMS / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6726949861468248}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.40239043824701193, "obj2": 0.43114251569891304}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6294820717131474, "obj2": 0.21006732328732644}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server * CRS ) ) + ( Min( MDR ,( Max( MRS,( FirstVNF_CPU + ( ( FirstVNF_CPU * FirstVNF_RAM ) + FirstVNF_RAM ) ) ) / DDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / Min( RRSe ,Max( ( ( ( CS / MUR ) - ( ( RCSe / ( RMSe * MUM ) ) * ( ( RRSe / MLU ) / DS ) ) ) * CS ),MLU ) ) )", "obj1": 0.22709163346613545, "obj2": 0.6521978770656565}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ) ),FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( Min( MUR ,RRSe ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MUR ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.9063745019920318, "obj2": 0.03815697912990519}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.3565737051792829, "obj2": 0.4989383799572193}, {"determining": "( Min( BR ,MRS ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5896414342629482, "obj2": 0.23828956368240106}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * FirstVNF_RAM ) - Min( Max( ( ( ( BR / ARS ) / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( Min( RMSe ,( DS / MUC ) ) * CS ) - Min( MUC ,MUM ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * Min( ( ( CS + RCSe ) * MLU ) ,MUM ) )", "obj1": 0.7589641434262948, "obj2": 0.10723191738369106}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( MUC * CS ) ) ,( DS / MUC ) ) * CS ) ,( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) )", "obj1": 0.9362549800796812, "obj2": 0.0238975932461905}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( ( Max( MUR,RMSe ) * MUR ) + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3036766807464865}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( Max( FirstVNF_CPU,CRS ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( AMS / FirstVNF_Mem ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( MUR - MUC ) * MUR ) * ( MUM + ( ( MUM + ( ( MUM / MLU ) / ( ( CS - ( RCSe + RMSe ) ) + RCSe ) ) ) / RRSe ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5271054640055856}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) + FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,Max( MLU,( ( MUM + MUR ) + RMSe ) ) ) ,( MLU - ( CS + CS ) ) )", "obj1": 0.4342629482071713, "obj2": 0.41171530134008183}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( FirstVNF_CPU_Server * ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - Min( MRS ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( ( DS - ( RMSe / RCSe ) ),MUC ) ,( Min( ( ( MUR / Max( MUM,( DS - MUC ) ) ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) )", "obj1": 0.6095617529880478, "obj2": 0.23179887950887956}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( ( FirstVNF_Mem / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUC * ( MUC / MUM ) ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5431412986547713}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( DS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2729083665338645, "obj2": 0.5899314694549}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Min( AMS ,ARS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / ( ( ( PN + PN ) * AMS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe + MUR ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012384499821646439}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.4568124147670788}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / MDR ) ) ) ,MDR ) + ARS ) )", "choosing": "( Min( DS ,( CS / MUM ) ) * ( CS * Min( Min( ( RRSe + Min( MUC ,( ( RRSe / MUR ) * RRSe ) ) ) ,( RRSe - ( Min( DS ,( CS / MUM ) ) + RRSe ) ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7788163960934814}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,PN ),ACS ) - Max( AMS,( FirstVNF_CPU_Server * ( ( RRS - CRS ) - Min( MRS ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( ( DS - ( RCSe / ( RCSe * Max( RRSe,Min( DS ,( RCSe * MLU ) ) ) ) ) ),MUC ) ,( Min( ( ( MUR / DS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) )", "obj1": 0.48804780876494025, "obj2": 0.3179377612396686}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * ( ( FirstVNF_CPU + AMS ) - ( ACS / ( MRS / ( ( ACS - PN ) / FirstVNF_CPU_Server ) ) ) ) ) - Min( Max( MDR,( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( Min( ( ( Min( RRSe ,MLU ) - RCSe ) / MUM ) ,CS ) / CS ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8067729083665338, "obj2": 0.07148764341413481}, {"determining": "( ( ( ( AMS + PN ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( RRS / Min( ( ARS - ARS ) ,( ACS * ARS ) ) ) / MDR ) / PN ) ) ) - ( ARS / RRS ) )", "choosing": "( ( ( Min( ( CS - Min( ( ( MUM / MUC ) / Min( RCSe ,MLU ) ) ,Max( ( CS * CS ),( MUC * RRSe ) ) ) ) ,RRSe ) * Min( RCSe ,RMSe ) ) + DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.38247011952191234, "obj2": 0.4702673816605558}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Max( FirstVNF_Mem,ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3433234881376567}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.703187250996016, "obj2": 0.16540573265628797}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3386454183266932, "obj2": 0.515605742972441}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( ( RRSe * ( Min( RRSe ,CS ) / MUR ) ) * Max( MUC,MLU ) ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.6434262948207171, "obj2": 0.2004457145813}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( CRS ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( Min( ACS ,FirstVNF_RAM_Server ) - ( ( Const * Max( DDR,DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( MUR - ( Max( MUC,MUC ) * ( Min( CS ,MUC ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( ( Min( RMSe ,MUM ) * MUR ) / ( RMSe * RCSe ) ) / ( RMSe + MLU ) ) ) - ( Min( MUR ,Min( Max( DS,DS ) ,( RMSe / ( ( DS * ( MUC / CS ) ) * RMSe ) ) ) ) * ( RCSe + DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5745817791303629}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( ARS ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( BR - PN ) * ( AMS + ACS ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / ( DDR / AMS ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / ( ( RMSe / ( MUM - ( MLU + RMSe ) ) ) - Max( MUC,( RMSe + ( CS - CS ) ) ) ) ) / MLU ) / CS ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.36852589641434264, "obj2": 0.48081127379873817}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,( MRS - FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RCSe + MLU ) / RMSe ) ) ) ,( DS / MUR ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( Min( BR ,MRS ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * MUM ) ) ) * RRSe ) * CS ) )", "obj1": 0.5976095617529881, "obj2": 0.23259871488734823}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,( CS / Min( DS ,CS ) ) ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3292381888009848}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.4708100153196496}, {"determining": "( Max( ( ( Const * Max( ( ( PN + MRS ) + FirstVNF_CPU_Server ),Min( ARS ,FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + Max( MLU,RCSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2649402390438247, "obj2": 0.5956328079740489}, {"determining": "Min( ( Max( ( ( Const * Min( ( ( AMS + MRS ) + FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ,Max( Min( ( RRS + MRS ) ,Max( ( FirstVNF_RAM / FirstVNF_CPU ),DDR ) ),( Max( MDR,FirstVNF_CPU ) / Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "( ( DS / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( MUC ,( Max( ( MLU * RRSe ),MUC ) - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7825020971070662}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2890236900028243}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.50199203187251, "obj2": 0.30045454670501154}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / MDR ) ) ) ,( FirstVNF_RAM * Const ) ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUM ) / Max( ( CS / CS ),MUR ) ) * ( CS * ( MUC - MUM ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6676676244725862}, {"determining": "( Max( DDR,FirstVNF_Mem_Server ) * ( ACS * FirstVNF_Mem ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( CS / Min( ( CS * MUC ) ,( MUM / ( MUM / DS ) ) ) ) ) ) ,( Max( MUM,Max( CS,RCSe ) ) + MLU ) ) - Max( ( ( MLU * CS ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06714585292492171}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2005708750826262}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) ) / MDR ),( AMS / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7291230269706332}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5378486055776892, "obj2": 0.282946694206645}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( Min( RMSe ,( DS / MUC ) ) * CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 0.7609561752988048, "obj2": 0.09710829689191737}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ,MDR ) ) / ( ARS / MRS ) ) - ( Max( AMS,PN ) + BR ) )", "choosing": "Min( ( MUM + RCSe ) ,( RRSe / ( CS + ( MUR * ( ( ( ( RMSe + CS ) + ( RCSe / RRSe ) ) * DS ) * Min( MUC ,MUC ) ) ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.18823608399722785}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.952191235059761, "obj2": 0.01768192728478944}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( Max( MUM,( MUC * ( MUC / MUM ) ) ),RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.398406374501992, "obj2": 0.43598802185822005}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - Max( MRS,RRS ) )", "choosing": "( Min( ( Max( MLU,RMSe ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( DS - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5637450199203188, "obj2": 0.25988793439596786}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.952191235059761, "obj2": 0.01768192728478944}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5398406374501992, "obj2": 0.27031391015631523}, {"determining": "( Max( ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ),ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( Max( MUC,RCSe ) * MUC ) ,MUM ) ) ,DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5260278866108081}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( MRS / ACS ) - Max( AMS,( ( ( ( ( ARS - FirstVNF_RAM ) * Max( MRS,FirstVNF_RAM ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / ( MUR / Max( MUM,DS ) ) ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( Min( CS ,( RCSe + DS ) ) + MUC ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2645463247866933}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM ,( RRS - FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( ( ( ( MUR + DS ) + RCSe ) + RRSe ) - MUR ) + MUC ) - Max( Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ),( ( MLU / RRSe ) + ( CS - RCSe ) ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07401111337793972}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( DS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24900398406374502, "obj2": 0.6196766134571738}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MUR ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3605577689243028, "obj2": 0.4940796618881244}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_Mem / Const ) ) - ( Max( ACS,DDR ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.2450199203187251, "obj2": 0.6230084576485643}, {"determining": "( Max( Min( Max( ( BR - Min( CRS ,MRS ) ),MDR ) ,Const ),ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( Max( MUC,RCSe ) * CS ) ,MUM ) ) ,DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5111620462037312}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.2051792828685259, "obj2": 0.6683105611262473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Max( AMS,( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( MUM + MLU ) / ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) ) )", "obj1": 0.9760956175298805, "obj2": 0.011283701741745774}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,( Min( Min( MDR ,FirstVNF_CPU ) ,AMS ) + ( Max( ( RRS - ARS ),MDR ) / PN ) ) ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,( ( CS / ( MUC - MUC ) ) + RRSe ) ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6051356260189473}, {"determining": "( Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + FirstVNF_Mem_Server ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( ( MUC * RMSe ) - MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + RRSe ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29387209037931006}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Min( FirstVNF_Mem_Server ,Min( RRS ,RRS ) ) ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS - Min( ( ( ( RCSe * DS ) + MUR ) + MUM ) ,CS ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.39641434262948205, "obj2": 0.44604241802541594}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( MDR / Max( ( ARS - ( FirstVNF_Mem - ( AMS + ACS ) ) ),Max( Const,Const ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * ( ( MUC * CS ) - RRSe ) ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5438247011952191, "obj2": 0.2688572292263483}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( DS ,CS ) ),RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6585762936574975}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4541832669322709, "obj2": 0.35405797435099107}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_Mem / Const ) ) - ( Max( ACS,DDR ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.2450199203187251, "obj2": 0.6230084576485643}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Min( ( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ) / MDR ) ,( ( FirstVNF_Mem / FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( MUM,( MUC * ( MUC / MUM ) ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5431412986547713}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ACS * FirstVNF_CPU_Server ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.9282868525896414, "obj2": 0.026396292757270005}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + ( ( Max( BR,Max( FirstVNF_Mem,Const ) ) - ( FirstVNF_CPU_Server * RRS ) ) - ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) ) )", "choosing": "( Min( ( Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,CS ),( CS + MUC ) ) ) - ( MUR / MUR ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.262401403992354}, {"determining": "( Max( Min( Max( ( BR - Min( CRS ,MRS ) ),MDR ) ,Const ),ACS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "( Min( MUR ,RRSe ) / ( MUC + Min( ( Min( MUR ,RRSe ) / Min( ( Max( MUC,RCSe ) * CS ) ,MUM ) ) ,DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5111620462037312}], "19": [{"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ARS ) * ( BR - PN ) ) / ( Min( AMS ,ARS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / Min( AMS ,FirstVNF_CPU_Server ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,( RRSe / ( MUC + MUM ) ) ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Max( ( BR - FirstVNF_RAM ),Max( Max( ( CRS + PN ),FirstVNF_Mem ),( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ) ) ) ) ) )", "choosing": "( Min( DS ,( MUR / MUM ) ) * ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( ( ( AMS + PN ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( MRS * MDR ) / MDR ) / PN ) ) ) - Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( ( Min( ( ( MUR - ( RRSe - Max( MLU,RCSe ) ) ) * CS ) ,RRSe ) * ( RRSe + Min( DS ,( CS / MUM ) ) ) ) + DS ) * ( Min( MUR ,MUC ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( CS / MUM ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7945760378073738}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.7151394422310757, "obj2": 0.14616606540877503}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( Min( BR ,MRS ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5896414342629482, "obj2": 0.23828956368240106}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( FirstVNF_CPU_Server / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.701195219123506, "obj2": 0.1662188380635019}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - Max( MRS,RRS ) )", "choosing": "( Min( ( Max( MLU,RMSe ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( DS - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5637450199203188, "obj2": 0.25988793439596786}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( CRS ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,PN ),ACS ) - Max( AMS,( FirstVNF_CPU_Server * ( ( RRS - CRS ) - Min( MRS ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( ( DS - ( RCSe / ( RCSe * Max( RRSe,Min( DS ,( RCSe * MLU ) ) ) ) ) ),MUC ) ,( Min( ( ( MUR / DS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) )", "obj1": 0.48804780876494025, "obj2": 0.3179377612396686}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( RMSe + MLU ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.05559467714351128}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6673306772908366, "obj2": 0.18262395703407905}, {"determining": "( ( ( FirstVNF_RAM * RRS ) - FirstVNF_Mem_Server ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,( FirstVNF_Mem - MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RCSe ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( Min( RRSe ,RCSe ) + Max( MLU,RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ACS * FirstVNF_CPU_Server ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.9282868525896414, "obj2": 0.026396292757270005}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server * CRS ) ) + ( Min( MDR ,( Max( MRS,( FirstVNF_CPU + ( ( FirstVNF_CPU * FirstVNF_RAM ) + FirstVNF_RAM ) ) ) / DDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,RRSe ) / Min( RRSe ,Max( ( ( ( CS / MUR ) - ( ( RCSe / ( RMSe * MUM ) ) * ( ( RRSe / MLU ) / DS ) ) ) * CS ),MLU ) ) )", "obj1": 0.22709163346613545, "obj2": 0.6521978770656565}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),MRS ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) ,( DS - CS ) )", "obj1": 0.6175298804780877, "obj2": 0.22128356276553976}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),Min( FirstVNF_CPU ,MDR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( BR * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.750996015936255, "obj2": 0.10888169235901463}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.39641434262948205, "obj2": 0.44604241802541594}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ) ),FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.9103585657370518, "obj2": 0.03654477680865761}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Min( MRS ,ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( Min( ( RRSe - MUC ) ,Min( ( Min( DS ,MUR ) + MUR ) ,Max( RCSe,Min( MUM ,( MLU + CS ) ) ) ) ) * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6371376016670555}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM ,( RRS - FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.7609561752988048, "obj2": 0.09686792576190387}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Min( FirstVNF_Mem_Server ,Min( RRS ,RRS ) ) ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS - Min( ( ( ( RCSe * DS ) + MUR ) + MUM ) ,CS ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,( Min( Min( MDR ,FirstVNF_CPU ) ,AMS ) + ( Max( ( RRS - ARS ),MDR ) / PN ) ) ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,( ( CS / ( MUC - MUC ) ) + RRSe ) ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6051356260189473}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( FirstVNF_CPU_Server * ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - Min( MRS ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( ( DS - ( RMSe / RCSe ) ),MUC ) ,( Min( ( ( MUR / Max( MUM,( DS - MUC ) ) ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) )", "obj1": 0.6095617529880478, "obj2": 0.23179887950887956}, {"determining": "( Max( FirstVNF_CPU,CRS ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( AMS / FirstVNF_Mem ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( MUR - MUC ) * MUR ) * ( MUM + ( ( MUM + ( ( MUM / MLU ) / ( ( CS - ( RCSe + RMSe ) ) + RCSe ) ) ) / RRSe ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5271054640055856}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3292381888009848}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( ARS ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( BR - PN ) * ( AMS + ACS ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / ( DDR / AMS ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / ( ( RMSe / ( MUM - ( MLU + RMSe ) ) ) - Max( MUC,( RMSe + ( CS - CS ) ) ) ) ) / MLU ) / CS ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.36852589641434264, "obj2": 0.48081127379873817}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + MDR ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,Max( RRSe,RMSe ) ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MUR ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3187250996015936, "obj2": 0.542519261481725}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.34860557768924305, "obj2": 0.5062006435405126}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4541832669322709, "obj2": 0.35405797435099107}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_Mem / Const ) ) - ( Max( ACS,DDR ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.24302788844621515, "obj2": 0.6360499412486759}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MRS * CRS ) / MDR ) / FirstVNF_Mem ) / MDR ) / BR ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + Min( Min( ( ( Min( ( RCSe - CS ) ,Max( MUM,MUC ) ) * MUC ) * CS ) ,MLU ) ,Max( ( RCSe - DS ),( MUC - ( RMSe * MLU ) ) ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.46739408719591635}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,( MRS - FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RCSe + MLU ) / RMSe ) ) ) ,( DS / MUR ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( CRS ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Min( AMS ,ARS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / ( ( ( PN + PN ) * AMS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe + MUR ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012384499821646439}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + Max( MLU,RCSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5441853075547047}, {"determining": "( Min( ACS ,FirstVNF_RAM_Server ) - ( ( Const * Max( DDR,DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( MUR - ( Max( MUC,MUC ) * ( Min( CS ,MUC ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( ( Min( RMSe ,MUM ) * MUR ) / ( RMSe * RCSe ) ) / ( RMSe + MLU ) ) ) - ( Min( MUR ,Min( Max( DS,DS ) ,( RMSe / ( ( DS * ( MUC / CS ) ) * RMSe ) ) ) ) * ( RCSe + DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5745817791303629}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( Min( DS ,Min( DS ,CS ) ),RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6585762936574975}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,( CS / Min( DS ,CS ) ) ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3292381888009848}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5378486055776892, "obj2": 0.282946694206645}, {"determining": "( ( ACS - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( Min( ( ( MUR * DS ) + Min( Min( MUR ,( ( MUC * CS ) - ( MUM - DS ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2871328779204516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6673306772908366, "obj2": 0.18262395703407905}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server * PN ) - BR ) ) - Max( AMS,( PN / ( AMS - ( ( ( FirstVNF_CPU_Server / BR ) - ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( Max( RCSe,MUR ) * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( DS ,MUR ) - CS ) ,RRSe ) ) ) ) ,( ( MUR * ( ( ( DS + RCSe ) - ( MLU * ( CS + RMSe ) ) ) - ( ( Max( CS,MUC ) * Max( MUC,MLU ) ) + Max( CS,MUM ) ) ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3433234881376567}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) ,( FirstVNF_RAM + DDR ) ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( Min( MLU ,( ( MLU * MUC ) - MLU ) ) - ( Max( Max( RCSe,MLU ),MUM ) * Min( MUM ,MLU ) ) ) ,RRSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.21115537848605578, "obj2": 0.6621808586526118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Max( AMS,( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.9721115537848606, "obj2": 0.010115362146871134}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,Min( ARS ,AMS ) ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( Max( CS,MLU ) ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.3565737051792829, "obj2": 0.49453757900818446}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2005708750826262}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6274900398406374, "obj2": 0.21572718792745532}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) ) / MDR ),( AMS / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7291230269706332}, {"determining": "( Max( ( ( Const * Max( ( ( PN + MRS ) + FirstVNF_CPU_Server ),Min( ARS ,FirstVNF_RAM ) ) ) * RRS ),Max( MDR,FirstVNF_CPU_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + Max( MLU,RCSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2649402390438247, "obj2": 0.5956328079740489}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( MDR,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.42828685258964144, "obj2": 0.4167999111157307}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( Min( CRS ,MDR ) + ( FirstVNF_CPU_Server + Min( Max( FirstVNF_CPU_Server,PN ) ,MDR ) ) )", "choosing": "( ( ( Min( ( ( MUR * ( ( MUC * MLU ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,( MUR / RCSe ) ) + MUC ) )", "obj1": 0.20318725099601595, "obj2": 0.6673076204196854}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,MDR ) / DDR ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( DDR ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( Min( RRSe ,MUR ) / Max( Max( ( DS * Max( CS,MLU ) ),MUM ),Min( ( Min( DS ,CS ) / Max( ( Min( CS ,CS ) - DS ),RCSe ) ) ,DS ) ) )", "obj1": 0.703187250996016, "obj2": 0.16540573265628797}, {"determining": "( Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + FirstVNF_Mem_Server ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( ( MUC * RMSe ) - MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + RRSe ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29387209037931006}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ACS + ACS ) )", "choosing": "( ( CS * Min( ( MUM + ( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,( MUC * RRSe ) ) ) * ( MLU * RRSe ) )", "obj1": 0.9422310756972112, "obj2": 0.020859440943125154}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MUR ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3645418326693227, "obj2": 0.4914698457458039}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ,MDR ) ) / ( ARS / MRS ) ) - ( Max( AMS,PN ) + BR ) )", "choosing": "Min( ( MUM + RCSe ) ,( RRSe / ( CS + ( MUR * ( ( ( ( RMSe + CS ) + ( RCSe / RRSe ) ) * DS ) * Min( MUC ,MUC ) ) ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.18823608399722785}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU_Server ) ) ) / PN ) ) ) )", "choosing": "( ( DS * MUR ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.9860557768924303, "obj2": 0.005517552702210795}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( AMS / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6726949861468248}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.38645418326693226, "obj2": 0.4568124147670788}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) * ( ( RRS / ( ARS + Max( CRS,RRS ) ) ) - Min( Max( ( BR - Max( DDR,Const ) ),MDR ) ,PN ) ) )", "choosing": "( ( RMSe + MLU ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Min( Min( MUR ,( RRSe - ( ( MLU + MUR ) + Min( MUC ,( DS * MUC ) ) ) ) ) ,( CS + MUC ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.04959162912605421}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.4708100153196496}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + FirstVNF_Mem ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * FirstVNF_RAM ) - Min( Max( ( ( ( BR / ARS ) / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( Min( RMSe ,( DS / MUC ) ) * CS ) - Min( MUC ,MUM ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * Min( ( ( CS + RCSe ) * MLU ) ,MUM ) )", "obj1": 0.7589641434262948, "obj2": 0.10723191738369106}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6294820717131474, "obj2": 0.21006732328732644}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM ,( RRS - ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( ( ( Max( RCSe,RMSe ) + RCSe ) + RRSe ) - MUR ) + MUC ) - Max( Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ),( ( MLU / RRSe ) + ( CS - RCSe ) ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08592363814616659}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( DS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24900398406374502, "obj2": 0.6196766134571738}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) + FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,Max( MLU,( ( MUM + MUR ) + RMSe ) ) ) ,( MLU - ( CS + CS ) ) )", "obj1": 0.4342629482071713, "obj2": 0.41171530134008183}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Max( FirstVNF_Mem,ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3433234881376567}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / FirstVNF_Mem ) / MDR ),( AMS / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6726949861468248}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.952191235059761, "obj2": 0.01768192728478944}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_Mem / Const ) ) - ( Max( ACS,DDR ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.2450199203187251, "obj2": 0.6230084576485643}, {"determining": "( ( Min( MDR ,Min( ( BR - BR ) ,CRS ) ) + FirstVNF_RAM_Server ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "( ( MUM / MUC ) * ( CS * ( Min( RRSe ,Max( MUM,( MUM - DS ) ) ) * RRSe ) ) )", "obj1": 0.5976095617529881, "obj2": 0.23259871488734823}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( Max( MRS,ACS ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( MRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( CS * Min( MUR ,RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Min( Min( MUR ,( Max( MUC,RCSe ) - Max( RCSe,Min( ( CS - RRSe ) ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.06969306757286198}, {"determining": "( ( BR * FirstVNF_CPU_Server ) * ( ( CRS + Min( ACS ,FirstVNF_CPU ) ) - Min( Max( MDR,( BR - PN ) ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( CS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - ( ( RRSe - MLU ) * CS ) )", "obj1": 0.5398406374501992, "obj2": 0.27031391015631523}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( BR ,( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) * FirstVNF_CPU ) ),FirstVNF_RAM ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_RAM + AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( Min( MUR ,RRSe ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MUR ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.9063745019920318, "obj2": 0.03815697912990519}, {"determining": "( ( Max( ( PN / FirstVNF_RAM_Server ),Min( BR ,RRS ) ) / Max( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ACS / DDR ) )", "choosing": "( ( ( Min( ( Min( ( RRSe * RRSe ) ,DS ) - CS ) ,DS ) * Max( RCSe,RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3346613545816733, "obj2": 0.5253005901823018}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.40239043824701193, "obj2": 0.43114251569891304}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( DS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2729083665338645, "obj2": 0.5899314694549}], "20": [{"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( Min( FirstVNF_RAM_Server ,( MRS + Max( RRS,FirstVNF_Mem ) ) ) ,Min( FirstVNF_CPU ,Min( AMS ,( ACS / ( ( AMS / FirstVNF_RAM_Server ) + MRS ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( ( MLU * RMSe ),( CS + MUC ) ) ) - ( RMSe + ( ( ( ( ( RRSe - MLU ) + RRSe ) * Max( CS,( RMSe * DS ) ) ) - ( Min( CS ,RCSe ) + ( MUC - RCSe ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ARS ) * ( BR - PN ) ) / ( Min( AMS ,ARS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / Min( AMS ,FirstVNF_CPU_Server ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,( RRSe / ( MUC + MUM ) ) ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + PN ) ) + ( Min( ( BR * MRS ) ,MDR ) + ARS ) )", "choosing": "( ( CS * ( Min( RRSe ,( RMSe - MUM ) ) * RRSe ) ) * Min( Min( Max( MLU,( DS * RRSe ) ) ,MUM ) ,( CS / MUM ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7988169573869179}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.34860557768924305, "obj2": 0.5062006435405126}, {"determining": "( Min( BR ,MRS ) + ( ( Max( MRS,ACS ) - Max( AMS,( ( PN / FirstVNF_RAM ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RCSe ,( RRSe - ( ( MLU / ( RCSe + MLU ) ) * MUM ) ) ) * RRSe ) * CS ) )", "obj1": 0.5876494023904383, "obj2": 0.25431934899027375}, {"determining": "( ( ( ( ( Max( ( RRS * DDR ),( ( ARS / DDR ) - FirstVNF_Mem_Server ) ) / DDR ) - BR ) + Max( Const,PN ) ) / ( ( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( RRSe,DS ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5379880983438636}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.21912350597609562, "obj2": 0.6474972974135703}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - Max( MRS,RRS ) )", "choosing": "( Min( ( Max( MLU,RMSe ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( DS - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5637450199203188, "obj2": 0.25988793439596786}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,PN ),ACS ) - Max( AMS,( FirstVNF_CPU_Server * ( ( RRS - CRS ) - Min( MRS ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( ( DS - ( RCSe / ( RCSe * Max( RRSe,Min( DS ,( RCSe * MLU ) ) ) ) ) ),MUC ) ,( Min( ( ( MUR / DS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) )", "obj1": 0.48804780876494025, "obj2": 0.3179377612396686}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( RMSe + MLU ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.05559467714351128}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6673306772908366, "obj2": 0.18262395703407905}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( ARS + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( Max( ( ( MLU / RCSe ) - MLU ),MUM ) - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.7151394422310757, "obj2": 0.14616606540877503}, {"determining": "( Max( FirstVNF_CPU,CRS ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( AMS / FirstVNF_Mem ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( MUR - MUC ) * MUR ) * ( MUM + ( ( MUM + ( ( MUM / MLU ) / ( ( CS - ( RCSe + RMSe ) ) + RCSe ) ) ) / RRSe ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5271054640055856}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) ,( FirstVNF_RAM + DDR ) ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( Min( MLU ,( ( MLU * MUC ) - MLU ) ) - ( Max( Max( RCSe,MLU ),MUM ) * Min( MUM ,MLU ) ) ) ,RRSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.21115537848605578, "obj2": 0.6621808586526118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1389042555903861}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM ,( RRS - FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.7609561752988048, "obj2": 0.09686792576190387}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,MDR ) / DDR ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( DDR ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( Min( RRSe ,MUR ) / Max( Max( ( DS * Max( CS,MLU ) ),MUM ),Min( ( Min( DS ,CS ) / Max( ( Min( CS ,CS ) - DS ),RCSe ) ) ,DS ) ) )", "obj1": 0.703187250996016, "obj2": 0.16540573265628797}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6274900398406374, "obj2": 0.21572718792745532}, {"determining": "( Min( ACS ,FirstVNF_RAM_Server ) - ( ( Const * Max( DDR,DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( MUR - ( Max( MUC,MUC ) * ( Min( CS ,MUC ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( ( Min( RMSe ,MUM ) * MUR ) / ( RMSe * RCSe ) ) / ( RMSe + MLU ) ) ) - ( Min( MUR ,Min( Max( DS,DS ) ,( RMSe / ( ( DS * ( MUC / CS ) ) * RMSe ) ) ) ) * ( RCSe + DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5745817791303629}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.547808764940239, "obj2": 0.26090481261737697}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( FirstVNF_CPU_Server / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.701195219123506, "obj2": 0.1662188380635019}, {"determining": "( ( BR * FirstVNF_CPU_Server ) * ( ( CRS + Min( ACS ,FirstVNF_CPU ) ) - Min( Max( MDR,( BR - PN ) ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( CS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - ( ( RRSe - MLU ) * CS ) )", "obj1": 0.5398406374501992, "obj2": 0.27031391015631523}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( RRS + ACS ) ) * PN ) - Min( ( ( ( ( FirstVNF_Mem_Server / ACS ) - Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) - PN ) - MDR ) ,PN ) ) )", "choosing": "Min( ( RMSe * ( MUC + ( ( MUC + DS ) + CS ) ) ) ,( RMSe / MUC ) )", "obj1": 0.6115537848605578, "obj2": 0.21720847494200773}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * PN ) + DDR ) * Const ) ,AMS ) ) - Min( ( PN - BR ) ,Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RMSe ) + Min( DS ,( ( CS + CS ) * MUM ) ) ) ) ) - CS ) )", "obj1": 0.24900398406374502, "obj2": 0.6167174618623271}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ,MDR ) ) / ( ARS / MRS ) ) - ( Max( AMS,PN ) + BR ) )", "choosing": "Min( ( MUM + RCSe ) ,( RRSe / ( CS + ( MUR * ( ( ( ( RMSe + CS ) + ( RCSe / RRSe ) ) * DS ) * Min( MUC ,MUC ) ) ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.18823608399722785}, {"determining": "( ( Max( ( PN / FirstVNF_RAM_Server ),Min( BR ,RRS ) ) / Max( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ACS / DDR ) )", "choosing": "( ( ( Min( ( Min( ( RRSe * RRSe ) ,DS ) - CS ) ,DS ) * Max( RCSe,RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3346613545816733, "obj2": 0.5253005901823018}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3292381888009848}, {"determining": "( ( FirstVNF_Mem - ( Min( FirstVNF_CPU ,CRS ) - FirstVNF_CPU ) ) + ( ( MRS * Min( FirstVNF_CPU ,( AMS + MDR ) ) ) + MDR ) )", "choosing": "( ( ( Max( Min( DS ,Min( ( DS - MUR ) ,CS ) ),RMSe ) * MUR ) / ( Max( CS,CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( CS ,DS ) ) ) ) ,RRSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6833259603092707}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( ( ( MDR / ACS ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) ) * PN ) - Min( PN ,Max( ( BR / CRS ),MDR ) ) ) )", "choosing": "( ( ( DS - MLU ) / ( DS / ( ( RCSe * MUM ) + ( ( ( RMSe + RMSe ) / MUC ) - ( RMSe - CS ) ) ) ) ) - Max( ( ( MLU * MUC ) + Min( RCSe ,CS ) ),Max( Min( MLU ,RMSe ),( MLU + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( ( ( FirstVNF_RAM * RRS ) - FirstVNF_Mem_Server ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,( FirstVNF_Mem - MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RCSe ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( Min( RRSe ,RCSe ) + Max( MLU,RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.24302788844621515, "obj2": 0.6262914111135582}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( FirstVNF_Mem_Server ,( MRS - FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( ( RCSe + MLU ) / RMSe ) ) ) ,( DS / MUR ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( DS ,CS ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.4708100153196496}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5378486055776892, "obj2": 0.282946694206645}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,( Min( Min( MDR ,FirstVNF_CPU ) ,AMS ) + ( Max( ( RRS - ARS ),MDR ) / PN ) ) ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,( ( CS / ( MUC - MUC ) ) + RRSe ) ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6051356260189473}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),Min( FirstVNF_CPU ,MDR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( BR * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7908366533864541, "obj2": 0.07808433314462904}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( CRS ,MRS ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7390438247011952, "obj2": 0.11770530749124827}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( ( ACS / PN ),MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( Min( BR ,MRS ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( Max( ACS,DDR ) + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.6095617529880478, "obj2": 0.23046790265350012}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.40239043824701193, "obj2": 0.43114251569891304}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3292381888009848}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6673306772908366, "obj2": 0.18262395703407905}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Min( FirstVNF_Mem_Server ,Min( RRS ,RRS ) ) ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS - Min( ( ( ( RCSe * DS ) + MUR ) + MUM ) ,CS ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Max( FirstVNF_Mem,ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3433234881376567}, {"determining": "( Min( BR ,MRS ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5896414342629482, "obj2": 0.23828956368240106}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM ,( RRS - ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( ( ( Max( RCSe,RMSe ) + RCSe ) + RRSe ) - MUR ) + MUC ) - Max( Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ),( ( MLU / RRSe ) + ( CS - RCSe ) ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08592363814616659}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) ) / MDR ),( AMS / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7291230269706332}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Min( MRS ,ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( Min( ( RRSe - MUC ) ,Min( ( Min( DS ,MUR ) + MUR ) ,Max( RCSe,Min( MUM ,( MLU + CS ) ) ) ) ) * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6371376016670555}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6371376016670555}, {"determining": "( Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + FirstVNF_Mem_Server ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( ( MUC * RMSe ) - MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + RRSe ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29387209037931006}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM_Server,Min( FirstVNF_CPU ,MDR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( BR * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),( Max( DS,MLU ) / MUM ) ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10673219527123722}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.649402390438247, "obj2": 0.19673804780289358}, {"determining": "( ( ACS - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( Min( ( ( MUR * DS ) + Min( Min( MUR ,( ( MUC * CS ) - ( MUM - DS ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2871328779204516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + AMS ) * ( BR - PN ) ) / ( Min( AMS ,ARS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * Const ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( Min( ( ( DS - Max( ( RCSe + RMSe ),MLU ) ) - CS ) ,RRSe ) ,Max( CS,RCSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.40039840637450197, "obj2": 0.44120624173730516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,Min( DS ,( RMSe / MUM ) ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( Max( MRS,ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_RAM + PN ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( ( MUR * ( Min( RCSe ,Max( MUR,MUR ) ) * Max( CS,MUR ) ) ) * Min( Min( DS ,( RRSe - ( Max( ( CS * RMSe ),RCSe ) + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.8027888446215139, "obj2": 0.07666192053107383}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( ( PN / MDR ) / Min( MDR ,FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,Max( Max( Min( ( DS + RRSe ) ,( MUM - RCSe ) ),Min( MLU ,DS ) ),( Min( DS ,( CS + MUR ) ) / MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3904382470119522, "obj2": 0.4537284047776483}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * RRSe ) * ( CS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) )", "obj1": 0.9561752988047809, "obj2": 0.013774240234796054}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),Min( FirstVNF_CPU ,MDR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( BR * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7470119521912351, "obj2": 0.109780118475102}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( PN,FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MRS * CRS ) / MDR ) / FirstVNF_Mem ) / MDR ) / BR ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + Min( Min( ( ( Min( ( RCSe - CS ) ,Max( MUM,MUC ) ) * MUC ) * CS ) ,MLU ) ,Max( ( RCSe - DS ),( MUC - ( RMSe * MLU ) ) ) ) ) )", "obj1": 0.38247011952191234, "obj2": 0.46739408719591635}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( Max( MRS,ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( MUC * CS ) - RRSe ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.8067729083665338, "obj2": 0.07261285460451701}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) * ( ( RRS / ( ARS + Max( CRS,RRS ) ) ) - Min( Max( ( BR - Max( DDR,Const ) ),MDR ) ,PN ) ) )", "choosing": "( ( RMSe + MLU ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Min( Min( MUR ,( RRSe - ( ( MLU + MUR ) + Min( MUC ,( DS * MUC ) ) ) ) ) ,( CS + MUC ) ) ) )", "obj1": 0.8705179282868526, "obj2": 0.04959162912605421}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( RRS / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( DS * RRSe ) - RMSe ) - CS ) - CS ) ,RRSe ) * Max( RCSe,MUM ) ) * ( ( MUC + Min( MUM ,CS ) ) * RCSe ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3645418326693227, "obj2": 0.4889684213893991}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.8207171314741036, "obj2": 0.06711931618723045}, {"determining": "( Min( CRS ,MDR ) + ( FirstVNF_CPU_Server + Min( Max( FirstVNF_CPU_Server,PN ) ,MDR ) ) )", "choosing": "( ( ( Min( ( ( MUR * ( ( MUC * MLU ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,( MUR / RCSe ) ) + MUC ) )", "obj1": 0.20318725099601595, "obj2": 0.6673076204196854}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.6294820717131474, "obj2": 0.20100800985408962}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ACS * FirstVNF_CPU_Server ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUC ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.9223107569721115, "obj2": 0.03161056687865748}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( FirstVNF_CPU_Server / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.701195219123506, "obj2": 0.1662188380635019}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Min( AMS ,ARS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / ( ( ( PN + PN ) * AMS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe + MUR ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012384499821646439}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) + FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,Max( MLU,( ( MUM + MUR ) + RMSe ) ) ) ,( MLU - ( CS + CS ) ) )", "obj1": 0.4342629482071713, "obj2": 0.41171530134008183}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server * PN ) - BR ) ) - Max( AMS,( PN / ( AMS - ( ( ( FirstVNF_CPU_Server / BR ) - ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( Max( RCSe,MUR ) * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( DS ,MUR ) - CS ) ,RRSe ) ) ) ) ,( ( MUR * ( ( ( DS + RCSe ) - ( MLU * ( CS + RMSe ) ) ) - ( ( Max( CS,MUC ) * Max( MUC,MLU ) ) + Max( CS,MUM ) ) ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3433234881376567}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Max( AMS,( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( Max( ( CRS + PN ),FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( CS * Min( Min( DS ,MLU ) ,RRSe ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.9840637450199203, "obj2": 0.005747770333767957}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,( RRS / BR ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ( CRS / ARS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( ( RMSe - Max( CS,( MUC * CS ) ) ) ,CS ) / Min( ( ( DS * MLU ) / Min( RMSe ,( MUR / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6434262948207171, "obj2": 0.20049261060650944}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( MDR,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( RMSe ,Min( ( RMSe / MUR ) ,( RCSe + Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.42828685258964144, "obj2": 0.4167999111157307}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4541832669322709, "obj2": 0.35405797435099107}, {"determining": "( ( Min( MDR ,Min( ( BR - BR ) ,CRS ) ) + FirstVNF_RAM_Server ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "( ( MUM / MUC ) * ( CS * ( Min( RRSe ,Max( MUM,( MUM - DS ) ) ) * RRSe ) ) )", "obj1": 0.5976095617529881, "obj2": 0.23259871488734823}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( BR / RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( RRS + ACS ) * AMS ) / FirstVNF_Mem ) / MDR ) / Max( BR,RRS ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS - Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( Min( CS ,( RCSe - RCSe ) ) / CS ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ACS + ACS ) )", "choosing": "( ( CS * Min( ( MUM + ( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,( MUC * RRSe ) ) ) * ( MLU * RRSe ) )", "obj1": 0.9422310756972112, "obj2": 0.020859440943125154}], "21": [{"determining": "( Max( MRS,( ( FirstVNF_CPU_Server * PN ) - BR ) ) - Max( AMS,( PN / ( AMS - ( ( ( FirstVNF_CPU_Server / BR ) - ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( Max( RCSe,MUR ) * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( DS ,MUR ) - CS ) ,RRSe ) ) ) ) ,( ( MUR * ( ( ( DS + RCSe ) - ( MLU * ( CS + RMSe ) ) ) - ( ( Max( CS,MUC ) * Max( MUC,MLU ) ) + Max( CS,MUM ) ) ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( Min( FirstVNF_RAM_Server ,( MRS + Max( RRS,FirstVNF_Mem ) ) ) ,Min( FirstVNF_CPU ,Min( AMS ,( ACS / ( ( AMS / FirstVNF_RAM_Server ) + MRS ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( ( MLU * RMSe ),( CS + MUC ) ) ) - ( RMSe + ( ( ( ( ( RRSe - MLU ) + RRSe ) * Max( CS,( RMSe * DS ) ) ) - ( Min( CS ,RCSe ) + ( MUC - RCSe ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + PN ) ) + ( Min( ( BR * MRS ) ,MDR ) + ARS ) )", "choosing": "( ( CS * ( Min( RRSe ,( RMSe - MUM ) ) * RRSe ) ) * Min( Min( Max( MLU,( DS * RRSe ) ) ,MUM ) ,( CS / MUM ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7988169573869179}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6932270916334662, "obj2": 0.17189235562330038}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( ( ( DS * RCSe ) / CS ) ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.3426294820717131, "obj2": 0.5052875946221146}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUC ) )", "obj1": 0.6992031872509961, "obj2": 0.16083373872572843}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.5737051792828686, "obj2": 0.24381420994284195}, {"determining": "( ( ( ( ( Max( ( RRS * DDR ),( ( ARS / DDR ) - FirstVNF_Mem_Server ) ) / DDR ) - BR ) + Max( Const,PN ) ) / ( ( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( RRSe,DS ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5379880983438636}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6653386454183267, "obj2": 0.18165150032899482}, {"determining": "( ( Max( ( PN / FirstVNF_RAM_Server ),Min( BR ,RRS ) ) / Max( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ACS / DDR ) )", "choosing": "( ( ( Min( ( Min( ( RRSe * RRSe ) ,DS ) - CS ) ,DS ) * Max( RCSe,RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3346613545816733, "obj2": 0.5253005901823018}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ACS * FirstVNF_CPU_Server ) * ( BR - CRS ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * ( RRS - ACS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( MUC - ( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * ( RMSe / RCSe ) ) * ( MUM + Min( CS ,RRSe ) ) )", "obj1": 0.9203187250996016, "obj2": 0.032774811925552955}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4760956175298805, "obj2": 0.31577729718438424}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.40239043824701193, "obj2": 0.43114251569891304}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( RRS + MRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / Min( ARS ,AMS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( Min( ( RCSe - MUC ) ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUC ) )", "obj1": 0.19322709163346613, "obj2": 0.6810021293010055}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ACS + ACS ) )", "choosing": "( ( CS * Min( ( MUM + ( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,( MUC * RRSe ) ) ) * ( MLU * RRSe ) )", "obj1": 0.9422310756972112, "obj2": 0.020859440943125154}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.24302788844621515, "obj2": 0.6262914111135582}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( MDR,( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ( Const - ACS ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( Const * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( CS - ( DS - MLU ) ) ,RRSe ) * Max( MUM,( RMSe + Max( MLU,( RCSe * RRSe ) ) ) ) ) * DS ) * ( ( RCSe - MUC ) + MUM ) )", "obj1": 0.4243027888446215, "obj2": 0.405524569893112}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * PN ) + DDR ) * Const ) ,AMS ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( ( CS + CS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2749003984063745, "obj2": 0.6026515750528463}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1389042555903861}, {"determining": "( ( ( FirstVNF_RAM * RRS ) - FirstVNF_Mem_Server ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,( FirstVNF_Mem - MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RCSe ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( Min( RRSe ,RCSe ) + Max( MLU,RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( Max( FirstVNF_CPU,CRS ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( AMS / FirstVNF_Mem ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( MUR - MUC ) * MUR ) * ( MUM + ( ( MUM + ( ( MUM / MLU ) / ( ( CS - ( RCSe + RMSe ) ) + RCSe ) ) ) / RRSe ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5271054640055856}, {"determining": "( Min( ACS ,FirstVNF_RAM_Server ) - ( ( Const * Max( DDR,DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( MUR - ( Max( MUC,MUC ) * ( Min( CS ,MUC ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( ( Min( RMSe ,MUM ) * MUR ) / ( RMSe * RCSe ) ) / ( RMSe + MLU ) ) ) - ( Min( MUR ,Min( Max( DS,DS ) ,( RMSe / ( ( DS * ( MUC / CS ) ) * RMSe ) ) ) ) * ( RCSe + DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5745817791303629}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( ( ACS / PN ),MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( ( RRSe * RRSe ) ,DS ) - CS ) ,DS ) * Max( RCSe,RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.8545816733067729, "obj2": 0.05688658866388393}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * RRSe ) * ( CS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) )", "obj1": 0.9561752988047809, "obj2": 0.013774240234796054}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Min( AMS ,ARS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / ( ( ( PN + PN ) * AMS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe + MUR ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012384499821646439}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - Max( MRS,RRS ) )", "choosing": "( Min( ( Max( MLU,RMSe ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( DS - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5637450199203188, "obj2": 0.25988793439596786}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.6294820717131474, "obj2": 0.20100800985408962}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( ( ( MUR * Min( MUM ,RMSe ) ) / ( RMSe * RCSe ) ) + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6274900398406374, "obj2": 0.21572718792745532}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) ,( FirstVNF_RAM + DDR ) ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( Min( MLU ,( ( MLU * MUC ) - MLU ) ) - ( Max( Max( RCSe,MLU ),MUM ) * Min( MUM ,MLU ) ) ) ,RRSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.21115537848605578, "obj2": 0.6621808586526118}, {"determining": "( ( Max( MRS,( Min( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) ,( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - Min( RRS ,CRS ) ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( MLU * RRSe ) * ( CS + Min( ( MUM + ( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,( ( MLU * ( RCSe / ( MUC + ( MUM - MUC ) ) ) ) - MLU ) ) ) )", "obj1": 0.9302788844621513, "obj2": 0.027277593645403532}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( BR / RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( RRS + ACS ) * AMS ) / FirstVNF_Mem ) / MDR ) / Max( BR,RRS ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS - Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( Min( CS ,( RCSe - RCSe ) ) / CS ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( ( BR + RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( AMS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( RMSe ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),Max( MUR,Max( ( DS * MUC ),( ( DS * DS ) + ( MUC + MUC ) ) ) ) ) ) )", "obj1": 0.35856573705179284, "obj2": 0.49941313990346453}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( RRS + ACS ) ) * PN ) - Min( ( ( ( ( FirstVNF_Mem_Server / ACS ) - Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) - PN ) - MDR ) ,PN ) ) )", "choosing": "Min( ( RMSe * ( MUC + ( ( MUC + DS ) + CS ) ) ) ,( RMSe / MUC ) )", "obj1": 0.6115537848605578, "obj2": 0.21720847494200773}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.649402390438247, "obj2": 0.19481172286884868}, {"determining": "( ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( PN ,Max( ( BR - PN ),Max( MDR,( FirstVNF_RAM - ACS ) ) ) ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),( RMSe * MLU ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.6075697211155379, "obj2": 0.22444913338577493}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,( RRS / BR ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ( CRS / ARS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( ( RMSe - Max( CS,( MUC * CS ) ) ) ,CS ) / Min( ( ( DS * MLU ) / Min( RMSe ,( MUR / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6434262948207171, "obj2": 0.20049261060650944}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.547808764940239, "obj2": 0.26090481261737697}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( FirstVNF_RAM_Server,Min( FirstVNF_CPU ,MDR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( BR * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),( Max( DS,MLU ) / MUM ) ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10673219527123722}, {"determining": "( ( ACS - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( Min( ( ( MUR * DS ) + Min( Min( MUR ,( ( MUC * CS ) - ( MUM - DS ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2871328779204516}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM ,( RRS - FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + Min( Min( ( ( Min( ( RCSe - CS ) ,Max( MUM,MUC ) ) * MUC ) * CS ) ,MLU ) ,Max( ( RCSe - DS ),( MUC - ( RMSe * MLU ) ) ) ) ) )", "obj1": 0.7808764940239044, "obj2": 0.08462848838135076}, {"determining": "( ( ACS * FirstVNF_CPU ) * ( ( CRS * AMS ) * ( RRS / Const ) ) )", "choosing": "( ( ( RMSe - RRSe ) / ( MUR / MLU ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) ) / MDR ),( AMS / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUM / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7291230269706332}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( Max( MRS,ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( MUC * CS ) - RRSe ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.8067729083665338, "obj2": 0.07261285460451701}, {"determining": "( ( Max( ( BR / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( MDR,Min( FirstVNF_Mem_Server ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU_Server * RRS ) / PN ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,( ( CS / ( MUC - MUC ) ) + RRSe ) ) / Max( ( ( MUC - CS ) / RMSe ),( ( ( Max( RCSe,MUR ) / Max( MLU,Max( MLU,RCSe ) ) ) * Max( MUC,RRSe ) ) * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.39243027888446214, "obj2": 0.45347782691731664}, {"determining": "( Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + FirstVNF_Mem_Server ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( ( MUC * RMSe ) - MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + RRSe ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29387209037931006}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ,MDR ) ) / ( ARS / MRS ) ) - ( Max( AMS,PN ) + BR ) )", "choosing": "Min( ( MUM + RCSe ) ,( RRSe / ( CS + ( MUR * ( ( ( ( RMSe + CS ) + ( RCSe / RRSe ) ) * DS ) * Min( MUC ,MUC ) ) ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.18823608399722785}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,Max( ( DS + ( ( CS / MUC ) + MUM ) ),CS ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.9820717131474104, "obj2": 0.006043085524083423}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( RRS + MRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUC ) )", "obj1": 0.20318725099601595, "obj2": 0.6673076204196854}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) * ( ( ( ARS + Max( CRS,RRS ) ) / RRS ) - Min( Max( ( BR - DDR ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( ( CS + CS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.24900398406374502, "obj2": 0.6166246495561035}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( RRSe * MLU ) + Min( CS ,Max( ( ( ( RMSe - MLU ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5398406374501992, "obj2": 0.27031391015631523}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,MDR ) / DDR ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( DDR ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUC ) )", "obj1": 0.2151394422310757, "obj2": 0.6493318909751084}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( MUR ,Max( Max( RRSe,DS ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.7171314741035857, "obj2": 0.1437186008034193}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5378486055776892, "obj2": 0.282946694206645}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( Max( ( CS * RMSe ),RCSe ) + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.3705179282868526, "obj2": 0.47830223726423965}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( Max( MRS,ACS ) - Max( DDR,( PN / ( FirstVNF_Mem - ( Min( Max( MDR,( MRS - MRS ) ) ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( Min( ( MUR * ( CS + RMSe ) ) ,( MUM / ( MUC - MLU ) ) ) ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( MUR + MLU ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( MUM ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + AMS ) * ( BR - PN ) ) / ( Min( AMS ,ARS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * Const ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( Min( ( ( DS - Max( ( RCSe + RMSe ),MLU ) ) - CS ) ,RRSe ) ,Max( CS,RCSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.40039840637450197, "obj2": 0.44120624173730516}, {"determining": "( Min( BR ,MRS ) + ( ( ( MRS - Min( ( ( ACS + MRS ) * ( ARS + Max( ACS,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem ) ) - Max( AMS,( PN / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "( Min( ( MUC - ( Max( ( ( Min( RRSe ,DS ) - MUC ) / MUR ),( RMSe - ( RCSe * ( CS * MLU ) ) ) ) / ( Max( ( ( MUR + MUM ) - MUR ),RMSe ) + RCSe ) ) ) ,RRSe ) * ( ( Max( RRSe,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * MUM ) ) ) * RRSe ) * MLU ) )", "obj1": 0.599601593625498, "obj2": 0.2320585227331531}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( Const,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,( Min( Min( MDR ,FirstVNF_CPU ) ,AMS ) + ( Max( ( RRS - ARS ),MDR ) / PN ) ) ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,( ( CS / ( MUC - MUC ) ) + RRSe ) ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6051356260189473}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Max( FirstVNF_Mem,ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3433234881376567}, {"determining": "( Min( BR ,MRS ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5896414342629482, "obj2": 0.23828956368240106}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( ARS + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( Max( ( ( MLU / RCSe ) - MLU ),MUM ) - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,( Min( Min( MDR ,FirstVNF_CPU ) ,AMS ) + ( Max( ( RRS - ARS ),MDR ) / PN ) ) ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,( ( CS / ( MUC - MUC ) ) + RRSe ) ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.2649402390438247, "obj2": 0.603009930709347}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.7151394422310757, "obj2": 0.14616606540877503}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Min( FirstVNF_Mem_Server ,Min( RRS ,RRS ) ) ,FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS - Min( ( ( ( RCSe * DS ) + MUR ) + MUM ) ,CS ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.7151394422310757, "obj2": 0.14616606540877503}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( RRS / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( DS * RRSe ) - RMSe ) - CS ) - CS ) ,RRSe ) * Max( RCSe,MUM ) ) * ( ( MUC + Min( MUM ,CS ) ) * RCSe ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3645418326693227, "obj2": 0.4889684213893991}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.485070276289569}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Max( FirstVNF_Mem,ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3433234881376567}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.3605577689243028, "obj2": 0.4940796618881244}, {"determining": "( Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + ( DDR * ACS ) ) ) ) * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( ( ( Const - ARS ) / ( MRS * MRS ) ),Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ) ) ) ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MUR ) ) * CS ) ,RRSe ) * Max( ( ( RMSe - CS ) / RCSe ),RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.7649402390438247, "obj2": 0.09454527502722554}, {"determining": "( Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + FirstVNF_Mem_Server ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( RRSe,DS ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.25298804780876494, "obj2": 0.6092082135133011}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3292381888009848}, {"determining": "( ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * PN ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.2250996015936255, "obj2": 0.642458906016813}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.8207171314741036, "obj2": 0.06711931618723045}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Min( MRS ,ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( Min( ( RRSe - MUC ) ,Min( ( Min( DS ,MUR ) + MUR ) ,Max( RCSe,Min( MUM ,( MLU + CS ) ) ) ) ) * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6371376016670555}, {"determining": "( Min( CRS ,MDR ) + ( FirstVNF_CPU_Server + Min( Max( FirstVNF_CPU_Server,PN ) ,MDR ) ) )", "choosing": "( ( ( Min( ( ( MUR * ( ( MUC * MLU ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,( MUR / RCSe ) ) + MUC ) )", "obj1": 0.20318725099601595, "obj2": 0.6673076204196854}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,CS ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.40039840637450197, "obj2": 0.44120624173730516}], "22": [{"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + PN ) ) + ( Min( ( BR * MRS ) ,MDR ) + ARS ) )", "choosing": "( ( CS * ( Min( RRSe ,( RMSe - MUM ) ) * RRSe ) ) * Min( Min( Max( MLU,( DS * RRSe ) ) ,MUM ) ,( CS / MUM ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7988169573869179}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN + ( Min( Max( ( ( DDR / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUR - MUC ) * MUR ) * ( MUM + ( ( MUM + ( ( MUM / MLU ) / ( ( CS - ( RCSe + RMSe ) ) + RCSe ) ) ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server * PN ) - BR ) ) - Max( AMS,( PN / ( AMS - ( ( ( FirstVNF_CPU_Server / BR ) - ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( Max( RCSe,MUR ) * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( DS ,MUR ) - CS ) ,RRSe ) ) ) ) ,( ( MUR * ( ( ( DS + RCSe ) - ( MLU * ( CS + RMSe ) ) ) - ( ( Max( CS,MUC ) * Max( MUC,MLU ) ) + Max( CS,MUM ) ) ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ),( Max( ACS,DDR ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( DS ,MUM ) ,( CS / MUM ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7988169573869179}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( ACS * ( ( PN - BR ) + Max( Const,PN ) ) ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( ( ACS / PN ),MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( CS * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7529880478087649, "obj2": 0.10464498192738174}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6932270916334662, "obj2": 0.17189235562330038}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.5737051792828686, "obj2": 0.24381420994284195}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( ( ( ( Max( ( RRS * DDR ),( ( ARS / DDR ) - FirstVNF_Mem_Server ) ) / DDR ) - BR ) + Max( Const,PN ) ) / ( ( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( RRSe,DS ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5379880983438636}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( ( MLU * RRSe ) + Min( CS ,RCSe ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4703631629097851}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.38645418326693226, "obj2": 0.4488457806582733}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( Max( MRS,ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( MUC * CS ) - RRSe ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.8067729083665338, "obj2": 0.07261285460451701}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Max( ( BR - PN ),MDR ) / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.259624683044015}, {"determining": "( ( ( FirstVNF_RAM * RRS ) - FirstVNF_Mem_Server ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,( FirstVNF_Mem - MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RCSe ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( Min( RRSe ,RCSe ) + Max( MLU,RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( AMS / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3247011952191235, "obj2": 0.5246715458855793}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4760956175298805, "obj2": 0.31577729718438424}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.40239043824701193, "obj2": 0.43114251569891304}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( BR - ACS ) - Min( Max( ( BR - Min( PN ,Max( AMS,MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * Min( Max( ( RCSe / DS ),RRSe ) ,MLU ) ) ) * ( CS * Min( Min( Max( Min( MLU ,( CS + CS ) ),( RCSe + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( RRS + MRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / Min( ARS ,AMS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( Min( ( RCSe - MUC ) ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUC ) )", "obj1": 0.19322709163346613, "obj2": 0.6810021293010055}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * MUM ) ) ) * RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + Min( MRS ,CRS ) ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,RCSe ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.9163346613545816, "obj2": 0.03837930854980226}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,ARS ) ) + ( Min( Max( FirstVNF_RAM,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( ( FirstVNF_Mem / Min( FirstVNF_Mem ,ACS ) ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * ( MLU + DS ) ) ) * ( CS * Min( Min( RRSe ,Max( RRSe,( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( MDR / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( ( ( MUR * Min( ( DS - CS ) ,RMSe ) ) / ( RMSe * RCSe ) ) + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6274900398406374, "obj2": 0.21525774492372035}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,MDR ) / DDR ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( DDR ,AMS ) / ( ( AMS / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUC ) )", "obj1": 0.2151394422310757, "obj2": 0.6493318909751084}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,Const ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MDR + ACS ) ,AMS ) / ( PN / Max( ( ACS * ( Min( FirstVNF_RAM_Server ,ACS ) / MDR ) ),FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MLU ) ) ) ) ) ,( RRSe - ( ( MUC / DS ) + CS ) ) )", "obj1": 0.6653386454183267, "obj2": 0.18165150032899482}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( FirstVNF_Mem_Server - ( RRS * FirstVNF_CPU_Server ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / FirstVNF_Mem ) / MDR ) ) ) ,ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / RRSe ) ) ) ) ) ,MUC ) * CS ) )", "obj1": 0.13745019920318724, "obj2": 0.7432963803407632}, {"determining": "( Min( BR ,MRS ) + ( ( ( MRS - Min( ( ( ACS + MRS ) * ( ARS + Max( ACS,FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem ) ) - Max( AMS,( PN / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "( Min( ( MUC - ( Max( ( ( Min( RRSe ,DS ) - MUC ) / MUR ),( RMSe - ( RCSe * ( CS * MLU ) ) ) ) / ( Max( ( ( MUR + MUM ) - MUR ),RMSe ) + RCSe ) ) ) ,RRSe ) * ( ( Max( RRSe,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * MUM ) ) ) * RRSe ) * MLU ) )", "obj1": 0.599601593625498, "obj2": 0.2320585227331531}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.6294820717131474, "obj2": 0.20100800985408962}, {"determining": "( ( ( CRS - Min( FirstVNF_RAM ,( RRS - FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) * ( ( PN * ( ( ( DDR + Max( PN,MRS ) ) - FirstVNF_CPU ) - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) + ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( FirstVNF_CPU - BR ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / CS ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + Min( RMSe ,( ( Min( ( DS * RCSe ) ,MUM ) / MLU ) - RRSe ) ) ) ) )", "obj1": 0.7888446215139442, "obj2": 0.07941259754818296}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) ,( FirstVNF_RAM + DDR ) ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( Min( MLU ,( ( MLU * MUC ) - MLU ) ) - ( Max( Max( RCSe,MLU ),MUM ) * Min( MUM ,MLU ) ) ) ,RRSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.21115537848605578, "obj2": 0.6621808586526118}, {"determining": "( ( ACS - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( Min( ( ( MUR * DS ) + Min( Min( MUR ,( ( MUC * CS ) - ( MUM - DS ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2871328779204516}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( BR / RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( RRS + ACS ) * AMS ) / FirstVNF_Mem ) / MDR ) / Max( BR,RRS ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS - Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( Min( CS ,( RCSe - RCSe ) ) / CS ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( RRS + ACS ) ) * PN ) - Min( ( ( ( ( FirstVNF_Mem_Server / ACS ) - Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) - PN ) - MDR ) ,PN ) ) )", "choosing": "Min( ( RMSe * ( MUC + ( ( MUC + DS ) + CS ) ) ) ,( RMSe / MUC ) )", "obj1": 0.6115537848605578, "obj2": 0.21720847494200773}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * PN ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.2250996015936255, "obj2": 0.642458906016813}, {"determining": "( Max( MRS,ACS ) - Max( DDR,( PN / ( FirstVNF_Mem - ( Min( Max( MDR,( MRS - MRS ) ) ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( Min( ( MUR * ( CS + RMSe ) ) ,( MUM / ( MUC - MLU ) ) ) ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( MUR + MLU ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( MUM ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( CS * Min( ( MUM + ( RRSe - ( RRSe + Min( MLU ,( RMSe / MUM ) ) ) ) ) ,( ( MLU * MUC ) - MLU ) ) ) * ( MLU * RRSe ) )", "obj1": 0.9302788844621513, "obj2": 0.027240095543223933}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( Max( FirstVNF_CPU,CRS ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( AMS / FirstVNF_Mem ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( MUR - MUC ) * MUR ) * ( MUM + ( ( MUM + ( ( MUM / MLU ) / ( ( CS - ( RCSe + RMSe ) ) + RCSe ) ) ) / RRSe ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5271054640055856}, {"determining": "( ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( PN ,Max( ( BR - PN ),Max( MDR,( FirstVNF_RAM - ACS ) ) ) ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),( RMSe * MLU ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.6075697211155379, "obj2": 0.22444913338577493}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( Max( ( CS * RMSe ),RCSe ) + Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.3705179282868526, "obj2": 0.47830223726423965}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( Const + MDR ) * ( ( ( FirstVNF_RAM + DDR ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( MDR,( BR / FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,RCSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( Max( ( MUM - RCSe ),Max( MUC,( RMSe * DS ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8346613545816733, "obj2": 0.061727902088929934}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.3426294820717131, "obj2": 0.5052875946221146}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,( Min( Min( MDR ,FirstVNF_CPU ) ,AMS ) + ( Max( ( RRS - ARS ),MDR ) / PN ) ) ) ) - ( ( PN - ( BR - PN ) ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ,( ( CS / ( MUC - MUC ) ) + RRSe ) ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.2729083665338645, "obj2": 0.5884087932217074}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem / Const ) ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) - DDR ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * ( ( MUC + Min( MUM ,CS ) ) * RCSe ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.27091633466135456, "obj2": 0.5970001812351069}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,( RRS / BR ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ( CRS / ARS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( ( RMSe - Max( CS,( MUC * CS ) ) ) ,CS ) / Min( ( ( DS * MLU ) / Min( RMSe ,( MUR / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6434262948207171, "obj2": 0.20049261060650944}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3292381888009848}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ,MDR ) ) / ( ARS / MRS ) ) - ( Max( AMS,PN ) + BR ) )", "choosing": "Min( ( MUM + RCSe ) ,( RRSe / ( CS + ( MUR * ( ( ( ( RMSe + CS ) + ( RCSe / RRSe ) ) * DS ) * Min( MUC ,MUC ) ) ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.18823608399722785}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( ( RRSe * RRSe ) ,DS ) - CS ) ,DS ) * Max( RCSe,RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.852589641434263, "obj2": 0.05748965763947205}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Min( AMS ,ARS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / ( ( ( PN + PN ) * AMS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe + MUR ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012384499821646439}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( RRSe * MLU ) + Min( CS ,Max( ( ( ( RMSe - MLU ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5398406374501992, "obj2": 0.27031391015631523}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( MUR * DS ) + Min( Min( MUR ,( ( MUC * CS ) - ( MUM - DS ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.7051792828685259, "obj2": 0.15366333894238127}, {"determining": "( Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + FirstVNF_Mem_Server ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( ( MUC * RMSe ) - MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + RRSe ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29387209037931006}, {"determining": "( Min( CRS ,MDR ) + ( FirstVNF_CPU_Server + Min( Max( FirstVNF_CPU_Server,PN ) ,MDR ) ) )", "choosing": "( ( ( Min( ( ( MUR * ( ( MUC * MLU ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,( MUR / RCSe ) ) + MUC ) )", "obj1": 0.20318725099601595, "obj2": 0.6673076204196854}, {"determining": "( Max( AMS,( PN * ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) * ( Min( BR ,( ( DDR * ( ( AMS / MRS ) / BR ) ) - FirstVNF_Mem_Server ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( Min( CS ,( RRSe * MUC ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.7609561752988048, "obj2": 0.09665065039266586}, {"determining": "( Min( BR ,MRS ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5896414342629482, "obj2": 0.23828956368240106}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( DDR * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * ( ( MUC + Min( MUM ,CS ) ) * RCSe ) ) * ( MUC + MUM ) )", "obj1": 0.34860557768924305, "obj2": 0.5020715899218106}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( ( MDR / ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / Max( PN,BR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Max( Max( ( ( ( MUR - MUM ) / MUR ) - MUM ),( ( CS + Max( ( MUM - DS ),Max( RMSe,MLU ) ) ) * ( RMSe - MLU ) ) ),( Max( MUC,Max( ( RMSe / MUC ),MUC ) ) + ( Max( MLU,( RMSe + RRSe ) ) / ( ( MUM * MUR ) - MUM ) ) ) ) - CS ) )", "obj1": 0.39641434262948205, "obj2": 0.44215026116680434}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( Max( MRS,ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,Min( Min( FirstVNF_Mem_Server ,Min( RRS ,RRS ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( MUC * CS ) - RRSe ) ) ,( DS / Min( ( Min( MUR ,MUR ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.572320835411281}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,( Min( Min( MDR ,FirstVNF_CPU ) ,AMS ) + ( Max( ( RRS - ARS ),MDR ) / PN ) ) ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.28884462151394424, "obj2": 0.576557995541669}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1389042555903861}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( ( ACS / PN ),MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( ( ( DS * RCSe ) / CS ) ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.3426294820717131, "obj2": 0.5052875946221146}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * RRSe ) * ( CS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) )", "obj1": 0.9561752988047809, "obj2": 0.013774240234796054}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( ( Const / FirstVNF_CPU_Server ) - ARS ) * ( RRS + AMS ) )", "choosing": "( ( RMSe - ( Min( RMSe ,( Min( MLU ,MUR ) + RMSe ) ) - ( RCSe - ( DS + MUR ) ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.547808764940239, "obj2": 0.26090481261737697}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( FirstVNF_CPU,Const ) ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,( Min( Min( MDR ,FirstVNF_CPU ) ,AMS ) + ( Max( ( RRS - ARS ),MDR ) / PN ) ) ) ) - ( ( PN - BR ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + ( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) + ( DS * RRSe ) ) ,( ( CS / ( MUC - MUC ) ) + RRSe ) ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.26095617529880477, "obj2": 0.6018935766967434}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( ( BR + RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( AMS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( RMSe ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),Max( MUR,Max( ( DS * MUC ),( ( DS * DS ) + ( MUC + MUC ) ) ) ) ) ) )", "obj1": 0.35856573705179284, "obj2": 0.49941313990346453}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( ( ACS * FirstVNF_CPU ) * ( ( CRS * AMS ) * ( RRS / Const ) ) )", "choosing": "( ( ( RMSe - RRSe ) / ( MUR / MLU ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568001}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * RRSe ) * ( CS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) )", "obj1": 0.9561752988047809, "obj2": 0.013774240234796054}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MRS * AMS ) ,MRS ) / ( ( ( ( ( ARS - PN ) * FirstVNF_Mem ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( ( MLU * ( ( MUM * RCSe ) / MLU ) ) / Max( ( RCSe / RMSe ),( RCSe - CS ) ) ) ,RRSe ) * Max( RCSe,CS ) ) * DS ) * ( ( RRSe / ( ( ( DS + RMSe ) / MUR ) + CS ) ) + MUM ) )", "obj1": 0.4243027888446215, "obj2": 0.405524569893112}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Max( FirstVNF_Mem,ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3433234881376567}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUC ) )", "obj1": 0.6992031872509961, "obj2": 0.16083373872572843}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.8207171314741036, "obj2": 0.06711931618723045}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( ( Const * RRS ) - ( Max( FirstVNF_Mem,ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.545816733067729, "obj2": 0.2674387023961155}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6972111553784861, "obj2": 0.16312772825885563}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Min( MRS ,ARS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( Min( ( RRSe - MUC ) ,Min( ( Min( DS ,MUR ) + MUR ) ,Max( RCSe,Min( MUM ,( MLU + CS ) ) ) ) ) * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6371376016670555}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5378486055776892, "obj2": 0.282946694206645}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( RRS / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( DS * RRSe ) - RMSe ) - CS ) - CS ) ,RRSe ) * Max( RCSe,MUM ) ) * ( ( MUC + Min( MUM ,CS ) ) * RCSe ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3645418326693227, "obj2": 0.4889684213893991}, {"determining": "( ( Max( MRS,( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.6371376016670555}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.485070276289569}], "23": [{"determining": "( Max( MRS,( ( FirstVNF_CPU_Server * PN ) - BR ) ) - Max( AMS,( PN / ( AMS - ( ( ( FirstVNF_CPU_Server / BR ) - ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN + ( Min( Max( ( ( DDR / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUR - MUC ) * MUR ) * ( MUM + ( ( MUM + ( ( MUM / MLU ) / ( ( CS - ( RCSe + RMSe ) ) + RCSe ) ) ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( RRSe,DS ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.25298804780876494, "obj2": 0.6092082135133011}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( Max( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( FirstVNF_CPU,Const ) ) ) + Const ) ) ),Min( FirstVNF_Mem_Server ,Const ) ) - Max( AMS,Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + ( Max( RCSe,MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) + ( DS * RRSe ) ) ,( ( CS / Max( Min( ( CS * CS ) ,DS ),MUC ) ) + RRSe ) ) / Max( ( MUR + Min( ( RCSe + Max( Min( RRSe ,CS ),MLU ) ) ,Max( ( CS / Max( MUM,RCSe ) ),RRSe ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.23904382470119523, "obj2": 0.633157961303621}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.40239043824701193, "obj2": 0.43114251569891304}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Min( AMS ,ARS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / ( ( ( PN + PN ) * AMS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe + MUR ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012384499821646439}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,( RRS / BR ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ( CRS / ARS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( ( RMSe - Max( CS,( MUC * CS ) ) ) ,CS ) / Min( ( ( DS * MLU ) / Min( RMSe ,( MUR / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6434262948207171, "obj2": 0.20049261060650944}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ,MDR ) ) / ( ARS / MRS ) ) - ( Max( AMS,PN ) + BR ) )", "choosing": "Min( ( MUM + RCSe ) ,( RRSe / ( CS + ( MUR * ( ( ( ( RMSe + CS ) + ( RCSe / RRSe ) ) * DS ) * Min( MUC ,MUC ) ) ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.18823608399722785}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( ACS - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( Min( ( ( MUR * DS ) + Min( Min( MUR ,( ( MUC * CS ) - ( MUM - DS ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2871328779204516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( MUR * DS ) + Min( Min( MUR ,( ( MUC * CS ) - ( MUM - DS ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.7051792828685259, "obj2": 0.15366333894238127}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( DDR ,PN ) ) / ( ( Const / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / Max( RRS,PN ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - RMSe ) / ( MUM / RRSe ) ),Max( CS,Min( MUR ,RMSe ) ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( RRSe + Min( ( ( RCSe + RRSe ) - RRSe ) ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.34860557768924305, "obj2": 0.495057225854979}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( AMS,MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( MLU ,( CS + CS ) ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( RRSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7350597609561753, "obj2": 0.11936534333549816}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + Min( MRS ,CRS ) ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,RCSe ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.9163346613545816, "obj2": 0.03837930854980226}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7191235059760956, "obj2": 0.14229566935402663}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / Min( ARS ,AMS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / ( PN / FirstVNF_Mem ) ) ) ) ,MDR ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,AMS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( ( MUM * RRSe ) ,RCSe ) / Min( ( CS / ( RCSe * MUM ) ) ,MUM ) ) ,DS ) ) / Min( MUR ,RRSe ) )", "obj1": 0.6752988047808764, "obj2": 0.17050985539206456}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + ( MUM / RRSe ) ) )", "obj1": 0.9920318725099602, "obj2": 0.003349689091981107}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( ACS * ( ( PN - BR ) + Max( Const,PN ) ) ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( ( ACS / PN ),MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( CS * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7529880478087649, "obj2": 0.10464498192738174}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( MDR / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ( FirstVNF_CPU_Server - BR ) + Max( Const,PN ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( ( ( MUR * Min( ( DS - CS ) ,RMSe ) ) / ( RMSe * RCSe ) ) + Min( DS ,( CS / MUM ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6274900398406374, "obj2": 0.21525774492372035}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + CS ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1389042555903861}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUC ) )", "obj1": 0.9243027888446215, "obj2": 0.02637596782489942}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.6294820717131474, "obj2": 0.20100800985408962}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( RRS / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( DS * RRSe ) - RMSe ) - CS ) - CS ) ,RRSe ) * Max( RCSe,MUM ) ) * ( ( MUC + Min( MUM ,CS ) ) * RCSe ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3645418326693227, "obj2": 0.4889684213893991}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( BR / RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( RRS + ACS ) * AMS ) / FirstVNF_Mem ) / MDR ) / Max( BR,RRS ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS - Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( Min( CS ,( RCSe - RCSe ) ) / CS ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( ( ( ( ( Max( ( RRS * DDR ),( ( ARS / DDR ) - FirstVNF_Mem_Server ) ) / DDR ) - BR ) + Max( Const,PN ) ) / ( ( ( ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) / Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( MDR * RRS ) ) / CRS ) ) - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,Max( MUM,( MUM + ( MLU - ( ( ( MUM + ( MLU / MUC ) ) - DS ) / RRSe ) ) ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5379880983438636}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Max( FirstVNF_Mem,ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.4581673306772908, "obj2": 0.3433234881376567}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.5737051792828686, "obj2": 0.24381420994284195}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( RRS + ACS ) ) * PN ) - Min( ( ( ( ( FirstVNF_Mem_Server / ACS ) - Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) - PN ) - MDR ) ,PN ) ) )", "choosing": "Min( ( RMSe * ( MUC + ( ( MUC + DS ) + CS ) ) ) ,( RMSe / MUC ) )", "obj1": 0.6115537848605578, "obj2": 0.21720847494200773}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.38247011952191234, "obj2": 0.46949181880550916}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( Min( ( CS / MUM ) ,CS ) - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.5677290836653387, "obj2": 0.24581006213983814}, {"determining": "( Max( MRS,ACS ) - Max( DDR,( PN / ( FirstVNF_Mem - ( Min( Max( MDR,( MRS - MRS ) ) ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( Min( ( MUR * ( CS + RMSe ) ) ,( MUM / ( MUC - MLU ) ) ) ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( MUR + MLU ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( MUM ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS + FirstVNF_Mem_Server ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - Min( ( ( Max( MUC,MUR ) / DS ) / CS ) ,RMSe ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4488457806582733}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( Max( FirstVNF_CPU,CRS ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( AMS / FirstVNF_Mem ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( MUR - MUC ) * MUR ) * ( MUM + ( ( MUM + ( ( MUM / MLU ) / ( ( CS - ( RCSe + RMSe ) ) + RCSe ) ) ) / RRSe ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5271054640055856}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.27526713311416934}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( PN / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.33266932270916333, "obj2": 0.5194679967397074}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MRS * AMS ) ,MRS ) / ( ( ( ( ( ARS - PN ) * FirstVNF_Mem ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( ( MLU * ( ( MUM * RCSe ) / MLU ) ) / Max( ( RCSe / RMSe ),( RCSe - CS ) ) ) ,RRSe ) * Max( RCSe,CS ) ) * DS ) * ( ( RRSe / ( ( ( DS + RMSe ) / MUR ) + CS ) ) + MUM ) )", "obj1": 0.4243027888446215, "obj2": 0.405524569893112}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( Max( MRS,ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,Min( Min( FirstVNF_Mem_Server ,Min( RRS ,RRS ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( MUC * CS ) - RRSe ) ) ,( DS / Min( ( Min( MUR ,MUR ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.572320835411281}, {"determining": "( ( ( ( ( Max( ( RRS * DDR ),( ( ARS / DDR ) - FirstVNF_Mem_Server ) ) / DDR ) - BR ) + Max( Const,PN ) ) / ( ( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.6686725218720863}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,( Min( Min( MDR ,FirstVNF_CPU ) ,AMS ) + ( Max( ( RRS - ARS ),MDR ) / PN ) ) ) ) - ( ( PN - ( BR - PN ) ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ,( ( CS / ( MUC - MUC ) ) + RRSe ) ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.2729083665338645, "obj2": 0.5884087932217074}, {"determining": "( Min( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) ,( FirstVNF_RAM + DDR ) ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( Min( MLU ,( ( MLU * MUC ) - MLU ) ) - ( Max( Max( RCSe,MLU ),MUM ) * Min( MUM ,MLU ) ) ) ,RRSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.21115537848605578, "obj2": 0.6621808586526118}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Max( ( BR - PN ),MDR ) / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.259624683044015}, {"determining": "( Min( BR ,MRS ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5896414342629482, "obj2": 0.23828956368240106}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( AMS,MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( MLU ,( CS + CS ) ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( ( RRSe * RRSe ) ,DS ) - CS ) ,DS ) * Max( RCSe,RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.852589641434263, "obj2": 0.05748965763947205}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( RRS + MRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / Min( ARS ,AMS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( Min( ( RCSe - MUC ) ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUC ) )", "obj1": 0.19322709163346613, "obj2": 0.6810021293010055}, {"determining": "( Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + FirstVNF_Mem_Server ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( ( MUC * RMSe ) - MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + RRSe ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29387209037931006}, {"determining": "( ( Max( ( PN / FirstVNF_RAM_Server ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( DDR + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( ( MUR - DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,( MUC + MUM ) ) ) ,DS ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16655544913914605}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( ( RRSe * RRSe ) ,DS ) - CS ) ,DS ) * Max( RCSe,RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.8446215139442231, "obj2": 0.061012956349654646}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( FirstVNF_Mem_Server - ( RRS * FirstVNF_CPU_Server ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / FirstVNF_Mem ) / MDR ) ) ) ,ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / RRSe ) ) ) ) ) ,MUC ) * CS ) )", "obj1": 0.13745019920318724, "obj2": 0.7432963803407632}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( ( BR - FirstVNF_CPU ),Max( Max( Max( ( RRS * Const ),( DDR * BR ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( ( RRSe + MUM ) * Min( DS ,( MUC * CS ) ) ) * DS ) - MUR ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( Min( MUR ,RMSe ) * CS ) ) ) ,RRSe ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5756601174873964}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Max( ( BR - PN ),MDR ) / Min( PN ,Max( AMS,MDR ) ) ) ) )", "choosing": "( Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,Min( Max( ( RCSe / DS ),RRSe ) ,MLU ) ) ),( CS + MUC ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.07585785593854663}, {"determining": "( Min( BR ,RRS ) + ( Min( Max( ( Min( DDR ,Max( FirstVNF_CPU_Server,( RRS - DDR ) ) ) * ( ( MRS + Max( MRS,Const ) ) + ( FirstVNF_CPU + Min( ACS ,RRS ) ) ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + Const ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( ( ( RRSe + MLU ) / RMSe ) / ( Min( RMSe ,MUM ) * ( MLU - RRSe ) ) ) ) ) ,Max( ( DS + ( ( Max( RRSe,RMSe ) / MUC ) + MUM ) ),CS ) ) ) )", "obj1": 0.13346613545816732, "obj2": 0.749456800691774}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) + FirstVNF_Mem ) / AMS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + Max( Const,DDR ) ) )", "choosing": "( ( ( RMSe - ( ( MUM - DS ) - ( DS / MUC ) ) ) / ( MUR * Max( RRSe,RMSe ) ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( MUR + Max( RRSe,MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( PN ,Max( ( BR - PN ),Max( MDR,( FirstVNF_RAM - ACS ) ) ) ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),( RMSe * MLU ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5956175298804781, "obj2": 0.23044420638193555}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * MUM ) ) ) * RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( PN ,Max( ( BR - PN ),Max( MDR,( FirstVNF_RAM - ACS ) ) ) ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),( RMSe * MLU ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.6075697211155379, "obj2": 0.22444913338577493}, {"determining": "( ( ACS * Const ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( ( FirstVNF_RAM / CRS ),FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,RRSe ) ) * CS ) ) ,( ( RMSe + MLU ) / ( CS / ( MUC + Min( RMSe ,( MUM / DS ) ) ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( RCSe ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ACS ,( ( ARS * FirstVNF_RAM ) - MDR ) ) / ( ( ( ( ( ACS + RRS ) + Min( ACS ,FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Max( ( Max( MUR,Max( ( RMSe / MUR ),Max( MUC,MUC ) ) ) * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( MUR / ( DS * MUM ) ) ,DS ) ) ,DS ) ) / Min( MUR ,RRSe ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem - ( Max( FirstVNF_Mem,ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.4641434262948207, "obj2": 0.3364470853058935}, {"determining": "( Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MUR ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.7629482071713147, "obj2": 0.09521899802769906}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + Max( Const,FirstVNF_Mem_Server ) ) * AMS ) * PN ) - Min( Max( ( PN - BR ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( Max( RRSe,( RMSe - CS ) ) / MUC ) - CS ) ,RRSe ) * Max( RCSe,DS ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.547808764940239, "obj2": 0.26090481261737697}, {"determining": "( Min( CRS ,MDR ) + ( FirstVNF_CPU_Server + Min( Max( FirstVNF_CPU_Server,PN ) ,MDR ) ) )", "choosing": "( ( ( Min( ( ( MUR * ( ( MUC * MLU ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,( MUR / RCSe ) ) + MUC ) )", "obj1": 0.20318725099601595, "obj2": 0.6673076204196854}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( Const - Min( PN ,PN ) ),MDR ) ,Const ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( ( Max( Min( MLU ,RMSe ),( CS + MUC ) ) * ( RRSe - ( RRSe + Max( DS,Min( MUC ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7868525896414342, "obj2": 0.08379346868840275}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.37250996015936255, "obj2": 0.4740048038571247}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,ARS ) ) + ( Min( Max( FirstVNF_RAM,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( ( FirstVNF_Mem / Min( FirstVNF_Mem ,ACS ) ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * ( MLU + DS ) ) ) * ( CS * Min( Min( RRSe ,Max( RRSe,( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( AMS / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3247011952191235, "obj2": 0.5246715458855793}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( ( Const * RRS ) - ( Max( FirstVNF_Mem,ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.545816733067729, "obj2": 0.2674387023961155}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,Const ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MDR + ACS ) ,AMS ) / ( PN / Max( ( ACS * ( Min( FirstVNF_RAM_Server ,ACS ) / MDR ) ),FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MLU ) ) ) ) ) ,( RRSe - ( ( MUC / DS ) + CS ) ) )", "obj1": 0.6653386454183267, "obj2": 0.18165150032899482}, {"determining": "( Max( AMS,( PN * ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) * ( Min( BR ,( ( DDR * ( ( AMS / MRS ) / BR ) ) - FirstVNF_Mem_Server ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( Min( CS ,( RRSe * MUC ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.7609561752988048, "obj2": 0.09665065039266586}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( FirstVNF_CPU * ACS ) * ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9322709163346613, "obj2": 0.02253171897946871}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + MRS ) ) + ( DDR * ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ),( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( Max( MUR,( CS * RRSe ) ) + ( RMSe + Min( ( ( RCSe / ( RCSe / MUM ) ) + ( RMSe / CS ) ) ,CS ) ) ) + MUM ) )", "obj1": 0.21314741035856574, "obj2": 0.6538400416063811}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.485070276289569}, {"determining": "( ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * Const ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.21912350597609562, "obj2": 0.6468046896775722}], "24": [{"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( Min( Max( ( BR - PN ),MDR ) ,PN ) - ( CRS + ( ( ( ( ( MDR / ACS ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) * ( PN / ARS ) ) ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( DS,CS ) ) * CS ) ) ,( ( ( CS * MUM ) / MUR ) / ( CS / Min( ( Max( MLU,RMSe ) / MUM ) ,CS ) ) ) ) - Max( ( Min( CS ,RCSe ) + ( MLU * RRSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( ( FirstVNF_CPU_Server * PN ) - BR ) ) - Max( AMS,( PN / ( AMS - ( ( ( FirstVNF_CPU_Server / BR ) - ACS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS + FirstVNF_Mem_Server ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - Min( ( ( Max( MUC,MUR ) / DS ) / CS ) ,RMSe ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4488457806582733}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( ACS * Const ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( ( FirstVNF_RAM / CRS ),FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,RRSe ) ) * CS ) ) ,( ( RMSe + MLU ) / ( CS / ( MUC + Min( RMSe ,( MUM / DS ) ) ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( RCSe ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( MUR * DS ) + Min( Min( MUR ,( ( MUC * CS ) - ( MUM - DS ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.7051792828685259, "obj2": 0.15366333894238127}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( Max( AMS,( PN / ( Min( ( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ) + MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( RRS * Const ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( Const - FirstVNF_RAM ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07419118893884122}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( PN / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( MUC * MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.40239043824701193, "obj2": 0.43114251569891304}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,( RRS / BR ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ( CRS / ARS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( ( RMSe - Max( CS,( MUC * CS ) ) ) ,CS ) / Min( ( ( DS * MLU ) / Min( RMSe ,( MUR / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6434262948207171, "obj2": 0.20049261060650944}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RCSe,CS ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3745019920318725, "obj2": 0.46856039483898015}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),( RMSe * MLU ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.2828291709922406}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( PN / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( Min( Min( MDR ,FirstVNF_CPU ) ,AMS ) + ( Max( ( RRS - ARS ),MDR ) / PN ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( RRSe / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6312375451571995}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( RRSe,DS ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.25298804780876494, "obj2": 0.6092082135133011}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_CPU ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6573705179282868, "obj2": 0.1874509996126204}, {"determining": "( ( ACS * ( ( PN - BR ) + Max( Const,PN ) ) ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( ( ACS / PN ),MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( CS * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7529880478087649, "obj2": 0.10464498192738174}, {"determining": "( Min( FirstVNF_CPU ,Min( CRS ,AMS ) ) + ( Min( Max( Max( ( CRS + ( AMS * FirstVNF_RAM ) ),( ( ( Const * MDR ) * AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RMSe,RRSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( MUC ,RMSe ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) + FirstVNF_Mem ) / AMS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + Max( Const,DDR ) ) )", "choosing": "( ( ( RMSe - ( ( MUM - DS ) - ( DS / MUC ) ) ) / ( MUR * Max( RRSe,RMSe ) ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( MUR + Max( RRSe,MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Min( BR ,MRS ) + ( ( Max( MRS,ACS ) - Max( AMS,( PN / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( RRS - MRS ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5896414342629482, "obj2": 0.23828956368240106}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Min( AMS ,ARS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / ( ( ( PN + PN ) * AMS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe + MUR ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012384499821646439}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.6254980079681275, "obj2": 0.20424401196977202}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( RRS + ACS ) ) * PN ) - Min( ( ( ( ( FirstVNF_Mem_Server / ACS ) - Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) - PN ) - MDR ) ,PN ) ) )", "choosing": "Min( ( RMSe * ( MUC + ( ( MUC + DS ) + CS ) ) ) ,( RMSe / MUC ) )", "obj1": 0.6115537848605578, "obj2": 0.21720847494200773}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( AMS,MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( MLU ,( CS + CS ) ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11564380632533391}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / BR ) ) ) ,( AMS / FirstVNF_Mem ) ) ) + Min( BR ,( ( ( Max( ( MRS - AMS ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + PN ) * FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MLU - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + ( DS + DS ) ) ) ) - CS ) )", "obj1": 0.25697211155378485, "obj2": 0.6021407881938416}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * Const ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.21912350597609562, "obj2": 0.6468046896775722}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( AMS / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3426294820717131, "obj2": 0.5068983114930494}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( ( Const * RRS ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( DS,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.47410358565737054, "obj2": 0.3154245237190065}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( Const - Min( PN ,PN ) ),MDR ) ,Const ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( ( Max( Min( MLU ,RMSe ),( CS + MUC ) ) * ( RRSe - ( RRSe + Max( DS,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04119401551032522}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( ( RMSe + CS ) + ( RCSe / RRSe ) ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08329665386821998}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + ACS ) / DDR ) - BR ) + Max( Const,PN ) ) / ( ( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5379880983438636}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( Max( MRS,ACS ) - Max( DDR,( PN / ( FirstVNF_Mem - ( Min( Max( MDR,( MRS - MRS ) ) ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( Min( ( MUR * ( CS + RMSe ) ) ,( MUM / ( MUC - MLU ) ) ) ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( MUR + MLU ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( MUM ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MRS * AMS ) ,MRS ) / ( ( ( ( ( ARS - PN ) * FirstVNF_Mem ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( ( MLU * ( ( MUM * RCSe ) / MLU ) ) / Max( ( RCSe / RMSe ),( RCSe - CS ) ) ) ,RRSe ) * Max( RCSe,CS ) ) * DS ) * ( ( RRSe / ( ( ( DS + RMSe ) / MUR ) + CS ) ) + MUM ) )", "obj1": 0.4243027888446215, "obj2": 0.405524569893112}, {"determining": "( ( ( ( ( Max( ( RRS * DDR ),( ( ARS / DDR ) - FirstVNF_Mem_Server ) ) / DDR ) - BR ) + Max( Const,PN ) ) / ( ( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.6686725218720863}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) + Const ) ) ) + Min( FirstVNF_Mem_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,Min( ( ( ( FirstVNF_RAM_Server * ACS ) + DDR ) * Const ) ,( Min( Min( MDR ,FirstVNF_CPU ) ,AMS ) + ( Max( ( RRS - ARS ),MDR ) / PN ) ) ) ) - ( ( PN - ( BR - PN ) ) + Max( Const,PN ) ) ) )", "choosing": "Min( ( Min( Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ,( ( CS / ( MUC - MUC ) ) + RRSe ) ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.2729083665338645, "obj2": 0.5884087932217074}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( AMS / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - ( RRSe * MUR ) ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.34860557768924305, "obj2": 0.495057225854979}, {"determining": "( Min( ( CRS - Max( ( FirstVNF_RAM_Server + PN ),Max( MDR,( RRS * PN ) ) ) ) ,MDR ) + ( FirstVNF_CPU_Server + Min( ( FirstVNF_CPU_Server + PN ) ,MDR ) ) )", "choosing": "( ( ( Min( ( ( MUR * ( RMSe - ( MUC * MUC ) ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,( MUR / RCSe ) ) + MUC ) )", "obj1": 0.21115537848605578, "obj2": 0.6580109472482236}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) + Min( ACS ,FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.2290836653386454, "obj2": 0.6402738359344214}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.37250996015936255, "obj2": 0.4740048038571247}, {"determining": "( ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( PN ,Max( ( BR - PN ),Max( MDR,( FirstVNF_RAM - ACS ) ) ) ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),( RMSe * MLU ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5956175298804781, "obj2": 0.2300120466133966}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * Max( MRS,ACS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + MUC ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.13822244958733731}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( AMS / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( MUR * DS ) + Min( Min( MUR ,( ( MUC * CS ) - ( MUM - DS ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5288132666827918}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( MDR / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( DS - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16655544913914605}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( PN ,Max( ( BR - PN ),Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),( Max( ( BR - FirstVNF_CPU ),MDR ) - ACS ) ) ) ) ) )", "choosing": "( Max( MUC,MUM ) - ( Min( ( CS * Min( ( ( MUC / RMSe ) * DS ) ,RMSe ) ) ,( ( Min( RCSe ,MUC ) / ( CS + CS ) ) / ( MUC * CS ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.599601593625498, "obj2": 0.22541158174932546}, {"determining": "( ( ( ( Const + DDR ) - MRS ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( ( ( RRSe - MUC ) + RCSe ) ,DS ) - CS ) ,RRSe ) * Max( ( ( Max( RRSe,CS ) * MUR ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( RRSe / CS ) + MUM ) )", "obj1": 0.3386454183266932, "obj2": 0.5125698194951908}, {"determining": "( Min( CRS ,MDR ) + ( FirstVNF_CPU_Server + Min( Max( FirstVNF_CPU_Server,PN ) ,MDR ) ) )", "choosing": "( ( ( Min( ( ( MUR * ( ( MUC * MLU ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,( MUR / RCSe ) ) + MUC ) )", "obj1": 0.20318725099601595, "obj2": 0.6673076204196854}, {"determining": "( Min( FirstVNF_CPU ,MDR ) + ( Min( Max( FirstVNF_RAM,Max( ( RRS + MRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / Min( ARS ,AMS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( Min( ( RCSe - MUC ) ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUC ) )", "obj1": 0.19322709163346613, "obj2": 0.6810021293010055}, {"determining": "( Max( AMS,( ( ( ( ( FirstVNF_RAM - ARS ) * ( ARS + FirstVNF_Mem_Server ) ) * RRS ) - FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) - Max( FirstVNF_RAM_Server,ACS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( ( MUC * RMSe ) - MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( DS / MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + RRSe ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29387209037931006}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( AMS,MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( MLU ,( CS + CS ) ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( Max( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( FirstVNF_CPU,Const ) ) ) + Const ) ) ),Min( FirstVNF_Mem_Server ,Const ) ) - Max( AMS,Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + ( Max( RCSe,MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) + ( DS * RRSe ) ) ,( ( CS / Max( Min( ( CS * CS ) ,DS ),MUC ) ) + RRSe ) ) / Max( ( MUR + Min( ( RCSe + Max( Min( RRSe ,CS ),MLU ) ) ,Max( ( CS / Max( MUM,RCSe ) ),RRSe ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.23904382470119523, "obj2": 0.633157961303621}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3605577689243028, "obj2": 0.4940796618881244}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( MRS / Const ) * ( ACS * AMS ) )", "choosing": "( ( ( Min( ( ( Max( RRSe,( RMSe - CS ) ) * MUC ) - CS ) ,MLU ) * Max( RCSe,DS ) ) * DS ) * Min( MUC ,RCSe ) )", "obj1": 0.9800796812749004, "obj2": 0.008281638388587607}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( MLU / RCSe ) + RCSe ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,Max( RRSe,RMSe ) ) ) ) ) ,Max( Min( DS ,( MUM + ( CS / MUC ) ) ),CS ) ) ) )", "obj1": 0.6733067729083665, "obj2": 0.17392833429257984}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.42551025279525034}, {"determining": "( ( FirstVNF_Mem_Server - ( RRS * FirstVNF_CPU_Server ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / FirstVNF_Mem ) / MDR ) ) ) ,ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / RRSe ) ) ) ) ) ,MUC ) * CS ) )", "obj1": 0.13346613545816732, "obj2": 0.7451489947089558}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( Min( MLU ,CS ) - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.5637450199203188, "obj2": 0.2515147566931229}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.21918417679833807}, {"determining": "( ( ( ( ( MDR + RRS ) * AMS ) * PN ) - Min( PN ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( DDR + Max( ( FirstVNF_RAM_Server * ( FirstVNF_CPU * Max( MDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / Min( ( CS / MUM ) ,CS ) ) / ( RRSe / CS ) ) ) - Max( ( Max( RMSe,MLU ) / RCSe ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.26776725717166916}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( AMS,MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.7908366533864541, "obj2": 0.08167914551656581}, {"determining": "( Max( AMS,( PN * ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) * ( Min( BR ,( ( DDR * ( ( AMS / MRS ) / BR ) ) - FirstVNF_Mem_Server ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( Min( CS ,( RRSe * MUC ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.7609561752988048, "obj2": 0.09665065039266586}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + MRS ) ) + ( DDR * ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ),( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( Max( MUR,( CS * RRSe ) ) + ( RMSe + Min( ( ( RCSe / ( RCSe / MUM ) ) + ( RMSe / CS ) ) ,CS ) ) ) + MUM ) )", "obj1": 0.21314741035856574, "obj2": 0.6538400416063811}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.27526713311416934}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,Const ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MDR + ACS ) ,AMS ) / ( PN / Max( ( ACS * ( Min( FirstVNF_RAM_Server ,ACS ) / MDR ) ),FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MLU ) ) ) ) ) ,( RRSe - ( ( MUC / DS ) + CS ) ) )", "obj1": 0.6653386454183267, "obj2": 0.18165150032899482}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.33266932270916333, "obj2": 0.5194679967397074}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * MUM ) ) ) * RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MUR ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.7629482071713147, "obj2": 0.09521899802769906}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( BR / RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( RRS + ACS ) * AMS ) / FirstVNF_Mem ) / MDR ) / Max( BR,RRS ) ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS - Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( Min( CS ,( RCSe - RCSe ) ) / CS ) ,MUM ) ) ,DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4188079840560218}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / Min( ARS ,AMS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( Min( ( CS / MUM ) ,CS ) - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.5677290836653387, "obj2": 0.24581006213983814}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Max( ( BR - PN ),MDR ) / Max( BR,Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.259624683044015}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.27526713311416934}, {"determining": "( ( Max( ( PN / FirstVNF_RAM_Server ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( DDR + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( ( MUR - DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,( MUC + MUM ) ) ) ,DS ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16655544913914605}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( FirstVNF_CPU * ACS ) * ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9322709163346613, "obj2": 0.02253171897946871}, {"determining": "( Min( PN ,Min( FirstVNF_Mem_Server ,( RRS / AMS ) ) ) - Max( AMS,( Min( PN ,Max( AMS,MDR ) ) / Max( ( BR - PN ),MDR ) ) ) )", "choosing": "( Max( Min( ( ( DS * Max( RCSe,CS ) ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) - Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( RMSe / ( RRSe + MLU ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.07557761135390781}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4281027490423031}, {"determining": "( ( ACS * ARS ) * ( Max( FirstVNF_CPU,RRS ) - Min( Max( FirstVNF_RAM,AMS ) ,( AMS + ( ( FirstVNF_Mem * Const ) / ACS ) ) ) ) )", "choosing": "( ( MUM * MUC ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.5737051792828686, "obj2": 0.24381420994284195}], "25": [{"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( FirstVNF_CPU * ACS ) * ( ARS * ( FirstVNF_CPU * MRS ) ) ) ) ) - Max( ( MDR + FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( MLU ,( CS + CS ) ),( CS + MUC ) ) ,( MUM - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( Min( Max( ( BR - PN ),MDR ) ,PN ) - ( CRS + ( ( ( ( ( MDR / ACS ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) * ( PN / ARS ) ) ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( DS,CS ) ) * CS ) ) ,( ( ( CS * MUM ) / MUR ) / ( CS / Min( ( Max( MLU,RMSe ) / MUM ) ,CS ) ) ) ) - Max( ( Min( CS ,RCSe ) + ( MLU * RRSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( MUR * ( ( MUC * MLU ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,( MUR / RCSe ) ) + MUC ) )", "obj1": 0.4402390438247012, "obj2": 0.39619875023613454}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( FirstVNF_CPU * ACS ) * ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9322709163346613, "obj2": 0.02253171897946871}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( ( ( ( ( FirstVNF_Mem + ACS ) / DDR ) - BR ) + Max( Const,PN ) ) / ( ( ( Min( ( FirstVNF_RAM_Server / PN ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5379880983438636}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,( RRS / BR ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ( CRS / ARS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( ( RMSe - Max( CS,( MUC * CS ) ) ) ,CS ) / Min( ( ( DS * MLU ) / Min( RMSe ,( MUR / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6434262948207171, "obj2": 0.20049261060650944}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_CPU ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ) ) ,( RRSe - ( CS + CS ) ) )", "obj1": 0.6573705179282868, "obj2": 0.1874509996126204}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( MUR * DS ) + Min( Min( MUR ,( ( MUC * CS ) - ( MUM - DS ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.7051792828685259, "obj2": 0.15366333894238127}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5201218848633449}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( RRS,CRS ) ) - Max( PN,( FirstVNF_Mem_Server - ACS ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( Min( Min( MUC ,RMSe ) ,MLU ) + DS ) ) ) ,( ( RRSe / CS ) / ( CS / ( ( CS / MUM ) + CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8067729083665338, "obj2": 0.07148764341413481}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),( RMSe * MLU ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5219123505976095, "obj2": 0.2828291709922406}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( CRS - FirstVNF_RAM_Server ) - MDR ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,( Min( CS ,RRSe ) + MUC ) ) ) * ( CS + Min( RRSe ,MUC ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( Max( MUC,Max( ( MUC * MUC ),( DS + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + RMSe ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.06236521908263121}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) + FirstVNF_Mem ) / AMS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + Max( Const,DDR ) ) )", "choosing": "( ( ( RMSe - ( ( MUM - DS ) - ( DS / MUC ) ) ) / ( MUR * Max( RRSe,RMSe ) ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( MUR + Max( RRSe,MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( Const - Min( PN ,PN ) ),MDR ) ,Const ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( ( Max( Min( MLU ,RMSe ),( CS + MUC ) ) * ( RRSe - ( RRSe + Max( DS,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04119401551032522}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Const,FirstVNF_CPU ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( DS,RMSe ) * MUR ) ) / RMSe ),Min( MLU ,Min( MUR ,RCSe ) ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4581673306772908, "obj2": 0.3383237301065463}, {"determining": "( ( ACS * Const ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( ( FirstVNF_RAM / CRS ),FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,RRSe ) ) * CS ) ) ,( ( RMSe + MLU ) / ( CS / ( MUC + Min( RMSe ,( MUM / DS ) ) ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( RCSe ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06304702508568}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3605577689243028, "obj2": 0.4940796618881244}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( Min( RCSe ,MUM ) / ( MUR * RCSe ) ) / RMSe ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4592000662892871}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( AMS / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - ( RRSe * MUR ) ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.34860557768924305, "obj2": 0.495057225854979}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( Const / MDR ) / MDR ) / ( AMS / ARS ) ) / Max( DDR,FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( ( CS - Min( MUR ,DS ) ) ,MLU ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * ( DS / ( MUM * Min( CS ,MLU ) ) ) ) * ( ( CS / ( MUC * ( ( ( DS * CS ) + DS ) - DS ) ) ) + MUM ) )", "obj1": 0.4163346613545817, "obj2": 0.40986355531308305}, {"determining": "( Max( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( FirstVNF_CPU,Const ) ) ) + Const ) ) ),Min( FirstVNF_Mem_Server ,Const ) ) - Max( AMS,Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + ( Max( RCSe,MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) + ( DS * RRSe ) ) ,( ( CS / Max( Min( ( CS * CS ) ,DS ),MUC ) ) + RRSe ) ) / Max( ( MUR + Min( ( RCSe + Max( Min( RRSe ,CS ),MLU ) ) ,Max( ( CS / Max( MUM,RCSe ) ),RRSe ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.24900398406374502, "obj2": 0.6289799581588741}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,Const ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MDR + ACS ) ,AMS ) / ( PN / Max( ( ACS * ( Min( FirstVNF_RAM_Server ,ACS ) / MDR ) ),FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MUR ,( RRSe - ( RRSe + Min( DS ,( CS / MLU ) ) ) ) ) ,( RRSe - ( ( MUC / DS ) + CS ) ) )", "obj1": 0.6653386454183267, "obj2": 0.18165150032899482}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.42551025279525034}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( MDR / FirstVNF_Mem ) / MDR ) ) ) ,Const ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( AMS ,Min( ( FirstVNF_CPU_Server / ( ( AMS * DDR ) - Min( PN ,FirstVNF_Mem ) ) ) ,ACS ) ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MUC * Min( CS ,Max( Min( RMSe ,MUR ),RRSe ) ) ) ) ,MUC ) / Max( ( ( CS - MUC ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7191235059760956, "obj2": 0.1422956693540266}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6175298804780877, "obj2": 0.20630239454337954}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS + FirstVNF_Mem_Server ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - Min( ( ( Max( MUC,MUR ) / DS ) / CS ) ,RMSe ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4488457806582733}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( ( RMSe + CS ) + ( RCSe / RRSe ) ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08329665386821998}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( Min( AMS ,ARS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( DDR - Min( CRS ,DDR ) ) / ( ( ( PN + PN ) * AMS ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( DS ,Min( DS ,MUC ) ) - Min( ( Min( RRSe ,RCSe ) * ( MUR + RRSe ) ) ,Min( MUR ,( DS * MUC ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * RMSe ) * ( ( ( ( ( DS + DS ) * MLU ) * Max( Max( RRSe,MUM ),Min( Min( Max( CS,DS ) ,( MUR - DS ) ) ,( RCSe - MUC ) ) ) ) + RRSe ) + ( DS * ( RRSe + MUR ) ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012384499821646439}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( Const - Min( PN ,PN ) ),MDR ) ,Const ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( ( Max( Min( MLU ,Max( RCSe,RMSe ) ),( CS + MUC ) ) * ( RRSe - ( RRSe + Max( DS,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04119401551032522}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ACS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( ( CS + MUC ) / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.7091633466135459, "obj2": 0.14969377044545534}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * MUM ) ) ) * RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + Max( Const,BR ) ) * AMS ) * PN ) - Max( FirstVNF_Mem,Const ) ) )", "choosing": "( ( ( Min( ( ( Max( RRSe,( RMSe - CS ) ) / MUC ) - CS ) ,MLU ) * Max( RCSe,DS ) ) * DS ) * ( ( CS / ( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) + MUM ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( Min( CRS ,MDR ) + ( ( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) ) + Min( Max( FirstVNF_CPU_Server,PN ) ,MDR ) ) )", "choosing": "( ( ( Min( ( ( ( MUC - CS ) / ( MUM / RRSe ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,( MUR / RCSe ) ) + MUC ) )", "obj1": 0.39243027888446214, "obj2": 0.4447792655503121}, {"determining": "( Max( MRS,ACS ) - Max( DDR,( PN / ( FirstVNF_Mem - ( Min( Max( MDR,( MRS - MRS ) ) ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( Min( ( MUR * ( CS + RMSe ) ) ,( MUM / ( MUC - MLU ) ) ) ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( MUR + MLU ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( MUM ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( RRSe,DS ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.25298804780876494, "obj2": 0.6092082135133011}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - PN ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( Min( MLU ,CS ) - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.5637450199203188, "obj2": 0.2515147566931229}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,Min( ( FirstVNF_CPU_Server + RRS ) ,MDR ) ) ) / ( ( Max( FirstVNF_Mem,ACS ) / FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_Mem * MRS ) + MRS ) / FirstVNF_Mem ) / RRS ) / PN ) ) ) )", "choosing": "Min( ( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) ,( RMSe / Max( ( ( RRSe / ( RRSe + MUR ) ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) )", "obj1": 0.398406374501992, "obj2": 0.43598802185822005}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * Max( MRS,ACS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) * MUC ) * Min( RMSe ,( DS / Min( ( CS * MUC ) ,( RMSe - ( CS + MUC ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + ( CS - RCSe ) ),Max( Min( MLU ,Min( MUR ,RCSe ) ),( CS + MUC ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.13822244958733731}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( PN / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RCSe,CS ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3745019920318725, "obj2": 0.46767314616582345}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.37250996015936255, "obj2": 0.4740048038571247}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( RRS + ACS ) ) * PN ) - Min( ( ( ( ( FirstVNF_Mem_Server / ACS ) - Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) - PN ) - MDR ) ,PN ) ) )", "choosing": "Min( ( RMSe * ( MUC + ( ( MUC + DS ) + CS ) ) ) ,( RMSe / MUC ) )", "obj1": 0.6115537848605578, "obj2": 0.21720847494200773}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,MDR ) ) / ( FirstVNF_RAM_Server - CRS ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MDR - ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( RCSe ,RMSe ) ) ,MUM ) ) ,Max( Min( ( CS - Max( MUC,Max( MLU,MUR ) ) ) ,( Min( MUR ,( MUR / RCSe ) ) + Max( DS,( RRSe / MUR ) ) ) ),MUC ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16655544913914605}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( AMS,MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( MLU ,( CS + CS ) ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11564380632533391}, {"determining": "( ( ACS * ARS ) * ( Max( FirstVNF_CPU,RRS ) - Min( Max( FirstVNF_RAM,AMS ) ,( AMS + ( ( FirstVNF_Mem * Const ) / ACS ) ) ) ) )", "choosing": "( ( MUM * MUC ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.5737051792828686, "obj2": 0.24381420994284195}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( AMS * ( FirstVNF_CPU * MDR ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - Min( CS ,RCSe ) ) - CS ) ,RRSe ) * ( ( CS / MUC ) + Max( CS,MLU ) ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6466865093274345}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ACS * ( ( PN - BR ) + Max( Const,PN ) ) ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( ( ACS / PN ),MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( CS * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7529880478087649, "obj2": 0.10464498192738174}, {"determining": "( ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( PN ,Max( ( BR - PN ),Max( MDR,( FirstVNF_RAM - ACS ) ) ) ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),( RMSe * MLU ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5876494023904383, "obj2": 0.23579095390069424}, {"determining": "( ( ACS * ( Const - ( Const / Const ) ) ) * Min( ( ( ( RRS + ACS ) * AMS ) * PN ) ,Min( ( Min( MDR ,ACS ) - AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( Max( Min( FirstVNF_CPU ,CRS ),RRS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - ( MUC - CS ) ) - ( ( ( RMSe / MLU ) - MUC ) - MUM ) ) ,RRSe ) / Max( RCSe,MUC ) ) * DS ) * ( ( CS / RRSe ) + ( ( RCSe / RRSe ) + ( RMSe + CS ) ) ) )", "obj1": 0.750996015936255, "obj2": 0.10791480644878278}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MLU - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + ( DS + DS ) ) ) ) - CS ) )", "obj1": 0.6274900398406374, "obj2": 0.2018615279850833}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( Max( ( FirstVNF_CPU_Server * Max( ARS,( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( FirstVNF_Mem * Max( FirstVNF_CPU,Const ) ) ) + Const ) ) ),Min( FirstVNF_Mem_Server ,Const ) ) - Max( AMS,Min( PN ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + ( Max( RCSe,MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) + ( DS * RRSe ) ) ,( ( CS / Max( Min( ( CS * CS ) ,DS ),MUC ) ) + RRSe ) ) / Max( ( MUR + Min( ( RCSe + Max( Min( RRSe ,CS ),MLU ) ) ,Max( ( CS / Max( MUM,RCSe ) ),RRSe ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.23904382470119523, "obj2": 0.633157961303621}, {"determining": "( ( FirstVNF_Mem_Server - ( RRS * FirstVNF_CPU_Server ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) / FirstVNF_Mem ) / MDR ) ) ) ,ACS ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / RRSe ) ) ) ) ) ,MUC ) * CS ) )", "obj1": 0.13346613545816732, "obj2": 0.7451489947089558}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( ( FirstVNF_CPU * MDR ),MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( RMSe ,( CS + CS ) ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7310756972111554, "obj2": 0.12077054298786605}, {"determining": "( Max( AMS,( PN * ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + FirstVNF_RAM_Server ) ) ) * ( Min( BR ,( ( DDR * ( ( AMS / MRS ) / BR ) ) - FirstVNF_Mem_Server ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( Min( CS ,( RRSe * MUC ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.7609561752988048, "obj2": 0.09665065039266586}, {"determining": "( ( ( ( ( MDR + RRS ) * AMS ) * PN ) - Min( PN ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( DDR + Max( ( FirstVNF_RAM_Server * ( FirstVNF_CPU * Max( MDR,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / Min( ( CS / MUM ) ,CS ) ) / ( RRSe / CS ) ) ) - Max( ( Max( RMSe,MLU ) / RCSe ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.26776725717166916}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( MDR / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( DS - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16655544913914605}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.27526713311416934}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( Max( ( AMS - Const ),( RRS + FirstVNF_CPU_Server ) ) / Const ) ) ) ,Min( AMS ,FirstVNF_Mem ) ) ) + Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( CS,( CS / MUM ) ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / ( RRSe + DS ) ) ) ) ) ) - CS ) )", "obj1": 0.25697211155378485, "obj2": 0.6021407881938416}, {"determining": "( ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + FirstVNF_RAM ) * AMS ) * PN ) - Min( PN ,Max( ( BR - PN ),Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ACS ),MDR ) ) ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( MLU - RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),Min( CS ,( RRSe * ( MUM - CS ) ) ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5577689243027888, "obj2": 0.25952763935305245}, {"determining": "( Max( AMS,( PN / ( Min( Max( ( ( MRS / FirstVNF_Mem ) - FirstVNF_CPU ),MDR ) ,PN ) + ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) ) * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( RRS + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MUR ) ) - CS ) ,RRSe ) * Max( ( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ),RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.7629482071713147, "obj2": 0.09485153812369448}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.33266932270916333, "obj2": 0.5194679967397074}, {"determining": "( ( ( ( Const + DDR ) - MRS ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_Mem / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( ( ( RRSe - MUC ) + RCSe ) ,DS ) - CS ) ,RRSe ) * Max( ( ( Max( RRSe,CS ) * MUR ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( RRSe / CS ) + MUM ) )", "obj1": 0.3386454183266932, "obj2": 0.5125698194951908}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + PN ) ) + ( Min( ( BR * MRS ) ,MDR ) + ARS ) )", "choosing": "( ( ( Min( ( Min( MUR ,( ( MLU * MUC ) - MLU ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUC ) )", "obj1": 0.22709163346613545, "obj2": 0.6457076018708502}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.37250996015936255, "obj2": 0.4740048038571247}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) + Min( ACS ,FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.2290836653386454, "obj2": 0.6402738359344214}, {"determining": "( Min( FirstVNF_CPU ,Min( CRS ,AMS ) ) + ( Min( Max( Max( ( CRS + ( AMS * FirstVNF_RAM ) ),( ( ( Const * MDR ) * AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RMSe,RRSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( MUC ,RMSe ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + MRS ) ) + ( DDR * ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ),( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( Max( MUR,( CS * RRSe ) ) + ( RMSe + Min( ( ( RCSe / ( RCSe / MUM ) ) + ( RMSe / CS ) ) ,CS ) ) ) + MUM ) )", "obj1": 0.21314741035856574, "obj2": 0.6538400416063811}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.27526713311416934}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4281027490423031}, {"determining": "( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + AMS ) * ( BR - PN ) ) / ( ( ARS / AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * Const ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) * ( MUR / MUM ) ) * DS ) * ( ( ( RRSe * Min( ( MLU / MUC ) ,Min( MUM ,( MLU * CS ) ) ) ) - RRSe ) + CS ) )", "obj1": 0.23306772908366533, "obj2": 0.63416663104212}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MRS * AMS ) ,MRS ) / ( ( ( ( ( ARS - PN ) * FirstVNF_Mem ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( ( MLU * ( ( MUM * RCSe ) / MLU ) ) / Max( ( RCSe / RMSe ),( RCSe - CS ) ) ) ,RRSe ) * Max( RCSe,CS ) ) * DS ) * ( ( RRSe / ( ( ( DS + RMSe ) / MUR ) + CS ) ) + MUM ) )", "obj1": 0.4243027888446215, "obj2": 0.405524569893112}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( AMS / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3426294820717131, "obj2": 0.5068983114930494}], "26": [{"determining": "( Max( MRS,ACS ) - ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( FirstVNF_CPU * ACS ) * ( ARS * ( FirstVNF_CPU * MRS ) ) ) ) ) - Max( ( MDR + FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( MLU ,( CS + CS ) ),( CS + MUC ) ) ,( MUM - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.4903820097406755}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Min( Max( ( BR - Max( ( Const - PN ),( PN - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) ,( ( CS / MUR ) / ( ( MUM + RCSe ) + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + RRSe ) )", "obj1": 0.5956175298804781, "obj2": 0.2277972236012346}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.33266932270916333, "obj2": 0.5194679967397074}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( FirstVNF_CPU * ACS ) * ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9322709163346613, "obj2": 0.02253171897946871}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( RMSe ,( CS + CS ) ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.1776085094288443}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.44223107569721115, "obj2": 0.39617211208093484}, {"determining": "( ( PN - Min( RRS ,CRS ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( RMSe - ( ( ( DS * RCSe ) - MUM ) - CS ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.48256037552564857}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6115537848605578, "obj2": 0.21127980406264268}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + PN ) ) + ( Min( ( BR * MRS ) ,MDR ) + ARS ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.20717131474103587, "obj2": 0.6698931159812113}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),( ( AMS + ACS ) * ( BR - PN ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,( RRS / BR ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ( CRS / ARS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( ( RMSe - Max( CS,( MUC * CS ) ) ) ,CS ) / Min( ( ( DS * MLU ) / Min( RMSe ,( MUR / MUC ) ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6434262948207171, "obj2": 0.20049261060650944}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( CRS - FirstVNF_RAM_Server ) - MDR ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,( Min( CS ,RRSe ) + MUC ) ) ) * ( CS + Min( RRSe ,MUC ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( Max( MUC,Max( ( MUC * MUC ),( DS + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + RMSe ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.06236521908263121}, {"determining": "( Min( MRS ,MDR ) * ( ( ( ( ACS + ( FirstVNF_CPU_Server * ARS ) ) * AMS ) * PN ) - Min( PN ,Max( ( BR - PN ),( MDR - ( FirstVNF_RAM - ACS ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( RMSe + ( Max( MUC,MLU ) + MUM ) ) ) ,( RMSe / Max( ( ( MUM / RRSe ) / ( RRSe / ( RRSe + MUR ) ) ),Max( CS,MUR ) ) ) )", "obj1": 0.5836653386454184, "obj2": 0.23555917942498755}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) + FirstVNF_Mem ) / AMS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + Max( Const,DDR ) ) )", "choosing": "( ( ( RMSe - ( ( MUM - DS ) - ( DS / MUC ) ) ) / ( MUR * Max( RRSe,RMSe ) ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( MUR + Max( RRSe,MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( Const - Min( PN ,PN ) ),MDR ) ,Const ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( ( Max( Min( MLU ,RMSe ),( CS + MUC ) ) * ( RRSe - ( RRSe + Max( DS,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04119401551032522}, {"determining": "( ( ACS * ( ( FirstVNF_CPU_Server - BR ) + FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( ( AMS + CRS ),MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( ( MUC - RCSe ),( CS / MUM ) ) ) ) ) ,RRSe ) * Min( Min( DS ,MUM ) ,( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) - MLU ) ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + MRS ) ) + ( DDR * ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ),( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( Max( MUR,( CS * RRSe ) ) + ( RMSe + Min( ( ( RCSe / ( RCSe / MUM ) ) + ( RMSe / CS ) ) ,CS ) ) ) + MUM ) )", "obj1": 0.21314741035856574, "obj2": 0.6538400416063811}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.701195219123506, "obj2": 0.16214973925252182}, {"determining": "( Max( MRS,ACS ) - Max( DDR,( PN / ( FirstVNF_Mem - ( Min( Max( MDR,( MRS - MRS ) ) ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( Min( ( MUR * ( CS + RMSe ) ) ,( MUM / ( MUC - MLU ) ) ) ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( MUR + MLU ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( MUM ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( Min( RCSe ,MUM ) / ( MUR * RCSe ) ) / RMSe ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4592000662892871}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( Const / MDR ) / MDR ) / ( AMS / ARS ) ) / Max( DDR,FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( ( CS - Min( MUR ,DS ) ) ,MLU ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * ( DS / ( MUM * Min( CS ,MLU ) ) ) ) * ( ( CS / ( MUC * ( ( ( DS * CS ) + DS ) - DS ) ) ) + MUM ) )", "obj1": 0.4163346613545817, "obj2": 0.40986355531308305}, {"determining": "( ( Max( ( Min( Min( MDR ,ARS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - Max( ( CRS * CRS ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( ( ( ACS * FirstVNF_Mem ) + FirstVNF_RAM_Server ),Min( Min( MDR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) - ACS ) ) )", "choosing": "( Max( Max( MUR,Min( MUC ,( ( Max( Min( RCSe ,CS ),MUC ) / Max( Max( RMSe,RMSe ),RMSe ) ) - CS ) ) ),DS ) * ( ( Min( ( ( ( CS + MUC ) - CS ) - CS ) ,RRSe ) - Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.9661354581673307, "obj2": 0.01201639025653935}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * ( RMSe * MUC ) ) ) * ( CS * Min( Min( RRSe ,( RRSe - Max( Max( Max( RRSe,RMSe ),RCSe ),Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.7908366533864541, "obj2": 0.08198174728556631}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,MDR ) ) / ( FirstVNF_RAM_Server - CRS ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MDR - ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( RCSe ,RMSe ) ) ,MUM ) ) ,Max( Min( ( CS - Max( MUC,Max( MLU,MUR ) ) ) ,( Min( MUR ,( MUR / RCSe ) ) + Max( DS,( RRSe / MUR ) ) ) ),MUC ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16655544913914605}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( ACS / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MRS / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - Max( RMSe,( RCSe - DS ) ) ) - CS ) ,RRSe ) * Max( RMSe,DS ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.1853380654733106}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MLU - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + ( DS + DS ) ) ) ) - CS ) )", "obj1": 0.6274900398406374, "obj2": 0.2018615279850833}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.42551025279525034}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.22111553784860558, "obj2": 0.6367722530523673}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( MDR / FirstVNF_Mem ) / MDR ) ) ) ,Const ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( AMS ,Min( ( FirstVNF_CPU_Server / ( ( AMS * DDR ) - Min( PN ,FirstVNF_Mem ) ) ) ,ACS ) ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MUC * Min( CS ,Max( Min( RMSe ,MUR ),RRSe ) ) ) ) ,MUC ) / Max( ( ( CS - MUC ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7191235059760956, "obj2": 0.1422956693540266}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.7609561752988048, "obj2": 0.09456312018251402}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( MDR / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( DS - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16655544913914605}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS + FirstVNF_Mem_Server ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - Min( ( ( Max( MUC,MUR ) / DS ) / CS ) ,RMSe ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4488457806582733}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( RRSe / CS ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0723723353870541}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( Const - Min( PN ,PN ) ),MDR ) ,Const ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( ( Max( Min( MLU ,Max( RCSe,RMSe ) ),( CS + MUC ) ) * ( RRSe - ( RRSe + Max( DS,MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04119401551032522}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( ACS * ARS ) * ( Max( FirstVNF_CPU,RRS ) - Min( Max( FirstVNF_RAM,AMS ) ,( AMS + ( ( FirstVNF_Mem * Const ) / ACS ) ) ) ) )", "choosing": "( ( MUM * MUC ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.5737051792828686, "obj2": 0.24381420994284195}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( AMS * ( FirstVNF_CPU * MDR ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - Min( CS ,RCSe ) ) - CS ) ,RRSe ) * ( ( CS / MUC ) + Max( CS,MLU ) ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6466865093274345}, {"determining": "( FirstVNF_RAM * ( ( PN * ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * Max( Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM_Server / DDR ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) - Min( Max( ( Const * ( Const / FirstVNF_RAM_Server ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( Min( DS ,( Max( DS,MLU ) / MUM ) ) - CS ) ,RRSe ) * Max( ( RRSe - ( ( MUC - RRSe ) + Min( DS ,( CS / MUR ) ) ) ),RMSe ) ) * DS ) * ( Min( CS ,RRSe ) + MUM ) )", "obj1": 0.7848605577689243, "obj2": 0.08266190195468037}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( Min( CRS ,MDR ) + ( ( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) ) + Min( Max( FirstVNF_CPU_Server,PN ) ,MDR ) ) )", "choosing": "( ( ( Min( ( ( ( MUC - CS ) / ( MUM / RRSe ) ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( Min( CS ,( MUR / RCSe ) ) + MUC ) )", "obj1": 0.39243027888446214, "obj2": 0.4447792655503121}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5201218848633449}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( Min( MDR ,BR ) * AMS ) * PN ) / Min( PN ,Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( CS - Max( MLU,RMSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),( Min( MLU ,RMSe ) + ( CS + MUC ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.26625520151050724}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( AMS / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( RRSe + Min( DS ,( ( MUR + MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2749003984063745, "obj2": 0.5890424491270337}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( PN / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RCSe,CS ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.3745019920318725, "obj2": 0.46767314616582345}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Const,FirstVNF_CPU ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4581673306772908, "obj2": 0.3383237301065463}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( BR - FirstVNF_CPU ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),Min( CS ,( RRSe * MUC ) ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.06854991407996272}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ACS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( ( CS + MUC ) / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.7091633466135459, "obj2": 0.14969377044545534}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) + FirstVNF_Mem ) / AMS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + Max( Const,DDR ) ) )", "choosing": "( ( ( RMSe - ( ( MUM - DS ) - ( DS / MUC ) ) ) / ( MUR * Max( RRSe,RMSe ) ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( MUR + Max( RRSe,MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6242307436531592}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( PN ,Max( ( BR - PN ),Max( MDR,( Max( ( BR - FirstVNF_CPU ),MDR ) - ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5338645418326693, "obj2": 0.27339067358507924}, {"determining": "( ( ACS * ( Const - ( Const / Const ) ) ) * Min( ( ( ( RRS + ACS ) * AMS ) * PN ) ,Min( ( Min( MDR ,ACS ) - AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( Max( Min( FirstVNF_CPU ,CRS ),RRS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - ( MUC - CS ) ) - ( ( ( RMSe / MLU ) - MUC ) - MUM ) ) ,RRSe ) / Max( RCSe,MUC ) ) * DS ) * ( ( CS / RRSe ) + ( ( RCSe / RRSe ) + ( RMSe + CS ) ) ) )", "obj1": 0.750996015936255, "obj2": 0.10791480644878278}, {"determining": "( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + AMS ) * ( BR - PN ) ) / ( ( ARS / AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * Const ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) * ( MUR / MUM ) ) * DS ) * ( ( ( RRSe * Min( ( MLU / MUC ) ,Min( MUM ,( MLU * CS ) ) ) ) - RRSe ) + CS ) )", "obj1": 0.23306772908366533, "obj2": 0.63416663104212}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( MUR * DS ) + Min( Min( MUR ,( ( MUC * CS ) - ( MUM - DS ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.7051792828685259, "obj2": 0.15366333894238127}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( MUR ,Max( Max( RRSe,DS ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.25298804780876494, "obj2": 0.6092082135133011}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),( RMSe * MLU ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8247011952191236, "obj2": 0.06601041546279199}, {"determining": "( ( Min( MRS ,( ( Min( ( PN / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( MUC + MLU ) / MLU ) * MUM ) ) ) * MUM ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) )", "obj1": 0.25697211155378485, "obj2": 0.6021407881938416}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( AMS,MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( MLU ,( CS + CS ) ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11564380632533391}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18387707085239083}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( MDR / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7171314741035857, "obj2": 0.14371860080341936}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * Min( FirstVNF_RAM_Server ,AMS ) ) - Min( Max( ( BR - Max( ( FirstVNF_Mem_Server + PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( ( Min( DS ,Min( DS ,CS ) ) - ( DS - CS ) ) * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS * MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,MUR ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5258964143426295, "obj2": 0.2810530961354835}, {"determining": "( Min( Min( Const ,Const ) ,Max( DDR,ARS ) ) - ( ( ( AMS + FirstVNF_CPU ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( MRS ,MRS ) / ( FirstVNF_Mem_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MUM ) + ( ( ( ( MLU / RCSe ) + ( DS * MLU ) ) + ( RCSe * RCSe ) ) * ( MUC * ( RRSe + Min( RCSe ,RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,( CS / MUM ) ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.398406374501992, "obj2": 0.43598802185822005}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( ( ( MUM + ( Max( RCSe,MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) + ( DS * RRSe ) ) ,( ( CS / Max( Min( ( CS * CS ) ,DS ),MUC ) ) + RRSe ) ) / Max( ( ( MUC * CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.5159362549800797, "obj2": 0.2866931792756098}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / DDR ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) + ( BR - PN ) ) / ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RRSe,Min( Max( ( RRSe / ( DS / RMSe ) ),DS ) ,RRSe ) ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.4758297940888547}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MRS * AMS ) ,MRS ) / ( ( ( ( ( ARS - PN ) * FirstVNF_Mem ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( ( MLU * ( ( MUM * RCSe ) / MLU ) ) / Max( ( RCSe / RMSe ),( RCSe - CS ) ) ) ,RRSe ) * Max( RCSe,CS ) ) * DS ) * ( ( RRSe / ( ( ( DS + RMSe ) / MUR ) + CS ) ) + MUM ) )", "obj1": 0.4243027888446215, "obj2": 0.405524569893112}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( PN - BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( Const - Min( PN ,PN ) ),MDR ) ,Const ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( CS * Min( ( Max( Min( MLU ,Max( RCSe,RMSe ) ),( CS + MUC ) ) * ( RRSe - ( RRSe + Max( Min( MLU ,RMSe ),MUM ) ) ) ) ,RRSe ) ) )", "obj1": 0.9860557768924303, "obj2": 0.005377281313194536}, {"determining": "( ( ACS * ( DDR * ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Min( CRS ,( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) * Max( Min( ( RRS + MRS ) ,( AMS / MRS ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( ( RMSe + CS ) + ( RCSe / RRSe ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.09087609841647787}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( BR ,AMS ) / ( ( ( ( ( RRS / FirstVNF_Mem ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Max( ( ( DS * MUR ) * MUC ),DS ) / ( Max( MUM,( DS * Max( CS,MLU ) ) ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( MUR - RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4281027490423031}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ),MDR ) ,PN ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5318725099601593, "obj2": 0.27562639828290536}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.549800796812749, "obj2": 0.265022291755798}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * Const ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( ( RMSe + CS ) / RRSe ) + MUM ) )", "obj1": 0.2450199203187251, "obj2": 0.6266647882843354}], "27": [{"determining": "( ( Min( MRS ,( ( Min( ( PN / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( MUC + MLU ) / MLU ) * MUM ) ) ) * MUM ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,ACS ) - ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( ( DS * MUC ) * ( Min( MUR ,RRSe ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.33266932270916333, "obj2": 0.5194679967397074}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.44223107569721115, "obj2": 0.39617211208093484}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( CRS - FirstVNF_RAM_Server ) - MDR ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,( Min( CS ,RRSe ) + MUC ) ) ) * ( CS + Min( RRSe ,MUC ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( Max( MUC,Max( ( MUC * MUC ),( DS + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + RMSe ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.06236521908263121}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( RMSe ,( CS + CS ) ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + PN ) ) + ( Min( ( BR * MRS ) ,MDR ) + ARS ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.20717131474103587, "obj2": 0.6698931159812113}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( Max( ( ( FirstVNF_Mem_Server + ACS ) / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( MDR,FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS + MUC ) - CS ) - CS ) ,RRSe ) * Max( RCSe,DS ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.004480423733393665}, {"determining": "( ( ACS * ( Const - ( Const / Const ) ) ) * Min( ( ( ( RRS + ACS ) * AMS ) * PN ) ,Min( ( Min( MDR ,ACS ) - AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( Max( Min( FirstVNF_CPU ,CRS ),RRS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - ( MUC - CS ) ) - ( ( ( RMSe / MLU ) - MUC ) - MUM ) ) ,RRSe ) / Max( RCSe,MUC ) ) * DS ) * ( ( CS / RRSe ) + ( ( RCSe / RRSe ) + ( RMSe + CS ) ) ) )", "obj1": 0.750996015936255, "obj2": 0.10791480644878278}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6115537848605578, "obj2": 0.21127980406264268}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( FirstVNF_Mem_Server + PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * ( RMSe * MUC ) ) ) * ( CS * Min( Min( RRSe ,( RRSe - Max( Max( Max( RRSe,RMSe ),RCSe ),Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.6354581673306773, "obj2": 0.1993716123404365}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( Const * ( PN / ( Max( BR,Min( FirstVNF_Mem_Server ,ACS ) ) * FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN / MDR ) / MDR ) ) / DDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.4903820097406755}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( MRS * Min( PN ,Min( RRS ,( ( MRS * CRS ) / Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ,MDR ),FirstVNF_CPU ) ) ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( PN / MDR ) + MDR ) ) ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( ( RMSe * ( MLU / MUM ) ) + ( MUM + ( RMSe - RRSe ) ) ) + ( MUC - MUM ) ),RMSe ) )", "obj1": 0.8585657370517928, "obj2": 0.05401227883257702}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( ACS / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MRS / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - Max( RMSe,( RCSe - DS ) ) ) - CS ) ,RRSe ) * Max( RMSe,DS ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.1853380654733106}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6479304670696957}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.7609561752988048, "obj2": 0.09456312018251402}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3466135458167331, "obj2": 0.485361063444162}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) )", "obj1": 0.5976095617529881, "obj2": 0.2265357127498113}, {"determining": "( ( Max( ( Min( Min( MDR ,ARS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - Max( ( CRS * CRS ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( ( ( ACS * FirstVNF_Mem ) + FirstVNF_RAM_Server ),Min( Min( MDR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) - ACS ) ) )", "choosing": "( Max( Max( MUR,Min( MUC ,( ( Max( Min( RCSe ,CS ),MUC ) / Max( Max( RMSe,RMSe ),RMSe ) ) - CS ) ) ),DS ) * ( ( Min( ( ( ( CS + MUC ) - CS ) - CS ) ,RRSe ) - Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.9661354581673307, "obj2": 0.01201639025653935}, {"determining": "( ( ACS * ( DDR * ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Min( CRS ,( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) * Max( Min( ( RRS + PN ) ,( AMS / MRS ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) * ( ( CS / RRSe ) + ( ( RMSe + CS ) + ( RCSe / RRSe ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11392446613030448}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( Min( RCSe ,MUM ) / ( MUR * RCSe ) ) / RMSe ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4592000662892871}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,MDR ) ) / ( FirstVNF_RAM_Server - CRS ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( MDR - ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( RCSe ,RMSe ) ) ,MUM ) ) ,Max( Min( ( CS - Max( MUC,Max( MLU,MUR ) ) ) ,( Min( MUR ,( MUR / RCSe ) ) + Max( DS,( RRSe / MUR ) ) ) ),MUC ) ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16655544913914605}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) )", "obj1": 0.25697211155378485, "obj2": 0.6021407881938416}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Min( Max( ( BR - Max( ( Const - PN ),( PN - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) ,( ( CS / MUR ) / ( ( MUM + RCSe ) + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + RRSe ) )", "obj1": 0.5617529880478087, "obj2": 0.24838630548302096}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ) - ( ( ( ( AMS * RRS ) + DDR ) * ( BR - PN ) ) / Min( ( ( ( ( ( RRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ,Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) * DS ) * ( ( Min( RMSe ,RMSe ) + DS ) + Min( DS ,Max( ( MUM * RRSe ),RRSe ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.1776085094288443}, {"determining": "( ( PN - Min( RRS ,CRS ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( RMSe - ( ( ( DS * RCSe ) - MUM ) - CS ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.3645418326693227, "obj2": 0.48256037552564857}, {"determining": "( Min( Min( Const ,Const ) ,Max( DDR,ARS ) ) - ( ( ( AMS + FirstVNF_CPU ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( MRS ,MRS ) / ( FirstVNF_Mem_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MUM ) + ( ( ( ( MLU / RCSe ) + ( DS * MLU ) ) + ( RCSe * RCSe ) ) * ( MUC * ( RRSe + Min( RCSe ,RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,( CS / MUM ) ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.398406374501992, "obj2": 0.43598802185822005}, {"determining": "( ( CRS - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Const ) ) - ( ( ( PN + ACS ) * ( ( MRS + FirstVNF_Mem ) - RRS ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,Max( MUC,MUC ) ) ,( Min( RRSe ,Max( MLU,( MUR * RRSe ) ) ) + RCSe ) ) ) + ( ( RMSe + RCSe ) / ( MUR / CS ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23904382470119523, "obj2": 0.624353486133387}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( Const / MDR ) / MDR ) / ( AMS / ARS ) ) / Max( DDR,FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( ( CS - Min( MUR ,DS ) ) ,MLU ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * ( DS / ( MUM * Min( CS ,MLU ) ) ) ) * ( ( CS / ( MUC * ( ( ( DS * CS ) + DS ) - DS ) ) ) + MUM ) )", "obj1": 0.4163346613545817, "obj2": 0.40986355531308305}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( Min( ( Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ARS / AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * Const ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,MUC ) ) ) ,( Min( CS ,RRSe ) / ( RMSe + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( ( RRSe * Min( ( MLU / MUC ) ,Min( MUM ,( MLU * CS ) ) ) ) / RRSe ) + CS ) )", "obj1": 0.24900398406374502, "obj2": 0.6215588486832468}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( ( AMS + ACS ) * ( BR - PN ) ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,Min( ( ( ( CS + MUC ) - CS ) - CS ) ,RRSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5537848605577689, "obj2": 0.2584507368629476}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RCSe,CS ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.37250996015936255, "obj2": 0.46709347420172986}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.42551025279525034}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( ( ARS * MDR ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4760956175298805, "obj2": 0.3161291255273936}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),BR ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * PN ) - Min( Max( ( Const - Min( PN ,PN ) ),MDR ) ,Const ) ) )", "choosing": "( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * ( MUC / CS ) )", "obj1": 0.9243027888446215, "obj2": 0.03313687459881291}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) + FirstVNF_Mem ) / AMS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + Max( Const,DDR ) ) )", "choosing": "( ( ( RMSe - ( ( MUM - DS ) - ( DS / MUC ) ) ) / ( MUR * Max( RRSe,RMSe ) ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( MUR + Max( RRSe,MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS + FirstVNF_Mem_Server ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - Min( ( ( Max( MUC,MUR ) / DS ) / CS ) ,RMSe ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4488457806582733}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7478140204721336}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( BR ,AMS ) / ( ( ( ( ( RRS / FirstVNF_Mem ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Max( ( ( DS * MUR ) * MUC ),DS ) / ( Max( MUM,( DS * Max( CS,MLU ) ) ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( MUR - RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4281027490423031}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( ( DS + ( ( RCSe + DS ) + RCSe ) ),CS ) ) ) )", "obj1": 0.7310756972111554, "obj2": 0.1207976514207398}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - Min( RCSe ,CS ) ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( Max( MUC,RMSe ),DS ) ) - MUC ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.6972111553784861, "obj2": 0.1591057764380924}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.22111553784860558, "obj2": 0.6367722530523673}, {"determining": "( Min( MRS ,MDR ) * ( ( ( ( ACS + ( FirstVNF_CPU_Server * ARS ) ) * AMS ) * PN ) - Min( PN ,Max( ( BR - PN ),( MDR - ( FirstVNF_RAM - ACS ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( RMSe + ( Max( MUC,MLU ) + MUM ) ) ) ,( RMSe / Max( ( ( MUM / RRSe ) / ( RRSe / ( RRSe + MUR ) ) ),Max( CS,MUR ) ) ) )", "obj1": 0.5836653386454184, "obj2": 0.23555917942498755}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( ( ( MUM + ( Max( RCSe,MUC ) * ( Min( CS ,RCSe ) / RMSe ) ) ) + ( DS * RRSe ) ) ,( ( CS / Max( Min( ( CS * CS ) ,DS ),MUC ) ) + RRSe ) ) / Max( ( ( MUC * CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,MUM ) ) ) ) - CS ) )", "obj1": 0.5159362549800797, "obj2": 0.2866931792756098}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.6215139442231076, "obj2": 0.21117783545968893}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5201218848633449}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( ( FirstVNF_RAM - ARS ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( ( MUM + RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4581673306772908, "obj2": 0.3382620536836237}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( Max( MRS,ACS ) - Max( DDR,( PN / ( FirstVNF_Mem - ( Min( Max( MDR,( MRS - MRS ) ) ,CRS ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( Min( ( MUR * ( CS + RMSe ) ) ,( MUM / ( MUC - MLU ) ) ) ,( Max( MUC,RCSe ) * ( Min( CS ,RCSe ) / RMSe ) ) ) ,( MUR + MLU ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( MUM ,( RCSe + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2925529673825601}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * Min( FirstVNF_RAM_Server ,AMS ) ) - Min( Max( ( BR - Max( ( FirstVNF_Mem_Server + PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( ( Min( DS ,Min( DS ,CS ) ) - ( DS - CS ) ) * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS * MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,MUR ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5258964143426295, "obj2": 0.2810530961354835}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / DDR ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) + ( BR - PN ) ) / ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RRSe,Min( Max( ( RRSe / ( DS / RMSe ) ),DS ) ,RRSe ) ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.4758297940888547}, {"determining": "( ( ACS * ( DDR * ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Min( CRS ,( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) * Max( Min( ( RRS + MRS ) ,( AMS / MRS ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7908366533864541, "obj2": 0.07828721911449953}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( MDR / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS * FirstVNF_CPU_Server ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( ( DS - CS ) ,RRSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( RCSe * RMSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16655544913914605}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),( FirstVNF_CPU_Server + PN ) ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( MUC * RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( RCSe - ( ( CS / CS ) / RCSe ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.50199203187251, "obj2": 0.29716455333759095}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( PN / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,FirstVNF_CPU ) + ( Min( Max( ( FirstVNF_RAM_Server / PN ),Min( ACS ,RRS ) ) ,RRS ) + ( RRS + ARS ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( Max( RCSe,RMSe ) / Max( ( ( MUC - CS ) / RMSe ),( MUR + Max( RRSe,MUM ) ) ) ) )", "obj1": 0.2749003984063745, "obj2": 0.5865405466947315}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ),MDR ) ,PN ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.23989297985441368}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( RRSe / CS ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0723723353870541}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( ARS * ( FirstVNF_CPU * MDR ) ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( BR - FirstVNF_CPU ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),Min( CS ,( RRSe * MUC ) ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) ,( ( CS / MUR ) / ( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9163346613545816, "obj2": 0.03879812757711861}, {"determining": "( ( ACS * ( ( PN - BR ) + FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( ( ACS / PN ),MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + BR ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUC ) ) ) ) * RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( Max( ARS,ARS ) * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU + MDR ) * PN ) - Min( Max( MDR,( Const + Min( PN ,PN ) ) ) ,( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( RMSe - ( ( MUM - ( MUM * RCSe ) ) - CS ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * ( CS * Min( ( Max( Max( Max( Min( DS ,MLU ),Min( MUC ,RMSe ) ),( CS - ( RCSe * MUR ) ) ),( CS + MUC ) ) * ( RRSe - ( RRSe + Max( DS,( DS - DS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.9302788844621513, "obj2": 0.025804456220066028}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( MDR,FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9621513944223108, "obj2": 0.013816109398285833}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( DS,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( Min( RMSe ,DS ) * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7828685258964143, "obj2": 0.08219560791876039}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( BR - FirstVNF_CPU ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( ( MLU * RRSe ) + Min( CS ,Max( ( RMSe / ( MUC - CS ) ),Min( CS ,( RRSe * MUC ) ) ) ) ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8167330677290837, "obj2": 0.0685499140799627}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.549800796812749, "obj2": 0.265022291755798}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18387707085239083}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / AMS ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( BR - PN ) * ( AMS + ACS ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUC / RMSe ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MLU - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + ( DS + DS ) ) ) ) - MUC ) )", "obj1": 0.6274900398406374, "obj2": 0.2018615279850833}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Min( Max( Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( FirstVNF_CPU ,RRS ) ),FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) ,( ( CS / MUR ) / ( ( MUM + RRSe ) + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + RRSe ) )", "obj1": 0.5398406374501992, "obj2": 0.2697429480117527}], "28": [{"determining": "( ( Max( ( Min( Min( MDR ,ACS ) ,AMS ) / ( PN / Max( ( ( PN - FirstVNF_CPU ) * FirstVNF_Mem ),MDR ) ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem + ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem / FirstVNF_Mem ) )", "choosing": "( ( ( Min( ( ( DS - Min( RCSe ,CS ) ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( ( RCSe + DS ),DS ) ) - CS ),RMSe ) ) * DS ) * ( ( RMSe / RRSe ) + ( Min( DS ,( CS / MUM ) ) + ( ( ( Max( ( MLU + RCSe ),( RRSe / MUM ) ) / RCSe ) + Min( Max( Max( MUM,RRSe ),( MUC * MUC ) ) ,( MUC / RCSe ) ) ) - ( RRSe - ( RRSe / DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ( Min( ( PN / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + RRS ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( MUC + MLU ) / MLU ) * MUM ) ) ) * MUM ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.33266932270916333, "obj2": 0.5194679967397074}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( Const * ( PN / ( Max( BR,Min( FirstVNF_Mem_Server ,ACS ) ) * FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN / MDR ) / MDR ) ) / DDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.4903820097406755}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.44223107569721115, "obj2": 0.39617211208093484}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ACS + FirstVNF_Mem_Server ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - Min( ( ( Max( MUC,MUR ) / DS ) / CS ) ,RMSe ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4488457806582733}, {"determining": "( Min( Min( Const ,Const ) ,Max( DDR,ARS ) ) - ( ( ( AMS + FirstVNF_CPU ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( MRS ,MRS ) / ( FirstVNF_Mem_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MUM ) + ( ( ( ( MLU / RCSe ) + ( DS * MLU ) ) + ( RCSe * RCSe ) ) * ( MUC * ( RRSe + Min( RCSe ,RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,( CS / MUM ) ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.398406374501992, "obj2": 0.43598802185822005}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( DDR * Const ) / FirstVNF_RAM_Server ),( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC / ( RRSe * MUR ) ) * ( CS * Min( Min( Max( Min( RMSe ,( CS + CS ) ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( Max( DDR,( AMS * MRS ) ) * ( FirstVNF_CPU_Server * ( ACS + ( FirstVNF_RAM / CRS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Min( RMSe ,( DS / ( ( RMSe - Min( CS ,CS ) ) - ( CS * MUC ) ) ) ) ) * Max( Min( ( ( Min( ( MUC * RCSe ) ,CS ) * CS ) - MUC ) ,RCSe ),DS ) ) - ( RCSe * ( ( ( RCSe / CS ) - RMSe ) / ( ( ( MUC + Min( MUM ,CS ) ) * RCSe ) - ( MUM / DS ) ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295516}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( ARS * ( FirstVNF_CPU * MDR ) ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( BR - FirstVNF_CPU ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - Min( ( ( Max( MUC,MUR ) / DS ) / CS ) ,RMSe ) ) )", "obj1": 0.9103585657370518, "obj2": 0.038123069714121285}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( CRS - FirstVNF_RAM_Server ) - MDR ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,( Min( CS ,RRSe ) + MUC ) ) ) * ( CS + Min( RRSe ,MUC ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( Max( MUC,Max( ( MUC * MUC ),( DS + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + RMSe ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.06236521908263121}, {"determining": "( ( MRS * Min( PN ,Min( RRS ,( ( MRS * CRS ) / Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ,MDR ),FirstVNF_CPU ) ) ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( PN / MDR ) + MDR ) ) ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( ( RMSe * ( MLU / MUM ) ) + ( MUM + ( RMSe - RRSe ) ) ) + ( MUC - MUM ) ),RMSe ) )", "obj1": 0.8585657370517928, "obj2": 0.05401227883257702}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) + FirstVNF_Mem ) / AMS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) + Max( Const,DDR ) ) )", "choosing": "( ( ( RMSe - ( ( MUM - DS ) - ( DS / MUC ) ) ) / ( MUR * Max( RRSe,RMSe ) ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + ( MUR + Max( RRSe,MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7537601002319473}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( Const / MDR ) / MDR ) / ( AMS / ARS ) ) / Max( DDR,FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( ( CS - Min( MUR ,DS ) ) ,MLU ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * ( DS / ( MUM * Min( CS ,MLU ) ) ) ) * ( ( CS / ( MUC * ( ( ( DS * CS ) + DS ) - DS ) ) ) + MUM ) )", "obj1": 0.4163346613545817, "obj2": 0.40986355531308305}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( ( FirstVNF_RAM - ARS ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( ( MUM + RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4581673306772908, "obj2": 0.3382620536836237}, {"determining": "( ( Max( ( ( FirstVNF_Mem_Server + ACS ) / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( MDR,FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS + MUC ) - CS ) - CS ) ,RRSe ) * Max( RCSe,DS ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.004480423733393665}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) )", "obj1": 0.5976095617529881, "obj2": 0.2265357127498113}, {"determining": "( ( Max( ( Min( Min( MDR ,ARS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - Max( ( CRS * CRS ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( ( ( ACS * FirstVNF_Mem ) + FirstVNF_RAM_Server ),Min( Min( MDR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) - ACS ) ) )", "choosing": "( Max( Max( MUR,Min( MUC ,( ( Max( Min( RCSe ,CS ),MUC ) / Max( Max( RMSe,RMSe ),RMSe ) ) - CS ) ) ),DS ) * ( ( Min( ( ( ( CS + MUC ) - CS ) - CS ) ,RRSe ) - Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.9661354581673307, "obj2": 0.01201639025653935}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( Min( RCSe ,MUM ) / ( MUR * RCSe ) ) / RMSe ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4592000662892871}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( ARS * ( FirstVNF_CPU * MDR ) ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( BR - FirstVNF_CPU ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9163346613545816, "obj2": 0.03109560990969968}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( PN / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( CS / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.954183266932271, "obj2": 0.018347140698776805}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Min( Max( ( BR - Max( ( Const - PN ),( PN - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) ,( ( CS / MUR ) / ( ( MUM + RCSe ) + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + RRSe ) )", "obj1": 0.5617529880478087, "obj2": 0.24838630548302096}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / AMS ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.6095617529880478, "obj2": 0.2203624895430622}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.42551025279525034}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - ( Max( ( BR - Max( ( BR - Max( CRS,Const ) ),MDR ) ),MDR ) - PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Min( Max( MUC,RCSe ) ,Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( ( MLU * RRSe ) / Min( ( Min( DS ,MUR ) - CS ) ,RRSe ) ) ) ) ,( ( MUR * ( ( ( DS + RCSe ) - ( MLU * ( CS + MLU ) ) ) - ( ( Max( CS,MUC ) * Min( MUC ,MLU ) ) + Max( DS,Min( MLU ,MUC ) ) ) ) ) / ( RMSe + MLU ) ) ) - ( MUM - RMSe ) )", "obj1": 0.647410358565737, "obj2": 0.19867201451626798}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( CRS - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Const ) ) - ( ( ( PN + ACS ) * ( ( MRS + FirstVNF_Mem ) - RRS ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,Max( MUC,MUC ) ) ,( Min( RRSe ,Max( MLU,( MUR * RRSe ) ) ) + RCSe ) ) ) + ( ( RMSe + RCSe ) / ( MUR / CS ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23904382470119523, "obj2": 0.624353486133387}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( BR ,AMS ) / ( ( ( ( ( RRS / FirstVNF_Mem ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Max( ( ( DS * MUR ) * MUC ),DS ) / ( Max( MUM,( DS * Max( CS,MLU ) ) ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( MUR - RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4281027490423031}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ) - ( ( ( ( AMS * RRS ) + DDR ) * ( BR - PN ) ) / Min( ( ( ( ( ( RRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ,Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) * DS ) * ( ( Min( RMSe ,RMSe ) + DS ) + Min( DS ,Max( ( MUM * RRSe ),RRSe ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.1776085094288443}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( DDR - MDR ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) - ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RMSe ) + MUR ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( RRSe / CS ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0723723353870541}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Min( Min( MDR ,ACS ) ,AMS ) + ( Max( ( CRS - AMS ),MDR ) / PN ) ) / ( ( AMS + ACS ) * ( DDR - PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( Max( ( RRSe * MUR ),RCSe ) ,RCSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( ( RCSe + Min( DS ,RMSe ) ) / ( RCSe * RMSe ) ) ,MUM ) ) ,Max( ( CS + MUC ),Min( MLU ,RCSe ) ) ) ) )", "obj1": 0.7191235059760956, "obj2": 0.15201719441468975}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,FirstVNF_CPU ) + ( Min( Max( ( FirstVNF_RAM_Server / PN ),Min( ACS ,RRS ) ) ,RRS ) + ( RRS + ARS ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( Max( RCSe,RMSe ) / Max( ( ( MUC - CS ) / RMSe ),( MUR + Max( RRSe,MUM ) ) ) ) )", "obj1": 0.2749003984063745, "obj2": 0.5865405466947315}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / MDR ) ) ) )", "choosing": "( ( ( MUC / MUC ) - MUC ) * ( Min( DS ,Max( RCSe,RMSe ) ) + ( CS / RRSe ) ) )", "obj1": 0.7589641434262948, "obj2": 0.09938102752836174}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ),Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.22111553784860558, "obj2": 0.6367722530523673}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( ( CS / RRSe ) ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.47808764940239046, "obj2": 0.31314098822846353}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5896414342629482, "obj2": 0.23405363371449234}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( ( BR + ( Const * RRS ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,( FirstVNF_RAM - ARS ) ) ) ) ) * ( RRS / Max( ARS,BR ) ) ) - Min( PN ,Max( ( BR - ( ( Max( FirstVNF_RAM,MDR ) / FirstVNF_Mem ) / AMS ) ),MDR ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),Max( Min( DS ,RMSe ),( CS + MUC ) ) ) - Min( ( Max( Min( Min( RCSe ,( MUM + RCSe ) ) ,RMSe ),MUM ) / RRSe ) ,( ( Max( RCSe,Max( ( ( CS - CS ) - ( RRSe + RMSe ) ),RRSe ) ) / DS ) * MUR ) ) )", "obj1": 0.8605577689243028, "obj2": 0.053718780972804164}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( FirstVNF_Mem_Server + PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( ( CS / CS ) * ( RMSe * MUC ) ) ) * ( CS * Min( Min( RRSe ,( RRSe - Max( Max( Max( RRSe,RMSe ),RCSe ),Min( DS ,MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.6354581673306773, "obj2": 0.1993716123404365}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,( Min( CS ,RRSe ) + MUC ) ) ) * CS ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06331157443118224}, {"determining": "( ( Max( ARS,ARS ) * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU + MDR ) * PN ) - Min( Max( MDR,( Const + Min( PN ,PN ) ) ) ,( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( RMSe - ( ( MUM - ( MUM * RCSe ) ) - CS ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * ( CS * Min( ( Max( Max( Max( Min( DS ,MLU ),Min( MUC ,RMSe ) ),( CS - ( RCSe * MUR ) ) ),( CS + MUC ) ) * ( RRSe - ( RRSe + Max( DS,( DS - DS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.9302788844621513, "obj2": 0.025804456220066028}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + BR ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUC ) ) ) ) * RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6657047977081346}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( ( CS / RRSe ) + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MLU - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,Max( Max( RRSe,RRSe ),RRSe ) ) - CS ) )", "obj1": 0.6792828685258964, "obj2": 0.17087938861934382}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / DDR ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) + ( BR - PN ) ) / ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RRSe,Min( Max( ( RRSe / ( DS / RMSe ) ),DS ) ,RRSe ) ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.4758297940888547}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( DS,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( Min( RMSe ,DS ) * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7828685258964143, "obj2": 0.08219560791876039}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( DDR - ( BR / FirstVNF_RAM_Server ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( ( ARS - AMS ) / ( ( Min( ( Const + MRS ) ,AMS ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( CS * MUC ) ,( MUC / Min( ( Min( MUR ,DS ) - CS ) ,( Max( MUM,RRSe ) * ( RCSe - RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.8784860557768924, "obj2": 0.04558132354138928}, {"determining": "( ( FirstVNF_CPU_Server * Max( DDR,Const ) ) * Max( ( Const * MRS ),DDR ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Max( RMSe,RMSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + Min( Min( DS ,CS ) ,DS ) ) )", "obj1": 0.20916334661354583, "obj2": 0.6512656868951254}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6610745600528585}, {"determining": "( ( FirstVNF_RAM_Server - ( DDR + Min( FirstVNF_Mem ,Min( DDR ,Max( CRS,FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN / ACS ) / MDR ) ) / DDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( RRSe / MUR ),RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( MUC - RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Max( MLU,( Max( ( ( MLU * MUR ) * RCSe ),MUM ) + Min( ( ( MLU / RMSe ) * ( DS - DS ) ) ,Min( MUR ,RRSe ) ) ) ) + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6441551741674273}, {"determining": "( ( ( AMS * ( RRS + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) - ( ( PN - BR ) + FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server - CRS ) ) - ( Min( DDR ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUC ) ,Min( Max( MUM,( Min( RMSe ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,MUR ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( RRSe ,MUC ) ) ) ) ,RRSe ) ) * Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( ACS * ( Const - ( Const / Const ) ) ) * Min( ( ( ( RRS + ACS ) * AMS ) * PN ) ,Min( ( Min( MDR ,ACS ) - AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( Max( Min( FirstVNF_CPU ,CRS ),RRS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - ( MUC - CS ) ) - ( ( ( RMSe / MLU ) - MUC ) - MUM ) ) ,RRSe ) / Max( RCSe,MUC ) ) * DS ) * ( ( CS / RRSe ) + ( ( RCSe / RRSe ) + ( RMSe + CS ) ) ) )", "obj1": 0.750996015936255, "obj2": 0.10791480644878278}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) )", "obj1": 0.25697211155378485, "obj2": 0.6021407881938416}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3466135458167331, "obj2": 0.485361063444162}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) )", "obj1": 0.25697211155378485, "obj2": 0.6021407881938416}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + PN ) ) + ( Min( ( BR * MRS ) ,MDR ) + ARS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6625420375397222}, {"determining": "( ( FirstVNF_CPU - ( DDR - Const ) ) + ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,MRS ) ),Max( CRS,Min( AMS ,FirstVNF_RAM ) ) ) ) ,( ( ( ( PN / ( RRS / CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - ( MUC / Max( MUR,MUM ) ) ) * ( CS * ( RMSe - ( MLU * DS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( ( AMS + ACS ) * ( BR - PN ) ),( ( ACS + RRS ) * AMS ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,Min( ( ( ( CS + MUR ) - CS ) - CS ) ,RRSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2755495496113058}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3466135458167331, "obj2": 0.485361063444162}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),( FirstVNF_CPU_Server + PN ) ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( MUC * RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( RCSe - ( ( CS / CS ) / RCSe ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.50199203187251, "obj2": 0.29716455333759095}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6115537848605578, "obj2": 0.21127980406264268}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5201218848633449}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,( FirstVNF_RAM / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ARS * FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server + Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( BR + DDR ) - ( Max( FirstVNF_CPU_Server,AMS ) * Min( ACS ,RRS ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU / MUR ) * Max( CS,( ( Max( RCSe,RRSe ) - Min( CS ,( CS + CS ) ) ) / DS ) ) ) * ( RMSe / CS ) ) * ( ( CS / RRSe ) + CS ) )", "obj1": 0.37250996015936255, "obj2": 0.46709347420172986}, {"determining": "( ( ACS * ( DDR * ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Min( CRS ,( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) * Max( Min( ( RRS + MRS ) ,( AMS / MRS ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( ( ( MUM + MUM ) + ( RRSe * ( MUC * ( RRSe + Min( RCSe ,MUR ) ) ) ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,( CS / MUM ) ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7908366533864541, "obj2": 0.07828721911449953}, {"determining": "( ( ACS * ( DDR / ( ( ( DDR - MRS ) * FirstVNF_CPU ) + ( FirstVNF_CPU_Server * ( ACS * Max( Const,ARS ) ) ) ) ) ) * ( ( PN * ( ( ( MDR - FirstVNF_RAM ) + DDR ) - FirstVNF_CPU_Server ) ) - Min( ( ( BR - FirstVNF_CPU ) / MDR ) ,PN ) ) )", "choosing": "( ( ( ( MUC - Min( MLU ,RRSe ) ) * Max( RMSe,RCSe ) ) * DS ) * ( ( CS / RRSe ) + ( Max( RRSe,RMSe ) - DS ) ) )", "obj1": 0.7669322709163346, "obj2": 0.09122604016142696}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,Max( PN,FirstVNF_Mem_Server ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) + ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( RMSe - MUR ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.1853380654733106}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ),MDR ) ,PN ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.23989297985441368}], "29": [{"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( BR ,AMS ) / ( ( ( ( ( RRS / FirstVNF_Mem ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Max( RMSe,RMSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + Min( Min( DS ,CS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( Min( MDR ,ACS ) ,AMS ) / ( PN / Max( ( ( PN - FirstVNF_CPU ) * FirstVNF_Mem ),MDR ) ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem + ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem / FirstVNF_Mem ) )", "choosing": "( ( ( Min( ( ( DS - Min( RCSe ,CS ) ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( ( RCSe + DS ),DS ) ) - CS ),RMSe ) ) * DS ) * ( ( RMSe / RRSe ) + ( Min( DS ,( CS / MUM ) ) + ( ( ( Max( ( MLU + RCSe ),( RRSe / MUM ) ) / RCSe ) + Min( Max( Max( MUM,RRSe ),( MUC * MUC ) ) ,( MUC / RCSe ) ) ) - ( RRSe - ( RRSe / DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4341849258024401}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.44223107569721115, "obj2": 0.39617211208093484}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + DDR ) ) ,( AMS - MRS ) ) - Min( Max( ( BR - Max( ( FirstVNF_Mem_Server + PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( DS / Min( ( ( MLU - MUR ) - CS ) ,RRSe ) ) ,Min( MUR ,( ( Min( RCSe ,MUM ) / ( MUR * RCSe ) ) / RMSe ) ) ) ) ,( ( CS / MUR ) / Min( RMSe ,MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5179282868525896, "obj2": 0.2843484322400265}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( Min( RCSe ,MUM ) / ( MUR * RCSe ) ) / RMSe ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4592000662892871}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5201218848633449}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5026468150072175}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( Const / Max( FirstVNF_Mem,( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) + ( Min( ARS ,AMS ) / ( ( ( ( MDR / ( PN / MDR ) ) / FirstVNF_Mem ) / ( ( MRS / ARS ) * ( MRS * ACS ) ) ) / PN ) ) ) )", "choosing": "( ( MUC - ( RRSe * ( ( DS / MUC ) / MLU ) ) ) * ( MUC * Min( Min( Max( Min( RMSe ,( CS + CS ) ),( MUR + MUR ) ) ,( RRSe - ( RRSe + Min( ( CS / MUM ) ,DS ) ) ) ) ,RRSe ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( MRS ,MRS ) ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,Max( DS,RCSe ) ) - CS ) )", "obj1": 0.6972111553784861, "obj2": 0.1603710350940913}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7513415433049849}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),( FirstVNF_CPU_Server + PN ) ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( MUC * RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( RCSe - ( ( CS / CS ) / RCSe ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.50199203187251, "obj2": 0.29716455333759095}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Min( Max( ( BR - Max( ( Const - PN ),( PN - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) ,( ( CS / MUR ) / ( ( MUM + RCSe ) + MLU ) ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + RRSe ) )", "obj1": 0.5617529880478087, "obj2": 0.24838630548302096}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( CRS - FirstVNF_RAM_Server ) - MDR ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,( Min( CS ,RRSe ) + MUC ) ) ) * ( CS + Min( RRSe ,MUC ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( Max( MUC,Max( ( MUC * MUC ),( DS + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + RMSe ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.06236521908263121}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( Const / MDR ) / MDR ) / ( AMS / ARS ) ) / Max( DDR,FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( ( CS - Min( MUR ,DS ) ) ,MLU ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * ( DS / ( MUM * Min( CS ,MLU ) ) ) ) * ( ( CS / ( MUC * ( ( ( DS * CS ) + DS ) - DS ) ) ) + MUM ) )", "obj1": 0.4163346613545817, "obj2": 0.40986355531308305}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( DDR - MDR ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) - ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RMSe ) + MUR ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( PN - BR ) * FirstVNF_CPU_Server ) * ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( MLU * RRSe ) + ( RMSe * MLU ) ),Max( Min( MLU ,RMSe ),( Min( ( ( DS - CS ) - CS ) ,RRSe ) + ( DS + ( ( MUR * RRSe ) + ( RMSe + RCSe ) ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06844455861838539}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),Max( CRS,BR ) ) / Min( ( FirstVNF_RAM_Server / ( ACS * FirstVNF_Mem ) ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RMSe,RRSe ) * MUR ) - CS ) - ( MUM - MLU ) ) ,RRSe ) ) * DS ) * ( Min( MLU ,Min( Min( MUR ,RRSe ) ,Max( MUM,( MUR + RMSe ) ) ) ) + Min( DS ,( RRSe + RCSe ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5702900034424689}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,Max( PN,FirstVNF_Mem_Server ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) + ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( RMSe - MUR ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.1853380654733106}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ) - ( ( ( ( AMS * RRS ) + DDR ) * ( BR - PN ) ) / Min( ( ( ( ( ( RRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ,Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) * DS ) * ( ( Min( RMSe ,RMSe ) + DS ) + Min( DS ,Max( ( MUM * RRSe ),RRSe ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.1776085094288443}, {"determining": "( ( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Min( Min( MDR ,ACS ) ,AMS ) + ( Max( ( CRS - AMS ),MDR ) / PN ) ) / ( ( AMS + ACS ) * ( DDR - PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Min( Max( ( RRSe * MUR ),RCSe ) ,RCSe ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( ( RCSe + Min( DS ,RMSe ) ) / ( RCSe * RMSe ) ) ,MUM ) ) ,Max( ( CS + MUC ),Min( MLU ,RCSe ) ) ) ) )", "obj1": 0.7191235059760956, "obj2": 0.15201719441468975}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( ( CS / RRSe ) ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.549800796812749, "obj2": 0.26578974382219467}, {"determining": "( ( Max( ( Min( Min( MDR ,ARS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - Max( ( CRS * CRS ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( ( ( ACS * FirstVNF_Mem ) + FirstVNF_RAM_Server ),Min( Min( MDR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) - ACS ) ) )", "choosing": "( Max( Max( MUR,Min( MUC ,( ( Max( Min( RCSe ,CS ),MUC ) / Max( Max( RMSe,RMSe ),RMSe ) ) - CS ) ) ),DS ) * ( ( Min( ( ( ( CS + MUC ) - CS ) - CS ) ,RRSe ) - Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.9661354581673307, "obj2": 0.01201639025653935}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( ( AMS + ACS ) * ( BR - PN ) ),( ( ACS + RRS ) * AMS ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,Min( ( ( ( CS + MUR ) - CS ) - CS ) ,RRSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2755495496113058}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU_Server - ( Max( ( MDR + ( RRS / ARS ) ),( DDR * BR ) ) * ( Min( Const ,FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,( Min( CS ,( RMSe - CS ) ) + MUC ) ) * ( CS / Min( RRSe ,MUC ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( Min( MLU ,RMSe ),( CS + RMSe ) ) ) )", "obj1": 0.8904382470119522, "obj2": 0.04252128761295515}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( ( CS / RRSe ) + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MLU - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,Max( Max( RRSe,RRSe ),RRSe ) ) - CS ) )", "obj1": 0.6792828685258964, "obj2": 0.17087938861934382}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( FirstVNF_CPU_Server + Min( Max( FirstVNF_RAM,Max( ( ( FirstVNF_RAM - ACS ) / ( CRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RRSe ,RCSe ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / Min( RMSe ,MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6607106295731469}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( DS,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( Min( RMSe ,DS ) * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7828685258964143, "obj2": 0.08219560791876039}, {"determining": "( ( FirstVNF_CPU - ( DDR - Const ) ) + ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,MRS ) ),Max( CRS,Min( AMS ,FirstVNF_RAM ) ) ) ) ,( ( ( ( PN / ( RRS / CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - ( MUC / Max( MUR,MUM ) ) ) * ( CS * ( RMSe - ( MLU * DS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,( FirstVNF_RAM / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ARS * FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server + Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( BR + DDR ) - ( Max( FirstVNF_CPU_Server,AMS ) * Min( ACS ,RRS ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU / MUR ) * Max( CS,( ( Max( RCSe,RRSe ) - Min( CS ,( CS + CS ) ) ) / DS ) ) ) * ( RMSe / CS ) ) * ( ( CS / RRSe ) + CS ) )", "obj1": 0.37250996015936255, "obj2": 0.46709347420172986}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.42551025279525034}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MLU - ( Max( Max( ( MUM * MUM ),( MLU / CS ) ),DS ) - DS ) ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( RCSe - CS ) ) ) * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( ( DS + ( ( DS + RCSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.6912350597609562, "obj2": 0.1626778334186237}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - ( Max( ( BR - Max( ( BR - Max( CRS,Const ) ),MDR ) ),MDR ) - PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Min( Max( MUC,RCSe ) ,Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( ( MLU * RRSe ) / Min( ( Min( DS ,MUR ) - CS ) ,RRSe ) ) ) ) ,( ( MUR * ( ( ( DS + RCSe ) - ( MLU * ( CS + MLU ) ) ) - ( ( Max( CS,MUC ) * Min( MUC ,MLU ) ) + Max( DS,Min( MLU ,MUC ) ) ) ) ) / ( RMSe + MLU ) ) ) - ( MUM - RMSe ) )", "obj1": 0.647410358565737, "obj2": 0.19867201451626798}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( CRS - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Const ) ) - ( ( ( PN + ACS ) * ( ( MRS + FirstVNF_Mem ) - RRS ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,Max( MUC,MUC ) ) ,( Min( RRSe ,Max( MLU,( MUR * RRSe ) ) ) + RCSe ) ) ) + ( ( RMSe + RCSe ) / ( MUR / CS ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23904382470119523, "obj2": 0.624353486133387}, {"determining": "( ( MRS * Min( PN ,Min( RRS ,( ( MRS * CRS ) / Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ,MDR ),FirstVNF_CPU ) ) ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( PN / MDR ) + MDR ) ) ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( ( RMSe * ( MLU / MUM ) ) + ( MUM + ( RMSe - RRSe ) ) ) + ( MUC - MUM ) ),RMSe ) )", "obj1": 0.8585657370517928, "obj2": 0.05401227883257702}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( ( AMS * ( RRS + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) - ( ( PN - BR ) + FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server - CRS ) ) - ( Min( DDR ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUC ) ,Min( Max( MUM,( Min( RMSe ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,MUR ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( RRSe ,MUC ) ) ) ) ,RRSe ) ) * Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.12017126621637013}, {"determining": "( ( Max( ( ( FirstVNF_Mem_Server + ACS ) / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9780876494023905, "obj2": 0.007477330661837522}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6115537848605578, "obj2": 0.21061444744362878}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( Max( ( MDR * AMS ),RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / RRSe ) + ( RMSe / MLU ) ) + ( RCSe / ( RMSe / RCSe ) ) ) + ( MLU * ( RCSe / CS ) ) ) ,( MLU + Max( ( ( MUM / MUR ) + RMSe ),( ( CS + RCSe ) - ( MUR / MLU ) ) ) ) ) - RMSe ) * MUR ) - ( CS + ( Max( MLU,( Min( ( DS / Min( MLU ,MUR ) ) ,( RMSe + RMSe ) ) * MUR ) ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.620748560659204}, {"determining": "( Min( Min( Const ,Const ) ,Max( DDR,ARS ) ) - ( ( ( AMS + FirstVNF_CPU ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( MRS ,MRS ) / ( FirstVNF_Mem_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) )", "obj1": 0.2729083665338645, "obj2": 0.5855801092412599}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( PN / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - Min( ( ( Max( MUC,MUR ) / DS ) / CS ) ,RMSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.04133614579223917}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( RRSe / MUR ),RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.4844498755051843}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( ( FirstVNF_RAM - ARS ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( ( MUM + RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4581673306772908, "obj2": 0.3382620536836237}, {"determining": "( ( ACS * Max( ARS,RRS ) ) * ( Min( Max( Max( ARS,FirstVNF_CPU ),( BR - PN ) ) ,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Min( ( ( CS * MUC ) * ( Min( MUR ,Max( ( MUM - Max( MLU,MLU ) ),( RCSe * ( MUR + DS ) ) ) ) * CS ) ) ,( MUM - MUR ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,RCSe ) ),Max( ( CS + MUC ),Min( MUR ,CS ) ) ) )", "obj1": 0.8745019920318725, "obj2": 0.04694284633740511}, {"determining": "( ( ACS * ( Const - ( Const / Const ) ) ) * Min( ( ( ( RRS + ACS ) * AMS ) * PN ) ,Min( ( Min( MDR ,ACS ) - AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( Max( Min( FirstVNF_CPU ,CRS ),RRS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - ( MUC - CS ) ) - ( ( ( RMSe / MLU ) - MUC ) - MUM ) ) ,RRSe ) / Max( RCSe,MUC ) ) * DS ) * ( ( CS / RRSe ) + ( ( RCSe / RRSe ) + ( RMSe + CS ) ) ) )", "obj1": 0.750996015936255, "obj2": 0.10791480644878278}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / AMS ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( FirstVNF_Mem + ACS ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( ( ( DS - CS ) - Min( DS ,Min( DS ,CS ) ) ) * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,CS ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8605577689243028, "obj2": 0.05113325586834795}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Min( Max( ( BR - Max( ( Const - PN ),( PN - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * Max( Min( MUM ,MUR ),Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) / ( RMSe * MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.27063211698423534}, {"determining": "( Min( BR ,RRS ) + ( Min( Max( Const,( ( CRS + Const ) / ( ( CRS * ( Const / AMS ) ) - MRS ) ) ) ,( AMS / FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( ( MUM / ( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( Min( ( ( Max( MUR,RRSe ) - ( DS * MUC ) ) * Min( MUM ,MUR ) ) ,DS ) + CS ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( BR ,AMS ) / ( ( ( ( ( RRS / FirstVNF_Mem ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Max( ( ( DS * MUR ) * MUC ),DS ) / ( Max( MUM,( DS * Max( CS,MLU ) ) ) + Min( ( Min( MUR ,CS ) / Min( ( CS / ( MUR - RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4281027490423031}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5896414342629482, "obj2": 0.23405363371449234}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( Const * ( PN / ( Max( BR,Min( FirstVNF_Mem_Server ,ACS ) ) * FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN / MDR ) / MDR ) ) / DDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.4903820097406755}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( ( FirstVNF_Mem_Server + ACS ) / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( MDR,FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS + MUC ) - CS ) - CS ) ,RRSe ) * Max( RCSe,DS ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.004480423733393665}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / DDR ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) + ( BR - PN ) ) / ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RRSe,Min( Max( ( RRSe / ( DS / RMSe ) ),DS ) ,RRSe ) ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.4758297940888547}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( DDR - ( BR / FirstVNF_RAM_Server ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( ( ARS - AMS ) / ( ( Min( ( Const + MRS ) ,AMS ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( CS * MUC ) ,( MUC / Min( ( Min( MUR ,DS ) - CS ) ,( Max( MUM,RRSe ) * ( RCSe - RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.8784860557768924, "obj2": 0.04558132354138928}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( MUM / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0723723353870541}, {"determining": "( ( Max( ARS,ARS ) * FirstVNF_CPU_Server ) * ( ( ( FirstVNF_CPU + MDR ) * PN ) - Min( Max( MDR,( Const + Min( PN ,PN ) ) ) ,( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( RMSe - ( ( MUM - ( MUM * RCSe ) ) - CS ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * ( CS * Min( ( Max( Max( Max( Min( DS ,MLU ),Min( MUC ,RMSe ) ),( CS - ( RCSe * MUR ) ) ),( CS + MUC ) ) * ( RRSe - ( RRSe + Max( DS,( DS - DS ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.9302788844621513, "obj2": 0.025804456220066028}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,Min( Min( Max( FirstVNF_CPU_Server,ARS ) ,RRS ) ,AMS ) ) )", "choosing": "( ( Min( ( CS + MUC ) ,( MUM - MUC ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.950199203187251, "obj2": 0.02025857790074325}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( Min( RMSe ,MUM ) / ( MUR * RCSe ) ) / RMSe ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9243027888446215, "obj2": 0.028512181275687713}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + BR ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUC ) ) ) ) * RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MRS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / ( RRS - ( BR * Max( AMS,FirstVNF_Mem_Server ) ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.4948334159911201}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) )", "obj1": 0.25697211155378485, "obj2": 0.6021407881938416}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / MDR ) ) ) )", "choosing": "( ( ( MUC / MUC ) - MUC ) * ( Min( DS ,Max( RCSe,RMSe ) ) + ( CS / RRSe ) ) )", "obj1": 0.7589641434262948, "obj2": 0.09938102752836174}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.25697211155378485, "obj2": 0.6021407881938416}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( PN,( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( PN / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9561752988047809, "obj2": 0.017735107936938336}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + ARS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( Max( RRSe,RMSe ) + Min( DS ,( CS / MUC ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.6916727497525252}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( ( AMS + PN ),( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_Mem ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( RRSe / CS ) / ( MUC + MUR ) ) ) - ( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ) + Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.601593625498008, "obj2": 0.2260120268958548}], "30": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( Min( Min( MDR ,ACS ) ,AMS ) / ( PN / Max( ( ( PN - FirstVNF_CPU ) * FirstVNF_Mem ),MDR ) ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem + ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem / FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( ( DS + ( ( RCSe + DS ) + RCSe ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( BR ,AMS ) / ( ( ( ( ( RRS / FirstVNF_Mem ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Max( RMSe,RMSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + Min( Min( DS ,CS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.44223107569721115, "obj2": 0.39617211208093484}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4341849258024401}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6394422310756972, "obj2": 0.19181247988586894}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( Min( RCSe ,MUM ) / ( MUR * RCSe ) ) / RMSe ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4592000662892871}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_Mem_Server ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( MUR / CS ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / ( ( Min( MUR ,DS ) - CS ) - RRSe ) ) ) ) ,( ( ( ( RRSe - MLU ) * MUM ) / MUR ) / ( RMSe * MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5896414342629482, "obj2": 0.23243565946002676}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( FirstVNF_Mem / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( DDR + Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / Min( RRSe ,MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( ( CS + MUC ) ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5190031445412996}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( DDR - MDR ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) - ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RMSe ) + MUR ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.42551025279525034}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem,BR ),( ( FirstVNF_Mem / ( Const * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( ( ( ( AMS + ACS ) * ( ( ARS / DDR ) - RRS ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MRS ) / Max( ( FirstVNF_Mem_Server + PN ),CRS ) ) / MDR ) / PN ) ) ) - ( MRS + ( ( BR * MRS ) - FirstVNF_CPU ) ) )", "choosing": "( Max( ( Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) * ( DS * RMSe ) ),( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + Min( MUR ,( MUR - DS ) ) ) )", "obj1": 0.39641434262948205, "obj2": 0.42785206346155025}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( Const / MDR ) / MDR ) / ( AMS / ARS ) ) / Max( DDR,FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( ( CS - Min( MUR ,DS ) ) ,MLU ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * ( DS / ( MUM * Min( CS ,MLU ) ) ) ) * ( ( CS / ( MUC * ( ( ( DS * CS ) + DS ) - DS ) ) ) + MUM ) )", "obj1": 0.4163346613545817, "obj2": 0.40986355531308305}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),Max( CRS,BR ) ) / Min( ( FirstVNF_RAM_Server / ( ACS * FirstVNF_Mem ) ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RMSe,RRSe ) * MUR ) - CS ) - ( MUM - MLU ) ) ,RRSe ) ) * DS ) * ( Min( MLU ,Min( Min( MUR ,RRSe ) ,Max( MUM,( MUR + RMSe ) ) ) ) + Min( DS ,( RRSe + RCSe ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5702900034424689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,Max( PN,FirstVNF_Mem_Server ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) + ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( RMSe - MUR ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.1853380654733106}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU + Const ) ) ,ACS ) + ( Min( ( FirstVNF_RAM - Max( Min( ( MDR * MRS ) ,CRS ),Max( ( Max( FirstVNF_RAM,PN ) * MDR ),Const ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( MUR * RRSe ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( MLU ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Max( RMSe,Min( ( ( ( RMSe + MUM ) / DS ) + Max( MUM,DS ) ) ,MLU ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7399014793836536}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( ( MRS * Min( PN ,Min( RRS ,( ( MRS * CRS ) / Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ,MDR ),FirstVNF_CPU ) ) ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( PN / MDR ) + MDR ) ) ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( ( RMSe * ( MLU / MUM ) ) + ( MUM + ( RMSe - RRSe ) ) ) + ( MUC - MUM ) ),RMSe ) )", "obj1": 0.8585657370517928, "obj2": 0.05401227883257702}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ) - ( ( ( ( AMS * RRS ) + DDR ) * ( BR - PN ) ) / Min( ( ( ( ( ( RRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ,Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) * DS ) * ( ( Min( RMSe ,RMSe ) + DS ) + Min( DS ,Max( ( MUM * RRSe ),RRSe ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.1776085094288443}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / Min( MRS ,MRS ) ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,Max( DS,RCSe ) ) - CS ) )", "obj1": 0.7131474103585658, "obj2": 0.14643206607395126}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - ( AMS * ( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) / RMSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + ( RCSe / RMSe ) ) ) ) - Min( ( ( Max( MUC,MUR ) / DS ) / CS ) ,RMSe ) ) )", "obj1": 0.9143426294820717, "obj2": 0.037275748703344894}, {"determining": "( ( Max( ( Min( Min( MDR ,ARS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - Max( ( CRS * CRS ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( ( ( ACS * FirstVNF_Mem ) + FirstVNF_RAM_Server ),Min( Min( MDR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) - ACS ) ) )", "choosing": "( Max( Max( MUR,Min( MUC ,( ( Max( Min( RCSe ,CS ),MUC ) / Max( Max( RMSe,RMSe ),RMSe ) ) - CS ) ) ),DS ) * ( ( Min( ( ( ( CS + MUC ) - CS ) - CS ) ,RRSe ) - Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.9661354581673307, "obj2": 0.01201639025653935}, {"determining": "( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * Max( CS,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) / ( RMSe * MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6437366077488899}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + DDR ) ) ,( AMS - MRS ) ) - Min( Max( ( BR - Max( ( FirstVNF_Mem_Server + PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( DS / Min( ( ( MLU - MUR ) - CS ) ,RRSe ) ) ,Min( MUR ,( ( Min( RCSe ,MUM ) / ( MUR * RCSe ) ) / RMSe ) ) ) ) ,( ( CS / MUR ) / Min( RMSe ,MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5179282868525896, "obj2": 0.2843484322400265}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( ( CS / RRSe ) + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MLU - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,Max( Max( RRSe,RRSe ),RRSe ) ) - CS ) )", "obj1": 0.6792828685258964, "obj2": 0.17087938861934382}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( Min( DDR ,ACS ) + ( ( ( Max( MDR,( ( FirstVNF_Mem_Server / PN ) / BR ) ) * AMS ) * ( ACS * DDR ) ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( CRS + Const ) ) ) ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( MLU * Max( RCSe,RMSe ) ) ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) / DS ) * ( Min( ( MUC - ( ( ( RCSe - MUC ) - ( DS + Min( CS ,MUM ) ) ) * Min( DS ,( Max( CS,CS ) / RMSe ) ) ) ) ,MLU ) + Min( DS ,( CS / RRSe ) ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6537194845544111}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,( FirstVNF_RAM / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ARS * FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server + Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( BR + DDR ) - ( Max( FirstVNF_CPU_Server,AMS ) * Min( ACS ,RRS ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU / MUR ) * Max( CS,( ( Max( RCSe,RRSe ) - Min( CS ,( CS + CS ) ) ) / DS ) ) ) * ( RMSe / CS ) ) * ( ( CS / RRSe ) + CS ) )", "obj1": 0.37250996015936255, "obj2": 0.46709347420172986}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( MUC + MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5139442231075697, "obj2": 0.29031449287290967}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( MUM / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8027888446215139, "obj2": 0.07305414139010288}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * FirstVNF_CPU_Server ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - ( RRSe + Min( DS ,( MLU - MUR ) ) ) ) )", "obj1": 0.9043824701195219, "obj2": 0.041097135350251605}, {"determining": "( ( Max( ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MLU - ( Max( Max( ( MUM * MUM ),( MLU / CS ) ),DS ) - DS ) ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( RCSe - CS ) ) ) * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( ( DS + ( ( DS + RCSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.6912350597609562, "obj2": 0.1626778334186237}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( Const * ( PN / ( Max( BR,Min( FirstVNF_Mem_Server ,ACS ) ) * FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN / MDR ) / MDR ) ) / DDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.4903820097406755}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( ( AMS * ( RRS + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) - ( ( PN - BR ) + FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server - CRS ) ) - ( Min( DDR ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUC ) ,Min( Max( MUM,( Min( RMSe ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,MUR ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( RRSe ,MUC ) ) ) ) ,RRSe ) ) * Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( ( FirstVNF_RAM - ARS ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.47410358565737054, "obj2": 0.3150140686552537}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( Max( ( ( FirstVNF_Mem_Server + ACS ) / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9780876494023905, "obj2": 0.007477330661837522}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),( FirstVNF_CPU_Server + PN ) ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( MUC * RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( RCSe - ( ( CS / CS ) / RCSe ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.50199203187251, "obj2": 0.29716455333759095}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7513415433049849}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.6095617529880478, "obj2": 0.2171723503133544}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + BR ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUC ) ) ) ) * RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20916334661354583, "obj2": 0.6588366990988367}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( Min( Min( Const ,Const ) ,Max( DDR,ARS ) ) - ( ( ( AMS + FirstVNF_CPU ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( MRS ,MRS ) / ( FirstVNF_Mem_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) )", "obj1": 0.2729083665338645, "obj2": 0.5855801092412599}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( MUM / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0723723353870541}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( PN - BR ) * FirstVNF_CPU_Server ) * ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( MLU * RRSe ) + ( RMSe * MLU ) ),Max( Min( MLU ,RMSe ),( Min( ( ( DS - CS ) - CS ) ,RRSe ) + ( DS + ( ( MUR * RRSe ) + ( RMSe + RCSe ) ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06844455861838539}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( FirstVNF_CPU_Server + Min( Max( FirstVNF_RAM,Max( ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( CRS + FirstVNF_Mem_Server ) ),( ( FirstVNF_Mem - FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RRSe ,RCSe ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / ( ( CS / RRSe ) + MUM ) ) / Min( RMSe ,MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.668216312940027}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( RRSe / MUR ),RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.4844498755051843}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5026468150072175}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.12017126621637013}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( CRS - FirstVNF_RAM_Server ) - MDR ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,( Min( CS ,RRSe ) + MUC ) ) ) * ( CS + Min( RRSe ,MUC ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( Max( MUC,Max( ( MUC * MUC ),( DS + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + RMSe ) ) ) )", "obj1": 0.8326693227091634, "obj2": 0.06236521908263121}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / DDR ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) + ( BR - PN ) ) / ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RRSe,Min( Max( ( RRSe / ( DS / RMSe ) ),DS ) ,RRSe ) ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.4758297940888547}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * ( RRSe + Min( DS ,( CS / MUM ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6011410050557936}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ACS * ( Const - ( Const / Const ) ) ) * Min( ( ( ( RRS + ACS ) * AMS ) * PN ) ,Min( ( Min( MDR ,ACS ) - AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( Max( Min( FirstVNF_CPU ,CRS ),RRS ) / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - ( MUC - CS ) ) - ( ( ( RMSe / MLU ) - MUC ) - MUM ) ) ,RRSe ) / Max( RCSe,MUC ) ) * DS ) * ( ( CS / RRSe ) + ( ( RCSe / RRSe ) + ( RMSe + CS ) ) ) )", "obj1": 0.750996015936255, "obj2": 0.10791480644878278}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.549800796812749, "obj2": 0.26452179103370177}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * Max( Min( MUM ,MUR ),Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) / ( RMSe * MLU ) ) ) - ( CS + Min( MUC ,RMSe ) ) )", "obj1": 0.8764940239043825, "obj2": 0.044494765043611655}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / PN ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( CRS * FirstVNF_CPU_Server ) / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( ( CS / MUM ) / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( CS - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9302788844621513, "obj2": 0.025784259995431536}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * DDR ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.950199203187251, "obj2": 0.020163793567938872}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5026468150072175}, {"determining": "( ( RRS / MRS ) - Min( ( MRS * Min( ( FirstVNF_RAM / MRS ) ,RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MLU,MUR ) / ( MUC - RRSe ) ),Max( Min( MLU ,( ( MUM / MUM ) / MLU ) ),( MUM + MUC ) ) ) - ( DS / MUR ) )", "obj1": 0.3047808764940239, "obj2": 0.555258240662269}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MRS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / ( RRS - ( BR * Max( AMS,FirstVNF_Mem_Server ) ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.4948334159911201}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Min( Min( MDR ,ACS ) ,PN ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( ( ( DS - CS ) - DS ) * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,Min( ( ( ( CS + MUR ) - CS ) - CS ) ,RRSe ) ),( CS + MUC ) ) ) )", "obj1": 0.5537848605577689, "obj2": 0.2573273980831843}, {"determining": "( ( FirstVNF_CPU - ( DDR - Const ) ) + ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,MRS ) ),Max( CRS,Min( AMS ,FirstVNF_RAM ) ) ) ) ,( ( ( ( PN / ( RRS / CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - ( MUC / Max( MUR,MUM ) ) ) * ( CS * ( RMSe - ( MLU * DS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),DDR ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) )", "obj1": 0.23306772908366533, "obj2": 0.6270463644393742}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5976095617529881, "obj2": 0.2267630383017986}, {"determining": "( Max( ( MDR * AMS ),RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / RRSe ) + ( RMSe / MLU ) ) + ( RCSe / ( RMSe / RCSe ) ) ) + ( MLU * ( RCSe / CS ) ) ) ,( MLU + Max( ( ( MUM / MUR ) + RMSe ),( ( CS + RCSe ) - ( MUR / MLU ) ) ) ) ) - RMSe ) * MUR ) - ( CS + ( Max( MLU,( Min( ( DS / Min( MLU ,MUR ) ) ,( RMSe + RMSe ) ) * MUR ) ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.620748560659204}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( PN,( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( PN / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9561752988047809, "obj2": 0.017735107936938336}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( DS,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( Min( RMSe ,DS ) * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08139284840993491}, {"determining": "( Max( MRS,Min( PN ,Min( RRS ,( ( MRS * CRS ) / Max( FirstVNF_CPU,Min( FirstVNF_CPU ,MDR ) ) ) ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( PN / MDR ) + MDR ) ) ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.7749003984063745, "obj2": 0.08825406503243702}], "31": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( CRS - FirstVNF_RAM_Server ) - MDR ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,( Min( CS ,RRSe ) + MUC ) ) ) * ( CS + Min( RRSe ,MUC ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( Max( MUC,Max( ( MUC * MUC ),( DS + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( Min( MDR ,ACS ) ,AMS ) / ( PN / Max( ( ( PN - FirstVNF_CPU ) * FirstVNF_Mem ),MDR ) ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem + ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem / FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( ( DS + ( ( RCSe + DS ) + RCSe ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + RCSe ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( MRS * Min( PN ,Min( RRS ,( ( MRS * CRS ) / Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ,MDR ),FirstVNF_CPU ) ) ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * ( ( PN / MDR ) + MDR ) ) ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( ( RMSe * ( MLU / MUM ) ) + ( MUM + ( RMSe - RRSe ) ) ) + ( MUC - MUM ) ),RMSe ) )", "obj1": 0.8585657370517928, "obj2": 0.05401227883257702}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( DDR - MDR ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) - ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RMSe ) + MUR ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( Const / MDR ) / MDR ) / ( AMS / ARS ) ) / Max( DDR,FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( ( CS - Min( MUR ,DS ) ) ,MLU ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * ( DS / ( MUM * Min( CS ,MLU ) ) ) ) * ( ( CS / ( MUC * ( ( ( DS * CS ) + DS ) - DS ) ) ) + MUM ) )", "obj1": 0.4163346613545817, "obj2": 0.40986355531308305}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( MDR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / Max( ( PN + FirstVNF_Mem_Server ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + DS ) ) ) - ( CS + ( Min( ( Max( RMSe,DS ) - ( DS - MUM ) ) ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( MUR ,RRSe ) / ( Max( ( DS * Max( CS,MLU ) ),MUM ) + Min( ( Min( MUR ,CS ) / Min( ( CS / Min( MUR ,RRSe ) ) ,MUM ) ) ,DS ) ) )", "obj1": 0.44223107569721115, "obj2": 0.39617211208093484}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_Mem_Server ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( MUR / CS ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / ( ( Min( MUR ,DS ) - CS ) - RRSe ) ) ) ) ,( ( ( ( RRSe - MLU ) * MUM ) / MUR ) / ( RMSe * MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5896414342629482, "obj2": 0.23243565946002676}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - ( AMS * ( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) / RMSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + ( RCSe / RMSe ) ) ) ) - Min( ( ( Max( MUC,MUR ) / DS ) / CS ) ,RMSe ) ) )", "obj1": 0.9143426294820717, "obj2": 0.037275748703344894}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( Max( CRS,PN ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - DS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * Max( ( ( RRSe / ( ( MUR - MUC ) - Min( CS ,MLU ) ) ) / RMSe ),RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21300923807719163}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / PN ) / PN ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( CRS * FirstVNF_CPU_Server ) / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( ( CS / MUM ) / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( CS - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9302788844621513, "obj2": 0.025784259995431536}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,( FirstVNF_RAM / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ARS * FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server + Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( BR + DDR ) - ( Max( FirstVNF_CPU_Server,AMS ) * Min( ACS ,RRS ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU / MUR ) * Max( CS,( ( Max( RCSe,RRSe ) - Min( CS ,( CS + CS ) ) ) / DS ) ) ) * ( RMSe / CS ) ) * ( ( CS / RRSe ) + CS ) )", "obj1": 0.37250996015936255, "obj2": 0.46709347420172986}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / ( AMS / ARS ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * Min( DS ,( CS / MUM ) ) ) * ( ( CS / ( MUC * ( ( MUM + DS ) - DS ) ) ) + MUM ) )", "obj1": 0.398406374501992, "obj2": 0.424488599033907}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( ( FirstVNF_CPU_Server / ( ( DDR / PN ) * Const ) ),( ARS / BR ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUR + MUR ) * ( MUC / CS ) ) - ( ( Min( MLU ,CS ) * DS ) + CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6008423175687676}, {"determining": "( ( PN - FirstVNF_CPU ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem,BR ),( ( FirstVNF_Mem / ( Const / FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RRSe - MUC ) * ( CS * Min( ( RRSe * ( RRSe - ( Min( DS ,( CS / MUM ) ) + RRSe ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( Max( DDR,ACS ) - Max( PN,ACS ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,Max( MUM,Max( CS,RCSe ) ) ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( MUM,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4541832669322709, "obj2": 0.3389102003854998}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),Max( CRS,BR ) ) / Min( ( FirstVNF_RAM_Server / ( ACS * FirstVNF_Mem ) ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RMSe,RRSe ) * MUR ) - CS ) - ( MUM - MLU ) ) ,RRSe ) ) * DS ) * ( Min( MLU ,Min( Min( MUR ,RRSe ) ,Max( MUM,( MUR + RMSe ) ) ) ) + Min( DS ,( RRSe + RCSe ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5702900034424689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,Max( PN,FirstVNF_Mem_Server ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) + ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( RMSe - MUR ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.1853380654733106}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( DS,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( Min( RMSe ,DS ) * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08139284840993491}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20916334661354583, "obj2": 0.6588366990988367}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( ( Max( ( Min( Min( MDR ,ARS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - Max( ( CRS * CRS ),( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * Max( ( ( ACS * FirstVNF_Mem ) + FirstVNF_RAM_Server ),Min( Min( MDR ,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) - ACS ) ) )", "choosing": "( Max( Max( MUR,Min( MUC ,( ( Max( Min( RCSe ,CS ),MUC ) / Max( Max( RMSe,RMSe ),RMSe ) ) - CS ) ) ),DS ) * ( ( Min( ( ( ( CS + MUC ) - CS ) - CS ) ,RRSe ) - Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.9661354581673307, "obj2": 0.01201639025653935}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),( FirstVNF_RAM_Server / ACS ) ) ),MDR ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( MUC + MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - ( DS / RMSe ) )", "obj1": 0.5657370517928287, "obj2": 0.2513735858951602}, {"determining": "( ( Max( ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MLU - ( Max( Max( ( MUM * MUM ),( MLU / CS ) ),DS ) - DS ) ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( RCSe - CS ) ) ) * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( ( DS + ( ( DS + RCSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.6912350597609562, "obj2": 0.1626778334186237}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - Min( RCSe ,CS ) ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( Max( MUC,RMSe ),DS ) ) - MUC ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.7649402390438247, "obj2": 0.10279908339118302}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( Const * ( PN / ( Max( BR,Min( FirstVNF_Mem_Server ,ACS ) ) * FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN / MDR ) / MDR ) ) / DDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.4903820097406755}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),DDR ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUC - CS ) / ( MUM / RRSe ) ),Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RMSe ) * MUR ) ) ) ) ) - CS ) )", "obj1": 0.23306772908366533, "obj2": 0.6270463644393742}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem / ( ( MDR + ( FirstVNF_RAM_Server / CRS ) ) / PN ) ) ) - ( BR + AMS ) )", "choosing": "Min( ( RMSe / Max( ( DS - MLU ),( ( MUC - MLU ) * ( MUM / RRSe ) ) ) ) ,Min( Min( MUC ,MLU ) ,( MUC * ( RCSe - ( Max( ( RCSe * MLU ),Max( DS,( CS / RCSe ) ) ) + ( MUC * ( ( MUM + DS ) - MLU ) ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.5798435448657994}, {"determining": "( ( ( AMS * ( RRS + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) - ( ( PN - BR ) + FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server - CRS ) ) - ( Min( DDR ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUC ) ,Min( Max( MUM,( Min( RMSe ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,MUR ),( CS + MUC ) ) ,( RRSe - ( RRSe + Min( RRSe ,MUC ) ) ) ) ,RRSe ) ) * Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.7290836653386454, "obj2": 0.12017126621637013}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( Max( ( ( FirstVNF_Mem_Server + ACS ) / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9780876494023905, "obj2": 0.007477330661837522}, {"determining": "( ( FirstVNF_Mem_Server * ACS ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),( FirstVNF_CPU_Server + PN ) ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( ( MUC * RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( ( RCSe - ( ( CS / CS ) / RCSe ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.50199203187251, "obj2": 0.29716455333759095}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( ( RRS + FirstVNF_CPU_Server ) - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.2730104037758746}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7513415433049849}, {"determining": "( ( ( Max( AMS,( BR - ARS ) ) - ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RRSe ,( ( Min( MLU ,Min( DS ,RCSe ) ) * ( ( MUC - CS ) * RCSe ) ) - RRSe ) ) * RRSe ) * CS ) )", "obj1": 0.601593625498008, "obj2": 0.22547282233859112}, {"determining": "( Max( MRS,Min( PN ,Min( RRS ,( ( MRS * CRS ) / Max( FirstVNF_CPU,Min( FirstVNF_CPU ,MDR ) ) ) ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( DDR * BR ) ) * Min( PN ,Max( ( ACS / PN ),MDR ) ) ) ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( MLU * RRSe ) + Min( RCSe ,Max( ( RMSe / ( RCSe - CS ) ),( RMSe * Min( MUM ,MUC ) ) ) ) ) * ( CS + CS ) ) )", "obj1": 0.796812749003984, "obj2": 0.0759877481110995}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6394422310756972, "obj2": 0.19181247988586894}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * FirstVNF_CPU_Server ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - ( RRSe + Min( DS ,( MLU - MUR ) ) ) ) )", "obj1": 0.9043824701195219, "obj2": 0.041097135350251605}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( PN - BR ) * FirstVNF_CPU_Server ) * ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( MLU * RRSe ) + ( RMSe * MLU ) ),Max( Min( MLU ,RMSe ),( Min( ( ( DS - CS ) - CS ) ,RRSe ) + ( DS + ( ( MUR * RRSe ) + ( RMSe + RCSe ) ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06844455861838539}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( ( FirstVNF_Mem / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( DDR + Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / Min( RRSe ,MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( ( CS + MUC ) ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5190031445412996}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ) - ( ( ( ( AMS * RRS ) + DDR ) * ( BR - PN ) ) / Min( ( ( ( ( ( RRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ,Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) * DS ) * ( ( Min( RMSe ,RMSe ) + DS ) + Min( DS ,Max( ( MUM * RRSe ),RRSe ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.1776085094288443}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( Max( ( MDR * AMS ),RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / RRSe ) + ( RMSe / MLU ) ) + ( RCSe / ( RMSe / RCSe ) ) ) + ( MLU * ( RCSe / CS ) ) ) ,( MLU + Max( ( ( MUM / MUR ) + RMSe ),( ( CS + RCSe ) - ( MUR / MLU ) ) ) ) ) - RMSe ) * MUR ) - ( CS + ( Max( MLU,( Min( ( DS / Min( MLU ,MUR ) ) ,( RMSe + RMSe ) ) * MUR ) ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.620748560659204}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( Min( Min( FirstVNF_RAM ,AMS ) ,Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ) + Min( ( RRS + DDR ) ,DDR ) )", "choosing": "( ( ( ( MUM - MUR ) * Max( RRSe,RMSe ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( ( MUM / RCSe ) + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7356816087616516}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,Const ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) + ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MDR ) ) ) ) - ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( AMS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MUR ,Min( ( RMSe / MUR ) ,( RMSe + Max( RCSe,Min( Max( RMSe,DS ) ,( RMSe / MUM ) ) ) ) ) ) ,Min( Max( MUM,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.4362549800796813, "obj2": 0.3990602204766701}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6394422310756972, "obj2": 0.19181247988586894}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4341849258024401}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( RRSe / MUR ),RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.4844498755051843}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( ( ( AMS + ACS ) * ( ( ARS / DDR ) - RRS ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MRS ) / Max( ( FirstVNF_Mem_Server + PN ),CRS ) ) / MDR ) / PN ) ) ) - ( MRS + ( ( BR * MRS ) - FirstVNF_CPU ) ) )", "choosing": "( Max( ( Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) * ( DS * RMSe ) ),( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + Min( MUR ,( MUR - DS ) ) ) )", "obj1": 0.39641434262948205, "obj2": 0.42785206346155025}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + ACS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / Min( ( DDR + CRS ) ,DDR ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Max( ( CS * ( DS / ( Max( MUC,Min( MUM ,CS ) ) / ( MUC / MUC ) ) ) ),CS ) + RMSe ) ,( Min( ( CS / MUM ) ,Max( Max( RRSe,RRSe ),RRSe ) ) / CS ) )", "obj1": 0.6792828685258964, "obj2": 0.16834631913558865}, {"determining": "( Min( MDR ,MRS ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Min( CRS ,( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ) ) ) * ( ( RRS - MDR ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,Min( RMSe ,( Max( Max( RRSe,( MUR + MLU ) ),MLU ) - Min( ( CS + MUC ) ,Min( MUC ,Min( MUM ,DS ) ) ) ) ) ) / ( MUC / ( Min( RRSe ,MUM ) + ( ( ( DS * ( CS / CS ) ) * RMSe ) / MLU ) ) ) ) - ( ( ( RRSe + Min( RMSe ,( Min( MUM ,MUM ) - RCSe ) ) ) - MUC ) / MUM ) )", "obj1": 0.4960159362549801, "obj2": 0.2992926204568437}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5026468150072175}, {"determining": "( ( ( ( AMS * ( ACS + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) - ( ( Const - ( PN * PN ) ) * MDR ) ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * ( Max( RMSe,MUR ) / ( MLU + MUR ) ) ) ) ,( MUC + RCSe ) ) * ( DS * MUR ) ) ,( ( DS / MUR ) / ( RMSe * MLU ) ) ) - ( CS + Max( MUR,Max( ( ( MUR * MUC ) / Min( ( MUC - ( RCSe * RCSe ) ) ,Min( ( RMSe * MLU ) ,( RRSe + RMSe ) ) ) ),RRSe ) ) ) )", "obj1": 0.8764940239043825, "obj2": 0.044494765043611655}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( PN,( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( PN / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9561752988047809, "obj2": 0.017735107936938336}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / DDR ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) + ( BR - PN ) ) / ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RRSe,Min( Max( ( RRSe / ( DS / RMSe ) ),DS ) ,RRSe ) ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.4758297940888547}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Min( Min( MDR ,ACS ) ,PN ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( ( ( DS - CS ) - DS ) * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( CS / MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - CS ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,Min( ( ( ( CS + MUR ) - CS ) - CS ) ,RRSe ) ),( CS + MUC ) ) ) )", "obj1": 0.545816733067729, "obj2": 0.2655091098340516}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem,BR ),( ( FirstVNF_Mem / ( Const * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( FirstVNF_CPU - ( DDR - Const ) ) + ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,MRS ) ),Max( CRS,Min( AMS ,FirstVNF_RAM ) ) ) ) ,( ( ( ( PN / ( RRS / CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - ( MUC / Max( MUR,MUM ) ) ) * ( CS * ( RMSe - ( MLU * DS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( Min( DDR ,ACS ) + ( ( ( Max( MDR,( ( FirstVNF_Mem_Server / PN ) / BR ) ) * AMS ) * ( ACS * DDR ) ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( CRS + Const ) ) ) ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( MLU * Max( RCSe,RMSe ) ) ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) / DS ) * ( Min( ( MUC - ( ( ( RCSe - MUC ) - ( DS + Min( CS ,MUM ) ) ) * Min( DS ,( Max( CS,CS ) / RMSe ) ) ) ) ,MLU ) + Min( DS ,( CS / RRSe ) ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6537194845544111}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( MUC * MUC ) * Min( RMSe ,( Min( Min( DS ,( DS + RMSe ) ) ,Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ) / Min( RMSe ,( Max( MUM,MUR ) + RMSe ) ) ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5278884462151394, "obj2": 0.27956069839495684}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( CS * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5026468150072175}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5976095617529881, "obj2": 0.2267630383017986}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + BR ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR / PN ) ) / ( ( ( FirstVNF_Mem - FirstVNF_Mem ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) / Const ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( ( RMSe / ( RMSe / MUC ) ) - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUC ) ) ) ) + RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MRS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / ( RRS - ( BR * Max( AMS,FirstVNF_Mem_Server ) ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.4948334159911201}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * Max( Min( MUM ,MUR ),Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) / ( RMSe * MLU ) ) ) - ( CS + Min( MUC ,RMSe ) ) )", "obj1": 0.8764940239043825, "obj2": 0.044494765043611655}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( MUM / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0723723353870541}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( MUM ,( RRSe - ( RRSe + Min( DS ,( RMSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5190031445412996}, {"determining": "( ( Max( ( ( FirstVNF_Mem_Server + ACS ) / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / CRS ) / FirstVNF_Mem ),( FirstVNF_Mem / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( Const * FirstVNF_CPU_Server ) / PN ) ) ) )", "choosing": "( Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( Max( Max( RCSe,RMSe ),( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Max( ( ( RCSe * MUC ) / MUC ),MUR ),( CS + MUC ) ) ) - Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( MUC + MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.004542087109025408}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( MUC + MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5139442231075697, "obj2": 0.29031449287290967}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN + ( Min( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ),( DDR * FirstVNF_CPU ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RCSe ) ) ,MUC ) / Max( ( RMSe * MLU ),( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ) ) ) ,( ( DS + RMSe ) * MLU ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( ( CS / RRSe ) + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MLU - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,Max( Max( RRSe,RRSe ),RRSe ) ) - CS ) )", "obj1": 0.6852589641434262, "obj2": 0.1659410811781961}], "32": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - ( FirstVNF_RAM_Server / Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) ) )", "choosing": "( ( ( Max( RMSe,RRSe ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + ( MUR / RCSe ) ) ) ) ,Max( ( DS + ( ( RCSe + DS ) + RCSe ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( CRS - FirstVNF_RAM_Server ) - MDR ) * PN ) - Min( Min( MDR ,ACS ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Min( MUR ,( Min( CS ,RRSe ) + MUC ) ) ) * ( CS + Min( RRSe ,MUC ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Max( Max( MUC,Max( ( MUC * MUC ),( DS + MLU ) ) ),Max( Min( MLU ,RMSe ),( CS + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3625431821037016}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( ( ( Max( RMSe,RRSe ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( ( DS + ( ( RCSe + DS ) + RCSe ) ),CS ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.0536267996778627}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,( FirstVNF_RAM / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ARS * FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server + Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( BR + DDR ) - ( Max( FirstVNF_CPU_Server,AMS ) * Min( ACS ,RRS ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU / MUR ) * Max( CS,( ( Max( RCSe,RRSe ) - Min( CS ,( CS + CS ) ) ) / DS ) ) ) * ( RMSe / CS ) ) * ( ( CS / RRSe ) + CS ) )", "obj1": 0.37250996015936255, "obj2": 0.46709347420172986}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( MDR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / Max( ( PN + FirstVNF_Mem_Server ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + DS ) ) ) - ( CS + ( Min( ( Max( RMSe,DS ) - ( DS - MUM ) ) ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN + ( Min( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ),( DDR * FirstVNF_CPU ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RCSe ) ) ,MUC ) / Max( ( RMSe * MLU ),( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ) ) ) ,( ( DS + RMSe ) * MLU ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( PN - BR ) * FirstVNF_CPU_Server ) * ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( MLU * RRSe ) + ( RMSe * MLU ) ),Max( Min( MLU ,RMSe ),( Min( ( ( DS - CS ) - CS ) ,RRSe ) + ( DS + ( ( MUR * RRSe ) + ( RMSe + RCSe ) ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06844455861838539}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( Max( CRS,PN ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - DS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * Max( ( ( RRSe / ( ( MUR - MUC ) - Min( CS ,MLU ) ) ) / RMSe ),RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21300923807719163}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5730658850037293}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( MUC * MUC ) * Min( RMSe ,( Min( Min( DS ,( DS + RMSe ) ) ,Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ) / Min( RMSe ,( Max( MUM,MUR ) + RMSe ) ) ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5278884462151394, "obj2": 0.27956069839495684}, {"determining": "( ( FirstVNF_CPU - ( DDR - Const ) ) + ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,MRS ) ),Max( CRS,Min( AMS ,FirstVNF_RAM ) ) ) ) ,( ( ( ( PN / ( RRS / CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - ( MUC / Max( MUR,MUM ) ) ) * ( CS * ( RMSe - ( MLU * DS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( ( CRS + BR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Max( MDR,( Const + Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * Max( Min( MUM ,RMSe ),( RMSe - MUR ) ) ) ) ,( MUC + RCSe ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) / ( RMSe * MLU ) ) ) - ( CS + Min( MUC ,RMSe ) ) )", "obj1": 0.8764940239043825, "obj2": 0.044494765043611655}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( RRSe / MUR ),RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.4844498755051843}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * FirstVNF_CPU_Server ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - ( RRSe + Min( DS ,( MLU - MUR ) ) ) ) )", "obj1": 0.9043824701195219, "obj2": 0.041097135350251605}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,Max( PN,FirstVNF_Mem_Server ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) + ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( RMSe - MUR ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.1853380654733106}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ) - ( ( ( ( AMS * RRS ) + DDR ) * ( BR - PN ) ) / Min( ( ( ( ( ( RRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ,Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) * DS ) * ( ( Min( RMSe ,RMSe ) + DS ) + Min( DS ,Max( ( MUM * RRSe ),RRSe ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.1776085094288443}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),Max( CRS,BR ) ) / Min( ( FirstVNF_RAM_Server / ( ACS * FirstVNF_Mem ) ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RMSe,RRSe ) * MUR ) - CS ) - ( MUM - MLU ) ) ,RRSe ) ) * DS ) * ( Min( MLU ,Min( Min( MUR ,RRSe ) ,Max( MUM,( MUR + RMSe ) ) ) ) + Min( DS ,( RRSe + RCSe ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5702900034424689}, {"determining": "( Max( RRS,CRS ) - ( ( ( ( ( ( RRS / MDR ) - ARS ) * Const ) + ACS ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,RRS ) ) / ( Min( AMS ,ARS ) / ( ( ( FirstVNF_CPU / PN ) - MDR ) / ( ( FirstVNF_RAM + FirstVNF_RAM ) * DDR ) ) ) ) )", "choosing": "( Max( MLU,( MUM * MUC ) ) - Min( ( Min( Min( Min( DS ,( RCSe * Min( MUC ,MLU ) ) ) ,MUM ) ,MUM ) * Min( ( RCSe + RRSe ) ,( ( ( RCSe / MUC ) * Max( RCSe,( RCSe + RCSe ) ) ) / MUR ) ) ) ,( ( ( ( Max( Min( MUR ,DS ),( MLU * MUR ) ) * MUR ) + ( MUM - ( MUR - Max( DS,RRSe ) ) ) ) + ( RRSe * ( ( ( CS - RCSe ) / ( RRSe + RCSe ) ) / Min( DS ,( RCSe * RRSe ) ) ) ) ) / ( RMSe + ( MUC - MUC ) ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.14425745894409595}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( Max( FirstVNF_Mem_Server,PN ) * RRS ) / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / Min( RMSe ,MLU ) ) ) - Min( ( RRSe / ( MLU * MUR ) ) ,MUC ) )", "obj1": 0.4103585657370518, "obj2": 0.4147988992174138}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( Min( DDR ,ACS ) + ( ( ( Max( MDR,( ( FirstVNF_Mem_Server / PN ) / BR ) ) * AMS ) * ( ACS * DDR ) ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( CRS + Const ) ) ) ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( MLU * Max( RCSe,RMSe ) ) ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) / DS ) * ( Min( ( MUC - ( ( ( RCSe - MUC ) - ( DS + Min( CS ,MUM ) ) ) * Min( DS ,( Max( CS,CS ) / RMSe ) ) ) ) ,MLU ) + Min( DS ,( CS / RRSe ) ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6537194845544111}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / Max( ( Const * ( PN / MRS ) ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MUR * DS ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ) ) ) ,( ( CS / MUR ) / ( Min( MUC ,MUC ) + ( RRSe + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6363851473868682}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem,BR ),( ( FirstVNF_Mem / ( Const * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5120412905569015}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( ( FirstVNF_CPU_Server / ( ( DDR / PN ) * Const ) ),( ARS / BR ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUR + MUR ) * ( MUC / CS ) ) - ( ( Min( MLU ,CS ) * DS ) + CS ) )", "obj1": 0.2589641434262948, "obj2": 0.6008423175687676}, {"determining": "( ( Max( ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MLU - ( Max( Max( ( MUM * MUM ),( MLU / CS ) ),DS ) - DS ) ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MUR ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( RCSe - CS ) ) ) * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( ( DS + ( ( DS + RCSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.6912350597609562, "obj2": 0.1626778334186237}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_CPU_Server ) ) / ( PN + ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - BR ) ) ) )", "choosing": "( ( ( Min( ( ( DS - MUM ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( ( RRSe / ( Max( Max( ( RCSe * MUR ),( MLU + MUC ) ),MUR ) - ( DS * Min( Max( DS,CS ) ,( RMSe + MUR ) ) ) ) ) / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( Const * ( PN / ( Max( BR,Min( FirstVNF_Mem_Server ,ACS ) ) * FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN / MDR ) / MDR ) ) / DDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.4903820097406755}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( Const / MDR ) / MDR ) / ( AMS / ARS ) ) / Max( DDR,FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( ( CS - Min( MUR ,DS ) ) ,MLU ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * ( DS / ( MUM * Min( CS ,MLU ) ) ) ) * ( ( CS / ( MUC * ( ( ( DS * CS ) + DS ) - DS ) ) ) + MUM ) )", "obj1": 0.4163346613545817, "obj2": 0.40986355531308305}, {"determining": "( ( ( CRS * CRS ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( ACS + BR ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( Min( Max( RCSe,RMSe ) ,( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Min( MLU ,DS ) / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9282868525896414, "obj2": 0.026466065998480327}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,RRS ),BR ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Max( Max( ( FirstVNF_Mem - ( DDR / FirstVNF_RAM_Server ) ),FirstVNF_CPU ),Const ) ) * ( ( RRS - CRS ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,MUC ) / ( RRSe / MUC ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Max( DS,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4541832669322709, "obj2": 0.3389102003854998}, {"determining": "( Max( FirstVNF_RAM,Min( PN ,Min( RRS ,( ( MRS * CRS ) / Max( FirstVNF_CPU,Min( FirstVNF_CPU ,MDR ) ) ) ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( ( RRS / BR ) ,MDR ),( DDR * BR ) ) * ( ( PN / MDR ) + MDR ) ) ) * PN ) - Min( Min( ( FirstVNF_CPU / PN ) ,ACS ) ,PN ) ) )", "choosing": "( ( ( MUR * Max( RRSe,RMSe ) ) / ( RRSe * MUR ) ) * ( CS * ( MUR + RRSe ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10606557193020519}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6394422310756972, "obj2": 0.19181247988586894}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7513415433049849}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,DS ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.6687275079017725}, {"determining": "( Min( Min( FirstVNF_RAM ,AMS ) ,Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ) + Min( ( RRS + DDR ) ,DDR ) )", "choosing": "( ( ( ( MUM - MUR ) * Max( RRSe,RMSe ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( ( MUM / RCSe ) + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7356816087616516}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RRSe ,( ( ( ( DS - RMSe ) / RRSe ) * ( ( MUC - CS ) * RCSe ) ) - RRSe ) ) * RRSe ) * CS ) )", "obj1": 0.5836653386454184, "obj2": 0.2374910938384829}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_RAM ) ) / Max( ( Const * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7574236819869734}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,Min( ( ( DS - CS ) - CS ) ,RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( Max( MRS,ACS ) - Max( ( BR / ( ( ( ( ( MDR / FirstVNF_RAM_Server ) + ACS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem / DDR ) ) + ( FirstVNF_RAM - ( BR / PN ) ) ) ),AMS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( Min( ( MUR / CS ) ,( ( RMSe + MUM ) / ( CS / MUR ) ) ),( ( MUC * ( ( RMSe * Min( ( RMSe * MUC ) ,CS ) ) / MLU ) ) * RRSe ) ) )", "obj1": 0.46613545816733065, "obj2": 0.33283304298461863}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( ( ( ( AMS * ( ACS + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) - ( ( Const - ( PN * PN ) ) * MDR ) ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * ( Max( RMSe,MUR ) / ( MLU + MUR ) ) ) ) ,( MUC + RCSe ) ) * ( DS * MUR ) ) ,( ( DS / MUR ) / ( RMSe * MLU ) ) ) - ( CS + Max( MUR,Max( ( ( MUR * MUC ) / Min( ( MUC - ( RCSe * RCSe ) ) ,Min( ( RMSe * MLU ) ,( RRSe + RMSe ) ) ) ),RRSe ) ) ) )", "obj1": 0.8764940239043825, "obj2": 0.044494765043611655}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6394422310756972, "obj2": 0.19181247988586894}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( DDR - MDR ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) - ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( Max( CS,RMSe ) + MUR ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4341849258024401}, {"determining": "( Max( ( ( ARS / MDR ) / ( Min( Max( Min( CRS ,FirstVNF_RAM_Server ),MDR ) ,PN ) + ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ),AMS ) - Max( MRS,ACS ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( Max( RMSe,MUR ) ,( DS / MUC ) ) ) ,( MUC / ( RRSe + MLU ) ) ) - Max( ( MUR + DS ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5557768924302788, "obj2": 0.2612410758243985}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + ACS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / Min( ( DDR + CRS ) ,DDR ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Max( ( CS * ( DS / ( Max( MUC,Min( MUM ,CS ) ) / ( MUC / MUC ) ) ) ),CS ) + RMSe ) ,( Min( ( CS / MUM ) ,Max( Max( RRSe,RRSe ),RRSe ) ) / CS ) )", "obj1": 0.6792828685258964, "obj2": 0.16834631913558865}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * MRS ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( MUM / ( CS / Max( RCSe,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUM,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe / MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0723723353870541}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( MUC + MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5139442231075697, "obj2": 0.29031449287290967}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Const * AMS ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - Min( RCSe ,CS ) ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( Max( MUC,RMSe ),DS ) ) - MUC ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( ( Min( ( ( MUC * MLU ) - MLU ) ,MUR ) - CS ) ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.7689243027888446, "obj2": 0.10157032548657488}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / DDR ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) + ( BR - PN ) ) / ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RRSe,Min( Max( ( RRSe / ( DS / RMSe ) ),DS ) ,RRSe ) ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.4758297940888547}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + FirstVNF_Mem ) + ACS ) + Min( ACS ,RRS ) )", "choosing": "( Min( ( MLU + RCSe ) ,RCSe ) * ( MUR * CS ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( AMS * ( Max( MDR,( ACS / FirstVNF_Mem ) ) / Max( FirstVNF_RAM_Server,Min( CRS ,FirstVNF_Mem_Server ) ) ) ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( ( RCSe / ( RMSe * MUM ) ),RRSe ) ) * CS ) ) ,( ( MUC + MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) + ( MLU * RRSe ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5139442231075697, "obj2": 0.29031449287290967}, {"determining": "( ( ACS * ( ( PN - BR ) + FirstVNF_RAM_Server ) ) * ( ( ( FirstVNF_CPU_Server - CRS ) * PN ) - Min( Max( ( BR - Min( PN ,Max( ( ACS / PN ),MDR ) ) ),MDR ) ,Const ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( RRSe / MUR ),RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( MUC - RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Max( MLU,( Max( ( ( MLU * MUR ) * RCSe ),MUM ) + Min( ( ( MLU / RMSe ) * ( DS - DS ) ) ,Min( MUR ,RRSe ) ) ) ) + DS ) ) )", "obj1": 0.7788844621513944, "obj2": 0.08781441291666879}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / Min( Min( ARS ,AMS ) ,( ( ( ( ( RRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6589474244660749}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_Mem_Server ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( MUR / CS ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / ( ( Min( MUR ,DS ) - CS ) - RRSe ) ) ) ) ,( ( ( ( RRSe - MLU ) * MUM ) / MUR ) / ( RMSe * MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5896414342629482, "obj2": 0.23243565946002676}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + BR ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR / PN ) ) / ( ( ( FirstVNF_Mem - FirstVNF_Mem ) - Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) / Const ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( ( RMSe / ( RMSe / MUC ) ) - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUC ) ) ) ) + RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( Min( BR ,ACS ) + ( ( ( AMS * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) * MDR ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( MUC - CS ) - CS ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / DS ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.7330677290836654, "obj2": 0.11864473498019229}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.300796812749004, "obj2": 0.5556305003490473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MRS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / ( RRS - ( BR * Max( AMS,FirstVNF_Mem_Server ) ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.4948334159911201}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5039840637450199, "obj2": 0.29704281869245636}, {"determining": "( ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2410358565737052, "obj2": 0.6239923855155829}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( ( RRS + FirstVNF_CPU_Server ) - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.2730104037758746}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),( FirstVNF_RAM_Server / ACS ) ) ),MDR ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( MUC + MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - ( DS / RMSe ) )", "obj1": 0.5657370517928287, "obj2": 0.2513735858951602}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( ( CS / RRSe ) + MLU ) + ( DS * RRSe ) ) ,MUC ) / Max( ( ( MLU - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,Max( Max( RRSe,RRSe ),RRSe ) ) - CS ) )", "obj1": 0.6852589641434262, "obj2": 0.1659410811781961}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR + PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( AMS * FirstVNF_Mem_Server ) / MDR ) / CRS ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS / MUR ) / ( RMSe + MLU ) ) ,( ( DS * RMSe ) + Min( Min( MUR ,( Max( ( DS + RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + ( ( ( DS - RMSe ) + Max( MLU,RRSe ) ) / MUM ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.26693227091633465, "obj2": 0.597875877735895}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU / PN ) ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - ( AMS * ( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "Min( ( Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) / RMSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + ( RCSe / RMSe ) ) ) ) - Min( ( ( Max( MUC,MUR ) / DS ) / CS ) ,RMSe ) ) )", "obj1": 0.9143426294820717, "obj2": 0.037275748703344894}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( Min( RMSe ,DS ) * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7868525896414342, "obj2": 0.07999558897024295}, {"determining": "( ( ( Max( AMS,( BR - ARS ) ) - ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RRSe ,( ( Min( MLU ,Min( DS ,RCSe ) ) * ( ( MUC - CS ) * RCSe ) ) - RRSe ) ) * RRSe ) * CS ) )", "obj1": 0.601593625498008, "obj2": 0.22547282233859112}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( PN,( DDR * BR ) ) * ( ( ( PN / PN ) / FirstVNF_Mem_Server ) + Max( MDR,FirstVNF_Mem_Server ) ) ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( DDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( ( DDR / FirstVNF_CPU ) - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( RMSe - MUR ) ) ) ) ) ) - CS ) - Min( CS ,( MLU + DS ) ) )", "obj1": 0.950199203187251, "obj2": 0.02002847586487091}, {"determining": "( Max( ( MDR * AMS ),RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / RRSe ) + ( RMSe / MLU ) ) + ( RCSe / ( RMSe / RCSe ) ) ) + ( MLU * ( RCSe / CS ) ) ) ,( MLU + Max( ( ( MUM / MUR ) + RMSe ),( ( CS + RCSe ) - ( MUR / MLU ) ) ) ) ) - RMSe ) * MUR ) - ( CS + ( Max( MLU,( Min( ( DS / Min( MLU ,MUR ) ) ,( RMSe + RMSe ) ) * MUR ) ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.620748560659204}, {"determining": "( ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_RAM_Server ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( ( ACS - ACS ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( Min( MUR ,DS ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe / MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.27333246573521514}], "33": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( DDR - MDR ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) - ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - ( FirstVNF_RAM_Server / Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) ) )", "choosing": "( ( ( Max( RMSe,RRSe ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + ( MUR / RCSe ) ) ) ) ,Max( ( DS + ( ( RCSe + DS ) + RCSe ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( PN / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( ( ( MUC - CS ) * RCSe ) ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,( FirstVNF_RAM / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ARS * FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server + Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( BR + DDR ) - ( Max( FirstVNF_CPU_Server,AMS ) * Min( ACS ,RRS ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU / MUR ) * Max( CS,( ( Max( RCSe,RRSe ) - Min( CS ,( CS + CS ) ) ) / DS ) ) ) * ( RMSe / CS ) ) * ( ( CS / RRSe ) + CS ) )", "obj1": 0.37250996015936255, "obj2": 0.46709347420172986}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_CPU_Server / Min( RRS ,BR ) ) ) - Max( AMS,( PN / Max( ( Min( ( CRS * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( ( MUC * MLU ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe / ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3625431821037016}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( MDR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / Max( ( PN + FirstVNF_Mem_Server ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + DS ) ) ) - ( CS + ( Min( ( Max( RMSe,DS ) - ( DS - MUM ) ) ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4317608473832543}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN + ( Min( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ),( DDR * FirstVNF_CPU ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RCSe ) ) ,MUC ) / Max( ( RMSe * MLU ),( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ) ) ) ,( ( DS + RMSe ) * MLU ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( PN - BR ) * FirstVNF_CPU_Server ) * ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( MLU * RRSe ) + ( RMSe * MLU ) ),Max( Min( MLU ,RMSe ),( Min( ( ( DS - CS ) - CS ) ,RRSe ) + ( DS + ( ( MUR * RRSe ) + ( RMSe + RCSe ) ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06844455861838539}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( Max( CRS,PN ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - DS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * Max( ( ( RRSe / ( ( MUR - MUC ) - Min( CS ,MLU ) ) ) / RMSe ),RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21300923807719163}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ACS / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5730658850037293}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Min( DS ,Max( RRSe,RMSe ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9920318725099602, "obj2": 0.0032633881080851366}, {"determining": "( ( ( CRS * CRS ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( ACS + BR ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( Min( Max( RCSe,RMSe ) ,( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Min( MLU ,DS ) / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9282868525896414, "obj2": 0.026466065998480327}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN + MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * DDR ),FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * CS ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * ( RRSe * ( Min( MUC ,( ( ( CS + DS ) - DS ) - ( MUC * ( RCSe - MUM ) ) ) ) - RRSe ) ) ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10112830129113093}, {"determining": "( ( FirstVNF_CPU - ( DDR - Const ) ) + ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,MRS ) ),Max( CRS,Min( AMS ,FirstVNF_RAM ) ) ) ) ,( ( ( ( PN / ( RRS / CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - ( MUC / Max( MUR,MUM ) ) ) * ( CS * ( RMSe - ( MLU * DS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( ( ( Max( RMSe,RRSe ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( ( DS + ( ( RCSe + DS ) + RCSe ) ),CS ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.0536267996778627}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,RRS ),BR ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Max( Max( ( FirstVNF_Mem - ( DDR / FirstVNF_RAM_Server ) ),FirstVNF_CPU ),Const ) ) * ( ( RRS - CRS ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,MUC ) / ( RRSe / MUC ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Max( DS,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4541832669322709, "obj2": 0.3389102003854998}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( Max( RRS,CRS ) - ( ( ( ( ( ( RRS / MDR ) - ARS ) * Const ) + ACS ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,RRS ) ) / ( Min( AMS ,ARS ) / ( ( ( FirstVNF_CPU / PN ) - MDR ) / ( ( FirstVNF_RAM + FirstVNF_RAM ) * DDR ) ) ) ) )", "choosing": "( Max( MLU,( MUM * MUC ) ) - Min( ( Min( Min( Min( DS ,( RCSe * Min( MUC ,MLU ) ) ) ,MUM ) ,MUM ) * Min( ( RCSe + RRSe ) ,( ( ( RCSe / MUC ) * Max( RCSe,( RCSe + RCSe ) ) ) / MUR ) ) ) ,( ( ( ( Max( Min( MUR ,DS ),( MLU * MUR ) ) * MUR ) + ( MUM - ( MUR - Max( DS,RRSe ) ) ) ) + ( RRSe * ( ( ( CS - RCSe ) / ( RRSe + RCSe ) ) / Min( DS ,( RCSe * RRSe ) ) ) ) ) / ( RMSe + ( MUC - MUC ) ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.14425745894409595}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / Max( ( Const * ( PN / MRS ) ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MUR * DS ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ) ) ) ,( ( CS / MUR ) / ( Min( MUC ,MUC ) + ( RRSe + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6363851473868682}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( ( MUR / CS ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( Min( DDR ,ACS ) + ( ( ( Max( MDR,( ( FirstVNF_Mem_Server / PN ) / BR ) ) * AMS ) * ( ACS * DDR ) ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,FirstVNF_Mem ),( MDR / ( CRS + Const ) ) ) ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( MLU * Max( RCSe,RMSe ) ) ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) / DS ) * ( Min( ( MUC - ( ( ( RCSe - MUC ) - ( DS + Min( CS ,MUM ) ) ) * Min( DS ,( Max( CS,CS ) / RMSe ) ) ) ) ,MLU ) + Min( DS ,( CS / RRSe ) ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6537194845544111}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_Mem_Server ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( MUR / CS ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / ( ( Min( MUR ,DS ) - CS ) - RRSe ) ) ) ) ,( ( ( ( RRSe - MLU ) * MUM ) / MUR ) / ( RMSe * MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5896414342629482, "obj2": 0.23243565946002676}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( Max( FirstVNF_Mem_Server,PN ) * RRS ) / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / Min( RMSe ,MLU ) ) ) - Min( ( RRSe / ( MLU * MUR ) ) ,MUC ) )", "obj1": 0.4103585657370518, "obj2": 0.4147988992174138}, {"determining": "( ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2410358565737052, "obj2": 0.6239923855155829}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( Max( ( RRS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem,BR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),RCSe ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUM ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5657370517928287, "obj2": 0.2505344997792117}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( Const / MDR ) / MDR ) / ( AMS / ARS ) ) / Max( DDR,FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( ( CS - Min( MUR ,DS ) ) ,MLU ) * Max( ( Max( RRSe,RMSe ) * MUR ),RMSe ) ) * ( DS / ( MUM * Min( CS ,MLU ) ) ) ) * ( ( CS / ( MUC * ( ( ( DS * CS ) + DS ) - DS ) ) ) + MUM ) )", "obj1": 0.4163346613545817, "obj2": 0.40986355531308305}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( ( Const - ( PN * PN ) ),MDR ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * ( Max( RMSe,MUR ) / ( MLU + MUR ) ) ) ) ,( MUC + RCSe ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) / ( RMSe * MLU ) ) ) - ( CS + Min( MUC ,RMSe ) ) )", "obj1": 0.9681274900398407, "obj2": 0.011117814580192545}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / Min( Min( ARS ,AMS ) ,( ( ( ( ( RRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6589474244660749}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,Max( PN,FirstVNF_Mem_Server ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) + ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( RMSe - MUR ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.1853380654733106}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( FirstVNF_CPU,MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( ( MUM / RRSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5089600605309815}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7513415433049849}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5219123505976095, "obj2": 0.2794459530739018}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MRS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / ( RRS - ( BR * Max( AMS,FirstVNF_Mem_Server ) ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.4948334159911201}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,DS ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.6687275079017725}, {"determining": "( ( ( Min( ( ACS + RRS ) ,AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ACS + DDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / Min( BR ,BR ) ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( FirstVNF_CPU / Min( Min( AMS ,MDR ) ,MRS ) ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU * MUR ) * Min( Min( MUR ,( Max( Max( RRSe,RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / ( ( Min( MUR ,DS ) - CS ) - RRSe ) ) ) ) ,( ( ( ( RRSe - MLU ) * MUM ) / MUR ) / ( RMSe * MLU ) ) ) - Min( CS ,( ( ( RCSe * MUR ) * RMSe ) + DS ) ) )", "obj1": 0.6354581673306773, "obj2": 0.20077122125157582}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( ( Max( AMS,( BR - ARS ) ) - ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RRSe ,( ( Min( MLU ,Min( DS ,RCSe ) ) * ( ( MUC - CS ) * RCSe ) ) - RRSe ) ) * RRSe ) * CS ) )", "obj1": 0.601593625498008, "obj2": 0.22547282233859112}, {"determining": "( Min( Min( FirstVNF_RAM ,AMS ) ,Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ) + Min( ( RRS + DDR ) ,DDR ) )", "choosing": "( ( ( ( MUM - MUR ) * Max( RRSe,RMSe ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( ( MUM / RCSe ) + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7356816087616516}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_RAM ) ) / Max( ( Const * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7574236819869734}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ACS + ( DDR * RRS ) ) ) ) * PN ) - Max( ( Const - Min( PN ,PN ) ),MRS ) ) )", "choosing": "( ( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) - ( ( MUC + MUR ) / ( Min( ( CS / MUM ) ,CS ) / CS ) ) ) - ( Max( RRSe,Min( DS ,( ( MUM + ( ( CS / MLU ) + ( RMSe * MLU ) ) ) * DS ) ) ) + ( MUC / MUM ) ) )", "obj1": 0.8784860557768924, "obj2": 0.04346386987985258}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( Max( ( Const * RRS ),( DDR * BR ) ) * FirstVNF_CPU_Server ) ) * PN ) - ( DDR - ( PN + ARS ) ) ) - Max( AMS,( PN / ( FirstVNF_Mem - ( FirstVNF_CPU_Server * Min( ( FirstVNF_Mem - ( ARS + ACS ) ) ,CRS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.043269962731386384}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4103585657370518, "obj2": 0.4147988992174138}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( FirstVNF_CPU_Server + ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( MUR + ( RMSe + RCSe ) ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4641434262948207, "obj2": 0.33220441710464654}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ) - ( ( ( ( AMS * RRS ) + DDR ) * ( BR - PN ) ) / Min( ( ( ( ( ( RRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ,Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) * DS ) * ( ( Min( RMSe ,RMSe ) + DS ) + Min( DS ,Max( ( MUM * RRSe ),RRSe ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.1776085094288443}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( Const * ( PN / ( Max( BR,Min( FirstVNF_Mem_Server ,ACS ) ) * FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN / MDR ) / MDR ) ) / DDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.4903820097406755}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),Max( CRS,BR ) ) / Min( ( FirstVNF_RAM_Server / ( ACS * FirstVNF_Mem ) ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RMSe,RRSe ) * MUR ) - CS ) - ( MUM - MLU ) ) ,RRSe ) ) * DS ) * ( Min( MLU ,Min( Min( MUR ,RRSe ) ,Max( MUM,( MUR + RMSe ) ) ) ) + Min( DS ,( RRSe + RCSe ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5702900034424689}, {"determining": "( ( ACS * ( DDR + AMS ) ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( DDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.8625498007968128, "obj2": 0.050442468665349696}, {"determining": "( ( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( RRS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem,BR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RCSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( Min( RMSe ,DS ) * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21115537848605578, "obj2": 0.6545165185445901}, {"determining": "( Max( ( MDR * AMS ),RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / RRSe ) + ( RMSe / MLU ) ) + ( RCSe / ( RMSe / RCSe ) ) ) + ( MLU * ( RCSe / CS ) ) ) ,( MLU + Max( ( ( MUM / MUR ) + RMSe ),( ( CS + RCSe ) - ( MUR / MLU ) ) ) ) ) - RMSe ) * MUR ) - ( CS + ( Max( MLU,( Min( ( DS / Min( MLU ,MUR ) ) ,( RMSe + RMSe ) ) * MUR ) ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.620748560659204}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + ACS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / Min( ( DDR + CRS ) ,DDR ) ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Max( ( CS * ( DS / ( Max( MUC,Min( MUM ,CS ) ) / ( MUC / MUC ) ) ) ),CS ) + RMSe ) ,( Min( ( CS / MUM ) ,Max( Max( RRSe,RRSe ),RRSe ) ) / CS ) )", "obj1": 0.6792828685258964, "obj2": 0.16834631913558865}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( RRSe / MUR ),RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.4844498755051843}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( MUR + MUR ) * ( MUC / CS ) ) - ( ( Min( MLU ,CS ) * DS ) + CS ) )", "obj1": 0.6972111553784861, "obj2": 0.15724673863416896}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,Max( ( Const - ( PN * PN ) ),MDR ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9601593625498008, "obj2": 0.01463154114674136}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( Min( Min( FirstVNF_Mem_Server ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( DS + RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.547808764940239, "obj2": 0.26715757104109167}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / DDR ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) + ( BR - PN ) ) / ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RRSe,Min( Max( ( RRSe / ( DS / RMSe ) ),DS ) ,RRSe ) ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.4758297940888547}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( ( Max( BR,( RRS / Max( FirstVNF_CPU_Server,AMS ) ) ) / Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( CRS ,AMS ) / ( ( ( ( ( ACS * RRS ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( Min( MUR ,Max( MLU,CS ) ) + ( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( MUM - ( ( DS + ( MUC - ( RMSe / RMSe ) ) ) * ( MUM / ( CS + MUR ) ) ) ) ) ) - ( CS + ( Max( DS,CS ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6033548980442873}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( RMSe / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5298804780876494, "obj2": 0.27722834160751514}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RRSe ,( ( ( ( DS - RMSe ) / RRSe ) * ( ( MUM + RRSe ) * RCSe ) ) - RRSe ) ) * RRSe ) * CS ) )", "obj1": 0.5557768924302788, "obj2": 0.25648749484176564}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) * ( ( ( AMS * ( CRS / FirstVNF_Mem_Server ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RRSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( MLU / DS ) ) - Max( MLU,( MUC / MUM ) ) )", "obj1": 0.8725099601593626, "obj2": 0.0462803839780532}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.485337067978547}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( ( Const - ( PN * PN ) ),MDR ) ) )", "choosing": "Min( ( RMSe / Max( ( ( MUM / RRSe ) / ( MUC - CS ) ),Max( CS,RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( RCSe,RRSe ) + ( DS * ( CS / ( MUC * MLU ) ) ) ) ) ) - ( RRSe + Min( DS ,( MLU - MUR ) ) ) ) )", "obj1": 0.950199203187251, "obj2": 0.019960618523025397}, {"determining": "( ( Max( MRS,( ( MRS / ( Const + Max( MDR,( FirstVNF_RAM - DDR ) ) ) ) - ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + BR ) + ARS ) ) ) ) ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,DS ) * ( RRSe * ( RCSe - MLU ) ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( AMS * MRS ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( PN * BR ) ) * ( MDR / ( PN / MDR ) ) ) ) * PN ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( MUM / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.07686887981162577}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * MRS ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( MUM / ( CS / Max( RCSe,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUM,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe / MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0723723353870541}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( Min( RMSe ,DS ) * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5554128436089072}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( RMSe / RRSe ) * Max( RCSe,Min( ( Min( MUR ,Min( MLU ,MLU ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( ( DS + ( ( RCSe + DS ) + RCSe ) ),CS ) ) ) )", "obj1": 0.7529880478087649, "obj2": 0.10748973030058295}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5120412905569015}, {"determining": "( ( ( FirstVNF_RAM / ARS ) * ARS ) - ( Const * AMS ) )", "choosing": "( ( ( Min( RRSe ,( ( MUC - CS ) - CS ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / DS ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5690463664894532}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,Min( ( ( DS - CS ) - CS ) ,RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( ( RRS + FirstVNF_CPU_Server ) - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5378486055776892, "obj2": 0.2730104037758746}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),BR ) ),MDR ) ,PN ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / Min( RCSe ,MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29335944807467246}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - ( ARS * FirstVNF_RAM_Server ) ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5159362549800797, "obj2": 0.2886401461345432}], "34": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( DDR - MDR ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) - ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( ARS * ( FirstVNF_RAM / ARS ) ) - ( AMS - BR ) )", "choosing": "( ( ( Min( ( Min( ( ( MUC * MLU ) - ( RRSe * MUC ) ) ,( RMSe * Min( CS ,DS ) ) ) * CS ) ,RRSe ) / Max( RCSe,( ( MLU + ( ( MUC + DS ) - ( MLU / MLU ) ) ) + RRSe ) ) ) * DS ) * ( Min( CS ,( RMSe - MLU ) ) + MUC ) )", "obj1": 0.42828685258964144, "obj2": 0.4049978725583317}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_CPU_Server / Min( RRS ,BR ) ) ) - Max( AMS,( PN / Max( ( Min( ( CRS * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( ( MUC * MLU ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe / ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3625431821037016}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,( FirstVNF_RAM / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ARS * FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server + Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( BR + DDR ) - ( Max( FirstVNF_CPU_Server,AMS ) * Min( ACS ,RRS ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU / MUR ) * Max( CS,( ( Max( RCSe,RRSe ) - Min( CS ,( CS + CS ) ) ) / DS ) ) ) * ( RMSe / CS ) ) * ( ( CS / RRSe ) + CS ) )", "obj1": 0.37250996015936255, "obj2": 0.46709347420172986}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( MDR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) / Max( ( PN + FirstVNF_Mem_Server ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + DS ) ) ) - ( CS + ( Min( ( Max( RMSe,DS ) - ( DS - MUM ) ) ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( Min( MDR ,Max( PN,FirstVNF_Mem_Server ) ) ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,RMSe ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9103585657370518, "obj2": 0.0322447400149911}, {"determining": "( Max( Const,CRS ) * ( ( Const + FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( ( RRSe * RMSe ),DS ) ) * RRSe ) ) ) ) - ( RMSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.896414342629482, "obj2": 0.038398229207103125}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( PN - BR ) * FirstVNF_CPU_Server ) * ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( MLU * RRSe ) + ( RMSe * MLU ) ),Max( Min( MLU ,RMSe ),( Min( ( ( DS - CS ) - CS ) ,RRSe ) + ( DS + ( ( MUR * RRSe ) + ( RMSe + RCSe ) ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06844455861838539}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( Min( Min( FirstVNF_RAM ,AMS ) ,Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ) + Min( ( RRS + DDR ) ,DDR ) )", "choosing": "( ( ( ( MUM - MUR ) * Max( RRSe,RMSe ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( ( MUM / RCSe ) + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7356816087616516}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) - Min( ( RRS * FirstVNF_CPU ) ,RRS ) ) / ( ( ( Min( FirstVNF_CPU_Server ,Const ) / Min( ( PN / FirstVNF_RAM_Server ) ,Min( BR ,RRS ) ) ) - ( ( Max( ( FirstVNF_CPU + CRS ),BR ) - ( BR - PN ) ) / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( DS ,Min( ( MUM - RMSe ) ,( CS / RMSe ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) - RRSe ) ) - CS ) )", "obj1": 0.2948207171314741, "obj2": 0.5618620024674079}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN + MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * DDR ),FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * CS ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * ( RRSe * ( Min( MUC ,( ( ( CS + DS ) - DS ) - ( MUC * ( RCSe - MUM ) ) ) ) - RRSe ) ) ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10112830129113093}, {"determining": "( ( FirstVNF_CPU - ( DDR - Const ) ) + ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,MRS ) ),Max( CRS,Min( AMS ,FirstVNF_RAM ) ) ) ) ,( ( ( ( PN / ( RRS / CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - ( MUC / Max( MUR,MUM ) ) ) * ( CS * ( RMSe - ( MLU * DS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( ( Max( BR,( RRS / Max( FirstVNF_CPU_Server,AMS ) ) ) / Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( CRS ,AMS ) / ( ( ( ( ( ACS * RRS ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( Min( MUR ,Max( MLU,CS ) ) + ( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( MUM - ( ( DS + ( MUC - ( RMSe / RMSe ) ) ) * ( MUM / ( CS + MUR ) ) ) ) ) ) - ( CS + ( Max( DS,CS ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6033548980442873}, {"determining": "( ( ACS * ( DDR * ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Min( CRS ,( FirstVNF_Mem_Server - ( RRS * CRS ) ) ) * Max( Min( ( RRS + MRS ) ,( AMS / MRS ) ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) * PN ) - Min( Max( ( BR - FirstVNF_CPU ),MDR ) ,PN ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( MLU * Min( MUR ,Min( ( MUM - RMSe ) ,( RRSe * MUC ) ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( MUM / CS ) ,( RRSe - Min( Max( DS,RRSe ) ,Min( DS ,( Max( DS,MLU ) / ( MUM + RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.7828685258964143, "obj2": 0.08259515418766604}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( ( ( Max( RMSe,RRSe ) * MUR ) / ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( CS - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( ( DS + ( ( RCSe + DS ) + RCSe ) ),CS ) ) ) )", "obj1": 0.8565737051792829, "obj2": 0.0536267996778627}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) + ( ( Const * DDR ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Min( DS ,MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( MUC * MUC ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( DS,MUR ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6517526641272352}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3904382470119522, "obj2": 0.4311015648750872}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),BR ) ),MDR ) ,PN ) ) )", "choosing": "( ( Min( ( CS / MUC ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / Min( RCSe ,MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.29335944807467246}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3050480706152452}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ACS + ( DDR * RRS ) ) ) ) * PN ) - Max( ( Const - Min( PN ,PN ) ),MRS ) ) )", "choosing": "( ( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) - ( ( MUC + MUR ) / ( Min( ( CS / MUM ) ,CS ) / CS ) ) ) - ( Max( RRSe,Min( DS ,( ( MUM + ( ( CS / MLU ) + ( RMSe * MLU ) ) ) * DS ) ) ) + ( MUC / MUM ) ) )", "obj1": 0.8784860557768924, "obj2": 0.04346386987985258}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,Max( PN,FirstVNF_Mem_Server ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) + ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( RMSe - MUR ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.1853380654733106}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ARS ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( ( MUR / CS ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RRSe ,( ( ( ( DS - RMSe ) / RRSe ) * ( ( MUM + RRSe ) * RCSe ) ) - RRSe ) ) * RRSe ) * CS ) )", "obj1": 0.5856573705179283, "obj2": 0.23531732117241058}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5120412905569015}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ACS + DDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( Max( RRSe,RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / ( ( Min( MUR ,DS ) - CS ) - RRSe ) ) ) ) ,( ( ( ( RRSe - MLU ) * MUM ) / MUR ) / ( RMSe * MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.647410358565737, "obj2": 0.19607467325440897}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( ( ( AMS - FirstVNF_Mem_Server ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ACS + DDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( Max( Min( AMS ,MDR ),MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RMSe,RRSe ) * MUR ) - CS ) - Max( ( Max( DS,RRSe ) / MUR ),RMSe ) ) ,RRSe ) ) * DS ) * ( ( MUR * CS ) - Min( DS ,Max( RCSe,RRSe ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.1679216593238404}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( Max( CRS,PN ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - DS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * Max( ( ( RRSe / ( ( MUR - MUC ) - Min( CS ,MLU ) ) ) / RMSe ),RMSe ) )", "obj1": 0.6095617529880478, "obj2": 0.21300923807719163}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( ( FirstVNF_RAM + AMS ) / ( ARS / ( FirstVNF_Mem / ( BR + ACS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / Min( ( DDR + CRS ) ,DDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( Min( DS ,DS ) * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( DS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.4059657979206352}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / Max( ( Const * ( PN / MRS ) ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MUR * DS ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ) ) ) ,( ( CS / MUR ) / ( Min( MUC ,MUC ) + ( RRSe + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6363851473868682}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7513415433049849}, {"determining": "( Max( RRS,CRS ) - ( ( ( ( ( ( RRS / MDR ) - ARS ) * Const ) + ACS ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,RRS ) ) / ( Min( AMS ,ARS ) / ( ( ( FirstVNF_CPU / PN ) - MDR ) / ( ( FirstVNF_RAM + FirstVNF_RAM ) * DDR ) ) ) ) )", "choosing": "( Max( MLU,( MUM * MUC ) ) - Min( ( Min( Min( Min( DS ,( RCSe * Min( MUC ,MLU ) ) ) ,MUM ) ,MUM ) * Min( ( RCSe + RRSe ) ,( ( ( RCSe / MUC ) * Max( RCSe,( RCSe + RCSe ) ) ) / MUR ) ) ) ,( ( ( ( Max( Min( MUR ,DS ),( MLU * MUR ) ) * MUR ) + ( MUM - ( MUR - Max( DS,RRSe ) ) ) ) + ( RRSe * ( ( ( CS - RCSe ) / ( RRSe + RCSe ) ) / Min( DS ,( RCSe * RRSe ) ) ) ) ) / ( RMSe + ( MUC - MUC ) ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.14425745894409595}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MRS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / ( RRS - ( BR * Max( AMS,FirstVNF_Mem_Server ) ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.4948334159911201}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,RRS ),BR ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Max( Max( ( FirstVNF_Mem - ( DDR / FirstVNF_RAM_Server ) ),FirstVNF_CPU ),Const ) ) * ( ( RRS - CRS ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,MUC ) / ( RRSe / MUC ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Max( DS,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4541832669322709, "obj2": 0.3389102003854998}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) ) - ( ( ( ( AMS * RRS ) + DDR ) * ( BR - PN ) ) / Min( ( ( ( ( ( RRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ,Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - CS ) ,RRSe ) * Max( RMSe,RCSe ) ) * DS ) * ( ( Min( RMSe ,RMSe ) + DS ) + Min( DS ,Max( ( MUM * RRSe ),RRSe ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.1776085094288443}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_RAM ) ) / Max( ( Const * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7574236819869734}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( RMSe / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5298804780876494, "obj2": 0.27722834160751514}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( Const * ( PN / ( Max( BR,Min( FirstVNF_Mem_Server ,ACS ) ) * FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN / MDR ) / MDR ) ) / DDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3386454183266932, "obj2": 0.4903820097406755}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * PN ) - Max( MDR,( BR - PN ) ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Max( CS,( MUR - RMSe ) ) ) ,Max( Min( ( Min( MUR ,DS ) - Max( RRSe,RMSe ) ) ,RRSe ),DS ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9482071713147411, "obj2": 0.018689317801570276}, {"determining": "( ( ( CRS * CRS ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( ACS + BR ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( Min( Max( RCSe,RMSe ) ,( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Min( MLU ,DS ) / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9282868525896414, "obj2": 0.026466065998480327}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( AMS * MRS ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( ( FirstVNF_CPU_Server - ( Max( Min( MDR ,( RRS / BR ) ),( PN * BR ) ) * ( MDR / ( PN / MDR ) ) ) ) * PN ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( MUM / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ) )", "obj1": 0.796812749003984, "obj2": 0.07686887981162577}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( MUM / ( CS / Max( RCSe,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUM,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe / ( MUC / MUC ) ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0723723353870541}, {"determining": "( Max( ( MDR * AMS ),RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / RRSe ) + ( RMSe / MLU ) ) + ( RCSe / ( RMSe / RCSe ) ) ) + ( MLU * ( RCSe / CS ) ) ) ,( MLU + Max( ( ( MUM / MUR ) + RMSe ),( ( CS + RCSe ) - ( MUR / MLU ) ) ) ) ) - RMSe ) * MUR ) - ( CS + ( Max( MLU,( Min( ( DS / Min( MLU ,MUR ) ) ,( RMSe + RMSe ) ) * MUR ) ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.620748560659204}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( RRSe / MUR ),RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.4844498755051843}, {"determining": "( ( ( FirstVNF_RAM / ARS ) * ARS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,( ( RRSe * CS ) - CS ) ) * ( RCSe + MUC ) ) * DS ) * ( ( CS / DS ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.9760956175298805, "obj2": 0.008455101974392719}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.603585657370518, "obj2": 0.2236961445032355}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ( FirstVNF_Mem_Server / DDR ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) + ( BR - PN ) ) / ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) ) )", "choosing": "( ( ( Min( ( Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) - CS ) ,RRSe ) * Max( RRSe,Min( Max( ( RRSe / ( DS / RMSe ) ),DS ) ,RRSe ) ) ) * DS ) * ( ( CS / RRSe ) + MUM ) )", "obj1": 0.36852589641434264, "obj2": 0.4758297940888547}, {"determining": "( Min( BR ,Max( FirstVNF_RAM,FirstVNF_Mem ) ) + ( ( ( ( ACS + Min( ARS ,AMS ) ) * AMS ) * PN ) - ( FirstVNF_RAM_Server / Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) ) )", "choosing": "( ( ( Max( RMSe,( RCSe * ( RCSe + ( ( MUR * MUR ) + DS ) ) ) ) * MUR ) / ( RRSe * MUR ) ) * ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0035740836841860906}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( ( Min( ( ACS + RRS ) ,AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ACS + DDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / Min( BR ,BR ) ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( FirstVNF_CPU / Min( Min( AMS ,MDR ) ,MRS ) ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU * MUR ) * Min( Min( MUR ,( Max( Max( RRSe,RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / ( ( Min( MUR ,DS ) - CS ) - RRSe ) ) ) ) ,( ( ( ( RRSe - MLU ) * MUM ) / MUR ) / ( RMSe * MLU ) ) ) - Min( CS ,( ( ( RCSe * MUR ) * RMSe ) + DS ) ) )", "obj1": 0.6354581673306773, "obj2": 0.20077122125157582}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_CPU + PN ),MDR ) ) / MDR ) / PN ) ) ) - ( ( PN - Const ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUC ) / CS ) + RMSe ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4193337086475875}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,DS ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.6687275079017725}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.485337067978547}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( ( MUC * Max( MUR,DS ) ),RMSe ) ) ) )", "obj1": 0.6155378486055777, "obj2": 0.20753663617358942}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( RMSe / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.549800796812749, "obj2": 0.2661235082755002}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RRSe ,( ( ( ( DS - RMSe ) / RRSe ) * ( ( MUC - CS ) * RCSe ) ) - RRSe ) ) * RRSe ) * CS ) )", "obj1": 0.5956175298804781, "obj2": 0.23017634138657958}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( FirstVNF_CPU,MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( ( MUM / RRSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5089600605309815}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + ( ACS * Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "( Max( MUR,RMSe ) - ( CS + ( DS + ( DS / CS ) ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6537219031001759}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,Min( ( ( DS - CS ) - CS ) ,RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( ACS * ( DDR + AMS ) ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( DDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.8625498007968128, "obj2": 0.050442468665349696}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + BR ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUC ) ) ) ) * RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( Max( ( RRS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem,BR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( BR - Max( ( BR - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),RCSe ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUM ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5657370517928287, "obj2": 0.2505344997792117}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5219123505976095, "obj2": 0.2794459530739018}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( Min( Min( FirstVNF_Mem_Server ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( DS + RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.547808764940239, "obj2": 0.26715757104109167}, {"determining": "( ( ( ( ( ( ( PN / AMS ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) / Min( ARS ,AMS ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe + MLU ) + ( DS * Min( CS ,Max( Max( RRSe,RRSe ),RRSe ) ) ) ) ,MUC ) / Max( ( ( MUC - CS ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,MLU ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.2410358565737052, "obj2": 0.6239923855155829}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( FirstVNF_CPU_Server + Max( ( Const * RRS ),( DDR * BR ) ) ),ACS ) ) ) )", "choosing": "Min( ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.46215139442231074, "obj2": 0.3381613752309477}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ARS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( RRS / BR ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,CS ) * Max( MUR,Min( MUC ,RRSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4193337086475875}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ARS / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( RCSe / MUC ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) / MUR ) ,( RRSe + RCSe ) ) * ( ( Min( RRSe ,( ( ( ( DS - RMSe ) / RRSe ) * ( ( MUM + RRSe ) * RCSe ) ) - RRSe ) ) * RRSe ) * CS ) )", "obj1": 0.5557768924302788, "obj2": 0.25648749484176564}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( MDR - Max( ( ( RRS + FirstVNF_CPU_Server ) - PN ),MDR ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( CS / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + CS ) ) / RMSe ),Min( CS ,( CS + CS ) ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5617529880478087, "obj2": 0.25228773604487137}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( Min( BR ,BR ),Max( MDR,Max( ( Const - ( PN * PN ) ),MDR ) ) ) ) ) * Min( FirstVNF_RAM ,Max( Max( DDR,( RRS + ARS ) ),MDR ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - ( CS * ( ( RCSe + RRSe ) - Max( RRSe,RCSe ) ) ) ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.9561752988047809, "obj2": 0.016629320596782668}], "35": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - FirstVNF_RAM_Server ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RRSe ,( ( ( ( DS - RMSe ) / RRSe ) * ( ( MUM + RRSe ) * RCSe ) ) - RRSe ) ) * RRSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4203187250996016, "obj2": 0.3989559287470557}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,( FirstVNF_RAM / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ARS * FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server + Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( BR + DDR ) - ( Max( FirstVNF_CPU_Server,AMS ) * Min( ACS ,RRS ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU / MUR ) * Max( CS,( ( Max( RCSe,RRSe ) - Min( CS ,( CS + CS ) ) ) / DS ) ) ) * ( RMSe / CS ) ) * ( ( CS / RRSe ) + CS ) )", "obj1": 0.37250996015936255, "obj2": 0.46709347420172986}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( ARS / Max( ACS,FirstVNF_Mem ) ) - ( ( PN - MRS ) + FirstVNF_RAM_Server ) ) ) - ( ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ARS * ( FirstVNF_Mem / FirstVNF_Mem ) ) ) / MDR ) / PN ) ) / ( ( AMS + ACS ) * ( BR - PN ) ) ) )", "choosing": "( ( ( Min( ( Max( ( MLU / CS ),RRSe ) - RCSe ) ,RRSe ) * Max( ( ( RMSe / Max( DS,Max( MUC,RMSe ) ) ) - MLU ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + ( Min( DS ,( CS / MUM ) ) + RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5934859606525269}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN + MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * DDR ),FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * CS ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * ( RRSe * ( Min( MUC ,( ( ( CS + DS ) - DS ) - ( MUC * ( RCSe - MUM ) ) ) ) - RRSe ) ) ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10112830129113093}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16706519947955506}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3625431821037016}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( AMS * PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - Min( RCSe ,( ( RCSe * Min( RCSe ,RCSe ) ) + MUC ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( PN - BR ) * FirstVNF_CPU_Server ) * ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( MLU * RRSe ) + ( RMSe * MLU ) ),Max( Min( MLU ,RMSe ),( Min( ( ( DS - CS ) - CS ) ,RRSe ) + ( DS + ( ( MUR * RRSe ) + ( RMSe + RCSe ) ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06844455861838539}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ACS + DDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.5079681274900398, "obj2": 0.29299156859049635}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,Max( Min( ( MUC - DS ) ,( RCSe + Min( DS ,RRSe ) ) ),CS ) ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( Min( MDR ,Max( PN,FirstVNF_Mem_Server ) ) ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,RMSe ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9103585657370518, "obj2": 0.0322447400149911}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) * ( ARS / Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( RCSe,Min( RCSe ,RCSe ) ) * Max( MUR,MUC ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) * ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8565737051792829, "obj2": 0.053358128381727724}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5117227529871172}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( ( FirstVNF_RAM + AMS ) / ( ARS / ( FirstVNF_Mem / ( BR + ACS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / Min( ( DDR + CRS ) ,DDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( Min( DS ,DS ) * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( DS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.4059657979206352}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( Min( Min( FirstVNF_RAM ,AMS ) ,Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ) + Min( ( RRS + DDR ) ,DDR ) )", "choosing": "( ( ( ( MUM - MUR ) * Max( RRSe,RMSe ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( ( MUM / RCSe ) + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7356816087616516}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,CS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5637566338307524}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( Min( PN ,BR ) + ( Max( Max( AMS,CRS ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * MUC ) * Min( RMSe ,( RMSe / MUC ) ) ) ,( ( CS / MUR ) / ( RRSe + MLU ) ) ) - ( ( Max( MUM,MLU ) / RRSe ) * Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30679098070408606}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Min( MRS ,ACS ) )", "choosing": "( ( MUR / ( RRSe * MUR ) ) - ( MUM - RMSe ) )", "obj1": 0.45219123505976094, "obj2": 0.35301669600346175}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( MDR * ACS ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6454183266932271, "obj2": 0.18852848579357712}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( ( MUC * Max( MUR,DS ) ),RMSe ) ) ) )", "obj1": 0.6095617529880478, "obj2": 0.21279261981034908}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / BR ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( ( RRSe * Max( MUR,DS ) ),RMSe ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.17652322480490215}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.40039840637450197, "obj2": 0.4242774914419832}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( Min( Min( FirstVNF_Mem_Server ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( DS + RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5159362549800797, "obj2": 0.2851893102098286}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5574725166029343}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.603585657370518, "obj2": 0.2236961445032355}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,Max( PN,FirstVNF_Mem_Server ) ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) + ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( RMSe - MUR ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.649402390438247, "obj2": 0.1853380654733106}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( ACS * ( DDR + AMS ) ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( DDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.8625498007968128, "obj2": 0.050442468665349696}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7513415433049849}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( FirstVNF_CPU,MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( ( MUM / RRSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5089600605309815}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( MRS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / ( RRS - ( BR * Max( AMS,FirstVNF_Mem_Server ) ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.4948334159911201}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,RRS ),BR ) - Max( AMS,( Min( FirstVNF_Mem_Server ,Max( Max( ( FirstVNF_Mem - ( DDR / FirstVNF_RAM_Server ) ),FirstVNF_CPU ),Const ) ) * ( ( RRS - CRS ) - Max( MRS,Max( FirstVNF_Mem,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,MUC ) / ( RRSe / MUC ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Max( DS,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4541832669322709, "obj2": 0.3389102003854998}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,Max( ( Const - ( PN * PN ) ),MDR ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9601593625498008, "obj2": 0.01463154114674136}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) - ( ( ( FirstVNF_Mem_Server / PN ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,( RMSe - MUM ) ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6431493213764351}, {"determining": "( ( ( FirstVNF_RAM / ARS ) * ARS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RRSe ,( ( RRSe * CS ) - CS ) ) * ( RCSe + MUC ) ) * DS ) * ( ( CS / DS ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.9760956175298805, "obj2": 0.008455101974392719}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * ( Const - ACS ) ) + DDR ) ) ,DDR ) ,Min( ARS ,AMS ) ) + ( Max( Max( RRS,( AMS + ( MRS - RRS ) ) ),FirstVNF_RAM_Server ) - ( CRS - Min( AMS ,( FirstVNF_Mem / Max( Min( RRS ,( AMS + MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( ( CS / MUR ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ),MUR ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( ( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( RCSe ,( RCSe - MUC ) ) ) + CS ) ,Max( RRSe,( RRSe + Min( Min( CS ,DS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUM ) ) ),CS ) ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7444973042085691}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MRS ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - RRSe ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6239332630007614}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ACS / FirstVNF_Mem ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,DS ) * CS ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6678987244953222}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.2384287580069752}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( Max( Const,CRS ) * ( ( Const + FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( ( RRSe * RMSe ),DS ) ) * RRSe ) ) ) ) - ( RMSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.896414342629482, "obj2": 0.038398229207103125}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( ( ( FirstVNF_RAM / Const ) * FirstVNF_CPU_Server ) * ( ( ( ACS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( ( ( CS - RMSe ) + DS ) * ( ( Min( RRSe ,( ( ( ( DS - RMSe ) / RRSe ) * ( ( MUM + RRSe ) * RCSe ) ) - RRSe ) ) * RRSe ) * CS ) )", "obj1": 0.8745019920318725, "obj2": 0.04537530708181903}, {"determining": "( Min( BR ,( ACS - FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( FirstVNF_CPU,Min( DDR ,( Const / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * ( MLU * Min( RMSe ,DS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( Min( RMSe ,DS ) * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( ( Min( MUM ,CS ) + DS ) + CS ) )", "obj1": 0.21314741035856574, "obj2": 0.6506937808980892}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( ( BR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.7111553784860558, "obj2": 0.14902214725187685}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS * FirstVNF_CPU_Server ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( RRSe / MUR ),RCSe ) * Min( RCSe ,Min( RCSe ,CS ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6033548980442873}, {"determining": "( ( Max( Min( PN ,RRS ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( Min( CRS ,Const ),PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - Min( Const ,( Min( FirstVNF_Mem ,ARS ) / DDR ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( ( CS / ( MUR / MUM ) ) * Max( MUR,Min( MUC ,RRSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe * Max( RRSe,Max( RMSe,( ( MUR * RRSe ) / ( DS + MUM ) ) ) ) ) ) ) - ( CS + ( Min( CS ,CS ) + DS ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4733684245939203}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( PN - BR ),Max( Const,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( Min( RMSe ,DS ) * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6537219031001759}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_CPU_Server / Min( RRS ,BR ) ) ) - Max( AMS,( PN / Max( ( Min( ( CRS * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( ( MUC * MLU ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe / ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3625431821037016}, {"determining": "( Max( RRS,CRS ) - ( ( ( ( ( ( RRS / MDR ) - ARS ) * Const ) + ACS ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,RRS ) ) / ( Min( AMS ,ARS ) / ( ( ( FirstVNF_CPU / PN ) - MDR ) / ( ( FirstVNF_RAM + FirstVNF_RAM ) * DDR ) ) ) ) )", "choosing": "( Max( MLU,( MUM * MUC ) ) - Min( ( Min( Min( Min( DS ,( RCSe * Min( MUC ,MLU ) ) ) ,MUM ) ,MUM ) * Min( ( RCSe + RRSe ) ,( ( ( RCSe / MUC ) * Max( RCSe,( RCSe + RCSe ) ) ) / MUR ) ) ) ,( ( ( ( Max( Min( MUR ,DS ),( MLU * MUR ) ) * MUR ) + ( MUM - ( MUR - Max( DS,RRSe ) ) ) ) + ( RRSe * ( ( ( CS - RCSe ) / ( RRSe + RCSe ) ) / Min( DS ,( RCSe * RRSe ) ) ) ) ) / ( RMSe + ( MUC - MUC ) ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.14425745894409595}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem * Const ),ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( ACS + RRS ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - ( CS - MUR ) ) ,RRSe ) ) ) * ( DS * MUR ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9243027888446215, "obj2": 0.028512181275687713}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_CPU + PN ),MDR ) ) / MDR ) / PN ) ) ) - ( ( PN - Const ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUC ) / CS ) + RMSe ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4193337086475875}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_RAM_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( MUM / RMSe ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUM,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe / ( MUC / MUC ) ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0723723353870541}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( Max( ( MDR * AMS ),RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / RRSe ) + ( RMSe / MLU ) ) + ( RCSe / ( RMSe / RCSe ) ) ) + ( MLU * ( RCSe / CS ) ) ) ,( MLU + Max( ( ( MUM / MUR ) + RMSe ),( ( CS + RCSe ) - ( MUR / MLU ) ) ) ) ) - RMSe ) * MUR ) - ( CS + ( Max( MLU,( Min( ( DS / Min( MLU ,MUR ) ) ,( RMSe + RMSe ) ) * MUR ) ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.620748560659204}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ACS + DDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * DDR ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( DS - CS ) - ( MUM - MLU ) ) ,RRSe ) ) * DS ) * ( ( MUR * CS ) + Min( DS ,Max( RRSe,RCSe ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.26686754930104467}, {"determining": "( ( FirstVNF_CPU - ( DDR - Const ) ) + ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,MRS ) ),Max( CRS,Min( AMS ,FirstVNF_RAM ) ) ) ) ,( ( ( ( PN / ( RRS / CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - ( MUC / Max( MUR,MUM ) ) ) * ( CS * ( RMSe - ( MLU * DS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),Max( CRS,( FirstVNF_Mem_Server / MRS ) ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( ( ( DS - DS ) - CS ) - RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( RMSe / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5298804780876494, "obj2": 0.27722834160751514}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3904382470119522, "obj2": 0.4311015648750872}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3050480706152452}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / Max( ( Const * ( PN / MRS ) ),( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MUR * DS ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( RCSe + ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ) ) ) ,( ( CS / MUR ) / ( Min( MUC ,MUC ) + ( RRSe + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6363851473868682}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * PN ) - Max( MDR,( BR - PN ) ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Max( CS,( MUR - RMSe ) ) ) ,Max( Min( ( Min( MUR ,DS ) - Max( RRSe,RMSe ) ) ,RRSe ),DS ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9482071713147411, "obj2": 0.018689317801570276}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,( MUM / MUC ) ) - Min( ( Min( Min( Min( DS ,Max( RCSe,Min( MUC ,MLU ) ) ) ,MUM ) ,MUM ) * Min( ( ( ( RCSe / MUC ) * Max( RCSe,( RCSe + RCSe ) ) ) / MUR ) ,( RCSe + RRSe ) ) ) ,( ( ( ( ( ( CS / MUR ) - ( CS + RCSe ) ) - ( MUR + RCSe ) ) / RCSe ) + ( RRSe * ( ( ( CS - RCSe ) / ( RRSe + RCSe ) ) / Min( DS ,( RCSe * RRSe ) ) ) ) ) / ( RMSe + ( MUC - MUC ) ) ) ) )", "obj1": 0.7928286852589641, "obj2": 0.07754547101890179}, {"determining": "( ( Max( MRS,( ( Min( ( PN / FirstVNF_Mem_Server ) ,Min( BR ,RRS ) ) / ( BR - ( ( FirstVNF_CPU + BR ) + ARS ) ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUC ) ) ) ) * RRSe ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.02066721079353029}, {"determining": "( ( Max( BR,( RRS / Max( FirstVNF_CPU_Server,AMS ) ) ) / Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( CRS ,AMS ) / ( ( ( ( ( ACS * RRS ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( Min( MUR ,Max( MLU,CS ) ) + ( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( MUM - ( ( DS + ( MUC - ( RMSe / RMSe ) ) ) * ( MUM / ( CS + MUR ) ) ) ) ) ) - ( CS + ( Max( DS,CS ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6033548980442873}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_RAM ) ) / Max( ( Const * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7574236819869734}, {"determining": "( Min( ( Max( ( FirstVNF_CPU / CRS ),RRS ) * PN ) ,ACS ) + ( ( ( ( ACS - Min( ARS ,AMS ) ) * AMS ) * PN ) - ( FirstVNF_RAM_Server / Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / FirstVNF_Mem ),MDR ) ) ) )", "choosing": "( Min( ( ( ( MUR / MLU ) * MUR ) * Min( Min( MUR ,( Max( ( RRSe / MUR ),RCSe ) * Min( Min( RCSe ,MUM ) ,RCSe ) ) ) ,( MUC - MUM ) ) ) ,( Max( RMSe,MLU ) / ( CS / MUR ) ) ) - ( CS + ( Max( MLU,( Min( ( Min( MLU ,MUR ) / Min( MLU ,MUR ) ) ,( RMSe + RMSe ) ) * MUR ) ) + DS ) ) )", "obj1": 0.9880478087649402, "obj2": 0.0045825111048352065}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) - Min( PN ,PN ) ) ) ) )", "choosing": "( Max( RCSe,Min( RCSe ,RCSe ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.9780876494023905, "obj2": 0.007716800503206108}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.4940239043824701, "obj2": 0.3050480706152452}, {"determining": "( Max( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.46613545816733065, "obj2": 0.33256395126637367}, {"determining": "( Max( MRS,Min( FirstVNF_CPU ,( Const + ( ( MRS - CRS ) - BR ) ) ) ) * ( Max( ( Min( Min( FirstVNF_Mem_Server ,MDR ) ,MRS ) / BR ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( DS + RMSe ),RCSe ) * Max( ( RMSe * RCSe ),Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08145022290203914}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}], "36": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) - ( PN + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - FirstVNF_RAM_Server ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) * ( ( Min( RRSe ,( ( ( ( DS - RMSe ) / RRSe ) * ( ( MUM + RRSe ) * RCSe ) ) - RRSe ) ) * RRSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( ACS ,MDR ) ,( FirstVNF_RAM / Max( FirstVNF_Mem,ACS ) ) ) / ( Max( ( ARS * FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server + Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( BR + DDR ) - ( Max( FirstVNF_CPU_Server,AMS ) * Min( ACS ,RRS ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU / MUR ) * Max( CS,( ( Max( RCSe,RRSe ) - Min( CS ,( CS + CS ) ) ) / DS ) ) ) * ( RMSe / CS ) ) * ( ( CS / RRSe ) + CS ) )", "obj1": 0.37250996015936255, "obj2": 0.46709347420172986}, {"determining": "( ( Max( ( FirstVNF_CPU_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server - DDR ) + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( MDR * MRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( CS / MUM ) ,( MLU - ( Max( RRSe,DS ) + Min( DS ,( Max( RRSe,RRSe ) / MUM ) ) ) ) ) - CS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.26693227091633465, "obj2": 0.5904624824501109}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( MUM,( DS + ( MUM + RMSe ) ) ) ) ) / CS ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3625431821037016}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.2384287580069752}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6201886455064848}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( PN - BR ) * FirstVNF_CPU_Server ) * ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( MLU * RRSe ) + ( RMSe * MLU ) ),Max( Min( MLU ,RMSe ),( Min( ( ( DS - CS ) - CS ) ,RRSe ) + ( DS + ( ( MUR * RRSe ) + ( RMSe + RCSe ) ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06844455861838539}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4203187250996016, "obj2": 0.3989559287470557}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,Max( ( Const - ( PN * PN ) ),MDR ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9601593625498008, "obj2": 0.01463154114674136}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + Min( MUR ,Max( CS,RRSe ) ) ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4900398406374502, "obj2": 0.30413750183783433}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( Min( Min( FirstVNF_RAM ,AMS ) ,Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ) + Min( ( RRS + DDR ) ,DDR ) )", "choosing": "( ( ( ( MUM - MUR ) * Max( RRSe,RMSe ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( ( MUM / RCSe ) + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7356816087616516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.599601593625498, "obj2": 0.22787938780941386}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,CS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5637566338307524}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) * ( ARS / Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( RCSe,Min( RCSe ,RCSe ) ) * Max( MUR,MUC ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) * ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8565737051792829, "obj2": 0.053358128381727724}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16706519947955506}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( Max( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,DDR ) ),ACS ) - Max( AMS,( PN / Max( ( DDR * Const ),Max( FirstVNF_Mem_Server,DDR ) ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Min( RRSe ,MUR ) ) / MUC ) / Max( ( ( MUC - Max( ( RMSe * RRSe ),MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( ( DS + Min( ( ( ( RMSe * ( RRSe - MUR ) ) - RCSe ) + ( ( ( RMSe - RCSe ) + MUM ) + ( DS / MUC ) ) ) ,MLU ) ) - CS ) )", "obj1": 0.47808764940239046, "obj2": 0.31472081996920725}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * PN ) - Max( MDR,( BR - PN ) ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Max( CS,( MUR - RMSe ) ) ) ,Max( Min( ( Min( MUR ,DS ) - Max( RRSe,RMSe ) ) ,RRSe ),DS ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9482071713147411, "obj2": 0.018689317801570276}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,( MUM / MUC ) ) - Min( ( Min( Min( Min( DS ,Max( RCSe,Min( MUC ,MLU ) ) ) ,MUM ) ,MUM ) * Min( ( ( ( RCSe / MUC ) * Max( RCSe,( RCSe + RCSe ) ) ) / MUR ) ,( RCSe + RRSe ) ) ) ,( Max( DS,RRSe ) + Max( DS,( Max( RRSe,RCSe ) / MUM ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.10058840719139804}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN + MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * DDR ),FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * CS ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * ( RRSe * ( Min( MUC ,( ( ( CS + DS ) - DS ) - ( MUC * ( RCSe - MUM ) ) ) ) - RRSe ) ) ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10112830129113093}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,Max( ( Const - MDR ),MDR ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.8884462151394422, "obj2": 0.043429874223595}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.40039840637450197, "obj2": 0.4242774914419832}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( BR - PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + FirstVNF_CPU ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( CRS + FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Max( Min( MUR ,( Max( MUM,( CS + MUR ) ) * Max( MUR,Min( MUC ,RRSe ) ) ) ),( MUC + RCSe ) ) ) ,( ( RCSe / ( MLU / MUR ) ) / ( MLU + RMSe ) ) ) - ( CS + ( RMSe + MUR ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5124301220639518}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( DDR + Const ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RRSe ) - ( RRSe + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5, "obj2": 0.30049431765852475}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_RAM_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) * CS ) ) ,( MUM / RMSe ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUM,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe / ( MUC / MUC ) ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0723723353870541}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( ( Min( ( RRS - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( FirstVNF_RAM ,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) + Max( RCSe,( RMSe * MUR ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2769670650686345}, {"determining": "( ( Max( MRS,( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU / MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( CRS ,ACS ) )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( Min( MUC ,RRSe ) * ( CS * MUC ) ) ) ) * Min( ( ( RCSe + RRSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9063745019920318, "obj2": 0.03150923227733485}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( ( BR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7470119521912351, "obj2": 0.11006280148754365}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_CPU + PN ),MDR ) ) / MDR ) / PN ) ) ) - ( ( PN - Const ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUC ) / CS ) + RMSe ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4193337086475875}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( Max( ARS,CRS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,Max( ( Const - MDR ),MDR ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * Max( RCSe,Min( MUC ,MLU ) ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.896414342629482, "obj2": 0.03835374019775562}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * ( Const - ACS ) ) + DDR ) ) ,DDR ) ,Min( ARS ,AMS ) ) + ( Max( Max( RRS,( AMS + ( MRS - RRS ) ) ),FirstVNF_RAM_Server ) - ( CRS - Min( AMS ,( FirstVNF_Mem / Max( Min( RRS ,( AMS + MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( ( CS / MUR ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ),MUR ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( ( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( RCSe ,( RCSe - MUC ) ) ) + CS ) ,Max( RRSe,( RRSe + Min( Min( CS ,DS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUM ) ) ),CS ) ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7444973042085691}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,Max( Min( ( MUC - DS ) ,( RCSe + Min( DS ,RRSe ) ) ),CS ) ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / BR ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( ( RRSe * Max( MUR,DS ) ),RMSe ) ) ) )", "obj1": 0.6593625498007968, "obj2": 0.17652322480490215}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5574725166029343}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5677290836653387, "obj2": 0.2479044338714764}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4123505976095618, "obj2": 0.411959966156714}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / ACS ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,MUC ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2546068036193049}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5087406081304453}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( ( BR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.7111553784860558, "obj2": 0.14902214725187685}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( Min( BR ,RRS ) + ( Min( MDR ,Max( RRS,BR ) ) + Max( ( PN - BR ),Max( Const,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( Min( RMSe ,DS ) * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20318725099601595, "obj2": 0.665561422618102}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) + ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( CS / RRSe ) + Min( DS ,( MUC - ( RCSe + ( ( RCSe - Max( MLU,RMSe ) ) / MUM ) ) ) ) ) * ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6095617529880478, "obj2": 0.21279261981034908}, {"determining": "( ( Max( Min( PN ,RRS ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( Min( CRS ,Const ),PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - Min( Const ,( Min( FirstVNF_Mem ,ARS ) / DDR ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( ( CS / ( MUR / MUM ) ) * Max( MUR,Min( MUC ,RRSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe * Max( RRSe,Max( RMSe,( ( MUR * RRSe ) / ( DS + MUM ) ) ) ) ) ) ) - ( CS + ( Min( CS ,CS ) + DS ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4733684245939203}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ACS - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( MUC + RCSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5557768924302788, "obj2": 0.257578758666699}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),Max( Const,( Min( ( FirstVNF_Mem_Server + Const ) ,DDR ) * FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( Min( DS ,MUR ) * Min( Min( MUR ,( ( CS * ( MUM / MUC ) ) * Max( RRSe,( RMSe - MUM ) ) ) ) ,( ( ( RCSe / MLU ) + MUM ) + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6408599930209201}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3625431821037016}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( BR + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Min( FirstVNF_RAM_Server ,( DDR / FirstVNF_CPU ) ) * DDR ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( Min( DS ,RRSe ) + DS ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16706519947955506}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( Max( MRS,Min( FirstVNF_CPU ,( Const + ( ( MRS - CRS ) - BR ) ) ) ) * ( Max( ( Min( Min( FirstVNF_Mem_Server ,MDR ) ,MRS ) / BR ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( DS + RMSe ),RCSe ) * Max( ( RMSe * RCSe ),Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08145022290203914}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Min( Min( MDR ,ACS ) ,( ARS + AMS ) ) ,( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RCSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( ( MUC * Max( ( RMSe - MLU ),RMSe ) ),RMSe ) ) ) )", "obj1": 0.7808764940239044, "obj2": 0.08591119027474808}, {"determining": "( Max( RRS,CRS ) - ( ( ( ( ( ( RRS / MDR ) - ARS ) * Const ) + ACS ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,RRS ) ) / ( Min( AMS ,ARS ) / ( ( ( FirstVNF_CPU / PN ) - MDR ) / ( ( FirstVNF_RAM + FirstVNF_RAM ) * DDR ) ) ) ) )", "choosing": "( Max( MLU,( MUM * MUC ) ) - Min( ( Min( Min( Min( DS ,( RCSe * Min( MUC ,MLU ) ) ) ,MUM ) ,MUM ) * Min( ( RCSe + RRSe ) ,( ( ( RCSe / MUC ) * Max( RCSe,( RCSe + RCSe ) ) ) / MUR ) ) ) ,( ( ( ( Max( Min( MUR ,DS ),( MLU * MUR ) ) * MUR ) + ( MUM - ( MUR - Max( DS,RRSe ) ) ) ) + ( RRSe * ( ( ( CS - RCSe ) / ( RRSe + RCSe ) ) / Min( DS ,( RCSe * RRSe ) ) ) ) ) / ( RMSe + ( MUC - MUC ) ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.14425745894409595}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem * Const ),ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( ACS + RRS ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - ( CS - MUR ) ) ,RRSe ) ) ) * ( DS * MUR ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9243027888446215, "obj2": 0.028512181275687713}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ACS / FirstVNF_Mem ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,CS ) * Max( MUR,Min( MUC ,RRSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.6664661242990202}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS * FirstVNF_CPU_Server ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( RRSe / MUR ),RCSe ) * Min( RCSe ,Min( RCSe ,CS ) ) ) ) ,( RCSe + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6033548980442873}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4203187250996016, "obj2": 0.3989559287470557}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5139442231075697, "obj2": 0.2851430859510361}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),Max( CRS,( FirstVNF_Mem_Server / MRS ) ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( ( ( DS - DS ) - CS ) - RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( Max( BR,( RRS / Max( FirstVNF_CPU_Server,AMS ) ) ) / Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( CRS ,AMS ) / ( ( ( ( ( ACS * RRS ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( Min( MUR ,Max( MLU,CS ) ) + ( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( MUM - ( ( DS + ( MUC - ( RMSe / RMSe ) ) ) * ( MUM / ( CS + MUR ) ) ) ) ) ) - ( CS + ( Max( DS,CS ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6033548980442873}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18135893638330375}, {"determining": "( ( ACS * ( DDR + AMS ) ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( DDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.8625498007968128, "obj2": 0.050442468665349696}, {"determining": "( Min( BR ,( CRS + RRS ) ) + ( Max( Min( DDR ,FirstVNF_RAM_Server ),Min( MDR ,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( RMSe * MLU ),Max( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ),( ( RRSe * MUC ) + MUC ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( MLU * ( CS * Max( ( MUC - RRSe ),RCSe ) ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6537219031001759}, {"determining": "( Max( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_CPU_Server ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( ( MUM / RRSe ),RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4601593625498008, "obj2": 0.3375081025675588}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ACS + DDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * DDR ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( DS - CS ) - ( MUM - MLU ) ) ,RRSe ) ) * DS ) * ( ( MUR * CS ) + Min( DS ,Max( RRSe,RCSe ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.26686754930104467}, {"determining": "( ( FirstVNF_CPU - ( DDR - Const ) ) + ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,MRS ) ),Max( CRS,Min( AMS ,FirstVNF_RAM ) ) ) ) ,( ( ( ( PN / ( RRS / CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - ( MUC / Max( MUR,MUM ) ) ) * ( CS * ( RMSe - ( MLU * DS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5059760956175299, "obj2": 0.2928653170972834}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,Min( ( ( DS - CS ) - CS ) ,RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( PN ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,CS ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Max( RCSe,Min( RCSe ,RCSe ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.8725099601593626, "obj2": 0.045722790498155266}], "37": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - Max( ( FirstVNF_Mem_Server + PN ),MDR ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( Min( DS ,CS ) ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,RRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) - ( PN + FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4656352769000428}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( RMSe / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4243027888446215, "obj2": 0.393707456063902}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.599601593625498, "obj2": 0.22787938780941386}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18135893638330375}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) + ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( CS / RRSe ) + Min( DS ,( MUC - ( RCSe + ( ( RCSe - Max( MLU,RMSe ) ) / MUM ) ) ) ) ) * ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) )", "obj1": 0.6095617529880478, "obj2": 0.21279261981034908}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6201886455064848}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3625431821037016}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( DDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,Min( ( ( DS - CS ) - Max( MUC,RCSe ) ) ,RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9701195219123506, "obj2": 0.011135185466385816}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( RRS - PN ) ) / ( Min( ARS ,AMS ) / ( ( Max( Max( ( BR - Const ),CRS ),DDR ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( MUR + RCSe ),CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) * DS ) ) )", "obj1": 0.4103585657370518, "obj2": 0.40469778742666834}, {"determining": "( Min( Min( FirstVNF_RAM ,AMS ) ,Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ) + Min( ( RRS + DDR ) ,DDR ) )", "choosing": "( ( ( ( MUM - MUR ) * Max( RRSe,RMSe ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( ( MUM / RCSe ) + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7356816087616516}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( BR - PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + FirstVNF_CPU ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( CRS + FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Max( Min( MUR ,( Max( MUM,( CS + MUR ) ) * Max( MUR,Min( MUC ,RRSe ) ) ) ),( MUC + RCSe ) ) ) ,( ( RCSe / ( MLU / MUR ) ) / ( MLU + RMSe ) ) ) - ( CS + ( RMSe + MUR ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5124301220639518}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( PN - BR ) * FirstVNF_CPU_Server ) * ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( MLU * RRSe ) + ( RMSe * MLU ) ),Max( Min( MLU ,RMSe ),( Min( ( ( DS - CS ) - CS ) ,RRSe ) + ( DS + ( ( MUR * RRSe ) + ( RMSe + RCSe ) ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06844455861838539}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( BR + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Min( FirstVNF_RAM_Server ,( DDR / FirstVNF_CPU ) ) * DDR ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( RMSe - MUM ) ) ) ) ) ) - CS ) ,Min( CS ,( Min( DS ,RRSe ) + DS ) ) )", "obj1": 0.9900398406374502, "obj2": 0.0033294826065575172}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,Max( Min( ( MUC - DS ) ,( RCSe + Min( DS ,RRSe ) ) ),CS ) ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( Max( ( FirstVNF_CPU_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server - DDR ) + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( MDR * MRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( CS / MUM ) ,( MLU - ( Max( RRSe,DS ) + Min( DS ,( Max( RRSe,RRSe ) / MUM ) ) ) ) ) - CS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.26693227091633465, "obj2": 0.5904624824501109}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3884462151394422, "obj2": 0.4309508527354315}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( ( ( Max( ( ( FirstVNF_RAM - Min( AMS ,FirstVNF_RAM ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) ),AMS ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * ACS ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ACS - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUC,RMSe ) - ( MUC + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( ( DS - CS ) ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.2364975300425477}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( PN ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,CS ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_CPU + PN ),MDR ) ) / MDR ) / PN ) ) ) - ( ( PN - Const ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUC ) / CS ) + RMSe ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4193337086475875}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( ( ACS * ( DDR + AMS ) ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( DDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.9422310756972112, "obj2": 0.02461592314013206}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * PN ) - Max( MDR,( BR - PN ) ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Max( CS,( MUR - RMSe ) ) ) ,Max( Min( ( Min( MUR ,DS ) - Max( RRSe,RMSe ) ) ,RRSe ),DS ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9482071713147411, "obj2": 0.018689317801570276}, {"determining": "( ( ( Min( ( RRS - FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( FirstVNF_RAM ,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) + Max( RCSe,( RMSe * MUR ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2769670650686345}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * ( Const - ACS ) ) + DDR ) ) ,DDR ) ,Min( ARS ,AMS ) ) + ( Max( Max( RRS,( AMS + ( MRS - RRS ) ) ),FirstVNF_RAM_Server ) - ( CRS - Min( AMS ,( FirstVNF_Mem / Max( Min( RRS ,( AMS + MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( ( CS / MUR ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ),MUR ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( ( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( RCSe ,( RCSe - MUC ) ) ) + CS ) ,Max( RRSe,( RRSe + Min( Min( CS ,DS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUM ) ) ),CS ) ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7444973042085691}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,RCSe ) * Max( RCSe,( CS * DS ) ) ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.40039840637450197, "obj2": 0.4242774914419832}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,( MUM / MUC ) ) - Min( ( Min( Min( Min( DS ,Max( RCSe,Min( MUC ,MLU ) ) ) ,MUM ) ,MUM ) * Min( ( ( ( RCSe / MUC ) * Max( RCSe,( RCSe + RCSe ) ) ) / MUR ) ,( RCSe + RRSe ) ) ) ,( Max( DS,RRSe ) + Max( DS,( Max( RRSe,RCSe ) / MUM ) ) ) ) )", "obj1": 0.7669322709163346, "obj2": 0.10058840719139804}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),Max( Const,( Min( ( FirstVNF_Mem_Server + Const ) ,DDR ) * FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( Min( DS ,MUR ) * Min( Min( MUR ,( ( CS * ( MUM / MUC ) ) * Max( RRSe,( RMSe - MUM ) ) ) ) ,( ( ( RCSe / MLU ) + MUM ) + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6408599930209201}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.2384287580069752}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,CS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5637566338307524}, {"determining": "( FirstVNF_Mem - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( MDR * MRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( MUR,RCSe ) / MUM ) ) ) ) ) - CS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6003275356634903}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5677290836653387, "obj2": 0.2479044338714764}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / ACS ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,MUC ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2546068036193049}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ( MRS * FirstVNF_Mem ) ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( CS,( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.45617529880478086, "obj2": 0.3371404271281702}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( ( BR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.7111553784860558, "obj2": 0.14902214725187685}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10112830129113093}, {"determining": "( ( Max( MRS,( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9063745019920318, "obj2": 0.03150923227733485}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5059760956175299, "obj2": 0.2928653170972834}, {"determining": "( Max( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( FirstVNF_CPU * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( CS ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4820717131474104, "obj2": 0.312559849989611}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / BR ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + CS ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.6832669322709163, "obj2": 0.16865043536170163}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) * ( ARS / Max( Const,FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( RCSe,Min( RCSe ,RCSe ) ) * Max( MUR,MUC ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) * ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8565737051792829, "obj2": 0.053358128381727724}, {"determining": "( Max( RRS,CRS ) - ( ( ( ( ( ( RRS / MDR ) - ARS ) * Const ) + ACS ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,RRS ) ) / ( Min( AMS ,ARS ) / ( ( ( FirstVNF_CPU / PN ) - MDR ) / ( ( FirstVNF_RAM + FirstVNF_RAM ) * DDR ) ) ) ) )", "choosing": "( Max( MLU,( MUM * MUC ) ) - Min( ( Min( Min( Min( DS ,( RCSe * Min( MUC ,MLU ) ) ) ,MUM ) ,MUM ) * Min( ( RCSe + RRSe ) ,( ( ( RCSe / MUC ) * Max( RCSe,( RCSe + RCSe ) ) ) / MUR ) ) ) ,( ( ( ( Max( Min( MUR ,DS ),( MLU * MUR ) ) * MUR ) + ( MUM - ( MUR - Max( DS,RRSe ) ) ) ) + ( RRSe * ( ( ( CS - RCSe ) / ( RRSe + RCSe ) ) / Min( DS ,( RCSe * RRSe ) ) ) ) ) / ( RMSe + ( MUC - MUC ) ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.14425745894409595}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) ) )", "choosing": "( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.22111553784860558, "obj2": 0.6382864264818799}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( ( ARS * MDR ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + Min( MUR ,Max( CS,RRSe ) ) ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( RCSe + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4641434262948207, "obj2": 0.33351303578750596}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),Max( CRS,( FirstVNF_Mem_Server / MRS ) ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( ( ( DS - DS ) - CS ) - RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.545816733067729, "obj2": 0.26288094506872717}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_RAM_Server * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( MDR,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( FirstVNF_Mem / FirstVNF_Mem ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( RCSe + MUC ) ,Min( MUR ,( ( CS * MUR ) * ( MUC - MLU ) ) ) ) ) ,( ( CS / MUR ) / ( MUM - ( ( DS + ( MUC - ( RRSe / RMSe ) ) ) * ( MUM / ( CS + MUR ) ) ) ) ) ) - ( CS + ( Max( DS,CS ) + DS ) ) )", "obj1": 0.8127490039840638, "obj2": 0.06997895110838824}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem * Const ),ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( ACS + RRS ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - ( CS - MUR ) ) ,RRSe ) ) ) * ( DS * MUR ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9243027888446215, "obj2": 0.028512181275687713}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,CS ) * Max( MUR,Min( MUC ,RRSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5219123505976095, "obj2": 0.27998957202116603}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16706519947955506}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ACS / FirstVNF_Mem ) ) - ( ( ( MDR + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / ( FirstVNF_CPU * Max( ( FirstVNF_RAM_Server + DDR ),FirstVNF_RAM_Server ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,Max( Min( ( MUC - DS ) ,( RCSe + Min( DS ,RRSe ) ) ),CS ) ) + DS ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6524299984854959}, {"determining": "( ( FirstVNF_CPU - ( DDR - Const ) ) + ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,MRS ) ),Max( CRS,Min( AMS ,FirstVNF_RAM ) ) ) ) ,( ( ( ( PN / ( RRS / CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - ( MUC / Max( MUR,MUM ) ) ) * ( CS * ( RMSe - ( MLU * DS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,Min( ( ( DS - CS ) - CS ) ,RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( Min( MUR ,Max( MLU,CS ) ) + ( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( MUM - ( ( DS + ( MUC - ( RMSe / RMSe ) ) ) * ( MUM / ( CS + MUR ) ) ) ) ) ) - ( CS + ( Max( DS,CS ) + DS ) ) )", "obj1": 0.8764940239043825, "obj2": 0.044328258217510096}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5139442231075697, "obj2": 0.2851430859510361}, {"determining": "( Min( BR ,( CRS + RRS ) ) + ( Max( Min( DDR ,FirstVNF_RAM_Server ),Min( MDR ,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( RMSe * MLU ),Max( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ),( ( RRSe * MUC ) + MUC ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( MLU * ( CS * Max( ( MUC - RRSe ),RCSe ) ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6537219031001759}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( ( BR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.750996015936255, "obj2": 0.1098493365441948}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( RCSe / ( RMSe - MUM ) ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.6852589641434262, "obj2": 0.16706519947955506}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ACS + DDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * DDR ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( DS - CS ) - ( MUM - MLU ) ) ,RRSe ) ) * DS ) * ( ( MUR * CS ) + Min( DS ,Max( RRSe,RCSe ) ) ) )", "obj1": 0.5438247011952191, "obj2": 0.26686754930104467}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( MUM,( DS + ( MUM + RMSe ) ) ) ) ) / CS ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3625431821037016}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( Max( ( Min( ( FirstVNF_Mem * Max( FirstVNF_Mem,ACS ) ) ,BR ) + ( MDR * ( FirstVNF_RAM_Server + ( PN - MRS ) ) ) ),ACS ),Min( Const ,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( CS,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,RMSe ) + DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.6616519308831209}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( MDR * MRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.26693227091633465, "obj2": 0.5904624824501109}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2875390620982629}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( FirstVNF_CPU ,( ( ( FirstVNF_CPU - AMS ) / FirstVNF_CPU_Server ) * RRS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( ( RRSe + DS ) / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( RMSe * DS ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9581673306772909, "obj2": 0.015826561087957196}], "38": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - Max( ( FirstVNF_Mem_Server + PN ),MDR ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( Min( DS ,CS ) ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( RMSe / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4243027888446215, "obj2": 0.393707456063902}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4656352769000428}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( ( ( ( Max( AMS,( ( FirstVNF_RAM - Min( DDR ,FirstVNF_RAM ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ACS - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( MUC + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5976095617529881, "obj2": 0.22700722696350317}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( ( RRSe + DS ) / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( RMSe * DS ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5, "obj2": 0.3020766909093694}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( RMSe * MLU ),Max( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ),( ( MUC * RRSe ) + MUC ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7888446215139442, "obj2": 0.079512956689825}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( MUM,( DS + ( MUM + RMSe ) ) ) ) ) / CS ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3625431821037016}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ( ( ( ACS + RRS ) + AMS ) * PN ) - ( RRS + BR ) ) * Min( ( Max( FirstVNF_RAM,Max( ( DDR - CRS ),Min( CRS ,( MDR * MRS ) ) ) ) - MDR ) ,( Max( FirstVNF_CPU,( Min( Min( AMS ,( AMS - CRS ) ) ,MRS ) / FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( Min( ( ( DS / RCSe ) * Max( Max( RMSe,RRSe ),Min( MLU ,CS ) ) ) ,MUR ) ,( MUC + RCSe ) ) * ( RRSe * MUR ) ) ,( Min( MUM ,( DS * MUM ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - ( MLU * ( MUC / MUM ) ) )", "obj1": 0.649402390438247, "obj2": 0.19439476819316032}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),( Const - BR ) ),( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( Max( MLU,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( Min( Min( RRSe ,( RRSe - ( RRSe + Min( MUM ,CS ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ),CS ) ) * CS ) )", "obj1": 0.14741035856573706, "obj2": 0.7339232365233995}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + CS ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.8007968127490039, "obj2": 0.07552885875996926}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,ACS ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Max( RRSe,MUC ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14402107659438207}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( PN - BR ) * FirstVNF_CPU_Server ) * ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUM ) - Max( ( ( MLU * RRSe ) + ( RMSe * MLU ) ),Max( Min( MLU ,RMSe ),( Min( ( ( DS - CS ) - CS ) ,RRSe ) + ( DS + ( ( MUR * RRSe ) + ( RMSe + RCSe ) ) ) ) ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06844455861838539}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / BR ) / AMS ),MDR ) / ( ARS / ( ( BR - BR ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + Max( DS,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.6892430278884463, "obj2": 0.165430673411627}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8864541832669323, "obj2": 0.04257134669141924}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6201886455064848}, {"determining": "( ( Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) - ( ( ( ACS + RRS ) * AMS ) * PN ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + FirstVNF_CPU ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,CS ) * MLU ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( ( Max( DS,Min( ( MUC - MUC ) ,CS ) ) - ( MUC - MUC ) ) / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7589641434262948, "obj2": 0.09857010026890582}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8605577689243028, "obj2": 0.051544394033170224}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * PN ) - Max( MDR,( BR - PN ) ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Max( CS,( MUR - RMSe ) ) ) ,Max( Min( ( Min( MUR ,DS ) - Max( RRSe,RMSe ) ) ,RRSe ),DS ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9482071713147411, "obj2": 0.018689317801570276}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / ACS ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,MUC ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5597609561752988, "obj2": 0.2546068036193049}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.40039840637450197, "obj2": 0.4201964019656304}, {"determining": "( ( ( ( Max( ( ( FirstVNF_RAM - Min( AMS ,FirstVNF_RAM ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) ),AMS ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * ACS ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ACS - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUC,RMSe ) - ( MUC + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( ( DS - CS ) ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.2364975300425477}, {"determining": "( ( Max( ( FirstVNF_CPU_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server - DDR ) + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( MDR * MRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( CS / MUM ) ,( MLU - ( Max( RRSe,DS ) + Min( DS ,( Max( RRSe,RRSe ) / MUM ) ) ) ) ) - CS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.26693227091633465, "obj2": 0.5904624824501109}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),Max( Const,( Min( ( FirstVNF_Mem_Server + Const ) ,DDR ) * FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( Min( DS ,MUR ) * Min( Min( MUR ,( ( CS * ( MUM / MUC ) ) * Max( RRSe,( RMSe - MUM ) ) ) ) ,( ( ( RCSe / MLU ) + MUM ) + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6408599930209201}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( PN - BR ) ) ,RRS ) + ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( DDR,( ( Min( PN ,( ( FirstVNF_Mem + Const ) * ( FirstVNF_CPU / ARS ) ) ) / ARS ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( RCSe,Min( ( ( CS - DS ) - Max( MUC,RCSe ) ) ,RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS / Max( ( RMSe / CS ),RRSe ) ) )", "obj1": 0.9701195219123506, "obj2": 0.011135185466385814}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ( RRS / MDR ) - ARS ) * Const ) + ACS ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,RRS ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,CS ) * Max( MUR,Min( RCSe ,RRSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.6664661242990202}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( ( BR * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.749003984063745, "obj2": 0.10973501782899892}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * PN ) - Max( MDR,( BR - PN ) ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( RCSe * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.900398406374502, "obj2": 0.03679587737941301}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + CS ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.4045559968483721}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,CS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5637566338307524}, {"determining": "( ( Max( MRS,( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - ( ( ACS + RRS ) * AMS ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9342629482071713, "obj2": 0.021209813641259925}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.850597609561753, "obj2": 0.05738272997136611}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * ( Const - ACS ) ) + DDR ) ) ,DDR ) ,Min( ARS ,AMS ) ) + ( Max( Max( RRS,( AMS + ( MRS - RRS ) ) ),FirstVNF_RAM_Server ) - ( CRS - Min( AMS ,( FirstVNF_Mem / Max( Min( RRS ,( AMS + MDR ) ),FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( ( CS / MUR ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ),MUR ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( ( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( RCSe ,( RCSe - MUC ) ) ) + CS ) ,Max( RRSe,( RRSe + Min( Min( CS ,DS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUM ) ) ),CS ) ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7444973042085691}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem * Const ),ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( ACS + RRS ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_RAM / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Min( MUR ,DS ) - ( CS - MUR ) ) ,Max( RCSe,RMSe ) ) ) ) * ( DS * MUR ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9820717131474104, "obj2": 0.007054561001278373}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( ARS,Const ),( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) + Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( MLU ,Max( ( RMSe / Min( ( RRSe - MUC ) ,MUC ) ),Min( ( ( DS - CS ) - CS ) ,RRSe ) ) ) ) * ( MUC / CS ) ) - ( CS + ( Min( RMSe ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( RRS - PN ) ) / ( Min( ARS ,AMS ) / ( ( Max( Max( ( BR - Const ),CRS ),DDR ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( MUR + RCSe ),CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) * DS ) ) )", "obj1": 0.4103585657370518, "obj2": 0.40469778742666834}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) - FirstVNF_CPU_Server )", "choosing": "( Min( ( ( CS + MUR ) / ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,( RMSe - MUM ) ) * Max( RCSe,( CS * DS ) ) ) ) ,( ( ( RCSe / MLU ) + MUM ) + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20916334661354583, "obj2": 0.6522358608320856}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( MDR + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,CS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RCSe ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5637566338307524}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),Max( CRS,( FirstVNF_Mem_Server / MRS ) ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( ( ( DS - DS ) - CS ) - RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.2384287580069752}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.26031755015809244}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_CPU + PN ),MDR ) ) / MDR ) / PN ) ) ) - ( ( PN - Const ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC * ( ( ( MLU / MUC ) / CS ) + RMSe ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4063745019920319, "obj2": 0.4193337086475875}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10112830129113093}, {"determining": "( Max( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ( ACS - MDR ) ) ,BR ) + ( FirstVNF_CPU * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,( DS * RCSe ) ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( CS ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4820717131474104, "obj2": 0.312559849989611}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( PN ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,CS ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( Max( ( Min( ( FirstVNF_Mem * Max( FirstVNF_Mem,ACS ) ) ,BR ) + ( MDR * ( FirstVNF_RAM_Server + ( PN - MRS ) ) ) ),ACS ),Min( Const ,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( CS,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,RMSe ) + DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.6616519308831209}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Max( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( FirstVNF_CPU * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( CS ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4820717131474104, "obj2": 0.312559849989611}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) / FirstVNF_RAM_Server ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_Mem ),MDR ) / Max( RRS,FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem * Const ),ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( BR + RRS ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MDR / PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - ( ( RRSe / MLU ) + MUC ) ) ,RRSe ) * ( RCSe + RMSe ) ) * DS ) * ( Min( Max( MLU,( ( MUM / RMSe ) * RMSe ) ) ,RRSe ) + Min( DS ,Max( RMSe,RRSe ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.030578934057835315}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) - ( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) ) )", "choosing": "( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.22111553784860558, "obj2": 0.6382864264818799}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / ( ( ARS * MDR ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + Min( MUR ,Max( CS,RRSe ) ) ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( RCSe + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4641434262948207, "obj2": 0.33351303578750596}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( CRS * PN ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( ( RMSe - MUM ) ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5278884462151394, "obj2": 0.27519198860470856}, {"determining": "( ( Max( MRS,( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9063745019920318, "obj2": 0.03150923227733485}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( BR - PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + FirstVNF_CPU ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( CRS + FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Max( Min( MUR ,( Max( MUM,( CS + MUR ) ) * Max( MUR,Min( MUC ,RRSe ) ) ) ),( MUC + RCSe ) ) ) ,( ( RCSe / ( MLU / MUR ) ) / ( MLU + RMSe ) ) ) - ( CS + ( RMSe + MUR ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5124301220639518}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( BR ,Max( ARS,Min( MDR ,ARS ) ) ),( BR - ( ( CRS * PN ) / CRS ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / Max( FirstVNF_RAM_Server,( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( AMS * FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.5968456622122745}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6613545816733067, "obj2": 0.1780032115181257}, {"determining": "( ( FirstVNF_CPU - ( DDR - Const ) ) + ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,MRS ) ),Max( CRS,Min( AMS ,FirstVNF_RAM ) ) ) ) ,( ( ( ( PN / ( RRS / CRS ) ) / MDR ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - ( MUC / Max( MUR,MUM ) ) ) * ( CS * ( RMSe - ( MLU * DS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7477091445981111}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,Max( Min( ( MUC - DS ) ,( RCSe + Min( DS ,RRSe ) ) ),CS ) ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( Min( MUR ,Max( MLU,CS ) ) + ( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( MUM - ( ( DS + ( MUC - ( RMSe / RMSe ) ) ) * ( MUM / ( CS + MUR ) ) ) ) ) ) - ( CS + ( Max( DS,CS ) + DS ) ) )", "obj1": 0.8764940239043825, "obj2": 0.044328258217510096}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / BR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23107569721115537, "obj2": 0.623506384406552}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( Min( MUR ,Max( MLU,CS ) ) + ( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( MUM - ( ( DS + ( MUC - ( RMSe / RMSe ) ) ) * ( MUM / ( CS + MUR ) ) ) ) ) ) - ( CS + ( Max( DS,CS ) + DS ) ) )", "obj1": 0.8764940239043825, "obj2": 0.044328258217510096}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( ( MUC * Max( MUR,DS ) ),RMSe ) ) ) )", "obj1": 0.6095617529880478, "obj2": 0.21279261981034908}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5418326693227091, "obj2": 0.26674055774734545}, {"determining": "( Max( MRS,ACS ) - Max( AMS,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4362549800796813, "obj2": 0.3625431821037016}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MLU ,MUM ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / RCSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.545816733067729, "obj2": 0.26288094506872717}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2875390620982629}], "39": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( Const * CRS ),RRS ) * ( ( Max( Max( FirstVNF_Mem,BR ),FirstVNF_CPU_Server ) + BR ) * PN ) ) - ( PN + FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + ( Min( Max( ( MUR - ( MUC * MUR ) ),DS ) ,RRSe ) + RMSe ) ) / Max( RMSe,CS ) ) * ( MUR / ( RMSe * Max( RRSe,Min( MUC ,( ( MLU + CS ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( PN ,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( RCSe - DS ) / ( ( CS * RRSe ) + ( MUR / RCSe ) ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe + RCSe ) ) ) - ( RMSe + ( Min( DS ,CS ) + ( CS / MLU ) ) ) )", "obj1": 0.8207171314741036, "obj2": 0.0683918290637204}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( ( RRSe + DS ) / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( RMSe * DS ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5, "obj2": 0.3020766909093694}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( ( ( DS - DS ) - CS ) - RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.798804780876494, "obj2": 0.07469291938098852}, {"determining": "( ( Max( ( FirstVNF_CPU_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server - DDR ) + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( MDR * MRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( CS / MUM ) ,( MLU - ( Max( RRSe,DS ) + Min( DS ,( Max( RRSe,RRSe ) / MUM ) ) ) ) ) - CS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.26693227091633465, "obj2": 0.5904624824501109}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4302788844621514, "obj2": 0.3885353255268651}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4656352769000428}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,( RMSe - MUM ) ) * Max( RCSe,( CS * DS ) ) ) ) ,( ( ( RCSe / MLU ) + MUM ) + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.398406374501992, "obj2": 0.4244853643767089}, {"determining": "( ( Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,ACS ) ,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,AMS ) / ( Min( ARS ,( ACS / ARS ) ) / ( ( MDR + FirstVNF_Mem_Server ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( ( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ,MUR ) ,( MUC + RCSe ) ) ) ,( Min( MUC ,( RRSe - CS ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - Max( MLU,( ( Min( ( CS + RRSe ) ,( ( RRSe + MUC ) * ( ( MUR - MLU ) + ( MUR - CS ) ) ) ) + MUM ) - ( DS + MLU ) ) ) )", "obj1": 0.3605577689243028, "obj2": 0.4759150157947882}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6613545816733067, "obj2": 0.1780032115181257}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( BR - PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + FirstVNF_CPU ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( CRS + FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Max( Min( MUR ,( Max( MUM,( CS + MUR ) ) * Max( MUR,Min( MUC ,RRSe ) ) ) ),( MUC + RCSe ) ) ) ,( ( RCSe / ( MLU / MUR ) ) / ( MLU + RMSe ) ) ) - ( CS + ( RMSe + MUR ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5124301220639518}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( CRS * PN ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ),ACS ) - Max( AMS,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( DS ,CS ) + DS ) ),( DS + ( MUM + RMSe ) ) ) ) ) / CS ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4342629482071713, "obj2": 0.36591333163428796}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,ACS ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Max( RRSe,MUC ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14402107659438207}, {"determining": "( ( ( ( ( ACS + RRS ) + AMS ) * PN ) - ( RRS + BR ) ) * Min( ( Max( FirstVNF_RAM,Max( ( DDR - CRS ),Min( CRS ,( MDR * MRS ) ) ) ) - MDR ) ,( Max( FirstVNF_CPU,( Min( Min( AMS ,( AMS - CRS ) ) ,MRS ) / FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( Min( ( ( DS / RCSe ) * Max( Max( RMSe,RRSe ),Min( MLU ,CS ) ) ) ,MUR ) ,( MUC + RCSe ) ) * ( RRSe * MUR ) ) ,( Min( MUM ,( DS * MUM ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - ( MLU * ( MUC / MUM ) ) )", "obj1": 0.649402390438247, "obj2": 0.19439476819316032}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MLU ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.48710890987317634}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( ( MUC * Max( MUR,DS ) ),RMSe ) ) ) )", "obj1": 0.6095617529880478, "obj2": 0.21279261981034908}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - Min( MLU ,( RRSe / MLU ) ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7589641434262948, "obj2": 0.09736082217281791}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6892430278884463, "obj2": 0.1615467827577793}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( RMSe * DS ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2796080217100831}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( ( ( ( ( Max( FirstVNF_RAM,MDR ) + MRS ) / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( PN * ( ( ACS + RRS ) * AMS ) ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( DS + RRSe ),MUC ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUM + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5059760956175299, "obj2": 0.2928653170972834}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( RMSe * MLU ),Max( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ),( ( MUC * RRSe ) + MUC ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.601593625498008, "obj2": 0.22677555463097054}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6508964060202953}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4656352769000428}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4043824701195219, "obj2": 0.4124453900462337}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + CS ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.4045559968483721}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,CS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5637566338307524}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( Min( MUR ,Max( MLU,CS ) ) + ( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( MUM - ( ( DS + ( MUC - ( MUM / RMSe ) ) ) * ( MUM / ( CS + MUR ) ) ) ) ) ) - ( CS + ( Max( DS,CS ) + DS ) ) )", "obj1": 0.9920318725099602, "obj2": 0.0025431885204270136}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( Max( ( Min( ( FirstVNF_Mem * Max( FirstVNF_Mem,ACS ) ) ,BR ) + ( MDR * ( FirstVNF_RAM_Server + ( PN - MRS ) ) ) ),ACS ),Min( Const ,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( CS,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,RMSe ) + DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.6616519308831209}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08116322458471069}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ACS / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( DS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6812749003984063, "obj2": 0.17017837246677683}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( MDR + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,CS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RCSe ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5637566338307524}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10112830129113093}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.2384287580069752}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * PN ) - Max( MDR,( BR - PN ) ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Max( CS,( MUR - RMSe ) ) ) ,Max( Min( ( Min( MUR ,DS ) - Max( RRSe,RMSe ) ) ,RRSe ),DS ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9482071713147411, "obj2": 0.018689317801570276}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( ACS * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8605577689243028, "obj2": 0.051544394033170224}, {"determining": "( ( ( ( Max( AMS,( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ACS - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( Max( CS,( RMSe / MUM ) ) + CS ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( MUC + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5936254980079682, "obj2": 0.23152215176118784}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_Mem ),MDR ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem * Const ),ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( ACS + RRS ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * RRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.9262948207171314, "obj2": 0.027487328158988134}, {"determining": "( ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( ARS,Const ),( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) + Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( MLU ,Max( ( RMSe / Min( ( RRSe - MUC ) ,MUC ) ),Min( ( ( DS - CS ) - CS ) ,RRSe ) ) ) ) * ( MUC / CS ) ) - ( CS + ( Min( RMSe ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( Max( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,( RRS + BR ) ) + ( FirstVNF_CPU * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ) ,( Min( CS ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4820717131474104, "obj2": 0.312559849989611}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,Max( Min( ( MUC - DS ) ,( RCSe + Min( DS ,RRSe ) ) ),CS ) ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( BR ,Max( ARS,Min( MDR ,ARS ) ) ),( BR - ( ( CRS * PN ) / CRS ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / Max( FirstVNF_RAM_Server,( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( AMS * FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( ( MUM + MLU ) + Max( Min( RMSe ,( MUC + MUR ) ),RMSe ) ) ,MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.26294820717131473, "obj2": 0.5968456622122745}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Max( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ( ACS - MDR ) ) ,BR ) + ( FirstVNF_CPU * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,( DS * RCSe ) ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( CS ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4820717131474104, "obj2": 0.312559849989611}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.850597609561753, "obj2": 0.05738272997136611}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) - FirstVNF_CPU_Server )", "choosing": "( Min( ( ( CS + MUR ) / ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,( RMSe - MUM ) ) * Max( RCSe,( CS * DS ) ) ) ) ,( ( ( RCSe / MLU ) + MUM ) + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6457101184482231}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_CPU_Server - ( Max( Min( DDR ,( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( PN - PN ) ) ) / MRS ) ) )", "choosing": "( ( ( ( CS / MUR ) / ( RMSe + MLU ) ) / ( ( DS * MUR ) * Min( Min( MUR ,( ( MUR / ( MUC - MUM ) ) - CS ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6333576773314413}, {"determining": "( ( Max( MRS,( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - ( ( ACS + RRS ) * AMS ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9342629482071713, "obj2": 0.021209813641259925}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( DDR,( Const - Min( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,PN ) ) ) ) )", "choosing": "( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9561752988047809, "obj2": 0.01692110639988299}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( CS ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.8665338645418327, "obj2": 0.048432398258747}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( DDR,( Const - Min( ( Const / FirstVNF_RAM ) ,PN ) ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( RCSe,Min( ( ( DS - CS ) - Max( MUC,RCSe ) ) ,RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9681274900398407, "obj2": 0.012143612887034931}, {"determining": "( Min( Max( FirstVNF_RAM,Max( Max( Max( Min( FirstVNF_Mem_Server ,PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ) - ( CS + ( Min( MUR ,DS ) - ( CS - MUR ) ) ) )", "obj1": 0.8884462151394422, "obj2": 0.04206718686510528}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * ( Const - ACS ) ) + DDR ) ) ,DDR ) ,Min( ARS ,AMS ) ) + Min( PN ,Max( ( ACS / PN ),( CRS - CRS ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( ( MUR / CS ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ),MUR ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( ( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( DS ,RRSe ) ) + CS ) ,( RRSe - ( RRSe + Min( Min( CS ,DS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUM ) ) ),CS ) ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7444406911671467}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6135458167330677, "obj2": 0.20989513247790142}, {"determining": "( ( ( ( Max( ( ( FirstVNF_RAM - Min( AMS ,FirstVNF_RAM ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) ),AMS ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * ACS ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ACS - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUC,RMSe ) - ( MUC + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( ( DS - CS ) ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.2364975300425477}, {"determining": "( ( MDR + Max( AMS,RRS ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( ( Max( ( Max( RMSe,CS ) + RMSe ),Min( MUM ,( RMSe - MLU ) ) ) + RRSe ) ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9063745019920318, "obj2": 0.03150923227733485}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) / FirstVNF_RAM_Server ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_Mem ),MDR ) / Max( RRS,FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem * Const ),ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( BR + RRS ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MDR / PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - ( ( RRSe / MLU ) + MUC ) ) ,RRSe ) * ( RCSe + RMSe ) ) * DS ) * ( Min( Max( MLU,( ( MUM / RMSe ) * RMSe ) ) ,RRSe ) + Min( DS ,Max( RMSe,RRSe ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.030578934057835315}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.40039840637450197, "obj2": 0.4201964019656304}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( RRS - PN ) ) / ( Min( ARS ,AMS ) / ( ( Max( Max( ( BR - Const ),CRS ),DDR ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( MUR + RCSe ),CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) * DS ) ) )", "obj1": 0.4103585657370518, "obj2": 0.40469778742666834}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( DS ,MUM ) ,Min( Max( MUM,Min( ( ( DS - CS ) - CS ) ,RRSe ) ) ,MLU ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.24701195219123506, "obj2": 0.608776820175699}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_RAM_Server / RRS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( MDR + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / DDR ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) + ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,Min( ( RMSe + Max( MUR,DS ) ) ,Min( CS ,RRSe ) ) ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.601256085897898}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( PN ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,CS ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( RMSe / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4243027888446215, "obj2": 0.393707456063902}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / BR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23107569721115537, "obj2": 0.623506384406552}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5119521912350598, "obj2": 0.2875390620982629}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6201886455064848}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / ( ARS / ( ( BR - BR ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ) ,( RRSe - ( Max( DS,RRSe ) + Max( DS,( Max( RRSe,RRSe ) / MUM ) ) ) ) ) - CS ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.6872509960159362, "obj2": 0.16643139486184147}], "40": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,FirstVNF_Mem ) ) - ( AMS - ( ( Min( ( MDR * MDR ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const * CRS ),RRS ) * ( ( Max( Max( FirstVNF_Mem,BR ),FirstVNF_CPU_Server ) + BR ) * PN ) ) - ( PN + FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + ( Min( Max( ( MUR - ( MUC * MUR ) ),DS ) ,RRSe ) + RMSe ) ) / Max( RMSe,CS ) ) * ( MUR / ( RMSe * Max( RRSe,Min( MUC ,( ( MLU + CS ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) )", "choosing": "( ( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) * DS ) * Min( MUR ,( ( RCSe / MLU ) + MUM ) ) )", "obj1": 0.30677290836653387, "obj2": 0.554683692444939}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( ( ( ( Max( AMS,( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ACS - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( Max( CS,( RMSe / MUM ) ) + CS ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) - ( MUC + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5537848605577689, "obj2": 0.26414446298280136}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7415808413056543}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( ( ( ( ( ACS + RRS ) + AMS ) * PN ) - ( RRS + BR ) ) * Min( ( Max( FirstVNF_RAM,Max( ( DDR - CRS ),Min( CRS ,( MDR * MRS ) ) ) ) - MDR ) ,( Max( FirstVNF_CPU,( Min( Min( AMS ,( AMS - CRS ) ) ,MRS ) / FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( Min( ( ( DS / RCSe ) * Max( Max( RMSe,RRSe ),Min( MLU ,CS ) ) ) ,MUR ) ,( MUC + RCSe ) ) * ( RRSe * MUR ) ) ,( Min( MUM ,( DS * MUM ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - ( MLU * ( MUC / MUM ) ) )", "obj1": 0.649402390438247, "obj2": 0.19439476819316032}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( PN ,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( RCSe - DS ) / ( ( CS * RRSe ) + ( MUR / RCSe ) ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe + RCSe ) ) ) - ( RMSe + ( Min( DS ,CS ) + ( CS / MLU ) ) ) )", "obj1": 0.8207171314741036, "obj2": 0.0683918290637204}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * ( FirstVNF_RAM - PN ) ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( MRS ,( AMS * PN ) ) ) ) ,MDR ) ,( ( AMS + ACS ) * ( BR - PN ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( MLU + RMSe ) ) ,( ( DS * MUR ) * Min( ( RCSe * MUM ) ,( MUC + Min( MUM ,( DS + RMSe ) ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.60774566913754}, {"determining": "( ( Max( ( ARS / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( BR / Min( BR ,( FirstVNF_RAM + AMS ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( ( ( MUC / RRSe ) / MUR ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4656352769000428}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( ( Max( ( FirstVNF_CPU_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server - DDR ) + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( MDR * MRS ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( CS / MUM ) ,( MLU - ( Max( RRSe,DS ) + Min( DS ,( Max( RRSe,RRSe ) / MUM ) ) ) ) ) - CS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.26693227091633465, "obj2": 0.5904624824501109}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MLU ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.35258964143426297, "obj2": 0.48710890987317634}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( RMSe * MLU ),Max( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ),( ( MUC * RRSe ) + MUC ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.601593625498008, "obj2": 0.22677555463097054}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.35856573705179284, "obj2": 0.47089917744069404}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( BR - PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + FirstVNF_CPU ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( CRS + FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Max( Min( MUR ,( Max( MUM,( CS + MUR ) ) * Max( MUR,Min( MUC ,RRSe ) ) ) ),( MUC + RCSe ) ) ) ,( ( RCSe / ( MLU / MUR ) ) / ( MLU + RMSe ) ) ) - ( CS + ( RMSe + MUR ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5124301220639518}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,ACS ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Max( RRSe,MUC ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14402107659438207}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( ( MUC * Max( MUR,DS ) ),RMSe ) ) ) )", "obj1": 0.6095617529880478, "obj2": 0.21279261981034908}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( ( ( AMS * ( ACS + ( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) ) ) ) * PN ) - Max( DDR,( Const - Min( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,PN ) ) ) ) )", "choosing": "( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) - ( CS + ( Min( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) ,CS ) + DS ) ) )", "obj1": 0.9701195219123506, "obj2": 0.011135185466385816}, {"determining": "( ( Max( MRS,( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - ( ( ACS + RRS ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * ( CS / MUR ) ) * CS ) )", "obj1": 0.9900398406374502, "obj2": 0.0031805055141282943}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6201886455064848}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6447075214732023}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_RAM_Server / RRS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( MDR + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / DDR ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) + ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,Min( ( RMSe + Max( MUR,DS ) ) ,Min( CS ,RRSe ) ) ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.601256085897898}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( PN * FirstVNF_CPU_Server ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU + ( RRS - DDR ) ) ) ),ACS ) - Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MRS - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( RMSe ,CS ) + DS ) ),( ( MUM + RMSe ) + DS ) ) ) ) / RCSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / RRSe ) ) ) ) ) - Min( CS ,Min( ( MUM / MUC ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.36591333163428796}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( FirstVNF_Mem_Server + Max( MDR,Const ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,AMS ) / ( PN / ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * MRS ) ) / FirstVNF_Mem ) * MDR ) ) ) ) )", "choosing": "( Min( ( ( RRSe * MUR ) * Min( Min( CS ,( Min( RCSe ,Min( RCSe ,MUM ) ) * Max( MUC,( RMSe - DS ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( ( RMSe + MUC ) / RMSe ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6593625498007968, "obj2": 0.1795773469591612}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( PN * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - Min( MLU ,( RRSe / MLU ) ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7589641434262948, "obj2": 0.09736082217281791}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30446470442643553}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR + PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( RMSe / ( ( ( ( RRSe / MLU ) - RRSe ) - Max( MUR,MUR ) ) - ( MUR - MUM ) ) ) ) ,( ( MUR / CS ) / ( RMSe + MLU ) ) ) - ( CS + ( ( DS - CS ) + DS ) ) )", "obj1": 0.43227091633466136, "obj2": 0.3845812814318088}, {"determining": "( Min( Max( FirstVNF_RAM,Max( Max( Max( Min( FirstVNF_Mem_Server ,PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( Max( Max( FirstVNF_Mem,BR ),FirstVNF_CPU_Server ) + BR ) * PN ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * RRSe ) ,( ( CS / MUR ) / ( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ) - ( CS + ( Min( MUR ,DS ) - ( CS - MUR ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.0427429561078678}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( PN ,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8087649402390438, "obj2": 0.07298987410946567}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5630782791749414}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4541832669322709, "obj2": 0.3398637471922522}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4043824701195219, "obj2": 0.4124453900462337}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_Mem ),Min( FirstVNF_Mem ,FirstVNF_Mem ) ) - FirstVNF_CPU_Server )", "choosing": "( Min( ( ( CS + MUR ) / ( DS + ( ( CS / MUC ) + Max( CS,MLU ) ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RRSe,( RMSe - MUM ) ) * Max( RRSe,RMSe ) ) ) ,( ( ( RCSe / MLU ) + MUM ) + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.664835761159076}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,ACS ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( DS ,CS ) + DS ) ),( DS + ( MUM + RMSe ) ) ) ) ) / CS ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7529880478087649, "obj2": 0.10693538470618383}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * PN ) - Max( MDR,( BR - PN ) ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Max( CS,( MUR - RMSe ) ) ) ,Max( Min( ( Min( MUR ,DS ) - Max( RRSe,RMSe ) ) ,RRSe ),DS ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9482071713147411, "obj2": 0.018689317801570276}, {"determining": "( ( AMS * FirstVNF_Mem ) - Min( ( FirstVNF_Mem_Server / ( CRS / DDR ) ) ,ARS ) )", "choosing": "( ( ( MUM / ( Min( MUC ,Min( CS ,( ( MLU - RRSe ) + ( MLU + MUC ) ) ) ) + MUC ) ) * ( MUC / CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.26095617529880477, "obj2": 0.5939270113670975}, {"determining": "( Max( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ( DDR / FirstVNF_RAM_Server ) ) ,( RRS + BR ) ) + ( FirstVNF_CPU * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,MUM ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ) ,( Min( CS ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4681274900398406, "obj2": 0.33286356268796763}, {"determining": "( ( ( FirstVNF_RAM / Const ) / Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( FirstVNF_CPU_Server + Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Max( MUM,MUR ) ) ,( ( RMSe - RCSe ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + ( Max( MLU,RCSe ) + MUM ) ) ) )", "obj1": 0.545816733067729, "obj2": 0.26717801422182014}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08116322458471069}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( Max( ( Min( ( FirstVNF_Mem * Max( FirstVNF_Mem,ACS ) ) ,BR ) + ( MDR * ( FirstVNF_RAM_Server + ( PN - MRS ) ) ) ),ACS ),Min( Const ,Min( ( Const / FirstVNF_RAM ) ,DDR ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( CS,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,RMSe ) + DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.6616519308831209}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5816733067729084, "obj2": 0.2384287580069752}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem / MRS ) ),Min( BR ,ACS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( MLU - RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42725640058308395}, {"determining": "( ( MDR + Max( AMS,RRS ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( ( Max( ( Max( RMSe,CS ) + RMSe ),Min( MUM ,( RMSe - MLU ) ) ) + RRSe ) ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9063745019920318, "obj2": 0.03150923227733485}, {"determining": "( ( FirstVNF_CPU_Server * Max( ( RRS + BR ),PN ) ) * ( ( ( FirstVNF_RAM * ( ACS + RRS ) ) * PN ) - Max( MDR,( Max( Min( DDR ,MRS ),( CRS + FirstVNF_Mem_Server ) ) - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( ( CS - ( RRSe - ( Max( Min( RCSe ,MUM ),RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / ( RMSe + MUR ) ) ) ) ) ) - CS ) )", "obj1": 0.8665338645418327, "obj2": 0.048432398258747}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( PN ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,CS ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7503559254422746}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4656352769000428}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.850597609561753, "obj2": 0.05738272997136611}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6333576773314413}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4341849258024401}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6508964060202953}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6135458167330677, "obj2": 0.2081302626093478}, {"determining": "( ( ( ( Max( ( ( FirstVNF_RAM - Min( AMS ,FirstVNF_RAM ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) ),AMS ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * ACS ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ACS - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUC,RMSe ) - ( MUC + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( ( DS - CS ) ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.2364975300425477}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) / FirstVNF_RAM_Server ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_Mem ),MDR ) / Max( RRS,FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem * Const ),ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( BR + RRS ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MDR / PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - ( ( RRSe / MLU ) + MUC ) ) ,RRSe ) * ( RCSe + RMSe ) ) * DS ) * ( Min( Max( MLU,( ( MUM / RMSe ) * RMSe ) ) ,RRSe ) + Min( DS ,Max( RMSe,RRSe ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.030578934057835315}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2796080217100831}, {"determining": "( ( Max( MRS,( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - ( ( ACS + RRS ) * AMS ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9342629482071713, "obj2": 0.021209813641259925}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( RRS - PN ) ) / ( Min( ARS ,AMS ) / ( ( Max( Max( ( BR - Const ),CRS ),DDR ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( ( MUR + RCSe ),CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) * DS ) ) )", "obj1": 0.4103585657370518, "obj2": 0.40469778742666834}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * PN ) - Max( MDR,( BR - PN ) ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( RMSe / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.900398406374502, "obj2": 0.03642389422303696}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,Max( Min( ( MUC - DS ) ,( RCSe + Min( DS ,RRSe ) ) ),CS ) ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( Min( Max( FirstVNF_RAM,Max( Max( Max( Min( FirstVNF_Mem_Server ,PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( Max( FirstVNF_RAM,Max( Max( Const,( ( RRS / RRS ) * MDR ) ),Min( ( MRS * MDR ) ,CRS ) ) ) ,MDR ) ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( RMSe * DS ) * Min( ( MUR - ( Max( ( RCSe + DS ),RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( MUR - ( RRSe + Min( DS ,CS ) ) ) ) ) - ( CS + ( Min( MUR ,DS ) - ( CS - MUR ) ) ) )", "obj1": 0.8924302788844621, "obj2": 0.040650288463646087}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4302788844621514, "obj2": 0.3885353255268651}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6792828685258964, "obj2": 0.16988246516561767}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / BR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23107569721115537, "obj2": 0.623506384406552}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( ( RRSe + DS ) / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( RMSe * DS ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5, "obj2": 0.3020766909093694}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6892430278884463, "obj2": 0.1615467827577793}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( DDR,( Const - Min( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,PN ) ) ) ) )", "choosing": "( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9601593625498008, "obj2": 0.0149726496577838}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,CS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5637566338307524}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}], "41": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,FirstVNF_Mem ) ) - ( AMS - ( ( Min( ( MDR * MDR ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.30876494023904383, "obj2": 0.5537565979549218}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Min( MDR ,ACS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2868525896414343, "obj2": 0.5542243307135652}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( ( RRS + PN ),MDR ) / ( ( PN / MDR ) / MDR ) ) / FirstVNF_Mem ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RCSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( RRSe / MUC ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( RRSe,DS ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.44459938484533096}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5159362549800797, "obj2": 0.28636505002155765}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe + DS ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( RMSe * DS ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.2985992910452467}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,MRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( ( MRS * MDR ) + ( RRS / ( CRS / FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( MDR / ( ( ( PN / FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUM ,MUC ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( MUC,RMSe ) * MUR ) ) ),( RMSe * ( MUC / ( MLU * MUM ) ) ) ) ) ,( Min( ( CS / ( CS * ( MUC - RMSe ) ) ) ,( RRSe - ( Min( ( CS * RCSe ) ,( RCSe + RMSe ) ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.599601593625498, "obj2": 0.22168465779004723}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem / MRS ) ),Min( BR ,ACS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( MLU - RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42725640058308395}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4302788844621514, "obj2": 0.3885353255268651}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( PN * FirstVNF_CPU_Server ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU + ( RRS - DDR ) ) ) ),ACS ) - Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MRS - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( RMSe ,CS ) + DS ) ),( ( MUM + RMSe ) + DS ) ) ) ) / RCSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / RRSe ) ) ) ) ) - Min( CS ,Min( ( MUM / MUC ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.36591333163428796}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / MDR ) ) ) ,MDR ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - Min( FirstVNF_CPU ,MDR ) )", "choosing": "Min( ( Max( ( ( MUC - CS ) / MUR ),( MLU * RMSe ) ) / Min( ( ( Max( MUC,MUM ) + MLU ) + ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,MUC ) ) ,( Min( ( CS / MUM ) ,( ( ( CS / CS ) * MUR ) - ( Max( DS,RRSe ) + Min( DS ,( Max( DS,DS ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7231075697211156, "obj2": 0.14077366038740607}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_Mem_Server * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - Min( MLU ,( RRSe / MLU ) ) ) ,RRSe ) ) * DS ) * ( ( Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7589641434262948, "obj2": 0.09689303749682435}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2796080217100831}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5637450199203188, "obj2": 0.25020453739183374}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4123505976095618, "obj2": 0.40450091893686135}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.350597609561753, "obj2": 0.4817015176383381}, {"determining": "( ( ( ( Max( ( ( FirstVNF_RAM - Min( AMS ,FirstVNF_RAM ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) ),AMS ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * ACS ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ACS - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUC,RMSe ) - ( MUC + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( ( DS - CS ) ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.2364975300425477}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30446470442643553}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.850597609561753, "obj2": 0.05738272997136611}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08116322458471069}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,ACS ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "Min( ( Max( ( DS - CS ),( MLU + Max( ( CS + ( Min( DS ,CS ) + DS ) ),( DS + ( MUM + RMSe ) ) ) ) ) / CS ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7928286852589641, "obj2": 0.07740252714158023}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.35856573705179284, "obj2": 0.47089917744069404}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23306772908366533, "obj2": 0.6201886455064848}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_RAM_Server / RRS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( MDR + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / DDR ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) + ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,Min( ( RMSe + Max( MUR,DS ) ) ,Min( CS ,RRSe ) ) ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.601256085897898}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.47808764940239046, "obj2": 0.3133189582891056}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( ( ( ( ACS + RRS ) + AMS ) * PN ) - ( RRS + BR ) ) * Min( ( Max( FirstVNF_RAM,Max( ( DDR - CRS ),Min( CRS ,( MDR * MRS ) ) ) ) - MDR ) ,( Max( FirstVNF_CPU,( Min( Min( AMS ,( AMS - CRS ) ) ,MRS ) / FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( Min( ( ( DS / RCSe ) * Max( Max( RMSe,RRSe ),Min( MLU ,CS ) ) ) ,MUR ) ,( MUC + RCSe ) ) * ( RRSe * MUR ) ) ,( Min( MUM ,( DS * MUM ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - ( MLU * ( MUC / MUM ) ) )", "obj1": 0.649402390438247, "obj2": 0.19439476819316032}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( PN / MDR ),PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5900043350195674}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * PN ) - Max( MDR,( BR - PN ) ) ) * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Max( CS,( MUR - RMSe ) ) ) ,Max( Min( ( Min( MUR ,DS ) - Max( RRSe,RMSe ) ) ,RRSe ),DS ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - Min( CS ,( RCSe + DS ) ) )", "obj1": 0.9482071713147411, "obj2": 0.018689317801570276}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4656352769000428}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR + PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( RMSe / ( ( ( ( RRSe / MLU ) - RRSe ) - Max( MUR,MUR ) ) - ( MUR - MUM ) ) ) ) ,( ( MUR / CS ) / ( RMSe + MLU ) ) ) - ( CS + ( ( DS - CS ) + DS ) ) )", "obj1": 0.43227091633466136, "obj2": 0.3845812814318088}, {"determining": "( ( ( ( ( ACS + ( ARS / ( FirstVNF_RAM - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,FirstVNF_RAM_Server ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( RRSe + MUC ) * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) + ( RMSe + MLU ) ) ) - ( ( CS * MUR ) + ( DS + Min( DS ,CS ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2611821150479518}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7415808413056543}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4541832669322709, "obj2": 0.3398637471922522}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( RRS + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,FirstVNF_Mem ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Min( DS ,( ( ( MUR * RCSe ) + MUR ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUR ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.6573705179282868, "obj2": 0.19291430534395915}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) / FirstVNF_RAM_Server ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_Mem ),MDR ) / Max( RRS,FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem * Const ),ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( BR + RRS ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MDR / PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - ( ( RRSe / MLU ) + MUC ) ) ,RRSe ) * ( RCSe + RMSe ) ) * DS ) * ( Min( Max( MLU,( ( MUM / RMSe ) * RMSe ) ) ,RRSe ) + Min( DS ,Max( RMSe,RRSe ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.030578934057835315}, {"determining": "( Max( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ( DDR / FirstVNF_RAM_Server ) ) ,( RRS + BR ) ) + ( FirstVNF_CPU * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,MUM ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ) ,( Min( CS ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4681274900398406, "obj2": 0.33286356268796763}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,ACS ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( Min( Min( ( DS * MUR ) ,Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ) ,( DS / Min( ( Max( RRSe,MUC ) - CS ) ,RRSe ) ) ) ) ,( Min( DS ,( RMSe / MUM ) ) / ( RMSe + MLU ) ) ) - ( DS + ( MUR / ( RRSe * ( MUM / DS ) ) ) ) )", "obj1": 0.7071713147410359, "obj2": 0.14402107659438207}, {"determining": "( ( Max( MRS,( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - ( ( ACS + RRS ) * AMS ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9342629482071713, "obj2": 0.021209813641259925}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6792828685258964, "obj2": 0.16988246516561767}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( PN ,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) - ( CS + ( Min( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) ,CS ) + DS ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06669720519055088}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS * RRS ) * AMS ) / Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( ( MUC / RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,Min( DS ,DS ) ) + DS ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5204542442737543}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20119521912350596, "obj2": 0.659078283031306}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( MLU + RMSe ) ) ,( ( DS * MUR ) * Min( ( RCSe * MUM ) ,( MUC + Min( MUM ,( DS + RMSe ) ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8605577689243028, "obj2": 0.051511628777230235}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6912350597609562, "obj2": 0.16153724100096994}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,Max( Min( ( MUC - DS ) ,( RCSe + Min( DS ,RRSe ) ) ),CS ) ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( BR - PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + FirstVNF_CPU ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( FirstVNF_Mem_Server ,PN ) / ( CRS + FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Max( Min( MUR ,( Max( MUM,( CS + MUR ) ) * Max( MUR,Min( MUC ,RRSe ) ) ) ),( MUC + RCSe ) ) ) ,( ( RCSe / ( MLU / MUR ) ) / ( MLU + RMSe ) ) ) - ( CS + ( RMSe + MUR ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5124301220639518}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,( ( AMS + ACS ) * ( BR - PN ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.60774566913754}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7415808413056543}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( ( ( AMS * ( ACS + ( ( AMS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server / ARS ) ,ARS ) ) ) ) * PN ) - Max( DDR,( Const - Min( ( ( ( FirstVNF_Mem / PN ) / FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,PN ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUR - ( ( ( RCSe - DS ) / ( ( CS * RRSe ) + ( MUR / RCSe ) ) ) / MLU ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) - ( CS + ( Min( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) ,CS ) + DS ) ) )", "obj1": 0.9701195219123506, "obj2": 0.011135185466385814}, {"determining": "( Min( Max( FirstVNF_RAM,Max( Max( Max( Min( FirstVNF_Mem_Server ,PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( ( Max( Max( FirstVNF_Mem,BR ),FirstVNF_CPU_Server ) + BR ) * PN ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * RRSe ) ,( ( CS / MUR ) / ( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ) - ( CS + ( Min( MUR ,DS ) - ( CS - MUR ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.0427429561078678}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( CS ,( RRSe - ( Max( Min( RCSe ,MUM ),RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.8665338645418327, "obj2": 0.048432398258747}, {"determining": "( ( ( FirstVNF_RAM / Const ) / Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / CRS ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( FirstVNF_CPU_Server + Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,Max( MUM,MUR ) ) ,( ( RMSe - RCSe ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + ( Max( MLU,RCSe ) + MUM ) ) ) )", "obj1": 0.545816733067729, "obj2": 0.26717801422182014}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( Min( Min( MDR ,ACS ) ,AMS ) ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( CS + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21912350597609562, "obj2": 0.6333576773314413}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6447075214732023}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4043824701195219, "obj2": 0.4124453900462337}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,ACS ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( DS ,CS ) + DS ) ),( DS + ( MUM + RMSe ) ) ) ) ) / CS ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.7529880478087649, "obj2": 0.1069353847061838}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.2177076001304496}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9063745019920318, "obj2": 0.03150923227733485}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / ( FirstVNF_Mem_Server / ACS ) ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Min( MDR ,PN ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / ( ( CRS * PN ) / CRS ) ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( MUR - MUR ) - ( ( Max( RRSe,MLU ) * MUR ) - CS ) ) ,RRSe ) ) * DS ) * ( Min( CS ,Min( Max( ( CS + RMSe ),DS ) ,RRSe ) ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.16625445204708159}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( PN ,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8087649402390438, "obj2": 0.07298987410946567}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * ( FirstVNF_RAM - PN ) ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( MRS ,( AMS * PN ) ) ) ) ,MDR ) ,( ( AMS + ACS ) * ( BR - PN ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( MLU + RMSe ) ) ,( ( DS * MUR ) * Min( ( RCSe * MUM ) ,( MUC + Min( MUM ,( DS + RMSe ) ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.60774566913754}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( PN ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,CS ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6613545816733067, "obj2": 0.17657322588005878}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / BR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23107569721115537, "obj2": 0.623506384406552}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( DDR,( Const - Min( ( ( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) / FirstVNF_RAM ) ,PN ) ) ) ) )", "choosing": "( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9601593625498008, "obj2": 0.0149726496577838}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( PN ,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUM ,MUC ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.8147410358565738, "obj2": 0.07008861895419138}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6508964060202953}], "42": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * RRSe ) ,( ( CS / MUR ) / ( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ) - ( CS + ( Min( MUR ,DS ) - ( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Min( MDR ,ACS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( RCSe ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2868525896414343, "obj2": 0.5542243307135652}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ACS,FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * Max( BR,PN ) ) / ( Min( ARS ,AMS ) / ( ( Max( FirstVNF_CPU,Max( DDR,RRS ) ) / MDR ) / ( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RRSe ) * Min( MUR ,MUR ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( RMSe + MLU ) / ( CS / MUR ) ) ) - ( CS + ( Min( MUC ,( DS * DS ) ) + DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5339456210044295}, {"determining": "( ( ( ( Max( ( ( FirstVNF_RAM - Min( AMS ,FirstVNF_RAM ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) ),AMS ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * ACS ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ACS - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUC,RMSe ) - ( MUC + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( ( DS - CS ) ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.2364975300425477}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( ( RRS + PN ),MDR ) / ( ( PN / MDR ) / MDR ) ) / FirstVNF_Mem ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RCSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( RRSe / MUC ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( RRSe,DS ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.44459938484533096}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * MDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( DS * Min( CS ,Max( ( MUC * MLU ),RRSe ) ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5159362549800797, "obj2": 0.28636505002155765}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7412398257808342}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3645418326693227, "obj2": 0.4656352769000428}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( PN * FirstVNF_CPU_Server ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU + ( RRS - DDR ) ) ) ),ACS ) - Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MRS - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( RMSe ,CS ) + DS ) ),( ( MUM + RMSe ) + DS ) ) ) ) / RCSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / RRSe ) ) ) ) ) - Min( CS ,Min( ( MUM / MUC ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.36591333163428796}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem / MRS ) ),Min( BR ,ACS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( MLU - RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42725640058308395}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5637450199203188, "obj2": 0.25020453739183374}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / Min( MRS ,Const ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,Max( ( MUR * MUM ),DS ) ) - ( CS + ( Min( DS ,CS ) + RRSe ) ) )", "obj1": 0.7111553784860558, "obj2": 0.13893087654588124}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - Min( MLU ,( RRSe / MLU ) ) ) ,RRSe ) ) * DS ) * ( ( Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.0409671408132246}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_RAM_Server / RRS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( MDR + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / DDR ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) + ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,Min( ( RMSe + Max( MUR,DS ) ) ,Min( CS ,RRSe ) ) ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.601256085897898}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,MRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,( ( MRS * MDR ) + ( RRS / ( CRS / FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( MDR / ( ( ( PN / FirstVNF_Mem ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUM ,MUC ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( MUC,RMSe ) * MUR ) ) ),( RMSe * ( MUC / ( MLU * MUM ) ) ) ) ) ,( Min( ( CS / ( CS * ( MUC - RMSe ) ) ) ,( RRSe - ( Min( ( CS * RCSe ) ,( RCSe + RMSe ) ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.599601593625498, "obj2": 0.22168465779004723}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6613545816733067, "obj2": 0.17657322588005878}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4007897767315482}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4302788844621514, "obj2": 0.3885353255268651}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( PN ,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) - ( CS + ( Min( Min( Min( RCSe ,Max( MUR,CS ) ) ,MUC ) ,CS ) + DS ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06669720519055088}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( RRS + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,FirstVNF_Mem ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Min( DS ,( ( ( MUR * RCSe ) + MUR ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUR ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.6573705179282868, "obj2": 0.19291430534395915}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4900398406374502, "obj2": 0.30446470442643553}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( PN + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Min( PN ,MDR ) / MDR ) / FirstVNF_Mem ) / ( ( FirstVNF_Mem / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / ( DDR / Min( BR ,FirstVNF_RAM_Server ) ) ) ) / PN ) ) ) )", "choosing": "Min( ( MUR * ( ( MUC - DS ) / MUM ) ) ,( ( ( CS / ( CS - ( MUC - RMSe ) ) ) / ( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( MUC,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.9800796812749004, "obj2": 0.007246041330198156}, {"determining": "( ( ( FirstVNF_Mem_Server / ACS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( MRS / ( FirstVNF_Mem_Server / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUM - ( Min( ( ( Max( MUC,Min( MUR ,MUC ) ) + ( RMSe + ( MUC / MUM ) ) ) - ( MLU / ( ( CS - RCSe ) / DS ) ) ) ,Max( RMSe,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ) * RMSe ) ) * ( RRSe - MLU ) )", "obj1": 0.17928286852589642, "obj2": 0.7001169979925118}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( ARS ,AMS ) )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( CS + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9462151394422311, "obj2": 0.017067096822239905}, {"determining": "( ( ( ( ( ACS + RRS ) + AMS ) * PN ) - ( RRS + BR ) ) * Min( ( Max( FirstVNF_RAM,Max( ( DDR - CRS ),Min( CRS ,( MDR * MRS ) ) ) ) - MDR ) ,( Max( FirstVNF_CPU,( Min( Min( AMS ,( AMS - CRS ) ) ,MRS ) / FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( Min( ( ( DS / RCSe ) * Max( Max( RMSe,RRSe ),Min( MLU ,CS ) ) ) ,MUR ) ,( MUC + RCSe ) ) * ( RRSe * MUR ) ) ,( Min( MUM ,( DS * MUM ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - ( MLU * ( MUC / MUM ) ) )", "obj1": 0.649402390438247, "obj2": 0.19439476819316032}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR + PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( RMSe / ( ( ( ( RRSe / MLU ) - RRSe ) - Max( MUR,MUR ) ) - ( MUR - MUM ) ) ) ) ,( ( MUR / CS ) / ( RMSe + MLU ) ) ) - ( CS + ( ( DS - CS ) + DS ) ) )", "obj1": 0.43227091633466136, "obj2": 0.3845812814318088}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( PN * FirstVNF_CPU_Server ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ),ACS ) - Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( RMSe ,CS ) + DS ) ),( DS + ( MUM + RMSe ) ) ) ) ) / CS ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / RRSe ) ) ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.595427103007363}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUR - ( MUC / MLU ) ) - ( CS / ( DS + Min( DS ,CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.41748700222183915}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Max( RRSe,RCSe ) - CS ) )", "obj1": 0.8725099601593626, "obj2": 0.04634861902520145}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( ( RRS + AMS ) - ( MDR * DDR ) )", "choosing": "( ( ( Max( RCSe,Max( MUR,MUM ) ) * Min( ( ( ( ( DS * MUR ) * Max( RRSe,DS ) ) - CS ) - ( MUR / MUR ) ) ,RRSe ) ) * DS ) * ( DS - MUC ) )", "obj1": 0.27091633466135456, "obj2": 0.5772021831399424}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4541832669322709, "obj2": 0.3398637471922522}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4123505976095618, "obj2": 0.4024193292771643}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.660869058388111}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / Max( Const,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6159276816461402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.350597609561753, "obj2": 0.4817015176383381}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.545816733067729, "obj2": 0.2649695245626775}, {"determining": "( ( Max( MRS,( Max( Const,( FirstVNF_Mem_Server * MDR ) ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * CS ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.896414342629482, "obj2": 0.03528739357525495}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * CRS ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,Min( RCSe ,MUM ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.2985992910452467}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( PN / MDR ),PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5900043350195674}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5128961170694993}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,( Max( FirstVNF_Mem,( FirstVNF_Mem - PN ) ) / FirstVNF_RAM_Server ) ) / ( Max( ( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_Mem ),MDR ) / Max( RRS,FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( ( FirstVNF_Mem * Const ),ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM,Max( ( ( BR + RRS ) * AMS ),( ( RRS / BR ) / MDR ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MDR / PN ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - ( ( RRSe / MLU ) + MUC ) ) ,RRSe ) * ( RCSe + RMSe ) ) * DS ) * ( Min( Max( MLU,( ( MUM / RMSe ) * RMSe ) ) ,RRSe ) + Min( DS ,Max( RMSe,RRSe ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.030578934057835315}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( Max( ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ) )", "obj1": 0.9920318725099602, "obj2": 0.003349689091981107}, {"determining": "( ( Max( MRS,( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - ( ( ACS + RRS ) * AMS ) ) - FirstVNF_RAM )", "choosing": "( Min( ( ( CS + MUR ) / ( MLU + RMSe ) ) ,( ( DS * MUR ) * Min( ( RCSe * MUM ) ,( MUC + Min( MUM ,( DS + RMSe ) ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9282868525896414, "obj2": 0.0238751556229082}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem * FirstVNF_Mem ) ),( Min( Min( PN ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,CS ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / ( ( RRSe * MLU ) - MUM ) ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS - ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,ACS ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( Min( CS ,Min( Max( ( CS + RMSe ),DS ) ,RRSe ) ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7629482071713147, "obj2": 0.09671173249673665}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe + DS ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( RMSe * DS ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.2985992910452467}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( Max( RRSe,MUM ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.16283355182022263}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.2177076001304496}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_Mem_Server * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.798804780876494, "obj2": 0.0749806200515877}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( AMS * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,PN ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.850597609561753, "obj2": 0.05738272997136611}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6932270916334662, "obj2": 0.15733049410627456}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9063745019920318, "obj2": 0.03150923227733485}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2796080217100831}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5239043824701195, "obj2": 0.2796080217100831}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6447075214732023}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( RRS + ACS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,FirstVNF_RAM_Server ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + Min( Min( DS ,CS ) ,DS ) ) )", "obj1": 0.7470119521912351, "obj2": 0.11029787651118958}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,Max( Min( ( MUC - DS ) ,( RCSe + Min( DS ,RRSe ) ) ),CS ) ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7468942655912333}, {"determining": "( ( ( ( ( ACS + ( ARS / ( FirstVNF_RAM - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,FirstVNF_RAM_Server ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( RRSe + MUC ) * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) + ( RMSe + MLU ) ) ) - ( ( CS * MUR ) + ( DS + Min( DS ,CS ) ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2611821150479518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem - ACS ) ) ) - Max( Const,Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ,ACS ) ) )", "choosing": "( Min( Max( ( DS * RMSe ),Max( RCSe,MUC ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.35856573705179284, "obj2": 0.47089917744069404}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / BR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23107569721115537, "obj2": 0.623506384406552}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.48476554279274914}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08116322458471069}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_Mem_Server * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10130304238051524}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS - PN ) ,CRS ) ) ) ,MDR ) ,( ( AMS + ACS ) * ( BR - PN ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ( AMS / Min( Const ,FirstVNF_CPU_Server ) ) ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) * ( DS * MUR ) ) ) - ( CS + Max( ( MLU * ( ( Min( MUM ,RMSe ) + ( MUC / MLU ) ) - MLU ) ),DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.60774566913754}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6362231643015337}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS * MUR ),( CS / RRSe ) ) ) ,MUR ) ) * Min( RRSe ,( DS - MUC ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.020850411340761137}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( ( CS * MUR ) + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5517928286852589, "obj2": 0.2611821150479518}], "43": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( AMS ,AMS ) / ( ( MDR / ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server * MRS ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * RMSe ) * RRSe ) ,( ( CS / MUR ) / ( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ) - ( CS + ( Min( MUR ,DS ) - ( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * RRSe ) ,( ( CS / MUR ) / ( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ) - ( CS + ( Min( MUR ,DS ) - ( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Min( MDR ,ACS ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2868525896414343, "obj2": 0.5522903631097051}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,( ACS / DDR ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Max( PN,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( RRSe ,( MLU + ( MUM - MLU ) ) ) * Min( MUR ,( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ) ) - ( CS + ( Min( Max( Min( RCSe ,Max( MUR,CS ) ),MUC ) ,CS ) + DS ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06669720519055086}, {"determining": "( ( ( ( Max( ( ( FirstVNF_RAM - Min( AMS ,FirstVNF_RAM ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) ),AMS ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * ACS ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ACS - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( Min( ( ( DS * MUC ) * ( Min( MUR ,Max( DS,RRSe ) ) + CS ) ) ,( ( MUC - MUR ) / ( CS / Min( ( ( ( RMSe - RRSe ) / MUM ) / MUM ) ,CS ) ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( MUC,RMSe ) - ( MUC + CS ) ) / RMSe ),( RMSe * MLU ) ) ) ),Max( Min( ( DS - CS ) ,RMSe ),( CS + MUC ) ) ) )", "obj1": 0.5856573705179283, "obj2": 0.2364975300425477}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( ARS ,AMS ) )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( CS + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9462151394422311, "obj2": 0.017067096822239905}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( ( RRS + PN ),MDR ) / ( ( PN / MDR ) / MDR ) ) / FirstVNF_Mem ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RCSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( RRSe / MUC ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( RRSe,DS ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.44459938484533096}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( ( MUM + MLU ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9721115537848606, "obj2": 0.008804187931690173}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( RRS + ( AMS - ( ( DDR + DDR ) - Const ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( MRS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + ( ( RCSe * Min( MUC ,MUM ) ) / ( ( MLU - RRSe ) * Min( RRSe ,( MUM - ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.5976095617529881, "obj2": 0.2208153988403543}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( PN * FirstVNF_CPU_Server ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU + ( RRS - DDR ) ) ) ),ACS ) - Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MRS - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( RMSe ,CS ) + DS ) ),( ( MUM + RMSe ) + DS ) ) ) ) / RCSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / RRSe ) ) ) ) ) - Min( CS ,Min( ( MUM / MUC ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.36591333163428796}, {"determining": "( ( ( ( ( ACS + RRS ) + AMS ) * PN ) - ( RRS + BR ) ) * Min( ( Max( FirstVNF_RAM,Max( ( DDR - CRS ),Min( CRS ,( MDR * MRS ) ) ) ) - MDR ) ,( Max( FirstVNF_CPU,( Min( Min( AMS ,( AMS - CRS ) ) ,MRS ) / FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( Min( Min( ( ( DS / RCSe ) * Max( Max( RMSe,RRSe ),Min( MLU ,CS ) ) ) ,MUR ) ,( MUC + RCSe ) ) * ( RRSe * MUR ) ) ,( Min( MUM ,( DS * MUM ) ) / ( RMSe + ( MUC - MUC ) ) ) ) - ( MLU * ( MUC / MUM ) ) )", "obj1": 0.649402390438247, "obj2": 0.19439476819316032}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( Max( RRSe,MUM ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.16283355182022263}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( AMS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,Min( Const ,FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7408227642528588}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_RAM_Server / RRS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( MDR + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / DDR ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) + ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,Min( ( RMSe + Max( MUR,DS ) ) ,Min( CS ,RRSe ) ) ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.601256085897898}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5128961170694993}, {"determining": "( ( PN - FirstVNF_Mem_Server ) + ( ( ( ( MDR + ( MDR * AMS ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( ( ( ( CS / Max( Min( RCSe ,( Min( MUR ,RCSe ) * Max( RRSe,MUR ) ) ),RRSe ) ) + MUR ) / ( ( RMSe / MUC ) * ( RCSe / Min( ( Min( MUR ,Min( MUC ,DS ) ) + ( ( MUM / RCSe ) - MLU ) ) ,RRSe ) ) ) ) * ( ( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) * Min( Min( RRSe ,Max( ( ( ( CS + RMSe ) * RRSe ) / RCSe ),Max( MUM,MLU ) ) ) ,Max( ( CS + ( ( DS + RCSe ) + RCSe ) ),DS ) ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11282305319297811}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( FirstVNF_Mem_Server,( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( MUR * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6602194765140791}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ACS,FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * Max( BR,PN ) ) / ( Min( ARS ,AMS ) / ( ( Max( FirstVNF_CPU,Max( DDR,RRS ) ) / MDR ) / ( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RRSe ) * Min( MUR ,MUR ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( RMSe + MLU ) / ( CS / MUR ) ) ) - ( CS + ( Min( MUC ,( DS * DS ) ) + DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5339456210044295}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / Max( Const,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6159276816461402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server * DDR ) / FirstVNF_CPU ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) + PN ) ) ) )", "choosing": "( Min( Min( MUC ,( RRSe + DS ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + MUC ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3665338645418327, "obj2": 0.46307535639311165}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4541832669322709, "obj2": 0.3398637471922522}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_Mem_Server * MDR ) ),Min( ( ARS * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( ( RRSe - RRSe ) * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.798804780876494, "obj2": 0.0749806200515877}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( RRS - ACS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * ( RCSe / MUR ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + Min( Min( DS ,CS ) ,DS ) ) )", "obj1": 0.7131474103585658, "obj2": 0.13692165973202416}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4103585657370518, "obj2": 0.4075527383745259}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( PN * FirstVNF_CPU_Server ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ),ACS ) - Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( RMSe ,CS ) + DS ) ),( DS + ( MUM + RMSe ) ) ) ) ) / CS ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / RRSe ) ) ) ) ) - CS ) )", "obj1": 0.26693227091633465, "obj2": 0.595427103007363}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( ( ( ( ACS + AMS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * FirstVNF_RAM ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( FirstVNF_CPU,( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ) ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( ( RMSe - ( RCSe * MUR ) ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( Max( DS,RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.2902927167973899}, {"determining": "( ( RRS + AMS ) - ( MDR * DDR ) )", "choosing": "( ( ( Max( RCSe,Max( MUR,MUM ) ) * Min( ( ( ( ( DS * MUR ) * Max( RRSe,DS ) ) - CS ) - ( MUR / MUR ) ) ,RRSe ) ) * DS ) * ( DS - MUC ) )", "obj1": 0.27091633466135456, "obj2": 0.5772021831399424}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - ( MUM / MUM ) ) + MUC ) ) ) / ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5239043824701195, "obj2": 0.27743906045146327}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18193973600257474}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6932270916334662, "obj2": 0.15733049410627456}, {"determining": "( ( ( CRS + CRS ) / ( ( FirstVNF_RAM_Server / Max( ( PN / MDR ),FirstVNF_CPU ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) / Max( ARS,AMS ) ) ) )", "choosing": "( Min( ( ( ( ( RRSe / RMSe ) / MUM ) * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( MLU ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( RMSe + MLU ) / ( CS / MUR ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4262948207171315, "obj2": 0.3927227765718392}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( CS ,( ( DS - CS ) - CS ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MUR / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.703187250996016, "obj2": 0.1465902349318745}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.2177076001304496}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( RRS + DDR ) ) / FirstVNF_Mem ) / MDR ) / ( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,MUR ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5339456210044295}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( PN / MDR ),PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5900043350195674}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) + ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,ACS ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( Min( CS ,Min( Max( ( CS + RMSe ),DS ) ,RRSe ) ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7629482071713147, "obj2": 0.09671173249673665}, {"determining": "( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) * ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Max( ( ( ( CRS / FirstVNF_RAM ) / MDR ) - Max( MDR,( ( RRS + FirstVNF_CPU_Server ) - PN ) ) ),MDR ) ,PN ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.5637450199203188, "obj2": 0.25020453739183374}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem / MRS ) ),Min( BR ,ACS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( MLU - RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42725640058308395}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR + PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( RMSe / ( ( ( ( RRSe / MLU ) - RRSe ) - Max( MUR,MUR ) ) - ( MUR - MUM ) ) ) ) ,( ( MUR / CS ) / ( RMSe + MLU ) ) ) - ( CS + ( ( DS - CS ) + DS ) ) )", "obj1": 0.43227091633466136, "obj2": 0.3845812814318088}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS + ( Min( DS ,Max( Min( ( MUC - DS ) ,( RCSe + Min( DS ,RRSe ) ) ),CS ) ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5577689243027888, "obj2": 0.25299441810774514}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) * AMS ) * Const ) - ( Min( Min( MDR ,ACS ) ,AMS ) * Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + FirstVNF_Mem ),( ( FirstVNF_Mem / Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe - RRSe ) * MUR ) + ( RRSe * MUR ) ) * ( ( Max( MUR,Min( MUC ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RMSe + CS ) - CS ) ) ) * Min( Min( RRSe ,( MUR - ( RRSe + Min( DS ,Max( RRSe,MUC ) ) ) ) ) ,Max( Min( MLU ,( RRSe / MLU ) ),CS ) ) ) )", "obj1": 0.701195219123506, "obj2": 0.15183938463234858}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.1952191235059761, "obj2": 0.6684386277212108}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6447075214732023}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_Mem_Server * MDR ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.798804780876494, "obj2": 0.0749806200515877}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5418326693227091, "obj2": 0.2668817949481639}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * FirstVNF_CPU ) ),Min( ( AMS * PN ) ,CRS ) ) ) ,MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Min( Max( FirstVNF_RAM,Max( ( FirstVNF_CPU_Server / ACS ),Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ,( ( ( ( PN / ( RRS + CRS ) ) / ( MDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) / MDR ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,Max( Min( RCSe ,( MUR + CS ) ),MUM ) ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7868525896414342, "obj2": 0.07973713210449308}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.40039840637450197, "obj2": 0.41748700222183915}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( Max( Const,FirstVNF_Mem_Server ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,MUR ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7111553784860558, "obj2": 0.13792909806806164}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.41832669322709165, "obj2": 0.4007897767315482}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - ( Min( Max( FirstVNF_Mem_Server,BR ) ,FirstVNF_Mem ) + PN ) ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) * MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( ( MLU - RCSe ) - DS ) + Max( Min( RMSe ,Max( DS,CS ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3545816733067729, "obj2": 0.47235818456080897}, {"determining": "( ( MRS + ( MDR + ACS ) ) * Min( Min( Max( MRS,Max( Max( Const,( ARS * MDR ) ),( ( MDR * MRS ) / CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + Max( Max( BR,BR ),CRS ) ) + RRS ) ) ) )", "choosing": "( Min( RCSe ,MLU ) * ( ( ( DS * DS ) / RRSe ) + Min( Max( MUM,RMSe ) ,DS ) ) )", "obj1": 0.5517928286852589, "obj2": 0.25917641029132}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS * MUR ),( CS / RRSe ) ) ) ,MUR ) ) * Min( RRSe ,( DS - MUC ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.020850411340761137}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( ( ( Max( RRS,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( CS ,( ( MLU * ( RMSe + DS ) ) * ( RRSe / RRSe ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6362231643015337}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2151394422310757, "obj2": 0.6447075214732023}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUR - ( MUC / MLU ) ) - ( CS / ( DS + Min( DS ,CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.41748700222183915}, {"determining": "( ( ( FirstVNF_Mem_Server / RRS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( DDR / ( Max( ARS,( ARS - ( ARS / FirstVNF_CPU_Server ) ) ) / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) / ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Min( ( Max( MUM,MUR ) / MLU ) ,( ( Max( MUC,DS ) * ( MUC / MUC ) ) * ( DS * MUR ) ) ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.69927923329017}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( PN,( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( DS * Min( CS ,Max( ( ( CS - MUR ) * MLU ),RRSe ) ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.545816733067729, "obj2": 0.2597808768850368}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem * FirstVNF_Mem ) ),( Min( Min( PN ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,CS ) - ( RRSe + RRSe ) ) / RMSe ),( RMSe * MLU ) ) ,( MUC + RCSe ) ) ) ,( ( CS / ( ( RRSe * MLU ) - MUM ) ) / ( RMSe + ( ( MUC * Max( MUR,DS ) ) * RRSe ) ) ) ) - ( CS - ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6334661354581673, "obj2": 0.19841749604964223}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( RRS + ACS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,FirstVNF_RAM_Server ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( CS + Min( Min( DS ,CS ) ,DS ) ) )", "obj1": 0.749003984063745, "obj2": 0.1093401724056829}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / BR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23107569721115537, "obj2": 0.623506384406552}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_Mem_Server * FirstVNF_Mem ) ),Min( ( MDR * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( MUR,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.7549800796812749, "obj2": 0.10097176514752668}, {"determining": "( ( Max( ( RRS + BR ),PN ) * Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) ) * ( ( ( ( ACS + RRS ) * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * CS ) ) ) ,( Max( RRSe,RCSe ) - CS ) )", "obj1": 0.8705179282868526, "obj2": 0.04692593962601231}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5219123505976095, "obj2": 0.28086470359784255}, {"determining": "( ( Max( ( BR + RRS ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( FirstVNF_RAM - MDR ) * MDR ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( ( Min( CS ,MLU ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8605577689243028, "obj2": 0.051709771187410804}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.34860557768924305, "obj2": 0.48476554279274914}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.660869058388111}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.60774566913754}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - Min( MLU ,( RRSe / MLU ) ) ) ,RRSe ) ) * DS ) * ( ( Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.8864541832669323, "obj2": 0.0409671408132246}, {"determining": "( ( Max( MRS,( ( ( Min( DDR ,PN ) - FirstVNF_CPU ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) - ( ( Const + MDR ) + PN ) ) ) * ( ( FirstVNF_RAM_Server * PN ) / AMS ) ) - FirstVNF_RAM )", "choosing": "( ( CS - ( Max( ( MUR / Max( ( CS * MLU ),RCSe ) ),RMSe ) + CS ) ) * ( ( Max( RCSe,RMSe ) * Min( ( ( ( Min( RRSe ,MUC ) * MUR ) - CS ) - Min( MLU ,( RRSe / MLU ) ) ) ,RRSe ) ) * DS ) )", "obj1": 0.9163346613545816, "obj2": 0.02889313920414895}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42725640058308395}], "44": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU_Server ) ) / ( Min( AMS ,AMS ) / ( ( MDR / ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server * MRS ) ) ) / PN ) ) ) )", "choosing": "( Min( ( ( RRSe * RMSe ) * RRSe ) ,( ( CS / MUR ) / ( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ) - ( CS + ( Min( MUR ,DS ) - ( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.2868525896414343, "obj2": 0.53933120912631}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * ( AMS - DDR ) ) - Min( Min( Max( FirstVNF_RAM,( Min( ( PN * MRS ) ,CRS ) / Max( Const,( ARS * MDR ) ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( MDR - CRS ) )", "choosing": "( ( RCSe * RMSe ) - ( CS + ( Min( ( MLU / MUM ) ,DS ) + DS ) ) )", "obj1": 0.5856573705179283, "obj2": 0.235611340716733}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * FirstVNF_Mem ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( MLU ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.2985992910452467}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server * DDR ) / FirstVNF_CPU ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) + PN ) ) ) )", "choosing": "( Min( Min( MUC ,( RRSe + DS ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + MUC ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3665338645418327, "obj2": 0.46307535639311165}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( ( RRS + PN ),MDR ) / ( ( PN / MDR ) / MDR ) ) / FirstVNF_Mem ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RCSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( RRSe / MUC ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( RRSe,DS ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.44459938484533096}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( RRS + ( AMS - ( ( DDR + DDR ) - Const ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( MRS,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + ( ( RCSe * Min( MUC ,MUM ) ) / ( ( MLU - RRSe ) * Min( RRSe ,( MUM - ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.5976095617529881, "obj2": 0.2208153988403543}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * RRSe ) ,( ( CS / MUR ) / ( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ) - ( CS + ( Min( MUR ,DS ) - ( CS - MUR ) ) ) )", "obj1": 0.896414342629482, "obj2": 0.03886655421630127}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( PN * FirstVNF_CPU_Server ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU + ( RRS - DDR ) ) ) ),ACS ) - Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MRS - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( RMSe ,CS ) + DS ) ),( ( MUM + RMSe ) + DS ) ) ) ) / RCSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / RRSe ) ) ) ) ) - Min( CS ,Min( ( MUM / MUC ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.36591333163428796}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6055776892430279, "obj2": 0.21332415825144563}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( ( ( ( ACS + AMS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * FirstVNF_RAM ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( FirstVNF_CPU,( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ) ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( ( RMSe - ( RCSe * MUR ) ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( Max( DS,RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.2902927167973899}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,FirstVNF_RAM_Server ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0725432238516974}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6382551302092184}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ACS,FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * Max( BR,PN ) ) / ( Min( ARS ,AMS ) / ( ( Max( FirstVNF_CPU,Max( DDR,RRS ) ) / MDR ) / ( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RRSe ) * Min( MUR ,MUR ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( RMSe + MLU ) / ( CS / MUR ) ) ) - ( CS + ( Min( MUC ,( DS * DS ) ) + DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5339456210044295}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4541832669322709, "obj2": 0.3398637471922522}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,Min( ARS ,AMS ) ) ) - FirstVNF_RAM )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - Min( MLU ,( RRSe / MLU ) ) ) ,RRSe ) ) * DS ) * ( ( Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) / RRSe ) + Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ) )", "obj1": 0.9163346613545816, "obj2": 0.02889313920414895}, {"determining": "( ( ( FirstVNF_CPU_Server + Const ) / FirstVNF_RAM_Server ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / RRS ) ,( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + ( DS + ( RCSe / MUR ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,Max( DS,MUM ) ) ) ) ) - ( CS + ( Min( RCSe ,DS ) + DS ) ) )", "obj1": 0.6533864541832669, "obj2": 0.19329947074886722}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( ( ACS * Min( ( MRS - RRS ) ,( FirstVNF_RAM * DDR ) ) ) * ( ( ( FirstVNF_CPU_Server - ( Max( Min( Max( ACS,Const ) ,Max( RRS,BR ) ),( PN * BR ) ) * ( MDR / ( MDR / PN ) ) ) ) * PN ) - Min( Min( ACS ,( Const - FirstVNF_CPU ) ) ,PN ) ) )", "choosing": "( Max( RMSe,( ( DS + RRSe ) - ( MUR + RCSe ) ) ) - Max( ( ( MLU * RRSe ) + Min( CS ,Max( ( ( Max( RCSe,RMSe ) * ( RRSe + RRSe ) ) / MLU ),( RMSe * MLU ) ) ) ),Max( Min( MLU ,( ( DS + CS ) * ( RRSe / ( MUR / Max( MUC,MLU ) ) ) ) ),( CS - MUC ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.061172517559322445}, {"determining": "( ( Max( MRS,( ( ( Min( DDR ,PN ) - FirstVNF_CPU ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) - ( ( Const + MDR ) + PN ) ) ) * ( ( FirstVNF_RAM_Server * PN ) / AMS ) ) - FirstVNF_RAM )", "choosing": "( ( CS - ( Max( ( MUR / Max( ( CS * MLU ),RCSe ) ),RMSe ) + CS ) ) * ( ( Max( RCSe,RMSe ) * Min( ( ( ( Min( RRSe ,MUC ) * MUR ) - CS ) - Min( MLU ,( RRSe / MLU ) ) ) ,RRSe ) ) * DS ) )", "obj1": 0.9163346613545816, "obj2": 0.02889313920414895}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( RRS + ACS ) * AMS ) * PN ) - Min( Min( Min( MDR ,( CRS + FirstVNF_Mem_Server ) ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( MRS / ( Min( MDR ,FirstVNF_CPU ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) / ( RMSe + Max( ( DS / CS ),CS ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( ( RMSe + MLU ) / ( CS / MUR ) ) )", "obj1": 0.7390438247011952, "obj2": 0.12052304781147147}, {"determining": "( Min( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( MDR * FirstVNF_CPU ) ) ) ) ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( ( ( FirstVNF_RAM / BR ) / MDR ) ,AMS ) )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( CS * MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * ( RRSe - ( MUM / MLU ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9462151394422311, "obj2": 0.017067096822239905}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.60774566913754}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - ( DS - CS ) ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6560480489046567}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5128961170694993}, {"determining": "( ( RRS + AMS ) - ( MDR * DDR ) )", "choosing": "( ( ( Max( RCSe,Max( MUR,MUM ) ) * Min( ( ( ( ( DS * MUR ) * Max( RRSe,DS ) ) - CS ) - ( MUR / MUR ) ) ,RRSe ) ) * DS ) * ( DS - MUC ) )", "obj1": 0.27091633466135456, "obj2": 0.5772021831399424}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR + PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( RMSe / ( ( ( ( RRSe / MLU ) - RRSe ) - Max( MUR,MUR ) ) - ( MUR - MUM ) ) ) ) ,( ( MUR / CS ) / ( RMSe + MLU ) ) ) - ( CS + ( ( DS - CS ) + DS ) ) )", "obj1": 0.43227091633466136, "obj2": 0.3845812814318088}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18193973600257474}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_RAM_Server / RRS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( MDR + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / DDR ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) + ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,Min( ( RMSe + Max( MUR,DS ) ) ,Min( CS ,RRSe ) ) ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.601256085897898}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( ( MUM + MLU ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9721115537848606, "obj2": 0.008804187931690173}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) - ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "( ( CS + ( Min( MUR ,DS ) + DS ) ) - Min( ( ( DS * MUR ) * Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC - MUC ) - RCSe ) * DS ) - MUC ) / MUR ) / ( RMSe + MLU ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.13542631144878806}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6394422310756972, "obj2": 0.19434848848232847}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( ( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_Mem_Server * MDR ) ),Min( ( ARS * ACS ) ,CRS ) ) ) + MDR ) ,Max( ( BR - BR ),Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) - ACS ) ) ) ) ) * ( Max( Const,FirstVNF_CPU ) * Max( Min( FirstVNF_RAM_Server ,CRS ),RRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( CS ,( ( MLU * ( RMSe + DS ) ) * ( RRSe / RRSe ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08107136621650414}, {"determining": "( Min( ( ( PN - BR ) * FirstVNF_CPU_Server ) ,RRS ) + ( FirstVNF_CPU_Server + Min( Max( Const,Max( Max( FirstVNF_Mem_Server,ACS ),Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / Min( CRS ,ACS ) ) ) ) ) ,( AMS / ( BR + CRS ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * ( ( DS / MUC ) - MUM ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( MUR / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7444973042085691}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( CRS,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MRS ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( RRSe + Min( RMSe ,MUR ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.3963222333135945}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + ( CS + MUR ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5179282868525896, "obj2": 0.2813700505980094}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( Max( RRSe,MUM ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.16283355182022263}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / Max( Const,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6159276816461402}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( ( MDR + Max( Const,FirstVNF_CPU_Server ) ) ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - Max( RCSe,MLU ) ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.2549800796812749, "obj2": 0.59293243055632}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem / MRS ) ),Min( BR ,ACS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( MLU - RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42725640058308395}, {"determining": "( ( ( CRS + CRS ) / ( ( FirstVNF_RAM_Server / Max( ( PN / MDR ),FirstVNF_CPU ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) / Max( ARS,AMS ) ) ) )", "choosing": "( Min( ( ( ( ( RRSe / RMSe ) / MUM ) * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( MLU ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( RMSe + MLU ) / ( CS / MUR ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4262948207171315, "obj2": 0.3927227765718392}, {"determining": "( ( Max( ( RRS + BR ),PN ) * Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) ) * ( ( ( ( ACS + RRS ) * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),RMSe ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * CS ) ) ) ,( Max( RRSe,RCSe ) - CS ) )", "obj1": 0.8725099601593626, "obj2": 0.04657750344874039}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4103585657370518, "obj2": 0.4075527383745259}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) / Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( AMS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( RCSe,CS ) * ( ( RCSe * RRSe ) / RMSe ) ) ) ,( ( RMSe - MUR ) + MUC ) ) * ( DS * MLU ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3565737051792829, "obj2": 0.4718206145964127}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( ( ( Max( RRS,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) / Const ) * DDR ) - RRS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( CS ,( ( MLU * ( RMSe + DS ) ) * ( RRSe / RRSe ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6362231643015337}, {"determining": "( ( ( FirstVNF_Mem_Server / RRS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( DDR / ( Max( ARS,( ARS - ( ARS / FirstVNF_CPU_Server ) ) ) / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) / ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Min( ( Max( MUM,MUR ) / MLU ) ,( ( Max( MUC,DS ) * ( MUC / MUC ) ) * ( DS * MUR ) ) ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.69927923329017}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5577689243027888, "obj2": 0.25299441810774514}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.1472223561470508}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS * MUR ),( CS / RRSe ) ) ) ,MUR ) ) * Min( RRSe ,( DS - MUC ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.020850411340761137}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( Min( FirstVNF_CPU ,Min( ARS ,AMS ) ) + ( Min( Max( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,Min( Const ,FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7408227642528588}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( PN / MDR ),PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5900043350195674}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUR - ( MUC / MLU ) ) - ( CS / ( DS + Min( DS ,CS ) ) ) )", "obj1": 0.40039840637450197, "obj2": 0.41748700222183915}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( Max( Const,FirstVNF_Mem_Server ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,MUR ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7111553784860558, "obj2": 0.13792909806806164}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5338645418326693, "obj2": 0.2753938109292708}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( ARS * ARS ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( PN / ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / MDR ) / MDR ) ) ) ) )", "choosing": "( ( RCSe - ( RRSe - Max( MUR,( ( MLU - RMSe ) / ( ( CS - MUM ) + ( RRSe + ( RRSe * MUC ) ) ) ) ) ) ) * ( ( CS / RRSe ) + Min( DS ,Max( MUM,RRSe ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2009034371557654}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( Max( Const,FirstVNF_Mem_Server ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ( ( MRS * FirstVNF_Mem ) / FirstVNF_RAM_Server ) + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8306772908366534, "obj2": 0.06595693767440963}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / BR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23107569721115537, "obj2": 0.623506384406552}, {"determining": "( ( Max( ( BR + RRS ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( FirstVNF_RAM - MDR ) * MDR ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( ( Min( CS ,MLU ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.850597609561753, "obj2": 0.05766333967541154}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / ACS ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + MRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( MLU + ( ( ( RCSe - MUR ) + CS ) / ( MUC * CS ) ) ) )", "obj1": 0.35258964143426297, "obj2": 0.47818960716307524}, {"determining": "( ( MRS + ( MDR + ACS ) ) * Min( Min( Max( MRS,Max( Max( Const,( ARS * MDR ) ),( ( MDR * MRS ) / CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + Max( Max( BR,BR ),CRS ) ) + RRS ) ) ) )", "choosing": "( Min( RCSe ,MLU ) * ( ( ( DS * DS ) / RRSe ) + Min( Max( MUM,RMSe ) ,DS ) ) )", "obj1": 0.5517928286852589, "obj2": 0.25917641029132}, {"determining": "( ( Max( MRS,( Min( ( ( Max( MDR,FirstVNF_RAM_Server ) - RRS ) + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ( FirstVNF_CPU * MDR ) * ARS ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( Min( FirstVNF_CPU ,( ARS - AMS ) ) + ( Min( Max( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,Min( Const ,FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - Min( MLU ,( RRSe / MLU ) ) ) ,MUR ) ) * DS ) * Min( RCSe ,( RRSe * Max( CS,MLU ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.004013707503787751}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( AMS,( Max( Max( ( DDR / FirstVNF_CPU ),FirstVNF_CPU_Server ),MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) * ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / ( ( RRSe * ( MLU + MLU ) ) + ( ( ( Min( RRSe ,DS ) + MUM ) / MUM ) / CS ) ) ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) + CS ) )", "obj1": 0.4820717131474104, "obj2": 0.3124463253553978}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.40039840637450197, "obj2": 0.41748700222183915}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,( ACS / DDR ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Max( PN,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( RRSe ,( MLU + ( MUM - MLU ) ) ) * Min( MUR ,( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ) ) - ( CS + ( Min( Max( Min( RCSe ,Max( MUR,CS ) ),MUC ) ,CS ) + DS ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06669720519055086}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( MLU ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2350597609561753, "obj2": 0.6201327820849637}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - ( MUM / MUM ) ) + MUC ) ) ) / ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5239043824701195, "obj2": 0.27743906045146327}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4820717131474104, "obj2": 0.3124463253553978}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * ( MUC - MUR ) ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.2649402390438247, "obj2": 0.5907282566982383}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6932270916334662, "obj2": 0.15733049410627456}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( ( MUM + MLU ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9721115537848606, "obj2": 0.008804187931690173}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.660869058388111}, {"determining": "( ( Max( MRS,( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( MRS / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - ( ( ACS + RRS ) * AMS ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,Max( RRSe,MUC ) ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9362549800796812, "obj2": 0.020850411340761137}], "45": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) + ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,Min( ( RMSe + Max( MUR,DS ) ) ,Min( CS ,RRSe ) ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( ACS * Max( ( ( ( DDR - MRS ) * FirstVNF_CPU ) + CRS ),DDR ) ) * ( Min( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),MDR ) ,PN ) - ( PN * ( FirstVNF_CPU_Server - ( ( BR / Max( FirstVNF_Mem,PN ) ) * Max( ( FirstVNF_RAM_Server * ARS ),( ( Const - ARS ) / ( MRS * MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( CS / MLU ) * MUM ) * ( ( ( RCSe / Min( MUR ,MUR ) ) - ( ( RCSe - ( RCSe / MLU ) ) * MUM ) ) * DS ) )", "obj1": 0.7729083665338645, "obj2": 0.08977196066542473}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,RMSe ) + DS ) + DS ) ) )", "obj1": 0.7410358565737052, "obj2": 0.11512363275521893}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * FirstVNF_Mem ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( MLU ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.2985992910452467}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18193973600257474}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - ( PN / MDR ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + ( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5432024078164499}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( ( MUM + MLU ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.8725099601593626, "obj2": 0.04601049116875445}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( ( RRS + PN ),MDR ) / ( ( PN / MDR ) / MDR ) ) / FirstVNF_Mem ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RCSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( RRSe / MUC ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( RRSe,DS ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.44459938484533096}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),Min( ARS ,Min( ( MDR / FirstVNF_RAM ) ,Const ) ) ) - ( ( ( Min( ( MDR * FirstVNF_CPU ) ,( MRS - ACS ) ) - FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) - AMS ) )", "choosing": "( Min( ( ( Min( MUR ,Max( CS,RRSe ) ) * CS ) * ( DS * RRSe ) ) ,( MUM / ( Min( ( RMSe - ( MLU + ( MUR + MUM ) ) ) ,MUC ) / Min( ( ( ( MLU * DS ) / Max( MLU,MUM ) ) / MUC ) ,DS ) ) ) ) - ( RRSe - RRSe ) )", "obj1": 0.4701195219123506, "obj2": 0.33113136092323925}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( PN * FirstVNF_CPU_Server ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU + ( RRS - DDR ) ) ) ),ACS ) - Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MRS - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( RMSe ,CS ) + DS ) ),( ( MUM + RMSe ) + DS ) ) ) ) / RCSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / RRSe ) ) ) ) ) - Min( CS ,Min( ( MUM / MUC ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.36591333163428796}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( ( ( ( ACS + AMS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * FirstVNF_RAM ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( FirstVNF_CPU,( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ) ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( ( RMSe - ( RCSe * MUR ) ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( Max( DS,RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5079681274900398, "obj2": 0.2902927167973899}, {"determining": "( ( Max( ( FirstVNF_Mem_Server + DDR ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) / ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17198001887441086}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7848605577689243, "obj2": 0.08104494811373306}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR + PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( RMSe / ( ( ( ( RRSe / MLU ) - RRSe ) - Max( MUR,MUR ) ) - ( MUR - MUM ) ) ) ) ,( ( MUR / CS ) / ( RMSe + MLU ) ) ) - ( CS + ( ( DS - CS ) + DS ) ) )", "obj1": 0.43227091633466136, "obj2": 0.3845812814318088}, {"determining": "( ( ( FirstVNF_CPU_Server + Const ) / FirstVNF_RAM_Server ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / RRS ) ,( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + ( DS + ( RCSe / MUR ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.9581673306772909, "obj2": 0.015341231731543153}, {"determining": "( ( Max( ( BR + RRS ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( FirstVNF_RAM - MDR ) * MDR ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8625498007968128, "obj2": 0.05034495432523824}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.60774566913754}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5976095617529881, "obj2": 0.22050452396650563}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,( ACS / DDR ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Max( PN,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( RRSe ,( MLU + ( MUM - MLU ) ) ) * Min( MUR ,( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ) ) - ( CS + ( Min( Max( Min( RCSe ,Max( MUR,CS ) ),MUC ) ,CS ) + DS ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06669720519055086}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.1472223561470508}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * ( AMS - DDR ) ) - Min( Min( Max( FirstVNF_RAM,( Min( ( PN * MRS ) ,CRS ) / Max( Const,( ARS * MDR ) ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( MDR - CRS ) )", "choosing": "( ( RCSe * RMSe ) - ( CS + ( Min( ( MLU / MUM ) ,DS ) + DS ) ) )", "obj1": 0.5856573705179283, "obj2": 0.235611340716733}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( CRS,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MRS ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( RRSe + Min( RMSe ,MUR ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.3963222333135945}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * RRSe ) ,( ( CS / MUR ) / ( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ) - ( CS + ( Min( MUR ,DS ) - ( CS - MUR ) ) ) )", "obj1": 0.896414342629482, "obj2": 0.03886655421630127}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * RRS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * RRSe ) ) * ( CS * Min( Min( MUM ,( MUR - ( RRSe + Min( DS ,( MUM / RRSe ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.70508834787926}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4541832669322709, "obj2": 0.3398637471922522}, {"determining": "( ( ( CRS + CRS ) / ( ( FirstVNF_RAM_Server / Max( ( PN / MDR ),FirstVNF_CPU ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) / Max( ARS,AMS ) ) ) )", "choosing": "( Min( ( ( ( ( RRSe / RMSe ) / MUM ) * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( MLU ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( RMSe + MLU ) / ( CS / MUR ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4262948207171315, "obj2": 0.3927227765718392}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) / Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( AMS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( RCSe,CS ) * ( ( RCSe * RRSe ) / RMSe ) ) ) ,( ( RMSe - MUR ) + MUC ) ) * ( DS * MLU ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3565737051792829, "obj2": 0.4718206145964127}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( ARS * ARS ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( PN / ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / MDR ) / MDR ) ) ) ) )", "choosing": "( ( RCSe - ( RRSe - Max( MUR,( ( MLU - RMSe ) / ( ( CS - MUM ) + ( RRSe + ( RRSe * MUC ) ) ) ) ) ) ) * ( ( CS / RRSe ) + Min( DS ,Max( MUM,RRSe ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2009034371557654}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server * DDR ) / FirstVNF_CPU ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) + PN ) ) ) )", "choosing": "( Min( Min( MUC ,( RRSe + DS ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + MUC ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3665338645418327, "obj2": 0.46307535639311165}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + ( CS + MUR ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5179282868525896, "obj2": 0.2813700505980094}, {"determining": "( ( Max( ( BR + RRS ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( FirstVNF_RAM - MDR ) * MDR ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( ( Min( CS ,MLU ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.850597609561753, "obj2": 0.05766333967541154}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),( RRS * Min( Const ,FirstVNF_RAM ) ) ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,( MUR + ( RMSe + RCSe ) ) ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6434262948207171, "obj2": 0.1921092175956073}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - ( MUM / MUM ) ) + MUC ) ) ) / ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.796812749003984, "obj2": 0.0769911270933888}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( Min( Max( FirstVNF_Mem_Server,MDR ) ,( ( ARS + RRS ) * ACS ) ) / ACS ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( ( MUR / RMSe ) - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( CS,( DS + ( ( CS / RRSe ) + RCSe ) ) ) ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7334368549244308}, {"determining": "( ( Max( MRS,( Min( ( ( Max( MDR,FirstVNF_RAM_Server ) - RRS ) + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ( FirstVNF_CPU * MDR ) * ARS ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( Min( FirstVNF_CPU ,( ARS - AMS ) ) + ( Min( Max( Max( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,Min( Const ,FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - Min( MLU ,( RRSe / MLU ) ) ) ,MUR ) ) * DS ) * Min( RCSe ,( RRSe * Max( CS,MLU ) ) ) )", "obj1": 0.9880478087649402, "obj2": 0.004013707503787751}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) - ( ( MRS * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * CS ) * Min( ( ( Min( ( MLU - DS ) ,Min( DS ,DS ) ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Min( Min( RMSe ,( DS - RRSe ) ) ,RMSe ) ) ) - ( CS + ( Min( DS ,( ( RCSe - DS ) * MLU ) ) + DS ) ) )", "obj1": 0.6772908366533864, "obj2": 0.16658220885861055}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - Min( PN ,( AMS + ACS ) ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( ( MUM + MLU ) * Max( ( CS / RRSe ),( DS * RMSe ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9063745019920318, "obj2": 0.03150923227733485}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( RRS + AMS ) - ( MDR * DDR ) )", "choosing": "( ( ( Max( RCSe,Max( MUR,MUM ) ) * Min( ( ( ( ( DS * MUR ) * Max( RRSe,DS ) ) - CS ) - ( MUR / MUR ) ) ,RRSe ) ) * DS ) * ( DS - MUC ) )", "obj1": 0.27091633466135456, "obj2": 0.5772021831399424}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem / MRS ) ),Min( BR ,ACS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( MLU - RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42725640058308395}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.5960918382783498}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( RRS + ACS ) * AMS ) * PN ) - Min( Min( Min( MDR ,( CRS + FirstVNF_Mem_Server ) ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( MRS / ( Min( MDR ,FirstVNF_CPU ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) / ( RMSe + Max( ( DS / CS ),CS ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( ( RMSe + MLU ) / ( CS / MUR ) ) )", "obj1": 0.7390438247011952, "obj2": 0.12052304781147147}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6932270916334662, "obj2": 0.15733049410627456}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.3047808764940239, "obj2": 0.5379960662860439}, {"determining": "( ( CRS / ARS ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( PN - FirstVNF_RAM ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( ( ( Min( PN ,MDR ) / Min( BR ,RRS ) ) / FirstVNF_Mem ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( ( DS + RCSe ) ,MUC ) ,( ( RMSe - ( DS - CS ) ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( ( Min( DS ,CS ) + DS ) + RCSe ) )", "obj1": 0.21115537848605578, "obj2": 0.6510517883094666}, {"determining": "( Min( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( MDR * FirstVNF_CPU ) ) ) ) ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( ( ( FirstVNF_RAM / BR ) / MDR ) ,AMS ) )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( CS * MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( Max( RRSe,RCSe ) * ( RRSe - ( MUM / MLU ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9462151394422311, "obj2": 0.017067096822239905}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( AMS,( Max( Max( ( DDR / FirstVNF_CPU ),FirstVNF_CPU_Server ),MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) * ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / ( ( RRSe * ( MLU + MLU ) ) + ( ( ( Min( RRSe ,DS ) + MUM ) / MUM ) / CS ) ) ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) + CS ) )", "obj1": 0.4820717131474104, "obj2": 0.3124463253553978}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( ( ( AMS + ACS ) * ( BR - PN ) ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,MLU ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.356244130583308}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / Max( Const,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6159276816461402}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( ( MUM + MLU ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9721115537848606, "obj2": 0.008804187931690173}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( RRS + ACS ) * AMS ) * PN ) - Min( Min( Min( MDR ,ACS ) ,AMS ) ,Max( Max( FirstVNF_Mem,RRS ),( ARS / ( ( RRS - BR ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( ( RRSe - RMSe ) + Min( DS ,( MUR / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.1418373728384318}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( Max( ( MRS + FirstVNF_Mem ),FirstVNF_Mem ) ,ACS ) ,CRS ) / ( Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,FirstVNF_Mem ),MDR ) / Min( Const ,ACS ) ) ) ) / ( ( ACS * Min( ( ACS - BR ) ,Const ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Max( ( AMS + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) / ( AMS / MDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Max( ( MUR - ( ( ( ( MUM * RRSe ) + Max( MUR,RCSe ) ) / ( RCSe - MUM ) ) / MLU ) ),RMSe ) ,( ( CS / MUR ) / ( RMSe / RCSe ) ) ) - ( ( Min( DS ,CS ) + ( CS / MLU ) ) + RMSe ) )", "obj1": 0.22709163346613545, "obj2": 0.630971997425378}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,FirstVNF_RAM_Server ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) ) )", "obj1": 0.8047808764940239, "obj2": 0.0725432238516974}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - ( DS - CS ) ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.20717131474103587, "obj2": 0.6560480489046567}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,( AMS * FirstVNF_CPU ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + Max( RCSe,Max( ( MUR + MUR ),( MUC * MLU ) ) ) ) ) ,( ( DS * MUR ) * Min( Max( Max( ( ( MUM / CS ) / MUC ),MUR ),RRSe ) ,( MUC + RCSe ) ) ) ) - ( RCSe + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5358565737051793, "obj2": 0.26961910077418566}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6382551302092184}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( ACS,FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * Max( BR,PN ) ) / ( Min( ARS ,AMS ) / ( ( Max( FirstVNF_CPU,Max( DDR,RRS ) ) / MDR ) / ( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RRSe ) * Min( MUR ,MUR ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( RMSe + MLU ) / ( CS / MUR ) ) ) - ( CS + ( Min( MUC ,( DS * DS ) ) + DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5339456210044295}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),( ( FirstVNF_RAM_Server * PN ) / AMS ) ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) * ( Min( Max( Const,Max( FirstVNF_Mem_Server,Min( Min( DDR ,CRS ) ,FirstVNF_CPU ) ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MDR / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Max( ( RMSe + Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC / MUC ) - Max( RCSe,RMSe ) ) * DS ) - ( MUC - MUM ) ) / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7231075697211156, "obj2": 0.13119340056843723}, {"determining": "( ( Max( Min( BR ,RRS ),( FirstVNF_RAM_Server / PN ) ) / ( Max( MDR,( Const - Min( PN ,Min( MDR ,MRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * ( ( DS + Min( RRSe ,( MUM / RRSe ) ) ) - Max( RRSe,( RCSe + ( RRSe / DS ) ) ) ) ) * Min( ( ( RMSe - MUR ) + MUC ) ,Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + CS ) + DS ) ) )", "obj1": 0.2868525896414343, "obj2": 0.53933120912631}, {"determining": "( ( ( FirstVNF_Mem_Server / RRS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( DDR / ( Max( ARS,( ARS - ( ARS / FirstVNF_CPU_Server ) ) ) / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) / ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Min( ( Max( MUM,MUR ) / MLU ) ,( ( Max( MUC,DS ) * ( MUC / MUC ) ) * ( DS * MUR ) ) ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.69927923329017}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6394422310756972, "obj2": 0.19434848848232847}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( PN / MDR ),PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5900043350195674}, {"determining": "( ( Max( MRS,( ( ( Min( DDR ,PN ) - FirstVNF_CPU ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) - ( ( Const + MDR ) + PN ) ) ) * ( ( FirstVNF_RAM_Server * PN ) / AMS ) ) - FirstVNF_RAM )", "choosing": "( ( CS - ( Max( ( MUR / Max( ( CS * MLU ),RCSe ) ),RMSe ) + CS ) ) * ( ( Max( RCSe,RMSe ) * Min( ( ( ( Min( RRSe ,MUC ) * MUR ) - CS ) - Min( MLU ,( RRSe / MLU ) ) ) ,RRSe ) ) * DS ) )", "obj1": 0.9163346613545816, "obj2": 0.02889313920414895}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,( ( FirstVNF_Mem_Server / ACS ) / AMS ) ) ,AMS ) / ( Max( ( AMS / Min( RRS ,ACS ) ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( PN - BR ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / MDR ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - CS ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( Max( ( MLU + DS ),( CS - MUM ) ) ,DS ) + DS ) ) )", "obj1": 0.6175298804780877, "obj2": 0.20590293976068058}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( AMS * MRS ) ,( PN / Const ) ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( Max( CS,MUM ) ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / RRSe ) * Min( ( DS * MUR ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5298804780876494, "obj2": 0.2746153738799689}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS * MUR ),( CS / RRSe ) ) ) ,MUR ) ) * Min( RRSe ,( DS - MUC ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.020850411340761137}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4820717131474104, "obj2": 0.3124463253553978}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / BR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23107569721115537, "obj2": 0.623506384406552}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( ( MRS + ( MDR + ACS ) ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,DS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6075697211155379, "obj2": 0.2120105368721927}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) / Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,( PN - FirstVNF_CPU ) ) ) ) * Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( MUM ,RCSe ),Min( Max( DS,CS ) ,( MUC - MUM ) ) ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5856573705179283, "obj2": 0.235611340716733}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.660869058388111}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - ( MUM / MUM ) ) + MUC ) ) ) / ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5239043824701195, "obj2": 0.27743906045146327}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Max( RRS,( Const / MRS ) ) - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / ACS ) ) ) )", "choosing": "( ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) - Min( ( ( DS * MUR ) - Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - Min( RMSe ,MUC ) ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.5222050420386074}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( ( MUM + MLU ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9721115537848606, "obj2": 0.008804187931690173}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / ACS ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + MRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( MLU + ( ( ( RCSe - MUR ) + CS ) / ( MUC * CS ) ) ) )", "obj1": 0.35258964143426297, "obj2": 0.47818960716307524}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5577689243027888, "obj2": 0.25299441810774514}, {"determining": "( ( ( DDR + Const ) / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7498622470480663}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) - ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "( ( CS + ( Min( MUR ,DS ) + DS ) ) - Min( ( ( DS * MUR ) * Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC - MUC ) - RCSe ) * DS ) - MUC ) / MUR ) / ( RMSe + MLU ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.13542631144878806}], "46": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( Min( MRS ,FirstVNF_RAM_Server ),FirstVNF_RAM ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( AMS + ACS ) * ( BR - PN ) ) / FirstVNF_Mem ) / MDR ) / BR ) ) ) )", "choosing": "( ( ( ( MUR / Min( DS ,CS ) ) * Min( ( ( ( Max( MLU,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RCSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) + ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,Min( ( RMSe + Max( MUR,DS ) ) ,Min( CS ,RRSe ) ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( ( Max( DS,RCSe ) * MUC ) ,MUM ) ,Min( ( MUM - ( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem / MRS ) ),Min( BR ,ACS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( MLU - RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42725640058308395}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( CRS,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MRS ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( RRSe + Min( RMSe ,MUR ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.3963222333135945}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,( ACS / DDR ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Max( PN,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( RRSe ,( MLU + ( MUM - MLU ) ) ) * Min( MUR ,( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ) ) - ( CS + ( Min( Max( Min( RCSe ,Max( MUR,CS ) ),MUC ) ,CS ) + DS ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06669720519055086}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - ( PN / MDR ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + ( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5432024078164499}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( ( RRS + PN ),MDR ) / ( ( PN / MDR ) / MDR ) ) / FirstVNF_Mem ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RCSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( RRSe / MUC ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( RRSe,DS ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.44459938484533096}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - ( MUM / MUM ) ) + MUC ) ) ) / ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10588785243351255}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( PN * FirstVNF_CPU_Server ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU + ( RRS - DDR ) ) ) ),ACS ) - Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MRS - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( RMSe ,CS ) + DS ) ),( ( MUM + RMSe ) + DS ) ) ) ) / RCSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / RRSe ) ) ) ) ) - Min( CS ,Min( ( MUM / MUC ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.36591333163428796}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6382551302092184}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4641434262948207, "obj2": 0.3301586875237056}, {"determining": "( ( ( DDR + Const ) / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7498622470480663}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( PN / MDR ),PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5900043350195674}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * FirstVNF_Mem ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( MLU ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.2985992910452467}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - Min( PN ,( AMS + ACS ) ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.8924302788844621, "obj2": 0.038833777850732304}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( ( FirstVNF_CPU_Server + Const ) / FirstVNF_RAM_Server ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / RRS ) ,( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + ( DS + ( RCSe / MUR ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.660869058388111}, {"determining": "( ( Max( ( BR + RRS ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( FirstVNF_RAM - MDR ) * MDR ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( ( Min( CS ,MLU ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.850597609561753, "obj2": 0.05766333967541154}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / ACS ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + MRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( MLU + ( ( ( RCSe - MUR ) + CS ) / ( MUC * CS ) ) ) )", "obj1": 0.35258964143426297, "obj2": 0.47818960716307524}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( FirstVNF_Mem * FirstVNF_CPU ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( ( MUC + Min( RCSe ,RMSe ) ) - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6255681489431157}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR + PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( RMSe / ( ( ( ( RRSe / MLU ) - RRSe ) - Max( MUR,MUR ) ) - ( MUR - MUM ) ) ) ) ,( ( MUR / CS ) / ( RMSe + MLU ) ) ) - ( CS + ( ( DS - CS ) + DS ) ) )", "obj1": 0.43227091633466136, "obj2": 0.3845812814318088}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5577689243027888, "obj2": 0.25299441810774514}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( ( Max( RRSe,RMSe ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.6932270916334662, "obj2": 0.15733049410627456}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( BR - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / Max( FirstVNF_RAM_Server,( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( AMS * FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7007300962851102}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / Max( Const,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6159276816461402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( MDR,( Const - ( PN + MDR ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_Mem + ARS ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + ( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ) ) - ( CS + ( ( DS + Min( ( Min( RCSe ,DS ) * DS ) ,CS ) ) + ( RCSe / Max( RRSe,( ( MUM + ( CS * CS ) ) + Max( DS,( MUC / RCSe ) ) ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5325042671520079}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server * DDR ) / FirstVNF_CPU ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) + PN ) ) ) )", "choosing": "( Min( Min( MUC ,( RRSe + DS ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + MUC ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3665338645418327, "obj2": 0.46307535639311165}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.10982460748444949}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / ( FirstVNF_Mem / DDR ) ) * DDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( MUM - MUR ) + MUC ) ) ) ,Max( ( MUM + MUC ),MUC ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,RMSe ) + DS ) + DS ) ) )", "obj1": 0.7689243027888446, "obj2": 0.09135880746552959}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( ( BR * ( Const * MRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_CPU ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( Min( CS ,MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MLU ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.5960918382783498}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( ARS ,AMS ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( Max( RRSe,MUM ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.027888708801898632}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - FirstVNF_RAM ) ) / ( ARS - ( FirstVNF_Mem_Server - MRS ) ) ) - ( FirstVNF_RAM - CRS ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( RCSe,Max( MUR,MUC ) ) * MUR ) ) ,( ( MLU / DS ) + MUC ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( CS ,CS ) + DS ) ) )", "obj1": 0.5956175298804781, "obj2": 0.22079512943970325}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / BR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.23107569721115537, "obj2": 0.623506384406552}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.30278884462151395, "obj2": 0.525529142187522}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + PN ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / Min( ( ( MUM * ( ( RMSe + MLU ) * MUC ) ) * DS ) ,CS ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5115717566023448}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( ( FirstVNF_Mem_Server / RRS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( DDR / ( Max( ARS,( ARS - ( ARS / FirstVNF_CPU_Server ) ) ) / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) / ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Min( ( Max( MUM,MUR ) / MLU ) ,( ( Max( MUC,DS ) * ( MUC / MUC ) ) * ( DS * MUR ) ) ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.69927923329017}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - ( Min( AMS ,ARS ) + ( PN - FirstVNF_Mem_Server ) ) ) * ( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) / ( Max( ( FirstVNF_CPU / Min( Min( AMS ,MDR ) ,MRS ) ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( RMSe - MUC ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( DS + Min( DS ,CS ) ) ) )", "obj1": 0.545816733067729, "obj2": 0.26116751913447844}, {"determining": "( ( RRS + AMS ) - ( MDR * DDR ) )", "choosing": "( ( ( Max( RCSe,Max( MUR,MUM ) ) * Min( ( ( ( ( DS * MUR ) * Max( RRSe,DS ) ) - CS ) - ( MUR / MUR ) ) ,RRSe ) ) * DS ) * ( DS - MUC ) )", "obj1": 0.27091633466135456, "obj2": 0.5772021831399424}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Max( RRS,( Const / MRS ) ) - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / ACS ) ) ) )", "choosing": "( ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) - Min( ( ( DS * MUR ) - Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - Min( RMSe ,MUC ) ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) )", "obj1": 0.31673306772908366, "obj2": 0.5222050420386074}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( ARS - ACS ) / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_Mem - PN ) ) / ( Min( AMS ,ARS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - DS ) / ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / Max( RRSe,RRSe ) ) + Min( DS ,Min( ( Max( MUM,MUR ) / MLU ) ,( ( Max( MUC,DS ) * ( MUC / MUC ) ) * ( DS * MUR ) ) ) ) ) )", "obj1": 0.6872509960159362, "obj2": 0.1658222552039165}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( RRS + ACS ) * AMS ) * PN ) - Min( Min( Min( MDR ,( CRS + FirstVNF_Mem_Server ) ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( MRS / ( Min( MDR ,FirstVNF_CPU ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) / ( RMSe + Max( ( DS / CS ),CS ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( ( RMSe + MLU ) / ( CS / MUR ) ) )", "obj1": 0.7390438247011952, "obj2": 0.12052304781147147}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( AMS,( Max( Max( ( DDR / FirstVNF_CPU ),FirstVNF_CPU_Server ),MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) * ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / ( ( RRSe * ( MLU + MLU ) ) + ( ( ( Min( RRSe ,DS ) + MUM ) / MUM ) / CS ) ) ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) + CS ) )", "obj1": 0.4820717131474104, "obj2": 0.3124463253553978}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) - ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Const / FirstVNF_RAM_Server ) )", "choosing": "( ( CS + ( Min( MUR ,DS ) + DS ) ) - Min( ( ( DS * MUR ) * Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC - MUC ) - RCSe ) * DS ) - MUC ) / MUR ) / ( RMSe + MLU ) ) ) )", "obj1": 0.7151394422310757, "obj2": 0.13542631144878806}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) - ( ( MRS * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * CS ) * Min( ( ( Min( ( MLU - DS ) ,Min( DS ,DS ) ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Min( Min( RMSe ,( DS - RRSe ) ) ,RMSe ) ) ) - ( CS + ( Min( DS ,( ( RCSe - DS ) * MLU ) ) + DS ) ) )", "obj1": 0.6772908366533864, "obj2": 0.16658220885861055}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS * MUR ),( CS / RRSe ) ) ) ,MUR ) ) * Min( RRSe ,( DS - MUC ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.020850411340761137}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,FirstVNF_RAM_Server ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) ) )", "obj1": 0.8067729083665338, "obj2": 0.0718614178486486}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( ( Min( CS ,MLU ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7729083665338645, "obj2": 0.08852905119335878}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( AMS * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / Const ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * MUR ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5816733067729084, "obj2": 0.23624849298633974}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( ARS * ARS ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( PN / ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / MDR ) / MDR ) ) ) ) )", "choosing": "( ( RCSe - ( RRSe - Max( MUR,( ( MLU - RMSe ) / ( ( CS - MUM ) + ( RRSe + ( RRSe * MUC ) ) ) ) ) ) ) * ( ( CS / RRSe ) + Min( DS ,Max( MUM,RRSe ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2009034371557654}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( ( MRS + ( MDR + ACS ) ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - ( MUM / MUM ) ) + MUC ) ) ) / ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.651394422310757, "obj2": 0.18526556765897365}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( ( Min( CS ,MLU ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.18725099601593626, "obj2": 0.6830808589776294}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( Max( RCSe,CS ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6613545816733067, "obj2": 0.1771238904998462}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),( ( FirstVNF_RAM_Server * PN ) / AMS ) ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) * ( Min( Max( Const,Max( FirstVNF_Mem_Server,Min( Min( DDR ,CRS ) ,FirstVNF_CPU ) ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MDR / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Max( ( RMSe + Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC / MUC ) - Max( RCSe,RMSe ) ) * DS ) - ( MUC - MUM ) ) / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7231075697211156, "obj2": 0.13119340056843723}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7334368549244308}, {"determining": "( ( Max( ( RRS + BR ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + RRS ) * ( ACS + RRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( ( MUM + MLU ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.8725099601593626, "obj2": 0.04601049116875445}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - Min( PN ,( AMS + ACS ) ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.898406374501992, "obj2": 0.03512616119566656}, {"determining": "( ( Max( Min( BR ,RRS ),( FirstVNF_RAM_Server / PN ) ) / ( Max( MDR,( Const - Min( PN ,Min( MDR ,MRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * ( ( DS + Min( RRSe ,( MUM / RRSe ) ) ) - Max( RRSe,( RCSe + ( RRSe / DS ) ) ) ) ) * Min( ( ( RMSe - MUR ) + MUC ) ,Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + CS ) + DS ) ) )", "obj1": 0.2868525896414343, "obj2": 0.53933120912631}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - Min( PN ,( AMS + ACS ) ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * MDR ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( RCSe ,MUM ) ) * CS ) )", "obj1": 0.9860557768924303, "obj2": 0.004833169622190022}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( Min( Max( FirstVNF_Mem_Server,MDR ) ,( ( ARS + RRS ) * ACS ) ) / ACS ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( ( MUR / RMSe ) - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( CS,( DS + ( ( CS / RRSe ) + RCSe ) ) ) ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7334368549244308}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5557768924302788, "obj2": 0.25991276398649993}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.45617529880478086, "obj2": 0.3372747401119957}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * ( AMS - DDR ) ) - Min( Min( Max( FirstVNF_RAM,( Min( ( PN * MRS ) ,CRS ) / Max( Const,( ARS * MDR ) ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( MDR - CRS ) )", "choosing": "( ( RCSe * RMSe ) - ( CS + ( Min( ( MLU / MUM ) ,DS ) + DS ) ) )", "obj1": 0.5856573705179283, "obj2": 0.235611340716733}, {"determining": "( ( ( CRS + CRS ) / ( ( FirstVNF_RAM_Server / Max( ( PN / MDR ),FirstVNF_CPU ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) / Max( ARS,AMS ) ) ) )", "choosing": "( Min( ( ( ( ( RRSe / RMSe ) / MUM ) * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( MLU ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( RMSe + MLU ) / ( CS / MUR ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4262948207171315, "obj2": 0.3927227765718392}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4820717131474104, "obj2": 0.3124463253553978}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,CS ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7828685258964143, "obj2": 0.08209006761058002}, {"determining": "( ( Max( ( BR + RRS ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( FirstVNF_RAM - MDR ) * MDR ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8605577689243028, "obj2": 0.05155724335957512}, {"determining": "( ( Max( ( BR + Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( FirstVNF_RAM - MDR ) * MDR ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( ( Min( CS ,MLU ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.850597609561753, "obj2": 0.05766333967541154}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM_Server,MDR ) ,Max( ARS,RRS ) ) ,MRS ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),( ( MDR * MRS ) + CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( Max( MUC,( MUR - RCSe ) ) / Min( DS ,MUM ) ) ,Min( Max( Max( RRSe,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / RRSe ) * Min( ( MUR * DS ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26850131773992986}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( ( CRS + RRS ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,PN ) ) + ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "( Min( ( Max( Max( MLU,Min( Max( RRSe,( MUC / MUR ) ) ,Min( ( RCSe / MUC ) ,RCSe ) ) ),MUR ) + MUC ) ,Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) - ( CS + ( Min( DS ,CS ) + MLU ) ) )", "obj1": 0.50199203187251, "obj2": 0.2961485962686469}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,ACS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( DS - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.7091633466135459, "obj2": 0.14137620402611403}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( MDR * ACS ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RRSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6553784860557769, "obj2": 0.18193973600257474}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( ( ( RMSe + MLU ) / MLU ) * ( CS * MUR ) ) ) ) * Min( ( ( MUM + MLU ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * CS ) )", "obj1": 0.9721115537848606, "obj2": 0.008804187931690173}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( ( ( AMS + ACS ) * ( BR - PN ) ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,MLU ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.356244130583308}, {"determining": "( ( CRS / ARS ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( PN - FirstVNF_RAM ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( ( ( Min( PN ,MDR ) / Min( BR ,RRS ) ) / FirstVNF_Mem ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( ( DS + RCSe ) ,MUC ) ,( ( RMSe - ( DS - CS ) ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( ( Min( DS ,CS ) + DS ) + RCSe ) )", "obj1": 0.21115537848605578, "obj2": 0.6510517883094666}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( PN + ARS ) ) / ( ( FirstVNF_RAM_Server / Min( Min( ( CRS + ACS ) ,CRS ) ,CRS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( Min( MDR ,MRS ) - ACS ) )", "choosing": "( Min( CS ,Min( Min( Max( Min( ( CS - MLU ) ,Min( RRSe ,( CS - MUR ) ) ),( DS + MUC ) ) ,( RRSe - ( RRSe + Min( DS ,( CS / MUM ) ) ) ) ) ,RCSe ) ) * ( ( Max( CS,( RMSe / MUM ) ) + CS ) - DS ) )", "obj1": 0.3107569721115538, "obj2": 0.5232372456639998}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( CRS - CRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( ( Max( Max( RRSe,MUM ),RCSe ) * Min( ( ( ( Max( RRSe,MUM ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / ( MUR / MUR ) ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.014777963980860587}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) / Min( Min( MDR ,ACS ) ,AMS ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - RMSe ) - CS ) ,RRSe ) * Max( Min( ( ( RMSe + Min( DS ,MUM ) ) / Max( MUC,DS ) ) ,MUM ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.1472223561470508}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( Min( RCSe ,CS ) + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.60774566913754}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( Max( ( ( ( PN / MDR ) / ( FirstVNF_Mem_Server * ARS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( MLU / Max( ( RCSe + MUC ),RCSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( CS + DS ) + DS ) ) )", "obj1": 0.3565737051792829, "obj2": 0.4718206145964127}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2450199203187251, "obj2": 0.60774566913754}], "47": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ),( FirstVNF_RAM_Server / PN ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( Max( Min( MRS ,FirstVNF_RAM_Server ),FirstVNF_RAM ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( AMS + ACS ) * ( BR - PN ) ) / FirstVNF_Mem ) / MDR ) / BR ) ) ) )", "choosing": "( ( ( ( MUR / Min( DS ,CS ) ) * Min( ( ( ( Max( MLU,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RCSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( ( Max( DS,RCSe ) * MUC ) ,MUM ) ,Min( ( MUM - ( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem / MRS ) ),Min( BR ,ACS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( MLU - RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42725640058308395}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( CRS,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MRS ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( RRSe + Min( RMSe ,MUR ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.3963222333135945}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,( ACS / DDR ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Max( PN,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( RRSe ,( MLU + ( MUM - MLU ) ) ) * Min( MUR ,( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ) ) - ( CS + ( Min( Max( Min( RCSe ,Max( MUR,CS ) ),MUC ) ,CS ) + DS ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06669720519055086}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( ( RRS + BR ),PN ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( CS + ( Min( RCSe ,DS ) + DS ) ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.26095617529880477, "obj2": 0.5738233057668982}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server * DDR ) / FirstVNF_CPU ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) + PN ) ) ) )", "choosing": "( Min( Min( MUC ,( RRSe + DS ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + MUC ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3665338645418327, "obj2": 0.46307535639311165}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( ( RRS + PN ),MDR ) / ( ( PN / MDR ) / MDR ) ) / FirstVNF_Mem ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RCSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( RRSe / MUC ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( RRSe,DS ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.44459938484533096}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( ( Min( CS ,MLU ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6135458167330677, "obj2": 0.20818867129867807}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( PN * FirstVNF_CPU_Server ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU + ( RRS - DDR ) ) ) ),ACS ) - Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MRS - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( RMSe ,CS ) + DS ) ),( ( MUM + RMSe ) + DS ) ) ) ) / RCSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / RRSe ) ) ) ) ) - Min( CS ,Min( ( MUM / MUC ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.36591333163428796}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( ARS ,AMS ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( Max( RRSe,MUM ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.027888708801898632}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3804780876494024, "obj2": 0.4345996229601542}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4641434262948207, "obj2": 0.3301586875237056}, {"determining": "( ( CRS / ARS ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( PN - FirstVNF_RAM ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( ( ( Min( PN ,MDR ) / Min( BR ,RRS ) ) / FirstVNF_Mem ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( ( DS + RCSe ) ,MUC ) ,( ( RMSe - ( DS - CS ) ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( ( Min( DS ,CS ) + DS ) + RCSe ) )", "obj1": 0.21115537848605578, "obj2": 0.6510517883094666}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( Const * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5675399357370778}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( ( CRS + RRS ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,PN ) ) + ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "( Min( ( Max( Max( MLU,Min( Max( RRSe,( MUC / MUR ) ) ,Min( ( RCSe / MUC ) ,RCSe ) ) ),MUR ) + MUC ) ,Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) - ( CS + ( Min( DS ,CS ) + MLU ) ) )", "obj1": 0.50199203187251, "obj2": 0.2961485962686469}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( RRS + ACS ) * AMS ) * PN ) - Min( Min( Min( MDR ,( CRS + FirstVNF_Mem_Server ) ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( MRS / ( Min( MDR ,FirstVNF_CPU ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) / ( RMSe + Max( ( DS / CS ),CS ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( ( RMSe + MLU ) / ( CS / MUR ) ) )", "obj1": 0.7390438247011952, "obj2": 0.12052304781147147}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( Max( ( ( ( PN - MDR ) / MDR ) + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( MDR + PN ) * AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / Min( ( ( MUM * ( ( RMSe + RCSe ) * MUC ) ) * DS ) ,CS ) ) ,Min( ( DS * MUR ) ,Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.8426294820717132, "obj2": 0.058508785295960694}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),FirstVNF_Mem ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.18763520746929557}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - ( PN / MDR ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + ( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5432024078164499}, {"determining": "( ( ( FirstVNF_CPU_Server + Const ) / FirstVNF_RAM_Server ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / RRS ) ,( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + ( DS + ( RCSe / MUR ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( ( BR * ( Const * MRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_CPU ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( Min( CS ,MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MLU ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.5960918382783498}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - ( MUM / MUM ) ) + MUC ) ) ) / ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10588785243351255}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5199203187250996, "obj2": 0.28084307024315996}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ARS * MDR ) ),Min( ( AMS * MRS ) ,( PN / Const ) ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / RRSe ) * Min( ( DS * MUR ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5179282868525896, "obj2": 0.2821088016380848}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( ARS * ARS ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( PN / ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / MDR ) / MDR ) ) ) ) )", "choosing": "( ( RCSe - ( RRSe - Max( MUR,( ( MLU - RMSe ) / ( ( CS - MUM ) + ( RRSe + ( RRSe * MUC ) ) ) ) ) ) ) * ( ( CS / RRSe ) + Min( DS ,Max( MUM,RRSe ) ) ) )", "obj1": 0.6314741035856574, "obj2": 0.2009034371557654}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5956175298804781, "obj2": 0.22079512943970325}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,FirstVNF_RAM_Server ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( ( ( ( CS + DS ) - RMSe ) * MUM ) * CS ) - DS ) ) )", "obj1": 0.8027888446215139, "obj2": 0.07405186035775156}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,CS ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7828685258964143, "obj2": 0.08209006761058002}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,FirstVNF_Mem ) ) - Min( PN ,( AMS + ACS ) ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) ,CS ) + DS ) ) )", "obj1": 0.9063745019920318, "obj2": 0.03150923227733485}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( RRS ,BR ) ) / ( Max( MDR,( Const - ( PN + MDR ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_Mem + ARS ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + ( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ) ) - ( CS + ( ( DS + Min( ( Min( RCSe ,DS ) * DS ) ,CS ) ) + ( RCSe / Max( RRSe,( ( MUM + ( CS * CS ) ) + Max( DS,( MUC / RCSe ) ) ) ) ) ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5325042671520079}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * ( AMS - DDR ) ) - Min( Min( Max( FirstVNF_RAM,( Min( ( PN * MRS ) ,CRS ) / Max( Const,( ARS * MDR ) ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( MDR - CRS ) )", "choosing": "( ( RCSe * RMSe ) - ( CS + ( Min( ( MLU / MUM ) ,DS ) + DS ) ) )", "obj1": 0.5856573705179283, "obj2": 0.235611340716733}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( ( ( CRS + CRS ) / ( ( FirstVNF_RAM_Server / Max( ( PN / MDR ),FirstVNF_CPU ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) / Max( ARS,AMS ) ) ) )", "choosing": "( Min( ( ( ( ( RRSe / RMSe ) / MUM ) * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( MLU ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( RMSe + MLU ) / ( CS / MUR ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4262948207171315, "obj2": 0.3927227765718392}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( Max( ( ( ( PN / MDR ) / ( FirstVNF_Mem_Server * ARS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( MLU / Max( ( RCSe + MUC ),RCSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( CS + DS ) + DS ) ) )", "obj1": 0.3565737051792829, "obj2": 0.4718206145964127}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / ( FirstVNF_Mem / DDR ) ) * DDR ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( MUM - MUR ) + MUC ) ) ) ,Max( ( MUM + MUC ),MUC ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,RMSe ) + DS ) + DS ) ) )", "obj1": 0.7689243027888446, "obj2": 0.09135880746552959}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( ARS ,AMS ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9382470119521913, "obj2": 0.020300578804149892}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / ACS ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + MRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( MLU + ( ( ( RCSe - MUR ) + CS ) / ( MUC * CS ) ) ) )", "obj1": 0.35258964143426297, "obj2": 0.47818960716307524}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( PN,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,( Max( RCSe,CS ) * MUR ) ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.8844621513944223, "obj2": 0.04400802736191013}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.7470119521912351, "obj2": 0.10982460748444949}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.31274900398406374, "obj2": 0.5216729921889808}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR + PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * ( RMSe / ( ( ( ( RRSe / MLU ) - RRSe ) - Max( MUR,MUR ) ) - ( MUR - MUM ) ) ) ) ,( ( MUR / CS ) / ( RMSe + MLU ) ) ) - ( CS + ( ( DS - CS ) + DS ) ) )", "obj1": 0.43227091633466136, "obj2": 0.3845812814318088}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.45617529880478086, "obj2": 0.3372747401119957}, {"determining": "( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM_Server,MDR ) ,Max( ARS,RRS ) ) ,MRS ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),( ( MDR * MRS ) + CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( Max( MUC,( MUR - RCSe ) ) / Min( DS ,MUM ) ) ,Min( Max( Max( RRSe,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / RRSe ) * Min( ( MUR * DS ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26850131773992986}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / Max( Const,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6159276816461402}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( AMS,( Max( Max( ( DDR / FirstVNF_CPU ),FirstVNF_CPU_Server ),MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) * ( MDR * ACS ) ),ACS ) ) ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / ( ( RRSe * ( MLU + MLU ) ) + ( ( ( Min( RRSe ,DS ) + MUM ) / MUM ) / CS ) ) ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) + CS ) )", "obj1": 0.4820717131474104, "obj2": 0.3124463253553978}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( BR - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / Max( FirstVNF_RAM_Server,( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( AMS * FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7007300962851102}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - FirstVNF_RAM )", "choosing": "( Min( CS ,RRSe ) * ( ( Min( RRSe ,( RRSe - ( RRSe * ( CS * MUC ) ) ) ) * Min( ( Max( RRSe,RCSe ) * Max( ( CS * MUR ),( CS / RRSe ) ) ) ,MUR ) ) * Min( RRSe ,( DS - MUC ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.020850411340761137}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6382551302092184}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7091633466135459, "obj2": 0.14022496460093298}, {"determining": "( ( ( ( AMS + ACS ) * ( BR - FirstVNF_RAM ) ) / ( ARS - ( FirstVNF_Mem_Server - MRS ) ) ) - ( FirstVNF_RAM - CRS ) )", "choosing": "( Min( ( Min( Min( MUR ,( Max( RCSe,Max( MUR,MUC ) ) * MUR ) ) ,( ( MLU / DS ) + MUC ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( CS ,CS ) + DS ) ) )", "obj1": 0.5956175298804781, "obj2": 0.22079512943970325}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( ( BR * ( Const * MRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_CPU ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.660869058388111}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.6812749003984063, "obj2": 0.1645477299378453}, {"determining": "( ( ( FirstVNF_Mem_Server / RRS ) / Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,MDR ) ) + ( ( DDR / ( Max( ARS,( ARS - ( ARS / FirstVNF_CPU_Server ) ) ) / ( Const * MRS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) / ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Min( ( Max( MUM,MUR ) / MLU ) ,( ( Max( MUC,DS ) * ( MUC / MUC ) ) * ( DS * MUR ) ) ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.69927923329017}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( Max( RCSe,CS ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.48639219953446977}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( AMS * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / Const ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( FirstVNF_Mem / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( ( RCSe + RRSe ) / RCSe ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * MUR ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5617529880478087, "obj2": 0.2510838965994094}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( ( Min( CS ,MLU ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.18725099601593626, "obj2": 0.6830808589776294}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),( ( FirstVNF_RAM_Server * PN ) / AMS ) ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) * ( Min( Max( Const,Max( FirstVNF_Mem_Server,Min( Min( DDR ,CRS ) ,FirstVNF_CPU ) ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( MDR / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Max( ( RMSe + Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC / MUC ) - Max( RCSe,RMSe ) ) * DS ) - ( MUC - MUM ) ) / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7231075697211156, "obj2": 0.13119340056843723}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( FirstVNF_Mem * FirstVNF_CPU ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( ( MUC + Min( RCSe ,RMSe ) ) - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6255681489431157}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( ( DDR + Const ) / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7498622470480663}, {"determining": "( ( Max( Min( BR ,RRS ),( FirstVNF_RAM_Server / PN ) ) / ( Max( MDR,( Const - Min( PN ,Min( MDR ,MRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * ( ( DS + Min( RRSe ,( MUM / RRSe ) ) ) - Max( RRSe,( RCSe + ( RRSe / DS ) ) ) ) ) * Min( ( ( RMSe - MUR ) + MUC ) ,Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + CS ) + DS ) ) )", "obj1": 0.2868525896414343, "obj2": 0.53933120912631}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ARS * MDR ) ),Min( ( AMS * MRS ) ,( PN / Const ) ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Min( RCSe ,RMSe ) ,( ( ( RCSe + RRSe ) / RRSe ) * Min( ( DS * MUR ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26850131773992986}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / Const ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_Mem_Server,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,Min( ( FirstVNF_RAM_Server + PN ) ,( BR - Max( RRS,RRS ) ) ) ) )", "choosing": "( Min( ( ( RCSe * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( ( MLU * MUC ) ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * MUR ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( ( Min( DS ,CS ) + DS ) + MUR ) )", "obj1": 0.5537848605577689, "obj2": 0.2544469083934903}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) - ( ( MRS * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * CS ) * Min( ( ( Min( ( MLU - DS ) ,Min( DS ,DS ) ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Min( Min( RMSe ,( DS - RRSe ) ) ,RMSe ) ) ) - ( CS + ( Min( DS ,( ( RCSe - DS ) * MLU ) ) + DS ) ) )", "obj1": 0.6772908366533864, "obj2": 0.16658220885861055}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,( ACS / DDR ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Max( PN,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.250996015936255, "obj2": 0.5968740937431171}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.660869058388111}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( CRS - CRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( ( Max( Max( RRSe,MUM ),RCSe ) * Min( ( ( ( Max( RRSe,MUM ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / ( MUR / MUR ) ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.014777963980860587}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4820717131474104, "obj2": 0.3124463253553978}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7529880478087649, "obj2": 0.10884715262165122}, {"determining": "( ( Max( ( BR + RRS ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( FirstVNF_RAM - MDR ) * MDR ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8605577689243028, "obj2": 0.05155724335957512}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.1472223561470508}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) / Min( Min( MDR ,ACS ) ,AMS ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - RMSe ) - CS ) ,RRSe ) * Max( Min( ( ( RMSe + Min( DS ,MUM ) ) / Max( MUC,DS ) ) ,MUM ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6892430278884463, "obj2": 0.1558903982050079}, {"determining": "( ( Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * FirstVNF_Mem ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,( ( CRS - Const ) * RRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / MDR ) ) ,PN ) ) - ( ( ( ACS + RRS ) * AMS ) * PN ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( MLU ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( RRSe / MLU ) ) ) ) ,( ( RCSe / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.2985992910452467}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( Max( RCSe,CS ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17277531102658658}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * FirstVNF_Mem ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( MLU ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.49800796812749004, "obj2": 0.2985992910452467}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( ( ( AMS + ACS ) * ( BR - PN ) ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,MLU ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.356244130583308}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + PN ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / Min( ( ( MUM * ( ( RMSe + MLU ) * MUC ) ) * DS ) ,CS ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5115717566023448}, {"determining": "( ( Max( ( BR + RRS ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( RRS - MDR ) * MDR ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - ( DDR * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( MLU + ( ( ( ( DS + ( MUM * MUC ) ) / ( CS - RRSe ) ) * MUM ) - MUR ) ) - Min( RRSe ,MUM ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8625498007968128, "obj2": 0.05016772861037556}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) / Min( Min( MDR ,ACS ) ,AMS ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - RMSe ) - CS ) ,RRSe ) * Max( Min( ( ( RMSe + Min( DS ,MUM ) ) / Max( MUC,DS ) ) ,MUM ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6992031872509961, "obj2": 0.1472223561470508}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) / Min( Min( MDR ,ACS ) ,AMS ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - RMSe ) - CS ) ,RRSe ) * Max( Min( ( ( RMSe + Min( DS ,MUM ) ) / Max( MUC,DS ) ) ,MUM ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6892430278884463, "obj2": 0.1558903982050079}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7334368549244308}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,FirstVNF_RAM_Server ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) ) )", "obj1": 0.8067729083665338, "obj2": 0.0718614178486486}], "48": [{"determining": "( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( ( ( RRS + FirstVNF_Mem ) / ARS ),( ( ( CRS + FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( Min( Min( RMSe ,( ( ( ( RCSe - MLU ) - CS ) / RRSe ) * Min( CS ,Max( CS,Min( RCSe ,RCSe ) ) ) ) ) ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Max( Max( Min( RCSe ,MUM ),( ( ( ( MUC / MUC ) - RCSe ) * DS ) - MUC ) ),MLU ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + ( DS / ( CS / MUM ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem / MRS ) ),Min( BR ,ACS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - PN )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( MLU - RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( Min( DS ,CS ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Max( ( AMS / FirstVNF_Mem ),Max( Const,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ( FirstVNF_Mem / AMS ) / ( CRS + Const ) ) ) ) ) ) )", "choosing": "( Min( Min( DS ,( ( CS + CS ) / MUM ) ) ,RRSe ) * ( Min( Min( ( Max( DS,RCSe ) * MUC ) ,MUM ) ,Min( ( MUM - ( Min( ( CS / RRSe ) ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( Max( Min( MLU ,RMSe ),( CS + MUC ) ) ,( RRSe - ( RRSe + Max( DS,( CS / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.10756972111553785, "obj2": 0.8066912159837167}, {"determining": "( Min( Min( Max( FirstVNF_RAM_Server,( ACS + DDR ) ) ,DDR ) ,Min( ( AMS + FirstVNF_RAM_Server ) ,AMS ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( FirstVNF_Mem_Server,( ACS + RRS ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_Mem ) / ( AMS * RRS ) ) ) ) ,MDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * Max( Min( MUR ,( Max( Max( MUM,MUC ),RCSe ) * Max( RCSe,Min( RCSe ,CS ) ) ) ),MUR ) ) - ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( Min( DS ,CS ) ,( CS / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / MUC ) + Max( CS,MUR ) ) ),CS ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7669999609623689}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4123505976095618, "obj2": 0.40560087282732277}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem / MRS ) ),Min( BR ,ACS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( ( MLU - RMSe ),RCSe ) * Max( RCSe,Min( RCSe ,DS ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) ) )", "obj1": 0.39243027888446214, "obj2": 0.42725640058308395}, {"determining": "( ( Max( ( BR + RRS ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( CS + ( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( Min( RCSe ,CS ) + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4203187250996016, "obj2": 0.3812278958356536}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( PN,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( ( Max( RCSe,Max( RRSe,MUM ) ) * Min( ( ( ( Max( RRSe,DS ) * MUR ) - CS ) - ( MUR + MUR ) ) ,( Max( RCSe,CS ) * MUR ) ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.8844621513944223, "obj2": 0.04400802736191013}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,( ACS / DDR ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Max( PN,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( RRSe ,( MLU + ( MUM - MLU ) ) ) * Min( MUR ,( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ) ) - ( CS + ( Min( Max( Min( RCSe ,Max( MUR,CS ) ),MUC ) ,CS ) + DS ) ) )", "obj1": 0.8227091633466136, "obj2": 0.06669720519055086}, {"determining": "( Max( Min( Min( Max( FirstVNF_RAM,( AMS - AMS ) ) ,MDR ) ,Min( Max( ( FirstVNF_Mem_Server * ( ( PN * FirstVNF_CPU_Server ) / CRS ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU + ( RRS - DDR ) ) ) ),ACS ) - Max( Const,( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MRS - Max( MDR,FirstVNF_CPU ) ) ),ACS ) ) ) )", "choosing": "Min( ( Max( CS,( MLU + Max( ( CS + ( Min( RMSe ,CS ) + DS ) ),( ( MUM + RMSe ) + DS ) ) ) ) / RCSe ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / RRSe ) ) ) ) ) - Min( CS ,Min( ( MUM / MUC ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 0.4342629482071713, "obj2": 0.36591333163428796}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( ( RRS + BR ),PN ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( CS + ( Min( RCSe ,DS ) + DS ) ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.26095617529880477, "obj2": 0.5738233057668982}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( FirstVNF_RAM - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / ( FirstVNF_RAM_Server - ( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( MRS / PN ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * Max( Max( ( MUR / Max( ( RMSe - MUM ),RCSe ) ),MUM ),( Min( ( ( CS - MUM ) - Max( MLU,DS ) ) ,MUC ) * MUM ) ) ) ,Min( ( ( ( MUR + ( RMSe + RCSe ) ) - Min( RMSe ,CS ) ) * MUR ) ,RCSe ) ) * Min( Max( Max( ( DS - RMSe ),MLU ),( Max( MUM,CS ) + ( ( ( RCSe * MUC ) + Min( RRSe ,MLU ) ) + MUC ) ) ) ,Min( Max( ( CS + ( MLU * MUC ) ),DS ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7943094714352641}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server * DDR ) / FirstVNF_CPU ) ) ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + RRS ) * AMS ) / FirstVNF_Mem ) / MDR ) + PN ) ) ) )", "choosing": "( Min( Min( MUC ,( RRSe + DS ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + MUC ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3665338645418327, "obj2": 0.46307535639311165}, {"determining": "( ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,CS ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( ( DS * CS ) / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6294820717131474, "obj2": 0.19809610093630448}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( Max( ( RRS + PN ),MDR ) / ( ( PN / MDR ) / MDR ) ) / FirstVNF_Mem ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Max( ( ( Max( RCSe,RMSe ) - ( RRSe + RCSe ) ) / ( CS + MUC ) ),( RMSe * Max( RCSe,RCSe ) ) ) ,( RRSe / MUC ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( RRSe,DS ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.37250996015936255, "obj2": 0.44459938484533096}, {"determining": "( ( ( ( CRS - ACS ) + ( RRS * Max( DDR,( Max( ( MDR + Const ),FirstVNF_Mem ) + MDR ) ) ) ) - Const ) + ( RRS + CRS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7083410163992427}, {"determining": "( Min( MDR ,FirstVNF_CPU ) + ( Min( ( Max( Min( AMS ,Max( ARS,Min( MDR ,ARS ) ) ),( BR - ( ( BR / MDR ) * BR ) ) ) - Min( PN ,FirstVNF_CPU_Server ) ) ,Max( ( BR / Max( FirstVNF_RAM_Server,( RRS * Min( Const ,FirstVNF_RAM ) ) ) ),( AMS * FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7007300962851102}, {"determining": "( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * MRS ) * ( Max( MRS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( ( ( ACS * Min( FirstVNF_Mem ,( RRS + FirstVNF_Mem_Server ) ) ) + RRS ) * AMS ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( CS ,( Max( MUM,MUC ) + CS ) ) ) * RMSe ) * ( ( CS / RRSe ) + Min( ( ( ( MUR + RMSe ) - ( Max( ( MLU / MLU ),Min( MUC ,MUM ) ) - Min( ( MUR / RMSe ) ,RMSe ) ) ) / DS ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.5697211155378487, "obj2": 0.24298142249759402}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( ( ( DS * MUR ) * Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ,( ( ( ( ( ( MUC / MUC ) - Max( RCSe,RMSe ) ) * DS ) - MUC ) / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.9641434262948207, "obj2": 0.012022864634586999}, {"determining": "( Min( ( AMS - FirstVNF_Mem_Server ) ,MRS ) + ( Min( Max( FirstVNF_RAM,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS / FirstVNF_Mem ) ) ) ) ,( PN + ( ( ( ARS * DDR ) * CRS ) * ARS ) ) ) + ARS ) )", "choosing": "( ( ( CS + MLU ) / ( RRSe * MUR ) ) * Max( Max( MUR,Max( CS,( ( Max( Min( RRSe ,MUM ),Min( RRSe ,CS ) ) + Min( MUM ,RRSe ) ) + CS ) ) ),( RCSe / ( MUR - ( CS - DS ) ) ) ) )", "obj1": 0.15139442231075698, "obj2": 0.723335568926518}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,RMSe ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.4641434262948207, "obj2": 0.3301586875237056}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / Max( Const,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6159276816461402}, {"determining": "( ( CRS / ARS ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( PN - FirstVNF_RAM ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( ( ( Min( PN ,MDR ) / Min( BR ,RRS ) ) / FirstVNF_Mem ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( ( DS + RCSe ) ,MUC ) ,( ( RMSe - ( DS - CS ) ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( ( Min( DS ,CS ) + DS ) + RCSe ) )", "obj1": 0.21115537848605578, "obj2": 0.6510517883094666}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( Const * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5675399357370778}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( Max( RRSe,MUM ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) - ( CS + ( Min( RCSe ,DS ) + DS ) ) )", "obj1": 0.9880478087649402, "obj2": 0.00477201444051408}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( ( CRS + RRS ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,PN ) ) + ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "( Min( ( Max( Max( MLU,Min( Max( RRSe,( MUC / MUR ) ) ,Min( ( RCSe / MUC ) ,RCSe ) ) ),MUR ) + MUC ) ,Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) - ( CS + ( Min( DS ,CS ) + MLU ) ) )", "obj1": 0.50199203187251, "obj2": 0.2961485962686469}, {"determining": "( ( MDR * Min( ( ( MDR + RRS ) * FirstVNF_RAM ) ,BR ) ) - Max( Const,FirstVNF_Mem ) )", "choosing": "Min( ( Min( ( ( RMSe + MLU ) + Min( MUC ,MUM ) ) ,MUC ) / Max( ( RMSe / ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) ),( RMSe * MLU ) ) ) ,( Min( ( CS / ( CS - ( MUC - RMSe ) ) ) ,( RRSe - ( Max( DS,RRSe ) + ( DS * ( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - ( ( ( Max( Max( Min( RMSe ,RRSe ),Min( RRSe ,RRSe ) ),RRSe ) * Max( ( MUR / ( RCSe - MUC ) ),RRSe ) ) * RRSe ) + RRSe ) ) )", "obj1": 0.4721115537848606, "obj2": 0.3163913756722554}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( ( BR * ( Const * MRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_CPU ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( Min( CS ,MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MLU ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.25298804780876494, "obj2": 0.5960918382783498}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( CRS,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MRS ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( RRSe + Min( RMSe ,MUR ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.41434262948207173, "obj2": 0.3963222333135945}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ARS * MDR ) ),Min( ( AMS * MRS ) ,( PN / Const ) ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / RRSe ) * Min( ( DS * MUR ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5179282868525896, "obj2": 0.2821088016380848}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,Max( FirstVNF_RAM,( ACS / DDR ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( Max( PN,MDR ) / MDR ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.250996015936255, "obj2": 0.5968740937431171}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ( MDR / Max( DDR,CRS ) ) ) * ( BR - PN ) ) / ( ( ( MDR / Min( RRS ,RRS ) ) - ARS ) / ( ( MDR / ( Max( ARS,FirstVNF_RAM ) / ( Const / RRS ) ) ) - PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( DS ,RCSe ) ) ) ) ,( ( MUR - RMSe ) + MUC ) ) ) / ( ( CS * CS ) / ( RMSe + MLU ) ) ) - ( Min( ( ( ( Min( DS ,( MUM - DS ) ) + ( ( RMSe / RCSe ) - MLU ) ) * RRSe ) / RMSe ) ,RRSe ) + ( Min( MUC ,CS ) + DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.4967036740308677}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( FirstVNF_Mem * FirstVNF_CPU ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( ( MUC + Min( RCSe ,RMSe ) ) - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6255681489431157}, {"determining": "( ( Max( ( BR + RRS ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( RRS - MDR ) * MDR ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - ( DDR * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( MLU + ( ( ( ( DS + ( MUM * MUC ) ) / ( CS - RRSe ) ) * MUM ) - MUR ) ) - Min( RRSe ,MUM ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8625498007968128, "obj2": 0.05016772861037556}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - ( PN / MDR ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + ( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5432024078164499}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( Max( ( ( ( PN / MDR ) / ( FirstVNF_Mem_Server * ARS ) ) / FirstVNF_Mem ),MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( MLU / Max( ( RCSe + MUC ),RCSe ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( CS + DS ) + DS ) ) )", "obj1": 0.3565737051792829, "obj2": 0.4718206145964127}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( PN,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( Min( RCSe ,CS ) + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.898406374501992, "obj2": 0.03450706787091757}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( Max( RCSe,CS ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6693227091633466, "obj2": 0.17277531102658658}, {"determining": "( ( Max( ( BR + RRS ),PN ) * FirstVNF_CPU_Server ) * ( ( ( ( ACS + ( ( FirstVNF_RAM - MDR ) * MDR ) ) * ( ACS + MRS ) ) * PN ) - Max( MDR,( Const - Min( PN ,( AMS + ACS ) ) ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8605577689243028, "obj2": 0.05103551921540792}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( Max( ( ( ( PN - MDR ) / MDR ) + ACS ),( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( MDR + PN ) * AMS ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / Min( ( ( MUM * ( ( RMSe + RCSe ) * MUC ) ) * DS ) ,CS ) ) ,Min( ( DS * MUR ) ,Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.8426294820717132, "obj2": 0.058508785295960694}, {"determining": "( ( ( DDR + Const ) / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( CS,MLU ) ) ),CS ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7431375977918462}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem / ACS ) ) ) - ( ( ( ACS + AMS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + MRS ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( MLU + ( ( ( RCSe - MUR ) + CS ) / ( MUC * CS ) ) ) )", "obj1": 0.35258964143426297, "obj2": 0.47818960716307524}, {"determining": "( ( ( DDR + Const ) / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM - Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) ) / FirstVNF_CPU_Server ) * RRS ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + Max( ( CS / MUM ),MLU ) ) ),CS ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7506401301555279}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( AMS / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7334368549244308}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * PN ) - Min( Min( ARS ,ARS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) * ( ACS * ( ( CRS - PN ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MLU,Min( RCSe ,( CS - MLU ) ) ) ,RRSe ) * ( Min( Min( DS ,MUM ) ,Min( Max( MUM,( Min( CS ,RCSe ) * RMSe ) ) ,MLU ) ) * Min( Min( ( ( Max( ( RMSe * MUR ),( CS / RCSe ) ) * Min( ( DS / RRSe ) ,CS ) ) / CS ) ,( RRSe - ( RRSe + ( DS * ( RCSe / MUM ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.7270916334661355, "obj2": 0.1261436500963136}, {"determining": "( ( ( AMS + ACS ) * ( BR - PN ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( MUR ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.18127490039840638, "obj2": 0.6902148762329469}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * FirstVNF_Mem ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( MLU ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( MUM * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4900398406374502, "obj2": 0.31224112121235137}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - ( MUM / MUM ) ) + MUC ) ) ) / ( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7629482071713147, "obj2": 0.10588785243351255}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,RRS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ),( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_Mem ) ) / PN ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( RRS / FirstVNF_CPU_Server ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( Min( MUM ,MUR ) - CS ) ,RRSe ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS - RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6195219123505976, "obj2": 0.20402711296462317}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( ( ( PN - MDR ) / MDR ) + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + PN ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / Min( ( ( MUM * ( ( RMSe + RCSe ) * MUC ) ) * DS ) ,CS ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.8426294820717132, "obj2": 0.058508785295960694}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( RRS + ACS ) * AMS ) * PN ) - Min( Min( Min( MDR ,( CRS + FirstVNF_Mem_Server ) ) ,AMS ) ,Max( Max( FirstVNF_Mem,CRS ),( MRS / ( Min( MDR ,FirstVNF_CPU ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) / ( RMSe + Max( ( DS / CS ),CS ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - ( ( RMSe + MLU ) / ( CS / MUR ) ) )", "obj1": 0.7390438247011952, "obj2": 0.12052304781147147}, {"determining": "( ( DDR * BR ) - ( ( ( AMS + ACS ) / ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( FirstVNF_CPU / PN ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) / ( RRS * FirstVNF_RAM_Server ) ) / PN ) ) ) )", "choosing": "( ( ( DS / MLU ) * DS ) * ( ( CS / RRSe ) + Min( MUC ,Max( RRSe,( Max( CS,Min( Min( MLU ,MUC ) ,( MUR * MUM ) ) ) * ( RMSe * CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.5689791901288541}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( MDR - CRS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5258964143426295, "obj2": 0.2791845161608162}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.45617529880478086, "obj2": 0.3372747401119957}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,FirstVNF_Mem ) ) - Min( PN ,( AMS + ACS ) ) ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) ,CS ) + DS ) ) )", "obj1": 0.9063745019920318, "obj2": 0.03150923227733485}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( ARS ,AMS ) )", "choosing": "( ( MUR + ( Max( ( ( ( MUM + Max( MUM,RCSe ) ) / ( ( MUM / CS ) * ( MUC + MUC ) ) ) / ( Max( MUM,Max( MUC,RRSe ) ) + MUR ) ),RRSe ) / MLU ) ) * ( Max( MUC,( RCSe - ( RMSe / ( ( Max( RMSe,RRSe ) * MUM ) - CS ) ) ) ) * Min( Min( ( RRSe + ( Min( DS ,( MUM * MLU ) ) * ( Max( CS,RMSe ) - RMSe ) ) ) ,DS ) ,( MUC / CS ) ) ) )", "obj1": 0.950199203187251, "obj2": 0.01994596772140875}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * ( AMS - DDR ) ) - Min( Min( Max( FirstVNF_RAM,( Min( ( PN * MRS ) ,CRS ) / Max( Const,( ARS * MDR ) ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * ( MDR - CRS ) )", "choosing": "( ( RCSe * RMSe ) - ( CS + ( Min( ( MLU / MUM ) ,DS ) + DS ) ) )", "obj1": 0.5856573705179283, "obj2": 0.235611340716733}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),FirstVNF_Mem ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.6613545816733067, "obj2": 0.17870019012353053}, {"determining": "( ( Max( Max( CRS,Const ),RRS ) * ( ( BR + Max( Max( RRS,BR ),( AMS / ( Min( CRS ,FirstVNF_RAM_Server ) + CRS ) ) ) ) * PN ) ) - ( PN + ( RRS + PN ) ) )", "choosing": "( ( ( ( MLU - MUC ) + Min( Min( MUR ,MLU ) ,MLU ) ) / Max( CS,RMSe ) ) * ( MUR / ( RMSe / Max( RRSe,Min( MUC ,( ( MLU + RRSe ) - ( DS + MUM ) ) ) ) ) ) )", "obj1": 0.18326693227091634, "obj2": 0.6865990221466122}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * MUR ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.6055776892430279, "obj2": 0.21397899214374}, {"determining": "( ( ACS / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + ( Min( RRS ,FirstVNF_Mem ) + ( AMS * ( FirstVNF_Mem_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( DS ,CS ) + ( MUM - Min( RCSe ,( MUC - ( ( MUC * MUC ) * ( CS * MLU ) ) ) ) ) ) + CS ) - Min( ( Min( Max( ( ( MLU + ( RMSe * RRSe ) ) + RCSe ),MUC ) ,Min( MUM ,( Max( MUC,RCSe ) * Max( Min( MUR ,MUR ),Min( RCSe ,RCSe ) ) ) ) ) * ( DS * MUR ) ) ,( ( CS / MUR ) + ( RMSe * MLU ) ) ) )", "obj1": 0.1892430278884462, "obj2": 0.671587278466845}, {"determining": "( ( Max( ( MRS / PN ),Min( RRS ,BR ) ) / ( ( AMS / Max( FirstVNF_Mem,Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / CRS ) ) / ( ( MDR / ( ( Min( PN ,MDR ) / Min( FirstVNF_CPU ,RRS ) ) / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( ( MLU - DS ) + ( Min( ( ( MUM * ( MUC * ( RRSe / DS ) ) ) * DS ) ,CS ) + DS ) ) - Min( ( ( MLU * RMSe ) * ( RMSe * MUM ) ) ,( ( MLU + MUR ) + ( MLU / MUR ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5059230083735272}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.21314741035856574, "obj2": 0.6382551302092184}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),ACS ) - Max( ( Max( FirstVNF_Mem,MRS ) / Max( ( ( ( AMS + ACS ) * ( BR - PN ) ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,Max( CS,( MUC + Min( RCSe ,MLU ) ) ) ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( MUR / Max( MUC,MLU ) ) - ( ( RRSe * RMSe ) * MUR ) ) / RMSe ),( MLU * RMSe ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.44621513944223107, "obj2": 0.356244130583308}, {"determining": "( ( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( FirstVNF_CPU * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( RMSe ,CS ) + DS ) ) )", "obj1": 0.6593625498007968, "obj2": 0.18708622124874563}, {"determining": "( Max( FirstVNF_RAM,( ( Max( Min( DDR ,( FirstVNF_RAM_Server + CRS ) ),( FirstVNF_CPU_Server / ( CRS + Max( Const,FirstVNF_Mem_Server ) ) ) ) * ACS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( FirstVNF_RAM - PN ) ) ) / MRS ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / MRS ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.660869058388111}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),FirstVNF_Mem ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.18763520746929557}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( ( Max( RCSe,CS ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Max( Min( RMSe ,Max( DS,RRSe ) ),RMSe ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.48639219953446977}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( ( RRS + BR ),( Const / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( FirstVNF_RAM_Server - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( FirstVNF_Mem / ( ( PN - MDR ) / MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( ( MUC + ( MLU - ( RRSe - Max( MUM,( MUC * CS ) ) ) ) ) - ( CS + ( Min( RCSe ,CS ) + DS ) ) )", "obj1": 0.34063745019920316, "obj2": 0.48852601669833656}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( ( ( FirstVNF_RAM - MDR ) * MDR ) ,RRS ) ) / ( Max( MDR,( Const - ( PN / MDR ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( Min( ( ( CS + MUR ) / ( RMSe + MLU ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( Min( RCSe ,CS ) + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.31673306772908366, "obj2": 0.5136796242773071}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( FirstVNF_RAM_Server ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / Const ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( RCSe * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * MUR ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.4960159362549801, "obj2": 0.30015207189792087}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( FirstVNF_RAM_Server ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( ( Max( RCSe,Max( MUR,MUC ) ) * MUR ) - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.547808764940239, "obj2": 0.26778749244990463}, {"determining": "( ( Max( MRS,( Min( ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,PN ) - ( ( CRS - CRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - FirstVNF_RAM )", "choosing": "( ( ( Max( Max( RRSe,MUM ),RCSe ) * Min( ( ( ( Max( RRSe,MUM ) * MUR ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / ( MUR / MUR ) ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.9581673306772909, "obj2": 0.014777963980860587}, {"determining": "( Max( FirstVNF_RAM,( ( Min( FirstVNF_RAM ,AMS ) + RRS ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server - ( Max( ( MRS * Min( PN ,MRS ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + ( CRS - PN ) ) ) / MRS ) ) )", "choosing": "( Min( ( Max( ( MUR + MUM ),Min( ( ( ( RRSe * RCSe ) + CS ) * MUM ) ,( MUC / ( MUR + Min( RMSe ,DS ) ) ) ) ) * Min( Max( ( RMSe * DS ),MUM ) ,Max( ( Min( ( DS + RMSe ) ,DS ) - Max( Max( CS,RCSe ),Min( RRSe ,MUM ) ) ),Min( RMSe ,( Max( RCSe,MUM ) + RMSe ) ) ) ) ) ,( RMSe + CS ) ) - ( MUC - ( ( MLU + RCSe ) / ( CS + RMSe ) ) ) )", "obj1": 0.4442231075697211, "obj2": 0.3576095902920672}, {"determining": "( ( FirstVNF_RAM * Min( Min( Max( FirstVNF_RAM_Server,MDR ) ,Max( ARS,RRS ) ) ,MRS ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),( ( MDR * MRS ) + CRS ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( Max( MUC,( MUR - RCSe ) ) / Min( DS ,MUM ) ) ,Min( Max( Max( RRSe,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / RRSe ) * Min( ( MUR * DS ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.18725099601593626, "obj2": 0.6723602110173915}, {"determining": "( Max( ( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,MDR ) ),ACS ) - Max( ( PN / Max( ( Min( ( FirstVNF_Mem * ARS ) ,BR ) + ( MDR * ACS ) ),ACS ) ),AMS ) )", "choosing": "Min( ( ( ( Min( MUM ,CS ) + Max( Min( DS ,Max( DS,RRSe ) ),( ( RMSe + MLU ) / MLU ) ) ) / MUC ) / Max( ( ( MUC - ( Max( RRSe,RMSe ) * MUR ) ) / RMSe ),( RMSe * MLU ) ) ) ,( Min( ( CS / MUM ) ,( RRSe - ( Max( DS,RRSe ) + Min( DS ,( Max( RRSe,RCSe ) / MUM ) ) ) ) ) - CS ) )", "obj1": 0.450199203187251, "obj2": 0.3412344081719792}, {"determining": "( ( Max( Min( BR ,RRS ),( FirstVNF_RAM_Server / PN ) ) / ( Max( MDR,( Const - Min( PN ,Min( MDR ,MRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * ( ( DS + Min( RRSe ,( MUM / RRSe ) ) ) - Max( RRSe,( RCSe + ( RRSe / DS ) ) ) ) ) * Min( ( ( RMSe - MUR ) + MUC ) ,Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + CS ) + DS ) ) )", "obj1": 0.2868525896414343, "obj2": 0.53933120912631}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( ARS * MDR ) ),Min( ( AMS * MRS ) ,( PN / Const ) ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),( ( RRS / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Min( RCSe ,RMSe ) ,( ( ( RCSe + RRSe ) / RRSe ) * Min( ( DS * MUR ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5378486055776892, "obj2": 0.26850131773992986}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( ARS ,AMS ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.9282868525896414, "obj2": 0.024504250509119967}, {"determining": "( Min( FirstVNF_CPU ,( ( ( FirstVNF_RAM_Server - ARS ) / FirstVNF_CPU_Server ) * RRS ) ) + ( ( DDR + Min( ( CRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - ( Const + Const ) ) - FirstVNF_Mem_Server ) + CRS ) ) ) / ACS ) )", "choosing": "( Min( Min( RMSe ,( ( ( MUC + ( MUM + ( RRSe * RRSe ) ) ) * Min( MUM ,( ( MUR + CS ) - ( CS * CS ) ) ) ) + ( MUC * Max( CS,RCSe ) ) ) ) ,Min( Max( Min( Min( ( RRSe + DS ) ,Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,DS ) ),MUM ) ,Max( Min( Max( ( RMSe + RRSe ),MLU ) ,( CS - CS ) ),MUR ) ) ) * ( MUC / CS ) )", "obj1": 0.10956175298804781, "obj2": 0.8022352041910734}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( Max( DDR,Min( MRS ,FirstVNF_RAM ) ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,CS ) * Min( MUR ,Min( RCSe ,CS ) ) ) ) ,( ( RMSe - MUR ) + RRSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7808764940239044, "obj2": 0.083038236146895}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - ( PN / MDR ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + ( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.300796812749004, "obj2": 0.5298121376945635}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) - ( ( MRS * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS * CS ) * Min( ( ( Min( ( MLU - DS ) ,Min( DS ,DS ) ) - ( MLU + RRSe ) ) + ( RMSe * Max( RCSe,RCSe ) ) ) ,( MUC + RCSe ) ) ) ,( ( MUM + MLU ) + Min( Min( RMSe ,( DS - RRSe ) ) ,RMSe ) ) ) - ( CS + ( Min( DS ,( ( RCSe - DS ) * MLU ) ) + DS ) ) )", "obj1": 0.6772908366533864, "obj2": 0.16658220885861055}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,( Const * MRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,CS ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.30876494023904383, "obj2": 0.52735706720086}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server * Min( ARS ,AMS ) ) ) + ( Min( Max( FirstVNF_RAM,Max( Max( ( BR * ( Const * MRS ) ),FirstVNF_Mem ),( FirstVNF_CPU - FirstVNF_CPU ) ) ) ,Min( AMS ,( MDR + ( BR / ARS ) ) ) ) + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.660869058388111}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( CRS * MRS ) ,CRS ) ) ) ,MDR ) ,Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( ( FirstVNF_Mem / Const ) / FirstVNF_RAM_Server ) ) ,PN ) ) ) * Min( Min( Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( MDR * MRS ) ,CRS ) ) ) ,MDR ) ,( FirstVNF_Mem / FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( ( RCSe + RRSe ) / RCSe ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( Min( RRSe ,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * MUR ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( MLU ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( RRSe / MLU ) ) ) ) ,( ( RCSe / MUR ) / ( RMSe + MLU ) ) ) + DS ) ) )", "obj1": 0.5517928286852589, "obj2": 0.26028738839773347}, {"determining": "( ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( CS ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6159276816461402}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( MDR,( Const - Min( PN ,PN ) ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( ( FirstVNF_Mem * FirstVNF_CPU ) / ( ( ( ( ( PN / MDR ) / ( BR + DDR ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Min( RCSe ,Min( RCSe ,MUM ) ) ) ) ,( ( ( MUC + Min( RCSe ,RMSe ) ) - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( Min( ( Min( RCSe ,DS ) + DS ) ,CS ) + DS ) + DS ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6255681489431157}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( AMS / FirstVNF_Mem ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,ACS ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( Max( MUC,( MUR - RCSe ) ) / Min( DS ,MUM ) ) ,Min( Max( Max( RRSe,RCSe ),RRSe ) ,( ( ( RCSe + RRSe ) / RRSe ) * Min( ( MUR * DS ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.5876494023904383, "obj2": 0.2265370484276258}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( Max( FirstVNF_RAM,Max( Min( ( MDR * MRS ) ,CRS ),Min( ( PN * MRS ) ,CRS ) ) ) ,MDR ) ,Max( Max( FirstVNF_Mem,CRS ),( ARS / ( Min( MDR ,FirstVNF_RAM_Server ) / ( Max( MDR,RRS ) + CRS ) ) ) ) ) ) * Min( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,MDR ) ,( Max( ( Min( Min( AMS ,MDR ) ,MRS ) / FirstVNF_CPU ),FirstVNF_CPU ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) + RRS ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( ( RRSe / Min( DS ,MUM ) ) ,Min( Max( MLU,RRSe ) ,( ( ( RCSe + RRSe ) / MUR ) * Min( ( DS * RMSe ) ,( MUM * RCSe ) ) ) ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( ( ( ( ( CS + DS ) - RMSe ) * MUM ) * MUR ) - DS ) ) )", "obj1": 0.7948207171314741, "obj2": 0.07753863347011423}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / MDR ) / Max( ( FirstVNF_Mem_Server + PN ),MDR ) ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * RMSe ) * Min( Min( MUR ,( Max( MUC,RCSe ) * Max( RCSe,Min( RCSe ,RCSe ) ) ) ) ,( MUC + RCSe ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4326259496124449}, {"determining": "( ( ( ( ( ACS + RRS ) * AMS ) * PN ) - Min( Min( MDR ,Max( FirstVNF_RAM,Max( Max( Const,( ARS * MDR ) ),Min( ( PN * MRS ) ,CRS ) ) ) ) ,Max( Max( ( ( ( FirstVNF_RAM - ARS ) / FirstVNF_CPU_Server ) * RRS ),( ( FirstVNF_Mem / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ),PN ) ) ) * ( FirstVNF_RAM * CRS ) )", "choosing": "( ( ( Max( RRSe,RMSe ) * MUR ) / ( RRSe * MUR ) ) * ( CS * Min( Min( RRSe ,( RRSe - ( RRSe + Min( DS ,( RCSe / MUM ) ) ) ) ) ,Max( ( DS + ( ( CS / RRSe ) + RCSe ) ),CS ) ) ) )", "obj1": 0.749003984063745, "obj2": 0.10852121897585701}, {"determining": "( Min( BR ,ACS ) + ( ( ( ( RRS + ACS ) * AMS ) * PN ) - Min( Min( Min( MDR ,( CRS + FirstVNF_Mem_Server ) ) ,AMS ) ,Max( Const,( FirstVNF_CPU * MDR ) ) ) ) )", "choosing": "( Min( ( ( ( ( ( MUM - RMSe ) * MUM ) * CS ) - DS ) / ( RMSe + Max( ( DS / CS ),CS ) ) ) ,( ( DS * MUR ) * Min( Min( MUR ,CS ) ,( MUC + RCSe ) ) ) ) - Min( Min( MUR ,( Max( RCSe,CS ) * Min( ( RRSe * MLU ) ,Min( CS ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) )", "obj1": 0.7430278884462151, "obj2": 0.11617416137762983}, {"determining": "( ( Max( MRS,( Min( ( MDR + Const ) ,PN ) - ( ( Max( FirstVNF_Mem_Server,BR ) * ( BR - PN ) ) / ( ARS * ( FirstVNF_CPU * MDR ) ) ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Min( ARS ,AMS ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * Min( ( ( Max( RRSe,MUM ) - CS ) - ( MUR + MUR ) ) ,RRSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,MUM ) ) ) )", "obj1": 0.9223107569721115, "obj2": 0.027888708801898632}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( Max( MUR,Min( DS ,( Min( Min( DS ,MLU ) ,MLU ) - MUC ) ) ) / ( ( RMSe - RRSe ) + ( ( RRSe + CS ) - Max( RCSe,MLU ) ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7191235059760956, "obj2": 0.13228269708132723}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) / Min( Min( MDR ,ACS ) ,AMS ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - RMSe ) - CS ) ,RRSe ) * Max( Min( ( ( RMSe + Min( DS ,MUM ) ) / Max( MUC,DS ) ) ,MUM ),RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.7131474103585658, "obj2": 0.13927290917049245}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),AMS ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( DS * MUR ) * Min( Min( MUR ,( Max( RCSe,CS ) * Min( MUR ,Min( RCSe ,MUM ) ) ) ) ,( ( RMSe - MUR ) + MUC ) ) ) ,( ( CS / MUR ) / ( RMSe + MLU ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.7091633466135459, "obj2": 0.14022496460093298}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),Min( BR ,RRS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - ( FirstVNF_Mem + ACS ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( ACS + PN ) * AMS ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( Min( ( ( CS + MUR ) / Min( ( ( MUM * ( ( RMSe + MLU ) * MUC ) ) * DS ) ,CS ) ) ,( ( DS * MUR ) * Min( Min( RCSe ,MUM ) ,( MUC + RCSe ) ) ) ) - ( CS + ( Min( DS ,CS ) + DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5115717566023448}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / PN ),( Min( Min( MDR ,ACS ) ,AMS ) / ( Max( ( ( FirstVNF_Mem_Server / ACS ) / AMS ),MDR ) / ( ARS / ( FirstVNF_Mem / ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) / ( Min( Max( Const,Max( Max( ARS,Const ),FirstVNF_Mem ) ) ,( AMS / FirstVNF_Mem ) ) - ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( ( ( AMS + ACS ) * ( BR - PN ) ) / ( Min( ARS ,AMS ) / ( ( ( ( ( PN / MDR ) / ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / FirstVNF_Mem ) / MDR ) / PN ) ) ) )", "choosing": "( ( ( Min( ( ( DS - CS ) - CS ) ,Min( ( Max( RRSe,RCSe ) * Max( ( CS / RRSe ),( CS * MUR ) ) ) ,MUR ) ) * Max( RCSe,RMSe ) ) * DS ) * ( ( CS / RRSe ) + Min( DS ,Max( RRSe,RMSe ) ) ) )", "obj1": 0.647410358565737, "obj2": 0.18763520746929557}]}